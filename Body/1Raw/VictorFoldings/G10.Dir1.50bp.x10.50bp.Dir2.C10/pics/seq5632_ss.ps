%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCACACUACxxxxxxxxxxACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCUGAUCAAAUAUCACUCUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[117.42166138 312.84228516]
[117.11368561 297.84545898]
[116.80570984 282.84863281]
[116.49772644 267.85177612]
[116.18975067 252.85494995]
[115.88177490 237.85810852]
[115.57379913 222.86126709]
[115.26581573 207.86444092]
[114.95783997 192.86759949]
[112.35311890 178.09547424]
[107.51330566 163.89772034]
[102.67348480 149.69998169]
[97.83367157 135.50222778]
[92.99385071 121.30446625]
[85.37782288 99.99500275]
[76.31358337 111.95769501]
[66.28010559 123.11994934]
[55.34777832 133.40347290]
[43.59328079 142.73611450]
[31.09906960 151.05244446]
[17.95277977 158.29409790]
[4.24662638 164.41029358]
[-9.92325211 169.35813904]
[-24.45746040 173.10290527]
[-39.25405121 175.61834717]
[-54.20923996 176.88679504]
[-69.21811676 176.89938354]
[-84.17540741 175.65599060]
[-98.97619629 173.16537476]
[-113.51666260 169.44496155]
[-127.69481659 164.52088928]
[-141.41119385 158.42767334]
[-154.56961060 151.20806885]
[-167.07774353 142.91270447]
[-178.84786987 133.59977722]
[-189.79742432 123.33459473]
[-199.84959412 112.18917847]
[-208.93388367 100.24169922]
[-216.98655701 87.57595825]
[-223.95115662 74.28080750]
[-229.77879333 60.44949722]
[-234.42861938 46.17905045]
[-237.86799622 31.56955910]
[-240.07281494 16.72350502]
[-241.02761841 1.74502373]
[-240.72567749 -13.26082134]
[-239.16914368 -28.18877220]
[-236.36891174 -42.93412018]
[-232.34463501 -57.39343262]
[-227.12452698 -71.46528625]
[-220.74523926 -85.05097961]
[-213.25148010 -98.05521393]
[-204.69581604 -110.38677979]
[-195.13829041 -121.95915985]
[-184.64591980 -132.69120789]
[-173.29231262 -142.50761414]
[-161.15708923 -151.33955383]
[-148.32539368 -159.12504578]
[-134.88720703 -165.80950928]
[-120.93682098 -171.34603882]
[-106.57206726 -175.69580078]
[-91.89371490 -178.82829285]
[-77.00472260 -180.72152710]
[-62.00952148 -181.36224365]
[-47.01329803 -180.74592590]
[-32.12124252 -178.87690735]
[-17.43781090 -175.76831055]
[-3.06600213 -171.44190979]
[10.89337635 -165.92808533]
[24.34240913 -159.26550293]
[37.18675613 -151.50088501]
[49.33632660 -142.68870544]
[60.70589447 -132.89077759]
[71.21570587 -122.17581177]
[80.79205322 -110.61898804]
[89.36775208 -98.30136108]
[96.88265991 -85.30934143]
[103.28404999 -71.73403931]
[108.52703857 -57.67069626]
[112.57482910 -43.21794891]
[115.39904785 -28.47717667]
[116.97986603 -13.55177689]
[117.30621338 1.45355701]
[116.37578583 16.43357277]
[114.19512177 31.28319359]
[110.77951050 45.89825821]
[106.15290833 60.17625427]
[100.34777069 74.01702118]
[93.40482330 87.32348633]
[108.32584381 88.86077881]
[122.36781311 83.58603668]
[136.40979004 78.31129456]
[150.45176697 73.03655243]
[164.49374390 67.76181793]
[178.53572083 62.48707199]
[192.57769775 57.21232986]
[180.41056824 48.43959808]
[179.47314453 33.46891785]
[190.45088196 23.24691582]
[205.31680298 25.24795914]
[213.20089722 38.00888062]
[208.33871460 52.19839096]
[222.84733582 48.39053345]
[237.35595703 44.58267593]
[242.86538696 30.07661247]
[255.86746216 21.60751343]
[271.36264038 22.43191910]
[283.39266968 32.23282623]
[287.33178711 47.24158859]
[281.66531372 61.68703079]
[268.57214355 70.01457977]
[253.08683777 69.02213287]
[241.16381836 59.09130096]
[226.65519714 62.89915848]
[212.14657593 66.70701599]
[197.85244751 71.25431061]
[183.81047058 76.52905273]
[169.76849365 81.80378723]
[155.72651672 87.07852936]
[141.68453979 92.35327148]
[127.64255524 97.62801361]
[113.60057831 102.90275574]
[107.19160461 116.46465302]
[112.03142548 130.66239929]
[116.87123871 144.86015320]
[121.71105194 159.05790710]
[126.55087280 173.25566101]
[130.18952942 158.70367432]
[138.75744629 146.39146423]
[151.13835144 137.92309570]
[165.71919250 134.40188599]
[180.60031128 136.28660583]
[193.84292603 143.33168030]
[203.72172546 154.61926270]
[208.94963074 168.67874146]
[208.84553528 183.67837524]
[203.42298889 197.66395569]
[193.38850403 208.81333923]
[180.04937744 215.67395020]
[165.14353943 217.35194397]
[150.61296082 213.62870789]
[138.35078430 204.98933411]
[129.95468140 192.55961609]
[130.26266479 207.55645752]
[130.57063293 222.55329895]
[130.87861633 237.55012512]
[131.18658447 252.54696655]
[131.49456787 267.54382324]
[131.80255127 282.54064941]
[132.11051941 297.53747559]
[132.41850281 312.53433228]
[135.00427246 331.74273682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 89]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[102 115]
[103 114]
[104 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
