%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACCAUGCACACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACxxxxxxxxxxCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCACAGGACUAUUCCUAGCCAUGCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-44.68762970 145.72798157]
[-59.19625473 149.53582764]
[-73.70487976 153.34368896]
[-88.21350861 157.15155029]
[-102.72212982 160.95941162]
[-117.23075867 164.76727295]
[-131.10363770 170.47193909]
[-144.09402466 177.97193909]
[-157.08439636 185.47193909]
[-170.07478333 192.97193909]
[-183.06515503 200.47193909]
[-178.40724182 214.78965759]
[-176.82830811 229.76300049]
[-178.39741516 244.73736572]
[-183.04595947 259.05813599]
[-190.57070923 272.09930420]
[-200.64273071 283.29071045]
[-212.82171631 292.14318848]
[-226.57525635 298.26968384]
[-241.30209351 301.40237427]
[-256.35845947 301.40435791]
[-271.08612061 298.27551270]
[-284.84124756 292.15261841]
[-297.02255249 283.30337524]
[-307.09750366 272.11459351]
[-314.62570190 259.07540894]
[-319.27798462 244.75582886]
[-320.85101318 229.78187561]
[-319.27603149 214.80813599]
[-314.62185669 200.48918152]
[-307.09197998 187.45098877]
[-297.01553345 176.26351929]
[-284.83306885 167.41586304]
[-271.07711792 161.29478455]
[-256.34906006 158.16786194]
[-241.29270935 158.17181396]
[-226.56626892 161.30645752]
[-212.81353760 167.43475342]
[-200.63571167 176.28880310]
[-190.56515503 187.48155212]
[-177.57478333 179.98155212]
[-164.58439636 172.48155212]
[-151.59402466 164.98155212]
[-138.60363770 157.48155212]
[-153.55897522 156.32484436]
[-166.80368042 149.28370667]
[-176.12718201 137.53327942]
[-179.97337341 123.03477478]
[-177.70031738 108.20800018]
[-169.68737793 95.52758789]
[-157.27194214 87.10991669]
[-142.52618408 84.35993195]
[-127.91118622 87.73659515]
[-115.86623383 96.67633820]
[-108.40164948 109.68710327]
[-106.76329041 124.59735870]
[-111.22460175 138.91854858]
[-121.03862000 150.25863647]
[-106.52999115 146.45079041]
[-92.02136230 142.64292908]
[-77.51274109 138.83506775]
[-63.00411606 135.02720642]
[-48.49549103 131.21934509]
[-50.66333771 118.05870819]
[-51.66711807 104.75853729]
[-51.49907303 91.42160034]
[-50.16050339 78.15093994]
[-47.66175079 65.04909515]
[-44.02211761 52.21729279]
[-39.26973343 39.75466919]
[-33.44130707 27.75752258]
[-26.58187675 16.31854057]
[-18.74443626 5.52610445]
[-9.98954296 -4.53639793]
[-0.38483894 -13.79122162]
[9.99546719 -22.16686249]
[21.07117462 -29.59860611]
[32.75671005 -36.02903366]
[44.96178436 -41.40846252]
[57.59210205 -45.69532776]
[70.55007172 -48.85650635]
[83.73558807 -50.86758041]
[97.04676056 -51.71300507]
[110.38075256 -51.38625336]
[123.63453674 -49.88984680]
[136.70571899 -47.23535156]
[149.49330139 -43.44326782]
[161.89848328 -38.54290390]
[173.82542419 -32.57211685]
[185.18196106 -25.57703781]
[195.88035583 -17.61171341]
[205.83795166 -8.73768902]
[216.81875610 -18.95639610]
[227.79956055 -29.17510414]
[232.09040833 -45.00294876]
[248.01025391 -48.93875504]
[259.18212891 -36.93370056]
[254.11335754 -21.33755875]
[238.01826477 -18.19430161]
[227.03746033 -7.97559404]
[216.05667114 2.24311328]
[230.15472412 21.99162483]
[240.92474365 43.73479462]
[248.09135437 66.91665649]
[251.47129822 90.94445038]
[266.47052002 90.79045105]
[281.46972656 90.63645172]
[296.46893311 90.48246002]
[302.90313721 76.64179993]
[314.71084595 66.97014618]
[329.54760742 63.38779449]
[344.46759033 66.60603333]
[356.50839233 75.98587799]
[363.27932739 89.66494751]
[363.43603516 104.92726135]
[356.94738770 118.74246979]
[345.10168457 128.36755371]
[330.25091553 131.89144897]
[315.34375000 128.61448669]
[303.33996582 119.18730164]
[296.62292480 105.48166656]
[281.62371826 105.63566589]
[266.62451172 105.78965759]
[251.62530518 105.94365692]
[250.41389465 120.03039551]
[247.89663696 133.94323730]
[244.09535217 147.56138611]
[239.04307556 160.76661682]
[232.78363037 173.44429016]
[225.37139893 185.48432922]
[216.87071228 196.78221130]
[207.35536194 207.23983765]
[196.90798950 216.76643372]
[185.61927795 225.27928162]
[173.58721924 232.70448303]
[160.91630554 238.97755432]
[147.71652222 244.04406738]
[134.10246277 247.86000061]
[120.19234467 250.39224243]
[106.10691833 251.61880493]
[91.96846771 251.52905273]
[77.89974976 250.12373352]
[64.02290344 247.41508484]
[50.45839691 243.42658997]
[37.32400513 238.19290161]
[24.73375702 231.75944519]
[12.79695606 224.18206787]
[1.61723590 215.52658081]
[-8.70834255 205.86810303]
[-18.09013557 195.29049683]
[-26.44668961 183.88558960]
[-33.70545578 171.75241089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[92 101]
[93 100]
[94 99]
[105 124]
[106 123]
[107 122]
[108 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
