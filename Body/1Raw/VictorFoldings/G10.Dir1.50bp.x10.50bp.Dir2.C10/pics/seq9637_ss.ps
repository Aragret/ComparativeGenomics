%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAACCCUCAACACCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUAGUCUUUxxxxxxxxxxAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACAUAAAACCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.68883514 126.01071930]
[100.43479919 111.03269196]
[90.68714905 122.43370819]
[80.93949890 133.83473206]
[71.19184875 145.23574829]
[61.44419479 156.63677979]
[58.35711670 172.15386963]
[44.20550919 176.79943848]
[34.45785522 188.20045471]
[24.71020317 199.60147095]
[31.29734421 213.33207703]
[31.72376633 228.55502319]
[25.91559219 242.63284302]
[14.87912083 253.12646484]
[0.52648818 258.21783447]
[-14.65562439 257.02478027]
[-28.03682518 249.75405884]
[-37.29874039 237.66535950]
[-40.83668518 222.85310364]
[-38.03769302 207.88362122]
[-29.38670349 195.35044861]
[-16.38255310 187.42504883]
[-1.27828872 185.48054504]
[13.30918217 189.85382080]
[23.05683517 178.45280457]
[32.80448532 167.05178833]
[35.19434738 152.35015869]
[50.04317474 146.88911438]
[59.79082489 135.48809814]
[69.53847504 124.08708191]
[79.28613281 112.68605804]
[89.03378296 101.28503418]
[74.07633972 102.41414642]
[64.49316406 90.87452698]
[68.35028839 76.37892151]
[82.40122223 71.12808228]
[94.81951904 79.54164124]
[92.02719879 64.80383301]
[89.23487091 50.06602859]
[86.44255066 35.32822418]
[76.21472931 27.40069771]
[74.22069550 15.02157021]
[80.99435425 4.95058060]
[78.50923920 -9.84212685]
[76.02411652 -24.63483429]
[73.53900146 -39.42753983]
[71.05387878 -54.22024918]
[68.56876373 -69.01295471]
[66.08364105 -83.80566406]
[63.09475708 -87.15649414]
[61.52701950 -90.91325378]
[61.32980347 -94.56605530]
[62.28792572 -97.67668152]
[64.06065369 -99.92718506]
[62.81377792 -114.87527466]
[61.56690216 -129.82336426]
[46.59027481 -131.19148254]
[32.07879639 -135.13966370]
[18.47345924 -141.54792786]
[6.18770933 -150.22154236]
[-4.40510225 -160.89691162]
[-12.98307133 -173.24961853]
[-19.28552246 -186.90429688]
[-23.12093353 -201.44599915]
[-24.37274742 -216.43278503]
[-23.00292587 -231.40925598]
[-19.05309486 -245.92028809]
[-12.64328671 -259.52490234]
[-3.96828580 -271.80966187]
[6.70828295 -282.40127563]
[19.06196976 -290.97784424]
[32.71736145 -297.27874756]
[47.25948715 -301.11248779]
[62.24642563 -302.36260986]
[77.22274017 -300.99108887]
[91.73332214 -297.03961182]
[105.33721161 -290.62826538]
[117.62099457 -281.95187378]
[128.21138000 -271.27410889]
[136.78654480 -258.91943359]
[143.08590698 -245.26333618]
[146.91801453 -230.72077942]
[148.16642761 -215.73370361]
[146.79321289 -200.75753784]
[142.84008789 -186.24740601]
[136.42720032 -172.64424133]
[127.74940491 -160.36145020]
[117.07043457 -149.77226257]
[104.71480560 -141.19850159]
[91.05798340 -134.90069580]
[76.51499176 -131.07023621]
[77.76186371 -116.12214661]
[79.00873566 -101.17406464]
[80.87635040 -86.29077911]
[83.36147308 -71.49807739]
[85.84658813 -56.70536804]
[88.33170319 -41.91265869]
[90.81682587 -27.11995316]
[93.30194092 -12.32724476]
[95.78706360 2.46546221]
[107.67494965 15.33705997]
[101.18035126 32.53590012]
[103.97267914 47.27370453]
[106.76499939 62.01151276]
[109.55732727 76.74931335]
[116.35573578 63.37839127]
[124.76483917 50.95716095]
[134.65396118 39.67863083]
[145.86944580 29.71805954]
[158.23699951 21.23022270]
[171.56446838 14.34701252]
[185.64476013 9.17538452]
[200.25904846 5.79569960]
[215.18028259 4.26047468]
[230.17658997 4.59356594]
[245.01493835 6.78979683]
[259.46475220 10.81504059]
[273.30151367 16.60675049]
[286.31021118 24.07492828]
[298.28872681 33.10352707]
[309.05087280 43.55225754]
[318.42947388 55.25875092]
[326.27874756 68.04110718]
[332.47677612 81.70070648]
[336.92721558 96.02528381]
[339.56091309 110.79225922]
[340.33697510 125.77217102]
[339.24331665 140.73225403]
[336.29690552 155.44003296]
[331.54357910 169.66696167]
[325.05715942 183.19200134]
[316.93844604 195.80494690]
[307.31362915 207.30984497]
[296.33221436 217.52790833]
[284.16488647 226.30035400]
[271.00067139 233.49085999]
[257.04412842 238.98771667]
[242.51217651 242.70550537]
[227.63056946 244.58644104]
[212.63056946 244.60131836]
[197.74526978 242.74987793]
[183.20596313 239.06091309]
[169.23857117 233.59173584]
[156.06013489 226.42733765]
[143.87541199 217.67903137]
[132.87377930 207.48275757]
[123.22615051 195.99697876]
[115.08245850 183.40013123]
[108.56924438 169.88800049]
[103.78771210 155.67050171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[8 26]
[9 25]
[10 24]
[37 105]
[38 104]
[39 103]
[40 102]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[54 93]
[55 92]
[56 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
