%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCUUCUCCUCACUCUCUCAAUCUUAUCCAUCAUAGCAGGCAGUUGAGGUGGAUUAAACCxxxxxxxxxxACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.86206055 254.74438477]
[101.86206055 239.74438477]
[101.86206055 224.74438477]
[101.86206055 209.74438477]
[101.86206055 194.74438477]
[101.86206055 179.74438477]
[101.86206055 164.74438477]
[101.86206055 149.74438477]
[101.86206055 134.74438477]
[101.86206055 119.74437714]
[89.87522125 110.72685242]
[75.46300507 114.88473511]
[61.05079269 119.04262543]
[46.63857651 123.20051575]
[35.52389145 134.45993042]
[21.15062523 130.55372620]
[6.73840952 134.71160889]
[7.71085787 149.74052429]
[5.42935038 164.62705994]
[0.00059719 178.67492676]
[-8.32148933 191.22709656]
[-19.14767075 201.69647217]
[-31.97158623 209.59339905]
[-46.19343567 214.54849243]
[-61.14804077 216.33001709]
[-76.13594818 214.85464478]
[-90.45614624 210.19137573]
[-103.43885040 202.55831909]
[-114.47683716 192.31250000]
[-123.05383301 179.93312073]
[-128.76869202 165.99917603]
[-131.35411072 151.16241455]
[-130.68916321 136.11674500]
[-126.80494690 121.56591034]
[-119.88314819 108.19046021]
[-110.24749756 96.61598969]
[-98.34867859 87.38386536]
[-84.74321747 80.92588806]
[-70.06746674 77.54409790]
[-55.00784302 77.39668274]
[-40.26870346 80.49053192]
[-26.53943253 86.68094635]
[-14.46216774 95.67837524]
[-4.60178709 107.06200409]
[2.58052182 120.29939270]
[16.99273872 116.14150238]
[27.07656288 105.17948914]
[42.48069000 108.78829956]
[56.89290619 104.63040924]
[71.30512238 100.47251892]
[85.71733856 96.31463623]
[97.60971832 87.17289734]
[105.33380127 74.31449890]
[113.05788422 61.45609665]
[120.24039459 48.28751373]
[126.86889648 34.83154678]
[133.49739075 21.37558174]
[140.12588501 7.91961575]
[146.75439453 -5.53634977]
[153.10151672 -19.12730026]
[159.16453552 -32.84735489]
[165.22753906 -46.56740952]
[171.29055786 -60.28746033]
[177.35357666 -74.00751495]
[183.41658020 -87.72756958]
[171.11163330 -79.14920044]
[157.13594055 -73.70128632]
[142.27157593 -71.68868256]
[127.35035706 -73.22402191]
[113.20729065 -78.22138977]
[100.63382721 -86.40112305]
[90.33358765 -97.30548096]
[82.88297272 -110.32425690]
[78.69893646 -124.72889709]
[78.01560974 -139.71333313]
[80.87123108 -154.43899536]
[87.10600281 -168.08186340]
[96.37101746 -179.87844849]
[108.14781189 -189.16860962]
[121.77733612 -195.43247986]
[136.49688721 -198.31951904]
[151.48272705 -197.66815186]
[165.89627075 -193.51486206]
[178.93090820 -186.09204102]
[189.85722351 -175.81509399]
[198.06376648 -163.25910950]
[203.09129333 -149.12673950]
[204.65847778 -134.20883179]
[202.67759705 -119.34020996]
[197.25985718 -105.35357666]
[209.15223694 -114.49530792]
[221.04461670 -123.63704681]
[218.94715881 -138.85205078]
[224.75308228 -153.07128906]
[236.90058899 -162.46987915]
[252.12210083 -164.51962280]
[266.32305908 -158.66917419]
[275.68353271 -146.49224854]
[277.68554688 -131.26440430]
[271.79061890 -117.08183289]
[259.58441162 -107.75958252]
[244.35037231 -105.80529785]
[230.18634033 -111.74466705]
[218.29396057 -102.60292816]
[206.40158081 -93.46119690]
[197.13664246 -81.66455841]
[191.07362366 -67.94450378]
[185.01060486 -54.22444916]
[178.94760132 -40.50439453]
[172.88458252 -26.78434181]
[166.82157898 -13.06428719]
[167.70617676 -8.31107903]
[165.56832886 -2.95748997]
[160.21035767 1.09214902]
[153.58186340 14.54811478]
[146.95335388 28.00407982]
[140.32485962 41.46004486]
[133.69636536 54.91601181]
[134.52297974 57.65900803]
[134.27682495 60.90452576]
[132.75708008 64.23202515]
[129.92376709 67.15493011]
[125.91629028 69.18018341]
[118.19220734 82.03858185]
[110.46811676 94.89698792]
[123.41128540 87.31579590]
[133.67289734 76.37507629]
[147.16543579 69.82135010]
[162.10881042 68.51927948]
[176.53152466 72.64063263]
[188.53073120 81.64168549]
[196.52336121 94.33490753]
[199.45494080 109.04564667]
[196.93869019 123.83309174]
[189.30657959 136.74629211]
[177.56553650 146.08160400]
[163.26457214 150.60737610]
[148.29045105 149.72651672]
[134.61875916 143.55525208]
[124.05343628 132.90811157]
[116.86206055 119.74437714]
[116.86206055 134.74438477]
[116.86206055 149.74438477]
[116.86206055 164.74438477]
[116.86206055 179.74438477]
[116.86206055 194.74438477]
[116.86206055 209.74438477]
[116.86206055 224.74438477]
[116.86206055 239.74438477]
[116.86206055 254.74438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 51]
[12 50]
[13 49]
[14 48]
[16 46]
[17 45]
[52 125]
[53 124]
[54 123]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[90 105]
[91 104]
[92 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
