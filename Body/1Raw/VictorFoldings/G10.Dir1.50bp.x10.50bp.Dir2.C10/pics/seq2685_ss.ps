%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAAGUAAAAGGAACUCGGCAAAUCUUACCCCGCCUGUUUACCAAAAACAUCACCUCUAGxxxxxxxxxxCUAAAAAUAUUAAACACAAACUACCACCUACCUCCCUCACCAAAGCCCAUAAAAAUAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[77.51413727 -43.21379852]
[62.57921219 -44.63984299]
[47.72905731 -46.77490997]
[32.99731445 -49.61415482]
[18.41735268 -53.15114975]
[4.02220345 -57.37788391]
[-10.15552425 -62.28477859]
[-24.08371353 -67.86071777]
[-37.73081207 -74.09307861]
[-51.06590652 -80.96772766]
[-64.05878448 -88.46910858]
[-76.68002319 -96.58021545]
[-88.90101624 -105.28267670]
[-100.69408417 -114.55678558]
[-112.03252411 -124.38152313]
[-122.89063263 -134.73464966]
[-133.24382019 -145.59268188]
[-143.06863403 -156.93104553]
[-152.34281921 -168.72406006]
[-161.04536438 -180.94499207]
[-169.15657043 -193.56617737]
[-176.65803528 -206.55900574]
[-183.53277588 -219.89404297]
[-189.76522827 -233.54110718]
[-195.34126282 -247.46925354]
[-200.24826050 -261.64694214]
[-204.47508240 -276.04208374]
[-208.01217651 -290.62200928]
[-210.85151672 -305.35372925]
[-212.98669434 -320.20388794]
[-214.41284180 -335.13879395]
[-215.12673950 -350.12463379]
[-215.12677002 -365.12750244]
[-214.41293335 -380.11337280]
[-212.98686218 -395.04827881]
[-210.85176086 -409.89843750]
[-208.01248169 -424.63015747]
[-204.47544861 -439.21011353]
[-200.24868774 -453.60525513]
[-195.34176636 -467.78298950]
[-189.76579285 -481.71115112]
[-183.53340149 -495.35824585]
[-176.65872192 -508.69332886]
[-169.15730286 -521.68615723]
[-161.04617310 -534.30737305]
[-152.34367371 -546.52838135]
[-143.06954956 -558.32141113]
[-133.24478149 -569.65985107]
[-122.89163971 -580.51794434]
[-112.03357697 -590.87109375]
[-100.69519043 -600.69586182]
[-88.90216064 -609.97003174]
[-76.68119812 -618.67254639]
[-64.06000519 -626.78375244]
[-51.06715775 -634.28515625]
[-37.73209763 -641.15985107]
[-24.08502579 -647.39227295]
[-10.15686131 -652.96832275]
[4.02084446 -657.87524414]
[18.41597557 -662.10205078]
[32.99591827 -665.63909912]
[47.72764969 -668.47845459]
[62.57779694 -670.61358643]
[77.51271057 -672.03967285]
[92.49857330 -672.75354004]
[107.50142670 -672.75354004]
[122.48728943 -672.03967285]
[137.42221069 -670.61358643]
[152.27235413 -668.47845459]
[167.00407410 -665.63909912]
[181.58403015 -662.10205078]
[195.97915649 -657.87524414]
[210.15686035 -652.96832275]
[224.08502197 -647.39227295]
[237.73210144 -641.15985107]
[251.06715393 -634.28515625]
[264.05999756 -626.78375244]
[276.68121338 -618.67254639]
[288.90216064 -609.97003174]
[300.69519043 -600.69586182]
[312.03356934 -590.87109375]
[322.89163208 -580.51794434]
[333.24478149 -569.65985107]
[343.06954956 -558.32141113]
[352.34368896 -546.52838135]
[361.04617310 -534.30737305]
[369.15731812 -521.68615723]
[376.65872192 -508.69332886]
[383.53338623 -495.35824585]
[389.76577759 -481.71115112]
[395.34176636 -467.78298950]
[400.24868774 -453.60525513]
[404.47546387 -439.21011353]
[408.01248169 -424.63015747]
[410.85174561 -409.89843750]
[412.98684692 -395.04827881]
[414.41293335 -380.11337280]
[415.12677002 -365.12750244]
[415.12673950 -350.12463379]
[414.41284180 -335.13879395]
[412.98669434 -320.20388794]
[410.85153198 -305.35372925]
[408.01217651 -290.62200928]
[404.47509766 -276.04208374]
[400.24826050 -261.64694214]
[395.34124756 -247.46925354]
[389.76522827 -233.54110718]
[383.53277588 -219.89404297]
[376.65802002 -206.55900574]
[369.15655518 -193.56617737]
[361.04537964 -180.94499207]
[352.34283447 -168.72406006]
[343.06863403 -156.93104553]
[333.24383545 -145.59268188]
[322.89062500 -134.73464966]
[312.03253174 -124.38152313]
[300.69409180 -114.55678558]
[288.90100098 -105.28267670]
[276.68002319 -96.58021545]
[264.05877686 -88.46910858]
[251.06590271 -80.96772766]
[237.73081970 -74.09307861]
[224.08370972 -67.86071777]
[210.15551758 -62.28477859]
[195.97779846 -57.37788391]
[181.58264160 -53.15114975]
[167.00268555 -49.61415482]
[152.27093506 -46.77490997]
[137.42079163 -44.63984299]
[122.48586273 -43.21379852]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
