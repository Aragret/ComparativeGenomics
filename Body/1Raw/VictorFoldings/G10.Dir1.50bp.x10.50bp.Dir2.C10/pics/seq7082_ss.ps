%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCCCUAUUCUCAGGCUACACCCUAGACCAAACCUACGCCAAAAUCCAUUUCACUAUCAUxxxxxxxxxxACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 308.57254028]
[92.50000000 293.57254028]
[92.50000000 278.57254028]
[92.50000000 263.57254028]
[92.50000000 248.57254028]
[92.50000000 233.57254028]
[92.50000000 218.57254028]
[92.50000000 203.57254028]
[92.50000000 188.57254028]
[92.50000000 173.57254028]
[77.43908691 170.42849731]
[63.35465622 164.23619080]
[50.85630417 155.26359558]
[40.48498535 143.89910889]
[32.68959045 130.63456726]
[27.80751610 116.04412079]
[26.05006981 100.75924683]
[27.49331856 85.44150543]
[32.07479477 70.75389099]
[39.59620285 57.33209991]
[49.73200226 45.75705719]
[62.04349518 36.52975464]
[75.99781799 30.04956245]
[90.99100494 26.59695816]
[90.68302155 11.60012054]
[82.66400909 -2.03828120]
[90.13836670 -14.92173100]
[89.83039093 -29.91856956]
[89.52240753 -44.91540909]
[89.21443176 -59.91224670]
[74.22525024 -60.61748505]
[59.31787491 -62.33303452]
[44.56032562 -65.05106354]
[30.01994133 -68.75917816]
[15.76306248 -73.44046021]
[1.85474217 -79.07353210]
[-11.64155769 -85.63271332]
[-24.66425705 -93.08806610]
[-37.15393448 -101.40557098]
[-49.05360413 -110.54727173]
[-60.30897141 -120.47147369]
[-70.86867523 -131.13287354]
[-80.68453217 -142.48284912]
[-89.71176910 -154.46958923]
[-97.90917206 -167.03842163]
[-105.23936462 -180.13198853]
[-111.66887665 -193.69053650]
[-117.16838837 -207.65220642]
[-121.71279907 -221.95329285]
[-125.28137970 -236.52856445]
[-127.85783386 -251.31147766]
[-129.43041992 -266.23461914]
[-129.99195862 -281.22985840]
[-129.53988647 -296.22882080]
[-128.07626343 -311.16302490]
[-125.60776520 -325.96435547]
[-122.14566803 -340.56527710]
[-117.70575714 -354.89916992]
[-112.30829620 -368.90060425]
[-105.97791290 -382.50573730]
[-98.74349213 -395.65243530]
[-90.63803101 -408.28076172]
[-81.69853210 -420.33306885]
[-71.96577454 -431.75439453]
[-61.48416519 -442.49258423]
[-50.30153656 -452.49865723]
[-38.46890640 -461.72698975]
[-26.04026794 -470.13543701]
[-13.07233143 -477.68563843]
[0.37573567 -484.34313965]
[14.24257088 -490.07757568]
[28.46490288 -494.86279297]
[42.97783661 -498.67694092]
[57.71515274 -501.50259399]
[72.60961151 -503.32690430]
[87.59324646 -504.14154053]
[102.59769440 -503.94274902]
[117.55448914 -502.73147583]
[132.39538574 -500.51321411]
[147.05267334 -497.29812622]
[161.45947266 -493.10086060]
[175.55004883 -487.94055176]
[189.26010132 -481.84075928]
[202.52706909 -474.82931519]
[215.29045105 -466.93823242]
[227.49197388 -458.20349121]
[239.07597351 -448.66494751]
[249.98959351 -438.36611938]
[260.18304443 -427.35400391]
[269.60983276 -415.67886353]
[278.22689819 -403.39395142]
[285.99496460 -390.55535889]
[292.87857056 -377.22158813]
[298.84631348 -363.45355225]
[303.87094116 -349.31402588]
[307.92956543 -334.86755371]
[311.00366211 -320.18005371]
[313.07916260 -305.31851196]
[314.14663696 -290.35076904]
[314.20120239 -275.34512329]
[313.24261475 -260.36999512]
[311.27523804 -245.49375916]
[308.30807495 -230.78428650]
[304.35461426 -216.30867004]
[299.43295288 -202.13299561]
[293.56549072 -188.32191467]
[286.77905273 -174.93844604]
[279.10455322 -162.04367065]
[270.57705688 -149.69642639]
[261.23544312 -137.95303345]
[251.12234497 -126.86708069]
[240.28390503 -116.48915863]
[228.76959229 -106.86662292]
[216.63191223 -98.04336548]
[203.92626953 -90.05965424]
[190.71064758 -82.95191193]
[177.04531860 -76.75257874]
[162.99264526 -71.48992920]
[148.61676025 -67.18798828]
[133.98323059 -63.86637497]
[119.15885925 -61.54024887]
[104.21127319 -60.22022247]
[104.51924896 -45.22338486]
[104.82722473 -30.22654724]
[105.13520050 -15.22970867]
[113.13218689 -2.66398096]
[105.67986298 11.29214287]
[105.98783875 26.28898048]
[120.31806183 28.89202118]
[133.86021423 34.25310516]
[146.08905029 42.16429901]
[156.53022766 52.31874847]
[164.77879333 64.32260132]
[170.51478577 77.71025848]
[173.51576233 91.96247101]
[173.66528320 106.52642059]
[170.95758057 120.83724213]
[165.49765015 134.33984375]
[157.49729919 146.51052856]
[147.26679993 156.87721252]
[135.20298767 165.03782654]
[121.77375793 170.67582703]
[107.50000000 173.57254028]
[107.50000000 188.57254028]
[107.50000000 203.57254028]
[107.50000000 218.57254028]
[107.50000000 233.57254028]
[107.50000000 248.57254028]
[107.50000000 263.57254028]
[107.50000000 278.57254028]
[107.50000000 293.57254028]
[107.50000000 308.57254028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[24 128]
[25 127]
[27 125]
[28 124]
[29 123]
[30 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
