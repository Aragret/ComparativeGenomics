%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAACUCxxxxxxxxxxUAUUCCAACUGUUCAUCGGCUGAGAGGGCGUAGGAAUUAUAUCCUUCUUGCUCAUCAGUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.01995087 280.18161011]
[102.01995087 265.18161011]
[102.01995087 250.18159485]
[102.01995087 235.18159485]
[102.01995087 220.18159485]
[102.01995087 205.18159485]
[102.01995087 190.18159485]
[102.01995087 175.18159485]
[102.01995087 160.18159485]
[102.01995087 145.18159485]
[80.45507050 138.35324097]
[65.89638519 122.51547241]
[61.40305328 102.61080170]
[67.10476685 84.17310333]
[55.21238708 75.03136444]
[43.32000732 65.88963318]
[31.42762756 56.74789810]
[19.53524780 47.60616302]
[7.64286709 38.46443176]
[-4.24951267 29.32269669]
[-22.52849579 27.35835266]
[-28.65144730 10.94161034]
[-40.73143768 2.04926062]
[-52.81142426 -6.84308910]
[-68.94372559 6.20130157]
[-88.16170502 13.98170376]
[-108.79907227 15.83172894]
[-129.06886292 11.59882545]
[-147.21817017 1.65682125]
[-161.67971802 -13.12707424]
[-171.20721436 -31.46791077]
[-174.98275757 -51.77467728]
[-172.68702698 -72.28831482]
[-186.70373535 -77.62982178]
[-200.88029480 -82.53137207]
[-215.20289612 -86.98818970]
[-229.52548218 -91.44500732]
[-243.84808350 -95.90182495]
[-258.17068481 -100.35863495]
[-269.97317505 -95.05249023]
[-281.83850098 -99.10624695]
[-287.54812622 -109.81639862]
[-301.77490234 -114.57021332]
[-317.72668457 -110.76585388]
[-328.79916382 -122.86264801]
[-323.60192871 -138.41645813]
[-307.48144531 -141.42684937]
[-297.02108765 -128.79699707]
[-282.79431152 -124.04318237]
[-265.84732056 -128.49279785]
[-253.71386719 -114.68123627]
[-239.39126587 -110.22441864]
[-225.06867981 -105.76760101]
[-210.74607849 -101.31079102]
[-196.42347717 -96.85397339]
[-193.10261536 -98.21020508]
[-188.94917297 -97.98537445]
[-184.73223877 -95.80136108]
[-181.36222839 -91.64653778]
[-167.34550476 -86.30502319]
[-162.08813477 -95.03327179]
[-155.62007141 -102.90984344]
[-148.07720947 -109.76806641]
[-139.61817932 -115.46266937]
[-130.42102051 -119.87287140]
[-120.67945099 -122.90493774]
[-110.59878540 -124.49416351]
[-100.39159393 -124.60625458]
[-90.27323151 -123.23809052]
[-80.45727539 -120.41777802]
[-71.15105438 -116.20407867]
[-62.55122375 -110.68521118]
[-54.83964920 -103.97696686]
[-48.17953110 -96.22030640]
[-42.71197891 -87.57839203]
[-38.55298996 -78.23313904]
[-35.79101944 -68.38141632]
[-34.48507309 -58.23087692]
[-34.66346741 -47.99558640]
[-36.32320023 -37.89151001]
[-39.43001175 -28.13195992]
[-43.91907501 -18.92307663]
[-31.83908653 -10.03072739]
[-19.75909805 -1.13837814]
[-7.71522760 -2.63921380]
[2.43241477 4.72586060]
[4.89222193 17.43031693]
[16.78460121 26.57205009]
[28.67698097 35.71378326]
[40.56936264 44.85551834]
[52.46174240 53.99725342]
[64.35411835 63.13898849]
[76.24649811 72.28072357]
[89.49720764 65.03890228]
[104.54509735 63.77943802]
[118.81525421 68.71784210]
[129.86584473 79.00909424]
[143.64822388 73.08912659]
[153.27453613 60.53346634]
[168.02232361 62.61969376]
[181.80470276 56.69973373]
[191.17898560 43.24407578]
[207.49391174 44.90403748]
[213.96606445 59.97198868]
[203.93745422 72.94731903]
[187.72467041 70.48211670]
[173.94227600 76.40207672]
[165.30177307 88.53430176]
[149.56819153 86.87150574]
[135.78581238 92.79147339]
[140.84451294 101.31477356]
[143.67001343 111.76377106]
[158.31352234 115.01460266]
[172.95701599 118.26542664]
[187.60052490 121.51625061]
[200.79589844 112.81811523]
[216.25991821 116.07993317]
[224.81806946 129.36653137]
[221.39292908 144.79521179]
[208.01660156 153.21240234]
[192.62500000 149.62432861]
[184.34970093 136.15975952]
[169.70619202 132.90892029]
[155.06269836 129.65809631]
[140.41918945 126.40727234]
[134.56938171 131.10086060]
[145.86174011 140.97419739]
[157.15408325 150.84753418]
[168.44644165 160.72087097]
[182.75332642 165.22784424]
[191.81196594 177.18363953]
[192.27951050 192.17636108]
[183.98344421 204.67337036]
[169.98518372 210.06304932]
[155.45034790 206.35649109]
[145.74258423 194.92149353]
[144.44390869 179.97923279]
[137.25251770 166.81549072]
[130.06114197 153.65174866]
[122.86975861 140.48802185]
[117.01995087 145.18159485]
[117.01995087 160.18159485]
[117.01995087 175.18159485]
[117.01995087 190.18159485]
[117.01995087 205.18159485]
[117.01995087 220.18159485]
[117.01995087 235.18159485]
[117.01995087 250.18159485]
[117.01995087 265.18161011]
[117.01995087 280.18161011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[22 84]
[23 83]
[24 82]
[33 60]
[34 59]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[42 49]
[43 48]
[97 110]
[98 109]
[100 107]
[101 106]
[112 125]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
