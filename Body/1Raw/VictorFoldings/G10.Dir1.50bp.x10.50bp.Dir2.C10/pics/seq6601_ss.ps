%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCUxxxxxxxxxxCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[84.94702911 206.46572876]
[83.70015717 191.51763916]
[82.45328522 176.56954956]
[81.20640564 161.62145996]
[79.95953369 146.67337036]
[78.71266174 131.72528076]
[65.32637024 124.95716858]
[52.54901505 132.81459045]
[39.77165985 140.67202759]
[26.99430275 148.52944946]
[14.21694469 156.38687134]
[1.43958712 164.24429321]
[-11.33777046 172.10173035]
[-7.01960421 186.55911255]
[-6.59139252 201.64151001]
[-10.08233070 216.32060242]
[-17.25440216 229.59553528]
[-27.61860085 240.56120300]
[-40.46828079 248.46994019]
[-54.92732620 252.78253174]
[-70.00990295 253.20491028]
[-84.68764496 249.70831299]
[-97.95980835 242.53111267]
[-108.92146301 232.16268921]
[-116.82524109 219.30995178]
[-121.13224030 204.84924316]
[-121.54880524 189.76651001]
[-118.04653931 175.09011841]
[-110.86421967 161.82072449]
[-100.49155426 150.86306763]
[-87.63577271 142.96424866]
[-73.17339325 138.66284180]
[-58.09050369 138.25209045]
[-43.41546249 141.76002502]
[-30.14884758 148.94747925]
[-19.19519615 159.32437134]
[-6.41783857 151.46694946]
[6.35951853 143.60951233]
[19.13687515 135.75209045]
[31.91423416 127.89466858]
[44.69158936 120.03723907]
[57.46894836 112.17981720]
[93.33789825 83.41983795]
[93.64995575 68.42308044]
[93.96201324 53.42632675]
[94.27407074 38.42957306]
[94.58612061 23.43281937]
[94.89817810 8.43606663]
[80.01136780 6.47493601]
[65.43065643 2.88800788]
[51.33304214 -2.28117633]
[37.88965988 -8.96986771]
[25.26369286 -17.09687042]
[13.60841370 -26.56353188]
[3.06530619 -37.25493240]
[-6.23764610 -49.04129410]
[-14.18751335 -61.77953339]
[-20.68779373 -75.31502533]
[-25.65957642 -89.48345947]
[-29.04251099 -104.11284637]
[-30.79553032 -119.02559662]
[-30.89735603 -134.04067993]
[-29.34675026 -148.97584534]
[-26.16253662 -163.64976501]
[-21.38336945 -177.88432312]
[-15.06726265 -191.50672913]
[-7.29088783 -204.35162354]
[1.85135663 -216.26306152]
[12.24849319 -227.09648132]
[23.77430916 -236.72033691]
[36.28889084 -245.01783752]
[49.64032364 -251.88822937]
[63.66653442 -257.24813843]
[78.19725800 -261.03250122]
[93.05609894 -263.19534302]
[108.06269836 -263.71044922]
[123.03487396 -262.57153320]
[137.79087830 -259.79244995]
[152.15161133 -255.40692139]
[165.94271851 -249.46818542]
[178.99679565 -242.04832458]
[191.15538025 -233.23742676]
[202.27087402 -223.14244080]
[212.20835876 -211.88591003]
[220.84719849 -199.60446167]
[228.08250427 -186.44720459]
[233.82647705 -172.57385254]
[238.00936890 -158.15280151]
[240.58041382 -143.35913086]
[241.50840759 -128.37239075]
[240.78205872 -113.37454224]
[238.41020203 -98.54762268]
[234.42164612 -84.07162476]
[228.86477661 -70.12227631]
[221.80706787 -56.86890030]
[213.33418274 -44.47238541]
[203.54899597 -33.08321762]
[192.57026672 -22.83964729]
[180.53128052 -13.86602306]
[167.57817078 -6.27127600]
[153.86817932 -0.14759937]
[139.56773376 4.43067074]
[124.85044098 7.40795851]
[109.89493561 8.74812222]
[109.58287811 23.74487686]
[109.27082062 38.74163055]
[108.95876312 53.73838425]
[108.64670563 68.73513794]
[108.33465576 83.73188782]
[117.96318054 95.23369598]
[132.78092957 97.56479645]
[147.59869385 99.89590454]
[156.62869263 98.13212585]
[162.69915771 102.43272400]
[177.46522522 105.07158661]
[192.69601440 98.99253845]
[205.40678406 109.35440826]
[202.52177429 125.49779510]
[187.00883484 130.81576538]
[174.82635498 119.83764648]
[160.06030273 117.19877625]
[145.26759338 114.71366119]
[130.44982910 112.38255310]
[115.63207245 110.05145264]
[110.13924408 115.15819550]
[122.02545929 124.30793762]
[133.91166687 133.45768738]
[145.79788208 142.60743713]
[157.68409729 151.75718689]
[171.35734558 157.92503357]
[178.42684937 171.15463257]
[175.95553589 185.94966125]
[164.97012329 196.16342163]
[150.03459167 197.55255127]
[137.35397339 189.53993225]
[132.19650269 175.45326233]
[123.93576813 162.93286133]
[115.67504120 150.41246033]
[107.41430664 137.89207458]
[99.15357971 125.37167358]
[93.66074371 130.47840881]
[94.90762329 145.42649841]
[96.15449524 160.37458801]
[97.40136719 175.32267761]
[98.64824677 190.27076721]
[99.89511871 205.21884155]
[111.16500854 216.63677979]
[109.12177277 232.54919434]
[95.33280945 240.74943542]
[80.37583160 234.94699097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[48 104]
[110 124]
[111 123]
[112 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
