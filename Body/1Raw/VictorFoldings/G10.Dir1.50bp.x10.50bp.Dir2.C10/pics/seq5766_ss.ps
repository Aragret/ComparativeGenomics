%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCACACUCAUCGCCCUUxxxxxxxxxxCUUGCACGAAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[87.17156982 365.20217896]
[87.17156982 350.20217896]
[87.17156982 335.20217896]
[87.17156982 320.20217896]
[87.17156982 305.20217896]
[87.17156982 290.20217896]
[87.17156982 275.20217896]
[87.17156982 260.20217896]
[87.17156982 245.20217896]
[87.17156982 230.20217896]
[72.19550323 225.95468140]
[59.00352859 217.66329956]
[48.66252136 205.98893738]
[42.01147079 191.86653137]
[39.59344864 176.43003845]
[41.61125183 160.92155457]
[47.91043472 146.59120178]
[57.99109268 134.59651184]
[71.04752350 125.90880585]
[86.03261566 121.23460388]
[80.07025909 104.36912537]
[86.93952179 91.85974121]
[78.94960785 79.16481018]
[70.95968628 66.46987915]
[62.96977234 53.77494812]
[54.97985458 41.08002090]
[46.98994064 28.38508987]
[47.24315262 43.38295364]
[43.82746124 57.98888016]
[36.94955063 71.31908417]
[27.02559280 82.56697083]
[14.65606880 91.05195618]
[0.58944619 96.26061249]
[-14.32312489 97.87777710]
[-29.17930412 95.80559540]
[-43.08016586 90.16945648]
[-55.18458557 81.31039429]
[-64.76013947 69.76445770]
[-71.22743225 56.23027039]
[-74.19512939 41.52677536]
[-73.48365784 26.54365730]
[-69.13607025 12.18752575]
[-61.41543961 -0.67294914]
[-50.78892517 -11.25959873]
[-37.89952087 -18.93183708]
[-23.52714729 -23.22542953]
[-8.54146194 -23.88057709]
[6.15077448 -20.85763550]
[19.66055489 -14.33951855]
[31.17041969 -4.72063160]
[39.98296738 7.41526985]
[38.73609161 -7.53281736]
[37.48921967 -22.48090363]
[36.24234390 -37.42898941]
[21.25163460 -38.53583908]
[6.61866236 -41.97424316]
[-7.29622078 -47.65953445]
[-20.15035057 -55.45169830]
[-31.62718010 -65.15885925]
[-41.44408417 -76.54195404]
[-49.35931015 -89.32067108]
[-55.17794037 -103.18032837]
[-58.75668335 -117.77960968]
[-60.00741577 -132.75900269]
[-58.89933014 -147.74961853]
[-55.45971680 -162.38230896]
[-49.77328110 -176.29672241]
[-41.98005295 -189.15020752]
[-32.27194977 -200.62623596]
[-20.88804245 -210.44219971]
[-8.10867023 -218.35636902]
[5.75146484 -224.17385864]
[20.35104370 -227.75140381]
[35.33053970 -229.00090027]
[50.32106400 -227.89157104]
[64.95346832 -224.45075989]
[78.86741638 -218.76316833]
[91.72025299 -210.96888733]
[103.19548035 -201.25982666]
[113.01050568 -189.87510681]
[120.92362976 -177.09509277]
[126.73996735 -163.23446655]
[130.31629944 -148.63459778]
[131.56455994 -133.65499878]
[130.45401001 -118.66456604]
[127.01197815 -104.03244781]
[121.32324219 -90.11897278]
[113.52789307 -77.26676941]
[103.81790161 -65.79234314]
[92.43237305 -55.97826004]
[79.65169525 -48.06619644]
[65.79059601 -42.25099564]
[51.19042969 -38.67586517]
[52.43730545 -23.72777939]
[53.68418121 -8.77969170]
[54.93105316 6.16839552]
[59.68486786 20.39517403]
[67.67478180 33.09010315]
[75.66470337 45.78503418]
[83.65461731 58.47996521]
[91.64453125 71.17489624]
[99.63445282 83.86981964]
[96.25679779 69.25505066]
[100.94766235 55.00739670]
[112.34699249 45.25776672]
[127.14970398 42.83293915]
[141.06394958 48.43596649]
[150.05546570 60.44232178]
[151.51728821 75.37091827]
[145.02558899 88.89340973]
[132.46255493 97.08913422]
[117.47302246 97.58242035]
[131.79562378 102.03923798]
[146.11820984 106.49605560]
[160.44081116 110.95287323]
[174.76341248 115.40968323]
[187.12118530 106.02538300]
[202.63545227 105.73069763]
[215.34068298 114.63894653]
[220.35144043 129.32472229]
[215.74099731 144.14103699]
[203.28215027 153.39073181]
[187.76557922 153.51710510]
[175.15774536 144.47154236]
[170.30659485 129.73228455]
[155.98399353 125.27546692]
[141.66139221 120.81864929]
[127.33879852 116.36183929]
[113.01620483 111.90502167]
[101.02937317 120.92255402]
[115.06685638 124.50172424]
[127.68297577 131.59701538]
[138.01542664 141.71620178]
[145.35989380 154.16067505]
[149.21803284 168.07360840]
[149.33126831 182.49897766]
[145.69815063 196.44723511]
[138.57400513 208.96321106]
[128.45298767 219.19149780]
[116.03382111 226.43496704]
[102.17156982 230.20217896]
[102.17156982 245.20217896]
[102.17156982 260.20217896]
[102.17156982 275.20217896]
[102.17156982 290.20217896]
[102.17156982 305.20217896]
[102.17156982 320.20217896]
[102.17156982 335.20217896]
[102.17156982 350.20217896]
[102.17156982 365.20217896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 130]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[51 96]
[52 95]
[53 94]
[54 93]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
