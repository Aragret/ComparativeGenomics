%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAUCACCCUAUAGAAGAACUAAUGUUAGUAUAAGUAACAUGAAAACAUUCUCCUCCGCAxxxxxxxxxxCCAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAGCUAACAUGACUAACACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[84.54546356 296.61584473]
[84.54546356 281.61584473]
[84.54546356 266.61584473]
[84.54546356 251.61584473]
[84.54546356 236.61584473]
[84.54546356 221.61584473]
[84.54546356 206.61584473]
[84.54546356 191.61584473]
[84.54546356 176.61584473]
[84.54546356 161.61584473]
[70.52874756 156.27432251]
[60.54602432 167.47009277]
[50.56329727 178.66586304]
[40.58057022 189.86163330]
[41.73442078 205.62373352]
[31.34173203 217.53034973]
[15.56830120 218.51750183]
[3.77222657 207.99949646]
[2.95190978 192.21652222]
[13.59403038 180.53230286]
[29.38480568 179.87890625]
[39.36753082 168.68313599]
[49.35025787 157.48736572]
[59.33298492 146.29159546]
[48.56539917 133.14021301]
[41.86456299 117.64955902]
[39.68429565 101.03338623]
[42.12697983 84.57427979]
[48.94066238 69.52471924]
[59.54333115 57.01177979]
[73.07209015 47.95272446]
[88.45313263 42.98794556]
[104.48688507 42.43597031]
[107.58520508 27.75944519]
[110.68352509 13.08291912]
[113.78185272 -1.59360635]
[116.88017273 -16.27013206]
[119.97849274 -30.94665718]
[123.07681274 -45.62318420]
[126.17514038 -60.29970932]
[111.77164459 -64.51423645]
[97.73303986 -69.81897736]
[84.14170837 -76.18280792]
[71.07740021 -83.56837463]
[58.61678696 -91.93234253]
[46.83300018 -101.22562408]
[35.79518509 -111.39367676]
[25.56811905 -122.37684631]
[16.21182060 -134.11065674]
[7.78119612 -146.52626038]
[0.32572034 -159.55081177]
[-6.11085463 -173.10784912]
[-11.49075603 -187.11781311]
[-15.78241158 -201.49851990]
[-18.96063614 -216.16554260]
[-21.00677872 -231.03282166]
[-21.90883064 -246.01310730]
[-21.66150093 -261.01849365]
[-20.26623726 -275.96090698]
[-17.73122978 -290.75268555]
[-14.07135487 -305.30700684]
[-9.30809021 -319.53845215]
[-3.46938896 -333.36352539]
[3.41048455 -346.70104980]
[11.29115582 -359.47280884]
[20.12637901 -371.60382080]
[29.86430168 -383.02291870]
[40.44778061 -393.66305542]
[51.81470490 -403.46182251]
[63.89836884 -412.36172485]
[76.62786102 -420.31048584]
[89.92847443 -427.26147461]
[103.72216034 -433.17391968]
[117.92796326 -438.01312256]
[132.46252441 -441.75067139]
[147.24055481 -444.36462402]
[162.17530823 -445.83966064]
[177.17915344 -446.16711426]
[192.16404724 -445.34506226]
[207.04203796 -443.37835693]
[221.72583008 -440.27850342]
[236.12924194 -436.06369019]
[250.16775513 -430.75869751]
[263.75897217 -424.39459229]
[276.82312012 -417.00878906]
[289.28356934 -408.64459229]
[301.06719971 -399.35107422]
[312.10482788 -389.18283081]
[322.33166504 -378.19946289]
[331.68774414 -366.46545410]
[340.11813354 -354.04968262]
[347.57336426 -341.02502441]
[354.00967407 -327.46786499]
[359.38931274 -313.45779419]
[363.68069458 -299.07699585]
[366.85864258 -284.40991211]
[368.90451050 -269.54260254]
[369.80627441 -254.56228638]
[369.55865479 -239.55691528]
[368.16311646 -224.61451721]
[365.62783813 -209.82278442]
[361.96768188 -195.26853943]
[357.20413208 -181.03718567]
[351.36517334 -167.21223450]
[344.48504639 -153.87483215]
[336.60415649 -141.10322571]
[327.76867676 -128.97236633]
[318.03054810 -117.55346680]
[307.44686890 -106.91352081]
[296.07977295 -97.11496735]
[283.99594116 -88.21531677]
[271.26629639 -80.26679993]
[257.96554565 -73.31604767]
[244.17173767 -67.40386200]
[229.96585083 -62.56494141]
[215.43121338 -58.82767105]
[200.65313721 -56.21398926]
[185.71835327 -54.73923492]
[170.71449280 -54.41205978]
[155.72961426 -55.23438644]
[140.85166931 -57.20138550]
[137.75334167 -42.52486038]
[134.65501404 -27.84833527]
[131.55670166 -13.17181015]
[128.45837402 1.50471544]
[125.36005402 16.18124008]
[122.26173401 30.85776711]
[119.16341400 45.53429031]
[130.55854797 50.65966034]
[140.63964844 58.14983749]
[148.92030334 67.67784119]
[154.99368286 78.81765747]
[158.55242920 91.06323242]
[159.40415955 103.85147858]
[157.48161316 116.58813477]
[152.84707642 128.67541504]
[145.69079590 139.54000854]
[136.32328796 148.66033936]
[125.16187286 155.59149170]
[112.71224213 159.98696899]
[99.54546356 161.61584473]
[99.54546356 176.61584473]
[99.54546356 191.61584473]
[99.54546356 206.61584473]
[99.54546356 221.61584473]
[99.54546356 236.61584473]
[99.54546356 251.61584473]
[99.54546356 266.61584473]
[99.54546356 281.61584473]
[99.54546356 296.61584473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 24]
[12 23]
[13 22]
[14 21]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[39 122]
[40 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
