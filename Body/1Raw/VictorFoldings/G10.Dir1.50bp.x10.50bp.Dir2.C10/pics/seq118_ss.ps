%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCCUAUUAUUUAUCGCACCUACGUUCAAUAUUACAGGCGAACAUACUUACUAAAGUGUGxxxxxxxxxxGGAAUGCCCCGACGUUACUCGGACUACCCCGAUGCAUACACCACAUGAAACAUCCUAUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[161.94712830 337.80630493]
[161.63916016 322.80944824]
[161.33117676 307.81262207]
[161.02319336 292.81576538]
[160.71522522 277.81893921]
[160.40724182 262.82211304]
[160.09925842 247.82527161]
[159.79129028 232.82843018]
[159.48330688 217.83158875]
[155.23046875 203.44711304]
[147.33398438 190.69384766]
[139.43750000 177.94059753]
[131.54101562 165.18733215]
[123.64453125 152.43408203]
[114.41286469 155.68362427]
[104.76392365 157.32104492]
[94.97705841 157.29891968]
[85.33561707 155.61791992]
[76.11873627 152.32669067]
[67.59324646 147.52050781]
[60.00598526 141.33854675]
[53.57661438 133.95977783]
[48.49127197 125.59780884]
[44.89718628 116.49474335]
[42.89841080 106.91413116]
[27.89920044 106.76013947]
[12.89999104 106.60614014]
[-2.09921837 106.45214081]
[-6.49031067 120.90534210]
[-14.77662373 133.53521729]
[-26.28642273 143.31791687]
[-40.08665848 149.46040344]
[-55.05861282 151.46473694]
[-69.98857117 149.16842651]
[-83.66622925 142.75761414]
[-94.98280334 132.75202942]
[-103.02090454 119.96275330]
[-107.12892914 105.42656708]
[-106.97384644 90.32183838]
[-102.56823730 75.87306213]
[-94.26924133 63.25151825]
[-82.74961853 53.48038483]
[-68.94321442 47.35176849]
[-53.96926117 45.36248016]
[-39.04161453 47.67378998]
[-25.37040520 54.09832382]
[-14.06388855 64.11528015]
[-6.03863764 76.91262054]
[-1.94522142 91.45293427]
[13.05398846 91.60692596]
[28.05319786 91.76092529]
[43.05240631 91.91492462]
[54.82048035 64.40213776]
[78.81671143 46.52416229]
[75.15800476 31.97721100]
[71.49929810 17.43025589]
[65.51100159 3.67742705]
[57.35433578 -8.91101265]
[49.19766998 -21.49945068]
[41.04100418 -34.08789062]
[26.19871712 -41.06202698]
[25.08715820 -57.42345810]
[38.84980392 -66.34095001]
[53.32882309 -58.64094925]
[53.62944412 -42.24455643]
[61.78610992 -29.65611649]
[69.94277191 -17.06767845]
[78.09944153 -4.47923851]
[77.93434143 -19.47833061]
[82.81963348 -33.66049957]
[92.18701935 -45.37596130]
[104.94681549 -53.26187897]
[119.61468506 -56.40090179]
[134.48435974 -54.42786789]
[147.82606506 -47.57229996]
[158.08779907 -36.63169098]
[164.07582092 -22.87874413]
[165.09356689 -7.91330957]
[161.02262878 6.52370930]
[152.33659363 18.75288391]
[140.04586792 27.35161591]
[125.58023071 31.31963158]
[110.62242126 30.19534111]
[96.91246796 24.10953140]
[86.04624939 13.77155018]
[89.70495605 28.31850433]
[93.36366272 42.86545944]
[108.77169800 43.15411758]
[123.55005646 47.52341843]
[136.63789368 55.65970993]
[147.61869812 45.44100571]
[158.59950256 35.22229767]
[169.58030701 25.00358963]
[169.89753723 9.20248508]
[181.35264587 -1.68586075]
[197.14952087 -1.20158482]
[207.91613770 10.36800003]
[207.26487732 26.15886497]
[195.58210754 36.80257034]
[179.79901123 35.98439026]
[168.81820679 46.20309830]
[157.83740234 56.42180634]
[146.85659790 66.64051056]
[151.75361633 74.90100861]
[155.20808411 83.86110687]
[157.12370300 93.27104950]
[157.44709778 102.86854553]
[156.16921997 112.38609314]
[153.32571411 121.55839539]
[148.99584961 130.12979126]
[143.30027771 137.86135864]
[136.39779663 144.53759766]
[144.29426575 157.29086304]
[152.19075012 170.04411316]
[160.08723450 182.79736328]
[167.98371887 195.55062866]
[167.85314941 180.55119324]
[171.00219727 165.88546753]
[177.27877808 152.26179504]
[186.37973022 140.33818054]
[197.86549377 130.69052124]
[211.18130493 123.78479767]
[225.68403625 119.95454407]
[240.67321777 119.38476562]
[255.42486572 122.10297394]
[269.22650146 127.97789001]
[281.41152954 136.72575378]
[291.39141846 147.92405701]
[298.68414307 161.03192139]
[302.93746948 175.41625977]
[303.94598389 190.38232422]
[301.66094971 205.20726013]
[296.19271851 219.17503357]
[287.80545044 231.61100769]
[276.90423584 241.91456604]
[264.01556396 249.58802795]
[249.76194763 254.26077271]
[234.83183289 255.70712280]
[219.94635010 253.85722351]
[205.82441711 248.80041504]
[193.14814758 240.78094482]
[182.52976990 230.18612671]
[174.48014832 217.52360535]
[174.78813171 232.52044678]
[175.09609985 247.51728821]
[175.40408325 262.51412964]
[175.71205139 277.51095581]
[176.02003479 292.50781250]
[176.32801819 307.50463867]
[176.63598633 322.50146484]
[176.94396973 337.49832153]
[179.52973938 356.70675659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 116]
[11 115]
[12 114]
[13 113]
[14 112]
[25 52]
[26 51]
[27 50]
[28 49]
[54 87]
[55 86]
[56 85]
[57 68]
[58 67]
[59 66]
[60 65]
[90 103]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
