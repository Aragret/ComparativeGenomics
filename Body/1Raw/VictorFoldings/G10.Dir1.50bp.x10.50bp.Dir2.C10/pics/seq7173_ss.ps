%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUCCGGAAUGCCCCGACGUUACUCxxxxxxxxxxUUCCUUAUCUGCUUCCUAGUCCUGUAUGCCCUUUUCCUAACACUCACAACAAAACUAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[154.43945312 91.25991821]
[140.11685181 95.71672821]
[125.79425812 100.17354584]
[111.47165680 104.63036346]
[99.03221893 113.01250458]
[89.52385712 124.61384583]
[80.01550293 136.21519470]
[70.50714111 147.81652832]
[60.99878311 159.41787720]
[51.49042511 171.01921082]
[41.98206711 182.62055969]
[32.47370911 194.22189331]
[22.96534920 205.82324219]
[24.77388000 221.52371216]
[14.88548374 233.85234070]
[-0.83322972 235.49476624]
[-13.05662632 225.47657776]
[-14.53278160 209.74137878]
[-4.38591862 197.62458801]
[11.36400890 196.31488037]
[20.87236786 184.71353149]
[30.38072586 173.11219788]
[39.88908386 161.51084900]
[49.39744186 149.90951538]
[58.90579987 138.30816650]
[68.41416168 126.70683289]
[77.92251587 115.10549164]
[87.43087769 103.50415039]
[85.20246887 96.34284973]
[70.87979889 100.79942322]
[66.42345428 86.47668457]
[80.74565125 82.02024841]
[78.51724243 74.85895538]
[64.10502625 70.70106506]
[57.50341797 71.93647766]
[52.10557175 69.91297150]
[49.18650436 66.05881500]
[34.95972443 61.30499649]
[20.73294640 56.55118179]
[11.53552055 56.79454041]
[6.26144648 51.54765701]
[-7.86335659 46.49890137]
[-21.98815918 41.45014191]
[-37.04551315 46.98690414]
[-50.68714905 38.54384232]
[-52.44837952 22.59775925]
[-40.97813034 11.38111973]
[-25.07540321 13.49837112]
[-16.93940353 27.32534027]
[-2.81460023 32.37409592]
[11.31020260 37.42285156]
[25.48676109 42.32440567]
[39.71353912 47.07822037]
[53.94031906 51.83203506]
[68.26291656 56.28884888]
[82.67513275 60.44673538]
[107.01483917 90.30776215]
[121.33744049 85.85095215]
[135.66003418 81.39413452]
[149.98263550 76.93731689]
[146.50137329 62.34095764]
[144.01347351 47.54287338]
[142.53024292 32.61059189]
[142.05848694 17.61224747]
[142.60035706 2.61626935]
[144.15335083 -12.30891514]
[146.71041870 -27.09520531]
[150.25985718 -41.67513657]
[154.78550720 -55.98218155]
[160.26669312 -69.95105743]
[166.67840576 -83.51802826]
[173.99140930 -96.62120056]
[182.17231750 -109.20076752]
[191.18380737 -121.19934845]
[200.98477173 -132.56219482]
[211.53048706 -143.23744202]
[222.77281189 -153.17640686]
[234.66047668 -162.33370972]
[247.13923645 -170.66760254]
[260.15213013 -178.14002991]
[273.63983154 -184.71691895]
[287.54074097 -190.36824036]
[301.79144287 -195.06822205]
[316.32696533 -198.79541016]
[331.08093262 -201.53280640]
[345.98605347 -203.26791382]
[360.97430420 -203.99282837]
[375.97726440 -203.70422363]
[390.92654419 -202.40341187]
[405.75390625 -200.09635925]
[420.39169312 -196.79357910]
[434.77310181 -192.51011658]
[448.83251953 -187.26554871]
[462.50582886 -181.08380127]
[475.73059082 -173.99307251]
[488.44647217 -166.02569580]
[500.59548950 -157.21806335]
[512.12219238 -147.61033630]
[522.97393799 -137.24636841]
[533.10131836 -126.17343903]
[542.45800781 -114.44207764]
[551.00140381 -102.10580444]
[558.69244385 -89.22090912]
[565.49609375 -75.84618378]
[571.38134766 -62.04266357]
[576.32122803 -47.87332153]
[580.29327393 -33.40280914]
[583.27935791 -18.69715881]
[585.26586914 -3.82346654]
[586.24371338 11.15040207]
[586.20849609 26.15612411]
[585.16027832 41.12523270]
[583.10388184 55.98942184]
[580.04864502 70.68087769]
[576.00860596 85.13255310]
[571.00219727 99.27851868]
[565.05212402 113.05422974]
[558.18572998 126.39682007]
[550.43414307 139.24542236]
[541.83288574 151.54139709]
[532.42114258 163.22865295]
[522.24188232 174.25386047]
[511.34149170 184.56671143]
[499.76977539 194.12014771]
[487.57949829 202.87057495]
[474.82626343 210.77809143]
[461.56832886 217.80657959]
[447.86611938 223.92399597]
[433.78219604 229.10241699]
[419.38082886 233.31822205]
[404.72769165 236.55216980]
[389.88964844 238.78950500]
[374.93441772 240.02001953]
[359.93023682 240.23809814]
[344.94555664 239.44274902]
[330.04876709 237.63760376]
[315.30783081 234.83088684]
[300.79000854 231.03541565]
[286.56152344 226.26850891]
[272.68734741 220.55189514]
[259.23071289 213.91169739]
[246.25308228 206.37817383]
[233.81364441 197.98573303]
[221.96914673 188.77264404]
[210.77366638 178.78094482]
[200.27824402 168.05624390]
[190.53080750 156.64746094]
[181.57580566 144.60664368]
[173.45411682 131.98876953]
[166.20278931 118.85136414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[33 56]
[34 55]
[37 54]
[38 53]
[39 52]
[41 51]
[42 50]
[43 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
