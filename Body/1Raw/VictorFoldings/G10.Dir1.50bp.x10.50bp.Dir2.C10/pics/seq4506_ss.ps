%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAACCCCCUUAUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUxxxxxxxxxxAGUACUCUUAAAACUAGGCGGCUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-17.93555832 181.32901001]
[-30.71291542 189.18644714]
[-43.49027252 197.04386902]
[-53.81747818 207.92269897]
[-60.99998474 221.09127808]
[-68.18249512 234.25985718]
[-75.36500549 247.42843628]
[-82.54751587 260.59701538]
[-89.73001862 273.76559448]
[-86.60054779 289.50045776]
[-97.06103516 301.66424561]
[-113.08708954 300.92596436]
[-122.38489532 287.85192871]
[-117.82197571 272.47143555]
[-102.89860535 266.58309937]
[-95.71609497 253.41452026]
[-88.53358459 240.24592590]
[-81.35107422 227.07734680]
[-74.16857147 213.90876770]
[-66.98606110 200.74018860]
[-71.55693054 194.79399109]
[-86.42685699 196.76509094]
[-80.69866180 182.90161133]
[-85.26953125 176.95542908]
[-99.84223175 180.51019287]
[-114.41493225 184.06494141]
[-128.98764038 187.61970520]
[-133.91772461 202.23811340]
[-145.98272705 211.85264587]
[-161.33276367 213.39532471]
[-175.06968689 206.37388611]
[-182.81010437 193.02886963]
[-182.08406067 177.61859131]
[-173.12322998 165.06044006]
[-158.78700256 159.36166382]
[-143.65000916 162.34071350]
[-132.54240417 173.04701233]
[-117.96969604 169.49224854]
[-103.39699554 165.93748474]
[-88.82428741 162.38272095]
[-78.83552551 161.84574890]
[-69.82763672 163.64193726]
[-62.29536057 167.33712769]
[-56.59601593 172.40127563]
[-52.93278122 178.24627686]
[-51.34769821 184.26651001]
[-38.57033920 176.40908813]
[-25.79298401 168.55165100]
[-36.35140991 143.94880676]
[-42.14771271 117.81101990]
[-42.97945023 91.05117798]
[-38.81757736 64.60388184]
[-29.80744362 39.39280701]
[-16.26373863 16.29846001]
[1.34052444 -3.87257767]
[22.39050674 -20.41582489]
[14.93559647 -33.43213654]
[7.48068619 -46.44844437]
[0.02577586 -59.46475601]
[-7.42913437 -72.48106384]
[-22.47177315 -78.05767059]
[-27.35368156 -93.33990479]
[-18.32987404 -106.60453033]
[-2.32264662 -107.67607880]
[8.38862705 -95.73253632]
[5.58717489 -79.93597412]
[13.04208565 -66.91966248]
[20.49699593 -53.90335464]
[27.95190620 -40.88704681]
[35.40681458 -27.87073517]
[44.13760376 -31.91890335]
[53.12047958 -35.37176514]
[62.31490707 -38.21374130]
[71.67939758 -40.43200302]
[81.17168427 -42.01654434]
[90.74893951 -42.96021271]
[100.36794281 -43.25874710]
[109.98528290 -42.91080475]
[119.55756378 -41.91795731]
[129.04159546 -40.28467560]
[138.39456177 -38.01834106]
[147.57426453 -35.12917328]
[156.53929138 -31.63021469]
[165.24916077 -27.53725243]
[173.66459656 -22.86875916]
[181.74760437 -17.64579773]
[189.46171570 -11.89194202]
[196.77210999 -5.63315535]
[203.64581299 1.10231829]
[210.05178833 8.28408432]
[215.96113586 15.87973309]
[221.34719849 23.85498810]
[226.18565369 32.17385864]
[230.45468140 40.79880905]
[234.13500977 49.69091415]
[237.21002197 58.81004333]
[251.78273010 55.25528336]
[266.35543823 51.70051956]
[280.92813110 48.14575958]
[295.50085449 44.59099579]
[297.78952026 29.56334305]
[305.65908813 16.55802917]
[317.90951538 7.55827188]
[332.67269897 3.93646765]
[347.69732666 6.24491644]
[360.69226074 14.13159561]
[369.67590332 26.39384460]
[373.27828979 41.16175842]
[370.95007324 56.18333817]
[363.04629517 69.16790009]
[350.77224731 78.13539886]
[335.99960327 81.71835327]
[320.98110962 79.37038422]
[308.00695801 71.44953918]
[299.05560303 59.16370010]
[284.48291016 62.71846008]
[269.91018677 66.27322388]
[255.33749390 69.82798767]
[240.76478577 73.38274384]
[242.48048401 85.08296204]
[243.22534180 96.88481903]
[242.99432373 108.70790863]
[241.78898621 120.47165680]
[239.61753845 132.09591675]
[236.49478149 143.50149536]
[232.44198608 154.61065674]
[227.48678589 165.34771729]
[221.66291809 175.63952637]
[215.01008606 185.41595459]
[207.57360840 194.61038208]
[199.40415955 203.16015625]
[190.55740356 211.00703430]
[181.09361267 218.09754944]
[171.07727051 224.38337708]
[160.57664490 229.82170105]
[149.66325378 234.37545776]
[138.41148376 238.01362610]
[126.89797974 240.71141052]
[115.20121002 242.45043945]
[103.40086365 243.21884155]
[91.57733917 243.01141357]
[79.81121063 241.82952881]
[68.18264008 239.68127441]
[56.77086258 236.58128357]
[45.65363312 232.55065918]
[34.90670395 227.61688232]
[24.60330200 221.81355286]
[14.81362820 215.18023682]
[5.60438681 207.76211548]
[-2.96167183 199.60972595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[24 40]
[25 39]
[26 38]
[27 37]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
