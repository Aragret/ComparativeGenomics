%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUAAAUxxxxxxxxxxGGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAAAACCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[3.86417556 274.60360718]
[-3.85990930 287.46200562]
[-4.33353472 303.27612305]
[-17.51992416 310.20205688]
[-17.99354935 326.01617432]
[-31.17994118 332.94207764]
[-38.90402603 345.80047607]
[-46.62810898 358.65890503]
[-54.35219574 371.51730347]
[-62.07627869 384.37570190]
[-69.80036163 397.23410034]
[-72.77346802 413.92532349]
[-89.63542938 415.68899536]
[-95.99803925 399.97424316]
[-82.65876770 389.51000977]
[-74.93468475 376.65161133]
[-67.21059418 363.79321289]
[-59.48651123 350.93481445]
[-51.76242828 338.07641602]
[-44.03834152 325.21798706]
[-44.11719513 310.32360840]
[-30.37832642 302.47796631]
[-30.45718002 287.58355713]
[-16.71831131 279.73791504]
[-8.99422646 266.87951660]
[-34.14618301 247.42224121]
[-55.88372803 224.21264648]
[-73.65357971 197.84146118]
[-87.00343323 168.97993469]
[-95.59351349 138.36267090]
[-110.41127014 140.69377136]
[-125.22902679 143.02488708]
[-139.93608093 151.45927429]
[-152.11216736 139.66184998]
[-144.14646912 124.69575500]
[-127.56013489 128.20712280]
[-112.74237823 125.87601471]
[-97.92461395 123.54491425]
[-99.27573395 104.20712280]
[-98.74198151 84.82954407]
[-96.32840729 65.59545135]
[-92.05785370 46.68677902]
[-85.97069550 28.28237534]
[-99.75307465 22.36241150]
[-113.53546143 16.44244957]
[-129.74826050 18.90765381]
[-139.77685547 5.93232584]
[-133.30470276 -9.13562775]
[-116.98978424 -10.79558945]
[-107.61549377 2.66006780]
[-93.83311462 8.58003139]
[-80.05073547 14.49999428]
[-75.19518280 4.94651461]
[-69.83319092 -4.33218908]
[-63.98024750 -13.30929375]
[-57.65327835 -21.95884895]
[-50.87057495 -30.25585175]
[-43.65174103 -38.17631912]
[-36.01764297 -45.69734955]
[-27.99035454 -52.79720688]
[-19.59307671 -59.45536423]
[-10.85008621 -65.65257263]
[-1.78665400 -71.37092590]
[7.57101822 -76.59388733]
[17.19587898 -81.30635834]
[27.06010628 -85.49471283]
[37.13518524 -89.14685059]
[47.39199066 -92.25222015]
[57.80087280 -94.80182648]
[68.33174133 -96.78830719]
[78.95415497 -98.20592499]
[89.63741302 -99.05058289]
[100.35061646 -99.31983185]
[111.06281281 -99.01289368]
[121.74302673 -98.13066101]
[132.36039734 -96.67567444]
[142.88420105 -94.65215302]
[153.28405762 -92.06594086]
[163.52987671 -88.92451477]
[173.59204102 -85.23695374]
[183.44146729 -81.01391602]
[193.04969788 -76.26761627]
[202.38893127 -71.01176453]
[211.43218994 -65.26156616]
[220.15332031 -59.03363037]
[228.52713013 -52.34597015]
[236.52938843 -45.21791840]
[244.13697815 -37.67007446]
[251.32789612 -29.72426033]
[258.08135986 -21.40344620]
[264.37786865 -12.73168564]
[270.19918823 -3.73404479]
[283.29235840 -11.05315018]
[296.38549805 -18.37225533]
[309.47866821 -25.69136238]
[313.24426270 -31.25263405]
[318.47946167 -33.66592026]
[323.27224731 -33.02962875]
[336.65850830 -39.79774094]
[343.00964355 -54.53011322]
[358.52502441 -58.61089706]
[371.30255127 -48.90967178]
[371.54043579 -32.86838150]
[359.05618286 -22.79253387]
[343.42663574 -26.41145706]
[330.04034424 -19.64334297]
[316.79776001 -12.59820747]
[303.70462036 -5.27910137]
[290.61145020 2.04000401]
[277.51831055 9.35910988]
[282.68380737 20.28081512]
[287.17810059 31.49541473]
[290.98468018 42.96170425]
[294.08956909 54.63756180]
[296.48138428 66.48007965]
[298.15127563 78.44575500]
[299.09317017 90.49062347]
[299.30355835 102.57042694]
[298.78170776 114.64079285]
[297.52951050 126.65736389]
[295.55154419 138.57598877]
[292.85513306 150.35289001]
[289.45016479 161.94477844]
[285.34912109 173.30909729]
[280.56707764 184.40405273]
[275.12164307 195.18890381]
[269.03277588 205.62402344]
[262.32287598 215.67108154]
[255.01660156 225.29315186]
[247.14076233 234.45487976]
[238.72431946 243.12260437]
[229.79820251 251.26448059]
[220.39518738 258.85061646]
[210.54983521 265.85311890]
[200.29830933 272.24624634]
[189.67826843 278.00653076]
[178.72875977 283.11279297]
[167.48997498 287.54632568]
[156.00325012 291.29077148]
[144.31074524 294.33239746]
[132.45544434 296.66000366]
[120.48090363 298.26510620]
[108.43111420 299.14175415]
[96.35034943 299.28671265]
[84.28298950 298.69949341]
[72.27337646 297.38223267]
[60.36563110 295.33978271]
[48.60350800 292.57965088]
[37.03022003 289.11193848]
[25.68828773 284.94940186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 22]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[30 38]
[31 37]
[32 36]
[43 52]
[44 51]
[45 50]
[92 110]
[93 109]
[94 108]
[95 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
