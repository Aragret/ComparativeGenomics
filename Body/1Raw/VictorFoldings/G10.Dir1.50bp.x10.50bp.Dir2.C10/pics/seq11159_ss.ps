%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACxxxxxxxxxxUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[72.85547638 212.48751831]
[63.48570633 209.80426025]
[54.37497711 206.34202576]
[45.58791733 202.12538147]
[37.69143295 214.87863159]
[29.79495239 227.63189697]
[21.89846992 240.38514709]
[14.00198650 253.13841248]
[6.10550451 265.89166260]
[12.10176754 280.20336914]
[8.50788593 295.29852295]
[-3.29421830 305.37274170]
[-18.76639557 306.55227661]
[-31.95928001 298.38360596]
[-37.79993439 284.00769043]
[-34.04251099 268.95242310]
[-22.13181686 259.00680542]
[-6.64775276 257.99517822]
[1.24872971 245.24192810]
[9.14521217 232.48867798]
[17.04169464 219.73541260]
[24.93817711 206.98216248]
[32.83465958 194.22889709]
[8.99103737 171.46772766]
[-7.46742105 142.90713501]
[-15.20514965 110.86471558]
[-13.59424973 77.94065094]
[-28.10287476 74.13278961]
[-42.61149979 70.32492828]
[-57.12012482 66.51707458]
[-71.70387268 63.00790405]
[-86.35659790 59.79890823]
[-101.00932312 56.58991241]
[-112.60749817 66.72837830]
[-127.77433014 68.07768250]
[-140.67486572 60.32912827]
[-146.46968079 46.63394165]
[-161.12240601 43.42494583]
[-175.77513123 40.21595001]
[-190.42785645 37.00695038]
[-205.08058167 33.79795456]
[-220.53547668 39.28231812]
[-232.83523560 28.43574715]
[-229.32691956 12.41626835]
[-213.61958313 7.70334578]
[-201.87158203 19.14523125]
[-187.21885681 22.35422707]
[-172.56613159 25.56322289]
[-157.91340637 28.77222061]
[-143.26068115 31.98121643]
[-132.27226257 21.96161652]
[-117.31398010 20.31423759]
[-104.09939575 27.87916756]
[-97.80033112 41.93718719]
[-83.14760590 45.14618301]
[-68.49488068 48.35518265]
[-64.01531982 46.54335022]
[-58.34669876 47.57030487]
[-53.31226730 52.00844955]
[-38.80364227 55.81630707]
[-24.29501534 59.62416458]
[-9.78639126 63.43202209]
[-5.83103943 53.20192719]
[-0.92488962 43.39226913]
[4.88798046 34.09118271]
[11.55534744 25.38222694]
[19.01731110 17.34364700]
[27.20683289 10.04766083]
[36.05033875 3.55981588]
[45.46837234 -2.06159902]
[55.37632370 -6.76608133]
[65.68518066 -10.51136494]
[76.30233002 -13.26380157]
[87.13237762 -14.99866390]
[98.07802582 -15.70036507]
[109.04094696 -15.36260128]
[119.92263794 -13.98840618]
[130.62535095 -11.59012699]
[141.05291748 -8.18931007]
[151.11164856 -3.81650710]
[160.71119690 1.48899460]
[169.76531982 7.67953062]
[178.19264221 14.69948387]
[185.91749573 22.48578644]
[192.87043762 30.96848488]
[198.98902893 40.07137299]
[204.21829224 49.71266556]
[208.51124573 59.80574417]
[211.82931519 70.25993347]
[226.54484558 67.35245514]
[241.26036072 64.44498444]
[255.97589111 61.53751373]
[270.69140625 58.63004303]
[285.40692139 55.72256851]
[299.27981567 50.01790619]
[311.78384399 41.73242950]
[324.28787231 33.44695663]
[336.79193115 25.16148186]
[343.61331177 10.24837780]
[359.96246338 8.96890259]
[369.02078247 22.63927078]
[361.46984863 37.19657898]
[345.07739258 37.66551971]
[332.57336426 45.95099258]
[320.06933594 54.23646545]
[307.56527710 62.52194214]
[322.55398560 61.94005203]
[337.06930542 65.72238159]
[349.86801147 73.54499817]
[359.85394287 84.73790741]
[366.17181396 98.34246826]
[368.28057861 113.19350433]
[365.99957275 128.01905823]
[359.52416992 141.54936218]
[349.40899658 152.62561035]
[336.52035522 160.29911804]
[321.96212769 163.91270447]
[306.98117065 163.15687561]
[292.86059570 158.09634399]
[280.80975342 149.16453552]
[271.86074829 137.12644958]
[266.78009033 123.01309204]
[266.00286865 108.03324127]
[269.59567261 93.46987152]
[277.25079346 80.57028961]
[288.31439209 70.43809509]
[273.59887695 73.34556580]
[258.88336182 76.25303650]
[244.16783142 79.16050720]
[229.45231628 82.06797791]
[214.73678589 84.97545624]
[215.59416199 94.68408203]
[215.63148499 104.43041229]
[214.84849548 114.14532471]
[213.25076294 123.75988007]
[210.84962463 133.20588684]
[207.66207886 142.41632080]
[203.71078491 151.32585144]
[199.02374268 159.87126160]
[193.63420105 167.99194336]
[187.58041382 175.63027954]
[180.90531921 182.73207092]
[173.65628052 189.24696350]
[165.88470459 195.12872314]
[157.64573669 200.33563232]
[148.99781799 204.83073425]
[140.00228882 208.58215332]
[130.72299194 211.56327820]
[121.22574615 213.75296021]
[111.57791901 215.13566589]
[101.84795380 215.70156860]
[92.10487366 215.44668579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[27 62]
[28 61]
[29 60]
[30 59]
[31 56]
[32 55]
[33 54]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
