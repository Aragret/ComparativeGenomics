%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAAACCUACUCCAAUGCUAAAACUAAUCGUCCCAACAAUUAUAUUACUACCACUGACAxxxxxxxxxxCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUAAUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.06131744 282.28393555]
[118.06131744 267.28393555]
[118.06131744 252.28393555]
[118.06131744 237.28393555]
[118.06131744 222.28393555]
[118.06131744 207.28393555]
[118.06131744 192.28393555]
[118.06131744 177.28393555]
[118.06131744 162.28393555]
[118.06131744 147.28393555]
[113.60449982 132.96134949]
[100.00771332 135.65855408]
[86.40975952 132.96722412]
[74.86550140 125.29405975]
[67.11943054 113.79858398]
[64.34210968 100.21793365]
[66.95322418 86.60435486]
[74.55820465 75.01505280]
[66.30591583 62.48909378]
[58.05362320 49.96313095]
[49.80133438 37.43716812]
[41.54904556 24.91120529]
[32.90992737 12.64883804]
[23.89239883 0.66200531]
[14.87486935 -11.32482719]
[5.85733938 -23.31166077]
[-3.16019058 -35.29849243]
[-12.17772007 -47.28532410]
[-24.98873138 -39.46014023]
[-38.49518204 -32.90794373]
[-52.57096481 -27.68991089]
[-67.08465576 -23.85476303]
[-81.90073395 -21.43831253]
[-96.88087463 -20.46311569]
[-111.88520050 -20.93828201]
[-126.77361298 -22.85937500]
[-141.40710449 -26.20845413]
[-155.64904785 -30.95425224]
[-169.36647034 -37.05245590]
[-182.43127441 -44.44612885]
[-194.72148132 -53.06623459]
[-206.12234497 -62.83229065]
[-216.52740479 -73.65310669]
[-225.83952332 -85.42765045]
[-233.97175598 -98.04598999]
[-240.84815979 -111.39030457]
[-246.40452576 -125.33599091]
[-250.58898926 -139.75285339]
[-253.36247253 -154.50627136]
[-254.69908142 -169.45849609]
[-254.58631897 -184.46990967]
[-253.02526855 -199.40037537]
[-250.03050232 -214.11045837]
[-245.62995911 -228.46284485]
[-239.86473083 -242.32350159]
[-232.78866577 -255.56301880]
[-224.46781921 -268.05776978]
[-214.97988892 -279.69110107]
[-204.41345215 -290.35443115]
[-192.86717224 -299.94812012]
[-180.44886780 -308.38262939]
[-167.27447510 -315.57922363]
[-153.46701050 -321.47070312]
[-139.15539551 -326.00204468]
[-124.47324371 -329.13092041]
[-109.55764771 -330.82815552]
[-94.54788208 -331.07791138]
[-79.58408356 -329.87780762]
[-64.80596924 -327.23907471]
[-50.35152817 -323.18634033]
[-36.35571289 -317.75747681]
[-22.94920349 -311.00314331]
[-10.25718021 -302.98638916]
[1.60185575 -293.78213501]
[12.51717567 -283.47622681]
[22.38686371 -272.16497803]
[31.11876869 -259.95391846]
[38.63135910 -246.95713806]
[44.85448837 -233.29595947]
[49.73005676 -219.09791565]
[53.21253967 -204.49559021]
[55.26941681 -189.62532043]
[55.88148880 -174.62596130]
[55.04303741 -159.63754272]
[52.76189423 -144.80003357]
[49.05935669 -130.25195312]
[43.96998978 -116.12913513]
[37.54132080 -102.56345367]
[29.83337212 -89.68156433]
[20.91811180 -77.60375214]
[10.87877846 -66.44277954]
[-0.19088794 -56.30285645]
[8.82664204 -44.31602097]
[17.84417152 -32.32918930]
[26.86170197 -20.34235764]
[35.87923050 -8.35552406]
[44.89676285 3.63130808]
[48.38409424 4.47153902]
[51.62303543 7.08131552]
[53.76851654 11.31797600]
[54.07500839 16.65891647]
[62.32729721 29.18487930]
[70.57958221 41.71084213]
[78.83187103 54.23680115]
[87.08415985 66.76276398]
[102.80905151 64.45226288]
[117.97587585 69.20388794]
[129.57150269 80.07366180]
[135.29226685 94.90212250]
[134.00166321 110.74335480]
[125.95606995 124.45025635]
[125.30615234 109.46434021]
[127.62934113 94.64533997]
[132.83407593 80.57726288]
[140.71522522 67.81452942]
[150.96221924 56.86011887]
[163.17121887 48.14574051]
[176.86106873 42.01482391]
[191.49224854 38.70898819]
[206.48815918 38.35851669]
[221.25779724 40.97722244]
[235.21911621 46.46189880]
[247.82188416 54.59639740]
[258.56945801 65.06014252]
[267.03823853 77.44075775]
[272.89450073 91.25032043]
[275.90744019 105.94461060]
[275.95834351 120.94452667]
[273.04516602 135.65892029]
[267.28271484 149.50790405]
[258.89813232 161.94569397]
[248.22181702 172.48211670]
[235.67451477 180.70193481]
[221.75073242 186.28121948]
[206.99920654 189.00006104]
[192.00126648 188.75134277]
[177.34799194 185.54486084]
[163.61686707 179.50697327]
[151.34901428 170.87562561]
[141.02793884 159.99099731]
[133.06130981 147.28393555]
[133.06130981 162.28393555]
[133.06130981 177.28393555]
[133.06130981 192.28393555]
[133.06130981 207.28393555]
[133.06130981 222.28393555]
[133.06130981 237.28393555]
[133.06130981 252.28393555]
[133.06130981 267.28393555]
[133.06130981 282.28393555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 111]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
