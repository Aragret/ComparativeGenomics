%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACUCCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGxxxxxxxxxxCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.43364716 162.39791870]
[125.20767212 151.89472961]
[116.95538330 139.36877441]
[108.70309448 126.84281158]
[100.45080566 114.31684875]
[88.03858948 107.88035583]
[87.02323151 93.93544006]
[78.77094269 81.40947723]
[70.51865387 68.88351440]
[62.26636505 56.35755539]
[54.01407623 43.83159256]
[45.76178741 31.30562973]
[32.73812866 38.75773239]
[19.27224731 45.37736130]
[5.41728544 51.13839722]
[-8.77207565 56.01810074]
[-23.23983574 59.99721527]
[-37.92890167 63.06003952]
[-52.78129578 65.19448090]
[-67.73840332 66.39212036]
[-82.74120331 66.64822388]
[-97.73047638 65.96178436]
[-112.64706421 64.33551788]
[-127.43210602 61.77583313]
[-142.02725220 58.29283524]
[-156.37489319 53.90027237]
[-170.41841125 48.61547852]
[-184.10238647 42.45931244]
[-197.37280273 35.45606232]
[-210.17729187 27.63337708]
[-222.46533203 19.02212143]
[-234.18841553 9.65628624]
[-245.30026245 -0.42716944]
[-255.75704956 -11.18844891]
[-265.51748657 -22.58508301]
[-274.54306030 -34.57209396]
[-282.79815674 -47.10217285]
[-290.25021362 -60.12586975]
[-296.86975098 -73.59178162]
[-302.63073730 -87.44677734]
[-307.51034546 -101.63616180]
[-311.48937988 -116.10394287]
[-314.55215454 -130.79302979]
[-316.68649292 -145.64543152]
[-317.88406372 -160.60253906]
[-318.14007568 -175.60534668]
[-317.45358276 -190.59461975]
[-315.82723999 -205.51119995]
[-313.26745605 -220.29621887]
[-309.78439331 -234.89135742]
[-305.39175415 -249.23896790]
[-300.10690308 -263.28247070]
[-293.95065308 -276.96640015]
[-286.94732666 -290.23678589]
[-279.12457275 -303.04122925]
[-270.51327515 -315.32922363]
[-261.14736938 -327.05224609]
[-251.06384277 -338.16406250]
[-240.30252075 -348.62078857]
[-228.90583801 -358.38116455]
[-216.91877747 -367.40667725]
[-204.38865662 -375.66171265]
[-191.36491394 -383.11367798]
[-177.89897156 -389.73318481]
[-164.04394531 -395.49404907]
[-149.85453796 -400.37362671]
[-135.38673401 -404.35256958]
[-120.69763184 -407.41525269]
[-105.84521484 -409.54953003]
[-90.88809204 -410.74700928]
[-75.88529205 -411.00296021]
[-60.89603043 -410.31637573]
[-45.97945404 -408.68994141]
[-31.19443893 -406.13012695]
[-16.59933281 -402.64697266]
[-2.25173473 -398.25424194]
[11.79172897 -392.96929932]
[25.47563553 -386.81298828]
[38.74598312 -379.80960083]
[51.55039215 -371.98678589]
[63.83833694 -363.37539673]
[75.56131744 -354.00946045]
[86.67307281 -343.92587280]
[97.12974548 -333.16448975]
[106.89006805 -321.76776123]
[115.91551971 -309.78063965]
[124.17048645 -297.25048828]
[131.62237549 -284.22671509]
[138.24180603 -270.76074219]
[144.00262451 -256.90567017]
[148.88209534 -242.71623230]
[152.86099243 -228.24841309]
[155.92358398 -213.55929565]
[158.05778503 -198.70687866]
[159.25518799 -183.74974060]
[159.51106262 -168.74694824]
[158.82438660 -153.75769043]
[157.19789124 -138.84112549]
[154.63796997 -124.05611420]
[151.15475464 -109.46102905]
[146.76196289 -95.11344910]
[141.47694397 -81.07001495]
[135.32057190 -67.38613892]
[128.31710815 -54.11583328]
[120.49422455 -41.31146240]
[111.88278198 -29.02356148]
[102.51676178 -17.30062866]
[92.43312836 -6.18892860]
[81.67168427 4.26768732]
[70.27490234 14.02795029]
[58.28774643 23.05334091]
[66.54003906 35.57930374]
[74.79232788 48.10526657]
[83.04461670 60.63122559]
[91.29690552 73.15718842]
[99.54919434 85.68315125]
[111.96141052 92.11964417]
[112.97676849 106.06455994]
[121.22905731 118.59052277]
[129.48135376 131.11648560]
[137.73364258 143.64244080]
[151.63635254 137.88822937]
[166.37687683 134.86935425]
[181.42233276 134.69497681]
[196.22886658 137.37138367]
[210.26121521 142.80183411]
[223.01211548 150.79002380]
[234.02062988 161.04716492]
[242.88882446 173.20248413]
[249.29609680 186.81655884]
[253.01083374 201.39727783]
[253.89875793 216.41754150]
[251.92778015 231.33436584]
[247.16912842 245.60852051]
[239.79483032 258.72402954]
[230.07145691 270.20672607]
[218.35052490 279.64157104]
[205.05572510 286.68746948]
[190.66764832 291.08972168]
[175.70643616 292.68920898]
[160.71289062 291.42807007]
[146.22906494 287.35192871]
[132.77850342 280.60812378]
[120.84744263 271.44042969]
[110.86719513 260.18026733]
[103.19853973 247.23469543]
[98.11868286 233.07165527]
[95.81126404 218.20315552]
[96.35969543 203.16668701]
[99.74414825 188.50578308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 121]
[3 120]
[4 119]
[5 118]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
