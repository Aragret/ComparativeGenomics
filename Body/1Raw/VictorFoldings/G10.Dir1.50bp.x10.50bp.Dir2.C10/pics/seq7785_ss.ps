%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUUCCUAGAACCAGGCGACCUGCGACUCCUUGACGUUGACAAUCGAGUAGUACUCCCGAUxxxxxxxxxxCUCACUUCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUAUGCCUAGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.27265167 235.09016418]
[94.96467590 220.09332275]
[94.65670013 205.09648132]
[94.34871674 190.09963989]
[94.04074097 175.10279846]
[93.73276520 160.10597229]
[93.42478943 145.10913086]
[93.11680603 130.11228943]
[92.80883026 115.11545563]
[85.98526001 101.75735474]
[74.01499939 92.71783447]
[62.04473877 83.67831421]
[50.07448196 74.63879395]
[38.10422134 65.59927368]
[26.13396454 56.55975723]
[14.16370678 47.52023697]
[2.19344807 38.48071671]
[-9.77681065 29.44119644]
[-21.74706841 20.40167809]
[-33.71732712 11.36215782]
[-47.59020615 5.65749454]
[-62.45680618 3.66143751]
[-77.30213165 5.81001663]
[-90.99275208 11.93919086]
[-104.68338013 18.06836510]
[-118.37400818 24.19753838]
[-130.35990906 36.18813705]
[-145.19993591 27.98997307]
[-141.43029785 11.46042156]
[-124.50318146 10.50691319]
[-110.81255341 4.37773895]
[-97.12192535 -1.75143492]
[-83.43130493 -7.88060904]
[-83.58528900 -15.37902832]
[-83.89327240 -30.37586594]
[-84.04725647 -37.87428665]
[-97.97797394 -43.43622208]
[-111.90869141 -48.99816132]
[-125.83940887 -54.56009674]
[-143.96501160 -51.47899628]
[-154.32090759 -65.61405945]
[-168.36288452 -70.88880157]
[-182.40486145 -76.16353607]
[-195.93719482 -68.32709503]
[-211.33174133 -71.07335663]
[-221.31965637 -83.10562897]
[-221.18496704 -98.74263000]
[-210.99125671 -110.60105133]
[-195.55168152 -113.08171082]
[-182.15634155 -105.01332092]
[-177.13011169 -90.20551300]
[-163.08813477 -84.93077087]
[-149.04615784 -79.65603638]
[-137.86537170 -84.37325287]
[-126.09925079 -80.04548645]
[-120.27747345 -68.49081421]
[-106.34675598 -62.92887497]
[-92.41603851 -57.36693954]
[-78.48532104 -51.80500031]
[-58.55710983 -31.76267624]
[-60.46075058 -11.20516109]
[-45.59415054 -9.20910454]
[-57.28622818 -18.60566521]
[-66.54730225 -30.40534782]
[-72.89642334 -43.99536896]
[-76.00386810 -58.66996384]
[-75.70825958 -73.66705322]
[-72.02494812 -88.20779419]
[-65.14521790 -101.53706360]
[-55.42634583 -112.96263123]
[-43.37306213 -121.89114380]
[-29.61132050 -127.85892487]
[-14.85579491 -130.55604553]
[0.12722147 -129.84245300]
[14.55962753 -125.75520325]
[27.69191360 -118.50653839]
[38.84209061 -108.47291565]
[47.43110275 -96.17540741]
[53.01290512 -82.25263977]
[55.29761887 -67.42765808]
[54.16659546 -52.47035599]
[49.67856979 -38.15750885]
[42.06661606 -25.23240852]
[31.72604179 -14.36629009]
[19.19385719 -6.12345505]
[5.12088585 -0.93197244]
[-9.76202869 0.93855178]
[-24.67780685 -0.60810059]
[-12.70754910 8.43141937]
[-0.73729092 17.47093773]
[11.23296738 26.51045799]
[23.20322609 35.54997635]
[35.17348480 44.58949661]
[47.14374161 53.62901688]
[59.11400223 62.66853714]
[71.08425903 71.70805359]
[83.05451965 80.74757385]
[95.02477264 89.78709412]
[104.30040741 81.16362000]
[121.40828705 83.08901978]
[136.34429932 81.70499420]
[149.37170410 72.72737885]
[162.75859070 79.25734711]
[177.69459534 77.87332153]
[192.63061523 76.48929596]
[207.56661987 75.10527039]
[212.84364319 60.78340530]
[223.81806946 50.17563629]
[238.31091309 45.38814545]
[253.44462585 47.37148666]
[266.21438599 55.73187256]
[274.08474731 68.80934143]
[275.49304199 84.00734711]
[270.15966797 98.30831909]
[259.14355469 108.87278748]
[244.63197327 113.60317230]
[229.50619507 111.56024933]
[216.76945496 103.14964294]
[208.95065308 90.04128265]
[194.01463318 91.42530823]
[179.07862854 92.80933380]
[164.14260864 94.19335938]
[152.18353271 103.07198334]
[137.72833252 96.64100647]
[122.79231262 98.02503204]
[136.56343079 103.97113800]
[150.33456421 109.91725159]
[164.10568237 115.86335754]
[179.03245544 117.34368896]
[192.20326233 124.52210999]
[201.53703308 136.26437378]
[205.55895996 150.71511841]
[203.63354492 165.59103394]
[196.06501770 178.54161072]
[184.04927063 187.52056885]
[169.48486328 191.10917664]
[154.67308044 188.74038696]
[141.95428467 180.78851318]
[133.33815002 168.50999451]
[130.18609619 153.84741211]
[122.72595978 140.83409119]
[115.26581573 127.82078552]
[107.80567169 114.80747223]
[108.11364746 129.80430603]
[108.42162323 144.80114746]
[108.72960663 159.79798889]
[109.03758240 174.79483032]
[109.34555817 189.79167175]
[109.65353394 204.78849792]
[109.96151733 219.78533936]
[110.26949310 234.78218079]
[112.85526276 253.99060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 62]
[22 61]
[23 33]
[24 32]
[25 31]
[26 30]
[36 59]
[37 58]
[38 57]
[39 56]
[41 53]
[42 52]
[43 51]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
