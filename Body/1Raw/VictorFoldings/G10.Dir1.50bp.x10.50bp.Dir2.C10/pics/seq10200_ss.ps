%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUxxxxxxxxxxUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCAAACCCCCUGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.04461670 356.03140259]
[142.73255920 341.03463745]
[142.42050171 326.03787231]
[142.10844421 311.04113770]
[141.79638672 296.04437256]
[141.48432922 281.04763794]
[141.17227173 266.05087280]
[140.86021423 251.05412292]
[140.54817200 236.05735779]
[137.60267639 221.34939575]
[132.11564636 207.38900757]
[126.62861633 193.42861938]
[113.41629791 191.27673340]
[102.91873169 182.79661560]
[97.95809937 170.13002014]
[99.93611908 156.56164551]
[108.44001007 145.66748047]
[103.24459839 131.59596252]
[98.04917908 117.52444458]
[85.11112213 109.93453217]
[70.29336548 112.26564026]
[55.47560883 114.59674072]
[40.65785217 116.92784882]
[38.90547943 131.92224121]
[33.17158508 145.88737488]
[23.88166237 157.78694153]
[11.72508526 166.73793030]
[-2.39604974 172.07611084]
[-17.43385887 173.40534973]
[-32.27243805 170.62701416]
[-45.81066513 163.94726562]
[-57.04391098 153.86180115]
[-65.13860321 141.11901855]
[-69.49404907 126.66450500]
[-69.78705597 111.57090759]
[-65.99588013 96.95825958]
[-58.40184402 83.91091156]
[-47.56848145 73.39707184]
[-34.29970169 66.19692993]
[-19.58013153 62.84479141]
[-4.50206280 63.58940125]
[9.81561089 68.37550354]
[22.31042290 76.84794617]
[32.05517578 88.37800598]
[38.32674789 102.11008453]
[53.14450455 99.77898407]
[67.96226501 97.44787598]
[82.78002167 95.11677551]
[93.65884399 84.78957367]
[96.75717163 70.11304474]
[99.85549164 55.43651962]
[102.95381165 40.75999451]
[89.54735565 27.19683075]
[86.96704102 8.45173359]
[96.06602478 -7.96879005]
[113.05631256 -15.59689713]
[115.23314667 -30.43810272]
[117.40998840 -45.27930832]
[119.58682251 -60.12051392]
[121.76365662 -74.96172333]
[116.11098480 -89.73865509]
[125.61338806 -101.20833588]
[127.79022217 -116.04954529]
[129.96705627 -130.89074707]
[115.81656647 -136.02381897]
[102.98919678 -143.90058899]
[92.01022339 -154.19850159]
[83.32922363 -166.49586487]
[77.30168915 -180.28910828]
[74.17443085 -195.01341248]
[74.07551575 -210.06582642]
[77.00899506 -224.82995605]
[82.85474396 -238.70123291]
[91.37338257 -251.11161804]
[102.21607208 -261.55291748]
[114.93881989 -269.59759521]
[129.02062988 -274.91619873]
[143.88485718 -277.29092407]
[158.92285156 -276.62454224]
[173.51876831 -272.94436646]
[187.07495117 -266.40106201]
[199.03627014 -257.26257324]
[208.91291809 -245.90315247]
[216.30044556 -232.78791809]
[220.89634705 -218.45394897]
[222.51242065 -203.48822021]
[221.08248901 -188.50355530]
[216.66510010 -174.11357117]
[209.44116211 -160.90753174]
[199.70646667 -149.42620850]
[187.85966492 -140.13977051]
[174.38586426 -133.42846680]
[159.83680725 -129.56713867]
[144.80827332 -128.71391296]
[142.63142395 -113.87270355]
[140.45458984 -99.03150177]
[146.26296997 -85.31610870]
[136.60485840 -72.78488159]
[134.42802429 -57.94367599]
[132.25119019 -43.10247040]
[130.07435608 -28.26126671]
[127.89751434 -13.42006016]
[137.29020691 -7.20249653]
[143.68804932 2.13087344]
[146.12178040 13.23449326]
[144.19699097 24.48984337]
[138.15751648 34.24136353]
[128.85528564 41.03996277]
[117.63034058 43.85831451]
[114.53201294 58.53483963]
[111.43369293 73.21136475]
[108.33537292 87.88789368]
[114.45061493 94.21611786]
[116.07783508 103.36972046]
[112.12069702 112.32902527]
[117.31611633 126.40054321]
[122.51153564 140.47206116]
[138.82652283 144.81639099]
[149.25271606 157.88453674]
[149.85304260 174.42555237]
[140.58900452 187.94158936]
[146.07603455 201.90197754]
[151.56307983 215.86236572]
[154.32023621 201.11795044]
[161.63575745 188.02279663]
[172.74563599 177.94456482]
[186.48954773 171.93582153]
[201.43208313 170.62411499]
[216.01266479 174.14643860]
[228.70849609 182.13493347]
[238.19363403 193.75526428]
[243.47744751 207.79382324]
[244.00811768 222.78443909]
[239.73020935 237.16148376]
[231.09051514 249.42344666]
[218.99133301 258.28967285]
[204.69633484 262.83419800]
[189.69844055 262.58239746]
[175.56405640 257.56054688]
[163.76933289 248.29313660]
[155.54492188 235.74530029]
[155.85697937 250.74206543]
[156.16903687 265.73880005]
[156.48109436 280.73556519]
[156.79313660 295.73233032]
[157.10519409 310.72906494]
[157.41725159 325.72583008]
[157.72930908 340.72259521]
[158.04136658 355.71932983]
[160.63237000 374.92706299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 123]
[11 122]
[12 121]
[17 117]
[18 116]
[19 115]
[20 48]
[21 47]
[22 46]
[23 45]
[49 112]
[50 111]
[51 110]
[52 109]
[56 102]
[57 101]
[58 100]
[59 99]
[60 98]
[62 96]
[63 95]
[64 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
