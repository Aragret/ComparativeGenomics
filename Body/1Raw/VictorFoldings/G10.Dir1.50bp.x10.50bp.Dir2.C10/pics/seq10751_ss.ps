%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAAACAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUUCCUAAUUACCAUACUAAUCUUxxxxxxxxxxCAAAUAUCAUUCUGAGGGGCCACAGUAAUUACAAACUUACUAUCCGCCAUCCCAUACAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 247.02468872]
[92.50000000 232.02468872]
[92.50000000 217.02468872]
[92.50000000 202.02468872]
[92.50000000 187.02468872]
[92.50000000 172.02468872]
[92.50000000 157.02468872]
[92.50000000 142.02468872]
[92.50000000 127.02469635]
[92.50000000 112.02469635]
[86.01183319 98.50050354]
[74.31221008 89.11334229]
[77.60208893 103.74812317]
[73.26538086 118.10754395]
[62.42463303 128.47471619]
[47.88594437 132.16612244]
[33.41260910 128.22627258]
[22.75099945 117.67495728]
[18.66084862 103.24337006]
[22.20087433 88.66708374]
[32.45475388 77.71911621]
[46.76830292 73.23332214]
[61.43640518 76.37078857]
[51.92804718 64.76944733]
[42.41968918 53.16810608]
[32.91133118 41.56676483]
[20.46162796 49.95362473]
[7.28126574 57.13780594]
[-6.51392603 63.05618286]
[-20.80271149 67.65673065]
[-35.45951843 70.89903259]
[-50.35553741 72.75458527]
[-65.35986328 73.20707703]
[-80.34062958 72.25254059]
[-95.16618347 69.89936829]
[-109.70623016 66.16822815]
[-123.83300018 61.09191513]
[-137.42233276 54.71504593]
[-150.35481262 47.09365463]
[-162.51676941 38.29472351]
[-173.80133057 28.39558029]
[-184.10932922 17.48321915]
[-193.35017395 5.65354156]
[-201.44265747 -6.98949099]
[-208.31564331 -20.33476830]
[-213.90875244 -34.26501083]
[-218.17282104 -48.65779495]
[-221.07037354 -63.38663101]
[-222.57594299 -78.32208252]
[-222.67631531 -93.33289337]
[-221.37059021 -108.28713989]
[-218.67024231 -123.05340576]
[-214.59902954 -137.50192261]
[-209.19268799 -151.50570679]
[-202.49876404 -164.94169617]
[-194.57608032 -177.69181824]
[-185.49424744 -189.64399719]
[-175.33308411 -200.69322205]
[-164.18190002 -210.74238586]
[-152.13868713 -219.70315552]
[-139.30928040 -227.49679565]
[-125.80643463 -234.05480957]
[-111.74880981 -239.31958008]
[-97.25995636 -243.24481201]
[-82.46719360 -245.79602051]
[-67.50052643 -246.95079041]
[-52.49149704 -246.69897461]
[-37.57199860 -245.04278564]
[-22.87314606 -241.99676514]
[-8.52411842 -237.58769226]
[5.34898043 -231.85432434]
[18.62423134 -224.84703064]
[31.18496895 -216.62739563]
[42.92080688 -207.26765442]
[53.72860336 -196.85008240]
[63.51338577 -185.46620178]
[72.18915558 -173.21607971]
[79.67967224 -160.20736694]
[85.91910553 -146.55438232]
[90.85262299 -132.37712097]
[94.43685913 -117.80016327]
[96.64033508 -102.95162201]
[97.44366455 -87.96199036]
[96.83979797 -72.96299744]
[94.83404541 -58.08645630]
[91.44402313 -43.46310806]
[86.69953918 -29.22146988]
[80.64227295 -15.48669529]
[73.32546997 -2.37949109]
[64.81341553 9.98495483]
[55.18093491 21.49798012]
[44.51267242 32.05840683]
[54.02103043 43.65974808]
[63.52938843 55.26108932]
[73.03775024 66.86242676]
[83.69937134 77.41371918]
[95.39899445 86.80088043]
[123.17089844 81.03306580]
[138.17008972 80.87702942]
[153.16928101 80.72099304]
[162.75149536 66.82015991]
[178.56643677 61.40082169]
[194.34440613 66.40296173]
[203.95370483 79.67574310]
[218.94641113 79.20770264]
[233.93910217 78.73966217]
[248.93179321 78.27162170]
[263.92449951 77.80357361]
[272.53735352 64.89628601]
[287.10366821 59.54817963]
[302.02236938 63.81570816]
[311.55694580 76.05792236]
[312.04110718 91.56744385]
[303.28872681 104.38053894]
[288.66525269 109.57032013]
[273.79373169 105.14119720]
[264.39254761 92.79627228]
[249.39984131 93.26431274]
[234.40713501 93.73235321]
[219.41444397 94.20040131]
[204.42175293 94.66844177]
[197.94836426 106.38557434]
[186.42971802 113.41637421]
[172.83250427 113.82421112]
[160.72157288 107.39470673]
[153.32531738 95.72018433]
[138.32612610 95.87622070]
[123.32693481 96.03225708]
[136.56477356 103.08631134]
[149.80259705 110.14037323]
[164.38398743 113.65933990]
[175.20106506 124.05121613]
[179.30160522 138.47984314]
[175.56649780 153.00737000]
[165.01515198 163.66893005]
[150.52720642 167.55477905]
[136.05674744 163.60437012]
[125.55304718 152.89585876]
[121.88276672 138.35217285]
[114.69138336 125.18843079]
[107.50000000 112.02469635]
[107.50000000 127.02469635]
[107.50000000 142.02468872]
[107.50000000 157.02468872]
[107.50000000 172.02468872]
[107.50000000 187.02468872]
[107.50000000 202.02468872]
[107.50000000 217.02468872]
[107.50000000 232.02468872]
[107.50000000 247.02468872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 97]
[12 96]
[23 95]
[24 94]
[25 93]
[26 92]
[98 128]
[99 127]
[100 126]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
