%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGGGGCCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUAxxxxxxxxxxCACCAAUCACAUGCCUAUCAUAUAGUAAAACCCAGCCCAUGACCCCUAACAGGGGCCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.64761353]
[92.50000000 227.64761353]
[92.50000000 212.64761353]
[92.50000000 197.64761353]
[92.50000000 182.64761353]
[92.50000000 167.64761353]
[92.50000000 152.64761353]
[92.50000000 137.64761353]
[92.50000000 122.64762115]
[92.50000000 107.64762115]
[90.47766876 92.78457642]
[86.46992493 78.32988739]
[82.46218872 63.87519455]
[78.45444489 49.42050934]
[74.44670105 34.96582031]
[63.30352020 23.73461151]
[67.35903168 9.40275669]
[63.35129166 -5.05193233]
[59.34355164 -19.50662041]
[44.66291809 -16.40411949]
[29.81779861 -14.22031403]
[14.86563110 -12.96365070]
[-0.13573900 -12.63899231]
[-15.12827492 -13.24759483]
[-30.05397224 -14.78710365]
[-44.85508347 -17.25156212]
[-59.47435379 -20.63143539]
[-73.85520935 -24.91365051]
[-87.94203186 -30.08163452]
[-101.68030548 -36.11539841]
[-115.01689148 -42.99159622]
[-127.90017700 -50.68362808]
[-140.28033447 -59.16173172]
[-152.10946655 -68.39310455]
[-163.34179688 -78.34204102]
[-173.93386841 -88.97003937]
[-183.84472656 -100.23598480]
[-193.03599548 -112.09629822]
[-201.47213745 -124.50508118]
[-209.12051392 -137.41433716]
[-215.95152283 -150.77412415]
[-221.93873596 -164.53274536]
[-227.05900574 -178.63697815]
[-231.29251099 -193.03225708]
[-234.62286377 -207.66288757]
[-237.03720093 -222.47225952]
[-238.52616882 -237.40307617]
[-239.08401489 -252.39758301]
[-238.70857239 -267.39776611]
[-237.40130615 -282.34561157]
[-235.16725159 -297.18322754]
[-232.01506042 -311.85330200]
[-227.95693970 -326.29898071]
[-223.00859070 -340.46444702]
[-217.18914795 -354.29486084]
[-210.52111816 -367.73675537]
[-203.03030396 -380.73806763]
[-194.74569702 -393.24853516]
[-185.69935608 -405.21975708]
[-175.92623901 -416.60537720]
[-165.46420288 -427.36141968]
[-154.35369873 -437.44622803]
[-142.63771057 -446.82077026]
[-130.36158752 -455.44882202]
[-117.57279205 -463.29696655]
[-104.32082367 -470.33483887]
[-90.65694427 -476.53524780]
[-76.63401794 -481.87417603]
[-62.30630112 -486.33096313]
[-47.72922134 -489.88836670]
[-32.95917511 -492.53265381]
[-18.05330467 -494.25357056]
[-3.06927872 -495.04446411]
[11.93493080 -494.90228271]
[26.90127563 -493.82754517]
[41.77185440 -491.82443237]
[56.48913193 -488.90072632]
[70.99617767 -485.06768799]
[85.23685455 -480.34014893]
[99.15608215 -474.73641968]
[112.69999695 -468.27816772]
[125.81620026 -460.99038696]
[138.45394897 -452.90130615]
[150.56436157 -444.04214478]
[162.10058594 -434.44723511]
[173.01795959 -424.15368652]
[183.27427673 -413.20129395]
[192.82984924 -401.63247681]
[201.64768982 -389.49197388]
[209.69371033 -376.82675171]
[216.93676758 -363.68579102]
[223.34884644 -350.11996460]
[228.90513611 -336.18173218]
[233.58415222 -321.92501831]
[237.36776733 -307.40502930]
[240.24134827 -292.67785645]
[242.19380188 -277.80056763]
[243.21754456 -262.83062744]
[243.30863953 -247.82603455]
[242.46672058 -232.84478760]
[240.69505310 -217.94487000]
[238.00048828 -203.18391418]
[234.39343262 -188.61903381]
[229.88787842 -174.30656433]
[224.50122070 -160.30191040]
[218.25433350 -146.65922546]
[211.17135620 -133.43130493]
[203.27969360 -120.66931152]
[194.60990906 -108.42263794]
[185.19549561 -96.73864746]
[175.07292175 -85.66255188]
[164.28132629 -75.23720551]
[152.86245728 -65.50293732]
[140.86050415 -56.49740219]
[128.32188416 -48.25545120]
[115.29513550 -40.80896759]
[101.83062744 -34.18675613]
[87.98046875 -28.41444588]
[73.79824066 -23.51436043]
[77.80597687 -9.05967236]
[81.81372070 5.39501619]
[92.67024231 15.59232712]
[88.90139008 30.95807838]
[92.90913391 45.41276550]
[96.91687012 59.86745453]
[100.92461395 74.32214355]
[104.93235016 88.77683258]
[109.83151245 74.59944916]
[119.99058533 63.56345367]
[133.71481323 57.50989914]
[148.71469116 57.44865417]
[162.48789978 63.38993835]
[172.73675537 74.34260559]
[177.75151062 88.47951508]
[176.69561768 103.44230652]
[169.74519348 116.73484802]
[158.05975342 126.13964844]
[143.58866882 130.08778381]
[128.74604797 127.92060089]
[116.00798035 119.99964905]
[107.50000000 107.64762115]
[107.50000000 122.64762115]
[107.50000000 137.64761353]
[107.50000000 152.64761353]
[107.50000000 167.64761353]
[107.50000000 182.64761353]
[107.50000000 197.64761353]
[107.50000000 212.64761353]
[107.50000000 227.64761353]
[107.50000000 242.64761353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[17 121]
[18 120]
[19 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
