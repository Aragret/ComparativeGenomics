%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUxxxxxxxxxxAAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCAGAUAGGGGUCCCUUGACCACCAUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.24482727 273.31198120]
[101.24482727 258.31198120]
[101.24482727 243.31198120]
[101.24482727 228.31198120]
[101.24482727 213.31198120]
[101.24482727 198.31198120]
[101.24482727 183.31198120]
[101.24482727 168.31198120]
[101.24482727 153.31198120]
[101.24482727 138.31198120]
[82.59856415 131.33575439]
[71.12893677 116.70248413]
[69.13804626 99.53935242]
[75.87275696 85.06348419]
[65.65927887 74.07781982]
[55.44580078 63.09215927]
[45.23231888 52.10649490]
[33.49142075 61.45390320]
[21.06943130 69.87512207]
[8.03924751 77.32072449]
[-5.52266073 83.74703217]
[-19.53670692 89.11631775]
[-33.92065048 93.39707947]
[-48.59008026 96.56419373]
[-63.45890808 98.59907532]
[-78.43987274 99.48977661]
[-93.44506836 99.23108673]
[-108.38642883 97.82450104]
[-123.17627716 95.27828979]
[-137.72781372 91.60739136]
[-151.95564270 86.83335114]
[-165.77627563 80.98417664]
[-179.10861206 74.09420013]
[-191.87438965 66.20385742]
[-203.99871826 57.35945129]
[-215.41043091 47.61288071]
[-226.04255676 37.02134705]
[-235.83270264 25.64700317]
[-244.72343445 13.55660152]
[-252.66255188 0.82109410]
[-259.60345459 -12.48478127]
[-265.50546265 -26.28293991]
[-270.33389282 -40.49240875]
[-274.06042480 -55.02979660]
[-276.66320801 -69.80979919]
[-278.12692261 -84.74566650]
[-278.44302368 -99.74976349]
[-277.60961914 -114.73402405]
[-275.63165283 -129.61053467]
[-272.52066040 -144.29196167]
[-268.29495239 -158.69218445]
[-262.97930908 -172.72665405]
[-256.60491943 -186.31304932]
[-249.20922852 -199.37162781]
[-240.83558655 -211.82572937]
[-231.53315735 -223.60231018]
[-221.35653687 -234.63221741]
[-210.36543274 -244.85075378]
[-198.62435913 -254.19793701]
[-186.20220947 -262.61892700]
[-173.17187500 -270.06427002]
[-159.60984802 -276.49032593]
[-145.59570312 -281.85934448]
[-131.21166992 -286.13983154]
[-116.54219055 -289.30667114]
[-101.67332458 -291.34127808]
[-86.69233704 -292.23168945]
[-71.68714905 -291.97271729]
[-56.74581528 -290.56585693]
[-41.95601654 -288.01934814]
[-27.40454865 -284.34817505]
[-13.17680550 -279.57388306]
[0.64371800 -273.72442627]
[13.97591686 -266.83419800]
[26.74155045 -258.94363403]
[38.86570358 -250.09898376]
[50.27722931 -240.35220337]
[60.90915680 -229.76046753]
[70.69908905 -218.38594055]
[79.58958435 -206.29536438]
[87.52846527 -193.55970764]
[94.46913147 -180.25370789]
[100.37086487 -166.45542908]
[105.19903564 -152.24586487]
[108.92529297 -137.70840454]
[111.52777863 -122.92835999]
[112.99121857 -107.99246216]
[113.30702972 -92.98836517]
[112.47335052 -78.00411224]
[110.49507904 -63.12764740]
[107.38382721 -48.44626999]
[103.15784454 -34.04613876]
[97.84194183 -20.01175690]
[91.46730042 -6.42548561]
[84.07134247 6.63294315]
[75.69747162 19.08689690]
[66.39482117 30.86329079]
[56.21798706 41.89301300]
[66.43146515 52.87867737]
[76.64494324 63.86434174]
[86.85842133 74.85000610]
[107.03501129 69.09556580]
[128.04989624 79.04393005]
[138.25448608 102.43965912]
[153.24717712 102.90770721]
[168.23988342 103.37574768]
[183.23257446 103.84378815]
[198.22526550 104.31182861]
[213.21797180 104.77987671]
[221.87460327 92.01013947]
[236.06983948 85.96870422]
[251.27401733 88.58337402]
[262.63555908 99.01981354]
[266.52899170 113.94779205]
[261.71197510 128.60385132]
[249.72161865 138.31127930]
[234.38394165 139.97250366]
[220.59318542 133.05740356]
[212.74992371 119.77256775]
[197.75723267 119.30452728]
[182.76452637 118.83648682]
[167.77183533 118.36844635]
[152.77914429 117.90039825]
[137.78643799 117.43235779]
[132.40104675 122.65226746]
[145.33398438 130.25088501]
[158.26692200 137.84951782]
[171.19984436 145.44815063]
[185.74542236 149.11235046]
[196.42984009 159.64054871]
[200.30789185 174.13058472]
[196.31056213 188.58815002]
[185.53971863 199.02792358]
[170.96444702 202.57212830]
[156.60250854 198.24377441]
[146.41287231 187.23597717]
[143.20437622 172.58329773]
[136.01300049 159.41955566]
[128.82160950 146.25581360]
[121.63023376 133.09207153]
[116.24482727 138.31198120]
[116.24482727 153.31198120]
[116.24482727 168.31198120]
[116.24482727 183.31198120]
[116.24482727 198.31198120]
[116.24482727 213.31198120]
[116.24482727 228.31198120]
[116.24482727 243.31198120]
[116.24482727 258.31198120]
[116.24482727 273.31198120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 101]
[15 100]
[16 99]
[17 98]
[104 124]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
