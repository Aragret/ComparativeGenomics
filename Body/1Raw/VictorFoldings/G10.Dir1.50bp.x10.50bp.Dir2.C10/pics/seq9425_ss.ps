%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUCUUCUUAGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCxxxxxxxxxxCCCACCCCAGUCUCAGCCCUACUCCACUCAAGCACUAUAGUUGUAGCAGGAAUCUUCUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.22595215]
[92.50000000 291.22595215]
[92.50000000 276.22595215]
[92.50000000 261.22595215]
[92.50000000 246.22593689]
[92.50000000 231.22593689]
[92.50000000 216.22593689]
[92.50000000 201.22593689]
[92.50000000 186.22593689]
[92.50000000 171.22593689]
[77.85705566 168.11074829]
[64.18161774 162.01957703]
[52.07120132 153.21856689]
[42.05495453 142.09223938]
[34.57052612 129.12677002]
[29.94492912 114.88865662]
[28.38027573 100.00000000]
[29.94492912 85.11134338]
[34.57052612 70.87322998]
[42.05495453 57.90776062]
[52.07120132 46.78144073]
[64.18161774 37.98041916]
[77.85705566 31.88924408]
[92.50000000 28.77405739]
[92.50000000 13.77405739]
[92.50000000 -1.22594273]
[92.50000000 -16.22594261]
[92.50000000 -31.22594261]
[84.76270294 -45.02611542]
[92.50000000 -57.75338745]
[92.50000000 -72.75338745]
[77.53038025 -73.79995728]
[62.67023849 -75.88820648]
[47.99195862 -79.00796509]
[33.56706238 -83.14403534]
[19.46582222 -88.27626038]
[5.75694132 -94.37964630]
[-7.49279356 -101.42444611]
[-20.21883011 -109.37635040]
[-32.35916519 -118.19660950]
[-43.85465622 -127.84224701]
[-54.64929581 -138.26628113]
[-64.69049072 -149.41792297]
[-73.92932129 -161.24284363]
[-82.32078552 -173.68342590]
[-89.82398224 -186.67907715]
[-96.40237427 -200.16645813]
[-102.02390289 -214.07986450]
[-106.66118622 -228.35153198]
[-110.29161835 -242.91191101]
[-112.89752960 -257.69006348]
[-114.46621704 -272.61401367]
[-114.99003601 -287.61102295]
[-114.46643066 -302.60803223]
[-112.89795685 -317.53201294]
[-110.29225922 -332.31021118]
[-106.66203308 -346.87063599]
[-102.02495575 -361.14236450]
[-96.40362549 -375.05584717]
[-89.82543182 -388.54333496]
[-82.32241058 -401.53909302]
[-73.93113708 -413.97979736]
[-64.69246674 -425.80484009]
[-54.65143585 -436.95663452]
[-43.85694504 -447.38079834]
[-32.36159515 -457.02661133]
[-20.22138405 -465.84704590]
[-7.49546099 -473.79913330]
[5.75417280 -480.84411621]
[19.46296692 -486.94769287]
[33.56413269 -492.08013916]
[47.98897171 -496.21640015]
[62.66720581 -499.33639526]
[77.52732086 -501.42483521]
[92.49692535 -502.47161865]
[107.50307465 -502.47161865]
[122.47267914 -501.42483521]
[137.33279419 -499.33639526]
[152.01103210 -496.21640015]
[166.43586731 -492.08013916]
[180.53703308 -486.94769287]
[194.24583435 -480.84411621]
[207.49546814 -473.79913330]
[220.22138977 -465.84704590]
[232.36158752 -457.02661133]
[243.85694885 -447.38079834]
[254.65142822 -436.95663452]
[264.69247437 -425.80484009]
[273.93112183 -413.97979736]
[282.32241821 -401.53909302]
[289.82543945 -388.54333496]
[296.40362549 -375.05584717]
[302.02496338 -361.14236450]
[306.66201782 -346.87063599]
[310.29226685 -332.31021118]
[312.89794922 -317.53201294]
[314.46643066 -302.60803223]
[314.99002075 -287.61102295]
[314.46621704 -272.61401367]
[312.89752197 -257.69006348]
[310.29162598 -242.91191101]
[306.66119385 -228.35153198]
[302.02389526 -214.07986450]
[296.40237427 -200.16645813]
[289.82397461 -186.67907715]
[282.32077026 -173.68342590]
[273.92932129 -161.24284363]
[264.69049072 -149.41792297]
[254.64929199 -138.26628113]
[243.85466003 -127.84224701]
[232.35916138 -118.19660950]
[220.21882629 -109.37635040]
[207.49279785 -101.42444611]
[194.24305725 -94.37964630]
[180.53417969 -88.27626038]
[166.43293762 -83.14403534]
[152.00804138 -79.00796509]
[137.32975769 -75.88820648]
[122.46961975 -73.79995728]
[107.50000000 -72.75338745]
[107.50000000 -57.75338745]
[115.23729706 -45.02611542]
[107.50000000 -31.22594261]
[107.50000000 -16.22594261]
[107.50000000 -1.22594273]
[107.50000000 13.77405739]
[107.50000000 28.77405739]
[122.14294434 31.88924408]
[135.81838989 37.98041916]
[147.92880249 46.78144073]
[157.94503784 57.90776062]
[165.42947388 70.87322998]
[170.05506897 85.11134338]
[171.61972046 100.00000000]
[170.05506897 114.88865662]
[165.42947388 129.12677002]
[157.94503784 142.09223938]
[147.92880249 153.21856689]
[135.81838989 162.01957703]
[122.14294434 168.11074829]
[107.50000000 171.22593689]
[107.50000000 186.22593689]
[107.50000000 201.22593689]
[107.50000000 216.22593689]
[107.50000000 231.22593689]
[107.50000000 246.22593689]
[107.50000000 261.22595215]
[107.50000000 276.22595215]
[107.50000000 291.22595215]
[107.50000000 306.22595215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[30 121]
[31 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
