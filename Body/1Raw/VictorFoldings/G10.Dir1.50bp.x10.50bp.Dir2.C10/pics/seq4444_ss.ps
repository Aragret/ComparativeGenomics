%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAAUCUCCAGCAUUCCCCCUCAAACCUAAGAAAUAUGUCUGAUAAAAGAGUUACUUUGAxxxxxxxxxxAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.00170898]
[92.50000000 291.00170898]
[92.50000000 276.00170898]
[92.50000000 261.00170898]
[92.50000000 246.00170898]
[92.50000000 231.00170898]
[92.50000000 216.00170898]
[92.50000000 201.00170898]
[92.50000000 186.00170898]
[92.50000000 171.00170898]
[77.03263092 167.60171509]
[62.69526672 160.87568665]
[50.19331360 151.15454102]
[40.14188385 138.91656494]
[33.03550339 124.76386261]
[29.22381210 109.39276886]
[28.89435005 93.55954742]
[32.06332779 78.04319763]
[38.57482529 63.60713577]
[48.10847473 50.96162033]
[60.19521713 40.72882462]
[74.24037933 33.41220093]
[89.55292511 29.37173653]
[88.92894745 14.38472080]
[88.30496979 -0.60229552]
[75.54964447 -9.23987579]
[70.38654327 -23.56453133]
[74.59851074 -38.01179123]
[86.36907196 -47.09980011]
[85.74509430 -62.08681488]
[85.12111664 -77.07382965]
[84.49713898 -92.06085205]
[83.87316132 -107.04786682]
[68.87434387 -107.54559326]
[53.95466614 -109.16279602]
[39.19755936 -111.89042664]
[24.68555260 -115.71324158]
[10.49980736 -120.60985565]
[-3.28034520 -126.55288696]
[-16.57783890 -133.50909424]
[-29.31830978 -141.43959045]
[-41.43050385 -150.30000305]
[-52.84668732 -160.04078674]
[-63.50301361 -170.60748291]
[-73.33988953 -181.94097900]
[-82.30229950 -193.97789001]
[-90.34012604 -206.65092468]
[-97.40841675 -219.88917542]
[-103.46763611 -233.61863708]
[-108.48390198 -247.76251221]
[-112.42916870 -262.24169922]
[-115.28135681 -276.97525024]
[-117.02453613 -291.88073730]
[-117.64893341 -306.87481689]
[-117.15107727 -321.87362671]
[-115.53374481 -336.79330444]
[-112.80597687 -351.55038452]
[-108.98303986 -366.06234741]
[-104.08629608 -380.24804688]
[-98.14314270 -394.02813721]
[-91.18681335 -407.32559204]
[-83.25621796 -420.06597900]
[-74.39569092 -432.17810059]
[-64.65480804 -443.59420776]
[-54.08802414 -454.25042725]
[-42.75444031 -464.08721924]
[-30.71744347 -473.04949951]
[-18.04434776 -481.08721924]
[-4.80602503 -488.15539551]
[8.92348766 -494.21450806]
[23.06740952 -499.23065186]
[37.54663849 -503.17578125]
[52.28020477 -506.02783203]
[67.18570709 -507.77087402]
[82.17978668 -508.39514160]
[97.17859650 -507.89715576]
[112.09825134 -506.27969360]
[126.85530853 -503.55178833]
[141.36724854 -499.72872925]
[155.55290222 -494.83187866]
[169.33294678 -488.88858032]
[182.63032532 -481.93215942]
[195.37065125 -474.00143433]
[207.48269653 -465.14080811]
[218.89871216 -455.39981079]
[229.55484009 -444.83294678]
[239.39152527 -433.49926758]
[248.35371399 -421.46218872]
[256.39132690 -408.78903198]
[263.45938110 -395.55062866]
[269.51834106 -381.82107544]
[274.53436279 -367.67712402]
[278.47937012 -353.19784546]
[281.33132935 -338.46426392]
[283.07421875 -323.55874634]
[283.69836426 -308.56463623]
[283.20025635 -293.56585693]
[281.58264160 -278.64620972]
[278.85461426 -263.88916016]
[275.03143311 -249.37727356]
[270.13442993 -235.19165039]
[264.19104004 -221.41165161]
[257.23446655 -208.11434937]
[249.30364990 -195.37408447]
[240.44291687 -183.26213074]
[230.70182800 -171.84620667]
[220.13485718 -161.19015503]
[208.80110168 -151.35357666]
[196.76394653 -142.39147949]
[184.09069824 -134.35398865]
[170.85226440 -127.28605652]
[157.12263489 -121.22719574]
[142.97862244 -116.21130371]
[128.49932861 -112.26642609]
[113.76570892 -109.41461945]
[98.86017609 -107.67184448]
[99.48415375 -92.68482971]
[100.10813141 -77.69780731]
[100.73210907 -62.71079254]
[101.35608673 -47.72377777]
[113.84134674 -39.64564514]
[119.23966980 -25.59850693]
[115.28517151 -10.89424515]
[103.29199219 -1.22627294]
[103.91596985 13.76074314]
[104.53994751 28.74775887]
[118.47969818 31.03628731]
[131.69601440 36.02457047]
[143.67150879 43.51733398]
[153.93737793 53.22124863]
[162.09173584 64.75643158]
[167.81535339 77.67131805]
[170.88417053 91.46031189]
[171.17805481 105.58361816]
[168.68550110 119.48833466]
[163.50407410 132.63014221]
[155.83662415 144.49455261]
[145.98330688 154.61711121]
[134.32986450 162.60154724]
[121.33248901 168.13528442]
[107.50000000 171.00170898]
[107.50000000 186.00170898]
[107.50000000 201.00170898]
[107.50000000 216.00170898]
[107.50000000 231.00170898]
[107.50000000 246.00170898]
[107.50000000 261.00170898]
[107.50000000 276.00170898]
[107.50000000 291.00170898]
[107.50000000 306.00170898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 126]
[24 125]
[25 124]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
