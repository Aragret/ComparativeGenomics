%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCxxxxxxxxxxACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCUCACCAUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-25.39600754 193.54016113]
[-37.83544922 201.92230225]
[-50.27489090 210.30445862]
[-62.71432877 218.68659973]
[-75.06590271 227.19767761]
[-87.32826996 235.83680725]
[-99.59063721 244.47592163]
[-111.85300446 253.11503601]
[-124.11537170 261.75415039]
[-136.37774658 270.39328003]
[-143.20303345 284.66653442]
[-158.06369019 285.67150879]
[-170.32606506 294.31063843]
[-182.58842468 302.94973755]
[-178.33898926 317.48318481]
[-179.04129028 332.60885620]
[-184.61914062 346.68600464]
[-194.46751404 358.18765259]
[-207.51812744 365.86621094]
[-222.35534668 368.88876343]
[-237.36973572 366.92742920]
[-250.93264771 360.19497681]
[-261.57287598 349.42166138]
[-268.13626099 335.77612305]
[-269.91085815 320.73852539]
[-266.70416260 305.94003296]
[-258.86401367 292.98583984]
[-247.24082947 283.28115845]
[-233.09544373 277.87869263]
[-217.96223450 277.36441040]
[-203.48272705 281.79415894]
[-191.22755432 290.68737793]
[-178.96517944 282.04824829]
[-166.70280457 273.40914917]
[-160.75460815 259.75381470]
[-145.01686096 258.13088989]
[-132.75448608 249.49177551]
[-120.49211884 240.85266113]
[-108.22975159 232.21354675]
[-95.96738434 223.57443237]
[-83.70501709 214.93531799]
[-80.02455139 208.47003174]
[-71.09647369 206.24716187]
[-58.65703201 197.86500549]
[-46.21759033 189.48286438]
[-33.77815247 181.10072327]
[-45.57373047 157.29058838]
[-53.16959000 131.82763672]
[-56.34659195 105.44648743]
[-55.01308823 78.90820312]
[-49.20754623 52.97841263]
[-39.09745026 28.40516472]
[-24.97447586 5.89738607]
[-7.24605751 -13.89558601]
[-16.99370956 -25.29660797]
[-26.74136162 -36.69762802]
[-42.37465668 -41.65061569]
[-45.63716507 -57.72195816]
[-33.17269897 -68.37883759]
[-17.80362892 -62.65837097]
[-15.34034061 -46.44528198]
[-5.59268856 -35.04425812]
[4.15496349 -23.64323807]
[10.79351139 -28.51507187]
[17.67920685 -33.03085327]
[24.79297066 -37.17807388]
[32.11509705 -40.94524384]
[39.62529755 -44.32192230]
[47.30276871 -47.29875565]
[55.12623596 -49.86749649]
[63.07402802 -52.02103043]
[71.12412262 -53.75339127]
[79.25421143 -55.05977631]
[87.44178772 -55.93656540]
[95.66414642 -56.38133621]
[103.89852905 -56.39284897]
[112.12210083 -55.97107315]
[120.31208801 -55.11718369]
[128.44580078 -53.83353806]
[136.50071716 -52.12369537]
[144.45449829 -49.99239731]
[152.28511047 -47.44554138]
[159.97088623 -44.49018860]
[167.49049377 -41.13452530]
[174.82312012 -37.38784790]
[181.94845581 -33.26054001]
[188.84675598 -28.76402855]
[195.49890137 -23.91077805]
[201.88647461 -18.71423149]
[207.99176025 -13.18878841]
[213.79785156 -7.34975433]
[219.28868103 -1.21330726]
[224.44900513 5.20355129]
[229.26454163 11.88304424]
[233.72196960 18.80666542]
[237.80889893 25.95523262]
[241.51403809 33.30894089]
[244.82711792 40.84741592]
[247.73893738 48.54977417]
[250.24147034 56.39467621]
[252.32774353 64.36038971]
[253.99198914 72.42483521]
[255.22959900 80.56568909]
[256.03713989 88.76037598]
[256.41238403 96.98620605]
[256.35430908 105.22038269]
[255.86303711 113.44010162]
[254.93994141 121.62258148]
[253.58758545 129.74516296]
[268.16027832 133.29991150]
[282.73300171 136.85467529]
[297.30569458 140.40943909]
[311.87838745 143.96420288]
[321.95236206 132.44145203]
[336.23147583 126.93099213]
[351.43453979 128.69906616]
[364.06793213 137.33941650]
[371.22866821 150.86653137]
[371.27120972 166.17198181]
[364.18579102 179.73867798]
[351.60061646 188.44911194]
[336.40762329 190.30168152]
[322.09808350 184.87068176]
[311.96023560 173.40411377]
[308.32363892 158.53691101]
[293.75094604 154.98214722]
[279.17822266 151.42738342]
[264.60552979 147.87261963]
[250.03282166 144.31785583]
[245.08012390 158.52929688]
[238.78477478 172.19908142]
[231.20504761 185.20069885]
[222.41107178 197.41381836]
[212.48423767 208.72541809]
[201.51641846 219.03082275]
[189.60911560 228.23464966]
[176.87252808 236.25173950]
[163.42451477 243.00787354]
[149.38954163 248.44053650]
[134.89749146 252.49946594]
[120.08248901 255.14707947]
[105.08162689 256.35888672]
[90.03373718 256.12365723]
[75.07807922 254.44357300]
[60.35305786 251.33419800]
[45.99495316 246.82431030]
[32.13664246 240.95561218]
[18.90637016 233.78245544]
[6.42658281 225.37120056]
[-5.18722868 215.79969788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[12 34]
[13 33]
[14 32]
[54 63]
[55 62]
[56 61]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
