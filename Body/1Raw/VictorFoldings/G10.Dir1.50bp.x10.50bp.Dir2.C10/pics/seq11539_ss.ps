%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACUAUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUAAxxxxxxxxxxCUUAAACACCCCUCCCCACAUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.82489777 297.11947632]
[85.82489777 282.11947632]
[85.82489777 267.11947632]
[85.82489777 252.11947632]
[85.82489777 237.11947632]
[85.82489777 222.11947632]
[85.82489777 207.11947632]
[85.82489777 192.11947632]
[85.82489777 177.11947632]
[85.82489777 162.11947632]
[79.11116791 158.77644348]
[72.42509460 172.20388794]
[70.21554565 187.04025269]
[55.42252731 189.52351379]
[48.48953247 176.22187805]
[58.99764633 165.51780701]
[65.68372345 152.09036255]
[58.96999741 148.74732971]
[46.99973679 157.78684998]
[35.02947998 166.82637024]
[29.13909149 182.13111877]
[12.89970779 184.41462708]
[3.01701355 171.32783508]
[9.65747738 156.33329773]
[25.98995972 154.85610962]
[37.96021652 145.81658936]
[49.93047714 136.77706909]
[41.64165497 118.23628998]
[39.86554718 98.32951355]
[44.58633804 79.24215698]
[55.08628464 63.00169373]
[70.04584503 51.26239395]
[87.70632935 45.13748169]
[106.07540131 45.09572220]
[109.73410797 30.54876900]
[113.39281464 16.00181580]
[117.05152130 1.45486104]
[120.71022797 -13.09209347]
[124.36893463 -27.63904762]
[110.11386108 -32.32799911]
[96.22962189 -38.02194977]
[82.78695679 -44.69189072]
[69.85437775 -52.30383301]
[57.49777985 -60.81898117]
[45.78013611 -70.19394684]
[34.76115036 -80.38095856]
[24.49697685 -91.32810974]
[15.03991890 -102.97960663]
[6.43816996 -115.27607727]
[-1.26443803 -128.15486145]
[-8.02865410 -141.55032349]
[-13.82000923 -155.39422607]
[-18.60899162 -169.61599731]
[-22.37119675 -184.14318848]
[-25.08745384 -198.90174866]
[-26.74392128 -213.81648254]
[-27.33215714 -228.81140137]
[-26.84916496 -243.81005859]
[-25.29740524 -258.73605347]
[-22.68478584 -273.51330566]
[-19.02462006 -288.06655884]
[-14.33556080 -302.32156372]
[-8.64150047 -316.20578003]
[-1.97145665 -329.64837646]
[5.64058256 -342.58090210]
[14.15582657 -354.93743896]
[23.53088379 -366.65502930]
[33.71797943 -377.67391968]
[44.66520691 -387.93801880]
[56.31677246 -397.39498901]
[68.61331177 -405.99664307]
[81.49214935 -413.69915771]
[94.88767242 -420.46325684]
[108.73161316 -426.25451660]
[122.95343018 -431.04336548]
[137.48063660 -434.80548096]
[152.23922729 -437.52160645]
[167.15397644 -439.17797852]
[182.14889526 -439.76608276]
[197.14755249 -439.28298950]
[212.07353210 -437.73110962]
[226.85076904 -435.11837769]
[241.40397644 -431.45809937]
[255.65898132 -426.76892090]
[269.54312134 -421.07476807]
[282.98568726 -414.40463257]
[295.91815186 -406.79248047]
[308.27462769 -398.27713013]
[319.99212646 -388.90200806]
[331.01095581 -378.71481323]
[341.27496338 -367.76751709]
[350.73184204 -356.11587524]
[359.33340454 -343.81927490]
[367.03579712 -330.94036865]
[373.79980469 -317.54479980]
[379.59097290 -303.70080566]
[384.37973022 -289.47894287]
[388.14169312 -274.95172119]
[390.85772705 -260.19311523]
[392.51397705 -245.27835083]
[393.10198975 -230.28343201]
[392.61874390 -215.28477478]
[391.06677246 -200.35879517]
[388.45391846 -185.58157349]
[384.79354858 -171.02841187]
[380.10424805 -156.77343750]
[374.40997314 -142.88932800]
[367.73974609 -129.44682312]
[360.12750244 -116.51441956]
[351.61206055 -104.15802002]
[342.23681641 -92.44058990]
[332.04956055 -81.42183685]
[321.10217285 -71.15791321]
[309.45046997 -61.70112610]
[297.15380859 -53.09965897]
[284.27484131 -45.39734650]
[270.87921143 -38.63343811]
[257.03518677 -32.84240341]
[242.81329346 -28.05374718]
[228.28602600 -24.29187584]
[213.52738953 -21.57595825]
[198.61262512 -19.91983414]
[183.61770630 -19.33194351]
[168.61904907 -19.81527901]
[153.69308472 -21.36738205]
[138.91587830 -23.98034096]
[135.25718689 -9.43338680]
[131.59848022 5.11356688]
[127.93976593 19.66052055]
[124.28105927 34.20747375]
[120.62235260 48.75442886]
[132.03770447 54.29773331]
[141.99620056 62.37273026]
[149.93928528 72.60295105]
[155.40443420 84.48948669]
[158.05174255 97.43518066]
[157.68452454 110.77460480]
[154.26266479 123.80827332]
[147.90769958 135.83926392]
[138.89958191 146.21052551]
[127.66465759 154.34063721]
[114.75570679 159.75628662]
[100.82489777 162.11947632]
[100.82489777 177.11947632]
[100.82489777 192.11947632]
[100.82489777 207.11947632]
[100.82489777 222.11947632]
[100.82489777 237.11947632]
[100.82489777 252.11947632]
[100.82489777 267.11947632]
[100.82489777 282.11947632]
[100.82489777 297.11947632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[18 27]
[19 26]
[20 25]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
