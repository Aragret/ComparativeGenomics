%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUxxxxxxxxxxGAGCUGUCCCCACAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[2.77995420 222.53721619]
[-7.09575176 233.82749939]
[-16.97145844 245.11778259]
[-26.84716415 256.40805054]
[-36.72286987 267.69833374]
[-46.59857559 278.98861694]
[-55.63809586 290.95886230]
[-63.79476166 303.54730225]
[-71.95143127 316.13574219]
[-80.10809326 328.72418213]
[-75.34809113 343.61972046]
[-81.32418060 358.07034302]
[-95.21462250 365.25289917]
[-110.46078491 361.77606201]
[-119.86389923 349.28143311]
[-118.98409271 333.66864014]
[-108.23678589 322.30950928]
[-92.69653320 320.56753540]
[-84.53986359 307.97909546]
[-76.38320160 295.39065552]
[-68.22653198 282.80221558]
[-82.96909332 285.56933594]
[-96.12503815 278.36370850]
[-101.73190308 264.45101929]
[-97.24857330 250.13670349]
[-84.70696259 241.90821838]
[-69.79110718 243.49484253]
[-59.26110458 254.17749023]
[-57.88885880 269.11291504]
[-48.01314926 257.82263184]
[-38.13744354 246.53234863]
[-28.26173782 235.24206543]
[-18.38603210 223.95179749]
[-8.51032639 212.66151428]
[-25.54284477 193.30648804]
[-39.16460800 171.41651917]
[-49.00554276 147.58628845]
[-54.79828644 122.46324158]
[-56.38546371 96.72991180]
[-53.72395325 71.08542633]
[-46.88606644 46.22648621]
[-36.05756760 22.82847023]
[-21.53265381 1.52705419]
[-32.72095108 -8.46404266]
[-43.90924835 -18.45513916]
[-55.09754181 -28.44623756]
[-66.48861694 -38.20551300]
[-78.07766724 -47.72884750]
[-89.66671753 -57.25218582]
[-101.25576019 -66.77552032]
[-115.90771484 -61.94605637]
[-130.83900452 -65.82682037]
[-141.28509521 -77.17946625]
[-143.91268921 -92.38141632]
[-137.88333130 -106.58177948]
[-125.12095642 -115.24927521]
[-109.69800568 -115.61813354]
[-96.53587341 -107.57064819]
[-89.83456421 -93.67475128]
[-91.73242188 -78.36457062]
[-80.14337921 -68.84123230]
[-68.55432892 -59.31789780]
[-56.96527863 -49.79455948]
[-52.15184021 -49.37029266]
[-47.57087326 -45.87706375]
[-45.10644531 -39.63453293]
[-33.91814804 -29.64343643]
[-22.72985268 -19.65233994]
[-11.54155636 -9.66124249]
[-0.01071123 -20.27038193]
[12.52368736 -29.67267036]
[25.93586349 -37.77376556]
[40.09123230 -44.49237442]
[54.84775543 -49.76108170]
[70.05735779 -53.52701569]
[85.56741333 -55.75239182]
[101.22229767 -56.41487503]
[116.86491394 -55.50782013]
[132.33830261 -53.04032516]
[147.48719788 -49.03715515]
[162.15957642 -43.53847885]
[176.20822144 -36.59946823]
[189.49214172 -28.28975868]
[198.65408325 -40.16658401]
[207.81602478 -52.04340744]
[216.48262024 -64.28636169]
[224.63929749 -76.87480164]
[232.79595947 -89.46324158]
[233.09657288 -105.85962677]
[247.57560730 -113.55963135]
[261.33825684 -104.64214325]
[260.22668457 -88.28070831]
[245.38439941 -81.30657196]
[237.22773743 -68.71813202]
[229.07106018 -56.12969208]
[229.56900024 -53.31134415]
[228.94534302 -50.12068939]
[227.05047607 -46.99720001]
[223.90132141 -44.42690277]
[219.69284058 -42.88146973]
[210.53091431 -31.00464630]
[201.36897278 -19.12782288]
[208.30229187 -12.86150551]
[214.84902954 -6.19231749]
[220.98579407 0.85593402]
[226.69068909 8.25809002]
[231.94334412 15.98772812]
[236.72502136 24.01725578]
[241.01863098 32.31801224]
[244.80886841 40.86036301]
[248.08221436 49.61382294]
[250.82695007 58.54713821]
[253.03329468 67.62842560]
[254.69337463 76.82526398]
[255.80125427 86.10482788]
[256.35299683 95.43399048]
[256.34661865 104.77945709]
[255.78213501 114.10785675]
[254.66159058 123.38590240]
[252.98895264 132.58045959]
[250.77021790 141.65873718]
[248.01327515 150.58828735]
[244.72799683 159.33726501]
[240.92610168 167.87443542]
[236.62115479 176.16932678]
[231.82852173 184.19232178]
[226.56532288 191.91477966]
[220.85032654 199.30914307]
[214.70394897 206.34901428]
[208.14811707 213.00924683]
[201.20625305 219.26609802]
[193.90310669 225.09721375]
[186.26477051 230.48178101]
[178.31851196 235.40058899]
[170.09268188 239.83605957]
[161.61665344 243.77236938]
[152.92066956 247.19548035]
[144.03578186 250.09315491]
[134.99371338 252.45506287]
[125.82672119 254.27276611]
[116.56754303 255.53977966]
[107.24922180 256.25158691]
[97.90502930 256.40560913]
[88.56830597 256.00134277]
[79.27239990 255.04023743]
[70.05047607 253.52568054]
[60.93546295 251.46308899]
[51.95989227 248.85984802]
[43.15580750 245.72523499]
[34.55463409 242.07044983]
[26.18707275 237.90850830]
[18.08299446 233.25430298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[7 21]
[8 20]
[9 19]
[10 18]
[43 69]
[44 68]
[45 67]
[46 66]
[47 63]
[48 62]
[49 61]
[50 60]
[83 102]
[84 101]
[85 100]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
