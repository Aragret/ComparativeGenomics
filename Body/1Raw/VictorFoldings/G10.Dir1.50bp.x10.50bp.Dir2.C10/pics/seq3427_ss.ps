%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUUCGCUGACGCCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCxxxxxxxxxxUACCUCUUUACGGACUCCACUUAUGACUCCCUAAAGCCCAUGUCGAAGCCCCCAUCGCUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[124.62361908 332.48532104]
[123.99964905 317.49832153]
[123.37567139 302.51129150]
[122.75169373 287.52426147]
[122.12771606 272.53726196]
[121.50373840 257.55023193]
[120.87976074 242.56323242]
[120.25578308 227.57621765]
[118.07894135 212.73500061]
[114.37277985 198.20007324]
[110.66661835 183.66513062]
[107.03504944 180.47340393]
[105.40962219 174.94264221]
[107.12205505 168.44839478]
[104.02373505 153.77188110]
[100.92540741 139.09535217]
[97.82708740 124.41882324]
[94.57626343 109.77532196]
[91.02149963 95.20262146]
[87.31533813 80.66768646]
[76.61296082 73.39355469]
[73.85065460 61.16291428]
[79.98294830 50.68902588]
[76.57996368 36.08013535]
[71.67841339 21.90357590]
[65.33128357 8.31262493]
[58.98415756 -5.27832603]
[52.63702774 -18.86927605]
[46.28989792 -32.46022797]
[31.50131607 -29.56480789]
[16.45862389 -30.29260826]
[2.03601837 -34.59698486]
[-10.92937469 -42.22356796]
[-21.68609810 -52.72529602]
[-29.61191368 -65.48860931]
[-34.24979401 -79.76931000]
[-35.33427429 -94.73593903]
[-32.80664444 -109.51818848]
[-26.81811523 -123.25752258]
[-17.72076797 -135.15702820]
[-6.04687119 -144.52764893]
[-12.39400101 -158.11860657]
[-18.74113083 -171.70954895]
[-25.08826065 -185.30050659]
[-31.43538857 -198.89146423]
[-37.78252029 -212.48240662]
[-52.24684525 -208.38613892]
[-67.18096924 -206.66328430]
[-82.19805145 -207.35848999]
[-96.90912628 -210.45373535]
[-110.93312836 -215.86885071]
[-123.90681458 -223.46356201]
[-135.49412537 -233.04115295]
[-145.39492798 -244.35354614]
[-153.35276794 -257.10772705]
[-159.16151428 -270.97329712]
[-162.67071533 -285.59115601]
[-163.78945923 -300.58264160]
[-162.48876953 -315.55944824]
[-158.80235291 -330.13360596]
[-152.82568359 -343.92767334]
[-144.71357727 -356.58428955]
[-134.67614746 -367.77563477]
[-122.97340393 -377.21182251]
[-109.90847015 -384.64846802]
[-95.81974792 -389.89288330]
[-81.07217407 -392.80929565]
[-66.04776001 -393.32211304]
[-51.13565445 -391.41806030]
[-36.72212982 -387.14648438]
[-23.18052864 -380.61798096]
[-10.86160755 -372.00170898]
[-0.08445858 -361.52081299]
[8.87176418 -349.44677734]
[15.77507401 -336.09234619]
[20.44665718 -321.80346680]
[22.76551056 -306.95022583]
[22.67156792 -291.91732788]
[20.16726303 -277.09423828]
[15.31746483 -262.86483765]
[8.24779320 -249.59773254]
[-0.85862929 -237.63658142]
[-11.76592445 -227.29118347]
[-24.19156837 -218.82954407]
[-17.84443855 -205.23858643]
[-11.49730873 -191.64762878]
[-5.15017939 -178.05668640]
[1.19695008 -164.46572876]
[7.54407978 -150.87478638]
[22.22284317 -153.81115723]
[37.18683243 -153.14855957]
[51.56602478 -148.92118835]
[64.52334595 -141.37059021]
[75.30343628 -130.93191528]
[83.27662659 -118.20884705]
[87.97576904 -103.93864441]
[89.12359619 -88.94944763]
[86.64905548 -74.11223602]
[80.69169617 -60.29018784]
[71.59383392 -48.28847504]
[59.88084793 -38.80735779]
[66.22798157 -25.21640587]
[72.57511139 -11.62545586]
[78.92224121 1.96549547]
[85.26936340 15.55644608]
[88.78524780 0.97431338]
[99.02097321 -9.99062157]
[113.32707214 -14.50011730]
[128.00044250 -11.38690567]
[139.24293518 -1.45683217]
[144.14447021 12.71973515]
[141.43627930 27.47323418]
[131.81938171 38.98476410]
[117.78308868 44.27460480]
[102.96064758 41.97349548]
[91.18885803 32.67715454]
[94.59183502 47.28604889]
[107.25944519 59.39107132]
[101.85027313 76.96152496]
[105.55643463 91.49645996]
[110.47100830 97.95641327]
[109.18515778 106.37234497]
[114.21032715 114.07945251]
[112.50361633 121.32050323]
[115.60193634 135.99702454]
[118.70025635 150.67355347]
[121.79857635 165.35008240]
[125.20156097 179.95896912]
[128.90771484 194.49391174]
[132.61387634 209.02883911]
[138.78283691 195.35609436]
[150.88082886 186.48826599]
[165.77632141 184.72073364]
[179.61367798 190.51104736]
[188.81112671 202.36039734]
[190.98793030 217.20161438]
[185.58064270 231.19308472]
[173.98892212 240.71316528]
[159.21325684 243.29760742]
[145.07826233 238.27745056]
[135.24279785 226.95223999]
[135.86677551 241.93925476]
[136.49075317 256.92626953]
[137.11473083 271.91326904]
[137.73870850 286.90029907]
[138.36268616 301.88732910]
[138.98666382 316.87432861]
[139.61064148 331.86135864]
[146.31062317 347.43524170]
[133.20010376 358.18469238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 130]
[10 129]
[11 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 122]
[19 120]
[20 119]
[23 117]
[24 116]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
