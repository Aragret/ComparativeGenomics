%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGUUCCACAGAAGCUxxxxxxxxxxUAGUAACCACGUUCUCCUGAUCAAAUAUCACUCUCCUACUUACAGGACUCAACAUACUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.25154877 232.31140137]
[94.93949127 217.31465149]
[94.62743378 202.31790161]
[94.31537628 187.32115173]
[94.00331879 172.32438660]
[93.69126129 157.32763672]
[93.37921143 142.33088684]
[93.06715393 127.33412933]
[92.75509644 112.33737946]
[85.57258606 99.16879272]
[73.13314819 90.78665161]
[60.69370651 82.40451050]
[48.25426483 74.02236176]
[32.48616028 72.72721100]
[26.25516129 59.19857788]
[13.81572151 50.81643295]
[1.03836429 42.95900726]
[-12.05479050 35.63990021]
[-25.89800835 29.86362839]
[-40.31022263 25.70574188]
[-54.72243881 21.54785347]
[-69.13465881 17.38996696]
[-83.54687500 13.23207951]
[-98.43015289 11.36446667]
[-113.42285156 11.83250809]
[-128.41554260 12.30055046]
[-143.40823364 12.76859283]
[-158.40093994 13.23663521]
[-162.84799194 27.71083260]
[-171.75587463 39.95535660]
[-184.15832520 48.64200974]
[-198.71002197 52.82852936]
[-213.83248901 52.06079102]
[-227.88537598 46.42207718]
[-239.34432983 36.52403259]
[-246.96635437 23.44032288]
[-249.92466736 8.59016991]
[-247.89839172 -6.41559315]
[-241.10731506 -19.94925117]
[-230.28807068 -30.54277802]
[-216.61427307 -37.04706192]
[-201.56912231 -38.75657272]
[-186.78463745 -35.48587036]
[-173.86450195 -27.58973694]
[-164.21020508 -15.92468929]
[-158.86897278 -1.75606132]
[-143.87628174 -2.22410345]
[-128.88359070 -2.69214559]
[-113.89089203 -3.16018772]
[-98.89819336 -3.62822986]
[-111.72482300 -11.40496540]
[-120.95596313 -23.22807693]
[-125.38950348 -37.55789948]
[-124.44806671 -52.52832413]
[-118.25426483 -66.18983459]
[-107.61467743 -76.76335144]
[-93.91484833 -82.87193298]
[-78.93885040 -83.72010040]
[-64.63692474 -79.19738770]
[-52.87154388 -69.89277649]
[-45.17485809 -57.01795578]
[-42.54916763 -42.24954987]
[-45.33640671 -27.51078033]
[-53.17360306 -14.72100639]
[-65.04016113 -5.54577541]
[-79.38898468 -1.18013668]
[-64.97676849 2.97775078]
[-50.56455231 7.13563824]
[-36.15233612 11.29352570]
[-21.74011993 15.45141315]
[-30.75916481 3.46572018]
[-33.30183411 -11.31720352]
[-28.80571556 -25.62751198]
[-18.26530838 -36.29989624]
[-4.01205063 -40.97372055]
[10.80136585 -38.61518478]
[22.89834976 -29.74596977]
[29.60316086 -16.32786751]
[29.43275642 -1.32883453]
[22.42482758 11.93347836]
[10.12946415 20.52556992]
[-4.73568439 22.54674721]
[8.35746956 29.86585236]
[11.13973236 29.18295479]
[14.36806393 29.59750938]
[17.61204910 31.28820419]
[20.38370132 34.26964569]
[22.19786453 38.37699127]
[34.63730621 46.75913620]
[49.51565933 47.45474625]
[56.63640976 61.58292389]
[69.07585144 69.96506500]
[81.51528931 78.34721375]
[93.95472717 86.72935486]
[121.32363892 80.29736328]
[136.25794983 78.89505768]
[151.19224548 77.49275970]
[166.12655640 76.09045410]
[181.06086731 74.68814850]
[183.42007446 59.79234695]
[189.41035461 45.95156097]
[198.65515137 34.03583145]
[210.57333374 24.79419899]
[224.41571045 18.80759430]
[239.31213379 16.45234299]
[254.32621765 17.87649727]
[268.51416016 22.99053192]
[280.98406982 31.47297859]
[290.95211792 42.79061890]
[297.79165649 56.23202133]
[301.07278442 70.95224762]
[300.58926392 86.02596283]
[296.37142944 100.50563049]
[288.68447876 113.48104858]
[278.01156616 124.13655853]
[265.02365112 131.80235291]
[250.53710938 135.99656677]
[235.46263123 136.45552063]
[220.74777222 133.15039062]
[207.31753540 126.28892517]
[196.01615906 116.30244446]
[187.55406189 103.81871033]
[182.46316528 89.62245941]
[167.52885437 91.02476501]
[152.59455872 92.42706299]
[137.66024780 93.82936859]
[122.72593689 95.23167419]
[136.50433350 101.16092682]
[150.28271484 107.09017181]
[165.16975403 108.92756653]
[177.49539185 117.47618103]
[184.43287659 130.77548218]
[184.39115906 145.77542114]
[177.37983704 159.03593445]
[165.00685120 167.51586914]
[150.10981750 169.27044678]
[136.10520935 163.89727783]
[126.20482635 152.62863159]
[122.67921448 138.04788208]
[115.21553040 125.03660583]
[107.75184631 112.02532196]
[108.06390381 127.02207184]
[108.37596130 142.01882935]
[108.68801880 157.01557922]
[109.00007629 172.01232910]
[109.31213379 187.00909424]
[109.62418365 202.00584412]
[109.93624115 217.00259399]
[110.24829865 231.99934387]
[112.83930206 251.20707703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 94]
[11 93]
[12 92]
[13 91]
[15 89]
[16 88]
[17 83]
[18 82]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
