%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAAAxxxxxxxxxxUUUGCAGGCACACUCAUCACAGCGCUAAGCUCGCACUGAUUUUUUACCUGAGUAGGCCUAGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.15642548 232.81129456]
[94.85629272 217.81428528]
[94.55615997 202.81729126]
[94.25602722 187.82029724]
[93.95589447 172.82330322]
[93.65576172 157.82630920]
[93.35563660 142.82929993]
[93.05550385 127.83230591]
[92.75537109 112.83531189]
[85.56064606 99.67340088]
[73.09903717 91.32425690]
[60.63742447 82.97510529]
[48.17581177 74.62596130]
[32.86268616 77.48007202]
[20.34377480 68.83533478]
[17.71718788 54.21901703]
[5.25557661 45.86987305]
[-7.20603561 37.52072906]
[-19.66764832 29.17158318]
[-24.13583755 29.04311943]
[-27.92892838 27.61309433]
[-30.71455765 25.26370239]
[-32.32282639 22.44674683]
[-32.75487518 19.62308502]
[-44.50903320 10.30430031]
[-56.26319504 0.98551530]
[-66.75008392 11.72931099]
[-78.28609467 21.33787155]
[-90.74893951 29.70934486]
[-104.00650787 36.75498581]
[-117.91825104 42.40010452]
[-132.33670044 46.58486176]
[-147.10902405 49.26490021]
[-162.07861328 50.41180420]
[-177.08679199 50.01342010]
[-191.97445679 48.07397079]
[-206.58378601 44.61401367]
[-220.75993347 39.67022324]
[-234.35260010 33.29501343]
[-247.21771240 25.55595970]
[-259.21890259 16.53510284]
[-270.22891235 6.32806730]
[-280.13104248 -4.95694447]
[-288.82037354 -17.20030594]
[-296.20471191 -30.27223206]
[-302.20587158 -44.03415298]
[-306.76016235 -58.34017944]
[-309.81933594 -73.03866577]
[-311.35095215 -87.97380066]
[-311.33877563 -102.98725128]
[-309.78295898 -117.91988373]
[-306.69998169 -132.61338806]
[-302.12249756 -146.91201782]
[-296.09909058 -160.66419983]
[-288.69354248 -173.72413635]
[-279.98440552 -185.95341492]
[-270.06399536 -197.22236633]
[-259.03744507 -207.41154480]
[-247.02166748 -216.41293335]
[-234.14402771 -224.13113403]
[-220.54104614 -230.48431396]
[-206.35690308 -235.40512085]
[-191.74198914 -238.84140015]
[-176.85119629 -240.75672913]
[-161.84239197 -241.13078308]
[-146.87467957 -239.95962524]
[-132.10671997 -237.25564575]
[-117.69506836 -233.04753113]
[-103.79249573 -227.37988281]
[-90.54636383 -220.31275940]
[-78.09709930 -211.92111206]
[-66.57667542 -202.29386902]
[-56.10720825 -191.53308105]
[-46.79968262 -179.75285339]
[-38.75276184 -167.07803345]
[-32.05174637 -153.64299011]
[-26.76767540 -139.59013367]
[-22.95656204 -125.06844330]
[-20.65880394 -110.23185730]
[-19.89875984 -95.23764801]
[-20.68448639 -80.24475861]
[-23.00765610 -65.41213226]
[-26.84363747 -50.89698792]
[-32.15177155 -36.85321045]
[-38.87578964 -23.42966270]
[-46.94440842 -10.76864338]
[-35.19025040 -1.44985867]
[-23.43609047 7.86892605]
[-11.31850243 16.70997047]
[1.14310932 25.05911446]
[13.60472107 33.40826035]
[26.06633377 41.75740433]
[40.58307266 38.62693405]
[53.33985901 46.91663361]
[56.52495575 62.16435242]
[68.98656464 70.51349640]
[81.44818115 78.86264038]
[93.90979004 87.21178436]
[117.19216919 80.03637695]
[131.64817810 76.03342438]
[146.10420227 72.03047180]
[160.56021118 68.02751923]
[168.38223267 54.55704117]
[183.09971619 50.70341110]
[195.89355469 58.24352264]
[210.34956360 54.24057007]
[224.80558777 50.23761749]
[231.13087463 35.93640518]
[245.19166565 29.09330368]
[260.34887695 32.93941879]
[269.44577026 45.65872955]
[268.18701172 61.24557114]
[257.16699219 72.34030914]
[241.58901978 73.70435333]
[228.80853271 64.69363403]
[214.35252380 68.69658661]
[199.89649963 72.69953918]
[192.80332947 85.74647522]
[178.19990540 90.01196289]
[164.56317139 82.48353577]
[150.10714722 86.48648834]
[135.65113831 90.48944092]
[121.19512177 94.49238586]
[135.80058289 97.91004944]
[150.40605164 101.32771301]
[165.01152039 104.74537659]
[179.69956970 101.70215607]
[194.65174866 102.89887238]
[208.66877747 108.23955536]
[220.62637329 117.29582977]
[229.56541443 129.34129333]
[234.76893616 143.40982056]
[235.81956482 158.37298584]
[232.63302612 173.03060913]
[225.46492004 186.20703125]
[214.89016724 196.84539795]
[201.75697327 204.09240723]
[187.11872864 207.36680603]
[172.14953613 206.40594482]
[158.05006409 201.28689575]
[145.95118713 192.42025757]
[136.82336426 180.51719666]
[131.39869690 166.53245544]
[130.11236572 151.58682251]
[122.65903473 138.56961060]
[115.20570374 125.55239105]
[107.75236511 112.53517914]
[108.05249786 127.53218079]
[108.35263062 142.52917480]
[108.65276337 157.52616882]
[108.95289612 172.52316284]
[109.25302887 187.52017212]
[109.55316162 202.51716614]
[109.85329437 217.51416016]
[110.15341949 232.51115417]
[112.72914886 251.72093201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[5 151]
[6 150]
[7 149]
[8 148]
[9 147]
[10 98]
[11 97]
[12 96]
[13 95]
[16 92]
[17 91]
[18 90]
[19 89]
[24 88]
[25 87]
[26 86]
[99 123]
[100 122]
[101 121]
[102 120]
[105 117]
[106 116]
[107 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
