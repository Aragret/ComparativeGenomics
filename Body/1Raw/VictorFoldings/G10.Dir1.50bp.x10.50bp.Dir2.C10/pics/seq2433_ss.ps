%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCCAAACAUAUAACUGAACUCCUCACACCCAAUUGGACCAAUCUAUCACCCUAUAGAAGxxxxxxxxxxGCCAAAUAUCAUUCUGAGGGGCCACAGUAAUUACAAACUUACUAUCCGCCAUCCCAUACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[253.74171448 606.62829590]
[253.12588501 591.64093018]
[252.51007080 576.65356445]
[251.89424133 561.66625977]
[251.27841187 546.67889404]
[250.66258240 531.69152832]
[250.04676819 516.70416260]
[249.43093872 501.71682739]
[246.67469788 486.97222900]
[241.83488464 472.77447510]
[236.99505615 458.57672119]
[232.15524292 444.37896729]
[216.02992249 446.28286743]
[199.87341309 444.60113525]
[184.47361755 439.41284180]
[170.58218384 430.96829224]
[158.87777710 419.67669678]
[149.93298340 406.08648682]
[144.18618774 390.85855103]
[141.92024231 374.73431396]
[143.24841309 358.49938965]
[148.10877991 342.94546509]
[156.26712036 328.83160400]
[167.32818604 316.84732056]
[180.75485229 307.57873535]
[175.05020142 293.70584106]
[169.34553528 279.83297729]
[163.64086914 265.96008301]
[147.87707520 260.18029785]
[141.00842285 244.49102783]
[147.71311951 228.36544800]
[141.72482300 214.61260986]
[135.73652649 200.85978699]
[129.74822998 187.10696411]
[123.75993347 173.35412598]
[117.77163696 159.60130310]
[111.78334045 145.84846497]
[95.45174408 147.11944580]
[79.66476440 142.74818420]
[66.31280518 133.25811768]
[56.99465942 119.78559875]
[52.82611847 103.94388580]
[54.30633926 87.62992096]
[61.25807571 72.79719543]
[72.84889984 61.22182083]
[66.30103302 47.72643661]
[59.75316238 34.23105240]
[53.20529175 20.73566818]
[46.60284805 14.33226681]
[46.66471863 6.89530754]
[39.03174973 -6.01739073]
[26.37768364 -8.71521950]
[19.20476913 -18.99727440]
[20.92914200 -31.00930023]
[12.26253414 -43.25225449]
[3.59592652 -55.49520874]
[-5.07068062 -67.73815918]
[-13.73728848 -79.98111725]
[-29.35565186 -82.39818573]
[-38.62282562 -95.20034027]
[-36.04076004 -110.79227448]
[-23.14134979 -119.92357635]
[-7.57758379 -117.17681122]
[1.41682982 -104.18157959]
[-1.49433458 -88.64772034]
[7.17227268 -76.40476990]
[15.83888054 -64.16181183]
[24.50548744 -51.91886139]
[33.17209625 -39.67590714]
[49.47303391 -33.24753952]
[51.09418106 -14.93354130]
[51.61941528 -29.92434311]
[59.45418549 -42.71560287]
[72.56955719 -49.99482727]
[87.56909180 -49.87694168]
[100.56842804 -42.39247513]
[108.20117950 -29.47964668]
[108.49073029 -14.48244190]
[101.36209106 -1.28462088]
[88.66133118 6.69603205]
[73.67752838 7.39280081]
[60.29169846 0.62590212]
[66.70067596 14.18779850]
[73.24854279 27.68318176]
[79.79641724 41.17856598]
[86.34428406 54.67395020]
[99.70729828 52.66244888]
[113.09416962 54.50854874]
[125.41397095 60.06180573]
[135.66276550 68.86968231]
[143.00534058 80.21440125]
[146.84336853 93.17147827]
[146.86405945 106.68502808]
[143.06573486 119.65379333]
[135.75793457 131.02095032]
[125.53617096 139.86016846]
[131.52445984 153.61300659]
[137.51275635 167.36582947]
[143.50105286 181.11866760]
[149.48934937 194.87149048]
[155.47764587 208.62431335]
[161.46594238 222.37715149]
[174.51829529 225.84783936]
[183.04876709 236.06608582]
[184.10118103 249.13975525]
[177.51374817 260.25543213]
[183.21841431 274.12829590]
[188.92308044 288.00119019]
[194.62773132 301.87405396]
[208.20312500 299.22052002]
[222.03074646 299.14346313]
[235.62608337 301.64392090]
[248.51309204 306.63262939]
[260.24081421 313.93328857]
[270.39920044 323.28863525]
[278.63345337 334.36965942]
[284.65640259 346.78710938]
[288.25851440 360.10519409]
[289.31512451 373.85678101]
[287.79092407 387.55993652]
[283.74096680 400.73468018]
[277.30871582 412.91992188]
[268.72106934 423.68945312]
[258.28018188 432.66696167]
[246.35299683 439.53915405]
[251.19281006 453.73690796]
[256.03262329 467.93466187]
[260.87243652 482.13241577]
[264.68722534 467.62561035]
[273.67889404 455.61935425]
[286.52658081 447.87747192]
[301.34289551 445.53720093]
[315.95126343 448.94238281]
[328.20568848 457.59277344]
[336.30593872 470.21759033]
[339.06204224 484.96221924]
[336.06915283 499.66061401]
[327.76687622 512.15350342]
[315.37490845 520.60565186]
[300.71365356 523.77545166]
[285.93692017 521.19720459]
[273.21539307 513.24963379]
[264.41830444 501.10098267]
[265.03411865 516.08837891]
[265.64993286 531.07568359]
[266.26577759 546.06304932]
[266.88159180 561.05041504]
[267.49740601 576.03778076]
[268.11325073 591.02514648]
[268.72906494 606.01245117]
[275.42059326 621.59002686]
[262.30419922 632.33233643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 128]
[10 127]
[11 126]
[12 125]
[25 109]
[26 108]
[27 107]
[28 106]
[31 102]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 96]
[45 86]
[46 85]
[47 84]
[48 83]
[50 82]
[51 71]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
