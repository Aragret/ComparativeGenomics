%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCUACAUACUUCCCCCAUUAUUCCUAGAACCAGGCGACCUGCGACUCCUUGACGUUGACAxxxxxxxxxxUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[22.60326576 229.67594910]
[14.28551769 242.15853882]
[5.96776962 254.64112854]
[-2.34997797 267.12371826]
[-10.66772556 279.60632324]
[-17.94725418 292.72149658]
[-24.14074516 306.38314819]
[-30.33423424 320.04479980]
[-28.19266510 336.30352783]
[-41.36529922 346.07150269]
[-56.30126190 339.30032349]
[-57.63571167 322.95556641]
[-43.99588394 313.85131836]
[-37.80239487 300.18966675]
[-31.60890579 286.52801514]
[-45.45937729 292.28686523]
[-60.08512497 288.95706177]
[-70.07756042 277.76995850]
[-71.74149323 262.86254883]
[-64.46160889 249.74754333]
[-50.92999268 243.27487183]
[-36.15062332 245.83811951]
[-25.58889008 256.48941040]
[-23.15031624 271.28857422]
[-14.83256912 258.80596924]
[-6.51482105 246.32337952]
[1.80292642 233.84078979]
[10.12067413 221.35820007]
[-0.91833264 212.48944092]
[-11.08561993 202.61906433]
[-20.29054642 191.83242798]
[-28.45080948 180.22311401]
[-35.49317551 167.89202881]
[-41.35413361 154.94659424]
[-45.98048782 141.49980164]
[-49.32981110 127.66915894]
[-51.37084961 113.57576752]
[-52.08382034 99.34317780]
[-51.46058273 85.09635925]
[-49.50474167 70.96055603]
[-46.23162079 57.06024933]
[-41.66815948 43.51798630]
[-35.85267258 30.45336151]
[-49.81048203 24.95977211]
[-63.76829147 19.46618271]
[-77.72610474 13.97259331]
[-94.67915344 13.79792500]
[-99.20437622 -2.54094410]
[-84.75674438 -11.41237354]
[-72.23251343 0.01478298]
[-58.27470398 5.50837231]
[-44.31689453 11.00196171]
[-30.35908318 16.49555206]
[-21.66573524 4.27157021]
[-31.43632317 -7.10980177]
[-46.29611588 -12.54092979]
[-48.71556854 -27.23771477]
[-64.53874207 -29.88473129]
[-72.20856476 -43.97562790]
[-65.84140778 -58.70107651]
[-50.32160187 -62.76497269]
[-37.55462265 -53.04984283]
[-37.33419800 -37.00830078]
[-23.17326355 -32.39124680]
[-20.05495071 -16.88038826]
[-10.28436279 -5.49901676]
[-3.10915184 -12.46155262]
[4.50437546 -18.93738747]
[12.52328777 -24.89901543]
[20.91293335 -30.32114792]
[29.63709068 -35.18083191]
[38.65811920 -39.45753479]
[47.93713379 -43.13324738]
[57.43415833 -46.19254303]
[67.10830688 -48.62265396]
[76.91795349 -50.41351700]
[86.82092285 -51.55782318]
[96.77465820 -52.05103302]
[106.73640442 -51.89141846]
[116.66341400 -51.08003998]
[126.51309967 -49.62076569]
[136.24324036 -47.52023697]
[145.81211853 -44.78784180]
[155.17880249 -41.43568039]
[164.30317688 -37.47850418]
[173.14625549 -32.93364716]
[181.67021179 -27.82095909]
[189.83868408 -22.16271782]
[197.61682129 -15.98352528]
[204.97145081 -9.31020927]
[211.87127686 -2.17169905]
[218.28692627 5.40109587]
[224.19117737 13.37541866]
[229.55899048 21.71681213]
[234.36763000 30.38925743]
[238.59678650 39.35534286]
[242.22866821 48.57641602]
[245.24801636 58.01274872]
[247.64224243 67.62371826]
[249.40145874 77.36797333]
[250.51844788 87.20362091]
[250.98883057 97.08838654]
[265.98190308 97.54435730]
[280.97497559 98.00032043]
[295.96804810 98.45629120]
[310.96112061 98.91225433]
[325.95416260 99.36822510]
[340.94723511 99.82418823]
[355.94030762 100.28015900]
[370.93338013 100.73612976]
[377.50955200 87.00025940]
[389.10824585 77.13163757]
[403.71997070 72.84004211]
[418.81311035 74.86903381]
[431.77270508 82.86707306]
[440.35345459 95.44844818]
[443.06863403 110.43336487]
[439.44787598 125.22558594]
[430.11843872 137.26228333]
[416.69677734 144.45800781]
[401.50823975 145.56608582]
[387.18429565 140.39450073]
[376.20672607 129.83929443]
[370.47741699 115.72919464]
[355.48434448 115.27322388]
[340.49127197 114.81726074]
[325.49819946 114.36128998]
[310.50512695 113.90532684]
[295.51208496 113.44935608]
[280.51901245 112.99339294]
[265.52593994 112.53742218]
[250.53286743 112.08145142]
[248.97526550 124.74826050]
[246.35372925 137.23832703]
[242.68698120 149.46243286]
[238.00120544 161.33331299]
[232.32986450 172.76615906]
[225.71347046 183.67933655]
[218.19926453 193.99488831]
[209.84091187 203.63917542]
[200.69812012 212.54328918]
[190.83616638 220.64367676]
[180.32550049 227.88244629]
[169.24116516 234.20791626]
[157.66233826 239.57492065]
[145.67170715 243.94512939]
[133.35488892 247.28732300]
[120.79987335 249.57763672]
[108.09630585 250.79971313]
[95.33491516 250.94483948]
[82.60684204 250.01194763]
[70.00299072 248.00772095]
[57.61336517 244.94647217]
[45.52645111 240.85005188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 15]
[7 14]
[8 13]
[43 53]
[44 52]
[45 51]
[46 50]
[54 66]
[55 65]
[57 63]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
