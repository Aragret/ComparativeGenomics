%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCAUCAUUCUACUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAxxxxxxxxxxGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAUUUGCCAUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.10043335 317.37860107]
[99.10043335 302.37860107]
[99.10043335 287.37860107]
[99.10043335 272.37860107]
[99.10043335 257.37860107]
[99.10043335 242.37861633]
[99.10043335 227.37861633]
[99.10043335 212.37861633]
[99.10043335 197.37861633]
[99.10043335 182.37861633]
[97.07810211 167.51556396]
[93.07035828 153.06086731]
[89.06262207 138.60618591]
[85.05487823 124.15149689]
[86.09156799 93.85008240]
[78.10165405 81.15515137]
[70.11174011 68.46022034]
[47.98700714 66.50852966]
[34.32913208 46.68648148]
[20.10235405 51.44029617]
[5.87557507 56.19411087]
[5.77242327 71.33570862]
[0.75603729 85.62258148]
[-8.62944317 97.50498199]
[-21.36595154 105.69400024]
[-36.07192612 109.30136108]
[-51.15217209 107.93576050]
[-64.97090149 101.74532318]
[-76.02915192 91.40154266]
[-83.12741852 78.02644348]
[-85.49572754 63.07084656]
[-82.87718964 48.15702820]
[-75.55583191 34.90272903]
[-64.32583618 24.74567223]
[-50.40533066 18.78762054]
[-35.30432129 17.67486000]
[-20.66084862 21.52809525]
[-8.06332684 29.92935371]
[1.12176037 41.96733093]
[15.34853935 37.21351624]
[29.57531929 32.45970154]
[37.29940414 19.60129929]
[34.81428528 4.80859232]
[32.32916641 -9.98411465]
[29.84404755 -24.77682304]
[27.35892868 -39.56953049]
[24.87381172 -54.36223602]
[22.23494720 -69.12828827]
[19.44262123 -83.86609650]
[4.43488359 -83.14921570]
[-10.52656460 -84.52805328]
[-25.15049362 -87.97578430]
[-39.15224457 -93.42529297]
[-52.25926971 -100.77049255]
[-64.21643066 -109.86842346]
[-74.79099274 -120.54198456]
[-83.77709961 -132.58340454]
[-90.99985504 -145.75831604]
[-96.31864929 -159.81024170]
[-99.62995148 -174.46565247]
[-100.86931610 -189.43930054]
[-100.01261902 -204.43971252]
[-97.07652283 -219.17488098]
[-92.11818695 -233.35801697]
[-85.23413086 -246.71301270]
[-76.55834961 -258.97991943]
[-66.25971985 -269.91995239]
[-54.53870773 -279.32015991]
[-41.62346649 -286.99758911]
[-27.76539993 -292.80276489]
[-13.23425293 -296.62268066]
[1.68711913 -298.38302612]
[16.70826721 -298.04949951]
[31.53680038 -295.62860107]
[45.88407898 -291.16748047]
[59.47082520 -284.75292969]
[72.03256989 -276.50982666]
[83.32479858 -266.59863281]
[93.12770081 -255.21226501]
[101.25045776 -242.57237244]
[107.53496552 -228.92498779]
[111.85889435 -214.53576660]
[114.13806915 -199.68478394]
[114.32812500 -184.66113281]
[112.42537689 -169.75726318]
[108.46684265 -155.26325989]
[102.52959442 -141.46125793]
[94.72918701 -128.61991882]
[85.21746826 -116.98921967]
[74.17958069 -106.79553223]
[61.83038330 -98.23728943]
[48.41025925 -91.48108673]
[34.18042755 -86.65842438]
[36.97275162 -71.92061615]
[41.33626175 -65.89521790]
[39.66651917 -56.84735489]
[42.15163803 -42.05464935]
[44.63675690 -27.26194000]
[47.12187195 -12.46923351]
[49.60699081 2.32347369]
[52.09210968 17.11618042]
[64.91547394 15.49022484]
[76.86714935 19.47990036]
[85.67388153 28.02929497]
[89.79051971 39.24571609]
[88.66722870 50.81335831]
[82.80666351 60.47030640]
[90.79658508 73.16523743]
[98.78649902 85.86016083]
[111.39762878 93.98170471]
[126.26067352 96.00404358]
[141.12371826 98.02637482]
[155.98677063 100.04870605]
[170.84980774 102.07104492]
[185.81454468 95.36367798]
[198.94535828 105.18783569]
[196.73439026 121.43725586]
[181.45610046 127.39592743]
[168.82748413 116.93408966]
[153.96443176 114.91175842]
[139.10137939 112.88941956]
[124.23834229 110.86708832]
[109.37528992 108.84474945]
[99.50956726 120.14376068]
[103.51731110 134.59844971]
[107.52504730 149.05313110]
[111.53279114 163.50782776]
[116.43194580 149.33044434]
[126.59102631 138.29444885]
[140.31526184 132.24089050]
[155.31512451 132.17964172]
[169.08833313 138.12092590]
[179.33718872 149.07359314]
[184.35195923 163.21051025]
[183.29605103 178.17329407]
[176.34564209 191.46583557]
[164.66018677 200.87063599]
[150.18910217 204.81877136]
[135.34648132 202.65159607]
[122.60841370 194.73063660]
[114.10043335 182.37861633]
[114.10043335 197.37861633]
[114.10043335 212.37861633]
[114.10043335 227.37861633]
[114.10043335 242.37861633]
[114.10043335 257.37860107]
[114.10043335 272.37860107]
[114.10043335 287.37860107]
[114.10043335 302.37860107]
[114.10043335 317.37860107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 127]
[12 126]
[13 125]
[14 124]
[15 109]
[16 108]
[17 107]
[19 41]
[20 40]
[21 39]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 94]
[49 93]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
