%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAAAAUAGACUACGAAAGUGGCUxxxxxxxxxxUACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[255.85803223 198.64274597]
[244.10386658 189.32397461]
[232.34971619 180.00518799]
[220.59555054 170.68640137]
[208.84140015 161.36761475]
[196.72380066 152.52656555]
[184.26219177 144.17742920]
[171.80058289 135.82827759]
[159.33897400 127.47913361]
[146.87734985 119.12998962]
[134.41574097 110.78084564]
[120.32606506 105.63488007]
[105.41681671 103.98737335]
[106.35736847 107.52287292]
[105.84045410 111.58345032]
[103.70690155 115.66309357]
[99.95715332 119.21891785]
[94.75763702 121.71842957]
[88.43379211 122.68718719]
[81.45001221 121.75328064]
[66.77988434 124.88173676]
[52.10975266 128.01020813]
[40.22678757 138.45556641]
[26.16567993 133.54287720]
[11.49554920 136.67134094]
[-3.17458105 139.79978943]
[-17.81267738 143.07487488]
[-32.41727448 146.49624634]
[-47.02186966 149.91760254]
[-61.62646866 153.33897400]
[-69.74418640 166.89913940]
[-85.09290314 170.66644287]
[-98.56648254 162.40580750]
[-102.17130280 147.01812744]
[-93.76867676 133.63262939]
[-78.34374237 130.19070435]
[-65.04783630 138.73437500]
[-50.44323730 135.31300354]
[-35.83864212 131.89164734]
[-21.23404312 128.47027588]
[-15.40621758 123.85678101]
[-6.30304193 125.12966156]
[8.36708832 122.00120544]
[23.03722000 118.87274170]
[33.87088013 108.65114594]
[48.98128891 113.34007263]
[63.65142059 110.21160889]
[78.32154846 107.08314514]
[82.75653839 92.75377655]
[72.41852570 81.88521576]
[62.08050919 71.01666260]
[48.19639969 77.10002136]
[33.06877136 78.06475830]
[18.52436638 73.79438782]
[6.31948948 64.80457306]
[-2.07205987 52.18087387]
[-5.63696146 37.44766998]
[-3.94473672 22.38406563]
[2.80027032 8.80906296]
[13.78356743 -1.63808906]
[27.67886734 -7.69584703]
[42.80824661 -8.63270664]
[57.34475708 -4.33553839]
[69.53304291 4.67675495]
[77.90131378 17.31589317]
[81.43906403 32.05564117]
[79.71907806 47.11610413]
[72.94906616 60.67864990]
[83.28707886 71.54721069]
[93.62509155 82.41576385]
[107.06432343 89.07811737]
[121.97357178 90.72562408]
[109.98150635 81.71505737]
[100.44351196 70.13806915]
[93.89409637 56.64343643]
[90.70028687 41.98739624]
[91.04106140 26.99126625]
[94.89732361 12.49543095]
[102.05297089 -0.68776518]
[112.10700989 -11.81953907]
[124.49600220 -20.27606773]
[138.52566528 -25.58345032]
[153.40980530 -27.44425964]
[168.31428528 -25.75421715]
[182.40388489 -20.60803223]
[194.88902283 -12.29409695]
[205.07002258 -1.27832234]
[212.37634277 11.82196903]
[216.39854431 26.27264023]
[216.91122437 41.26387405]
[213.88565063 55.95557022]
[207.49137878 69.52440643]
[198.08674622 81.20998383]
[186.19877625 90.35744476]
[172.49366760 96.45417786]
[157.73945618 99.15850830]
[142.76489258 98.31922913]
[155.22650146 106.66838074]
[167.68811035 115.01752472]
[180.14971924 123.36666870]
[192.61134338 131.71580505]
[205.07295227 140.06495667]
[209.54113770 140.19342041]
[213.33422852 141.62344360]
[216.11985779 143.97283936]
[217.72813416 146.78979492]
[218.16017151 149.61344910]
[229.91433716 158.93223572]
[241.66850281 168.25102234]
[253.42265320 177.56980896]
[265.17681885 186.88859558]
[275.96481323 176.43518066]
[288.02499390 167.47935486]
[301.15103149 160.17436218]
[315.11825562 154.64521790]
[329.68771362 150.98652649]
[344.61007690 149.26087952]
[359.63003540 149.49783325]
[374.49053955 151.69329834]
[388.93734741 155.80973816]
[402.72323608 161.77668762]
[415.61227417 169.49206543]
[427.38397217 178.82385254]
[437.83688354 189.61235046]
[446.79214478 201.67295837]
[454.09649658 214.79933167]
[459.62496948 228.76681519]
[463.28298950 243.33645630]
[465.00790405 258.25891113]
[464.77026367 273.27883911]
[462.57406616 288.13925171]
[458.45693970 302.58584595]
[452.48934937 316.37145996]
[444.77334595 329.26013184]
[435.44100952 341.03140259]
[424.65200806 351.48379517]
[412.59097290 360.43847656]
[399.46426392 367.74221802]
[385.49649048 373.27001953]
[370.92669678 376.92733765]
[356.00415039 378.65155029]
[340.98422241 378.41317749]
[326.12393188 376.21627808]
[311.67752075 372.09848022]
[297.89221191 366.13021851]
[285.00387573 358.41360474]
[273.23306274 349.08071899]
[262.78118896 338.29119873]
[253.82708740 326.22973633]
[246.52398682 313.10269165]
[240.99682617 299.13467407]
[237.34020996 284.56469727]
[235.61671448 269.64205933]
[235.85578918 254.62214661]
[238.05339050 239.76194763]
[242.17189026 225.31573486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[4 108]
[5 107]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 72]
[13 71]
[20 48]
[21 47]
[22 46]
[24 44]
[25 43]
[26 42]
[27 40]
[28 39]
[29 38]
[30 37]
[49 70]
[50 69]
[51 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
