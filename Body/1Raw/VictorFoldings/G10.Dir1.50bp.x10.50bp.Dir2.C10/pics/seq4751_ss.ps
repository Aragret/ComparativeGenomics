%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGUUCCACxxxxxxxxxxAAUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.63948822 278.46109009]
[100.63948822 263.46109009]
[100.63948822 248.46107483]
[100.63948822 233.46107483]
[100.63948822 218.46107483]
[100.63948822 203.46107483]
[100.63948822 188.46107483]
[100.63948822 173.46107483]
[100.63948822 158.46107483]
[100.63948822 143.46107483]
[92.27577972 140.44300842]
[85.14019775 135.93072510]
[79.47316742 130.29049683]
[75.41927338 123.92053986]
[62.64191437 131.77796936]
[49.86455536 139.63539124]
[37.08720016 147.49281311]
[24.30984116 155.35023499]
[11.53248501 163.20767212]
[12.03869152 178.55821228]
[4.78765488 192.09771729]
[-8.27013206 200.18411255]
[-23.62219238 200.64219666]
[-37.13889694 193.34875488]
[-45.18431854 180.26568604]
[-45.59428406 164.91226196]
[-38.25851059 151.41848755]
[-25.15028763 143.41410828]
[-9.79565716 143.05227661]
[3.67505884 150.43031311]
[16.45241547 142.57287598]
[29.22977448 134.71545410]
[42.00712967 126.85803223]
[54.78448868 119.00060272]
[67.56184387 111.14318085]
[66.30502319 93.59273529]
[73.91581726 77.72850037]
[88.39125061 67.72553253]
[86.52364349 52.84225082]
[84.65602875 37.95897293]
[82.78841400 23.07569122]
[67.78153992 23.47640228]
[52.80765533 22.40423393]
[38.01096725 19.86951256]
[23.53398132 15.89664936]
[9.51611996 10.52390671]
[-3.90761137 3.80302691]
[-16.60793304 -4.20126104]
[-28.46253014 -13.41187000]
[-39.35723114 -23.74009514]
[-49.18711853 -35.08646774]
[-57.85751724 -47.34170914]
[-65.28491974 -60.38779831]
[-71.39780426 -74.09909058]
[-76.13729858 -88.34352875]
[-79.45774841 -102.98393250]
[-81.32717896 -117.87929535]
[-81.72759247 -132.88618469]
[-80.65512085 -147.86004639]
[-78.12010193 -162.65667725]
[-74.14694977 -177.13359070]
[-68.77392578 -191.15133667]
[-62.05278015 -204.57493591]
[-54.04824066 -217.27510071]
[-44.83739471 -229.12951660]
[-34.50894928 -240.02400208]
[-23.16238213 -249.85366821]
[-10.90696430 -258.52383423]
[2.13927245 -265.95095825]
[15.85068321 -272.06356812]
[30.09521675 -276.80279541]
[44.73568726 -280.12292480]
[59.63109207 -281.99206543]
[74.63797760 -282.39218140]
[89.61182404 -281.31942749]
[104.40840912 -278.78411865]
[118.88523865 -274.81066895]
[132.90287781 -269.43734741]
[146.32633972 -262.71594238]
[159.02635193 -254.71115112]
[170.88056946 -245.50006104]
[181.77487183 -235.17140198]
[191.60429382 -223.82463074]
[200.27420044 -211.56904602]
[207.70109558 -198.52265930]
[213.81343079 -184.81112671]
[218.55235291 -170.56649780]
[221.87220764 -155.92596436]
[223.74104309 -141.03051758]
[224.14085388 -126.02362061]
[223.06779480 -111.04980469]
[220.53218079 -96.25326538]
[216.55845642 -81.77651978]
[211.18486023 -67.75897980]
[204.46318054 -54.33565140]
[196.45812988 -41.63581085]
[187.24681091 -29.78176498]
[176.91793823 -18.88768196]
[165.57096863 -9.05847740]
[153.31520081 -0.38881490]
[140.26867676 7.03780890]
[126.55702209 13.14987087]
[112.31229401 17.88850594]
[97.67169189 21.20807838]
[99.53930664 36.09135818]
[101.40692139 50.97463989]
[103.27453613 65.85791779]
[123.05182648 70.60668945]
[138.14666748 86.66551971]
[142.28956604 110.04325104]
[156.93305969 113.29407501]
[171.57656860 116.54490662]
[186.22006226 119.79573059]
[200.86357117 123.04655457]
[215.50706482 126.29737854]
[228.70245361 117.59924316]
[244.16647339 120.86106110]
[252.72460938 134.14765930]
[249.29948425 149.57633972]
[235.92314148 157.99353027]
[220.53153992 154.40547180]
[212.25624084 140.94088745]
[197.61274719 137.69006348]
[182.96923828 134.43922424]
[168.32574463 131.18840027]
[153.68223572 127.93757629]
[139.03874207 124.68675232]
[133.18893433 129.38034058]
[144.48127747 139.25367737]
[155.77363586 149.12701416]
[167.06597900 159.00035095]
[179.71681213 167.05989075]
[183.34452820 181.61460876]
[175.95622253 194.66883850]
[161.61067200 199.05123901]
[148.18862915 192.35430908]
[143.06344604 178.25871277]
[135.87207031 165.09497070]
[128.68067932 151.93122864]
[121.48930359 138.76750183]
[115.63948822 143.46107483]
[115.63948822 158.46107483]
[115.63948822 173.46107483]
[115.63948822 188.46107483]
[115.63948822 203.46107483]
[115.63948822 218.46107483]
[115.63948822 233.46107483]
[115.63948822 248.46107483]
[115.63948822 263.46109009]
[115.63948822 278.46109009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[38 107]
[39 106]
[40 105]
[41 104]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
