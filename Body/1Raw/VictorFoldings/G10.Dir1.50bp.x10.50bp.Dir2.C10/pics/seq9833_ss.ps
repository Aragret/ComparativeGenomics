%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCxxxxxxxxxxGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCUCGCUUCCCCACCCUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-83.79042816 228.74928284]
[-96.35666656 236.94010925]
[-108.92291260 245.13092041]
[-121.48915100 253.32174683]
[-134.05538940 261.51257324]
[-146.62162781 269.70339966]
[-158.57571411 278.76431274]
[-169.85748291 288.64971924]
[-181.13925171 298.53515625]
[-192.42102051 308.42059326]
[-203.70280457 318.30599976]
[-197.52017212 332.09973145]
[-195.67964172 347.10317993]
[-198.34487915 361.98229980]
[-205.27886963 375.41400146]
[-215.86506653 386.20401001]
[-229.16213989 393.39282227]
[-243.98774719 396.34124756]
[-259.02355957 394.78710938]
[-272.93264771 388.86859131]
[-284.47821045 379.11196899]
[-292.63360596 366.38482666]
[-296.67367554 351.81878662]
[-296.23919678 336.70910645]
[-291.36877441 322.39929199]
[-282.49551392 310.16180420]
[-270.40838623 301.08474731]
[-256.18218994 295.97528076]
[-241.08190918 295.28771973]
[-226.45022583 299.08319092]
[-213.58822632 307.02423096]
[-202.30644226 297.13879395]
[-191.02467346 287.25338745]
[-179.74290466 277.36795044]
[-168.46113586 267.48254395]
[-183.40129089 266.14407349]
[-194.10595703 255.63642883]
[-195.72167969 240.72370911]
[-187.51593018 228.16720581]
[-173.20913696 223.65995789]
[-159.28785706 229.24549866]
[-152.06393433 242.39140320]
[-154.81245422 257.13714600]
[-142.24621582 248.94633484]
[-129.67997742 240.75550842]
[-117.11373138 232.56468201]
[-104.54748535 224.37387085]
[-91.98124695 216.18304443]
[-99.52014160 202.69863892]
[-106.11338806 188.72749329]
[-111.72974396 174.33581543]
[-116.34258270 159.59182739]
[-119.93004608 144.56538391]
[-122.47512817 129.32771301]
[-123.96577454 113.95104980]
[-124.39490509 98.50826263]
[-123.76049805 83.07254791]
[-122.06555176 67.71706390]
[-119.31810760 52.51458359]
[-115.53118896 37.53716278]
[-110.72273254 22.85579491]
[-104.91553497 8.54005909]
[-98.13712311 -5.34219456]
[-90.41962433 -18.72516823]
[-81.79960632 -31.54543304]
[-72.31793976 -43.74222565]
[-62.01954651 -55.25773621]
[-50.95325089 -66.03739166]
[-39.17149734 -76.03009033]
[-26.73012543 -85.18848419]
[-13.68810463 -93.46915436]
[-0.10724791 -100.83286285]
[13.94807720 -107.24469757]
[28.41125298 -112.67427826]
[43.21372986 -117.09587097]
[58.28535461 -120.48851776]
[73.55468750 -122.83613586]
[88.94935608 -124.12760162]
[104.39640808 -124.35678864]
[119.82261658 -123.52262115]
[135.15487671 -121.62904358]
[150.32051086 -118.68503571]
[165.24766541 -114.70454407]
[179.86555481 -109.70644379]
[194.10491943 -103.71441650]
[200.84696960 -117.11384583]
[197.19763184 -132.73632812]
[207.24916077 -145.24017334]
[223.29087830 -145.03352356]
[233.01695251 -132.27487183]
[228.96636963 -116.75158691]
[214.24639893 -110.37180328]
[207.50434875 -96.97236633]
[217.74899292 -91.02480316]
[227.66549683 -84.54489899]
[237.22622681 -77.55072784]
[246.40455627 -70.06176758]
[255.17489624 -62.09889221]
[263.51278687 -53.68429184]
[271.39505005 -44.84141922]
[278.79965210 -35.59491348]
[285.70599365 -25.97054100]
[292.09484863 -15.99512386]
[297.94836426 -5.69646120]
[303.25027466 4.89674854]
[307.98574829 15.75498390]
[312.14166260 26.84798813]
[315.70635986 38.14484406]
[318.66998291 49.61407471]
[321.02420044 61.22371674]
[322.76251221 72.94142151]
[323.88003540 84.73451996]
[324.37365723 96.57016754]
[324.24200439 108.41537476]
[339.20428467 109.47856903]
[354.16656494 110.54176331]
[370.39440918 105.63330841]
[379.60336304 119.86817169]
[368.47409058 132.65783691]
[353.10336304 125.50403595]
[338.14108276 124.44084167]
[323.17880249 123.37764740]
[320.94412231 139.23008728]
[317.58486938 154.88284302]
[313.11816406 170.25627136]
[307.56677246 185.27212524]
[300.95892334 199.85395813]
[293.32824707 213.92755127]
[284.71359253 227.42131042]
[275.15878296 240.26652527]
[264.71249390 252.39781189]
[253.42784119 263.75344849]
[241.36230469 274.27563477]
[228.57727051 283.91079712]
[215.13781738 292.60992432]
[201.11233521 300.32870483]
[186.57223511 307.02789307]
[171.59150696 312.67333984]
[156.24639893 317.23635864]
[140.61500549 320.69372559]
[124.77689362 323.02780151]
[108.81268311 324.22674561]
[92.80361176 324.28445435]
[76.83117676 323.20059204]
[60.97665405 320.98071289]
[45.32075500 317.63610840]
[29.94315338 313.18380737]
[14.92212200 307.64645386]
[0.33411232 301.05224609]
[-13.74662781 293.43475342]
[-27.24843025 284.83273315]
[-40.10257721 275.28994751]
[-52.24364471 264.85501099]
[-63.60983276 253.58099365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[85 93]
[86 92]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
