%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAxxxxxxxxxxCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-51.37235260 291.99441528]
[-60.90184784 284.08160400]
[-71.11532593 295.06726074]
[-81.32881165 306.05294800]
[-91.54228973 317.03860474]
[-101.75576782 328.02426147]
[-105.48566437 343.39950562]
[-119.81826782 347.45236206]
[-130.03175354 358.43804932]
[-140.24522400 369.42370605]
[-150.45870972 380.40936279]
[-160.67219543 391.39501953]
[-170.88566589 402.38070679]
[-181.09915161 413.36636353]
[-191.31262207 424.35202026]
[-192.16790771 440.37225342]
[-205.30947876 449.57437134]
[-220.65623474 444.89929199]
[-226.43547058 429.93331909]
[-218.21385193 416.15710449]
[-202.29829407 414.13854980]
[-192.08480835 403.15289307]
[-181.87133789 392.16720581]
[-171.65785217 381.18154907]
[-161.44438171 370.19589233]
[-151.23089600 359.21023560]
[-141.01741028 348.22454834]
[-130.80393982 337.23889160]
[-127.80458069 322.64941406]
[-112.74143219 317.81079102]
[-102.52795410 306.82513428]
[-92.31447601 295.83944702]
[-82.10099030 284.85379028]
[-71.88751221 273.86813354]
[-87.39947510 257.02508545]
[-101.26769257 238.80474854]
[-113.37052917 219.36691284]
[-123.60183716 198.88206482]
[-131.87185669 177.52989197]
[-138.10806274 155.49768066]
[-142.25575256 132.97868347]
[-144.27853394 110.17042542]
[-144.15869141 87.27294922]
[-141.89724731 64.48711395]
[-137.51405334 42.01277161]
[-131.04754639 20.04705238]
[-122.55445862 -1.21737504]
[-112.10926819 -21.59399414]
[-99.80361176 -40.90407562]
[-85.74541473 -58.97824478]
[-96.83673096 -69.07689667]
[-107.92804718 -79.17554474]
[-119.01936340 -89.27419281]
[-135.14768982 -92.24217987]
[-140.38581848 -107.78225708]
[-129.34519958 -119.90813446]
[-113.38348389 -116.14574432]
[-108.92071533 -100.36550903]
[-97.82939911 -90.26686096]
[-86.73808289 -80.16821289]
[-75.64676666 -70.06956482]
[-66.80800629 -78.74711609]
[-57.54109955 -86.96588898]
[-47.86983871 -94.70478058]
[-37.81904602 -101.94393158]
[-27.41452026 -108.66476440]
[-16.68296051 -114.85001373]
[-5.65191507 -120.48381805]
[5.65030384 -125.55171967]
[17.19468689 -130.04069519]
[28.95160484 -133.93923950]
[40.89088058 -137.23733521]
[52.98186874 -139.92652893]
[65.19353485 -141.99990845]
[77.49453735 -143.45214844]
[89.85330963 -144.27952576]
[102.23812103 -144.47991943]
[114.61718750 -144.05282593]
[126.95874023 -142.99931335]
[139.23109436 -141.32211304]
[151.40275574 -139.02551270]
[163.44248962 -136.11541748]
[175.31938171 -132.59930420]
[187.00294495 -128.48616028]
[198.46321106 -123.78659058]
[209.67076111 -118.51262665]
[220.59681702 -112.67781067]
[231.21333313 -106.29711914]
[241.49307251 -99.38694000]
[251.40965271 -91.96499634]
[260.93762207 -84.05033875]
[270.05249023 -75.66329193]
[278.73092651 -66.82537079]
[286.95059204 -57.55926132]
[294.69042969 -47.88875580]
[301.93054199 -37.83866501]
[308.65237427 -27.43478966]
[314.83868408 -16.70383263]
[320.47354126 -5.67333412]
[325.54254150 5.62839222]
[330.03265381 17.17233849]
[333.93234253 28.92887688]
[337.23159790 40.86783218]
[339.92196655 52.95855713]
[341.99652100 65.17002869]
[343.44995117 77.47088623]
[344.27853394 89.82957458]
[344.48013306 102.21437073]
[344.05422974 114.59347534]
[343.00192261 126.93513489]
[341.32592773 139.20765686]
[339.03051758 151.37953186]
[336.12158203 163.41954041]
[332.60662842 175.29678345]
[328.49462891 186.98075867]
[323.79614258 198.44148254]
[318.52328491 209.64953613]
[312.68951416 220.57615662]
[306.30987549 231.19329834]
[299.40069580 241.47370911]
[291.97970581 251.39100647]
[284.06597900 260.91973877]
[275.67980957 270.03543091]
[266.84274292 278.71469116]
[257.57742310 286.93527222]
[247.90766907 294.67605591]
[237.85827637 301.91714478]
[227.45506287 308.64001465]
[216.72470093 314.82733154]
[205.69474792 320.46328735]
[194.39352417 325.53338623]
[182.85000610 330.02459717]
[171.09384155 333.92544556]
[159.15521240 337.22586060]
[147.06474304 339.91738892]
[134.85348511 341.99313354]
[122.55276489 343.44775391]
[110.19415283 344.27755737]
[97.80937958 344.48034668]
[85.43022919 344.05566406]
[73.08847809 343.00454712]
[60.81579590 341.32974243]
[48.64368439 339.03549194]
[36.60338974 336.12774658]
[24.72581482 332.61392212]
[13.04144382 328.50308228]
[1.58026505 323.80572510]
[-9.62830257 318.53393555]
[-20.55549049 312.70123291]
[-31.17325211 306.32260132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[50 61]
[51 60]
[52 59]
[53 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
