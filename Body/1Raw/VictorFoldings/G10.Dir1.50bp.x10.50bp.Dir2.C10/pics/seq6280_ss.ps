%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUUGGAACACUAUACCUAUUAUUCGGCGCAUGAGCUGGAGUCCUAGGCACAGCUCUAAGxxxxxxxxxxAUCAUUCUGAGGGGCCACAGUAAUUACAAACUUACUAUCCGCCAUCCCAUACAUUGGGACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[197.78187561 421.87121582]
[197.78187561 406.87121582]
[197.78187561 391.87121582]
[197.78187561 376.87121582]
[197.78187561 361.87121582]
[197.78187561 346.87121582]
[197.78187561 331.87121582]
[197.78187561 316.87121582]
[197.78187561 301.87121582]
[197.78187561 286.87121582]
[193.38157654 272.53112793]
[178.75189209 269.98010254]
[170.04260254 257.50601196]
[172.81756592 242.17834473]
[164.40414429 229.76002502]
[155.99073792 217.34172058]
[142.44647217 211.14477539]
[141.11164856 195.37997437]
[132.69824219 182.96165466]
[116.53273010 176.19996643]
[115.28794098 157.85653687]
[106.62133789 145.61358643]
[97.95472717 133.37063599]
[83.57024384 129.11778259]
[69.63953400 134.67971802]
[55.70881271 140.24165344]
[48.08392334 154.35691833]
[32.26926422 157.05433655]
[20.39648628 146.26467896]
[21.57336998 130.26484680]
[34.89711380 121.32855225]
[50.14687729 126.31094360]
[64.07759094 120.74900818]
[78.00830841 115.18706512]
[75.46601868 103.26570892]
[78.52687836 92.41107941]
[85.68563080 84.91032410]
[79.98097229 71.03744507]
[74.27630615 57.16456223]
[61.87203979 47.34393311]
[64.18762970 32.63042450]
[51.78336334 22.80979538]
[54.09895325 8.09628773]
[45.30710983 -4.05704546]
[33.91603851 -13.81632042]
[22.52496338 -23.57559395]
[11.13388920 -33.33486938]
[-0.25718415 -43.09414291]
[-11.64825821 -52.85341644]
[-24.58509827 -52.64883804]
[-33.87849426 -61.06335449]
[-34.88801956 -73.15645599]
[-46.07631683 -83.14755249]
[-62.11048889 -83.68135834]
[-71.57431793 -96.63572693]
[-67.20796204 -112.07316589]
[-52.36091995 -118.15139771]
[-38.42256927 -110.20772552]
[-36.08522034 -94.33584595]
[-24.89692497 -84.34474945]
[-7.57038403 -81.73027039]
[-1.88898337 -64.24449158]
[9.50209045 -54.48521805]
[20.89316368 -44.72594452]
[32.28423691 -34.96666718]
[43.67531204 -25.20739365]
[55.06638718 -15.44811916]
[50.32860947 -29.68024826]
[49.20933914 -44.63843155]
[51.77634048 -59.41714859]
[57.87420654 -73.12174988]
[67.13379669 -84.92259216]
[78.99456787 -94.10530090]
[92.73850250 -100.11398315]
[107.53358459 -102.58489227]
[122.48418427 -101.36844635]
[136.68522644 -96.53829193]
[149.27702332 -88.38681793]
[159.49731445 -77.40749359]
[166.72741699 -64.26496887]
[170.52960205 -49.75485992]
[170.67373657 -34.75555420]
[167.15106201 -20.17505836]
[160.17486572 -6.89603186]
[150.16743469 4.27765799]
[137.73458862 12.66959190]
[123.62899017 17.77174950]
[108.70453644 19.27526283]
[93.86470032 17.08911514]
[80.00783539 11.34564781]
[67.97183228 2.39162421]
[79.96806335 11.21997261]
[78.06050873 26.92576218]
[90.05673981 35.75411224]
[88.14918518 51.45989990]
[93.85385132 65.33277893]
[99.55850983 79.20565796]
[117.87607574 85.88855743]
[123.94670868 106.25588989]
[110.19768524 124.70402527]
[118.86428833 136.94697571]
[127.53089905 149.18992615]
[140.12690735 152.14700317]
[147.08718872 162.57415771]
[145.11656189 174.54824829]
[153.52996826 186.96656799]
[167.67602539 194.05175781]
[168.40905762 208.92831421]
[176.82246399 221.34661865]
[185.23587036 233.76493835]
[200.49984741 236.87121582]
[208.85533142 249.58500671]
[205.79989624 264.11773682]
[205.19869995 249.12977600]
[207.57077026 234.31852722]
[212.82258606 220.26795959]
[220.74708557 207.53208923]
[231.03179932 196.61308289]
[243.27119446 187.94146729]
[256.98269653 181.85916138]
[271.62567139 178.60597229]
[286.62277222 178.31018066]
[301.38262939 180.98345947]
[315.32330322 186.52040100]
[327.89511108 194.70266724]
[338.60235596 205.20765686]
[347.02288818 217.62115479]
[352.82464600 231.45372009]
[355.77886963 246.15991211]
[355.76913452 261.15991211]
[352.79574585 275.86227417]
[346.97601318 289.68725586]
[338.53933716 302.08978271]
[327.81845093 312.58084106]
[315.23599243 320.74676514]
[301.28814697 326.26556396]
[286.52481079 328.91961670]
[271.52810669 328.60433960]
[256.88937378 325.33209229]
[243.18580627 319.23196411]
[230.95768738 310.54443359]
[220.68719482 299.61203003]
[212.78187561 286.87121582]
[212.78187561 301.87121582]
[212.78187561 316.87121582]
[212.78187561 331.87121582]
[212.78187561 346.87121582]
[212.78187561 361.87121582]
[212.78187561 376.87121582]
[212.78187561 391.87121582]
[212.78187561 406.87121582]
[212.78187561 421.87121582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 113]
[14 110]
[15 109]
[16 108]
[18 106]
[19 105]
[21 102]
[22 101]
[23 100]
[24 34]
[25 33]
[26 32]
[37 97]
[38 96]
[39 95]
[41 93]
[43 91]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[52 60]
[53 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
