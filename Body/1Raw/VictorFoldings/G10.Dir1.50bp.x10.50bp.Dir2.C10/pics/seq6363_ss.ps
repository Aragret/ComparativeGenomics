%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUUCUUCAUAGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUCCCCUAAUxxxxxxxxxxCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[179.40875244 392.88909912]
[178.17814636 377.93966675]
[176.94752502 362.99020386]
[175.71691895 348.04077148]
[174.48629761 333.09133911]
[173.25569153 318.14190674]
[170.34822083 303.42639160]
[165.80093384 289.13226318]
[161.25364685 274.83813477]
[156.70634460 260.54400635]
[152.15905762 246.24987793]
[147.61177063 231.95574951]
[142.48146057 217.86035156]
[136.77680969 203.98747253]
[122.32953644 194.07177734]
[124.85099792 175.85989380]
[118.86270142 162.10705566]
[112.87440491 148.35423279]
[98.70377350 150.02201843]
[84.63853455 147.62254333]
[71.82231903 141.35093689]
[61.29721069 131.71713257]
[53.91898727 119.50441742]
[50.28757095 105.70582581]
[50.69822693 91.44329834]
[55.11756516 77.87651062]
[63.18625259 66.10855865]
[74.24822998 57.09629059]
[68.54356384 43.22340775]
[54.17943954 44.58309174]
[40.03165436 41.83405304]
[27.25021172 35.20892715]
[16.87145042 25.25503349]
[9.73403454 12.78917694]
[6.41117239 -1.16936731]
[7.16460466 -15.48220539]
[11.92400265 -28.98465919]
[20.29342842 -40.58053970]
[31.58425713 -49.33114243]
[26.16563225 -63.31822586]
[20.74700546 -77.30531311]
[8.54699135 -87.37855530]
[11.16418839 -102.04141998]
[5.74556303 -116.02850342]
[0.32693827 -130.01557922]
[-5.09168673 -144.00267029]
[-10.51031208 -157.98974609]
[-15.92893696 -171.97683716]
[-24.21441078 -184.48086548]
[-34.98308945 -194.92288208]
[-43.37744904 -198.68194580]
[-45.86289978 -205.69155884]
[-56.41491318 -216.35246277]
[-66.96692657 -227.01338196]
[-77.51894379 -237.67428589]
[-93.47142029 -241.47567749]
[-97.89560699 -257.26675415]
[-86.24028778 -268.80303955]
[-70.49545288 -264.21694946]
[-66.85803223 -248.22630310]
[-56.30601883 -237.56538391]
[-45.75400543 -226.90447998]
[-35.20198822 -216.24357605]
[-24.54108047 -205.69155884]
[-13.77240181 -195.24954224]
[-17.61532974 -209.74893188]
[-17.47942162 -224.74830627]
[-13.37439251 -239.17567444]
[-5.59363604 -251.99986267]
[5.30674410 -262.30432129]
[18.54767990 -269.35253906]
[33.18281555 -272.64080811]
[48.16616058 -271.93411255]
[62.42682266 -267.28292847]
[74.94557190 -259.01968384]
[84.82766724 -247.73501587]
[91.36682892 -234.23539734]
[94.09568024 -219.48571777]
[92.81919098 -204.54013062]
[87.62859344 -190.46682739]
[78.89487457 -178.27166748]
[67.24223328 -168.82623291]
[53.50351715 -162.80563354]
[38.66064835 -160.64015198]
[23.77447701 -162.48457336]
[9.90894032 -168.20706177]
[-1.94185328 -177.39546204]
[3.47677183 -163.40837097]
[8.89539623 -149.42129517]
[14.31402206 -135.43420410]
[19.73264694 -121.44712830]
[25.15127182 -107.46004486]
[36.96371078 -98.38724518]
[34.73408890 -82.72393799]
[40.15271378 -68.73685455]
[45.57133865 -54.74977112]
[61.17163467 -55.78564453]
[76.34966278 -51.95467377]
[89.62255859 -43.61880875]
[99.68978119 -31.58070946]
[105.56052399 -17.00648499]
[106.65128326 -1.31273592]
[102.84375763 13.97113609]
[94.49759674 27.35197639]
[82.41645050 37.51874542]
[88.12110901 51.39162827]
[103.68298340 50.09691620]
[118.88616943 53.66217041]
[132.25007629 61.74016953]
[142.47320557 73.54421997]
[148.55996704 87.92474365]
[149.91755676 103.48125458]
[146.41378784 118.69873047]
[138.38986206 132.09516907]
[126.62723541 142.36593628]
[132.61552429 156.11875916]
[138.60382080 169.87159729]
[150.33230591 175.33477783]
[155.02035522 186.96205139]
[150.64968872 198.28280640]
[156.35435486 212.15568542]
[160.00613403 214.75648499]
[162.36576843 218.06640625]
[163.36965942 221.57910156]
[163.12960815 224.82125854]
[161.90589905 227.40844727]
[166.45318604 241.70257568]
[171.00047302 255.99671936]
[175.54777527 270.29083252]
[180.09506226 284.58496094]
[184.64234924 298.87908936]
[189.57009888 284.71163940]
[200.43022156 274.36474609]
[214.81948853 270.12814331]
[229.55371094 272.93933105]
[241.37236023 282.17617798]
[247.66009521 295.79470825]
[247.02548218 310.78128052]
[239.60899353 323.81951904]
[227.05178833 332.02420044]
[212.13265991 333.57971191]
[198.15304565 328.14181519]
[188.20512390 316.91131592]
[189.43574524 331.86074829]
[190.66635132 346.81018066]
[191.89695740 361.75961304]
[193.12757874 376.70904541]
[194.35818481 391.65847778]
[205.61564636 403.08865356]
[203.55509949 418.99884033]
[189.75723267 427.18408203]
[174.80656433 421.36535645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 131]
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 121]
[14 120]
[16 117]
[17 116]
[18 115]
[28 106]
[29 105]
[39 96]
[40 95]
[41 94]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[48 87]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
