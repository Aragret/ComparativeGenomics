%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUxxxxxxxxxxAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCAUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[133.97488403 73.86395264]
[123.86944580 84.94908905]
[113.76400757 96.03422546]
[110.58552551 109.64997864]
[97.32112122 114.07121277]
[87.44541931 125.36149597]
[77.80360413 136.85215759]
[74.86013794 152.39714050]
[60.75209045 157.17335510]
[51.11027527 168.66403198]
[41.46846008 180.15469360]
[47.33708954 194.29039001]
[45.95277023 209.53315735]
[37.63360596 222.38034058]
[24.29128265 229.87974548]
[8.99176788 230.30805969]
[-4.74922132 223.56684875]
[-13.77410698 211.20521545]
[-16.00903511 196.06376648]
[-10.94043827 181.62188721]
[0.26695925 171.19821167]
[15.03777885 167.18804932]
[29.97779465 170.51287842]
[39.61960983 159.02221680]
[49.26142120 147.53153992]
[51.51523972 132.80845642]
[66.31293488 127.21034241]
[75.95475006 115.71968079]
[76.42841339 110.91085052]
[79.96848297 106.36598969]
[86.23599243 103.96577454]
[89.41447449 90.35002136]
[102.67887878 85.92878723]
[112.78430939 74.84365082]
[122.88974762 63.75852203]
[113.55783844 54.05174637]
[104.84717560 43.78399658]
[96.79142761 32.99495697]
[89.42169952 21.72633362]
[82.76645660 10.02168560]
[76.85140991 -2.07374692]
[71.69939423 -14.51321220]
[67.33031464 -27.24863052]
[63.76103210 -40.23078156]
[61.00532532 -53.40949249]
[59.07382584 -66.73382568]
[57.97397995 -80.15228271]
[57.71002579 -93.61302185]
[58.28295898 -107.06400299]
[59.69055557 -120.45326233]
[61.92735291 -133.72904968]
[64.98469543 -146.84007263]
[68.85073853 -159.73564148]
[73.51054382 -172.36595154]
[78.94607544 -184.68220520]
[85.13630676 -196.63677979]
[92.05731201 -208.18350220]
[99.68232727 -219.27777100]
[107.98187256 -229.87670898]
[116.92385101 -239.93936157]
[126.47369385 -249.42686462]
[136.59449768 -258.30255127]
[147.24711609 -266.53216553]
[158.39039612 -274.08389282]
[169.98126221 -280.92855835]
[181.97488403 -287.03970337]
[194.32493591 -292.39379883]
[206.98365784 -296.97012329]
[219.90214539 -300.75097656]
[233.03045654 -303.72183228]
[246.31787109 -305.87118530]
[259.71301270 -307.19076538]
[273.16412354 -307.67544556]
[286.61920166 -307.32345581]
[300.02630615 -306.13607788]
[313.33355713 -304.11798096]
[326.48959351 -301.27694702]
[339.44354248 -297.62399292]
[352.14532471 -293.17324829]
[364.54589844 -287.94192505]
[376.59735107 -281.95025635]
[388.25311279 -275.22143555]
[399.46810913 -267.78143311]
[410.19903564 -259.65905762]
[420.40444946 -250.88569641]
[430.04492188 -241.49526978]
[439.08316040 -231.52406311]
[447.48431396 -221.01065063]
[455.21588135 -209.99565125]
[462.24801636 -198.52165222]
[468.55358887 -186.63301086]
[474.10818481 -174.37567139]
[478.89038086 -161.79699707]
[493.23043823 -166.19729614]
[507.57049561 -170.59759521]
[521.91058350 -174.99789429]
[536.25061035 -179.39819336]
[550.59069824 -183.79849243]
[564.93078613 -188.19879150]
[565.68371582 -203.33843994]
[571.57226562 -217.30630493]
[581.88519287 -228.41572571]
[595.37725830 -235.32514954]
[610.41918945 -237.20025635]
[625.19458008 -233.81460571]
[637.91931152 -225.57704163]
[647.05676270 -213.48228455]
[651.50347900 -198.99082947]
[650.72259521 -183.85260010]
[644.80841064 -169.89559937]
[634.47497559 -158.80522156]
[620.97021484 -151.92066956]
[605.92486572 -150.07328796]
[591.15570068 -153.48616028]
[578.44616699 -161.74716187]
[569.33105469 -173.85873413]
[554.99096680 -169.45843506]
[540.65093994 -165.05813599]
[526.31085205 -160.65783691]
[511.97082520 -156.25753784]
[497.63073730 -151.85723877]
[483.29067993 -147.45693970]
[487.09829712 -130.71702576]
[489.56747437 -113.72771454]
[490.68261719 -96.59584045]
[490.43664551 -79.42914581]
[488.83108521 -62.33561325]
[485.87597656 -45.42274475]
[481.58984375 -28.79692268]
[475.99963379 -12.56272411]
[469.14038086 3.17773032]
[461.05526733 18.32542419]
[451.79501343 32.78506088]
[441.41787720 46.46567535]
[429.98907471 59.28119278]
[417.58044434 71.15097809]
[404.26995850 82.00034332]
[390.14135742 91.76100159]
[375.28341675 100.37153625]
[359.78961182 107.77774811]
[343.75729370 113.93300629]
[327.28735352 118.79854584]
[310.48333740 122.34371948]
[293.45089722 124.54618835]
[276.29718018 125.39204407]
[259.13003540 124.87591553]
[242.05747986 123.00099182]
[225.18685913 119.77902985]
[208.62429810 115.23022461]
[192.47398376 109.38315582]
[176.83749390 102.27453613]
[161.81321716 93.94902802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[5 31]
[6 28]
[7 27]
[9 25]
[10 24]
[11 23]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
