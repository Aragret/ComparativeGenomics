%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAUAAACAAAUAGGUUUGGUCCUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACACAUxxxxxxxxxxAUUUGAGAAGCCUUCGCUUCGAAGCGAAAAGUCCUAAUAGUAGAAGAACCCUCCAUAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[78.00299072 441.18887329]
[78.00299072 426.18887329]
[78.00299072 411.18887329]
[78.00299072 396.18887329]
[78.00299072 381.18887329]
[78.00299072 366.18887329]
[78.00299072 351.18887329]
[78.00299072 336.18887329]
[78.00299072 321.18887329]
[78.00299072 306.18887329]
[65.47686768 303.60494995]
[53.65489197 298.71145630]
[42.95891953 291.68106079]
[33.77101135 282.76266479]
[26.41976738 272.27270508]
[21.16857910 260.58380127]
[18.20619392 248.11161804]
[17.63993454 235.30009460]
[19.49180794 222.60554504]
[23.69765663 210.48048401]
[30.10937691 199.35746765]
[38.50014114 189.63366699]
[48.57241058 181.65670776]
[59.96850204 175.71220398]
[72.28327179 172.01354980]
[85.07852936 170.69429016]
[86.63611603 155.77537537]
[88.19369507 140.85646057]
[89.75127411 125.93755341]
[91.30885315 111.01863861]
[80.75756836 100.35701752]
[65.82325745 101.75932312]
[50.88895035 103.16162109]
[37.83606720 113.08907318]
[22.81887436 106.50000000]
[21.28576851 90.17267609]
[34.81388092 80.90325165]
[49.48664474 88.22731781]
[64.42095184 86.82501221]
[79.35526276 85.42270660]
[88.22295380 87.96516418]
[95.30203247 93.03117371]
[100.20358276 78.85461426]
[105.10513306 64.67805481]
[110.00669098 50.50149536]
[114.46350098 36.17889786]
[118.47124481 21.72421074]
[122.47898102 7.26952219]
[126.48672485 -7.18516636]
[130.49446106 -21.63985443]
[122.97055054 -35.27907944]
[127.24088287 -49.88109970]
[140.29016113 -56.96994400]
[144.29791260 -71.42463684]
[148.30564880 -85.87932587]
[136.66511536 -85.84735870]
[126.81437683 -91.37931824]
[121.13917542 -100.74971771]
[120.82185364 -111.35726166]
[125.60855865 -120.44308472]
[133.96081543 -125.80820465]
[126.51228333 -139.76635742]
[134.51268005 -152.32991028]
[134.82473755 -167.32666016]
[125.57048798 -183.21183777]
[135.16159058 -197.87507629]
[135.16159058 -212.87507629]
[120.90892029 -218.03619385]
[109.28298950 -227.76313782]
[101.68769073 -240.88134766]
[99.04019165 -255.80671692]
[101.66017914 -270.73693848]
[109.23129272 -283.86911011]
[120.83927917 -293.61746216]
[135.08241272 -298.80484009]
[150.24076843 -298.80484009]
[164.48390198 -293.61746216]
[176.09188843 -283.86911011]
[183.66300964 -270.73693848]
[186.28300476 -255.80671692]
[183.63549805 -240.88134766]
[176.04019165 -227.76313782]
[164.41426086 -218.03619385]
[150.16159058 -212.87507629]
[150.16159058 -197.87507629]
[158.51014709 -189.06547546]
[158.59457397 -176.52706909]
[149.82150269 -167.01460266]
[149.50944519 -152.01785278]
[156.98028564 -139.13237000]
[148.95756531 -125.49614716]
[159.22398376 -119.02072144]
[164.31216431 -106.70201874]
[177.25021362 -114.29192352]
[190.18827820 -121.88183594]
[203.12632751 -129.47174072]
[216.06439209 -137.06164551]
[229.00244141 -144.65156555]
[236.62846375 -159.16967773]
[253.02310181 -159.55397034]
[261.32098389 -145.40910339]
[252.98593140 -131.28610229]
[236.59234619 -131.71350098]
[223.65429688 -124.12359619]
[210.71623230 -116.53368378]
[197.77818298 -108.94377899]
[184.84011841 -101.35387421]
[171.90206909 -93.76396179]
[162.76033020 -81.87158203]
[158.75259399 -67.41689301]
[154.74485779 -52.96220398]
[162.28073120 -40.16587067]
[158.42222595 -25.44966888]
[144.94915771 -17.63211441]
[140.94140625 -3.17742586]
[136.93367004 11.27726269]
[132.92593384 25.73195076]
[128.91819763 40.18663788]
[130.37738037 43.46356201]
[130.28225708 47.62200546]
[128.23089600 51.90502548]
[124.18324280 55.40304565]
[119.28169250 69.57960510]
[114.38014221 83.75616455]
[109.47859192 97.93272400]
[106.22776794 112.57622528]
[104.67018890 127.49513245]
[103.11260223 142.41404724]
[101.55502319 157.33296204]
[99.99744415 172.25187683]
[116.37519073 178.12725830]
[130.72319031 187.95332336]
[142.10873413 201.08540344]
[149.79321289 216.66415405]
[153.27998352 233.67172241]
[152.34646606 250.99829102]
[147.05839539 267.51449585]
[137.76516724 282.14495850]
[125.07678986 293.93847656]
[109.82381439 302.12969971]
[93.00299072 306.18887329]
[93.00299072 321.18887329]
[93.00299072 336.18887329]
[93.00299072 351.18887329]
[93.00299072 366.18887329]
[93.00299072 381.18887329]
[93.00299072 396.18887329]
[93.00299072 411.18887329]
[93.00299072 426.18887329]
[93.00299072 441.18887329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 130]
[27 129]
[28 128]
[29 127]
[30 126]
[31 40]
[32 39]
[33 38]
[42 125]
[43 124]
[44 123]
[45 122]
[46 118]
[47 117]
[48 116]
[49 115]
[50 114]
[53 111]
[54 110]
[55 109]
[61 91]
[63 89]
[64 88]
[66 85]
[67 84]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
