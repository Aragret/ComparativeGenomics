%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGGCUCAUUCAUUUCUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCxxxxxxxxxxUACUAGUCACAGCCCUAUACUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.50345612 111.92628479]
[88.58977509 103.50566101]
[92.89278412 90.40988159]
[93.51676178 75.42286682]
[94.14073944 60.43584824]
[94.76471710 45.44883347]
[95.38869476 30.46181679]
[96.01267242 15.47480106]
[96.63665009 0.48778471]
[97.26062775 -14.49923134]
[97.88459778 -29.48624802]
[98.50857544 -44.47326279]
[83.56627655 -45.82078171]
[68.70652008 -47.88863754]
[53.96403122 -50.67200470]
[39.37322617 -54.16438675]
[24.96818924 -58.35761642]
[10.78256607 -63.24190903]
[-3.15051603 -68.80585480]
[-16.79851341 -75.03646088]
[-30.12955093 -81.91916656]
[-43.11249542 -89.43791199]
[-55.71701813 -97.57511902]
[-67.91368866 -106.31179810]
[-79.67401886 -115.62753296]
[-90.97053528 -125.50057220]
[-101.77686310 -135.90785217]
[-112.06775665 -146.82508850]
[-121.81918335 -158.22674561]
[-131.00837708 -170.08621216]
[-139.61386108 -182.37580872]
[-147.61553955 -195.06680298]
[-154.99473572 -208.12956238]
[-161.73419189 -221.53358459]
[-167.81820679 -235.24755859]
[-173.23252869 -249.23945618]
[-177.96453857 -263.47659302]
[-182.00317383 -277.92575073]
[-185.33901978 -292.55313110]
[-187.96424866 -307.32461548]
[-189.87275696 -322.20565796]
[-191.06008911 -337.16156006]
[-191.52346802 -352.15731812]
[-191.26179504 -367.15798950]
[-190.27569580 -382.12847900]
[-188.56747437 -397.03387451]
[-186.14112854 -411.83929443]
[-183.00228882 -426.51022339]
[-179.15834045 -441.01239014]
[-174.61820984 -455.31185913]
[-169.39253235 -469.37530518]
[-163.49349976 -483.16986084]
[-156.93490601 -496.66329956]
[-149.73204041 -509.82412720]
[-141.90174866 -522.62158203]
[-133.46231079 -535.02575684]
[-124.43344116 -547.00775146]
[-114.83621979 -558.53955078]
[-104.69306946 -569.59417725]
[-94.02767944 -580.14581299]
[-82.86495209 -590.16986084]
[-71.23096466 -599.64294434]
[-59.15288925 -608.54284668]
[-46.65893173 -616.84881592]
[-33.77827454 -624.54144287]
[-20.54099846 -631.60284424]
[-6.97802448 -638.01641846]
[6.87897444 -643.76721191]
[20.99763298 -648.84185791]
[35.34497452 -653.22839355]
[49.88749313 -656.91668701]
[64.59122467 -659.89807129]
[79.42182159 -662.16552734]
[94.34465790 -663.71386719]
[109.32486725 -664.53942871]
[124.32746887 -664.64031982]
[139.31742859 -664.01617432]
[154.25971985 -662.66857910]
[169.11946106 -660.60064697]
[183.86193848 -657.81726074]
[198.45272827 -654.32476807]
[212.85774231 -650.13146973]
[227.04335022 -645.24713135]
[240.97640991 -639.68310547]
[254.62437439 -633.45245361]
[267.95538330 -626.56970215]
[280.93829346 -619.05090332]
[293.54278564 -610.91357422]
[305.73941040 -602.17687988]
[317.49969482 -592.86108398]
[328.79614258 -582.98797607]
[339.60241699 -572.58062744]
[349.89328003 -561.66339111]
[359.64465332 -550.26165771]
[368.83377075 -538.40216064]
[377.43920898 -526.11254883]
[385.44082642 -513.42150879]
[392.81994629 -500.35870361]
[399.55935669 -486.95465088]
[405.64331055 -473.24063110]
[411.05755615 -459.24871826]
[415.78952026 -445.01153564]
[419.82806396 -430.56237793]
[423.16384888 -415.93496704]
[425.78900146 -401.16348267]
[427.69744873 -386.28244019]
[428.88470459 -371.32653809]
[429.34802246 -356.33074951]
[429.08627319 -341.33007812]
[428.10009766 -326.35958862]
[426.39181519 -311.45422363]
[423.96539307 -296.64880371]
[420.82647705 -281.97787476]
[416.98245239 -267.47576904]
[412.44226074 -253.17628479]
[407.21652222 -239.11286926]
[401.31741333 -225.31834412]
[394.75875854 -211.82493591]
[387.55584717 -198.66415405]
[379.72549438 -185.86672974]
[371.28598022 -173.46257019]
[362.25704956 -161.48063660]
[352.65979004 -149.94891357]
[342.51657104 -138.89434814]
[331.85113525 -128.34272766]
[320.68838501 -118.31871796]
[309.05435181 -108.84572601]
[296.97622681 -99.94587708]
[284.48220825 -91.63996124]
[271.60153198 -83.94736481]
[258.36422729 -76.88607025]
[244.80120850 -70.47255707]
[230.94418335 -64.72180939]
[216.82550049 -59.64725876]
[202.47814941 -55.26075363]
[187.93560791 -51.57254410]
[173.23185730 -48.59124374]
[158.40124512 -46.32381058]
[143.47840881 -44.77554321]
[128.49819946 -43.95006180]
[113.49559784 -43.84928513]
[112.87162018 -28.86227036]
[112.24764252 -13.87525368]
[111.62366486 1.11176205]
[110.99968719 16.09877777]
[110.37570953 31.08579445]
[109.75173187 46.07281113]
[109.12775421 61.05982590]
[108.50377655 76.04684448]
[107.87979889 91.03385925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 142]
[12 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
