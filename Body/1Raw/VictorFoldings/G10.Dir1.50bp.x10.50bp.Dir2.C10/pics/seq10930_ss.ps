%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCAGAAAAUAGCCCACUAAUCCAAACUCUAACACUAUGCUUAGGCGCUAUCACCACUCxxxxxxxxxxGACCACACCGCUAACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.13233948 300.62805176]
[88.72333527 281.42031860]
[89.03539276 266.42355347]
[89.34745026 251.42680359]
[89.65950775 236.43005371]
[89.97156525 221.43330383]
[90.28361511 206.43653870]
[90.59567261 191.43978882]
[90.90773010 176.44303894]
[91.21978760 161.44628906]
[76.77270508 157.56066895]
[63.67496109 150.33119202]
[52.68743896 140.17784119]
[44.44843292 127.69045258]
[39.43656921 113.59445190]
[37.94300461 98.70870209]
[40.05450058 83.89797211]
[45.64839935 70.02265167]
[54.39973068 57.88879776]
[65.80010223 48.20130157]
[79.18724823 41.52293396]
[93.78346252 38.24166107]
[94.09551239 23.24490547]
[94.40756989 8.24815178]
[94.71962738 -6.74860144]
[79.76510620 -7.97458267]
[64.91313171 -10.10997391]
[50.21897507 -13.14683056]
[35.73728561 -17.07385445]
[21.52193832 -21.87644005]
[7.62582064 -27.53671837]
[-5.89937639 -34.03363419]
[-19.00333595 -41.34301376]
[-31.63731384 -49.43767548]
[-43.75430679 -58.28749466]
[-55.30923843 -67.85955811]
[-66.25912476 -78.11825562]
[-76.56323242 -89.02542114]
[-86.18322754 -100.54047394]
[-95.08332062 -112.62059021]
[-103.23040771 -125.22082520]
[-110.59417725 -138.29429626]
[-117.14723969 -151.79238892]
[-122.86521149 -165.66485596]
[-127.72682190 -179.86012268]
[-131.71398926 -194.32537842]
[-134.81187439 -209.00679016]
[-137.00897217 -223.84976196]
[-138.29707336 -238.79905701]
[-138.67141724 -253.79908752]
[-138.13059998 -268.79403687]
[-136.67663574 -283.72811890]
[-134.31494141 -298.54577637]
[-131.05427551 -313.19189453]
[-126.90679169 -327.61199951]
[-121.88791656 -341.75244141]
[-116.01631927 -355.56057739]
[-109.31383514 -368.98510742]
[-101.80540466 -381.97604370]
[-93.51896667 -394.48504639]
[-84.48532867 -406.46563721]
[-74.73811340 -417.87319946]
[-64.31357574 -428.66531372]
[-53.25049591 -438.80184937]
[-41.59002686 -448.24505615]
[-29.37554932 -456.95983887]
[-16.65250397 -464.91378784]
[-3.46821785 -472.07727051]
[10.12825966 -478.42364502]
[24.08634949 -483.92932129]
[38.35412598 -488.57382202]
[52.87851334 -492.33987427]
[67.60547638 -495.21343994]
[82.48023224 -497.18383789]
[97.44744110 -498.24377441]
[112.45143127 -498.38925171]
[127.43638611 -497.61975098]
[142.34654236 -495.93814087]
[157.12646484 -493.35067749]
[171.72114563 -489.86697388]
[186.07629395 -485.50000000]
[200.13851929 -480.26599121]
[213.85549927 -474.18444824]
[227.17620850 -467.27795410]
[240.05108643 -459.57223511]
[252.43225098 -451.09591675]
[264.27362061 -441.88058472]
[275.53118896 -431.96047974]
[286.16302490 -421.37252808]
[296.12960815 -410.15609741]
[305.39385986 -398.35293579]
[313.92129517 -386.00692749]
[321.68020630 -373.16403198]
[328.64172363 -359.87200928]
[334.77996826 -346.18029785]
[340.07208252 -332.13986206]
[344.49841309 -317.80288696]
[348.04244995 -303.22274780]
[350.69100952 -288.45364380]
[352.43429565 -273.55056763]
[353.26574707 -258.56893921]
[353.18234253 -243.56446838]
[352.18432617 -228.59300232]
[350.27548218 -213.71022034]
[347.46282959 -198.97149658]
[343.75689697 -184.43165588]
[339.17147827 -170.14479065]
[333.72357178 -156.16404724]
[327.43347168 -142.54142761]
[320.32458496 -129.32763672]
[312.42333984 -116.57179260]
[303.75915527 -104.32137299]
[294.36425781 -92.62194824]
[284.27355957 -81.51703644]
[273.52465820 -71.04795074]
[262.15750122 -61.25363159]
[250.21440125 -52.17052078]
[237.73974609 -43.83240891]
[224.77998352 -36.27030945]
[211.38330078 -29.51235962]
[197.59956360 -23.58369637]
[183.48001099 -18.50637627]
[169.07717896 -14.29928493]
[154.44467163 -10.97807503]
[139.63690186 -8.55510235]
[124.70896149 -7.03937960]
[109.71638489 -6.43654537]
[109.40432739 8.56020832]
[109.09226990 23.55696106]
[108.78021240 38.55371475]
[123.22729492 42.43933105]
[136.32504272 49.66880035]
[147.31256104 59.82215118]
[155.55157471 72.30954742]
[160.56343079 86.40554810]
[162.05699158 101.29129791]
[159.94549561 116.10202789]
[154.35160828 129.97735596]
[145.60026550 142.11120605]
[134.19989014 151.79870605]
[120.81275177 158.47706604]
[106.21653748 161.75834656]
[105.90448761 176.75509644]
[105.59243011 191.75184631]
[105.28037262 206.74859619]
[104.96831512 221.74536133]
[104.65625763 236.74211121]
[104.34420013 251.73886108]
[104.03215027 266.73562622]
[103.72009277 281.73236084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[22 130]
[23 129]
[24 128]
[25 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
