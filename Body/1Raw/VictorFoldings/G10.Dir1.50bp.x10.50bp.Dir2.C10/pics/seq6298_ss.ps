%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGGCACAGCUCUAAGCCUCCUUAUUCGAGCCGAGCUGGGCCAGCCAGGCAACCUUCUxxxxxxxxxxCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[274.15365601 204.15060425]
[261.06051636 196.83149719]
[247.96736145 189.51239014]
[234.87420654 182.19329834]
[221.78105164 174.87419128]
[208.68789673 167.55508423]
[195.59474182 160.23597717]
[182.50158691 152.91687012]
[169.40843201 145.59776306]
[156.23985291 138.41525269]
[142.99725342 131.37011719]
[129.75466919 124.32498169]
[116.51209259 117.27985382]
[103.26950073 110.23471832]
[88.50344849 107.59584808]
[73.64040375 109.61818695]
[58.77735519 111.64051819]
[46.14633942 121.16774750]
[32.49211121 115.21701050]
[17.62906456 117.23934174]
[2.76601720 119.26168060]
[-12.09702969 121.28401184]
[-26.96007729 123.30635071]
[-41.82312393 125.32868195]
[-56.46662521 128.57951355]
[-70.78922272 133.03633118]
[-85.11181641 137.49313354]
[-99.43441772 141.94995117]
[-110.15525055 154.35946655]
[-126.20960236 151.01435852]
[-131.08213806 135.35578918]
[-119.76039886 123.49196625]
[-103.89123535 127.62735748]
[-89.56863403 123.17053986]
[-75.24604034 118.71372986]
[-60.92343903 114.25691223]
[-74.41259766 107.69622803]
[-81.61051178 94.53606415]
[-79.85769653 79.63882446]
[-69.80177307 68.50875854]
[-55.15821457 65.25818634]
[-41.33752060 71.08815002]
[-33.44616318 83.84457397]
[-34.39984131 98.81423187]
[-43.84545898 110.46563721]
[-28.98241043 108.44329834]
[-14.11936474 106.42096710]
[0.74368262 104.39863586]
[15.60672951 102.37629700]
[30.46977615 100.35396576]
[42.03768539 90.97138977]
[56.75502014 96.77747345]
[71.61806488 94.75514221]
[86.48111725 92.73280334]
[72.84044647 86.49323273]
[60.64659882 77.75766754]
[50.35064316 66.84926605]
[42.33345032 54.17154312]
[36.89159393 40.19348145]
[34.22638321 25.43215942]
[34.43640518 10.43362999]
[37.51389313 -4.24727821]
[43.34500504 -18.06748581]
[51.71403122 -30.51575279]
[62.31138992 -41.13159180]
[74.74505615 -49.52229691]
[88.55508423 -55.37748337]
[103.23060608 -58.48054504]
[118.22874451 -58.71670532]
[132.99468994 -56.07721710]
[146.98220825 -50.65972519]
[159.67388916 -42.66463470]
[170.60021973 -32.38770294]
[179.35700989 -20.20909309]
[185.62034607 -6.57932186]
[189.15850830 7.99741793]
[189.84063721 22.98189926]
[187.64149475 37.81981659]
[182.64241028 51.96227646]
[175.02833557 64.88612366]
[165.08091736 76.11327362]
[153.16813660 85.22841644]
[139.73068237 91.89434814]
[125.26562500 95.86449432]
[110.31463623 96.99212646]
[123.55722046 104.03726196]
[136.79980469 111.08239746]
[150.04238892 118.12753296]
[163.28498840 125.17266846]
[172.39561462 126.45645905]
[176.72753906 132.50460815]
[189.82069397 139.82371521]
[202.91384888 147.14282227]
[216.00700378 154.46192932]
[229.10015869 161.78103638]
[242.19331360 169.10014343]
[255.28645325 176.41925049]
[268.37960815 183.73834229]
[281.47277832 191.05744934]
[290.27169800 178.88801575]
[300.42398071 167.82238770]
[311.79223633 158.01020813]
[324.22280884 149.58418274]
[337.54751587 142.65827942]
[351.58621216 137.32612610]
[366.14901733 133.65986633]
[381.03897095 131.70906067]
[396.05471802 131.50010681]
[410.99319458 133.03582764]
[425.65237427 136.29545593]
[439.83398438 141.23489380]
[453.34628296 147.78736877]
[466.00646973 155.86422729]
[477.64337158 165.35627747]
[488.09960938 176.13513184]
[497.23376465 188.05502319]
[504.92230225 200.95474243]
[511.06127930 214.65983582]
[515.56762695 228.98497009]
[518.38043213 243.73638916]
[519.46160889 258.71463013]
[518.79663086 273.71710205]
[516.39440918 288.54092407]
[512.28741455 302.98562622]
[506.53128052 316.85586548]
[499.20376587 329.96401978]
[490.40402222 342.13287354]
[480.25103760 353.19784546]
[468.88211060 363.00924683]
[456.45098877 371.43444824]
[443.12579346 378.35946655]
[429.08676147 383.69067383]
[414.52371216 387.35598755]
[399.63363647 389.30578613]
[384.61785889 389.51373291]
[369.67947388 387.97702026]
[355.02053833 384.71640015]
[340.83923340 379.77603149]
[327.32739258 373.22265625]
[314.66772461 365.14492798]
[303.03146362 355.65209961]
[292.57592773 344.87255859]
[283.44256592 332.95205688]
[275.75488281 320.05184937]
[269.61685181 306.34634399]
[265.11145020 292.02090454]
[262.29962158 277.26928711]
[261.21942139 262.29098511]
[261.88543701 247.28854370]
[264.28866577 232.46487427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 91]
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 54]
[16 53]
[17 52]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[25 36]
[26 35]
[27 34]
[28 33]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
