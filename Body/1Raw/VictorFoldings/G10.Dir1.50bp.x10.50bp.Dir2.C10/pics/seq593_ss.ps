%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCxxxxxxxxxxACUCUCAUAACCCUCAACACCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[37.79629517 159.23686218]
[31.03898239 151.21215820]
[18.26162529 159.06958008]
[5.48426819 166.92701721]
[-2.21802998 180.74674988]
[-17.11244011 180.82284546]
[-29.88979912 188.68026733]
[-42.66715622 196.53768921]
[-55.44451141 204.39511108]
[-68.22187042 212.25254822]
[-80.99922943 220.10997009]
[-76.15480804 234.37458801]
[-74.60654449 249.35960388]
[-76.43209839 264.31335449]
[-81.53989410 278.48580933]
[-89.67372894 291.16604614]
[-100.42562103 301.71804810]
[-113.25624847 309.61251831]
[-127.52204132 314.45349121]
[-142.50743103 315.99810791]
[-157.46075439 314.16894531]
[-171.63195801 309.05770874]
[-184.31022644 300.92080688]
[-194.85961914 290.16635132]
[-202.75097656 277.33380127]
[-207.58848572 263.06683350]
[-209.12948608 248.08108521]
[-207.29669189 233.12820435]
[-202.18202209 218.95823669]
[-194.04203796 206.28193665]
[-183.28503418 195.73515320]
[-170.45059204 187.84690857]
[-156.18244934 183.01284790]
[-141.19631958 181.47547913]
[-126.24388123 183.31190491]
[-112.07514954 188.43000793]
[-99.40083313 196.57305908]
[-88.85665131 207.33261108]
[-76.07929230 199.47518921]
[-63.30193710 191.61776733]
[-50.52458191 183.76033020]
[-37.74722290 175.90290833]
[-24.96986580 168.04548645]
[-18.18148994 154.78776550]
[-2.37315774 154.14965820]
[10.40419960 146.29222107]
[23.18155670 138.43479919]
[16.25793839 119.11999512]
[14.11254978 98.71422577]
[16.86780739 78.38181305]
[24.36649895 59.28291702]
[36.18075562 42.50729370]
[51.63647079 29.01214027]
[69.85175323 19.56747818]
[89.78726959 14.71220875]
[110.30550385 14.72336864]
[130.23571777 19.60032272]
[148.44071960 29.06479454]
[157.94908142 17.46345329]
[167.45744324 5.86211109]
[176.96580505 -5.73923016]
[186.47415161 -17.34057045]
[175.90200806 -28.00048256]
[166.48197937 -39.69094467]
[158.31390381 -52.28804016]
[151.48440552 -65.65822601]
[146.06585693 -79.65977478]
[142.11569214 -94.14425659]
[139.67581177 -108.95813751]
[138.77204895 -123.94437408]
[139.41400146 -138.94410706]
[141.59486389 -153.79832458]
[145.29151917 -168.34956360]
[150.46476746 -182.44358826]
[157.05978394 -195.93098450]
[165.00665283 -208.66877747]
[174.22113037 -220.52194214]
[184.60554504 -231.36482239]
[196.04980469 -241.08247375]
[208.43261719 -249.57189941]
[221.62268066 -256.74310303]
[235.48020935 -262.52005005]
[249.85827637 -266.84152222]
[264.60449219 -269.66168213]
[279.56250000 -270.95065308]
[294.57379150 -270.69479370]
[309.47918701 -268.89678955]
[324.12072754 -265.57568359]
[338.34317017 -260.76672363]
[351.99575806 -254.52084351]
[364.93377686 -246.90428162]
[377.02005005 -237.99778748]
[388.12646484 -227.89573669]
[398.13531494 -216.70526123]
[406.94049072 -204.54495239]
[414.44863892 -191.54371643]
[420.58013916 -177.83940125]
[425.27008057 -163.57725525]
[428.46865845 -148.90847778]
[430.14199829 -133.98855591]
[430.27239990 -118.97566223]
[428.85842896 -104.02893829]
[425.91506958 -89.30681610]
[421.47357178 -74.96537018]
[415.58099365 -61.15662384]
[408.29977417 -48.02695847]
[399.70715332 -35.71555710]
[389.89416504 -24.35292435]
[378.96487427 -14.05951214]
[367.03509521 -4.94443703]
[354.23132324 2.89567709]
[340.68927002 9.37772083]
[326.55249023 14.43297958]
[311.97085571 18.00786591]
[297.09890747 20.06448364]
[282.09436035 20.58102989]
[267.11618042 19.55203247]
[252.32322693 16.98839760]
[237.87226868 12.91730022]
[223.91650391 7.38189697]
[210.60388184 0.44086632]
[198.07550049 -7.83221292]
[188.56713867 3.76912856]
[179.05877686 15.37047005]
[169.55043030 26.97181129]
[160.04206848 38.57315063]
[167.08247375 46.35067749]
[173.12223816 54.92845154]
[178.07130432 64.17852783]
[181.85583496 73.96292114]
[184.41937256 84.13570404]
[185.72369385 94.54511261]
[185.74932861 105.03589630]
[184.49589539 115.45156097]
[181.98210144 125.63674164]
[178.24543762 135.43951416]
[173.34162903 144.71366882]
[167.34384155 153.32086182]
[160.34153748 161.13269043]
[152.43914795 168.03265381]
[143.75457764 173.91781616]
[134.41734314 178.70040894]
[124.56671906 182.30906677]
[114.34965515 184.68998718]
[103.91854858 185.80764771]
[93.42899323 185.64537048]
[83.03745270 184.20558167]
[72.89893341 181.50975037]
[63.16465759 177.59809875]
[53.97982788 172.52896118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
