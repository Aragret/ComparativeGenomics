%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACUUUUAAAGGAUAACAGCUAUCCAUUGGUCUUAGGCCCCAAAAAUUUUGGUGCAACUCxxxxxxxxxxGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[261.65008545 356.56124878]
[260.09249878 341.64233398]
[258.53491211 326.72341919]
[256.97732544 311.80450439]
[255.41975403 296.88558960]
[250.07824707 282.86886597]
[241.31204224 270.69705200]
[232.54583740 258.52520752]
[223.77961731 246.35336304]
[215.01341248 234.18153381]
[206.24720764 222.00968933]
[197.48100281 209.83786011]
[187.49827576 198.64208984]
[176.40695190 188.54344177]
[165.31564331 178.44479370]
[154.22433472 168.34614563]
[151.35968018 168.38003540]
[148.30957031 167.24389648]
[145.53373718 164.86132812]
[143.51074219 161.32884216]
[142.67568970 156.91702271]
[132.46220398 145.93135071]
[122.24872589 134.94567871]
[112.03524780 123.96002197]
[101.82176971 112.97435760]
[91.16014099 102.42306519]
[80.06882477 92.32441711]
[68.97750854 82.22576904]
[57.88619614 72.12712097]
[46.79487991 62.02846909]
[34.55529022 70.79039001]
[20.76673317 76.81354523]
[6.03288889 79.83690643]
[-9.00172615 79.73068237]
[-23.67995453 76.50195312]
[-37.36072540 70.29423523]
[-49.44704819 61.38106918]
[-59.41206741 50.15402985]
[-66.82201385 37.10546112]
[-71.35512543 22.80693245]
[-72.81555939 7.88417530]
[-71.14190674 -7.01029015]
[-66.40973663 -21.22568703]
[-58.82820892 -34.14142227]
[-71.76726532 -34.32784271]
[-80.80268860 -43.02152252]
[-81.44406891 -55.14158630]
[-92.32289124 -65.46878815]
[-107.65851593 -69.35842133]
[-111.56205750 -83.73241425]
[-122.44087982 -94.05962372]
[-133.31970215 -104.38682556]
[-144.19853210 -114.71402740]
[-155.07736206 -125.04123688]
[-170.72755432 -131.56103516]
[-168.79496765 -148.40446472]
[-152.07476807 -151.21012878]
[-144.75015259 -135.92005920]
[-133.87132263 -125.59285736]
[-122.99250031 -115.26564789]
[-112.11367798 -104.93844604]
[-101.23484802 -94.61124420]
[-86.67735291 -91.46028137]
[-81.99568939 -76.34761810]
[-71.11685944 -66.02040863]
[-53.87898636 -62.88105774]
[-48.72956085 -45.23273468]
[-36.57916641 -53.98851395]
[-22.86841965 -60.02890778]
[-8.19564819 -63.08766937]
[6.79828644 -63.02871323]
[21.45798111 -59.85218430]
[35.14213562 -53.69455719]
[47.25160599 -44.82276154]
[57.25564575 -33.62263489]
[64.71515656 -20.58212090]
[69.30196381 -6.27001715]
[70.81326294 8.68882275]
[69.18056488 23.64078331]
[64.47283173 37.93204117]
[56.89352798 50.93715286]
[67.98484802 61.03580093]
[79.07615662 71.13445282]
[90.16747284 81.23310089]
[101.25878906 91.33174896]
[104.37731934 91.42498016]
[107.52781677 92.68554688]
[110.26643372 95.12602997]
[112.15168762 98.59067535]
[112.80743408 102.76087952]
[123.02091217 113.74654388]
[133.23439026 124.73220825]
[143.44787598 135.71786499]
[153.66134644 146.70353699]
[164.32298279 157.25482178]
[175.41429138 167.35346985]
[186.50561523 177.45211792]
[197.59692383 187.55078125]
[195.22630310 172.73928833]
[200.45024109 158.67832947]
[211.91653442 149.00753784]
[226.65716553 146.23016357]
[240.85656738 151.06513977]
[250.83926392 162.26092529]
[254.02128601 176.91952515]
[249.57894897 191.24662781]
[238.66215515 201.53367615]
[224.09667969 205.11793518]
[209.65283203 201.07165527]
[218.41905212 213.24348450]
[227.18525696 225.41532898]
[235.95146179 237.58715820]
[244.71766663 249.75900269]
[253.48387146 261.93084717]
[262.25009155 274.10266113]
[261.10275269 259.14660645]
[263.37042236 244.31901550]
[268.93539429 230.38951111]
[277.50881958 218.08113098]
[288.64569092 208.03273010]
[301.76794434 200.76589966]
[316.19442749 196.65783691]
[331.17636108 195.92173767]
[345.93606567 198.59584045]
[359.70745850 204.54133606]
[371.77569580 213.44961548]
[381.51440430 224.85829163]
[388.41802979 238.17518616]
[392.12829590 252.70907593]
[392.45260620 267.70556641]
[389.37408447 282.38626099]
[383.05255127 295.98913574]
[373.81616211 307.80813599]
[362.14428711 317.22979736]
[348.64279175 323.76504517]
[334.01245117 327.07467651]
[319.01272583 326.98693848]
[304.42211914 323.50631714]
[290.99801636 316.81353760]
[279.43716431 307.25598145]
[270.33868408 295.32800293]
[271.89624023 310.24691772]
[273.45382690 325.16583252]
[275.01141357 340.08474731]
[276.56900024 355.00366211]
[289.00064087 364.76220703]
[290.80783081 380.46282959]
[280.91839600 392.79061890]
[265.19955444 394.43173218]
[252.97700500 384.41250610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 115]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[13 98]
[14 97]
[15 96]
[16 95]
[21 94]
[22 93]
[23 92]
[24 91]
[25 90]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[44 67]
[47 65]
[48 64]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
