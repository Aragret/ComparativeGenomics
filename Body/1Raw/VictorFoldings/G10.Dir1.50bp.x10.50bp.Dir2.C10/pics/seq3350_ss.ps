%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCUAGGCUAUAUACAACUACGCAAAGGCCxxxxxxxxxxAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUAGCAUUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[125.38076782 359.28195190]
[125.38076782 344.28195190]
[125.38076782 329.28195190]
[125.38076782 314.28195190]
[125.38076782 299.28195190]
[125.38076782 284.28195190]
[125.38076782 269.28195190]
[125.38076782 254.28193665]
[125.38076782 239.28193665]
[125.38076782 224.28193665]
[121.52360535 209.78634644]
[114.06869507 196.77003479]
[99.20565033 194.74769592]
[88.54402161 205.29899597]
[77.88240051 215.85028076]
[67.22077179 226.40156555]
[56.55914688 236.95286560]
[49.55419922 252.39199829]
[32.77926254 249.93478394]
[30.49668312 233.13519287]
[46.00785446 226.29122925]
[56.66948318 215.73994446]
[67.33110809 205.18865967]
[77.99273682 194.63735962]
[88.65435791 184.08607483]
[93.20151520 180.71208191]
[97.98954010 178.60699463]
[102.72986603 177.74372864]
[107.15178680 178.03593445]
[104.35945892 163.29812622]
[101.56713867 148.56031799]
[98.77481079 133.82250977]
[84.05419159 129.85287476]
[72.56953430 119.82505035]
[66.65148163 105.77403259]
[51.67176437 104.99418640]
[36.69205093 104.21434021]
[20.55999184 109.42903137]
[11.08329391 95.37098694]
[21.96853065 82.37299347]
[37.47189713 89.23462677]
[52.45161057 90.01447296]
[67.43132782 90.79431915]
[70.63016510 79.85990143]
[77.55514526 70.10964966]
[87.74317169 62.82185364]
[81.68015289 49.10180283]
[75.61714172 35.38174820]
[69.55413055 21.66169357]
[54.76516724 24.50644112]
[39.72121429 23.98897934]
[25.17664528 20.13847160]
[11.86008644 13.15113926]
[0.43790361 3.38026452]
[-8.51914310 -8.68167591]
[-14.56441689 -22.42782784]
[-17.39767456 -37.16749573]
[-16.87998199 -52.16083527]
[-13.04051495 -66.65600586]
[-6.07494068 -79.92686462]
[3.66455173 -91.30933380]
[15.68705845 -100.23464203]
[9.62404537 -113.95469666]
[-3.92839885 -123.18850708]
[-2.43824244 -139.51982117]
[12.56157017 -146.14836121]
[25.64051628 -136.25527954]
[23.34409904 -120.01770782]
[29.40711212 -106.29766083]
[44.10074997 -109.17844391]
[59.07423401 -108.71685791]
[73.57650757 -104.93283844]
[86.87944031 -98.01303864]
[98.31436157 -88.30166626]
[107.30570984 -76.28331757]
[113.39996338 -62.55880737]
[116.28854370 -47.81515884]
[115.82342529 -32.79118347]
[112.02472687 -18.24046516]
[105.07983398 -4.89357567]
[95.33422089 6.57861996]
[83.27418518 15.59868050]
[89.33719635 29.31873322]
[95.40020752 43.03878784]
[101.46322632 56.75884247]
[116.13974762 59.85716248]
[127.23106384 49.75851440]
[138.32237244 39.65986252]
[149.41369629 29.56121445]
[160.50500488 19.46256447]
[157.15007019 4.47457123]
[161.75392151 -10.17807961]
[173.07814026 -20.55389786]
[188.07656860 -23.86184120]
[202.71472168 -19.21208763]
[213.05499268 -7.85540009]
[216.31590271 7.15333128]
[211.62030029 21.77683258]
[200.23124695 32.08145523]
[185.21237183 35.29530716]
[170.60365295 30.55388069]
[159.51234436 40.65253067]
[148.42103577 50.75117874]
[137.32971191 60.84983063]
[126.23839569 70.94847870]
[134.50747681 83.88217163]
[136.99943542 98.60435486]
[133.64006042 112.72226715]
[125.28050995 124.06777954]
[113.51261902 131.03018188]
[116.30493927 145.76799011]
[119.09726715 160.50579834]
[121.88959503 175.24360657]
[127.08500671 189.31512451]
[134.53991699 202.33143616]
[134.95179749 187.33708191]
[138.74688721 172.82511902]
[145.72821045 159.54878235]
[155.53337097 148.19718933]
[167.65345764 139.35954285]
[181.45933533 133.49459839]
[196.23442078 130.90675354]
[211.21179199 131.73034668]
[225.61404419 135.92262268]
[238.69361877 143.26597595]
[249.77159119 153.37925720]
[258.27297974 165.73751831]
[263.75650024 179.69927979]
[265.93753052 194.53987122]
[264.70285034 209.48896790]
[260.11654663 223.77062988]
[252.41668701 236.64356995]
[242.00294495 247.43957520]
[229.41583252 255.59829712]
[215.30871582 260.69622803]
[200.41381836 262.46881104]
[185.50427246 260.82397461]
[171.35397339 255.84710693]
[158.69740295 247.79656982]
[148.19151306 237.09020996]
[140.38076782 224.28193665]
[140.38076782 239.28193665]
[140.38076782 254.28193665]
[140.38076782 269.28195190]
[140.38076782 284.28195190]
[140.38076782 299.28195190]
[140.38076782 314.28195190]
[140.38076782 329.28195190]
[140.38076782 344.28195190]
[140.38076782 359.28195190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 115]
[12 114]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[29 113]
[30 112]
[31 111]
[32 110]
[35 43]
[36 42]
[37 41]
[46 85]
[47 84]
[48 83]
[49 82]
[62 69]
[63 68]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
