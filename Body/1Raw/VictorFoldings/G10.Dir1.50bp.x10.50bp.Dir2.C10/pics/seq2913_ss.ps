%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAACCUCCGAGCAGUACAUGCUAAGACUUCACCAGUCAAAGCGAACUACUAUACUCAAxxxxxxxxxxCUAGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.82783508 280.20266724]
[100.82783508 265.20266724]
[100.82783508 250.20265198]
[100.82783508 235.20265198]
[100.82783508 220.20265198]
[100.82783508 205.20265198]
[100.82783508 190.20265198]
[100.82783508 175.20265198]
[100.82783508 160.20265198]
[100.82783508 145.20265198]
[90.89326477 143.46018982]
[81.76910400 139.60316467]
[73.88946533 133.90237427]
[67.60937500 126.71391296]
[63.18895340 118.45771790]
[60.78317261 109.59351349]
[60.43745804 100.59548187]
[62.08919525 91.92693329]
[65.57492828 84.01651001]
[70.64262390 77.23696136]
[76.96822357 71.88768005]
[70.06121826 58.57252884]
[56.83848190 49.88520050]
[57.84622192 35.02472305]
[50.93922043 21.70956802]
[44.03222275 8.39441299]
[37.12522507 -4.92074251]
[30.21822739 -18.23589897]
[23.31122780 -31.55105400]
[16.53760719 -37.77760315]
[16.40230370 -45.21583939]
[9.77380466 -58.67180252]
[3.14530635 -72.12776947]
[-7.56290388 -70.10716248]
[-19.21691132 -73.20845032]
[-29.31617928 -81.75236511]
[-35.31990814 -94.84371185]
[-49.96340942 -98.09454346]
[-64.60691071 -101.34536743]
[-79.25041199 -104.59619141]
[-93.50122833 -97.22776031]
[-108.08794403 -103.90663910]
[-111.82087708 -119.50935364]
[-101.83644104 -132.06684875]
[-85.79383850 -131.94607544]
[-75.99958801 -119.23969269]
[-61.35608673 -115.98886871]
[-46.71258545 -112.73804474]
[-32.06908417 -109.48721313]
[-26.41958046 -114.42007446]
[-29.31407547 -129.13815308]
[-15.12057590 -124.28579712]
[-9.47107410 -129.21865845]
[-10.71794891 -144.16674805]
[-11.96482277 -159.11483765]
[-18.79766273 -145.76147461]
[-28.21128082 -134.08312988]
[-39.80963135 -124.57112122]
[-53.10475540 -117.62564087]
[-67.53730011 -113.53888702]
[-82.50008392 -112.48280334]
[-97.36357880 -114.50182343]
[-111.50246429 -119.51099396]
[-124.32190704 -127.29958344]
[-135.28256226 -137.53990173]
[-143.92329407 -149.80113220]
[-149.88056946 -163.56741333]
[-152.90379333 -178.25959778]
[-152.86572266 -193.25955200]
[-149.76800537 -207.93620300]
[-143.74093628 -221.67208862]
[-135.03810120 -233.88931274]
[-124.02562714 -244.07388306]
[-111.16683197 -251.79731750]
[-97.00270844 -256.73468018]
[-82.12915039 -258.67825317]
[-67.17192841 -257.54623413]
[-52.76030350 -253.38630676]
[-39.50059509 -246.37345886]
[-27.95066071 -236.80271912]
[-18.59642410 -225.07675171]
[-11.83143234 -211.68888855]
[-7.94029665 -197.20237732]
[-7.08699703 -182.22074890]
[0.09551207 -195.38932800]
[-0.84321088 -211.76158142]
[13.01283455 -220.53324890]
[27.40973663 -212.68078613]
[27.53719521 -196.28211975]
[13.26409435 -188.20681763]
[6.08158588 -175.03823853]
[2.98326397 -160.36170959]
[4.23013830 -145.41362000]
[5.47701311 -130.46553040]
[28.00312233 -104.67112732]
[16.60127258 -78.75627136]
[23.22977066 -65.30030060]
[29.85826874 -51.84433746]
[36.62638474 -38.45805359]
[43.53338242 -25.14289665]
[50.44038010 -11.82774067]
[57.34737778 1.48741472]
[64.25437927 14.80257034]
[71.16137695 28.11772537]
[83.89008331 35.85266495]
[83.37638092 51.66553116]
[90.28337860 64.98068237]
[116.59469604 64.37735748]
[138.43875122 82.45333862]
[143.46975708 112.42359161]
[157.96534729 116.28074646]
[173.29106140 112.35226440]
[183.60076904 123.10211945]
[198.09635925 126.95928192]
[208.88090515 116.02359772]
[223.69268799 111.96076965]
[238.54742432 115.86367798]
[249.44923401 126.68244934]
[253.46562195 141.50689697]
[249.51617432 156.34931946]
[238.66328430 167.21717834]
[223.82632446 171.18707275]
[208.99635315 167.19111633]
[198.16256714 156.30421448]
[194.23919678 141.45487976]
[179.74360657 137.59771729]
[165.45471191 141.80209351]
[154.10820007 130.77635193]
[139.61259460 126.91918945]
[133.66641235 131.49005127]
[144.53826904 141.82458496]
[155.41012573 152.15911865]
[168.92504883 158.66656494]
[173.45892334 172.96496582]
[166.16329956 186.07121277]
[151.62171936 189.75120544]
[138.97004700 181.69296265]
[136.15679932 166.95925903]
[128.96540833 153.79553223]
[121.77402496 140.63179016]
[115.82783508 145.20265198]
[115.82783508 160.20265198]
[115.82783508 175.20265198]
[115.82783508 190.20265198]
[115.82783508 205.20265198]
[115.82783508 220.20265198]
[115.82783508 235.20265198]
[115.82783508 250.20265198]
[115.82783508 265.20266724]
[115.82783508 280.20266724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 107]
[22 106]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[31 98]
[32 97]
[33 96]
[37 49]
[38 48]
[39 47]
[40 46]
[53 94]
[54 93]
[55 92]
[84 91]
[85 90]
[110 129]
[111 128]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
