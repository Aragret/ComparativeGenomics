%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCUAUCAUCACCCGAUGAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUxxxxxxxxxxCCCUAGCAGAAAAUAGCCCACUAAUCCAAACUCUAACACUAUGCUUAGGCGCUAUCACCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.42494202 337.73519897]
[88.01071930 318.52676392]
[88.31869507 303.52990723]
[88.62667084 288.53308105]
[88.93464661 273.53625488]
[89.24263000 258.53939819]
[89.55060577 243.54257202]
[89.85858154 228.54573059]
[90.16655731 213.54888916]
[90.47453308 198.55204773]
[90.78251648 183.55522156]
[74.68259430 180.90150452]
[59.26696396 175.14944458]
[45.13098526 166.46507263]
[32.83123779 155.12869263]
[21.24218941 164.65203857]
[9.65314198 174.17536926]
[-1.93590689 183.69869995]
[-13.52495480 193.22204590]
[-18.78203964 208.75572205]
[-34.91398239 211.70402527]
[-45.32562256 199.03398132]
[-39.30635834 183.77946472]
[-23.04829216 181.63299561]
[-11.45924473 172.10966492]
[0.12980400 162.58631897]
[11.71885204 153.06298828]
[23.30790138 143.53964233]
[17.03849602 129.91267395]
[2.26637936 132.51739502]
[-12.50573730 135.12211609]
[-22.84845543 147.38619995]
[-38.88088608 146.80244446]
[-48.30431747 133.81866455]
[-43.88990021 118.39490509]
[-29.02400017 112.36294556]
[-15.11045933 120.34999847]
[-0.33834335 117.74526978]
[14.43377304 115.14054871]
[13.78932095 106.05718231]
[14.10118389 97.00583649]
[15.35554123 88.08638000]
[17.52823448 79.39612579]
[20.58514214 71.02878571]
[24.48266983 63.07347107]
[11.64901543 55.30833435]
[-1.18463862 47.54319763]
[-14.01829243 39.77806473]
[-26.85194588 32.01292801]
[-43.24982071 32.21737671]
[-51.39205170 17.98234749]
[-42.90261078 3.95161462]
[-26.51470757 4.55879593]
[-19.08681107 19.17927361]
[-6.25315714 26.94441032]
[6.58049679 34.70954514]
[19.41415024 42.47468185]
[32.24780273 50.23981476]
[43.14930725 38.07718658]
[56.19704056 28.25227165]
[70.89842224 21.13597870]
[86.69844818 16.99695969]
[103.00063324 15.99147606]
[119.18953705 18.15748405]
[134.65400696 23.41321182]
[148.81021118 31.56024742]
[161.12371826 42.29102325]
[172.90586853 33.00763702]
[184.68800354 23.72425079]
[196.47013855 14.44086552]
[181.53604126 15.84547329]
[167.07612610 11.85663319]
[154.97430420 2.99403071]
[146.80725098 -9.58767033]
[143.63900757 -24.24926186]
[145.88235474 -39.08055878]
[153.24502563 -52.14926529]
[164.76777649 -61.75272369]
[178.94934082 -66.63974762]
[193.94210815 -66.17362976]
[207.79270935 -60.41510391]
[218.69664001 -50.11441422]
[225.23327637 -36.61358643]
[226.55101013 -21.67157745]
[222.47811890 -7.23510790]
[213.54547119 4.81478643]
[227.58744812 -0.45995528]
[241.62942505 -5.73469687]
[255.67140198 -11.00943851]
[243.50427246 -19.78217316]
[242.56684875 -34.75285339]
[253.54458618 -44.97485352]
[268.41052246 -42.97380829]
[276.29461670 -30.21289062]
[271.43240356 -16.02337837]
[285.94104004 -19.83123589]
[300.44967651 -23.63909531]
[300.51644897 -38.72743225]
[304.48703003 -53.28411102]
[312.09069824 -66.31662750]
[322.80902100 -76.93640900]
[335.91122437 -84.41938019]
[350.50396729 -88.25534058]
[365.59228516 -88.18273926]
[380.14743042 -84.20653534]
[393.17700195 -76.59783173]
[403.79263306 -65.87539673]
[411.27053833 -52.77031326]
[415.10086060 -38.17609787]
[415.02246094 -23.08781624]
[411.04061890 -8.53420925]
[403.42687988 4.49243450]
[392.70034790 15.10393620]
[379.59237671 22.57678604]
[364.99670410 26.40147209]
[349.90844727 26.31722069]
[335.35638428 22.32977867]
[322.33267212 14.71101379]
[311.72531128 3.98038697]
[304.25753784 -9.13046932]
[289.74890137 -5.32261086]
[275.24026489 -1.51475203]
[260.94613647 3.03253794]
[246.90417480 8.30727959]
[232.86219788 13.58202076]
[218.82022095 18.85676193]
[205.75352478 26.22300148]
[193.97138977 35.50638580]
[182.18923950 44.78977203]
[170.40710449 54.07315826]
[176.82476807 65.87680817]
[181.27992249 78.55213928]
[183.65878296 91.77536011]
[183.90057373 105.20867157]
[181.99911499 118.50893402]
[178.00299072 131.33638000]
[172.01428223 143.36334229]
[164.18595886 154.28257751]
[154.71800232 163.81517029]
[143.85226440 171.71760559]
[131.86633301 177.78799438]
[119.06636810 181.87129211]
[105.77935028 183.86318970]
[105.47137451 198.86003113]
[105.16339874 213.85687256]
[104.85542297 228.85369873]
[104.54743958 243.85054016]
[104.23946381 258.84738159]
[103.93148804 273.84420776]
[103.62351227 288.84106445]
[103.31552887 303.83789062]
[103.00755310 318.83474731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[29 39]
[30 38]
[31 37]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[67 130]
[68 129]
[69 128]
[70 127]
[86 126]
[87 125]
[88 124]
[89 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
