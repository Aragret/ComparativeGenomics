%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAACUCAAAGGACCUGGCGGUGCUUCAUAUCCCUCUAGAGGAGCCUGUUCUGUAAUCGAxxxxxxxxxxGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[323.34725952 181.49270630]
[310.25408936 174.17359924]
[297.16094971 166.85449219]
[284.06777954 159.53538513]
[270.97463989 152.21627808]
[257.88146973 144.89717102]
[244.49519348 138.12905884]
[230.83895874 131.92366028]
[217.18272400 125.71824646]
[203.52647400 119.51284027]
[189.87023926 113.30743408]
[176.21398926 107.10202789]
[161.47618103 104.30970001]
[146.49647522 105.08954620]
[131.51675415 105.86939240]
[125.81765747 123.35639191]
[110.53244019 136.06452942]
[89.35528564 138.89698792]
[68.54708862 129.44308472]
[54.89084625 135.64849854]
[41.23460388 141.85391235]
[31.87158012 154.60711670]
[17.08359337 152.82814026]
[3.42735267 159.03355408]
[-10.22888851 165.23895264]
[-19.32122231 178.88671875]
[-35.66714478 177.56652832]
[-42.45137024 162.63648987]
[-32.69487000 149.45533752]
[-16.43429565 151.58271790]
[-2.77805448 145.37730408]
[10.87818718 139.17190552]
[19.26442719 126.86254883]
[35.02919769 128.19766235]
[48.68544006 121.99225616]
[62.34168243 115.78684998]
[62.18565369 108.28847504]
[47.18889236 108.60028076]
[46.87733459 93.60351562]
[61.87359619 93.29171753]
[61.71756744 85.79334259]
[47.81501389 80.16138458]
[33.91245651 74.52942657]
[20.18422699 82.01740265]
[4.86490965 78.87852478]
[-4.81218004 66.59487915]
[-4.27781773 50.96642685]
[6.21568727 39.37244797]
[21.71362305 37.28726196]
[34.89833832 45.69543076]
[39.54441452 60.62687302]
[53.44696808 66.25882721]
[67.34952545 71.89078522]
[82.90431976 62.86798096]
[99.88626099 61.32666016]
[115.05629730 66.78459930]
[125.83448029 77.49282074]
[130.73690796 90.88967896]
[145.71662903 90.10983276]
[160.69635010 89.32998657]
[147.48150635 82.23294830]
[136.39897156 72.12464905]
[128.11935425 59.61673355]
[123.14363861 45.46604156]
[121.77288055 30.52880287]
[124.09003448 15.70885754]
[129.95489502 1.90293777]
[139.01258850 -10.05357933]
[150.71502686 -19.43721962]
[164.35414124 -25.68019485]
[179.10462952 -28.40474701]
[194.07395935 -27.44602013]
[208.35635376 -22.86202431]
[221.08761597 -14.93013191]
[231.49739075 -4.13028955]
[238.95579529 8.88401890]
[243.01153564 23.32531357]
[243.41918945 38.31977463]
[240.15411377 52.96010208]
[233.41384888 66.36043549]
[223.60626221 77.70993805]
[211.32478333 86.32186127]
[197.31254578 91.67510986]
[182.41940308 93.44578552]
[196.07563782 99.65119171]
[209.73188782 105.85659790]
[223.38812256 112.06200409]
[237.04437256 118.26741028]
[250.70060730 124.47281647]
[255.14965820 123.86662292]
[259.14117432 124.66581726]
[262.28063965 126.54348755]
[264.32485962 129.07630920]
[265.20059204 131.80401611]
[278.29373169 139.12312317]
[291.38690186 146.44223022]
[304.48004150 153.76133728]
[317.57321167 161.08044434]
[330.66635132 168.39955139]
[341.73446655 154.46160889]
[355.04812622 142.65446472]
[370.20379639 133.33454895]
[386.74243164 126.78298950]
[404.16323853 123.19704437]
[421.93887329 122.68419647]
[439.53149414 125.25892639]
[456.40899658 130.84230042]
[472.06100464 139.26441956]
[486.01443481 150.26951599]
[497.84777832 163.52383423]
[507.20376587 178.62561035]
[513.80017090 195.11741638]
[517.43841553 212.49984741]
[518.00933838 230.24678040]
[515.49682617 247.82119751]
[529.81945801 252.27801514]
[544.14202881 256.73483276]
[558.46466064 261.19165039]
[574.33380127 257.05624390]
[585.65551758 268.92007446]
[580.78302002 284.57864380]
[564.72863770 287.92373657]
[554.00781250 275.51425171]
[539.68524170 271.05743408]
[525.36260986 266.60061646]
[511.04003906 262.14379883]
[505.73428345 273.53237915]
[499.06872559 284.18386841]
[491.14410400 293.93664551]
[482.08026123 302.64270020]
[472.01431274 310.16992188]
[461.09866333 316.40390015]
[449.49853516 321.24996948]
[437.38958740 324.63433838]
[424.95529175 326.50543213]
[412.38400269 326.83456421]
[399.86624146 325.61642456]
[387.59173584 322.86917114]
[375.74655151 318.63412476]
[364.51031494 312.97515869]
[354.05346680 305.97772217]
[344.53463745 297.74765015]
[336.09832764 288.40936279]
[328.87255859 278.10418701]
[322.96716309 266.98812866]
[318.47186279 255.22947693]
[315.45513916 243.00631714]
[313.96295166 230.50381470]
[314.01828003 217.91139221]
[315.62060547 205.41990662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 94]
[7 89]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[13 60]
[14 59]
[15 58]
[19 36]
[20 35]
[21 34]
[23 32]
[24 31]
[25 30]
[41 53]
[42 52]
[43 51]
[115 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
