%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCAAACUCAUCACUAGACAUCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCAxxxxxxxxxxAGUCAUUCUCAUAAUCGCCCACGGGCUUACAUCCUCAUUACUAUUCUGCCUAGCAAACUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[135.50312805 355.03576660]
[135.50312805 340.03576660]
[135.50312805 325.03576660]
[135.50312805 310.03576660]
[135.50312805 295.03576660]
[135.50312805 280.03576660]
[135.50312805 265.03576660]
[135.50312805 250.03576660]
[135.50312805 235.03576660]
[135.50312805 220.03576660]
[132.74688721 205.29116821]
[127.32825470 191.30407715]
[121.90962982 177.31700134]
[110.09719086 168.24420166]
[112.32681274 152.58088684]
[106.90818787 138.59381104]
[101.54467773 140.82196045]
[95.69503784 142.27651978]
[89.47461700 142.86579895]
[83.01474762 142.51577759]
[76.45998383 141.17271423]
[69.96494293 138.80540466]
[56.97456360 146.30540466]
[49.24804688 160.77029419]
[32.85113144 161.04087830]
[24.65155792 146.83879089]
[33.08434296 132.77394104]
[49.47456360 133.31501770]
[62.46494293 125.81502533]
[60.48663712 118.58064270]
[56.53002930 104.11186981]
[54.55172348 96.87748718]
[39.55251312 97.03148651]
[24.55330467 97.18548584]
[9.55409431 97.33947754]
[-2.65492463 107.74713898]
[-18.37607574 104.54949188]
[-25.54943657 90.19949341]
[-18.67222023 75.70523834]
[-3.02003646 72.18547821]
[9.40009785 82.34027100]
[24.39930725 82.18627167]
[39.39851761 82.03227997]
[54.39772415 81.87828064]
[60.94483566 75.05984497]
[68.34294128 70.00953674]
[55.35256195 62.50954056]
[42.36218262 55.00954056]
[29.37179947 47.50954056]
[12.63153839 44.82625961]
[10.57579231 27.99740601]
[26.17787933 21.36330986]
[36.87179947 34.51916122]
[49.86218262 42.01916122]
[62.85256195 49.51916122]
[75.84294128 57.01916122]
[89.88491821 51.74441910]
[94.72473907 37.54666519]
[99.56455231 23.34891319]
[104.40436554 9.15116024]
[109.09816742 -5.09553194]
[113.64546204 -19.38966179]
[118.19274902 -33.68379211]
[122.74003601 -47.97792053]
[109.27974701 -54.66529083]
[96.99808502 -63.32908630]
[86.18296814 -73.76621246]
[77.08789825 -85.73200226]
[69.92609406 -98.94597626]
[64.86543274 -113.09836578]
[62.02453995 -127.85742188]
[61.47001266 -142.87716675]
[63.21485138 -157.80552673]
[67.21815491 -172.29255676]
[73.38607025 -185.99865723]
[81.57402802 -198.60253906]
[91.59008026 -209.80874634]
[103.19944763 -219.35459900]
[116.12997437 -227.01631165]
[130.07855225 -232.61428833]
[144.71823120 -236.01731873]
[159.70579529 -237.14561462]
[174.68995667 -235.97273254]
[189.31942749 -232.52616882]
[203.25129700 -226.88671875]
[216.15898132 -219.18656921]
[227.73988342 -209.60623169]
[237.72256470 -198.37026978]
[245.87298584 -185.74209595]
[252.00010681 -172.01770020]
[255.96028137 -157.51882935]
[257.66070557 -142.58534241]
[257.06149292 -127.56730652]
[254.17671204 -112.81676483]
[249.07395935 -98.67948914]
[241.87287903 -85.48688507]
[232.74226379 -73.54820251]
[221.89613342 -63.14329910]
[209.58876038 -54.51608276]
[196.10862732 -47.86878586]
[181.77174377 -43.35723114]
[166.91416931 -41.08717728]
[151.88420105 -41.11183929]
[137.03416443 -43.43063354]
[132.48687744 -29.13650131]
[127.93959045 -14.84237194]
[123.39229584 -0.54824185]
[124.36761475 6.82474613]
[118.60211945 13.99097633]
[113.76230621 28.18872833]
[108.92248535 42.38648224]
[104.08267212 56.58423233]
[118.65046692 61.27881241]
[130.49722290 70.61541748]
[138.23516846 83.30392456]
[141.02714539 97.67521667]
[138.67494202 111.90019226]
[131.62535095 124.22245789]
[120.89527130 133.17518616]
[126.31389618 147.16226196]
[138.51391602 157.23550415]
[135.89671326 171.89837646]
[141.31533813 185.88545227]
[146.73396301 199.87254333]
[149.43466187 185.11767578]
[156.48683167 171.87882996]
[167.22492981 161.40538025]
[180.63560486 154.68571472]
[195.45326233 152.35397339]
[210.27954102 154.63023376]
[223.71527100 161.29963684]
[234.49250793 171.73281860]
[241.59417725 184.94517517]
[244.35008240 199.68983459]
[242.50016785 214.57533264]
[236.21897888 228.19688416]
[226.09930420 239.26902771]
[213.09616089 246.74684143]
[198.43663025 249.92466736]
[183.50419617 248.50259399]
[169.70803833 242.61482239]
[158.35011292 232.81700134]
[150.50312805 220.03576660]
[150.50312805 235.03576660]
[150.50312805 250.03576660]
[150.50312805 265.03576660]
[150.50312805 280.03576660]
[150.50312805 295.03576660]
[150.50312805 310.03576660]
[150.50312805 325.03576660]
[150.50312805 340.03576660]
[150.50312805 355.03576660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 124]
[12 123]
[13 122]
[15 120]
[16 119]
[22 29]
[23 28]
[32 44]
[33 43]
[34 42]
[35 41]
[46 56]
[47 55]
[48 54]
[49 53]
[57 112]
[58 111]
[59 110]
[60 109]
[61 107]
[62 106]
[63 105]
[64 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
