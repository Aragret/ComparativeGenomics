%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUUCGAAUUUGCAAUUCAAUAUGAAAAUCACCUCGGAGCUGGUAAAAAGAGGCCUAAxxxxxxxxxxAUCUCCUUAAUUAUAACAUUCACAGCCACAGAACUAAUCAUAUUUUAUAUCUUCUUCGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.28478241 262.18344116]
[120.28478241 247.18342590]
[120.28478241 232.18342590]
[120.28478241 217.18342590]
[120.28478241 202.18342590]
[120.28478241 187.18342590]
[120.28478241 172.18342590]
[120.28478241 157.18342590]
[120.28478241 142.18342590]
[120.28478241 127.18343353]
[113.70049286 123.59217834]
[106.51798248 136.76075745]
[103.75614166 151.50430298]
[88.88071442 153.43347168]
[82.44938660 139.88215637]
[93.34940338 129.57824707]
[100.53191376 116.40966797]
[93.94761658 112.81841278]
[81.33649445 120.93995667]
[68.72536469 129.06149292]
[56.11423492 137.18304443]
[43.50310516 145.30458069]
[33.46018982 158.96386719]
[17.55455589 153.09471130]
[18.79123497 136.18592834]
[35.38156509 132.69345093]
[47.99269104 124.57191467]
[60.60382080 116.45037079]
[73.21495056 108.32882690]
[85.82608032 100.20728302]
[93.55016327 87.34888458]
[94.79703522 72.40079498]
[96.04390717 57.45270920]
[97.29078674 42.50462341]
[98.53765869 27.55653572]
[99.78453827 12.60844898]
[101.03141022 -2.33963776]
[87.54428864 -6.55802631]
[75.24739075 -13.50815487]
[64.68640137 -22.87854958]
[56.32932663 -34.25040817]
[50.54576874 -47.11630249]
[47.59056091 -60.90284348]
[47.59256363 -74.99621582]
[50.54902267 -88.76951599]
[56.32582855 -101.61063385]
[64.66358948 -112.94946289]
[75.18928528 -122.28319550]
[87.43292999 -129.19863892]
[100.84860992 -133.39050293]
[114.83875275 -134.67485046]
[116.70636749 -149.55812073]
[118.57398224 -164.44140625]
[120.44159698 -179.32469177]
[105.88997650 -183.04675293]
[91.91962433 -188.56330872]
[78.75086212 -195.78736877]
[66.59138489 -204.60498047]
[55.63296509 -214.87709045]
[46.04842758 -226.44168091]
[37.98893738 -239.11637878]
[31.58160782 -252.70126343]
[26.92748833 -266.98211670]
[24.09998131 -281.73367310]
[23.14367867 -296.72329712]
[24.07366753 -311.71456909]
[26.87527657 -326.47106934]
[31.50432205 -340.76004028]
[37.88779831 -354.35617065]
[45.92502594 -367.04498291]
[55.48924637 -378.62640381]
[66.42961884 -388.91772461]
[78.57360077 -397.75668335]
[91.72966766 -405.00381470]
[105.69031525 -410.54489136]
[120.23537445 -414.29251099]
[135.13543701 -416.18753052]
[150.15553284 -416.20007324]
[165.05874634 -414.32995605]
[179.61004639 -410.60665894]
[193.57994080 -405.08892822]
[206.74809265 -397.86376953]
[218.90682983 -389.04513550]
[229.86439514 -378.77209473]
[239.44795227 -367.20669556]
[247.50637817 -354.53131104]
[253.91256714 -340.94589233]
[258.56549072 -326.66464233]
[261.39175415 -311.91287231]
[262.34677124 -296.92315674]
[261.41552734 -281.93197632]
[258.61267090 -267.17568970]
[253.98243713 -252.88710022]
[247.59780884 -239.29151917]
[239.55952454 -226.60337830]
[229.99432373 -215.02278137]
[219.05308533 -204.73237610]
[206.90835571 -195.89443970]
[193.75169373 -188.64839172]
[179.79057312 -183.10850525]
[165.24519348 -179.36212158]
[150.34497070 -177.46835327]
[135.32487488 -177.45707703]
[133.45726013 -162.57379150]
[131.58964539 -147.69052124]
[129.72203064 -132.80723572]
[144.64916992 -127.26871490]
[157.84259033 -118.34152985]
[168.54641724 -106.53234100]
[176.14622498 -92.51310730]
[180.20434570 -77.08277893]
[180.48513794 -61.12181854]
[176.96856689 -45.54193878]
[169.85165405 -31.23403168]
[159.53736877 -19.01722145]
[146.61190796 -9.59197044]
[131.81127930 -3.49992013]
[115.97949982 -1.09276330]
[114.73262024 13.85532379]
[113.48574829 28.80341148]
[112.23886871 43.75149918]
[110.99199677 58.69958496]
[109.74512482 73.64767456]
[108.49824524 88.59575653]
[116.75897980 76.07536316]
[124.92450714 63.49267197]
[136.56004333 54.02618027]
[150.54072571 48.59106064]
[165.51498413 47.71273804]
[180.03520203 51.47612381]
[192.69766235 59.51740265]
[202.27822876 71.05918884]
[207.85070801 84.98569489]
[208.87638855 99.95058441]
[205.25610352 114.50714874]
[197.33985901 127.24814606]
[185.89294434 136.94184875]
[172.02195740 142.65115356]
[157.06788635 143.82408142]
[142.47616577 140.34716797]
[135.28479004 127.18343353]
[135.28479004 142.18342590]
[135.28479004 157.18342590]
[135.28479004 172.18342590]
[135.28479004 187.18342590]
[135.28479004 202.18342590]
[135.28479004 217.18342590]
[135.28479004 232.18342590]
[135.28479004 247.18342590]
[135.28479004 262.18344116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[36 119]
[37 118]
[51 106]
[52 105]
[53 104]
[54 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
