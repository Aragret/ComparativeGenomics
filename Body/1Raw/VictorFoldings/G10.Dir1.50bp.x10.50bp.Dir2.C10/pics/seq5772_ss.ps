%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACxxxxxxxxxxUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCGAAUUGGUAUAUAGUUUAAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[22.20206451 214.11018372]
[14.52661419 208.48019409]
[7.25720310 202.33486938]
[-3.40442300 212.88616943]
[-14.06604958 223.43745422]
[-24.72767448 233.98873901]
[-29.09392738 249.19552612]
[-43.58272171 252.64866638]
[-54.24434662 263.19995117]
[-64.90597534 273.75125122]
[-65.76483917 286.66311646]
[-74.91651154 295.23431396]
[-87.05352783 295.24472046]
[-97.93235779 305.57192993]
[-108.81118011 315.89913940]
[-119.69001007 326.22634888]
[-119.85037231 342.02981567]
[-131.19683838 353.03134155]
[-146.99772644 352.70388794]
[-157.87867737 341.24176025]
[-157.38418579 325.44519043]
[-145.80764771 314.68603516]
[-130.01721191 315.34750366]
[-119.13838959 305.02029419]
[-108.25955963 294.69311523]
[-97.38073730 284.36590576]
[-93.34943390 267.31454468]
[-75.45726776 263.08963013]
[-64.79563904 252.53833008]
[-54.13401031 241.98703003]
[-50.53034973 227.53494263]
[-35.27896500 223.32711792]
[-24.61734009 212.77583313]
[-13.95571327 202.22453308]
[-3.29408693 191.67324829]
[-17.15317535 173.13539124]
[-27.72175407 152.54336548]
[-34.70298004 130.47555542]
[-37.90077591 107.55175781]
[-37.22531509 84.41585541]
[-32.69557571 61.71766663]
[-24.43878174 40.09472275]
[-12.68684769 20.15435600]
[2.23014903 2.45663118]
[19.89323044 -12.50136948]
[39.80628967 -24.29951668]
[61.41002655 -32.60643387]
[58.00704956 -47.21532822]
[54.60406876 -61.82421875]
[51.20109177 -76.43311310]
[47.79811478 -91.04200745]
[44.39513779 -105.65089417]
[40.99215698 -120.25978851]
[28.09995651 -133.36593628]
[33.77074432 -149.94429016]
[30.06458282 -164.47923279]
[26.35842133 -179.01417542]
[11.28371525 -178.88510132]
[-3.38367343 -182.36808777]
[-16.79100037 -189.26062012]
[-28.15878296 -199.16197205]
[-36.82611084 -211.49652100]
[-42.28908157 -225.54711914]
[-44.23007965 -240.49690247]
[-42.53625870 -255.47669983]
[-37.30609894 -269.61560059]
[-28.84367371 -282.09161377]
[-17.64097595 -292.17938232]
[-4.34931660 -299.29241943]
[10.25854492 -303.01718140]
[25.33332634 -303.13708496]
[39.99860001 -299.64523315]
[53.40174866 -292.74456787]
[64.76352692 -282.83630371]
[73.42337799 -270.49652100]
[78.87782288 -256.44262695]
[80.80976105 -241.49165344]
[79.10685730 -226.51289368]
[73.86812592 -212.37715149]
[65.39813995 -199.90626526]
[54.18932724 -189.82530212]
[40.89335632 -182.72033691]
[44.59951782 -168.18539429]
[48.30567932 -153.65045166]
[58.57204819 -147.17674255]
[61.75181580 -135.04792786]
[55.60105133 -123.66276550]
[59.00402832 -109.05387878]
[62.40700531 -94.44498444]
[65.80998230 -79.83609009]
[69.21296692 -65.22719574]
[72.61594391 -50.61830521]
[76.01892090 -36.00941086]
[88.00211334 -37.58525848]
[100.07719421 -38.10737228]
[112.15168762 -37.57175827]
[124.13311768 -35.98251724]
[135.92971802 -33.35182190]
[147.45112610 -29.69981766]
[158.60913086 -25.05447388]
[169.31826782 -19.45137215]
[179.49650574 -12.93342113]
[189.06590271 -5.55054283]
[197.95317078 2.64072061]
[206.09024048 11.57763386]
[213.41477966 21.19175148]
[219.87071228 31.40944290]
[225.40858459 42.15245056]
[229.98599243 53.33849716]
[233.56785583 64.88191223]
[236.12677002 76.69429016]
[237.64311218 88.68515778]
[238.10528564 100.76268768]
[237.50975037 112.83437347]
[235.86105347 124.80776215]
[233.17184448 136.59115601]
[247.39862061 141.34497070]
[261.62539673 146.09878540]
[276.56430054 140.24996948]
[290.37863159 148.40740967]
[292.47122192 164.31340027]
[281.23681641 175.76623535]
[265.29348755 173.98028564]
[256.87158203 160.32556152]
[242.64480591 155.57174683]
[228.41802979 150.81793213]
[224.61251831 159.54302979]
[220.21502686 167.98527527]
[215.24647522 176.10455322]
[209.73042297 183.86230469]
[203.69311523 191.22166443]
[197.16320801 198.14767456]
[190.17172241 204.60742188]
[182.75187683 210.57025146]
[174.93891907 216.00781250]
[166.76997375 220.89427185]
[158.28382874 225.20642090]
[149.52079773 228.92378235]
[140.52253723 232.02870178]
[131.33175659 234.50640869]
[121.99214935 236.34513855]
[112.54806519 237.53617859]
[103.04436493 238.07383728]
[93.52620697 237.95558167]
[84.03880310 237.18197632]
[74.62722015 235.75666809]
[65.33617401 233.68646240]
[56.20980072 230.98118591]
[47.29144669 227.65367126]
[38.62348557 223.71974182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[8 30]
[9 29]
[10 28]
[13 26]
[14 25]
[15 24]
[16 23]
[47 93]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[55 84]
[56 83]
[57 82]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
