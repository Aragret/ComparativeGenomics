%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCUUxxxxxxxxxxGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCAUCCUCCAUAUAUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[129.48135376 68.88351440]
[121.22905731 81.40947723]
[112.97676849 93.93544006]
[111.96141052 107.88035583]
[99.54919434 114.31684875]
[91.29690552 126.84281158]
[83.04461670 139.36877441]
[74.79232788 151.89472961]
[66.54003906 164.42070007]
[72.88301086 178.48377991]
[70.59337616 193.74029541]
[60.40176392 205.32192993]
[45.56026459 209.53305054]
[30.80475616 205.02989197]
[20.84366226 193.24938965]
[18.85553551 177.95066833]
[25.47477913 164.01548767]
[38.58921432 155.89051819]
[54.01407623 156.16841125]
[62.26636505 143.64244080]
[70.51865387 131.11648560]
[78.77094269 118.59052277]
[87.02323151 106.06455994]
[88.03858948 92.11964417]
[100.45080566 85.68315125]
[108.70309448 73.15718842]
[116.95538330 60.63122559]
[104.85376740 51.76303864]
[93.20922852 42.30265808]
[82.05073547 32.27360535]
[71.40601349 21.70081139]
[61.30154037 10.61056423]
[51.76243210 -0.96956360]
[42.81240463 -13.01078224]
[34.47370529 -25.48315620]
[26.76707268 -38.35567474]
[19.71166229 -51.59634018]
[13.32501507 -65.17222595]
[7.62301064 -79.04958344]
[2.61982465 -93.19391632]
[-1.67210376 -107.57005310]
[-5.24210453 -122.14225769]
[-8.08130169 -136.87429810]
[-10.18263721 -151.72953796]
[-11.54088688 -166.67106628]
[-12.15267277 -181.66171265]
[-12.01647472 -196.66423035]
[-11.13263130 -211.64131165]
[-9.50333881 -226.55570984]
[-7.13264990 -241.37036133]
[-4.02645731 -256.04843140]
[-0.19248343 -270.55340576]
[4.35973930 -284.84924316]
[9.61889362 -298.90042114]
[15.57190514 -312.67196655]
[22.20397186 -326.12966919]
[29.49860573 -339.24005127]
[37.43767548 -351.97055054]
[46.00143433 -364.28945923]
[55.16859818 -376.16619873]
[64.91637421 -387.57125854]
[75.22052765 -398.47622681]
[86.05544281 -408.85400391]
[97.39418030 -418.67883301]
[109.20854950 -427.92623901]
[121.46918488 -436.57324219]
[134.14558411 -444.59838867]
[147.20625305 -451.98165894]
[160.61871338 -458.70474243]
[174.34962463 -464.75091553]
[188.36483765 -470.10513306]
[202.62951660 -474.75411987]
[217.10820007 -478.68624878]
[231.76489258 -481.89181519]
[246.56314087 -484.36282349]
[261.46615601 -486.09310913]
[276.43688965 -487.07839966]
[291.43814087 -487.31622314]
[306.43261719 -486.80599976]
[321.38299561 -485.54901123]
[336.25213623 -483.54833984]
[351.00305176 -480.80902100]
[365.59912109 -477.33782959]
[380.00399780 -473.14337158]
[394.18188477 -468.23611450]
[408.09756470 -462.62826538]
[421.71640015 -456.33374023]
[435.00454712 -449.36819458]
[447.92898560 -441.74893188]
[460.45758057 -433.49490356]
[472.55914307 -424.62667847]
[484.20364380 -415.16622925]
[495.36206055 -405.13711548]
[506.00674438 -394.56427002]
[516.11114502 -383.47396851]
[525.65020752 -371.89379883]
[534.60015869 -359.85250854]
[542.93878174 -347.38009644]
[550.64538574 -334.50753784]
[557.70068359 -321.26684570]
[564.08728027 -307.69091797]
[569.78924561 -293.81353760]
[574.79235840 -279.66918945]
[579.08416748 -265.29302979]
[582.65411377 -250.72079468]
[585.49322510 -235.98875427]
[587.59448242 -221.13348389]
[588.95263672 -206.19195557]
[589.56439209 -191.20130920]
[589.42810059 -176.19879150]
[588.54418945 -161.22172546]
[586.91479492 -146.30732727]
[584.54400635 -131.49269104]
[581.43774414 -116.81464386]
[577.60369873 -102.30967712]
[573.05139160 -88.01385498]
[567.79217529 -73.96271515]
[561.83911133 -60.19119263]
[555.20697021 -46.73352814]
[547.91229248 -33.62318039]
[539.97314453 -20.89273834]
[531.40930176 -8.57385540]
[522.24206543 3.30284119]
[512.49426270 14.70782471]
[502.19003296 25.61274147]
[491.35507202 35.99047852]
[480.01626587 45.81523514]
[468.20187378 55.06258774]
[455.94119263 63.70954132]
[443.26473999 71.73460388]
[430.20404053 79.11782074]
[416.79153442 85.84082794]
[403.06060791 91.88693237]
[389.04534912 97.24108124]
[374.78063965 101.88996887]
[360.30194092 105.82204437]
[345.64523315 109.02752686]
[330.84698486 111.49844360]
[315.94393921 113.22866058]
[300.97320557 114.21386719]
[285.97195435 114.45161438]
[270.97750854 113.94131470]
[256.02713013 112.68424225]
[241.15798950 110.68351746]
[226.40707397 107.94410706]
[211.81105042 104.47283173]
[197.40618896 100.27832031]
[183.22830200 95.37099457]
[169.31266785 89.76305389]
[155.69386292 83.46845245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
