%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAUxxxxxxxxxxCACCACCCAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCAUACACAACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-28.70414352 208.39538574]
[-40.59652328 217.53712463]
[-52.48890305 226.67884827]
[-64.38127899 235.82058716]
[-76.27365875 244.96232605]
[-82.49929810 259.50714111]
[-97.30529022 261.12945557]
[-109.19766998 270.27117920]
[-121.09004974 279.41290283]
[-127.31568909 293.95773315]
[-142.12167358 295.58004761]
[-154.01405334 304.72177124]
[-165.90643311 313.86349487]
[-177.79881287 323.00524902]
[-179.35325623 327.21774292]
[-181.93354797 330.36627197]
[-185.06575012 332.25601196]
[-188.26193237 332.87112427]
[-191.08137512 332.36309814]
[-203.69250488 340.48464966]
[-216.30363464 348.60620117]
[-228.91476440 356.72772217]
[-238.95767212 370.38702393]
[-254.86331177 364.51785278]
[-253.62663269 347.60906982]
[-237.03630066 344.11660767]
[-224.42517090 335.99505615]
[-211.81405640 327.87350464]
[-199.20292664 319.75198364]
[-186.94055176 311.11285400]
[-175.04817200 301.97113037]
[-163.15579224 292.82937622]
[-151.26341248 283.68765259]
[-145.88839722 269.79669189]
[-130.23178101 267.52053833]
[-118.33940887 258.37878418]
[-106.44702911 249.23706055]
[-101.07201385 235.34611511]
[-85.41539764 233.06994629]
[-73.52301788 223.92820740]
[-61.63063812 214.78646851]
[-49.73825836 205.64474487]
[-37.84587860 196.50300598]
[-53.75119400 168.37313843]
[-63.98596573 137.72158813]
[-68.17272949 105.67881775]
[-66.15706635 73.42659760]
[-58.01331329 42.15444565]
[-44.04183197 13.01571083]
[-24.75790024 -12.91493320]
[-35.41952515 -23.46622276]
[-46.08115387 -34.01751328]
[-56.74277878 -44.56880569]
[-67.40440369 -55.12009430]
[-83.39531708 -58.75642395]
[-87.98246002 -74.50094604]
[-76.44698334 -86.15705109]
[-60.65559006 -81.73394012]
[-56.85311508 -65.78172302]
[-46.19149017 -55.23043060]
[-35.52986145 -44.67913818]
[-24.86823654 -34.12784958]
[-14.20660973 -23.57655907]
[-7.43514538 -29.50677681]
[-0.35625952 -35.06641769]
[7.00979137 -40.23957062]
[14.64192963 -45.01143265]
[22.51831627 -49.36835098]
[30.61641502 -53.29785919]
[38.91305161 -56.78871155]
[47.38448334 -59.83092117]
[56.00647354 -62.41577911]
[64.75434875 -64.53589630]
[73.60308075 -66.18519592]
[82.52734375 -67.35896301]
[91.50160217 -68.05384064]
[100.50018311 -68.26783752]
[109.49732971 -68.00034332]
[118.46730042 -67.25212860]
[127.38442993 -66.02532196]
[136.22320557 -64.32344818]
[144.95831299 -62.15136719]
[153.56478882 -59.51529312]
[162.01799011 -56.42277908]
[170.29371643 -52.88266373]
[178.36831665 -48.90507889]
[186.21865845 -44.50141144]
[193.82229614 -39.68426132]
[201.15745544 -34.46740723]
[208.20317078 -28.86578178]
[214.93925476 -22.89541245]
[221.34645081 -16.57338333]
[227.40641785 -9.91778374]
[233.10182190 -2.94765949]
[245.36419678 -11.58677578]
[257.62655640 -20.22589111]
[264.01934814 -35.32768250]
[280.32531738 -37.07344437]
[289.77026367 -23.66728401]
[282.63803101 -8.90031338]
[266.26568604 -7.96352339]
[254.00331116 0.67559254]
[241.74093628 9.31470871]
[247.04211426 18.18965149]
[251.78829956 27.37337112]
[255.96159363 36.83120728]
[259.54623413 46.52746201]
[262.52871704 56.42554092]
[264.89773560 66.48808289]
[266.64440918 76.67710114]
[267.76208496 86.95415497]
[268.24661255 97.28044891]
[268.09609985 107.61700439]
[267.31112671 117.92481232]
[265.89468384 128.16496277]
[263.85211182 138.29881287]
[261.19110107 148.28811646]
[257.92172241 158.09515381]
[254.05627441 167.68293762]
[249.60937500 177.01524353]
[244.59780884 186.05688477]
[239.04048157 194.77372742]
[232.95837402 203.13284302]
[226.37445068 211.10272217]
[219.31353760 218.65325928]
[211.80230713 225.75596619]
[203.86909485 232.38401794]
[195.54383850 238.51242065]
[186.85798645 244.11802673]
[177.84429932 249.17970276]
[168.53678894 253.67831421]
[158.97061157 257.59689331]
[149.18186951 260.92065430]
[139.20748901 263.63705444]
[129.08512878 265.73583984]
[118.85299683 267.20910645]
[108.54970551 268.05123901]
[98.21414185 268.25909424]
[87.88532257 267.83190918]
[77.60222626 266.77127075]
[67.40366364 265.08117676]
[57.32813263 262.76800537]
[47.41365814 259.84051514]
[37.69765854 256.30972290]
[28.21681023 252.18899536]
[19.00689316 247.49383545]
[10.10266876 242.24198914]
[1.53774548 236.45329285]
[-6.65555096 230.14956665]
[-14.44629574 223.35461426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[7 37]
[8 36]
[9 35]
[11 33]
[12 32]
[13 31]
[14 30]
[19 29]
[20 28]
[21 27]
[22 26]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
