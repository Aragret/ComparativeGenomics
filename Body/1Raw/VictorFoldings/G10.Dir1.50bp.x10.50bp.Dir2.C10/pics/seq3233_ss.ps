%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGxxxxxxxxxxGUCUUACUCUUUUAGUAUAAAUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[154.34201050 323.95407104]
[154.02995300 308.95730591]
[153.71789551 293.96054077]
[153.40583801 278.96380615]
[153.09378052 263.96704102]
[152.78172302 248.97029114]
[152.46966553 233.97354126]
[152.15760803 218.97679138]
[151.84555054 203.98004150]
[147.53796387 189.61184692]
[139.54804993 176.91691589]
[131.55813599 164.22198486]
[123.56822205 151.52705383]
[115.57830048 138.83213806]
[107.58838654 126.13719940]
[83.10382080 125.07158661]
[66.92304230 103.39309692]
[52.15698624 106.03196716]
[37.39093399 108.67082977]
[47.75160599 119.51778412]
[45.94237518 134.40827942]
[33.28564072 142.45855713]
[19.03244972 137.78453064]
[13.60073376 123.80252075]
[20.96009827 110.73263550]
[5.99985027 111.82394409]
[-8.96039867 112.91525269]
[-12.80149937 127.56191254]
[-21.19231987 140.16639709]
[-33.22268295 149.36145020]
[-47.58762741 154.14967346]
[-62.72895050 154.01167297]
[-77.00423431 148.96241760]
[-88.86500549 139.54962158]
[-97.02469635 126.79429626]
[-100.59819794 112.08006287]
[-99.19789124 97.00299835]
[-92.97566986 83.19855499]
[-82.60646820 72.16413879]
[-69.21506500 65.09667206]
[-54.25405884 62.76278687]
[-39.34630585 65.41564178]
[-26.10889053 72.76748657]
[-15.97770691 84.02082825]
[-10.05170918 97.95500946]
[4.90853977 96.86369324]
[19.86878777 95.77238464]
[34.75206757 93.90476990]
[49.51812363 91.26590729]
[64.28417969 88.62704468]
[71.60328674 75.53388977]
[66.11625671 61.57350159]
[59.20925522 48.25834274]
[50.95696640 35.73238373]
[42.70467758 23.20642090]
[34.45238876 10.68045807]
[26.20009804 -1.84550345]
[10.69369602 -2.42094493]
[-1.49219608 -12.02738285]
[-5.67185497 -26.97094536]
[-0.23811620 -41.50552750]
[12.71963692 -50.04228973]
[28.21888351 -49.29866791]
[40.29984665 -39.56060028]
[44.31715012 -24.57257462]
[38.72605896 -10.09779263]
[46.97834778 2.42816925]
[55.23063660 14.95413113]
[63.48292923 27.48009300]
[71.73521423 40.00605392]
[73.09767914 25.06805992]
[81.63379669 12.73376942]
[95.13401794 6.19587517]
[110.10385132 7.14669323]
[122.66840363 15.34010601]
[129.57537842 28.65527344]
[129.03692627 43.64560699]
[121.19242096 56.43090057]
[108.07239532 63.70172501]
[93.07292175 63.57604599]
[80.07664490 56.08646774]
[85.56367493 70.04685974]
[96.41333771 68.96739197]
[106.34931946 71.47014618]
[114.29592896 76.84047699]
[125.38724518 66.74182892]
[136.47856140 56.64318085]
[147.56987000 46.54452896]
[148.96510315 33.67956924]
[158.46540833 25.49646378]
[170.59236145 25.99095917]
[181.89135742 16.12523651]
[193.19036865 6.25951290]
[204.48936462 -3.60621023]
[212.44369507 -18.57835197]
[229.03269958 -15.07958221]
[230.26295471 1.82966971]
[214.35508728 7.69279480]
[203.05609131 17.55851746]
[191.75708008 27.42424011]
[180.45808411 37.28996277]
[175.72096252 54.15885925]
[157.66851807 57.63584518]
[146.57720947 67.73449707]
[135.48588562 77.83314514]
[124.39457703 87.93179321]
[127.16252899 98.28706360]
[125.71739197 108.90802002]
[120.28331757 118.14728546]
[128.27323914 130.84220886]
[136.26315308 143.53713989]
[144.25306702 156.23207092]
[152.24298096 168.92700195]
[160.23289490 181.62193298]
[160.05566406 166.62298584]
[163.15834045 151.94737244]
[169.39114380 138.30361938]
[178.45318604 126.35039520]
[189.90693665 116.66476440]
[203.19947815 109.71434021]
[217.68907166 105.83465576]
[232.67617798 105.21302032]
[247.43728638 107.87944031]
[261.25976562 113.70519257]
[273.47625732 122.40901947]
[283.49707031 133.57072449]
[290.83834839 146.65145874]
[295.14572144 161.01971436]
[296.21121216 175.98181152]
[293.98339844 190.81546021]
[288.56982422 204.80448914]
[280.23184204 217.27357483]
[269.37197876 227.62074280]
[256.51455688 235.34643555]
[242.28025818 240.07769775]
[227.35629272 241.58610535]
[212.46315002 239.79884338]
[198.31982422 234.80220032]
[185.60913086 226.83738708]
[174.94468689 216.28894043]
[166.84230042 203.66798401]
[167.15435791 218.66473389]
[167.46641541 233.66148376]
[167.77847290 248.65823364]
[168.09053040 263.65499878]
[168.40258789 278.65173340]
[168.71464539 293.64849854]
[169.02670288 308.64526367]
[169.33876038 323.64199829]
[171.92976379 342.84973145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 114]
[11 113]
[12 112]
[13 111]
[14 110]
[15 109]
[17 50]
[18 49]
[19 48]
[25 47]
[26 46]
[27 45]
[51 82]
[52 81]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[85 106]
[86 105]
[87 104]
[88 103]
[91 101]
[92 100]
[93 99]
[94 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
