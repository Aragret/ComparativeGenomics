%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUCUUCAUAGCCGAAUACACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCxxxxxxxxxxGAGUGCGGCUUCGACCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[220.51568604 248.79660034]
[229.33557129 236.63146973]
[218.56687927 226.18945312]
[207.79820251 215.74745178]
[193.27494812 212.44226074]
[188.75384521 197.28079224]
[177.98515320 186.83879089]
[167.21647644 176.39677429]
[156.44779968 165.95477295]
[145.67912292 155.51275635]
[134.91044617 145.07075500]
[124.14176178 134.62873840]
[112.00739288 134.49015808]
[102.94728851 125.82495117]
[102.22241211 112.90681458]
[91.24160767 102.68811035]
[79.85053253 92.92883301]
[64.30779266 93.95880127]
[52.89464569 83.89923859]
[52.00851822 69.07525635]
[40.61744690 59.31598282]
[29.22637177 49.55670929]
[17.83529854 39.79743195]
[6.44422436 30.03815842]
[2.00904822 29.38327026]
[-1.59800911 27.50905418]
[-4.08994150 24.83753586]
[-5.35104465 21.84106255]
[-5.43821239 18.98039246]
[-15.99022770 8.31948376]
[-26.54224205 -2.34142494]
[-38.36903763 6.91294861]
[-51.19025040 14.73170853]
[-64.83248901 21.00911522]
[-79.11125946 25.66027260]
[-93.83345795 28.62228203]
[-108.79997253 29.85508347]
[-123.80841827 29.34200478]
[-138.65580750 27.08998489]
[-153.14134216 23.12948036]
[-167.06913757 17.51405144]
[-180.25083923 10.31964207]
[-192.50814819 1.64354670]
[-203.67533875 -8.39689922]
[-213.60134888 -19.66591072]
[-222.15197754 -32.01108551]
[-229.21156311 -45.26547241]
[-234.68464661 -59.24982071]
[-238.49719238 -73.77500153]
[-240.59765625 -88.64459229]
[-240.95762634 -103.65748596]
[-239.57223511 -118.61064911]
[-236.46022034 -133.30186462]
[-231.66366577 -147.53245544]
[-225.24743652 -161.10995483]
[-217.29830933 -173.85075378]
[-207.92378235 -185.58253479]
[-197.25064087 -196.14666748]
[-185.42323303 -205.40023804]
[-172.60150146 -213.21815491]
[-158.95884705 -219.49464417]
[-144.67976379 -224.14485168]
[-129.95736694 -227.10588074]
[-114.99076843 -228.33767700]
[-99.98236084 -227.82359314]
[-85.13512421 -225.57058716]
[-70.64984131 -221.60911560]
[-56.72242355 -215.99275208]
[-43.54121399 -208.79747009]
[-31.28447151 -200.12055969]
[-20.11795807 -190.07936096]
[-10.19268894 -178.80969238]
[-1.64289081 -166.46394348]
[5.41581059 -153.20909119]
[10.88795376 -139.22438049]
[14.69953442 -124.69893646]
[16.79900551 -109.82920837]
[17.15797424 -94.81629181]
[15.77158451 -79.86322021]
[12.65858650 -65.17221069]
[7.86108112 -50.94194412]
[1.44394791 -37.36486816]
[-6.50602865 -24.62460327]
[-15.88133335 -12.89344025]
[-5.32931852 -2.23253131]
[5.22269630 8.42837715]
[16.20349884 18.64708519]
[27.59457207 28.40635872]
[38.98564529 38.16563416]
[50.37672043 47.92490768]
[61.76779556 57.68418121]
[76.55226135 56.28594971]
[88.24345398 66.02097321]
[89.60980988 81.53776550]
[101.00088501 91.29703522]
[104.11747742 91.29727936]
[107.30084229 92.46073151]
[110.10925293 94.81326294]
[112.09823608 98.21318817]
[112.88332367 102.35480499]
[130.73191833 106.76597595]
[134.58377075 123.86006165]
[145.35244751 134.30206299]
[156.12112427 144.74407959]
[166.88981628 155.18609619]
[177.65849304 165.62809753]
[188.42716980 176.07011414]
[199.19584656 186.51211548]
[214.48934937 190.56417847]
[218.24021912 204.97877502]
[229.00889587 215.42077637]
[239.77757263 225.86279297]
[251.66532898 216.67247009]
[264.74005127 209.26756287]
[278.73553467 203.79884338]
[293.36688232 200.37762451]
[308.33618164 199.07357788]
[323.33871460 199.91323853]
[338.06903076 202.87953186]
[352.22720337 207.91203308]
[365.52505493 214.90832520]
[377.69183350 223.72593689]
[388.47982788 234.18537903]
[397.66940308 246.07371521]
[405.07351685 259.14889526]
[410.54135132 273.14471436]
[413.96166992 287.77627563]
[415.26480103 302.74566650]
[414.42419434 317.74813843]
[411.45700073 332.47824097]
[406.42361450 346.63613892]
[399.42651367 359.93356323]
[390.60815430 372.09979248]
[380.14804077 382.88711548]
[368.25912476 392.07598877]
[355.18350220 399.47924805]
[341.18734741 404.94625854]
[326.55557251 408.36566162]
[311.58609009 409.66784668]
[296.58367920 408.82632446]
[281.85375977 405.85821533]
[267.69616699 400.82394409]
[254.39918518 393.82601929]
[242.23350525 385.00689697]
[231.44680786 374.54611206]
[222.25869751 362.65667725]
[214.85621643 349.58056641]
[209.39009094 335.58407593]
[205.97160339 320.95208740]
[204.67033386 305.98254395]
[205.51277161 290.98016357]
[208.48179626 276.25042725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[15 100]
[16 95]
[17 94]
[20 91]
[21 90]
[22 89]
[23 88]
[24 87]
[29 86]
[30 85]
[31 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
