%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAxxxxxxxxxxUAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[65.15843964 216.77157593]
[57.88146210 214.34843445]
[50.77133560 211.47230530]
[43.85622406 208.15457153]
[37.16352463 204.40840149]
[28.65243530 216.75996399]
[20.14134598 229.11154175]
[11.63025570 241.46311951]
[3.11916566 253.81468201]
[-5.39192438 266.16625977]
[-13.90301514 278.51782227]
[-10.79564190 294.01364136]
[-19.62499809 307.12155151]
[-35.15278625 310.06494141]
[-48.16664124 301.09747314]
[-50.94567490 285.53945923]
[-41.84113693 272.62112427]
[-26.25458717 270.00674438]
[-17.74349785 257.65518188]
[-9.23240662 245.30358887]
[-0.72131675 232.95202637]
[7.78977346 220.60044861]
[16.30086327 208.24887085]
[24.81195450 195.89730835]
[0.41074771 170.22476196]
[-15.57709122 138.61956787]
[-21.80090141 103.75177765]
[-17.73488808 68.56703186]
[-31.96166801 63.81322098]
[-46.18844604 59.05940628]
[-60.41522598 54.30559158]
[-74.73782349 49.84877396]
[-89.15003967 45.69088745]
[-103.56225586 41.53300095]
[-115.79701233 50.89338303]
[-131.01956177 51.25055695]
[-143.38722229 42.67706299]
[-148.27642822 28.63307381]
[-162.68864441 24.47518730]
[-177.10086060 20.31729889]
[-191.51307678 16.15941238]
[-205.92529297 12.00152397]
[-221.70500183 16.46615982]
[-233.27110291 4.84043598]
[-228.72537231 -10.91610146]
[-212.74407959 -14.59447575]
[-201.76741028 -2.41069198]
[-187.35519409 1.74719548]
[-172.94297791 5.90508270]
[-158.53076172 10.06297016]
[-144.11854553 14.22085762]
[-132.49998474 4.93931532]
[-117.46610260 4.27109861]
[-104.77308655 12.68183994]
[-99.40436554 27.12078285]
[-84.99214935 31.27867126]
[-70.57993317 35.43655777]
[-65.98938751 33.91918945]
[-60.39645004 35.31573486]
[-55.66141129 40.07881165]
[-41.43463135 44.83262634]
[-27.20785332 49.58644104]
[-12.98107338 54.34025574]
[-7.85019398 43.27371979]
[-1.63864183 32.77558517]
[5.59134197 22.95105171]
[13.76731205 13.89855480]
[22.80734444 5.70880651]
[32.62085724 -1.53613257]
[43.10951614 -7.76366758]
[54.16822433 -12.91139698]
[65.68617249 -16.92774010]
[77.54795074 -19.77245331]
[89.63469696 -21.41703224]
[101.82530975 -21.84499741]
[113.99763489 -21.05206108]
[126.02969360 -19.04616928]
[137.80093384 -15.84741783]
[149.19340515 -11.48786259]
[160.09295654 -6.01118517]
[170.39036560 0.52773750]
[179.98246765 8.06338406]
[188.77311707 16.52024651]
[196.67425537 25.81358719]
[209.11369324 17.43144417]
[221.55313110 9.04930115]
[233.99256897 0.66715801]
[246.43202209 -7.71498537]
[248.77159119 -12.52601528]
[252.38308716 -15.60975742]
[256.37722778 -16.77100372]
[259.91918945 -16.20351791]
[272.85723877 -23.79342461]
[276.94738770 -38.82367325]
[290.17654419 -46.33661270]
[304.48037720 -42.34465027]
[317.41842651 -49.93455505]
[330.35650635 -57.52446365]
[337.98251343 -72.04258728]
[354.37716675 -72.42687225]
[362.67501831 -58.28200150]
[354.33996582 -44.15900421]
[337.94641113 -44.58641052]
[325.00833130 -36.99650192]
[312.07028198 -29.40659332]
[308.57534790 -14.97326088]
[295.56246948 -7.09170675]
[280.44714355 -10.85536957]
[267.50909424 -3.26546121]
[254.81416321 4.72445488]
[242.37472534 13.10659790]
[229.93527222 21.48874092]
[217.49583435 29.87088394]
[205.05639648 38.25302887]
[208.73275757 44.98433304]
[211.97836304 51.93358231]
[214.78038025 59.07324219]
[217.12770081 66.37503815]
[219.01101685 73.81003571]
[220.42286682 81.34877777]
[221.35766602 88.96141815]
[221.81172180 96.61777496]
[221.78321838 104.28753662]
[221.27227783 111.94031525]
[220.28091431 119.54579163]
[218.81306458 127.07383728]
[216.87452698 134.49462891]
[214.47300720 141.77877808]
[211.61799622 148.89741516]
[208.32083130 155.82234192]
[204.59454346 162.52613831]
[200.45390320 168.98223877]
[195.91532898 175.16505432]
[190.99678040 181.05012512]
[185.71774292 186.61410522]
[180.09915161 191.83497620]
[174.16323853 196.69203186]
[167.93353271 201.16604614]
[161.43472290 205.23930359]
[154.69252014 208.89566040]
[147.73367310 212.12062073]
[140.58570862 214.90141296]
[133.27697754 217.22703552]
[125.83642578 219.08825684]
[118.29351807 220.47772217]
[110.67814636 221.38992310]
[103.02046204 221.82122803]
[95.35082245 221.76994324]
[87.69959259 221.23628235]
[80.09709930 220.22233582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[28 63]
[29 62]
[30 61]
[31 60]
[32 57]
[33 56]
[34 55]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[92 109]
[93 108]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
