%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGAGUAGGCCUAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAAxxxxxxxxxxAACUUACUAUCCGCCAUCCCAUACAUUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[116.03819275 299.46417236]
[116.03819275 284.46417236]
[116.03819275 269.46417236]
[116.03819275 254.46417236]
[116.03819275 239.46417236]
[116.03819275 224.46417236]
[116.03819275 209.46417236]
[116.03819275 194.46417236]
[116.03819275 179.46417236]
[116.03819275 164.46417236]
[112.03045654 150.00947571]
[104.30636597 137.15107727]
[96.58228302 124.29267883]
[78.28298950 99.34630585]
[65.50563049 91.48887634]
[52.72827530 83.63145447]
[39.95091629 75.77402496]
[25.58273315 71.46643829]
[10.59003639 70.99839783]
[0.63433087 79.26506805]
[-11.88273811 78.52888489]
[-20.24637604 69.73361206]
[-35.22608948 68.95376587]
[-50.20580292 68.17391968]
[-65.18551636 67.39407349]
[-80.16522980 66.61422729]
[-95.16522980 66.61422729]
[-110.14495087 67.39407349]
[-125.12466431 68.17391968]
[-140.10437012 68.95376587]
[-155.08409119 69.73361206]
[-161.99005127 83.45233154]
[-174.83894348 91.86669159]
[-190.17448425 92.71326447]
[-203.87149048 85.76433563]
[-212.24554443 72.88912964]
[-213.04403687 57.55100632]
[-206.05221558 43.87585068]
[-193.15081787 35.54220581]
[-177.81027222 34.79178619]
[-164.15710449 41.82644272]
[-155.86393738 54.75389481]
[-140.88421631 53.97405243]
[-125.90450287 53.19420624]
[-110.92478943 52.41436005]
[-95.94507599 51.63451385]
[-104.87460327 39.58198166]
[-101.22547150 25.03262329]
[-87.66490173 18.62084389]
[-74.10457611 25.03313255]
[-70.45598602 39.58263016]
[-79.38539124 51.63451385]
[-64.40567017 52.41436005]
[-49.42596054 53.19420624]
[-34.44624329 53.97405243]
[-19.46652985 54.75389481]
[-4.32448244 45.93809509]
[11.05807877 56.00570297]
[26.05077553 56.47374344]
[13.49399185 48.26842880]
[3.12032747 37.43389511]
[-4.53176451 24.53252220]
[-9.06509686 10.23395824]
[-10.24436474 -4.71961403]
[-8.00835514 -19.55201912]
[-2.47313142 -33.49337006]
[6.07399702 -45.82003403]
[17.18938446 -55.89218140]
[30.29607964 -63.18701172]
[44.71376801 -67.32588196]
[59.69409180 -68.09395599]
[74.45948029 -65.45137787]
[88.24353027 -59.53530121]
[100.33077240 -50.65280914]
[110.09380341 -39.26495361]
[117.02586365 -25.96283150]
[120.76715088 -11.43689632]
[121.12345886 3.55887103]
[118.07630157 18.24610519]
[111.78383636 31.86245155]
[102.57268524 43.70114517]
[90.92095184 53.14768982]
[77.43344116 59.71175766]
[62.81021881 63.05263138]
[47.80834198 62.99666595]
[60.58570099 70.85409546]
[73.36306000 78.71151733]
[86.14041138 86.56894684]
[76.10776520 75.41789246]
[74.07424927 60.55637360]
[80.74259949 47.12011337]
[93.80841827 39.75231552]
[108.75650787 40.99908447]
[120.42123413 50.42957687]
[124.77158356 64.78487396]
[120.30419159 79.10417175]
[108.56254578 88.43925476]
[122.46510315 82.80729675]
[136.36766052 77.17534637]
[150.27021790 71.54338837]
[164.17277527 65.91143036]
[171.72654724 51.75798416]
[187.52743530 48.98103333]
[199.45434570 59.71081924]
[198.35797119 75.71636963]
[185.07936096 84.71958923]
[169.80473328 79.81398773]
[155.90217590 85.44594574]
[141.99961853 91.07789612]
[128.09706116 96.70985413]
[114.19450378 102.34181213]
[109.44068909 116.56858826]
[117.16477203 129.42698669]
[124.88885498 142.28540039]
[125.02369690 127.28600311]
[128.43101501 112.67812347]
[134.94630432 99.16698456]
[144.25505066 87.40486908]
[155.90783691 77.95961761]
[169.34208679 71.28723145]
[183.90924072 67.70982361]
[198.90605164 67.40010834]
[213.60848999 70.37303925]
[227.30676270 76.48509216]
[239.33956909 85.44118500]
[249.12599182 96.80894470]
[256.19357300 110.03957367]
[260.20108032 124.49432373]
[260.95507812 139.47535706]
[258.41912842 154.25944519]
[252.71571350 168.13282776]
[244.12013245 180.42575073]
[233.04737854 190.54473877]
[220.03199768 198.00128174]
[205.70234680 202.43539429]
[190.75024414 203.63301086]
[175.89750671 201.53630066]
[161.86119080 196.24650574]
[149.31893921 188.01898193]
[138.87626648 177.25096130]
[131.03819275 164.46417236]
[131.03819275 179.46417236]
[131.03819275 194.46417236]
[131.03819275 209.46417236]
[131.03819275 224.46417236]
[131.03819275 239.46417236]
[131.03819275 254.46417236]
[131.03819275 269.46417236]
[131.03819275 284.46417236]
[131.03819275 299.46417236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 114]
[12 113]
[13 112]
[14 88]
[15 87]
[16 86]
[17 85]
[18 59]
[19 58]
[22 56]
[23 55]
[24 54]
[25 53]
[26 52]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
