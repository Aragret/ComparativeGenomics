%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUUAUACCCACACCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAxxxxxxxxxxGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[12.71625233 230.70149231]
[3.80010176 242.76391602]
[-5.11604929 254.82635498]
[-7.09696674 270.52307129]
[-20.88422966 276.15872192]
[-29.80038071 288.22116089]
[-38.71652985 300.28356934]
[-47.25698853 312.61486816]
[-55.41365433 325.20330811]
[-63.57032013 337.79174805]
[-71.72698975 350.38018799]
[-79.88365173 362.96862793]
[-83.42235565 379.54916382]
[-100.33451843 380.73867798]
[-106.15932465 364.81674194]
[-92.47209167 354.81195068]
[-84.31542969 342.22351074]
[-76.15876007 329.63507080]
[-68.00209808 317.04663086]
[-59.84542847 304.45819092]
[-60.25352478 300.89721680]
[-58.91767120 296.96209717]
[-55.68170547 293.49307251]
[-50.77896118 291.36743164]
[-41.86281204 279.30499268]
[-32.94665909 267.24255371]
[-31.60348511 252.40864563]
[-17.17848015 245.91020203]
[-8.26233006 233.84777832]
[0.65382129 221.78533936]
[-24.26988983 196.22019958]
[-42.78037643 165.68939209]
[-53.92235565 131.76853943]
[-57.12082672 96.20820618]
[-72.08210754 95.13113403]
[-87.04338837 94.05406952]
[-102.00466919 92.97699738]
[-115.02638245 102.34793854]
[-130.43220520 97.87128448]
[-136.40409851 82.98115540]
[-128.36094666 69.09997559]
[-112.47275543 66.87619781]
[-100.92759705 78.01571655]
[-85.96631622 79.09278870]
[-71.00503540 80.16985321]
[-56.04375839 81.24692535]
[-53.33475113 64.33608246]
[-48.79556274 47.79264069]
[-42.47404861 31.81440735]
[-34.43942642 16.59311485]
[-24.78150368 2.31213188]
[-13.60967636 -10.85574245]
[-24.79797363 -20.84683990]
[-35.98627090 -30.83793640]
[-51.82776642 -36.87807465]
[-50.40904617 -53.77255630]
[-33.78206253 -57.08613586]
[-25.99517250 -42.02623367]
[-14.80687618 -32.03513718]
[-3.61857939 -22.04403877]
[8.25824451 -31.20597458]
[1.43466878 -44.56407547]
[-13.32391548 -50.85404587]
[-17.46901703 -66.35235596]
[-7.82086706 -79.17003632]
[8.21929741 -79.47444916]
[18.34683609 -67.03208160]
[14.79276848 -51.38764954]
[21.61634445 -38.02954865]
[28.61594009 -41.75549316]
[35.79204941 -45.12681961]
[43.12672806 -48.13520050]
[50.60162735 -50.77320480]
[58.19806671 -53.03433990]
[65.89705658 -54.91305161]
[73.67936707 -56.40473938]
[81.52554321 -57.50577164]
[89.41600800 -58.21348953]
[97.33104706 -58.52621841]
[105.25090790 -58.44327164]
[113.15583038 -57.96494293]
[121.02607727 -57.09252548]
[128.84202576 -55.82828522]
[136.58418274 -54.17546463]
[144.23323059 -52.13828278]
[151.77012634 -49.72191238]
[159.17608643 -46.93246841]
[166.43263245 -43.77700424]
[173.52171326 -40.26347733]
[180.42565918 -36.40073395]
[187.12730408 -32.19850540]
[193.60995483 -27.66734886]
[199.85749817 -22.81865311]
[205.85440063 -17.66458893]
[211.58573914 -12.21809196]
[217.03726196 -6.49282217]
[222.19546509 -0.50313121]
[227.04753113 5.73597145]
[231.58140564 12.20885754]
[235.78585815 18.89932060]
[239.65048218 25.79061127]
[243.16571045 32.86548615]
[246.32284546 40.10625076]
[249.11408997 47.49478912]
[251.53257751 55.01263428]
[253.57234192 62.64099503]
[255.22837830 70.36080170]
[256.49667358 78.15277863]
[257.37411499 85.99745941]
[257.85864258 93.87524414]
[257.94909668 101.76648712]
[257.64538574 109.65147400]
[256.94833374 117.51053619]
[255.85977173 125.32406616]
[254.38252258 133.07258606]
[252.52035522 140.73675537]
[250.27799988 148.29747009]
[247.66114807 155.73590088]
[244.67642212 163.03350830]
[241.33134460 170.17210388]
[237.63435364 177.13392639]
[233.59475708 183.90162659]
[229.22271729 190.45835876]
[224.52923584 196.78784180]
[219.52607727 202.87429810]
[214.22579956 208.70260620]
[208.64172363 214.25828552]
[202.78782654 219.52752686]
[196.67878723 224.49726868]
[190.32992554 229.15515137]
[183.75712585 233.48963928]
[176.97683716 237.48999023]
[170.00604248 241.14630127]
[162.86218262 244.44952393]
[155.56311035 247.39149475]
[148.12710571 249.96496582]
[140.57272339 252.16358948]
[132.91885376 253.98197937]
[125.18463898 255.41566467]
[117.38938141 256.46118164]
[109.55255127 257.11602783]
[101.69372559 257.37860107]
[93.83250427 257.24838257]
[85.98851776 256.72576904]
[78.18133545 255.81219482]
[70.43042755 254.50997925]
[62.75513077 252.82249451]
[55.17457199 250.75404358]
[47.70765686 248.30986023]
[40.37298584 245.49613953]
[33.18883133 242.31999207]
[26.17309189 238.78942871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[5 26]
[6 25]
[7 24]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[34 46]
[35 45]
[36 44]
[37 43]
[52 60]
[53 59]
[54 58]
[61 69]
[62 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
