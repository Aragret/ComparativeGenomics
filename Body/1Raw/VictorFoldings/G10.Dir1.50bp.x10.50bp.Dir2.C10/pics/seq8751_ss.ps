%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCGCCUUAAUCCAAGCCUACGUUUUCACACUUCUAGUAAGCCUCUACCUGCACGACAACAxxxxxxxxxxCCACCCUUACUACACAAUCAAAGACGCCCUCGGCUUACUUCUCUUCCUUCUCUCCUUAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.52153015 259.51422119]
[110.20947266 244.51748657]
[109.89741516 229.52072144]
[109.58535767 214.52397156]
[109.27330017 199.52722168]
[108.96125031 184.53047180]
[108.64919281 169.53370667]
[108.33713531 154.53695679]
[108.02507782 139.54020691]
[104.31891632 125.00527191]
[97.41191864 111.69011688]
[94.92867279 126.48313904]
[85.95786285 138.50497437]
[72.48374939 145.09651184]
[57.48668289 144.79974365]
[44.28387833 137.68034363]
[35.79567337 125.31302643]
[33.89958191 110.43334961]
[39.01499939 96.33255005]
[50.01044083 86.12960052]
[64.45381927 82.08129120]
[79.15039825 85.08308411]
[90.85062408 94.47256470]
[87.14446259 79.93762970]
[83.43830109 65.40269470]
[79.73213959 50.86775589]
[76.02597809 36.33282089]
[58.25086975 27.09744835]
[52.97771454 8.08663845]
[63.13935089 -8.46968269]
[58.53378677 -22.74514389]
[53.92822266 -37.02060318]
[49.32265472 -51.29606628]
[44.71709061 -65.57152557]
[40.11152649 -79.84698486]
[24.99691391 -79.92395782]
[10.66553116 -84.66252136]
[-1.48305655 -93.58665466]
[-10.26654911 -105.81225586]
[-14.83497238 -120.13468933]
[-14.75291443 -135.14749146]
[-10.04099464 -149.38047791]
[-1.17261291 -161.44372559]
[10.97358322 -170.16329956]
[6.36801910 -184.43875122]
[1.76245451 -198.71421814]
[-2.84310985 -212.98966980]
[-7.44867420 -227.26513672]
[-12.05423927 -241.54060364]
[-16.65980339 -255.81605530]
[-31.54436302 -253.68113708]
[-46.57561874 -254.09259033]
[-61.32109833 -257.03860474]
[-75.35653687 -262.43438721]
[-88.27810669 -270.12469482]
[-99.71404266 -279.88827515]
[-109.33528900 -291.44421387]
[-116.86503601 -304.45999146]
[-122.08663940 -318.56115723]
[-124.84985352 -333.34197998]
[-125.07518768 -348.37719727]
[-122.75614166 -363.23416138]
[-117.95945740 -377.48547363]
[-110.82313538 -390.72106934]
[-101.55250549 -402.56011963]
[-90.41429138 -412.66201782]
[-77.72898102 -420.73611450]
[-63.86153793 -426.55007935]
[-49.21096420 -429.93661499]
[-34.19878769 -430.79833984]
[-19.25693703 -429.11041260]
[-4.81531668 -424.92141724]
[8.71055698 -418.35189819]
[20.93151665 -409.59085083]
[31.49594498 -398.89031982]
[40.09987640 -386.55825806]
[46.49576569 -372.94940186]
[50.49958420 -358.45535278]
[51.99613571 -343.49313354]
[50.94236374 -328.49319458]
[47.36858368 -313.88717651]
[41.37762451 -300.09527588]
[33.14185715 -287.51434326]
[22.89823723 -276.50631714]
[10.94149780 -267.38796997]
[-2.38434267 -260.42163086]
[2.22122192 -246.14616394]
[6.82678604 -231.87069702]
[11.43235111 -217.59524536]
[16.03791428 -203.31977844]
[20.64348030 -189.04431152]
[25.24904442 -174.76885986]
[40.20098114 -174.79171753]
[54.44721222 -170.18572998]
[66.58867645 -161.38999939]
[75.42895508 -149.25573730]
[80.09210968 -134.96386719]
[80.10950470 -119.91013336]
[75.46685028 -105.56878662]
[66.60684204 -93.34819794]
[54.38698959 -84.45255280]
[58.99255371 -70.17709351]
[63.59811783 -55.90163040]
[68.20368195 -41.62616730]
[72.80924988 -27.35070801]
[77.41481018 -13.07524776]
[87.58095551 -10.99943829]
[96.01353455 -4.81550837]
[101.12776947 4.39844990]
[101.92755890 14.98754883]
[98.19879150 25.01722145]
[90.56092072 32.62665939]
[94.26708221 47.16159439]
[97.97323608 61.69652939]
[101.67939758 76.23146820]
[105.38555908 90.76640320]
[110.72707367 104.78311920]
[117.63407135 118.09827423]
[118.62467194 103.13101959]
[123.38555908 88.90660095]
[131.60427856 76.35859680]
[142.74143982 66.31052399]
[156.06608582 59.42185211]
[170.70372009 56.14469528]
[185.69364929 56.69412994]
[200.05209351 61.03409576]
[212.83666992 68.87976837]
[223.20832825 79.71620941]
[230.48637390 92.83223724]
[234.19314575 107.36701965]
[234.08534241 122.36663055]
[230.17005920 136.84663391]
[222.70425415 149.85670471]
[212.17791748 160.54295349]
[199.28189087 168.20407104]
[184.86256409 172.33721924]
[169.86628723 172.67115784]
[155.27726746 169.18395996]
[142.05299377 162.10449219]
[131.06141663 151.89738464]
[123.02183533 139.22814941]
[123.33388519 154.22489929]
[123.64594269 169.22166443]
[123.95800018 184.21841431]
[124.27005768 199.21516418]
[124.58211517 214.21191406]
[124.89417267 229.20867920]
[125.20622253 244.20542908]
[125.51828003 259.20217896]
[128.10928345 278.40991211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 118]
[11 117]
[23 116]
[24 115]
[25 114]
[26 113]
[27 112]
[30 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
