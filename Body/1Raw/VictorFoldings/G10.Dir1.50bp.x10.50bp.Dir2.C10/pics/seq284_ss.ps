%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCxxxxxxxxxxCCUCAUCACCCAACUAAAAAUAUUAAACACAAACUACCACCUACCUCCCUCACCAAAGCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-23.41418076 279.58142090]
[-32.33033371 291.64385986]
[-41.24648285 303.70629883]
[-50.16263199 315.76870728]
[-59.07878494 327.83114624]
[-67.87062836 339.98449707]
[-76.53723145 352.22744751]
[-85.20384216 364.47039795]
[-93.87045288 376.71334839]
[-102.53705597 388.95629883]
[-96.66797638 403.22366333]
[-99.46658325 418.39505005]
[-110.03985596 429.62936401]
[-125.01389313 433.34173584]
[-139.61053467 428.34759521]
[-149.17205811 416.24053955]
[-150.64739990 400.88388062]
[-143.56579590 387.17788696]
[-130.18695068 379.49606323]
[-114.78001404 380.28970337]
[-106.11340332 368.04675293]
[-97.44679260 355.80377197]
[-88.78018951 343.56082153]
[-80.11357880 331.31787109]
[-78.80786133 323.99618530]
[-71.14121246 318.91500854]
[-62.22506332 306.85256958]
[-53.30891418 294.79013062]
[-44.39276505 282.72769165]
[-35.47661209 270.66528320]
[-64.32212830 243.10411072]
[-87.65910339 210.74569702]
[-104.70521545 174.67477417]
[-114.88903809 136.10055542]
[-117.86917877 96.31613159]
[-132.84941101 95.54647064]
[-147.82965088 94.77681732]
[-162.17965698 102.71466064]
[-176.08757019 94.02546692]
[-175.24610901 77.64791870]
[-160.52091980 70.42984009]
[-147.05999756 79.79656982]
[-132.07975769 80.56623077]
[-117.09951782 81.33589172]
[-115.96745300 71.04125977]
[-114.34750366 60.81204987]
[-112.24333954 50.67136383]
[-109.65969849 40.64211655]
[-106.60243225 30.74695969]
[-103.07843781 21.00824928]
[-99.09568024 11.44798565]
[-94.66315460 2.08776546]
[-89.79087067 -7.05126572]
[-84.48984528 -15.94846249]
[-78.77204132 -24.58372688]
[-72.65039062 -32.93754959]
[-66.13871002 -40.99105835]
[-59.25170898 -48.72606277]
[-52.00495529 -56.12508392]
[-44.41481400 -63.17141342]
[-36.49843216 -69.84912872]
[-28.27369118 -76.14315033]
[-19.75917435 -82.03925323]
[-10.97411537 -87.52411652]
[-1.93836057 -92.58535767]
[7.32767820 -97.21153259]
[16.80306816 -101.39220428]
[26.46640587 -105.11791229]
[36.29585648 -108.38025665]
[46.26922226 -111.17185211]
[56.36396790 -113.48640442]
[66.55728912 -115.31867981]
[76.82615662 -116.66453552]
[87.14737701 -117.52093506]
[97.49763489 -117.88594818]
[107.85353851 -117.75874329]
[118.19170380 -117.13961029]
[128.48876953 -116.02994537]
[138.72148132 -114.43225861]
[148.86672974 -112.35015869]
[158.90158081 -109.78835297]
[168.80335999 -106.75262451]
[178.54971313 -103.24982452]
[188.11862183 -99.28787231]
[197.48846436 -94.87572479]
[206.63807678 -90.02333832]
[215.54678345 -84.74168396]
[224.19445801 -79.04268646]
[232.56158447 -72.93922424]
[240.62924194 -66.44507599]
[248.37921143 -59.57492447]
[255.79399109 -52.34428787]
[262.85681152 -44.76949310]
[269.55172729 -36.86766052]
[275.86364746 -28.65663338]
[281.77825928 -20.15496635]
[287.28222656 -11.38186169]
[292.36309814 -2.35714006]
[297.00942993 6.89881134]
[301.21069336 16.36508369]
[304.95742798 26.02029037]
[308.24114990 35.84262085]
[311.05444336 45.80988693]
[313.39096069 55.89957428]
[315.24539185 66.08888245]
[316.61361694 76.35479736]
[317.49246216 86.67413330]
[317.87997437 97.02356720]
[317.77532959 107.37973022]
[317.17868042 117.71921539]
[316.09143066 128.01867676]
[314.51599121 138.25483704]
[312.45599365 148.40458679]
[309.91601562 158.44497681]
[306.90182495 168.35334778]
[303.42025757 178.10729980]
[299.47912598 187.68481445]
[295.08737183 197.06422424]
[290.25491333 206.22438049]
[284.99264526 215.14454651]
[279.31246948 223.80461121]
[273.22723389 232.18499756]
[266.75067139 240.26676941]
[259.89739990 248.03166199]
[252.68289185 255.46215820]
[245.12348938 262.54144287]
[237.23623657 269.25354004]
[229.03897095 275.58328247]
[220.55018616 281.51638794]
[211.78907776 287.03942871]
[202.77543640 292.13995361]
[193.52961731 296.80639648]
[184.07250977 301.02825928]
[174.42547607 304.79598999]
[164.61030579 308.10107422]
[154.64918518 310.93603516]
[144.56460571 313.29449463]
[134.37936401 315.17111206]
[124.11644745 316.56164551]
[113.79904938 317.46295166]
[103.45047760 317.87298584]
[93.09411621 317.79086304]
[82.75335693 317.21670532]
[72.45155334 316.15188599]
[62.21198654 314.59872437]
[52.05778122 312.56079102]
[42.01188278 310.04266357]
[32.09698105 307.05004883]
[22.33547783 303.58972168]
[12.74942017 299.66943359]
[3.36046767 295.29809570]
[-5.81017160 290.48556519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[35 44]
[36 43]
[37 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
