%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCACxxxxxxxxxxUGCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACAAACCUACCCACCCUUAACAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-39.35049820 239.92437744]
[-50.33130264 250.14308167]
[-61.31210327 260.36178589]
[-72.29290771 270.58050537]
[-83.27371216 280.79919434]
[-94.25450897 291.01791382]
[-104.69651794 301.78659058]
[-114.57222748 313.07687378]
[-124.44793701 324.36715698]
[-134.32363892 335.65744019]
[-137.64703369 344.23361206]
[-144.51988220 347.07546997]
[-154.62532043 358.16058350]
[-164.73075867 369.24572754]
[-174.83618164 380.33087158]
[-184.94161987 391.41598511]
[-191.14407349 407.19464111]
[-208.02310181 405.60253906]
[-211.16580200 388.94241333]
[-196.02674866 381.31054688]
[-185.92132568 370.22543335]
[-175.81588745 359.14028931]
[-165.71044922 348.05514526]
[-155.60501099 336.97003174]
[-145.61392212 325.78173828]
[-135.73822021 314.49145508]
[-125.86251068 303.20117188]
[-115.98680115 291.91088867]
[-130.85652161 289.93820190]
[-138.76492310 277.19232178]
[-133.92938232 262.99313354]
[-119.88562775 257.72308350]
[-106.90253448 265.23571777]
[-104.47322083 280.03710938]
[-93.49241638 269.81838989]
[-82.51161194 259.59970093]
[-71.53081512 249.38099670]
[-60.55001068 239.16227722]
[-49.56920624 228.94357300]
[-63.20455170 211.18302917]
[-74.74169922 191.99310303]
[-84.03233337 171.62048340]
[-90.95700073 150.32708740]
[-95.42668152 128.38668823]
[-97.38391876 106.08133698]
[-96.80353546 83.69779968]
[-93.69300079 61.52384949]
[-88.09230804 39.84455872]
[-80.07345581 18.93863869]
[-69.73953247 -0.92513645]
[-57.22340775 -19.49139595]
[-68.81245422 -29.01473236]
[-80.40150452 -38.53807068]
[-96.47762299 -43.92274094]
[-95.75370026 -60.86122894]
[-79.27677155 -64.85463715]
[-70.87816620 -50.12711716]
[-59.28911591 -40.60378265]
[-47.70006943 -31.08044434]
[-40.95799637 -38.30486679]
[-33.86296844 -45.18298340]
[-26.43275642 -51.69756317]
[-18.68596268 -57.83230209]
[-10.64198208 -63.57183456]
[-2.32095909 -68.90178680]
[6.25627136 -73.80882263]
[15.06823254 -78.28064728]
[24.09285927 -82.30606079]
[33.30755234 -85.87498474]
[42.68924332 -88.97849274]
[52.21443558 -91.60880280]
[61.85928345 -93.75933075]
[71.59963226 -95.42469788]
[81.41109467 -96.60072327]
[91.26910400 -97.28447723]
[101.14897156 -97.47423553]
[111.02597046 -97.16952515]
[120.87535095 -96.37110901]
[130.67247009 -95.08099365]
[140.39277649 -93.30239868]
[150.01194763 -91.03977966]
[159.50588989 -88.29881287]
[168.85083008 -85.08634949]
[178.02337646 -81.41043854]
[187.00054932 -77.28028107]
[195.75987244 -72.70622253]
[204.27941895 -67.69971466]
[212.53785706 -62.27329636]
[220.51451111 -56.44055176]
[228.18939209 -50.21608353]
[235.54330444 -43.61548233]
[242.55781555 -36.65527344]
[249.21536255 -29.35288620]
[255.49928284 -21.72660446]
[261.39382935 -13.79552460]
[266.88427734 -5.57950544]
[271.95684814 2.90088081]
[276.59881592 11.62439919]
[280.79861450 20.56920624]
[284.54571533 29.71290398]
[287.83068848 39.03260040]
[290.64535522 48.50495148]
[292.98266602 58.10624695]
[294.83673096 67.81244659]
[296.20294189 77.59923553]
[297.07788086 87.44211578]
[297.45935059 97.31644440]
[297.34637451 107.19749451]
[296.73925781 117.06051636]
[295.63949585 126.88082123]
[310.41162109 129.48554993]
[325.18374634 132.09027100]
[339.95584106 134.69499207]
[349.26339722 122.54476166]
[363.15618896 116.12223053]
[378.44177246 116.90325165]
[391.60760498 124.70833588]
[399.62829590 137.74395752]
[400.66073608 153.01460266]
[394.46768188 167.01119995]
[382.47225952 176.51742554]
[367.43090820 179.34883118]
[352.80007935 174.85478210]
[341.94174194 164.06796265]
[337.35113525 149.46710205]
[322.57901001 146.86238098]
[307.80688477 144.25765991]
[293.03479004 141.65293884]
[288.95321655 157.39401245]
[283.59039307 172.74588013]
[276.98263550 187.60447693]
[269.17474365 201.86901855]
[260.21969604 215.44279480]
[250.17820740 228.23376465]
[239.11836243 240.15518188]
[227.11515808 251.12620544]
[214.25000000 261.07244873]
[200.61010742 269.92645264]
[186.28797913 277.62820435]
[171.38073730 284.12545776]
[155.98945618 289.37417603]
[140.21852112 293.33871460]
[124.17485809 295.99227905]
[107.96727753 297.31680298]
[91.70565796 297.30331421]
[75.50028992 295.95193481]
[59.46105194 293.27178955]
[43.69670868 289.28109741]
[28.31415558 284.00689697]
[13.41770267 277.48492432]
[-0.89163882 269.75946045]
[-14.51683712 260.88284302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 28]
[8 27]
[9 26]
[10 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[51 59]
[52 58]
[53 57]
[110 128]
[111 127]
[112 126]
[113 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
