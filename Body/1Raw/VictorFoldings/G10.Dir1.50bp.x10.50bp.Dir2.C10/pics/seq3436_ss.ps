%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAxxxxxxxxxxUCCGUGAAAUCAAUAUCCCGCACAAGAGUGCUACUCUCCUCGCUCCGGGCCCAUAACACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-30.40706825 188.99836731]
[-43.18442535 196.85578918]
[-50.88672256 210.67552185]
[-65.78113556 210.75161743]
[-78.55849457 218.60903931]
[-91.33585358 226.46646118]
[-103.68742371 234.97755432]
[-115.57980347 244.11929321]
[-127.47218323 253.26103210]
[-139.36456299 262.40277100]
[-151.25694275 271.54449463]
[-136.33038330 273.02694702]
[-125.01983643 282.87945557]
[-121.50433350 297.46166992]
[-127.08278656 311.38580322]
[-139.69406128 319.50711060]
[-154.67854309 318.82495117]
[-166.49975586 309.59140015]
[-170.79002380 295.21804810]
[-165.96467590 281.01623535]
[-179.20726013 288.06137085]
[-192.44984436 295.10650635]
[-205.69242859 302.15164185]
[-211.73568726 317.01296997]
[-227.16281128 321.41564941]
[-240.13941956 311.98233032]
[-240.71096802 295.94946289]
[-228.43902588 285.61608887]
[-212.73756409 288.90905762]
[-199.49497986 281.86392212]
[-186.25239563 274.81878662]
[-173.00981140 267.77365112]
[-160.39868164 259.65209961]
[-148.50630188 250.51037598]
[-136.61392212 241.36865234]
[-124.72153473 232.22691345]
[-112.82915497 223.08517456]
[-127.02075195 218.22732544]
[-132.27131653 204.17628479]
[-124.74310303 191.20223999]
[-109.93863678 188.78814697]
[-98.67877960 198.69853210]
[-99.19327545 213.68910217]
[-86.41591644 205.83168030]
[-73.63855743 197.97425842]
[-66.85018158 184.71653748]
[-51.04185104 184.07843018]
[-38.26449585 176.22100830]
[-42.78817749 167.36651611]
[-46.74552917 158.24484253]
[-50.12084961 148.89215088]
[-52.90075302 139.34553528]
[-55.07421494 129.64288330]
[-56.63261032 119.82264709]
[-57.56976318 109.92378998]
[-57.88195419 99.98557281]
[-57.56794739 90.04741669]
[-56.62898636 80.14872742]
[-55.06879425 70.32878113]
[-52.89355850 60.62651443]
[-50.11191177 51.08041382]
[-46.73488235 41.72834015]
[-42.77586365 32.60738373]
[-38.25056076 23.75372887]
[-33.17692184 15.20248318]
[-27.57507133 6.98756552]
[-21.46722603 -0.85844094]
[-14.87760925 -8.30441761]
[-7.83235931 -15.32083130]
[-0.35941944 -21.87985420]
[7.51157093 -27.95547104]
[15.74939442 -33.52358246]
[24.32137680 -38.56210709]
[33.19351959 -43.05105972]
[42.33063126 -46.97263718]
[51.69647598 -50.31128311]
[61.25390625 -53.05375671]
[70.96501160 -55.18917847]
[80.79127502 -56.70908356]
[90.69373322 -57.60744095]
[100.63309479 -57.88068771]
[110.56994629 -57.52773666]
[120.46487427 -56.54999542]
[130.27864075 -54.95133591]
[139.97230530 -52.73809814]
[149.50743103 -49.91906357]
[158.84620667 -46.50541687]
[167.95156860 -42.51068878]
[176.78742981 -37.95072556]
[185.31872559 -32.84362030]
[193.51162720 -27.20961952]
[201.33363342 -21.07107544]
[208.75373840 -14.45233250]
[215.74249268 -7.37964249]
[222.27218628 0.11894175]
[228.31690979 8.01367950]
[233.85269165 16.27325821]
[238.85758972 24.86491776]
[243.31175232 33.75458145]
[247.19749451 42.90699387]
[261.42425537 38.15317917]
[275.65103149 33.39936447]
[289.87783813 28.64554787]
[300.33816528 16.01569748]
[316.45864868 19.02609062]
[321.65588379 34.57989502]
[310.58340454 46.67668915]
[294.63165283 42.87232590]
[280.40484619 47.62614059]
[266.17807007 52.37995529]
[251.95130920 57.13377380]
[254.60235596 67.98710632]
[256.47921753 79.00074768]
[257.57247925 90.11954498]
[257.87670898 101.28781891]
[257.39035034 112.44964600]
[256.11581421 123.54912567]
[254.05953979 134.53068542]
[251.23179626 145.33932495]
[247.64674377 155.92092896]
[243.32234192 166.22250366]
[238.28022766 176.19245911]
[232.54566956 185.78086853]
[226.14736938 194.93972778]
[219.11738586 203.62316895]
[211.49090576 211.78770447]
[203.30612183 219.39245605]
[212.57106018 231.18910217]
[221.83601379 242.98573303]
[236.87579346 240.14607239]
[251.50910950 244.63209534]
[262.37335205 255.41296387]
[266.97198486 270.01129150]
[264.24829102 285.07247925]
[254.82812500 297.13562012]
[240.87619019 303.42868042]
[225.59855652 302.50552368]
[212.50587463 294.57830811]
[204.60678101 281.46865845]
[203.71641541 266.18908691]
[210.03936768 252.25068665]
[200.77442932 240.45404053]
[191.50947571 228.65740967]
[167.47082520 242.73892212]
[141.33132935 252.37596130]
[113.90488434 257.26846313]
[86.04549408 257.26406860]
[58.62060165 252.36291504]
[32.48414230 242.71762085]
[8.44993496 228.62852478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[4 45]
[5 44]
[6 43]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[20 32]
[21 31]
[22 30]
[23 29]
[100 111]
[101 110]
[102 109]
[103 108]
[127 143]
[128 142]
[129 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
