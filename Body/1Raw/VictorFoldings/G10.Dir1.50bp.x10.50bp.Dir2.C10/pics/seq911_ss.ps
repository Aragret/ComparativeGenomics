%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAUAAACAAAUAGGUUUGGUCCUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACACAUGxxxxxxxxxxAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCAUAAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 277.27313232]
[92.50000000 262.27313232]
[92.50000000 247.27311707]
[92.50000000 232.27311707]
[92.50000000 217.27311707]
[92.50000000 202.27311707]
[92.50000000 187.27311707]
[92.50000000 172.27311707]
[92.50000000 157.27311707]
[92.50000000 142.27311707]
[84.61367035 140.08151245]
[77.28659058 136.43305969]
[70.78507996 131.46037292]
[58.81481934 140.49989319]
[46.84456253 149.53941345]
[41.84236145 157.25782776]
[34.53445435 158.63864136]
[22.38112068 167.43048096]
[15.73492336 181.78800964]
[0.88799661 182.97882080]
[-3.06369281 198.52757263]
[-17.74276543 205.00093079]
[-31.88869476 197.43309021]
[-34.64993286 181.62945557]
[-23.90829468 169.71321106]
[-7.90384579 170.82548523]
[-2.12693596 157.09681702]
[13.58927822 155.27714539]
[25.74261093 146.48530579]
[37.80504227 137.56915283]
[49.77530289 128.52963257]
[61.74555969 119.49011993]
[59.83024979 115.15447235]
[58.40453720 110.63411713]
[57.48580551 105.98415375]
[57.08524323 101.26124573]
[57.20774460 96.52297211]
[42.69911957 92.71511841]
[28.19049263 88.90725708]
[17.44318199 99.87953186]
[2.64529419 103.99269104]
[-12.22261524 100.14031219]
[-23.16115189 89.35866547]
[-27.22790718 74.54795074]
[-23.32893944 59.69219208]
[-12.51305676 48.78750610]
[2.31032658 44.76719666]
[17.15379333 48.71270752]
[28.02452660 59.56271744]
[31.99835205 74.39862823]
[46.50697708 78.20648956]
[61.01560211 82.01435089]
[85.31594849 59.65591049]
[118.30282593 61.16350555]
[126.96943665 48.92055130]
[135.63604736 36.67759705]
[144.30264282 24.43464279]
[152.96925354 12.19168854]
[161.63586426 -0.05126471]
[162.88064575 -18.39468765]
[179.04617310 -25.15638733]
[187.45957947 -37.57470322]
[195.87298584 -49.99301529]
[204.28639221 -62.41133118]
[192.89491272 -72.19559479]
[182.69302368 -83.21463776]
[173.81373596 -95.32479858]
[166.37281799 -108.36820221]
[160.46726990 -122.17480469]
[156.17407227 -136.56460571]
[153.54920959 -151.34999084]
[152.62690735 -166.33822632]
[153.41917419 -181.33389282]
[155.91569519 -196.14151001]
[160.08390808 -210.56799316]
[165.86947632 -224.42530823]
[173.19699097 -237.53276062]
[181.97090149 -249.71948242]
[192.07682800 -260.82659912]
[203.38301086 -270.70932007]
[215.74206543 -279.23873901]
[228.99287415 -286.30374146]
[242.96264648 -291.81216431]
[257.46929932 -295.69223022]
[272.32369995 -297.89334106]
[287.33218384 -298.38677979]
[302.29907227 -297.16613770]
[317.02923584 -294.24731445]
[331.33068848 -289.66836548]
[345.01690674 -283.48901367]
[357.90954590 -275.78979492]
[369.84045410 -266.67108154]
[380.65411377 -256.25173950]
[390.20956421 -244.66763306]
[398.38220215 -232.06979370]
[405.06549072 -218.62243652]
[410.17230225 -204.50088501]
[413.63604736 -189.88923645]
[415.41159058 -174.97799683]
[415.47576904 -159.96154785]
[413.82775879 -145.03567505]
[410.48901367 -130.39495850]
[405.50308228 -116.23026276]
[398.93499756 -102.72627258]
[390.87033081 -90.05902863]
[381.41424561 -78.39368439]
[370.69003296 -67.88230133]
[358.83749390 -58.66193771]
[346.01116943 -50.85279083]
[332.37823486 -44.55666733]
[318.11645508 -39.85565567]
[303.41177368 -36.81103897]
[288.45587158 -35.46250916]
[273.44372559 -35.82765198]
[258.57104492 -37.90170288]
[244.03176880 -41.65762329]
[230.01541138 -47.04644775]
[216.70471191 -53.99792099]
[208.29130554 -41.57960510]
[199.87788391 -29.16129112]
[191.46447754 -16.74297714]
[193.43511963 -4.76888943]
[186.47482300 5.65827131]
[173.87881470 8.61534309]
[165.21220398 20.85829735]
[156.54560852 33.10124969]
[147.87899780 45.34420395]
[139.21238708 57.58715820]
[130.54577637 69.83010864]
[134.84512329 74.91844177]
[138.30558777 80.61060333]
[140.84387207 86.76954651]
[142.39886475 93.24700165]
[142.93313599 99.88703918]
[142.43382263 106.52978516]
[140.91293335 113.01534271]
[138.40708923 119.18755341]
[134.97662354 124.89784241]
[130.70411682 130.00872803]
[125.69243622 134.39717102]
[120.06221771 137.95753479]
[113.94901276 140.60408020]
[107.50000000 142.27311707]
[107.50000000 157.27311707]
[107.50000000 172.27311707]
[107.50000000 187.27311707]
[107.50000000 202.27311707]
[107.50000000 217.27311707]
[107.50000000 232.27311707]
[107.50000000 247.27311707]
[107.50000000 262.27313232]
[107.50000000 277.27313232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 32]
[14 31]
[15 30]
[17 29]
[18 28]
[20 26]
[37 52]
[38 51]
[39 50]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[61 121]
[62 120]
[63 119]
[64 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
