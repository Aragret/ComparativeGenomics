%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAACCUCCGAGCAGUACAUGCUAAGACUUCACCAGUCAAAGCGAACUACUAUACUCAAUUxxxxxxxxxxAAACUUUACAGUCAGAGGUUCAAUUCCUCUUCUUAACAACAUACCCAUGGCCAACCUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[168.61074829 353.88894653]
[168.61074829 338.88894653]
[168.61074829 323.88894653]
[168.61074829 308.88894653]
[168.61074829 293.88894653]
[168.61074829 278.88894653]
[168.61074829 263.88894653]
[168.61074829 248.88893127]
[168.61074829 233.88893127]
[168.61074829 218.88893127]
[166.92034912 203.98448181]
[163.56108093 189.36547852]
[160.20182800 174.74647522]
[152.83558655 161.67977905]
[142.06690979 151.23776245]
[131.29823303 140.79576111]
[120.52954865 130.35374451]
[109.76087189 119.91173553]
[101.09194946 122.14857483]
[92.24504089 120.77528381]
[84.66216278 116.01569366]
[71.23471069 122.70177460]
[57.80726242 129.38784790]
[44.37981033 136.07392883]
[37.93865204 150.76715088]
[22.39860153 154.75292969]
[9.68065548 144.97369385]
[9.54093361 128.93124390]
[22.08662033 118.93197632]
[37.69373703 122.64647675]
[51.12118530 115.96039581]
[64.54863739 109.27432251]
[77.97608185 102.58824921]
[78.15623474 96.17875671]
[80.16268921 90.08874512]
[83.82768250 84.82739258]
[77.00410461 71.46929169]
[70.18053436 58.11119461]
[63.35695648 44.75309372]
[57.34068680 58.49370956]
[43.44073868 64.13210297]
[29.55218315 58.46570969]
[23.56361580 44.71299744]
[28.87649918 30.68540764]
[42.47315598 24.35050774]
[56.63137054 29.30699158]
[51.50106812 15.21160316]
[45.58965302 8.16525936]
[46.41338348 0.77380085]
[41.57356644 -13.42395210]
[36.73374939 -27.62170410]
[31.89393234 -41.81945801]
[17.00585175 -39.66083145]
[1.97463036 -40.27487946]
[-12.68777084 -43.64068222]
[-26.48195648 -49.64360428]
[-38.93810272 -58.07918930]
[-49.63195801 -68.66011810]
[-58.19929123 -81.02601624]
[-64.34830475 -94.75570679]
[-67.86956024 -109.38155365]
[-68.64313507 -124.40541077]
[-66.64267731 -139.31556702]
[-61.93631363 -153.60418701]
[-54.68435287 -166.78462219]
[-45.13378525 -178.40792847]
[-33.60990524 -188.07823181]
[-20.50520897 -195.46617126]
[-6.26603985 -200.32009888]
[8.62262344 -202.47471619]
[23.65367889 -201.85661316]
[38.31517029 -198.48686218]
[52.10773849 -192.48022461]
[64.56160736 -184.04127502]
[75.25260925 -173.45747375]
[83.81661224 -161.08926392]
[89.96192169 -147.35791016]
[93.47924042 -132.73112488]
[94.24876404 -117.70706177]
[92.24428558 -102.79743958]
[87.53407288 -88.51008606]
[80.27855682 -75.33161163]
[70.72486115 -63.71087646]
[59.19837189 -54.04367828]
[46.09168625 -46.65927124]
[50.93150330 -32.46152115]
[55.77131653 -18.26376724]
[60.61113358 -4.06601572]
[65.59645844 10.08130074]
[70.72676086 24.17669106]
[76.71505737 37.92951965]
[83.53862762 51.28762054]
[90.36220551 64.64572144]
[97.18578339 78.00381470]
[117.83267975 86.81867218]
[120.20288086 109.14305878]
[130.97155762 119.58506775]
[141.74023438 130.02706909]
[152.50891113 140.46908569]
[163.27758789 150.91110229]
[159.57936096 136.37414551]
[158.92570496 121.38838959]
[161.34413147 106.58463287]
[166.73284912 92.58599854]
[174.86502075 79.98171997]
[185.39834595 69.30235291]
[197.88946533 60.99740982]
[211.81257629 55.41647339]
[226.58163452 52.79445648]
[241.57496643 53.24172592]
[256.16146851 56.73945999]
[269.72714233 63.14042282]
[281.70098877 72.17518616]
[291.57901001 83.46344757]
[298.94537354 96.53006744]
[303.49005127 110.82502747]
[305.02172852 125.74662018]
[303.47595215 140.66676331]
[298.91775513 154.95741272]
[291.53903198 168.01705933]
[281.65036011 179.29597473]
[269.66796875 188.31941223]
[256.09625244 194.70755005]
[241.50643921 198.19148254]
[226.51269531 198.62457275]
[211.74612427 195.98860168]
[197.82829285 190.39450073]
[185.34503174 182.07774353]
[174.82083130 171.38720703]
[178.18009949 186.00621033]
[181.53935242 200.62522888]
[187.61279297 186.90979004]
[199.28517151 177.48876953]
[213.97351074 174.44694519]
[228.42744446 178.45744324]
[239.44844055 188.63278198]
[244.59770203 202.72126770]
[242.73573303 217.60525513]
[234.27456665 229.99107361]
[221.08657837 237.13789368]
[206.09011841 237.46417236]
[192.60377502 230.89772034]
[183.61074829 218.88893127]
[183.61074829 233.88893127]
[183.61074829 248.88893127]
[183.61074829 263.88894653]
[183.61074829 278.88894653]
[183.61074829 293.88894653]
[183.61074829 308.88894653]
[183.61074829 323.88894653]
[183.61074829 338.88894653]
[183.61074829 353.88894653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 131]
[12 130]
[13 129]
[14 100]
[15 99]
[16 98]
[17 97]
[18 96]
[21 33]
[22 32]
[23 31]
[24 30]
[36 94]
[37 93]
[38 92]
[39 91]
[46 90]
[47 89]
[49 88]
[50 87]
[51 86]
[52 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
