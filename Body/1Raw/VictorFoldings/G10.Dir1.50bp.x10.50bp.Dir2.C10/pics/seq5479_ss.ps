%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAxxxxxxxxxxUGACGUUGACAAUCGAGUAGUACUCCCGAUUGAAGCCCCCAUUCGUAUAAUAAUUACAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-26.73864937 179.43949890]
[-39.83180237 186.75860596]
[-52.92495728 194.07769775]
[-66.01811218 201.39680481]
[-79.11126709 208.71591187]
[-87.38177490 222.20329285]
[-102.26646423 221.65972900]
[-115.35961914 228.97883606]
[-128.45277405 236.29794312]
[-113.49895477 237.47407532]
[-100.08533478 244.18786621]
[-90.18151093 255.45347595]
[-85.24169922 269.61676025]
[-85.99124146 284.59802246]
[-92.32007599 298.19750977]
[-103.29891205 308.41830444]
[-117.31566620 313.75970459]
[-132.31221008 313.43737793]
[-146.08650208 307.49862671]
[-156.61602783 296.81552124]
[-162.35466003 282.95663452]
[-162.45979309 267.95700073]
[-156.91596985 254.01907349]
[-146.53776550 243.18980408]
[-161.18125916 246.44062805]
[-175.82476807 249.69145203]
[-190.46826172 252.94227600]
[-205.11177063 256.19311523]
[-219.75526428 259.44393921]
[-228.03056335 272.90850830]
[-243.42216492 276.49658203]
[-256.79852295 268.07937622]
[-260.22363281 252.65071106]
[-251.66549683 239.36410522]
[-236.20147705 236.10227966]
[-223.00610352 244.80043030]
[-208.36259460 241.54960632]
[-193.71910095 238.29876709]
[-179.07559204 235.04794312]
[-164.43209839 231.79711914]
[-149.78858948 228.54629517]
[-135.77188110 223.20478821]
[-122.67871857 215.88568115]
[-109.58557129 208.56657410]
[-102.25156403 195.60270691]
[-86.43037415 195.62275696]
[-73.33721924 188.30364990]
[-60.24406433 180.98455811]
[-47.15090942 173.66545105]
[-34.05775452 166.34634399]
[-43.87292099 140.91333008]
[-48.90905762 114.12130737]
[-48.99887466 86.86020660]
[-44.13938904 60.03557968]
[-34.49202347 34.53844833]
[-20.37722778 11.21575832]
[-2.26385808 -9.15778351]
[19.24641418 -25.90542793]
[11.79150295 -38.92173767]
[4.33659267 -51.93804550]
[-10.70604610 -57.51465607]
[-15.58795357 -72.79688263]
[-6.56414700 -86.06151581]
[9.44308090 -87.13306427]
[20.15435410 -75.18952179]
[17.35290146 -59.39295578]
[24.80781174 -46.37664795]
[32.26272202 -33.36033630]
[41.38615799 -37.61444855]
[50.77507019 -41.24526596]
[60.38693619 -44.23634720]
[70.17821503 -46.57414246]
[80.10456848 -48.24806976]
[90.12103271 -49.25054169]
[100.18224335 -49.57702255]
[110.24263000 -49.22602844]
[120.25662231 -48.19915009]
[130.17886353 -46.50104141]
[139.96441650 -44.13938904]
[149.56896973 -41.12489319]
[158.94900513 -37.47121048]
[168.06204224 -33.19488144]
[176.86682129 -28.31527901]
[185.32344055 -22.85450363]
[193.39361572 -16.83728981]
[201.04077148 -10.29088974]
[208.23030090 -3.24495316]
[214.92962646 4.26860619]
[221.10839844 12.21575737]
[226.73864746 20.56050682]
[239.83180237 13.24140072]
[252.92495728 5.92229509]
[266.01812744 -1.39681065]
[279.11126709 -8.71591663]
[292.20440674 -16.03502274]
[305.14248657 -23.62492943]
[317.91983032 -31.48235512]
[330.69720459 -39.33978271]
[341.02209473 -52.78718567]
[356.80218506 -46.58839035]
[355.21401978 -29.70899582]
[338.55462646 -26.56242371]
[325.77725220 -18.70499802]
[312.99990845 -10.84757328]
[311.03131104 -6.43166876]
[306.23327637 -3.23634577]
[299.52352905 -2.94186759]
[286.43035889 4.37723827]
[273.33721924 11.69634342]
[260.24404907 19.01544952]
[247.15090942 26.33455467]
[234.05775452 33.65365982]
[238.71002197 44.02815628]
[242.56082153 54.72606277]
[245.58790588 65.68556213]
[247.77377319 76.84333038]
[249.10578918 88.13489532]
[249.57627869 99.49502563]
[249.18251038 110.85806274]
[247.92675781 122.15837097]
[245.81628418 133.33064270]
[242.86326599 144.31033325]
[239.08479309 155.03399658]
[234.50267029 165.43966675]
[229.14340210 175.46722412]
[223.03791809 185.05873108]
[216.22152710 194.15876770]
[208.73361206 202.71475220]
[200.61741638 210.67724609]
[191.91986084 218.00024414]
[182.69119263 224.64143372]
[172.98472595 230.56243896]
[162.85655212 235.72904968]
[152.36518860 240.11140442]
[141.57125854 243.68420410]
[130.53712463 246.42678833]
[119.32654572 248.32330322]
[108.00430298 249.36280823]
[96.63580322 249.53929138]
[85.28675079 248.85173035]
[74.02270508 247.30410767]
[62.90876389 244.90534973]
[52.00913239 241.66931152]
[41.38679504 237.61471558]
[31.10312653 232.76498413]
[21.21754837 227.14811707]
[11.78717613 220.79658508]
[2.86650085 213.74710083]
[-5.49293327 206.04035950]
[-13.24282551 197.72093201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[5 46]
[7 44]
[8 43]
[9 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[58 68]
[59 67]
[60 66]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[96 104]
[97 103]
[98 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
