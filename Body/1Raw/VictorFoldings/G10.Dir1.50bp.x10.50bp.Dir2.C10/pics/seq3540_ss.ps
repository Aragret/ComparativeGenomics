%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACxxxxxxxxxxCCCUAGCAGAAAAUAGCCCACUAAUCCAAACUCUAACACUAUGCUUAGGCGCUAUCACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[4.37318373 164.79325867]
[-8.56487179 172.38316345]
[-21.50292778 179.97306824]
[-34.44098282 187.56297302]
[-47.37903976 195.15289307]
[-60.31709671 202.74279785]
[-73.25514984 210.33270264]
[-86.19320679 217.92260742]
[-99.13126373 225.51252747]
[-112.06932068 233.10243225]
[-125.00737762 240.69233704]
[-132.99551392 254.34884644]
[-147.88827515 254.11506653]
[-160.82633972 261.70495605]
[-156.97227478 276.30114746]
[-157.20028687 291.39587402]
[-161.49346924 305.86901855]
[-169.53321838 318.64651489]
[-180.72293091 328.78027344]
[-194.23226929 335.51824951]
[-209.05874634 338.36044312]
[-224.10214233 337.09597778]
[-238.24613953 331.81863403]
[-250.44113159 322.92007446]
[-259.78219604 311.06060791]
[-265.57617188 297.12030029]
[-267.39309692 282.13357544]
[-265.09811401 267.21258545]
[-258.86157227 253.46458435]
[-249.14625549 241.90971375]
[-236.67308044 233.40545654]
[-222.36764526 228.58287048]
[-207.29153442 227.79981995]
[-192.56346130 231.11442566]
[-179.27636719 238.28073120]
[-168.41624451 248.76692200]
[-155.47819519 241.17700195]
[-148.41546631 228.06336975]
[-132.59729004 227.75428772]
[-119.65922546 220.16436768]
[-106.72116852 212.57446289]
[-93.78311920 204.98455811]
[-80.84506226 197.39465332]
[-67.90700531 189.80474854]
[-54.96894836 182.21482849]
[-42.03089142 174.62492371]
[-29.09283638 167.03501892]
[-16.15478134 159.44511414]
[-3.21672440 151.85519409]
[-10.62236118 133.24676514]
[-14.70238113 113.63883209]
[-15.33412647 93.62088776]
[-12.49860764 73.79470825]
[-6.28106594 54.75633621]
[3.13158107 37.07811737]
[15.45636272 21.29150391]
[30.32276154 7.87108755]
[22.07047272 -4.65487432]
[13.81818390 -17.18083572]
[-1.07677984 -24.04174614]
[-2.31289840 -40.39424133]
[11.38144112 -49.41627502]
[25.91867638 -41.82675171]
[26.34414673 -25.43312645]
[34.59643555 -12.90716362]
[42.84872437 -0.38120160]
[53.82249451 -5.87866640]
[65.31763458 -10.18070412]
[77.20436096 -13.23874187]
[89.34845734 -15.01825333]
[101.61281586 -15.49914646]
[113.85896301 -14.67599106]
[125.94863892 -12.55808258]
[137.74534607 -9.16933250]
[149.11587524 -4.54800129]
[159.93186951 1.25373328]
[170.07119751 8.17036629]
[179.41938782 16.12380600]
[187.87088013 25.02425385]
[195.33026123 34.77121735]
[201.71331787 45.25465012]
[206.94798279 56.35618591]
[221.17475891 51.60237122]
[235.40153503 46.84855652]
[249.62832642 42.09474182]
[263.80487061 37.19319153]
[277.92968750 32.14443207]
[292.05447388 27.09567642]
[280.03991699 18.11512375]
[279.35717773 3.13066888]
[290.50527954 -6.90526104]
[305.33587646 -4.65721464]
[313.00897217 8.23166847]
[307.91665649 22.34019279]
[322.48937988 18.78543091]
[337.06207275 15.23066902]
[337.39144897 0.14577807]
[341.61477661 -14.33958817]
[349.44412231 -27.23779297]
[360.34567261 -37.66941452]
[373.57614136 -44.92321014]
[388.23342896 -48.50460052]
[403.31817627 -48.16940308]
[417.80191040 -43.94047165]
[430.69708252 -36.10614014]
[441.12451172 -25.20057106]
[448.37319946 -11.96731853]
[451.94891357 2.69135022]
[451.60791016 17.77598190]
[447.37338257 32.25808334]
[439.53405762 45.15023804]
[428.62448120 55.57343674]
[415.38842773 62.81701279]
[400.72836304 66.38708496]
[385.64385986 66.04023743]
[371.16342163 61.80012512]
[358.27429199 53.95583725]
[347.85528564 43.04221725]
[340.61682129 29.80337143]
[326.04412842 33.35813522]
[311.47143555 36.91289520]
[297.10324097 41.22048187]
[282.97842407 46.26923752]
[268.85363770 51.31799316]
[263.57955933 56.56487656]
[254.38214111 56.32151794]
[240.15536499 61.07533264]
[225.92857361 65.82914734]
[211.70179749 70.58296204]
[214.44989014 84.38346100]
[215.49954224 98.41571045]
[214.83517456 112.47147369]
[212.46664429 126.34215546]
[208.42909241 139.82191467]
[202.78245544 152.71072388]
[195.61051941 164.81729126]
[187.01972961 175.96197510]
[177.13754272 185.97937012]
[166.11064148 194.72084045]
[154.10264587 202.05664062]
[141.29177856 207.87791443]
[127.86812592 212.09826660]
[114.03091431 214.65507507]
[99.98548126 215.51040649]
[85.94026184 214.65155029]
[72.10369110 212.09126282]
[58.68110657 207.86752319]
[45.87169266 202.04302979]
[33.86554718 194.70420837]
[22.84084129 185.95997620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 37]
[14 36]
[57 66]
[58 65]
[59 64]
[82 129]
[83 128]
[84 127]
[85 126]
[86 124]
[87 123]
[88 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
