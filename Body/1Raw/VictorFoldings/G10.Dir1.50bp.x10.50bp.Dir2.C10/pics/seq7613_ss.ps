%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCAxxxxxxxxxxCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUAAUCCUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-23.23178864 121.71251678]
[-38.13368988 123.42520905]
[-50.96017075 132.68760681]
[-64.48764801 126.45409393]
[-79.38954926 128.16677856]
[-94.29145050 129.87947083]
[-107.11793518 139.14186096]
[-120.64541626 132.90835571]
[-135.54731750 134.62104797]
[-150.44921875 136.33374023]
[-163.27569580 145.59613037]
[-176.80317688 139.36262512]
[-191.70507812 141.07531738]
[-204.53155518 150.33770752]
[-218.05903625 144.10420227]
[-205.63563538 152.51008606]
[-199.59295654 166.23910522]
[-201.78544617 181.07800293]
[-211.54023743 192.47291565]
[-225.86372375 196.92687988]
[-240.36019897 193.07304382]
[-250.58088684 182.09408569]
[-253.38919067 167.35931396]
[-247.92326355 153.39064026]
[-235.85978699 144.47459412]
[-250.82003784 143.38328552]
[-265.78030396 142.29197693]
[-280.74053955 141.20066833]
[-295.70077515 140.10935974]
[-310.66104126 139.01805115]
[-325.62127686 137.92674255]
[-331.80566406 151.76614380]
[-342.35266113 162.65359497]
[-355.98870850 169.27435303]
[-371.06713867 170.82896423]
[-385.76718140 167.12968445]
[-398.31372070 158.62321472]
[-407.19171143 146.33676147]
[-411.32910156 131.75396729]
[-410.22625732 116.63578033]
[-404.01638794 102.80779266]
[-393.44934082 91.93980408]
[-379.80111694 85.34417725]
[-364.71984863 83.81735992]
[-350.02667236 87.54372406]
[-337.49581909 96.07330322]
[-328.64047241 108.37609863]
[-324.52996826 122.96648407]
[-309.56973267 124.05780029]
[-294.60946655 125.14910889]
[-279.64923096 126.24041748]
[-264.68896484 127.33173370]
[-249.72872925 128.42303467]
[-234.76847839 129.51435852]
[-219.77172852 129.20230103]
[-208.01112366 120.06240082]
[-193.41777039 126.17340851]
[-178.51586914 124.46071625]
[-166.75526428 115.32083130]
[-152.16191101 121.43183136]
[-137.26000977 119.71914673]
[-122.35810089 118.00645447]
[-110.59750366 108.86656189]
[-96.00414276 114.97756958]
[-81.10224152 113.26487732]
[-66.20034027 111.55219269]
[-54.43973923 102.41230011]
[-39.84637833 108.52330780]
[-24.94447708 106.81061554]
[-24.82794952 91.31149292]
[-22.79615974 75.94568634]
[-18.88028526 60.94894791]
[-13.14040661 46.55137634]
[-5.66459227 32.97388077]
[3.43245506 20.42477608]
[14.01115799 9.09661198]
[25.90920448 -0.83680320]
[38.94404221 -9.22305965]
[52.91567230 -15.93348503]
[67.60972595 -20.86511993]
[82.80075073 -23.94229507]
[98.25566864 -25.11780167]
[113.73734283 -24.37360001]
[129.00825500 -21.72110939]
[143.83407593 -17.20102692]
[157.98735046 -10.88270569]
[171.25090027 -2.86308908]
[180.51585388 -14.65972900]
[189.78080750 -26.45636940]
[191.56752014 -42.75789261]
[206.68531799 -49.11273956]
[219.58232117 -38.98358917]
[216.99118042 -22.79044151]
[201.57745361 -17.19141960]
[192.31250000 -5.39477968]
[183.04754639 6.40186024]
[200.71081543 25.73803520]
[213.96243286 48.32726288]
[222.22190857 73.18002319]
[237.03967285 70.84891510]
[251.85742188 68.51781464]
[266.67517090 66.18670654]
[281.49295044 63.85560608]
[285.84844971 49.22713089]
[296.12603760 37.94289780]
[310.28509521 32.24340057]
[325.51428223 33.26027298]
[338.78988647 40.79162216]
[347.47601318 53.34208679]
[349.84799194 68.41976929]
[345.43490601 83.03097534]
[335.11297607 94.27464294]
[320.93157959 99.91834259]
[305.70651245 98.84150696]
[292.46066284 91.25793457]
[283.82403564 78.67336273]
[269.00628662 81.00446320]
[254.18853760 83.33557129]
[239.37077332 85.66667175]
[224.55300903 87.99777985]
[225.12995911 99.95758057]
[224.56112671 111.91777039]
[222.85173035 123.76883698]
[220.01744080 135.40226746]
[216.08419800 146.71151733]
[211.08801270 157.59306335]
[205.07463074 167.94723511]
[198.09913635 177.67926025]
[190.22537231 186.69999695]
[181.52545166 194.92684937]
[172.07904053 202.28450012]
[161.97262573 208.70556641]
[151.29875183 214.13125610]
[140.15515137 218.51190186]
[128.64387512 221.80737305]
[116.87030792 223.98750305]
[104.94226837 225.03231812]
[92.96897888 224.93226624]
[81.06006622 223.68826294]
[69.32457733 221.31169128]
[57.86997223 217.82431030]
[46.80113983 213.25805664]
[36.21942520 207.65475464]
[26.22172356 201.06568909]
[16.89958382 193.55120850]
[8.33836174 185.18011475]
[0.61644959 176.02905273]
[-6.19544554 166.18182373]
[-12.03494930 155.72860718]
[-16.84859276 144.76509094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[4 66]
[5 65]
[6 64]
[8 62]
[9 61]
[10 60]
[12 58]
[13 57]
[15 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[87 96]
[88 95]
[89 94]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
