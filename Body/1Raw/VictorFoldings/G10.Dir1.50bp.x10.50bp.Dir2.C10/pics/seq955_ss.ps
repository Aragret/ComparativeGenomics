%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACACAUGCAAGCAUCCCCGUUCCAGUGAGUUCxxxxxxxxxxCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACAACAAAUAGCCCUUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.60852051 293.57934570]
[142.68510437 278.60778809]
[141.76168823 263.63626099]
[140.83827209 248.66470337]
[139.91485596 233.69314575]
[138.99145508 218.72160339]
[138.06803894 203.75004578]
[134.26017761 189.24142456]
[127.71230316 175.74604797]
[121.16443634 162.25065613]
[114.61656189 148.75527954]
[99.84444427 146.15055847]
[89.07576752 156.59255981]
[78.30709076 167.03457642]
[82.13109589 181.90980530]
[77.98971558 196.69981384]
[66.99694824 207.42617798]
[52.10980225 211.20353699]
[37.33284378 207.01580811]
[26.64099693 195.98948669]
[22.91031837 181.09056091]
[27.14433861 166.32681274]
[38.20413208 155.66957092]
[53.11466217 151.98561096]
[67.86508179 156.26588440]
[78.63375854 145.82388306]
[89.40243530 135.38186646]
[76.48149109 125.96800232]
[69.35200500 112.59555817]
[68.81171417 98.28313446]
[74.25432587 85.93784332]
[83.92608643 77.76581573]
[78.79578400 63.67042923]
[73.66548157 49.57503891]
[61.67486191 39.25343323]
[64.59255981 24.64739609]
[59.46226120 10.55200672]
[54.33195877 -3.54338264]
[39.28716278 -6.30044842]
[27.71875763 -16.15279770]
[22.66865158 -30.37822533]
[25.39875031 -45.12280273]
[35.07738495 -56.44488907]
[29.94708252 -70.54027557]
[24.81678009 -84.63566589]
[19.68647766 -98.73105621]
[14.55617523 -112.82644653]
[9.28143406 -126.86842346]
[3.86280870 -140.85549927]
[-1.55581641 -154.84259033]
[-16.30896187 -151.92439270]
[-31.34471512 -151.61259460]
[-46.20615768 -153.91664124]
[-60.44166946 -158.76652527]
[-73.61864471 -166.01486206]
[-85.33665466 -175.44139099]
[-95.23959351 -186.75964355]
[-103.02653503 -199.62567139]
[-108.46083069 -213.64848328]
[-111.37734985 -228.40196228]
[-111.68745422 -243.43775940]
[-109.38172150 -258.29895020]
[-104.53022766 -272.53390503]
[-97.28038788 -285.71005249]
[-87.85253143 -297.42700195]
[-76.53315735 -307.32864380]
[-63.66624832 -315.11413574]
[-49.64281082 -320.54684448]
[-34.88900375 -323.46166992]
[-19.85317802 -323.77008057]
[-4.99225807 -321.46267700]
[9.24215126 -316.60955811]
[22.41748238 -309.35821533]
[34.13335419 -299.92904663]
[44.03372955 -288.60855103]
[51.81774902 -275.74075317]
[57.24886703 -261.71670532]
[60.16203690 -246.96255493]
[60.46873093 -231.92669678]
[58.15962982 -217.06604004]
[53.30490112 -202.83218384]
[46.05207825 -189.65766907]
[36.62156677 -177.94287109]
[25.29994392 -168.04377747]
[12.43126678 -160.26121521]
[17.84989166 -146.27412415]
[23.26851654 -132.28704834]
[28.65066910 -127.15434265]
[28.65156364 -117.95674896]
[33.78186798 -103.86135864]
[38.91217041 -89.76596832]
[44.04247284 -75.67057800]
[49.17277145 -61.57519150]
[63.86473465 -59.12327576]
[75.43373871 -49.58314896]
[80.70906830 -35.43969345]
[78.18012238 -20.45632744]
[68.42734528 -8.67368507]
[73.55764771 5.42170477]
[78.68795013 19.51709366]
[90.31161499 28.83050537]
[87.76087189 44.44473648]
[92.89117432 58.54012680]
[98.02147675 72.63551331]
[126.11799622 81.19174957]
[134.09416199 114.20469666]
[149.03018188 112.82067108]
[163.96618652 111.43664551]
[171.77360535 98.02680206]
[185.98559570 91.79792023]
[201.13735962 95.14512634]
[211.40272522 106.78135681]
[212.83445740 122.23223877]
[204.88203430 135.55659485]
[190.60330200 141.63093567]
[175.48875427 138.11956787]
[165.35021973 126.37265778]
[150.41419983 127.75668335]
[135.47817993 129.14071655]
[128.11195374 142.20739746]
[134.65982056 155.70278931]
[141.20768738 169.19816589]
[147.75555420 182.69355774]
[149.17340088 167.76071167]
[154.85365295 153.87782288]
[164.30982971 142.23390198]
[176.73202515 133.82623291]
[191.05632019 129.37489319]
[206.05589294 129.26112366]
[220.44606018 133.49467468]
[232.99435425 141.71296692]
[242.62605286 153.21211243]
[248.51623535 167.00724792]
[250.16041565 181.91687012]
[247.41777039 196.66400146]
[240.52320862 209.98561096]
[230.06723022 220.74072266]
[216.94535828 228.00820923]
[202.28143311 231.16561890]
[187.33137512 229.94255066]
[173.37562561 224.44374084]
[161.60943604 215.14015198]
[153.03958130 202.82664490]
[153.96299744 217.79818726]
[154.88641357 232.76974487]
[155.80982971 247.74128723]
[156.73324585 262.71282959]
[157.65664673 277.68438721]
[158.58006287 292.65594482]
[168.08450317 306.01998901]
[161.01797485 320.81851196]
[144.64993286 321.82806396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 123]
[9 122]
[10 121]
[11 120]
[12 27]
[13 26]
[14 25]
[32 104]
[33 103]
[34 102]
[36 100]
[37 99]
[38 98]
[43 93]
[44 92]
[45 91]
[46 90]
[47 89]
[48 87]
[49 86]
[50 85]
[106 119]
[107 118]
[108 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
