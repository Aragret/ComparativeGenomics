%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACCAAACCACUUUCACCGCUACACGACCGGGGGUAUACUACGGUCAAUGCUCUGAAAUxxxxxxxxxxCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 347.10910034]
[92.50000000 332.10910034]
[92.50000000 317.10910034]
[92.50000000 302.10910034]
[92.50000000 287.10910034]
[92.50000000 272.10910034]
[92.50000000 257.10910034]
[92.50000000 242.10910034]
[92.50000000 227.10910034]
[92.50000000 212.10910034]
[77.26369476 210.03527832]
[62.45321655 205.90061951]
[48.34594345 199.78256226]
[35.20608902 191.79570007]
[23.27974892 182.08961487]
[12.79028702 170.84608459]
[3.93416095 158.27569580]
[-3.12276554 144.61386108]
[-8.24832439 130.11647034]
[-11.34652042 115.05503845]
[-12.35932827 99.71163177]
[-11.26777840 84.37363434]
[-8.09231472 69.32830048]
[-22.21711731 64.27954102]
[-36.34191895 59.23078537]
[-50.46672440 54.18202972]
[-64.59152985 49.13327026]
[-78.74200439 55.64493561]
[-92.99463654 50.32356644]
[-99.11531067 36.79312134]
[-113.24011230 31.74436569]
[-122.60371399 40.13718796]
[-134.58531189 43.70672989]
[-146.87217712 41.82852173]
[-157.12008667 34.92346954]
[-163.40061951 24.36554527]
[-164.56385803 12.20875835]
[-178.46641541 6.57680178]
[-192.36897278 0.94484502]
[-206.27153015 -4.68711185]
[-220.17407227 -10.31906796]
[-235.86965942 -8.32931614]
[-244.76069641 -20.27916336]
[-258.66323853 -25.91111946]
[-273.93789673 -21.00551605]
[-287.21649170 -30.00873756]
[-288.31286621 -46.01428604]
[-276.38595581 -56.74407196]
[-260.58508301 -53.96712112]
[-253.03129578 -39.81367493]
[-239.12873840 -34.18172073]
[-224.42755127 -36.57430649]
[-214.54211426 -24.22162437]
[-200.63957214 -18.58966827]
[-186.73701477 -12.95771122]
[-172.83445740 -7.32575417]
[-158.93190002 -1.69379759]
[-144.45744324 -11.72165871]
[-126.70328522 -11.09686089]
[-112.72555542 0.11944312]
[-108.19136047 17.61956215]
[-94.06655884 22.66831970]
[-80.75586700 16.08340263]
[-66.35939026 21.00234604]
[-59.54277039 35.00846863]
[-45.41796875 40.05722427]
[-31.29316330 45.10597992]
[-17.16836166 50.15473938]
[-3.04355812 55.20349503]
[2.01893091 45.00534821]
[8.08749390 35.37188721]
[15.09981823 26.40203094]
[22.98390198 18.18788338]
[31.65879059 10.81378555]
[41.03540802 4.35545588]
[51.01747894 -1.12079120]
[61.50250244 -5.55872536]
[72.38282013 -8.91277790]
[83.54671478 -11.14850998]
[94.87955475 -12.24296284]
[106.26496124 -12.18490124]
[117.58605194 -10.97491932]
[128.72656250 -8.62544155]
[139.57209778 -5.16059351]
[150.01132202 -0.61595184]
[159.93701172 4.96181917]
[169.24728394 11.51544666]
[177.84651184 18.97763634]
[188.93782043 8.87898731]
[200.02912903 -1.21966219]
[196.67419434 -16.20765495]
[201.27804565 -30.86030579]
[212.60226440 -41.23612595]
[227.60069275 -44.54406738]
[242.23884583 -39.89431381]
[252.57911682 -28.53762627]
[255.84002686 -13.52889633]
[251.14442444 1.09460533]
[239.75537109 11.39922810]
[224.73649597 14.61308098]
[210.12779236 9.87165356]
[199.03646851 19.97030258]
[187.94515991 30.06895256]
[202.77207947 54.58411026]
[210.91697693 82.05210876]
[225.85128784 80.64981079]
[240.78558350 79.24750519]
[255.71989441 77.84519958]
[267.01998901 66.45714569]
[282.95278931 68.33474731]
[291.29602051 82.03765869]
[285.64947510 97.05419159]
[270.34469604 101.86493683]
[257.12219238 92.77951050]
[242.18789673 94.18181610]
[227.25358582 95.58411407]
[212.31927490 96.98641968]
[210.60729980 119.76679993]
[204.32307434 141.73007202]
[217.84725952 148.21823120]
[231.37145996 154.70639038]
[246.92233276 150.76310730]
[259.61352539 160.57705688]
[259.70941162 176.61981201]
[247.13644409 186.58476257]
[231.53953552 182.82763672]
[224.88328552 168.23059082]
[211.35910034 161.74241638]
[197.83491516 155.25425720]
[192.94944763 163.12765503]
[187.43186951 170.57173157]
[181.31967163 177.53587341]
[174.65444946 183.97270203]
[167.48150635 189.83845520]
[159.84963989 195.09323120]
[151.81074524 199.70129395]
[143.41949463 203.63131714]
[134.73295593 206.85655212]
[125.81021118 209.35508728]
[116.71192932 211.10990906]
[107.50000000 212.10910034]
[107.50000000 227.10910034]
[107.50000000 242.10910034]
[107.50000000 257.10910034]
[107.50000000 272.10910034]
[107.50000000 287.10910034]
[107.50000000 302.10910034]
[107.50000000 317.10910034]
[107.50000000 332.10910034]
[107.50000000 347.10910034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 69]
[24 68]
[25 67]
[26 66]
[27 65]
[30 62]
[31 61]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[43 51]
[44 50]
[88 103]
[89 102]
[90 101]
[105 117]
[106 116]
[107 115]
[108 114]
[119 129]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
