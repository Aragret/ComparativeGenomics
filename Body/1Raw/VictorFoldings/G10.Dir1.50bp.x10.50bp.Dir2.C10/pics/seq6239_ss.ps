%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUUUUACCUCACCCCCACUGAUGUUCGCCGACCGUUGACUAUUCUCUACAAACCACAAxxxxxxxxxxGCCGCAGACCUCCUCAUUCUAACCUGAAUCGGAGGACAACCAGUAAGCUACCCUUUUACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[82.66800690 543.20056152]
[82.66800690 528.20056152]
[82.66800690 513.20056152]
[82.66800690 498.20059204]
[82.66800690 483.20059204]
[82.66800690 468.20059204]
[82.66800690 453.20059204]
[82.66800690 438.20059204]
[82.66800690 423.20059204]
[82.66800690 408.20059204]
[68.72104645 405.51385498]
[55.51094055 400.28399658]
[43.49718857 392.69125366]
[33.09799194 382.99801636]
[24.67570305 371.53985596]
[18.52418518 358.71392822]
[14.85857964 344.96505737]
[13.80776310 330.77047729]
[15.40982819 316.62319946]
[19.61070442 303.01483154]
[26.26597214 290.41864014]
[35.14584351 279.27291870]
[45.94307709 269.96588135]
[58.28362656 262.82205200]
[71.73957825 258.09097290]
[85.84401703 255.93849182]
[75.60159302 245.18544006]
[76.02089691 229.97758484]
[87.36914062 219.30729675]
[87.99311829 204.32026672]
[88.61709595 189.33325195]
[89.24107361 174.34623718]
[80.26823425 159.29672241]
[90.17527771 143.81025696]
[90.48733521 128.81350708]
[90.79939270 113.81675720]
[79.74732971 91.61379242]
[72.02324677 78.75539398]
[64.16581726 65.97803497]
[56.17590332 53.28310394]
[42.47055054 59.44016647]
[28.04165649 63.62981796]
[13.17008591 65.77050781]
[-1.85468090 65.82055664]
[-16.74018478 63.77900696]
[-31.19667244 59.68558884]
[-44.94274521 53.61997986]
[-57.71083069 45.70025253]
[-69.25239563 36.08056641]
[-79.34278870 24.94816971]
[-87.78557587 12.51976013]
[-94.41643524 -0.96274167]
[-99.10629272 -15.23689365]
[-101.76384735 -30.02484512]
[-102.33737946 -45.03874588]
[-100.81571960 -59.98634338]
[-97.22849274 -74.57668304]
[-91.64552307 -88.52574921]
[-84.17548370 -101.56203461]
[-74.96378326 -113.43177032]
[-64.18972778 -123.90391541]
[-52.06303406 -132.77462769]
[-38.81975555 -139.87123108]
[-24.71768188 -145.05558777]
[-10.03130531 -148.22679138]
[4.95349407 -149.32310486]
[19.94503593 -148.32318115]
[34.65150452 -145.24650574]
[48.78663254 -140.15295410]
[62.07527542 -133.14167786]
[74.25876617 -124.34914398]
[85.09995270 -113.94650269]
[94.38780975 -102.13626099]
[101.94153595 -89.14829254]
[107.61410522 -75.23542023]
[111.29509735 -60.66845322]
[112.91286469 -45.73095322]
[112.43590546 -30.71367455]
[109.87351227 -15.90893555]
[105.27555847 -1.60491550]
[98.73155212 11.91995430]
[90.36886597 24.40240669]
[80.35028839 35.59947205]
[68.87083435 45.29319000]
[76.86074829 57.98811722]
[83.12593842 61.99973297]
[84.88164520 71.03130341]
[92.60573578 83.88970947]
[107.01795197 88.04759979]
[120.40423584 81.27947998]
[133.79051208 74.51136780]
[147.17680359 67.74325562]
[160.56309509 60.97513580]
[165.34489441 48.95065689]
[176.68620300 43.60335541]
[188.24017334 47.31998062]
[201.76435852 40.83181763]
[215.28854370 34.34365082]
[228.81274414 27.85548592]
[233.81762695 12.86460018]
[247.99389648 5.87827349]
[262.93103027 11.04137039]
[269.76708984 25.29071808]
[264.44635010 40.17242813]
[250.12553406 46.85744858]
[235.30090332 41.37967682]
[221.77671814 47.86783981]
[208.25251770 54.35600662]
[194.72833252 60.84416962]
[185.65634155 75.83413696]
[167.33120728 74.36141968]
[153.94491577 81.12953949]
[140.55863953 87.89765167]
[127.17234802 94.66576385]
[113.78606415 101.43388367]
[105.79615021 114.12881470]
[105.48409271 129.12556458]
[105.17203522 144.12231445]
[113.54181671 153.99148560]
[112.93589020 166.51554871]
[104.22808838 174.97021484]
[103.60411072 189.95722961]
[102.98013306 204.94424438]
[102.35615540 219.93127441]
[112.77816010 231.50794983]
[111.93186188 246.69802856]
[100.83103180 256.56246948]
[116.20344543 260.40704346]
[130.45001221 267.33190918]
[142.96125793 277.03839111]
[153.20242310 289.10870361]
[160.73634338 303.02423096]
[165.24218750 318.18759155]
[166.52900696 333.94833374]
[164.54389954 349.63095093]
[159.37416077 364.56369019]
[151.24340820 378.10739136]
[140.50201416 389.68286133]
[127.61189270 398.79559326]
[113.12668610 405.05691528]
[97.66800690 408.20059204]
[97.66800690 423.20059204]
[97.66800690 438.20059204]
[97.66800690 453.20059204]
[97.66800690 468.20059204]
[97.66800690 483.20059204]
[97.66800690 498.20059204]
[97.66800690 513.20056152]
[97.66800690 528.20056152]
[97.66800690 543.20056152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 127]
[29 124]
[30 123]
[31 122]
[32 121]
[34 118]
[35 117]
[36 116]
[37 88]
[38 87]
[39 85]
[40 84]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
