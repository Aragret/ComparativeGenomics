%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAxxxxxxxxxxUAACCAAUACUACCAAUCAAUACUCAUCAUUAAUAAUCAUAAUAGCUAUAGCAAUAAAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[174.26580811 63.83071899]
[161.43214417 71.59585571]
[154.54840088 84.80430603]
[138.73588562 85.32846832]
[125.90222931 93.09360504]
[113.06857300 100.85874176]
[100.56453705 109.14421082]
[88.41120148 117.93605804]
[76.25787354 126.72789764]
[64.10453796 135.51974487]
[51.95120621 144.31158447]
[39.79787445 153.10342407]
[54.67810440 154.99516296]
[65.71245575 165.15602112]
[68.82217407 179.83013916]
[62.85777283 193.59335327]
[50.02394867 201.35820007]
[35.06460953 200.25448608]
[23.50934792 190.69018555]
[19.62946129 176.20065308]
[24.85845184 162.14268494]
[11.43100262 168.82875061]
[-1.99644709 175.51483154]
[-15.42389679 182.20089722]
[-21.86505508 196.89413452]
[-37.40510559 200.87989807]
[-50.12305450 191.10067749]
[-50.26277542 175.05822754]
[-37.71708679 165.05895996]
[-22.10997200 168.77345276]
[-8.68252277 162.08737183]
[4.74492693 155.40130615]
[18.17237663 148.71522522]
[31.00603104 140.95008850]
[43.15936279 132.15824890]
[55.31269455 123.36640930]
[67.46602631 114.57456207]
[79.61936188 105.78272247]
[91.77269745 96.99088287]
[92.50204468 93.96083069]
[94.37793732 91.13798523]
[97.32219696 88.95787048]
[101.09308624 87.81948090]
[105.30343628 88.02508545]
[118.13709259 80.25994873]
[130.97074890 72.49481201]
[138.77244568 58.73094559]
[153.66702271 58.76219940]
[166.50067139 50.99706650]
[159.50726318 37.72208023]
[153.31256104 24.05611229]
[147.93832397 10.04716682]
[143.40342712 -4.25554800]
[139.72380066 -18.80179405]
[136.91236877 -33.54047775]
[134.97898865 -48.41982651]
[133.93048096 -63.38758087]
[133.77052307 -78.39115906]
[134.49966431 -93.37786102]
[136.11535645 -108.29505157]
[138.61190796 -123.09032440]
[141.98056030 -137.71171570]
[146.20947266 -152.10787964]
[151.28379822 -166.22822571]
[157.18572998 -180.02316284]
[163.89450073 -193.44422913]
[171.38656616 -206.44430542]
[179.63562012 -218.97770691]
[188.61267090 -231.00041199]
[198.28617859 -242.47019958]
[208.62219238 -253.34678650]
[219.58438110 -263.59194946]
[231.13424683 -273.16970825]
[243.23121643 -282.04641724]
[255.83282471 -290.19091797]
[268.89477539 -297.57458496]
[282.37118530 -304.17144775]
[296.21475220 -309.95840454]
[310.37683105 -314.91510010]
[324.80767822 -319.02410889]
[339.45657349 -322.27099609]
[354.27209473 -324.64437866]
[369.20220947 -326.13589478]
[384.19448853 -326.74032593]
[399.19619751 -326.45556641]
[414.15472412 -325.28256226]
[429.01745605 -323.22546387]
[443.73223877 -320.29153442]
[458.24737549 -316.49099731]
[472.51187134 -311.83728027]
[486.47561646 -306.34667969]
[500.08956909 -300.03848267]
[513.30590820 -292.93490601]
[526.07824707 -285.06082153]
[538.36163330 -276.44393921]
[550.11303711 -267.11450195]
[561.29107666 -257.10531616]
[571.85650635 -246.45147705]
[581.77227783 -235.19046021]
[591.00354004 -223.36180115]
[599.51782227 -211.00704956]
[607.28527832 -198.16960144]
[614.27856445 -184.89456177]
[620.47314453 -171.22853088]
[625.84722900 -157.21954346]
[630.38201904 -142.91679382]
[634.06152344 -128.37051392]
[636.87280273 -113.63180542]
[638.80609131 -98.75243378]
[639.85443115 -83.78467560]
[640.01428223 -68.78109741]
[639.28497314 -53.79439545]
[637.66918945 -38.87722397]
[635.17248535 -24.08196831]
[631.80371094 -9.46060467]
[627.57470703 4.93551111]
[622.50024414 19.05581093]
[616.59820557 32.85069656]
[609.88928223 46.27171326]
[602.39709473 59.27172089]
[594.14794922 71.80505371]
[585.17077637 83.82768250]
[575.49719238 95.29738617]
[565.16107178 106.17387390]
[554.19879150 116.41893768]
[542.64886475 125.99659729]
[530.55175781 134.87321472]
[517.95013428 143.01759338]
[504.88809204 150.40113831]
[491.41162109 156.99790955]
[477.56802368 162.78472900]
[463.40588379 167.74128723]
[448.97503662 171.85017395]
[434.32608032 175.09693909]
[419.51052856 177.47018433]
[404.58041382 178.96157837]
[389.58813477 179.56588745]
[374.58642578 179.28097534]
[359.62792969 178.10784912]
[344.76519775 176.05064392]
[330.05041504 173.11654663]
[315.53533936 169.31590271]
[301.27087402 164.66204834]
[287.30718994 159.17132568]
[273.69326782 152.86303711]
[260.47698975 145.75932312]
[247.70474243 137.88513184]
[235.42140198 129.26814270]
[223.67012024 119.93860626]
[212.49215698 109.92930603]
[201.92678833 99.27539062]
[192.01112366 88.01428223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[4 46]
[5 45]
[6 44]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[21 33]
[22 32]
[23 31]
[24 30]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
