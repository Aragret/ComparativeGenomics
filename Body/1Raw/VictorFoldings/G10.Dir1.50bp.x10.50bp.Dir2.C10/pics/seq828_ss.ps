%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUGAAAAUGUUUAGACGGGxxxxxxxxxxUUACCGUACAUAGCACAUUACAGUCAAAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.03528595 164.71722412]
[121.61666107 178.70431519]
[116.19803619 192.69139099]
[110.77941132 206.67848206]
[105.36078644 220.66555786]
[99.94216156 234.65264893]
[105.08084869 249.85044861]
[96.28180695 263.26522827]
[80.29490662 264.60632324]
[69.38392639 252.84494019]
[71.91883850 237.00341797]
[85.95507812 229.23402405]
[91.37370300 215.24693298]
[96.79232788 201.25985718]
[102.21095276 187.27276611]
[107.62957764 173.28569031]
[113.04820251 159.29859924]
[101.17137909 150.13665771]
[89.01804352 158.92851257]
[76.86470795 167.72035217]
[72.91302490 183.26910400]
[58.23394775 189.74246216]
[44.08802032 182.17462158]
[41.32678223 166.37097168]
[52.06842041 154.45472717]
[68.07286835 155.56701660]
[80.22620392 146.77517700]
[92.37953186 137.98333740]
[75.93755341 125.41331482]
[69.73664856 107.81111145]
[54.73743820 107.96510315]
[39.73822784 108.11910248]
[24.73901939 108.27310181]
[16.61929131 121.39077759]
[2.68675971 128.01559448]
[-12.61275578 126.03357697]
[-24.39723396 116.07719421]
[-28.90629196 101.32347870]
[-24.70110512 86.48030090]
[-13.12353420 76.28405762]
[2.13206148 73.98833466]
[16.19767570 80.32569122]
[24.58502197 93.27388763]
[39.58423233 93.11989594]
[54.58344269 92.96589661]
[69.58264923 92.81189728]
[77.38036346 76.65959167]
[93.27186584 66.92726135]
[112.60103607 67.34955597]
[129.21327209 78.54541779]
[137.41491699 97.58605194]
[133.91209412 118.72897339]
[135.14271545 103.77954102]
[136.37332153 88.83010101]
[137.60394287 73.88066864]
[129.85560608 63.51886368]
[131.22616577 51.05720520]
[140.43255615 43.15122223]
[141.96984863 28.23020744]
[143.50714111 13.30918980]
[145.04443359 -1.61182642]
[146.58172607 -16.53284264]
[131.30192566 -26.76786232]
[123.31667328 -43.24101257]
[124.73408508 -61.40787888]
[135.08134460 -76.30445099]
[151.45729065 -83.90350342]
[152.07312012 -98.89085388]
[152.68894958 -113.87821198]
[153.30476379 -128.86557007]
[139.49693298 -135.22261047]
[129.17655945 -146.38317871]
[123.91741943 -160.64535522]
[124.52151489 -175.83428955]
[130.89671326 -189.63375854]
[142.07084656 -199.93943787]
[156.33995056 -205.17980957]
[171.52806091 -204.55572510]
[185.31913757 -198.16238403]
[195.61010742 -186.97470093]
[200.83169556 -172.69873047]
[200.18765259 -157.51144409]
[193.77616882 -143.72879028]
[182.57495117 -133.45254517]
[168.29212952 -128.24974060]
[167.67630005 -113.26238251]
[167.06047058 -98.27503204]
[166.44464111 -83.28767395]
[177.26385498 -78.38666534]
[185.80328369 -70.08123016]
[191.03334045 -59.33981705]
[192.31233215 -47.42649841]
[189.46505737 -35.75215912]
[182.80641174 -25.70745468]
[173.10673523 -18.49712753]
[161.50274658 -14.99555016]
[159.96545410 -0.07453392]
[158.42816162 14.84648228]
[156.89086914 29.76749992]
[155.35357666 44.68851471]
[163.39073181 60.25927353]
[152.55337524 75.11128235]
[151.32275391 90.06071472]
[150.09214783 105.01014709]
[148.86154175 119.95958710]
[157.10864258 107.43020630]
[160.19177246 92.75048065]
[169.16940308 80.73374939]
[182.37223816 73.61440277]
[197.34533691 72.71623230]
[211.30455017 78.20623779]
[221.65431213 89.06361389]
[226.47015381 103.26950836]
[224.85664368 118.18247223]
[217.11376953 131.02957153]
[204.68125916 139.42199707]
[189.87083435 141.79925537]
[175.43489075 137.71852112]
[160.50923157 139.21006775]
[174.32281494 145.05685425]
[188.13639832 150.90364075]
[201.94998169 156.75042725]
[218.14947510 154.19927979]
[228.24676514 167.12124634]
[221.85459900 182.22331238]
[205.54872131 183.96977234]
[196.10319519 170.56401062]
[182.28961182 164.71722412]
[168.47602844 158.87043762]
[154.66244507 153.02365112]
[147.75566101 155.94703674]
[157.07511902 167.70066833]
[166.39457703 179.45428467]
[175.71403503 191.20791626]
[185.03349304 202.96153259]
[194.35295105 214.71516418]
[206.82565308 223.04772949]
[215.17745972 235.50756836]
[218.14573669 250.21093750]
[215.28172302 264.93499756]
[207.01841736 277.45367432]
[194.60508728 285.87445068]
[179.91839600 288.92416382]
[165.17869568 286.14184570]
[152.61437988 277.94805908]
[144.12493896 265.58160400]
[140.99383545 250.91203308]
[143.69444275 236.15707397]
[141.74397278 221.28442383]
[139.79350281 206.41177368]
[137.84301758 191.53912354]
[135.89254761 176.66647339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[18 28]
[19 27]
[20 26]
[30 46]
[31 45]
[32 44]
[33 43]
[52 105]
[53 104]
[54 103]
[55 102]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[67 88]
[68 87]
[69 86]
[70 85]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
