%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAACCCCCUGAAGCUUCACCGGCGCAGUCAUUCUCAUAAUCGCCCACGGGCUUACAUCCxxxxxxxxxxAGGAUUUCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[140.15977478 201.77923584]
[131.39356995 189.60740662]
[122.62735748 177.43556213]
[113.86115265 165.26373291]
[105.09494781 153.09188843]
[90.11522675 153.87173462]
[82.66031647 166.88804626]
[75.20540619 179.90435791]
[67.75049591 192.92066956]
[60.29558945 205.93696594]
[60.89350510 222.32521057]
[46.85797501 230.80671692]
[32.62754822 222.65644836]
[32.84127045 206.25868225]
[47.27927780 198.48205566]
[54.73418808 185.46575928]
[62.18909836 172.44944763]
[69.64401245 159.43313599]
[77.09892273 146.41682434]
[66.32810974 135.97700500]
[53.55075455 143.83444214]
[40.77339935 151.69186401]
[33.45106506 166.36549377]
[17.06796265 167.09077454]
[8.47762299 153.12158203]
[16.51705170 138.82824707]
[32.91597366 138.91450500]
[45.69332886 131.05708313]
[58.47068787 123.19965363]
[58.68556595 114.15493011]
[60.67687988 105.97180939]
[64.13875580 98.97217560]
[49.56605148 95.41741180]
[34.99334717 91.86264801]
[20.42064476 88.30789185]
[25.51289749 102.41706848]
[17.83929825 115.30566406]
[3.00862813 117.55315399]
[-8.13909340 107.51680756]
[-7.45578432 92.53237915]
[4.55846691 83.55240631]
[-9.56633568 78.50364685]
[-23.69113922 73.45489502]
[-38.74848938 78.99165344]
[-52.39012909 70.54859161]
[-54.15135574 54.60250854]
[-42.68111038 43.38586807]
[-26.77838135 45.50312042]
[-18.64238358 59.33008957]
[-4.51757956 64.37884521]
[9.60722351 69.42760468]
[23.97540665 73.73518372]
[38.54811096 77.28994751]
[53.12081146 80.84471130]
[67.69351959 84.39947510]
[77.28219604 72.23335266]
[91.10626221 65.24389648]
[106.58842468 64.73417664]
[112.36469269 50.89096069]
[118.14096832 37.04774475]
[123.91724396 23.20452690]
[110.90756226 15.69609833]
[98.96487427 6.58562994]
[88.28530121 -3.97727728]
[79.04420471 -15.81917095]
[71.39332581 -28.74559593]
[65.45831299 -42.54428864]
[61.33661652 -56.98866272]
[59.09591675 -71.84152985]
[58.77301025 -86.85898590]
[60.37319946 -101.79444122]
[63.87020874 -116.40262604]
[69.20661163 -130.44367981]
[76.29478455 -143.68702698]
[85.01832581 -155.91519165]
[95.23398590 -166.92739868]
[106.77402496 -176.54278564]
[119.44894409 -184.60348511]
[133.05059814 -190.97712708]
[147.35563660 -195.55905151]
[162.12918091 -198.27400208]
[177.12860107 -199.07742310]
[192.10762024 -197.95610046]
[206.82026672 -194.92846680]
[221.02493286 -190.04421997]
[234.48835754 -183.38357544]
[246.98948669 -175.05589294]
[258.32302856 -165.19793701]
[268.30285645 -153.97157288]
[276.76513672 -141.56115723]
[283.57086182 -128.17048645]
[288.60830688 -114.01942444]
[291.79473877 -99.34035492]
[293.07785034 -84.37432861]
[292.43655396 -69.36709595]
[289.88137817 -54.56509018]
[285.45428467 -40.21137238]
[279.22799683 -26.54164124]
[271.30471802 -13.78036976]
[261.81457520 -2.13710928]
[250.91340637 8.19694805]
[238.78019714 17.05210686]
[225.61421204 24.28295898]
[211.63165283 29.77076530]
[197.06208801 33.42541122]
[182.14480591 35.18688583]
[167.12474060 35.02626419]
[152.24851990 32.94618225]
[137.76045227 28.98079872]
[131.98419189 42.82401657]
[126.20791626 56.66723633]
[120.43164062 70.51045227]
[135.36648560 84.04342651]
[141.43666077 104.87972260]
[135.31742859 127.31282806]
[117.26678467 144.32568359]
[126.03298950 156.49751282]
[134.79919434 168.66935730]
[143.56539917 180.84118652]
[152.33160400 193.01303101]
[165.98292542 186.68545532]
[180.58509827 183.05601501]
[195.61029053 182.25592041]
[210.51533508 184.31408691]
[224.76144409 189.15611267]
[237.83360291 196.60696411]
[249.25927734 206.39729309]
[258.62542725 218.17318726]
[265.59347534 231.50894165]
[269.91152954 245.92251587]
[271.42352295 260.89282227]
[270.07476807 275.87872314]
[265.91400146 290.33850098]
[259.09167480 303.74938965]
[249.85440063 315.62664795]
[238.53608704 325.54089355]
[225.54588318 333.13372803]
[211.35339355 338.13070679]
[196.47164917 340.35116577]
[181.43864441 339.71484375]
[166.79777527 336.24472046]
[153.07832336 330.06628418]
[140.77624512 321.40283203]
[130.33622742 310.56759644]
[122.13568878 297.95220947]
[116.47106934 284.01275635]
[113.54714203 269.25311279]
[113.46959686 254.20683289]
[116.24124908 239.41783142]
[121.76190186 225.42073059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[4 117]
[5 116]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[20 29]
[21 28]
[22 27]
[32 55]
[33 54]
[34 53]
[35 52]
[41 51]
[42 50]
[43 49]
[58 112]
[59 111]
[60 110]
[61 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
