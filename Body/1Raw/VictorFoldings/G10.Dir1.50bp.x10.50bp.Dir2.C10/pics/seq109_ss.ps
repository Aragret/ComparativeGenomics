%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCAUCCUAUUAUUUAUCGCACCUACGUUCAAUAUUACAGGCGAACAUACUUACUAAAGxxxxxxxxxxAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCUCCUCAUUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[77.73728943 648.16693115]
[77.73728943 633.16693115]
[77.73728943 618.16693115]
[77.73728943 603.16693115]
[77.73728943 588.16693115]
[77.73728943 573.16693115]
[77.73728943 558.16693115]
[77.73728943 543.16693115]
[77.73728943 528.16693115]
[77.73728943 513.16693115]
[64.38429260 510.78735352]
[51.61778641 506.19714355]
[39.80106735 499.52572632]
[29.27058983 490.96185303]
[20.32639503 480.74804688]
[13.22356892 469.17401123]
[8.16496086 456.56814575]
[5.29539013 443.28839111]
[4.69750452 429.71203613]
[6.38939714 416.22494507]
[10.32406235 403.21069336]
[16.39069939 391.03952026]
[24.41783333 380.05789185]
[34.17816162 370.57870483]
[45.39499664 362.87213135]
[57.75009155 357.15820312]
[70.89269257 353.60034180]
[84.44947052 352.30072021]
[85.69634247 337.35263062]
[86.78765869 322.39239502]
[87.72328186 307.42160034]
[77.70677948 296.45779419]
[78.44237518 281.26196289]
[90.01014709 270.83004761]
[90.94577026 255.85926819]
[91.88140106 240.88847351]
[84.95303345 227.70336914]
[93.53605652 214.41268921]
[84.87825012 199.17974854]
[95.10532379 183.90275574]
[95.72930145 168.91572571]
[96.35327911 153.92871094]
[96.97725677 138.94169617]
[97.60123444 123.95468140]
[98.22521210 108.96766663]
[92.73010254 111.92885590]
[85.28384399 111.69539642]
[77.57066345 107.42225647]
[71.56142426 99.07909393]
[69.14627075 87.52192688]
[71.76154327 74.40863800]
[68.66321564 59.73211670]
[65.56489563 45.05558777]
[62.46657562 30.37906456]
[59.36825562 15.70253849]
[56.26993179 1.02601290]
[51.40618896 -6.78397036]
[53.26316833 -13.98794556]
[50.47084427 -28.72575188]
[47.67852020 -43.46355820]
[43.22170639 -57.78615570]
[37.15869141 -71.50621033]
[31.09567833 -85.22626495]
[17.54323387 -94.46007538]
[19.03339005 -110.79137421]
[34.03320312 -117.41992950]
[47.11214828 -107.52684021]
[44.81573105 -91.28927612]
[50.87874603 -77.56922150]
[56.94175720 -63.84916687]
[60.34288788 -78.45848846]
[70.04609680 -89.89736176]
[83.90512085 -95.63560486]
[98.85446930 -94.40398407]
[111.58749390 -86.47490692]
[119.28775787 -73.60222626]
[120.25202942 -58.63325500]
[114.26703644 -44.87898636]
[102.65659332 -35.38174820]
[87.98882294 -32.24223328]
[73.50810242 -36.15487671]
[62.41632462 -46.25588226]
[65.20864868 -31.51807594]
[68.00097656 -16.78026962]
[70.94645691 -2.07230878]
[74.04477692 12.60421658]
[77.14310455 27.28074265]
[80.24142456 41.95726776]
[83.33974457 56.63379288]
[86.43806458 71.31031799]
[93.26618958 74.41302490]
[99.47180176 60.75687790]
[113.12785339 66.96270752]
[106.92242432 80.61843109]
[113.75054932 83.72113037]
[126.84370422 76.40203094]
[139.93685913 69.08292389]
[142.68769836 53.68919373]
[154.72294617 43.70485687]
[170.35990906 43.84420395]
[182.21530151 54.04144669]
[184.69136047 69.48175812]
[176.61897278 82.87468719]
[161.80967712 87.89651489]
[147.25596619 82.17607880]
[134.16281128 89.49517822]
[121.06965637 96.81428528]
[113.21222687 109.59164429]
[112.58824921 124.57865906]
[111.96427155 139.56567383]
[111.34029388 154.55268860]
[110.71631622 169.53970337]
[110.09233856 184.52671814]
[118.25499725 194.56788635]
[117.38864899 207.07661438]
[108.50685120 215.34831238]
[115.36829376 229.60423279]
[106.85219574 241.82409668]
[105.91656494 256.79489136]
[104.98093414 271.76568604]
[115.15984344 283.55667114]
[113.99771881 298.72586060]
[102.69407654 308.35723877]
[101.75844574 323.32803345]
[104.35868073 332.15359497]
[100.64443207 338.59951782]
[99.39756012 353.54760742]
[115.29311371 358.12301636]
[129.91879272 365.83813477]
[142.66221619 376.36764526]
[152.99029541 389.26831055]
[160.47151184 403.99786377]
[164.79397583 419.93762207]
[165.77844238 436.41854858]
[163.38568115 452.74942017]
[157.71810913 468.24563599]
[149.01535034 482.25802612]
[137.64413452 494.20010376]
[124.08287048 503.57241821]
[108.90142822 509.98370361]
[92.73728943 513.16693115]
[92.73728943 528.16693115]
[92.73728943 543.16693115]
[92.73728943 558.16693115]
[92.73728943 573.16693115]
[92.73728943 588.16693115]
[92.73728943 603.16693115]
[92.73728943 618.16693115]
[92.73728943 633.16693115]
[92.73728943 648.16693115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[28 127]
[29 126]
[30 124]
[31 123]
[34 120]
[35 119]
[36 118]
[38 116]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[58 84]
[59 83]
[60 82]
[61 70]
[62 69]
[63 68]
[95 107]
[96 106]
[97 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
