%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCxxxxxxxxxxAUUGAUGAGGGUCUUACUCUUUUAGUAUAAAUAGUACCGUUAACUUCCAAUUAACUAGUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[215.43862915 487.62905884]
[215.12657166 472.63229370]
[214.81451416 457.63552856]
[214.50245667 442.63879395]
[214.19039917 427.64202881]
[213.87834167 412.64529419]
[213.56628418 397.64852905]
[213.25422668 382.65176392]
[212.94216919 367.65502930]
[210.14985657 352.91720581]
[204.95443726 338.84570312]
[199.75901794 324.77416992]
[194.56359863 310.70266724]
[188.64364624 296.92028809]
[182.01513672 283.46432495]
[175.38664246 270.00833130]
[168.75814819 256.55236816]
[162.12965393 243.09642029]
[155.50114441 229.64044189]
[148.87265015 216.18447876]
[142.24415588 202.72851562]
[135.61564636 189.27255249]
[128.98715210 175.81658936]
[114.56365204 179.85180664]
[99.64428711 181.16824341]
[84.73703003 179.72108459]
[70.34944916 175.55961609]
[56.97139740 168.82550049]
[45.05837631 159.74803162]
[35.01599121 148.63629150]
[27.18616295 135.86857605]
[21.83548355 121.87963104]
[19.14612961 107.14573669]
[19.20966530 92.16854095]
[22.02392960 77.45798492]
[27.49310303 63.51493454]
[35.43097305 50.81412125]
[45.56727219 39.78797531]
[57.55688095 30.81191063]
[50.92838287 17.35594559]
[37.88923264 8.39541531]
[39.20590591 -6.44087887]
[32.57740784 -19.89684486]
[29.36565399 -5.24472380]
[19.36025047 5.93077946]
[5.15106201 10.73692036]
[-9.58390331 7.92964363]
[-21.03054428 -1.76439512]
[-26.22593498 -15.83592415]
[-23.82526207 -30.64257050]
[-14.44993401 -42.35167694]
[-0.52672547 -47.93238068]
[14.34038353 -45.94013214]
[26.30302238 -36.89070129]
[22.59686089 -51.42563629]
[18.89069939 -65.96057129]
[15.18453884 -80.49550629]
[0.10983200 -80.36643982]
[-14.55755615 -83.84942627]
[-27.96488380 -90.74195862]
[-39.33266449 -100.64331818]
[-47.99999619 -112.97785187]
[-53.46296310 -127.02845764]
[-55.40396118 -141.97824097]
[-53.71014404 -156.95803833]
[-48.47998428 -171.09695435]
[-40.01755905 -183.57295227]
[-28.81485939 -193.66072083]
[-15.52320004 -200.77375793]
[-0.91533774 -204.49850464]
[14.15944386 -204.61843872]
[28.82471848 -201.12657166]
[42.22786331 -194.22590637]
[53.58964157 -184.31765747]
[62.24949265 -171.97785950]
[67.70394135 -157.92395020]
[69.63587189 -142.97299194]
[67.93297577 -127.99423218]
[62.69424438 -113.85848999]
[54.22425461 -101.38761139]
[43.01544571 -91.30664062]
[29.71947479 -84.20166779]
[33.42563629 -69.66673279]
[37.13179779 -55.13179779]
[40.83795929 -40.59686279]
[46.03337479 -26.52534294]
[52.66187286 -13.06937790]
[65.22690582 -5.07130766]
[64.38434601 10.72744751]
[71.01284790 24.18341255]
[85.43634796 20.14819908]
[100.35571289 18.83175850]
[115.26296997 20.27891350]
[129.65055847 24.44038963]
[143.02859497 31.17450142]
[154.94161987 40.25196457]
[164.98400879 51.36371231]
[172.81384277 64.13141632]
[178.16452026 78.12036896]
[180.85386658 92.85426331]
[180.79032898 107.83145905]
[177.97607422 122.54201508]
[172.50689697 136.48506165]
[164.56903076 149.18588257]
[154.43272400 160.21202087]
[142.44311523 169.18809509]
[149.07162476 182.64405823]
[155.70011902 196.10002136]
[162.32861328 209.55598450]
[168.95710754 223.01194763]
[175.58561707 236.46791077]
[182.21411133 249.92387390]
[188.84260559 263.37985229]
[195.47111511 276.83581543]
[202.09960938 290.29177856]
[209.64961243 277.33038330]
[224.45811462 274.94119263]
[235.70129395 284.87048340]
[235.16130066 299.86077881]
[223.23281860 308.95535278]
[208.63511658 305.50723267]
[213.83053589 319.57876587]
[219.02595520 333.65026855]
[224.22137451 347.72180176]
[227.39314270 333.06097412]
[235.30642700 320.31814575]
[247.04115295 310.97488403]
[261.23291016 306.11755371]
[276.23168945 306.31091309]
[290.29351807 311.53244019]
[301.78350830 321.17507935]
[309.36569214 334.11767578]
[312.15847778 348.85537720]
[309.83721924 363.67468262]
[302.67172241 376.85253906]
[291.49517822 386.85678101]
[277.60705566 392.52420044]
[262.62210083 393.19589233]
[248.28260803 388.79373169]
[236.25582886 379.82955933]
[227.93893433 367.34295654]
[228.25099182 382.33972168]
[228.56303406 397.33648682]
[228.87509155 412.33322144]
[229.18714905 427.32998657]
[229.49920654 442.32672119]
[229.81126404 457.32348633]
[230.12332153 472.32025146]
[230.43537903 487.31698608]
[233.02638245 506.52471924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[11 123]
[12 122]
[13 121]
[14 115]
[15 114]
[16 113]
[17 112]
[18 111]
[19 110]
[20 109]
[21 108]
[22 107]
[23 106]
[39 90]
[40 89]
[42 87]
[43 86]
[54 85]
[55 84]
[56 83]
[57 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
