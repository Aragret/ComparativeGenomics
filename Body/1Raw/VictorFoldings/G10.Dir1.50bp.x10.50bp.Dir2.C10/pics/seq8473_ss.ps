%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACCAACCACCCAACUAUCUAUAAACCUAGCCAUGGCCAUCCCCUUAUGAGCGGGCACAxxxxxxxxxxGAUUUCACUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[41.18769073 223.49093628]
[34.00518036 236.65951538]
[26.82267189 249.82810974]
[27.00729942 265.64822388]
[14.12043190 273.11669922]
[6.93792295 286.28527832]
[7.83812475 304.64746094]
[-7.42761326 313.24728394]
[-14.33461189 326.56243896]
[-13.05548763 342.91162109]
[-26.72605133 351.96966553]
[-41.28319550 344.41839600]
[-41.75178146 328.02593994]
[-27.64976692 319.65545654]
[-20.74276924 306.34030151]
[-24.09707069 294.67599487]
[-18.39849281 283.50704956]
[-6.23065948 279.10275269]
[0.95184934 265.93417358]
[0.25348037 251.05595398]
[13.65408993 242.64559937]
[20.83659935 229.47700500]
[28.01910782 216.30842590]
[14.31703758 206.61767578]
[1.90490091 195.32182312]
[-9.03044033 182.59094238]
[-18.32435989 168.61665344]
[-25.83693695 153.60937500]
[-31.45507240 137.79501343]
[-35.09418869 121.41166687]
[-36.69950104 104.70597076]
[-36.24683762 87.92942047]
[-33.74301529 71.33459473]
[-29.22573090 55.17132187]
[-22.76298523 39.68292999]
[-14.45207882 25.10259438]
[-4.41812658 11.64981937]
[7.18781137 -0.47286829]
[20.19101143 -11.08296490]
[34.39571381 -20.02073669]
[49.58806992 -27.15163040]
[65.53936768 -32.36828995]
[82.00946045 -35.59218216]
[98.75038910 -36.77477264]
[115.51013947 -35.89825439]
[132.03637695 -32.97582626]
[136.34396362 -47.34400940]
[140.65155029 -61.71219254]
[144.95913696 -76.08037567]
[132.69863892 -83.79670715]
[122.87042999 -94.42288971]
[116.14402771 -107.22574615]
[112.97524261 -121.32415009]
[113.57526398 -135.74964905]
[117.89662933 -149.51300049]
[125.63689423 -161.67201233]
[136.25979614 -171.39605713]
[149.03242493 -178.02276611]
[163.07571411 -181.10319519]
[177.42506409 -180.43222046]
[182.03062439 -194.70767212]
[186.63619995 -208.98313904]
[191.24176025 -223.25859070]
[195.84732056 -237.53405762]
[182.46482849 -244.38278198]
[170.35432434 -253.28962708]
[159.82951355 -264.02389526]
[151.16299438 -276.30752563]
[144.57926941 -289.82235718]
[140.24887085 -304.21832275]
[138.28395081 -319.12252808]
[138.73541260 -334.14892578]
[141.59156799 -348.90826416]
[146.77844238 -363.01828003]
[154.16166687 -376.11349487]
[163.55000305 -387.85467529]
[174.70027161 -397.93768311]
[187.32365417 -406.10140991]
[201.09318542 -412.13436890]
[215.65217590 -415.88024902]
[230.62353516 -417.24209595]
[245.61946106 -416.18457031]
[260.25152588 -412.73507690]
[274.14071655 -406.98300171]
[286.92727661 -399.07730103]
[298.27999878 -389.22277832]
[307.90484619 -377.67468262]
[315.55245972 -364.73211670]
[321.02478027 -350.73031616]
[324.18008423 -336.03201294]
[324.93658447 -321.01788330]
[323.27471924 -306.07687378]
[319.23754883 -291.59591675]
[312.92962646 -277.95019531]
[304.51434326 -265.49310303]
[294.20968628 -254.54731750]
[282.28256226 -245.39637756]
[269.04190063 -238.27731323]
[254.83067322 -233.37451172]
[240.01699829 -230.81498718]
[224.98457336 -230.66500854]
[210.12278748 -232.92849731]
[205.51722717 -218.65303040]
[200.91165161 -204.37757874]
[196.30609131 -190.10211182]
[191.70053101 -175.82664490]
[204.64907837 -167.18609619]
[214.65806580 -155.24478149]
[220.91511536 -140.95924377]
[222.90878296 -125.47685242]
[220.47042847 -110.04357147]
[213.78840637 -95.90371704]
[203.39352417 -84.19965363]
[190.11697388 -75.87947845]
[175.02375793 -71.62023163]
[159.32731628 -71.77278900]
[155.01972961 -57.40460968]
[150.71214294 -43.03642273]
[146.40457153 -28.66823959]
[158.79339600 -23.49994278]
[170.61596680 -17.14215851]
[181.75839233 -9.65612125]
[192.11337280 -1.11393201]
[201.58114624 8.40213394]
[210.07055664 18.80042458]
[217.49983215 29.98078537]
[223.79739380 41.83553696]
[228.90260315 54.25049973]
[232.76629639 67.10609436]
[235.35125732 80.27851105]
[236.63258362 93.64086914]
[236.59793091 107.06447601]
[235.24763489 120.42004395]
[232.59469604 133.57893372]
[228.66468811 146.41441345]
[223.49543762 158.80285645]
[217.13674927 170.62493896]
[209.64985657 181.76678467]
[201.10687256 192.12110901]
[191.59008789 201.58816528]
[181.19114685 210.07678223]
[170.01022339 217.50518799]
[158.15498352 223.80184937]
[145.73962402 228.90611267]
[132.88374329 232.76881409]
[119.71112823 235.35276794]
[106.34867096 236.63305664]
[92.92506409 236.59738159]
[79.56959534 235.24606323]
[66.41091156 232.59213257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[5 19]
[6 18]
[8 15]
[9 14]
[46 119]
[47 118]
[48 117]
[49 116]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
