%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAGCCCUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACxxxxxxxxxxAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[310.91442871 264.40487671]
[300.70092773 253.41921997]
[290.48745728 242.43354797]
[280.27398682 231.44789124]
[270.06048584 220.46221924]
[259.84701538 209.47656250]
[248.24568176 199.96820068]
[235.46832275 192.11077881]
[222.69096375 184.25334167]
[209.91360474 176.39591980]
[197.13624573 168.53849792]
[184.35888672 160.68107605]
[171.58152771 152.82363892]
[158.80418396 144.96621704]
[150.28834534 154.59497070]
[140.20983887 162.62918091]
[128.86434937 168.81781006]
[116.58738708 172.96421814]
[103.74440765 174.93232727]
[90.71987915 174.65112305]
[77.90580750 172.11708069]
[65.68994904 167.39468384]
[54.44404221 160.61479187]
[44.51251984 151.97108459]
[36.20196915 141.71450806]
[29.77164459 130.14604187]
[25.42542648 117.60778046]
[23.30535126 104.47295380]
[23.48700333 91.13470459]
[8.48781490 91.29074097]
[-6.51137304 91.44677734]
[-21.51056099 91.60281372]
[-28.98122406 105.02238464]
[-42.16902161 112.89496613]
[-57.52650833 113.10287476]
[-70.92259216 105.59018707]
[-78.75379944 92.37776947]
[-78.91356659 77.01971436]
[-71.35892487 63.64724350]
[-58.12203217 55.85749054]
[-42.76354599 55.74586105]
[-29.41481972 63.34238052]
[-21.66659737 76.60363007]
[-6.66740942 76.44759369]
[8.33177853 76.29155731]
[23.33096695 76.13552094]
[29.10723877 62.29230118]
[18.66742706 51.52149200]
[8.22761440 40.75068283]
[-2.21219778 29.97987556]
[-12.65200996 19.20906639]
[-25.55424118 18.21593285]
[-34.02980042 8.97559261]
[-33.91394043 -3.16087699]
[-44.12741852 -14.14654160]
[-59.95322037 -18.44491959]
[-63.88144684 -34.36663818]
[-51.87107849 -45.53279495]
[-36.27735138 -40.45660782]
[-33.14175415 -24.36002159]
[-22.92827415 -13.37435722]
[-5.91978168 -9.16590023]
[-1.88120174 8.76925373]
[8.55861092 19.54006195]
[18.99842262 30.31087112]
[29.43823624 41.08168030]
[39.87804794 51.85248947]
[47.21944046 44.09769058]
[55.54827118 37.44631195]
[64.70070648 32.02217102]
[74.49766541 27.92502213]
[84.74835968 25.22871208]
[95.25395966 23.97986603]
[105.81147766 24.19709396]
[116.21769714 25.87072563]
[126.27306366 28.96311378]
[135.78552246 33.40945816]
[144.57417297 39.11914825]
[152.47276306 45.97762299]
[159.33273315 53.84864426]
[165.02610779 62.57701111]
[169.44781494 71.99161530]
[172.51766968 81.90880585]
[174.18177795 92.13594818]
[174.41351318 102.47518921]
[173.21386719 112.72726440]
[170.61143494 122.69535828]
[166.66160583 132.18885803]
[179.43896484 140.04629517]
[192.21632385 147.90371704]
[204.99368286 155.76113892]
[217.77102661 163.61856079]
[230.54838562 171.47599792]
[243.32574463 179.33341980]
[256.10311890 187.19084167]
[250.03778076 173.47181702]
[249.96366882 158.47200012]
[255.89312744 144.69369507]
[266.83700562 134.43545532]
[280.96960449 129.40855408]
[295.93328857 130.45161438]
[309.23178101 137.39062500]
[318.64660645 149.06799316]
[322.60714722 163.53569031]
[320.45272827 178.38015747]
[312.54269409 191.12503052]
[300.19665527 199.64414978]
[285.47421265 202.51635742]
[270.83267212 199.26307678]
[281.04617310 210.24874878]
[291.25964355 221.23440552]
[301.47311401 232.22007751]
[311.68661499 243.20573425]
[321.90008545 254.19140625]
[334.40805054 245.85189819]
[348.09182739 239.62693787]
[362.59698486 235.67774963]
[377.54785156 234.10662842]
[392.55709839 234.95426941]
[407.23596191 238.19873047]
[421.20428467 243.75596619]
[434.10018921 251.48202515]
[445.58963013 261.17678833]
[455.37506104 272.58911133]
[463.20300293 285.42343140]
[468.87063599 299.34729004]
[472.23123169 314.00003052]
[473.19769287 329.00210571]
[471.74499512 343.96493530]
[467.91079712 358.50091553]
[461.79437256 372.23355103]
[453.55416870 384.80715942]
[443.40362549 395.89599609]
[431.60565186 405.21289062]
[418.46588135 412.51647949]
[404.32464600 417.61758423]
[389.54821777 420.38409424]
[374.51934814 420.74432373]
[359.62734985 418.68896484]
[345.25796509 414.27124023]
[331.78332520 407.60559082]
[319.55255127 398.86465454]
[308.88238525 388.27487183]
[300.04919434 376.11050415]
[293.28186035 362.68667603]
[288.75561523 348.35110474]
[286.58767700 333.47506714]
[286.83425903 318.44390869]
[289.48895264 303.64700317]
[294.48300171 289.46759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[7 95]
[8 94]
[9 93]
[10 92]
[11 91]
[12 90]
[13 89]
[14 88]
[29 46]
[30 45]
[31 44]
[32 43]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
