%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACGAAAAAAACUCUACCUCUCUAUACUAAUCUCCCUACAAAUCUCCUUAAUUAUAACAUUCACxxxxxxxxxxAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.71495056]
[92.50000000 227.71495056]
[92.50000000 212.71495056]
[92.50000000 197.71495056]
[92.50000000 182.71495056]
[92.50000000 167.71495056]
[92.50000000 152.71495056]
[92.50000000 137.71495056]
[92.50000000 122.71495056]
[92.50000000 107.71495056]
[89.37153625 93.04482269]
[83.25221252 79.34979248]
[77.13288879 65.65476227]
[71.01356506 51.95972824]
[56.98485947 57.28149033]
[42.67285538 61.78618622]
[28.12510109 65.45885468]
[13.38991737 68.28730011]
[-1.48374403 70.26211548]
[-16.44647408 71.37675476]
[-31.44856834 71.62750244]
[-46.44019318 71.01353455]
[-61.37154388 69.53688049]
[-76.19301605 67.20246124]
[-90.85538483 64.01801300]
[-105.30993652 59.99413300]
[-119.50865936 55.14417267]
[-133.40437317 49.48425293]
[-146.95094299 43.03316879]
[-160.10333252 35.81235886]
[-172.81788635 27.84580040]
[-185.05233765 19.15996170]
[-196.76606750 9.78369808]
[-207.92015076 -0.25184461]
[-218.47753906 -10.91332912]
[-228.40315247 -22.16534042]
[-237.66404724 -33.97049713]
[-246.22943115 -46.28958511]
[-254.07084656 -59.08168411]
[-261.16226196 -72.30429840]
[-267.48013306 -85.91349792]
[-273.00344849 -99.86407471]
[-277.71386719 -114.10969543]
[-281.59573364 -128.60302734]
[-284.63616943 -143.29594421]
[-286.82504272 -158.13960266]
[-288.15512085 -173.08473206]
[-288.62197876 -188.08164978]
[-288.22406006 -203.08056641]
[-286.96267700 -218.03164673]
[-284.84201050 -232.88520813]
[-281.86914062 -247.59193420]
[-278.05389404 -262.10296631]
[-273.40899658 -276.37005615]
[-267.94985962 -290.34588623]
[-261.69461060 -303.98397827]
[-254.66401672 -317.23904419]
[-246.88145447 -330.06704712]
[-238.37277222 -342.42535400]
[-229.16624451 -354.27294922]
[-219.29243469 -365.57043457]
[-208.78414917 -376.28033447]
[-197.67630005 -386.36703491]
[-186.00578308 -395.79702759]
[-173.81137085 -404.53900146]
[-161.13356018 -412.56390381]
[-148.01449585 -419.84506226]
[-134.49772644 -426.35833740]
[-120.62815857 -432.08206177]
[-106.45187378 -436.99719238]
[-92.01596832 -441.08746338]
[-77.36838531 -444.33926392]
[-62.55779648 -446.74176025]
[-47.63338852 -448.28701782]
[-32.64474487 -448.96987915]
[-17.64165688 -448.78805542]
[-2.67396235 -447.74221802]
[12.20861721 -445.83575439]
[26.95664215 -443.07504272]
[41.52112198 -439.46926880]
[55.85367584 -435.03039551]
[69.90668488 -429.77316284]
[83.63347626 -423.71502686]
[96.98844910 -416.87612915]
[109.92723083 -409.27920532]
[122.40685272 -400.94943237]
[134.38584900 -391.91455078]
[145.82441711 -382.20449829]
[156.68458557 -371.85159302]
[166.93026733 -360.89022827]
[176.52740479 -349.35678101]
[185.44415283 -337.28958130]
[193.65086365 -324.72869873]
[201.12028503 -311.71588135]
[207.82759094 -298.29434204]
[213.75053406 -284.50866699]
[218.86940002 -270.40466309]
[223.16722107 -256.02917480]
[226.62968445 -241.42997742]
[229.24531555 -226.65553284]
[231.00541687 -211.75492859]
[231.90412903 -196.77767944]
[231.93849182 -181.77352905]
[231.10836792 -166.79232788]
[229.41651917 -151.88381958]
[226.86857605 -137.09756470]
[223.47299194 -122.48264313]
[219.24105835 -108.08763123]
[214.18681335 -93.96033478]
[208.32707214 -80.14769745]
[201.68128967 -66.69558716]
[194.27153015 -53.64870071]
[186.12243652 -41.05037308]
[177.26104736 -28.94246292]
[167.71681213 -17.36518288]
[157.52143860 -6.35699844]
[146.70880127 4.04552603]
[135.31480408 13.80783272]
[123.37731171 22.89749336]
[110.93596649 31.28431129]
[98.03211212 38.94042587]
[84.70859528 45.84040451]
[90.82791901 59.53543472]
[96.94724274 73.23046875]
[103.06656647 86.92549896]
[104.78327179 72.02405548]
[110.38840485 58.11066437]
[119.48097229 46.18065262]
[131.41052246 37.08747101]
[145.32362366 31.48163223]
[160.22497559 29.76416397]
[175.04855347 32.05792999]
[188.73393250 38.19884491]
[200.30204773 47.74758911]
[208.92536926 60.02107239]
[213.98698425 74.14127350]
[215.12480164 89.09805298]
[212.25743103 103.82144165]
[205.58998108 117.25815582]
[195.59945679 128.44696045]
[183.00051880 136.58741760]
[168.69451904 141.09718323]
[153.70483398 141.65364075]
[139.10383606 138.21697998]
[125.93601990 131.03305054]
[115.14340973 120.61579132]
[107.50000000 107.71495056]
[107.50000000 122.71495056]
[107.50000000 137.71495056]
[107.50000000 152.71495056]
[107.50000000 167.71495056]
[107.50000000 182.71495056]
[107.50000000 197.71495056]
[107.50000000 212.71495056]
[107.50000000 227.71495056]
[107.50000000 242.71495056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 125]
[12 124]
[13 123]
[14 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
