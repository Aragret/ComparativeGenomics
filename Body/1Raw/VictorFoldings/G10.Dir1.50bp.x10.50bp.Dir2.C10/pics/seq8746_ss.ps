%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCGCUGUCGCCUUAAUCCAAGCCUACGUUUUCACACUUCUAGUAAGCCUCUACCUGCACxxxxxxxxxxCCAAGACCUCAACCCCUGACCCCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCGCUGUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.78804779 285.48486328]
[114.78804779 270.48486328]
[114.78804779 255.48486328]
[114.78804779 240.48486328]
[114.78804779 225.48486328]
[114.78804779 210.48486328]
[114.78804779 195.48486328]
[114.78804779 180.48486328]
[114.78804779 165.48486328]
[114.78804779 150.48486328]
[111.08188629 135.94993591]
[103.89937592 122.78134918]
[96.71686554 109.61276245]
[90.35855865 104.56737518]
[89.52516174 96.09466553]
[82.61816406 82.77951050]
[75.71116638 69.46435547]
[60.91388702 64.59831238]
[54.09888840 50.99645996]
[58.82910538 36.91950607]
[51.92210770 23.60435104]
[38.13730621 29.53537178]
[23.96046638 34.45624542]
[9.46550274 38.34131622]
[-5.27201509 41.17033386]
[-20.17525101 42.92854309]
[-35.16650772 43.60677719]
[-50.16762543 43.20150375]
[-65.10039520 41.71483612]
[-79.88696289 39.15452194]
[-94.45023346 35.53391266]
[-108.71428680 30.87188148]
[-122.60475159 25.19273758]
[-136.04920959 18.52608681]
[-148.97756958 10.90668774]
[-161.32243347 2.37426496]
[-173.01942444 -7.02669764]
[-184.00756836 -17.24718666]
[-194.22958374 -28.23391724]
[-203.63217163 -39.92960739]
[-212.16630554 -52.27328491]
[-219.78749084 -65.20059204]
[-226.45600891 -78.64412689]
[-232.13706970 -92.53380585]
[-236.80107117 -106.79721069]
[-240.42370605 -121.35998535]
[-242.98606873 -136.14619446]
[-244.47480774 -151.07876587]
[-244.88215637 -166.07981873]
[-244.20599365 -181.07116699]
[-242.44985962 -195.97465515]
[-239.62287903 -210.71255493]
[-235.73982239 -225.20805359]
[-230.82090759 -239.38557434]
[-224.89179993 -253.17120361]
[-217.98339844 -266.49307251]
[-210.13172913 -279.28167725]
[-201.37771606 -291.47042847]
[-191.76701355 -302.99569702]
[-181.34973145 -313.79745483]
[-170.18016052 -323.81933594]
[-158.31654358 -333.00915527]
[-145.82073975 -341.31893921]
[-132.75788879 -348.70538330]
[-119.19609070 -355.13000488]
[-105.20606232 -360.55926514]
[-90.86074066 -364.96487427]
[-76.23491669 -368.32388306]
[-61.40483093 -370.61874390]
[-46.44781494 -371.83752441]
[-31.44184494 -371.97387695]
[-16.46515465 -371.02703857]
[-1.59582555 -369.00198364]
[13.08861828 -365.90927124]
[27.51161957 -361.76501465]
[41.59798050 -356.59085083]
[55.27426147 -350.41369629]
[68.46916199 -343.26580811]
[81.11388397 -335.18441772]
[93.14250946 -326.21170044]
[104.49232483 -316.39437866]
[115.10415649 -305.78369141]
[124.92266846 -294.43493652]
[133.89668274 -282.40725708]
[141.97941589 -269.76339722]
[149.12872314 -256.56927490]
[155.30732727 -242.89364624]
[160.48301697 -228.80783081]
[164.62879944 -214.38528442]
[167.72308350 -199.70117188]
[169.74971008 -184.83204651]
[170.69813538 -169.85546875]
[170.56341553 -154.84947205]
[169.34623718 -139.89233398]
[167.05294800 -125.06200409]
[163.69549561 -110.43581390]
[159.29141235 -96.09002686]
[153.86364746 -82.09941864]
[147.44049072 -68.53694153]
[140.05543518 -55.47330093]
[131.74697876 -42.97660446]
[122.55844879 -31.11200905]
[112.53774261 -19.94136810]
[101.73710632 -9.52292347]
[90.21284485 0.08900908]
[78.02505493 8.84431648]
[65.23725891 16.69735336]
[72.14426422 30.01250839]
[86.37637329 34.25309372]
[93.57073212 47.65816116]
[89.02632141 62.55735779]
[95.93331909 75.87251282]
[102.84031677 89.18766785]
[109.88545227 102.43025208]
[117.06796265 115.59883881]
[124.25046539 128.76742554]
[124.94855499 113.78367615]
[129.14678955 99.38315582]
[136.61021423 86.37173462]
[146.92120361 75.47752380]
[159.50271606 67.31018066]
[173.65069580 62.32675171]
[188.57341003 60.80611420]
[203.43579102 62.83335495]
[217.40612793 68.29503632]
[229.70260620 76.88552094]
[239.63713074 88.12407684]
[246.65376282 101.38179016]
[250.35984802 115.91674805]
[250.54797363 130.91557312]
[247.20762634 145.53890991]
[240.52572632 158.96844482]
[230.87620544 170.45263672]
[218.79904175 179.34883118]
[204.97010803 185.15919495]
[190.16325378 187.55857849]
[175.20707703 186.41270447]
[160.93855286 181.78569031]
[148.15614319 173.93649292]
[137.57516479 163.30432129]
[129.78804016 150.48486328]
[129.78804016 165.48486328]
[129.78804016 180.48486328]
[129.78804016 195.48486328]
[129.78804016 210.48486328]
[129.78804016 225.48486328]
[129.78804016 240.48486328]
[129.78804016 255.48486328]
[129.78804016 270.48486328]
[129.78804016 285.48486328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 116]
[12 115]
[13 114]
[15 113]
[16 112]
[17 111]
[20 108]
[21 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
