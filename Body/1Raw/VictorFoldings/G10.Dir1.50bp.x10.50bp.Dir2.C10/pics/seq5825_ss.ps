%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACUCCUACCUAUCUCCCCUUUUAxxxxxxxxxxGACCUGCGACUCCUUGACGUUGACAAUCGAGUAGUACUCCCGAUUGAAGCCCCCAUUCGUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 378.40014648]
[92.50000000 363.40014648]
[92.50000000 348.40014648]
[92.50000000 333.40014648]
[92.50000000 318.40014648]
[92.50000000 303.40014648]
[92.50000000 288.40014648]
[92.50000000 273.40014648]
[92.50000000 258.40014648]
[92.50000000 243.40013123]
[77.95760345 239.84947205]
[64.67964935 232.91723633]
[53.43997574 223.00253296]
[44.89479446 210.67842102]
[39.54439163 196.65881348]
[37.70384216 181.75711060]
[39.48443985 166.83898926]
[44.78699112 152.77214050]
[53.30733109 140.37577820]
[64.55376434 130.37292480]
[77.87543488 123.34829712]
[92.50000000 119.71406555]
[79.61676025 105.42381287]
[83.69407654 86.62049866]
[76.23916626 73.60418701]
[69.21239471 67.66480255]
[68.76778412 60.23863220]
[61.58527756 47.07004929]
[54.26617050 33.97689819]
[46.81126022 20.96058655]
[39.35634995 7.94427776]
[31.23480797 -4.66685057]
[22.46860123 -16.83868790]
[13.70239353 -29.01052475]
[4.93618584 -41.18236160]
[-8.21929741 -33.93732071]
[-22.15217209 -28.33086205]
[-36.65925598 -24.44474602]
[-51.52899170 -22.33564377]
[-66.54453278 -22.03430939]
[-81.48691559 -23.54513931]
[-96.13822937 -26.84609985]
[-110.28482056 -31.88905525]
[-123.72038269 -38.60046387]
[-136.24899292 -46.88245010]
[-147.68794250 -56.61424255]
[-157.87042236 -67.65392303]
[-166.64793396 -79.84049988]
[-173.89248657 -92.99625397]
[-179.49841309 -106.92933655]
[-183.38398743 -121.43656921]
[-185.49253845 -136.30638123]
[-185.79330444 -151.32192993]
[-184.28192139 -166.26426697]
[-180.98040771 -180.91545105]
[-175.93693542 -195.06184387]
[-169.22502136 -208.49716187]
[-160.94256592 -221.02546692]
[-151.21034241 -232.46405029]
[-140.17028809 -242.64611816]
[-127.98337555 -251.42317200]
[-114.82735443 -258.66723633]
[-100.89405823 -264.27264404]
[-86.38668823 -268.15768433]
[-71.51679230 -270.26565552]
[-56.50122452 -270.56588745]
[-41.55895615 -269.05392456]
[-26.90789032 -265.75186157]
[-12.76167870 -260.70785522]
[0.67338318 -253.99545288]
[13.20137215 -245.71252441]
[24.63959312 -235.97987366]
[34.82124710 -224.93943787]
[43.59784698 -212.75219727]
[50.84141159 -199.59590149]
[56.44630814 -185.66239929]
[60.33079529 -171.15487671]
[62.43823242 -156.28491211]
[62.73788071 -141.26933289]
[61.22537613 -126.32711792]
[57.92277145 -111.67617798]
[52.87822723 -97.53015137]
[46.16531372 -84.09534454]
[37.88191986 -71.56766510]
[28.14884377 -60.12980652]
[17.10802269 -49.94856644]
[25.87422943 -37.77672958]
[34.64043808 -25.60489464]
[43.40664291 -13.43305779]
[48.70494461 -27.46616173]
[62.91297150 -32.27573395]
[75.64580536 -24.34636307]
[77.59677887 -9.47378159]
[67.33988190 1.47135985]
[52.37265778 0.48936722]
[59.82756805 13.50567627]
[67.28247833 26.52198601]
[73.37536621 30.79075050]
[74.75386047 39.88754272]
[81.93637085 53.05612564]
[89.25547028 66.14927673]
[96.71038055 79.16558838]
[111.23516083 82.14879608]
[120.20747375 93.95415497]
[135.16772461 95.04546356]
[150.12797546 96.13677216]
[165.08822632 97.22808838]
[180.04846191 98.31939697]
[195.00871277 99.41070557]
[209.98843384 100.19055176]
[224.98112488 100.65859222]
[239.97383118 101.12663269]
[255.99391174 95.57746887]
[265.76101685 109.43531036]
[255.14854431 122.65695190]
[239.50578308 116.11933136]
[224.51309204 115.65129089]
[209.52038574 115.18325043]
[205.44708252 117.78778839]
[199.68249512 117.81643677]
[193.91740417 114.37095642]
[178.95715332 113.27964783]
[163.99690247 112.18833160]
[149.03666687 111.09702301]
[134.07641602 110.00571442]
[119.11616516 108.91440582]
[116.22283936 113.48012543]
[112.26412201 117.16058350]
[107.50000000 119.71406555]
[122.12456512 123.34829712]
[135.44624329 130.37292480]
[146.69267273 140.37577820]
[155.21301270 152.77214050]
[160.51556396 166.83898926]
[162.29615784 181.75711060]
[160.45561218 196.65881348]
[155.10520935 210.67842102]
[146.56002808 223.00253296]
[135.32034302 232.91723633]
[122.04239655 239.84947205]
[107.50000000 243.40013123]
[107.50000000 258.40014648]
[107.50000000 273.40014648]
[107.50000000 288.40014648]
[107.50000000 303.40014648]
[107.50000000 318.40014648]
[107.50000000 333.40014648]
[107.50000000 348.40014648]
[107.50000000 363.40014648]
[107.50000000 378.40014648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[22 129]
[24 102]
[25 101]
[27 100]
[28 99]
[29 97]
[30 96]
[31 95]
[32 89]
[33 88]
[34 87]
[35 86]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 118]
[111 117]
[112 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
