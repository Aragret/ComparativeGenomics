%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGACCCCCGAAACCAGACGAGCUACCUAAGAACAGCUAAAAGAGCACACCCGUCUAUGUAxxxxxxxxxxGUCACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.72988129 401.37570190]
[88.72988129 386.37570190]
[88.72988129 371.37570190]
[88.72988129 356.37570190]
[88.72988129 341.37570190]
[88.72988129 326.37570190]
[88.72988129 311.37570190]
[88.72988129 296.37570190]
[88.72988129 281.37570190]
[88.72988129 266.37570190]
[74.78292084 263.68896484]
[61.57281113 258.45910645]
[49.55905914 250.86636353]
[39.15986633 241.17312622]
[30.73757362 229.71498108]
[24.58605766 216.88903809]
[20.92045212 203.14016724]
[19.86963463 188.94558716]
[21.47170067 174.79829407]
[25.67257500 161.18995667]
[32.32784653 148.59375000]
[41.20771408 137.44804382]
[52.00495148 128.14100647]
[64.34549713 120.99716949]
[77.80145264 116.26608276]
[91.90589142 114.11360931]
[83.73806000 99.49233246]
[92.80198669 85.40900421]
[93.11404419 70.41224670]
[93.42610168 55.41549683]
[80.55902863 49.48680115]
[70.96147156 39.12484741]
[66.06443024 25.92340088]
[66.57939148 11.89579296]
[72.39514160 -0.83211142]
[82.59965515 -10.34408855]
[95.62296295 -15.22203255]
[96.24694061 -30.20904732]
[96.87091827 -45.19606400]
[97.49489594 -60.18307877]
[98.11887360 -75.17009735]
[98.74285126 -90.15711212]
[99.36682892 -105.14412689]
[99.99080658 -120.13114166]
[100.61478424 -135.11816406]
[85.74890900 -137.20924377]
[71.15958405 -140.74739075]
[56.98731995 -145.69851685]
[43.36860275 -152.01493835]
[30.43458748 -159.63584900]
[18.30984497 -168.48780823]
[7.11114311 -178.48561096]
[-3.05366540 -189.53292847]
[-12.08668518 -201.52340698]
[-19.90092087 -214.34153748]
[-26.42111397 -227.86387634]
[-31.58447266 -241.96022034]
[-35.34126663 -256.49478149]
[-37.65531921 -271.32757568]
[-38.50434113 -286.31576538]
[-37.88015366 -301.31500244]
[-35.78877258 -316.18081665]
[-32.25033951 -330.77008057]
[-27.29892731 -344.94226074]
[-20.98222542 -358.56085205]
[-13.36106968 -371.49468994]
[-4.50885677 -383.61926270]
[5.48916006 -394.81777954]
[16.53669167 -404.98236084]
[28.52734184 -414.01513672]
[41.34563065 -421.82913208]
[54.86810684 -428.34902954]
[68.96453857 -433.51211548]
[83.49916840 -437.26861572]
[98.33201599 -439.58236694]
[113.32022858 -440.43109131]
[128.31945801 -439.80661011]
[143.18524170 -437.71493530]
[157.77442932 -434.17620850]
[171.94648743 -429.22451782]
[185.56495667 -422.90753174]
[198.49867249 -415.28613281]
[210.62306213 -406.43368530]
[221.82136536 -396.43542480]
[231.98573303 -385.38769531]
[241.01826477 -373.39685059]
[248.83198547 -360.57843018]
[255.35163879 -347.05581665]
[260.51443481 -332.95928955]
[264.27066040 -318.42456055]
[266.58410645 -303.59167480]
[267.43252563 -288.60345459]
[266.80773926 -273.60424805]
[264.71575928 -258.73849487]
[261.17675781 -244.14938354]
[256.22476196 -229.97741699]
[249.90753174 -216.35906982]
[242.28585815 -203.42550659]
[233.43315125 -191.30130005]
[223.43469238 -180.10319519]
[212.38674927 -169.93905640]
[200.39573669 -160.90675354]
[187.57713318 -153.09329224]
[174.05439758 -146.57389832]
[159.95776367 -141.41139221]
[145.42298889 -137.65547180]
[130.59004211 -135.34230042]
[115.60179901 -134.49418640]
[114.97782135 -119.50716400]
[114.35384369 -104.52014923]
[113.72986603 -89.53313446]
[113.10588837 -74.54611969]
[112.48191071 -59.55910492]
[111.85793304 -44.57208633]
[111.23395538 -29.58507156]
[110.60997772 -14.59805489]
[124.82533264 -7.36452532]
[134.51060486 5.38110113]
[137.69473267 21.12844849]
[133.69338989 36.74816513]
[123.25532532 49.11379242]
[108.42285919 55.72755432]
[108.11080170 70.72430420]
[107.79874420 85.72106171]
[115.35920715 94.63314056]
[114.99454498 106.31444550]
[106.89290619 114.73758698]
[122.26531219 118.58214569]
[136.51188660 125.50703430]
[149.02313232 135.21350098]
[159.26428223 147.28382874]
[166.79821777 161.19935608]
[171.30406189 176.36268616]
[172.59088135 192.12344360]
[170.60577393 207.80606079]
[165.43601990 222.73880005]
[157.30528259 236.28251648]
[146.56388855 247.85798645]
[133.67376709 256.97070312]
[119.18856049 263.23202515]
[103.72988129 266.37570190]
[103.72988129 281.37570190]
[103.72988129 296.37570190]
[103.72988129 311.37570190]
[103.72988129 326.37570190]
[103.72988129 341.37570190]
[103.72988129 356.37570190]
[103.72988129 371.37570190]
[103.72988129 386.37570190]
[103.72988129 401.37570190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 127]
[28 124]
[29 123]
[30 122]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
