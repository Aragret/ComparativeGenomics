%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCCACUCUGCAUCAACUGAACGCAAAUCAGCCACUUUAAUUAAGCUAAGCCCUUACUAxxxxxxxxxxAACAGACCGCAACCUCAACACCACCUUCUUCGACCCCGCCGGAGGAGGAGACCCCAUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[43.68569183 291.08923340]
[30.26152802 286.60906982]
[32.08789825 302.32452393]
[20.04621124 311.09075928]
[14.26993942 324.93395996]
[8.49366665 338.77719116]
[2.71739459 352.62039185]
[5.35111761 368.80667114]
[-7.51918554 378.96972656]
[-22.65365028 372.65466309]
[-24.48323631 356.35787964]
[-11.12582302 346.84414673]
[-5.34955072 333.00091553]
[0.42672172 319.15768433]
[6.20299435 305.31448364]
[3.96346474 290.58920288]
[16.41831017 280.83279419]
[0.57022184 272.62710571]
[-14.47991276 263.03604126]
[-28.61131287 252.13655090]
[-41.71056747 240.01612854]
[-53.67255402 226.77203369]
[-64.40126801 212.51054382]
[-73.81061554 197.34613037]
[-81.82508087 181.40049744]
[-88.38034821 164.80158997]
[-93.42380524 147.68261719]
[-96.91497803 130.18099976]
[-111.81687927 131.89369202]
[-126.71878052 133.60636902]
[-141.62068176 135.31906128]
[-150.08728027 148.46633911]
[-165.03919983 153.04611206]
[-179.41659546 146.89595032]
[-186.43090820 132.91976929]
[-182.77018738 117.71671295]
[-170.16291809 108.46517944]
[-154.56187439 109.53346252]
[-143.33337402 120.41716003]
[-128.43147278 118.70447540]
[-113.52957153 116.99178314]
[-98.62767029 115.27909088]
[-98.71479034 85.89914703]
[-94.47981262 56.82590103]
[-86.01485443 28.69169998]
[-73.50403595 2.10847068]
[-86.28138733 -5.74895525]
[-99.05874634 -13.60638046]
[-114.93503571 -11.29918957]
[-126.53853607 -22.37792015]
[-124.96804047 -38.34391785]
[-111.42829895 -46.94943619]
[-96.30583954 -41.59305954]
[-91.20132446 -26.38373756]
[-78.42396545 -18.52631187]
[-65.64660645 -10.66888714]
[-59.33889771 -19.57222557]
[-52.55318069 -28.11685562]
[-45.30981064 -36.27714157]
[-37.63052368 -44.02860641]
[-29.53835487 -51.34799576]
[-21.05757904 -58.21334839]
[-12.21363640 -64.60407257]
[-3.03306127 -70.50099182]
[6.45660686 -75.88642883]
[16.22689819 -80.74420929]
[26.24850464 -85.05976868]
[36.49135971 -88.82015991]
[46.92473984 -92.01410675]
[57.51733780 -94.63202667]
[68.23738098 -96.66605377]
[79.05271149 -98.11009979]
[89.93088531 -98.95983124]
[100.83926392 -99.21269226]
[111.74512482 -98.86792755]
[122.61575317 -97.92657471]
[133.41853333 -96.39145660]
[144.12106323 -94.26716614]
[154.69122314 -91.56009674]
[165.09732056 -88.27835846]
[175.30812073 -84.43179321]
[185.29301453 -80.03194427]
[195.02203369 -75.09201813]
[204.46598816 -69.62682343]
[213.59655762 -63.65275574]
[222.38633728 -57.18774414]
[230.80895996 -50.25117493]
[238.83917236 -42.86386490]
[246.45288086 -35.04797363]
[253.62722778 -26.82694626]
[260.34072876 -18.22544479]
[266.57318115 -9.26927662]
[272.30593872 0.01469360]
[277.52178955 9.59861279]
[282.20510864 19.45373154]
[286.34179688 29.55048180]
[289.91949463 39.85857773]
[292.92742920 50.34709549]
[295.35659790 60.98456573]
[297.19970703 71.73908234]
[298.45123291 82.57837677]
[299.10739136 93.46994019]
[299.16629028 104.38108826]
[298.62765503 115.27909088]
[313.52957153 116.99178314]
[328.43145752 118.70447540]
[343.33337402 120.41716003]
[358.23529053 122.12985229]
[373.13717651 123.84254456]
[388.03909302 125.55522919]
[402.94097900 127.26792145]
[417.84289551 128.98060608]
[429.07138062 118.09691620]
[444.67242432 117.02862549]
[457.27969360 126.28015900]
[460.94039917 141.48321533]
[453.92608643 155.45939636]
[439.54870605 161.60955811]
[424.59680176 157.02978516]
[416.13018799 143.88250732]
[401.22830200 142.16983032]
[386.32638550 140.45713806]
[371.42449951 138.74444580]
[356.52258301 137.03175354]
[341.62069702 135.31906128]
[326.71878052 133.60636902]
[311.81689453 131.89369202]
[296.91497803 130.18099976]
[294.27542114 144.08470154]
[290.65545654 157.76591492]
[286.07330322 171.15562439]
[280.55215454 184.18623352]
[274.11981201 196.79199219]
[266.80877686 208.90928650]
[258.65591431 220.47695923]
[249.70240784 231.43664551]
[239.99339294 241.73301697]
[229.57791138 251.31413269]
[218.50849915 260.13162231]
[206.84101868 268.14099121]
[194.63436890 275.30184937]
[181.95013428 281.57803345]
[168.85232544 286.93783569]
[155.40705872 291.35427856]
[141.68217468 294.80502319]
[127.74694061 297.27267456]
[113.67167664 298.74478149]
[99.52742004 299.21389771]
[85.38554382 298.67767334]
[71.31742096 297.13882446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[4 15]
[5 14]
[6 13]
[7 12]
[28 42]
[29 41]
[30 40]
[31 39]
[46 56]
[47 55]
[48 54]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
