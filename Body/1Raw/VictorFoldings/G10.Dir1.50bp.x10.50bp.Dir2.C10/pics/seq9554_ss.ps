%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUCAUUUACAUAAAUAUUAUACUAGCAUUUACCAUCUCACUUCUAGGAAUACUAGUAUAUxxxxxxxxxxUUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACAUAAAACCCUCAUUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 316.19302368]
[92.50000000 301.19302368]
[92.50000000 286.19302368]
[92.50000000 271.19302368]
[92.50000000 256.19302368]
[92.50000000 241.19302368]
[92.50000000 226.19302368]
[92.50000000 211.19302368]
[92.50000000 196.19302368]
[92.50000000 181.19302368]
[83.26860046 179.80361938]
[74.25651550 177.36814880]
[65.58187866 173.91853333]
[57.35838699 169.50000000]
[49.69384766 164.17045593]
[42.68871689 157.99977112]
[31.20891571 167.65451050]
[19.72911263 177.30926514]
[8.24931049 186.96400452]
[3.16953373 202.55656433]
[-12.92777348 205.68846130]
[-23.48308182 193.13786316]
[-17.63799286 177.81575012]
[-1.40543604 175.48420715]
[10.07436657 165.82946777]
[21.55416870 156.17471313]
[33.03396988 146.51997375]
[21.56286049 122.27490997]
[18.57906723 95.61959076]
[24.40544891 69.43825531]
[11.07502842 62.56076431]
[-2.25539160 55.68326950]
[-15.58581161 48.80577850]
[-28.91623306 41.92828751]
[-42.24665070 35.05079651]
[-55.57707214 28.17330360]
[-68.90749359 21.29581261]
[-84.71917725 21.84453773]
[-92.48229218 9.13299274]
[-105.81271362 2.25550103]
[-119.14313507 -4.62199068]
[-125.84943390 -4.69202328]
[-130.74729919 -7.71800327]
[-132.86599731 -12.05790234]
[-145.90675354 -19.46996689]
[-158.42997742 -10.74462223]
[-173.50016785 -8.32545853]
[-188.12510681 -12.69280243]
[-199.40103149 -22.97951508]
[-205.08906555 -37.14316177]
[-204.05987549 -52.37154007]
[-196.51779175 -65.64104462]
[-183.96031189 -74.31700897]
[-168.88072205 -76.67680359]
[-154.27308655 -72.25189972]
[-143.03776550 -61.92086792]
[-137.40553284 -47.73493195]
[-138.49468994 -32.51072311]
[-125.45393372 -25.09865761]
[-112.26564026 -17.95241165]
[-98.93521881 -11.07491970]
[-85.60479736 -4.19742727]
[-70.74658966 -5.23807764]
[-62.03000259 7.96539116]
[-48.69958115 14.84288311]
[-35.36915970 21.72037506]
[-22.03874016 28.59786606]
[-8.70831966 35.47535706]
[4.62210035 42.35285187]
[17.95252037 49.23034286]
[31.28294182 56.10783386]
[40.09588242 44.68225479]
[50.78482819 34.98905182]
[63.01504135 27.33178711]
[76.40350342 21.95026207]
[90.53093719 19.01300621]
[104.95490265 18.61200714]
[119.22370911 20.75982475]
[132.89048767 25.38919258]
[145.52723694 32.35513687]
[156.73820496 41.43950272]
[166.17233276 52.35779572]
[173.53413391 64.76809692]
[187.60041809 59.55851746]
[186.23446655 44.53955078]
[188.80081177 29.69033051]
[195.11857605 16.02205467]
[204.75166321 4.46392632]
[217.03878784 -4.20002413]
[231.13894653 -9.38411236]
[246.08886719 -10.74059296]
[260.86895752 -8.18298149]
[274.47271729 -1.89153945]
[285.97534180 7.69941568]
[294.59658813 19.93148804]
[308.66287231 14.72190857]
[322.72915649 9.51233006]
[336.79544067 4.30275106]
[347.04937744 -7.74579096]
[361.67160034 -4.91036987]
[375.73788452 -10.11994839]
[377.12078857 -25.32028961]
[384.96926880 -38.41090012]
[397.72500610 -46.79262543]
[412.85537720 -48.80127335]
[427.35623169 -44.03802109]
[438.34835815 -33.44861603]
[443.64932251 -19.13559532]
[442.20660400 -3.94081783]
[434.30661011 9.11878300]
[421.51794434 17.45021248]
[406.37979126 19.39925957]
[391.89782715 14.57894135]
[380.94747925 3.94633341]
[366.88119507 9.15591240]
[357.63336182 20.83183098]
[342.00500488 18.36903381]
[327.93872070 23.57861137]
[313.87246704 28.78819084]
[299.80618286 33.99776840]
[301.23236084 48.89459610]
[298.75192261 63.66430664]
[292.52804565 77.29910278]
[282.97949219 88.86705017]
[270.75253296 97.57579041]
[256.67715454 102.82676697]
[241.71073914 104.25642395]
[226.87290955 101.76132965]
[213.17611694 95.50563049]
[201.55651855 85.91030884]
[192.80999756 73.62480164]
[178.74371338 78.83438110]
[180.86494446 89.53968811]
[181.53753662 100.43238831]
[180.74945068 111.31733704]
[178.51481628 121.99954987]
[174.87365723 132.28765869]
[169.89118958 141.99736023]
[163.65669250 150.95471191]
[156.28182983 158.99925232]
[147.89872742 165.98687744]
[138.65756226 171.79240417]
[128.72387695 176.31182861]
[118.27563477 179.46418762]
[107.50000000 181.19302368]
[107.50000000 196.19302368]
[107.50000000 211.19302368]
[107.50000000 226.19302368]
[107.50000000 241.19302368]
[107.50000000 256.19302368]
[107.50000000 271.19302368]
[107.50000000 286.19302368]
[107.50000000 301.19302368]
[107.50000000 316.19302368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[16 27]
[17 26]
[18 25]
[19 24]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[39 62]
[40 61]
[41 60]
[44 59]
[45 58]
[83 132]
[84 131]
[95 120]
[96 119]
[97 118]
[98 117]
[100 115]
[101 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
