%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAAAxxxxxxxxxxCUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCAUCUGCCUACGACAAACAGACCUAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[222.34092712 542.55059814]
[222.34092712 527.55059814]
[222.34092712 512.55059814]
[222.34092712 497.55059814]
[222.34092712 482.55059814]
[222.34092712 467.55059814]
[222.34092712 452.55059814]
[222.34092712 437.55059814]
[222.34092712 422.55059814]
[222.34092712 407.55059814]
[219.39544678 392.84262085]
[213.61917114 378.99938965]
[207.84289551 365.15618896]
[202.06663513 351.31295776]
[186.12580872 350.77404785]
[171.95712280 343.32394409]
[162.40875244 330.40319824]
[159.42486572 314.55758667]
[163.64997864 298.93676758]
[174.29058838 286.66806030]
[168.22756958 272.94799805]
[162.16456604 259.22793579]
[147.25993347 260.29452515]
[132.86273193 256.18972778]
[120.71586609 247.39039612]
[112.29673004 234.94291687]
[108.63744354 220.33882141]
[110.19837189 205.33602905]
[116.81033325 191.74728394]
[127.69264984 181.22109985]
[121.62963104 167.50105286]
[115.56661987 153.78099060]
[109.50360870 140.06094360]
[103.44059753 126.34088898]
[84.25186157 121.39337158]
[73.82640076 104.54121399]
[58.92449570 102.82852173]
[44.02259445 101.11583710]
[29.20063400 108.13307190]
[15.86828995 98.58421326]
[17.74073410 82.29231262]
[32.89175415 76.01708221]
[45.73528290 86.21393585]
[60.63718414 87.92662048]
[75.53908539 89.63931274]
[77.70455933 85.55723572]
[80.54465485 81.91217041]
[83.97342682 78.81441498]
[87.88713837 76.35769653]
[85.09481812 61.61988831]
[82.30249023 46.88208008]
[79.51016235 32.14427567]
[64.48220062 32.53973770]
[49.58542252 30.51928520]
[35.20569992 26.13525581]
[21.71549797 19.50120354]
[9.46424675 10.78896999]
[-1.23071647 0.22422068]
[-10.09236717 -11.91939163]
[-16.89116669 -25.32731819]
[-21.45100975 -39.65225983]
[-23.65378571 -54.52317047]
[-23.44243813 -69.55485535]
[-20.82243919 -84.35795593]
[-15.86165524 -98.54903412]
[-8.68858242 -111.76051331]
[0.51098019 -123.65018463]
[11.49874115 -133.91006470]
[23.99009323 -142.27441406]
[37.66147614 -148.52656555]
[52.15877151 -152.50459290]
[67.10646057 -154.10542297]
[82.11737061 -153.28761292]
[96.80267334 -150.07232666]
[110.78199005 -144.54287720]
[123.69322205 -136.84246826]
[135.20193481 -127.17057037]
[145.01002502 -115.77769470]
[152.86344910 -102.95896149]
[158.55877686 -89.04639435]
[161.94847107 -74.40036774]
[162.94474792 -59.40024948]
[161.52180481 -44.43457413]
[157.71649170 -29.89099312]
[151.62738037 -16.14621925]
[143.41218567 -3.55627370]
[133.28370667 7.55273294]
[121.50428772 16.89305115]
[108.37905121 24.22274208]
[94.24797058 29.35195160]
[97.04029846 44.08975601]
[99.83261871 58.82756424]
[102.62494659 73.56536865]
[116.78713226 79.41184235]
[125.36497498 92.10708618]
[125.50501251 107.42795563]
[117.16065216 120.27787781]
[123.22366333 133.99792480]
[129.28668213 147.71798706]
[135.34968567 161.43803406]
[141.41270447 175.15809631]
[156.52243042 174.19815063]
[171.02168274 178.45767212]
[183.16595459 187.40400696]
[191.50094604 199.94187927]
[195.03674316 214.54734802]
[193.36535645 229.45307922]
[186.70770264 242.86221313]
[175.88461304 253.16493225]
[181.94763184 266.88497925]
[188.01063538 280.60504150]
[202.17770386 280.53219604]
[215.25827026 285.85968018]
[225.28138733 295.74887085]
[230.75047302 308.67666626]
[230.86674500 322.66986084]
[225.64572144 335.60626221]
[215.90985107 345.53668213]
[221.68611145 359.37991333]
[227.46238708 373.22314453]
[233.23866272 387.06634521]
[235.54473877 372.24468994]
[242.04205322 358.72488403]
[252.17437744 347.66430664]
[265.07434082 340.00982666]
[279.63763428 336.41668701]
[294.61755371 337.19250488]
[308.73175049 342.27084351]
[320.77197266 351.21694946]
[329.70748901 363.26504517]
[334.77340698 377.38369751]
[335.53604126 392.36428833]
[331.93011475 406.92440796]
[324.26431274 419.81762695]
[313.19482422 429.94024658]
[299.66934204 436.42565918]
[284.84564209 438.71868896]
[269.99273682 436.62310791]
[256.38214111 430.31820679]
[245.17895508 420.34381104]
[237.34092712 407.55059814]
[237.34092712 422.55059814]
[237.34092712 437.55059814]
[237.34092712 452.55059814]
[237.34092712 467.55059814]
[237.34092712 482.55059814]
[237.34092712 497.55059814]
[237.34092712 512.55059814]
[237.34092712 527.55059814]
[237.34092712 542.55059814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 121]
[12 120]
[13 119]
[14 118]
[20 111]
[21 110]
[22 109]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[36 45]
[37 44]
[38 43]
[49 93]
[50 92]
[51 91]
[52 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
