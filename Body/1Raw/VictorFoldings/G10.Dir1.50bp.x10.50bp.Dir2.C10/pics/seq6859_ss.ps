%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUACUACUCCGGAAAAAAAGAACCAUUUGGAUACAUAGGUAUGGUCUGAGCUAUGAUAUxxxxxxxxxxUCCGAUAAAAUCACCUUCCACCCUUACUACACAAUCAAAGACGCCCUCGGCUUACUUCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.13535309 394.22152710]
[96.13535309 379.22152710]
[96.13535309 364.22152710]
[96.13535309 349.22152710]
[96.13535309 334.22152710]
[96.13535309 319.22152710]
[96.13535309 304.22152710]
[96.13535309 289.22152710]
[96.13535309 274.22152710]
[96.13535309 259.22152710]
[81.15927887 254.97404480]
[67.96730804 246.68266296]
[57.62630081 235.00830078]
[50.97525024 220.88587952]
[48.55722809 205.44940186]
[50.57503128 189.94090271]
[56.87421417 175.61056519]
[66.95487213 163.61587524]
[80.01129913 154.92816162]
[94.99639893 150.25396729]
[94.68434143 135.25721741]
[94.37228394 120.26045990]
[91.83199310 135.04379272]
[80.77393341 145.17884827]
[65.82572174 146.42427063]
[53.24295044 138.25886536]
[48.29129791 124.09972382]
[53.04295349 109.87222290]
[65.50942230 101.53033447]
[80.47486115 102.56549835]
[65.97926331 98.70833588]
[51.48366928 94.85118103]
[42.31933212 95.66775513]
[36.72825241 90.76005554]
[22.31603622 86.60217285]
[7.90381956 82.44428253]
[-6.50839615 78.28639984]
[-0.61673659 92.08090210]
[-6.02579021 106.07168579]
[-19.66454506 112.31542969]
[-33.78954315 107.26722717]
[-40.38125992 93.79320526]
[-35.69722366 79.54329681]
[-22.39527512 72.60780334]
[-36.17765808 66.68784332]
[-52.39045334 69.15304565]
[-62.41905975 56.17771912]
[-55.94690323 41.10976410]
[-39.63198471 39.44980240]
[-30.25769234 52.90546036]
[-16.47531128 58.82542419]
[-2.35050893 63.87417984]
[12.06170750 68.03206635]
[26.47392273 72.18995667]
[40.88613892 76.34783936]
[55.34082794 80.35558319]
[69.83642578 84.21274567]
[84.33202362 88.06990051]
[98.55879974 83.31608582]
[100.99771881 67.68399811]
[114.94382477 62.45377350]
[124.08556366 50.56139374]
[133.10308838 38.57456207]
[135.21627808 22.89511490]
[149.05056763 17.37589073]
[158.06808472 5.38905907]
[167.08561707 -6.59777355]
[176.10314941 -18.58460617]
[165.40795898 -29.13431358]
[156.21438599 -41.01546097]
[148.68650818 -54.01601410]
[142.95864868 -67.90396118]
[139.13304138 -82.43146515]
[137.27796936 -97.33924866]
[137.42652893 -112.36128235]
[139.57606506 -127.22946930]
[143.68820190 -141.67846680]
[149.68959045 -155.45042419]
[157.47311401 -168.29956055]
[166.89984131 -179.99658203]
[177.80157471 -190.33270264]
[189.98374939 -199.12350464]
[203.22895813 -206.21209717]
[217.30081177 -211.47195435]
[231.94821167 -214.80921936]
[246.90972900 -216.16433716]
[261.91836548 -215.51313782]
[276.70629883 -212.86721802]
[291.00958252 -208.27380371]
[304.57296753 -201.81488037]
[317.15441895 -193.60571289]
[328.52938843 -183.79278564]
[338.49490356 -172.55125427]
[346.87307739 -160.08169556]
[353.51440430 -146.60668945]
[358.30038452 -132.36666870]
[361.14559937 -117.61579895]
[361.99923706 -102.61730957]
[360.84609985 -87.63887024]
[357.70675659 -72.94778442]
[352.63723755 -58.80623627]
[345.72802734 -45.46659470]
[337.10238647 -33.16692352]
[326.91427612 -22.12672806]
[315.34552002 -12.54302883]
[302.60256958 -4.58685970]
[288.91284180 1.59979212]
[274.52062988 5.90651846]
[259.68280029 8.25646114]
[244.66413879 8.60768223]
[229.73268127 6.95391369]
[215.15489197 3.32466912]
[201.19091797 -2.21528316]
[188.08998108 -9.56707668]
[179.07244873 2.41975641]
[170.05491638 14.40658855]
[161.03739929 26.39342117]
[159.56919861 41.21548843]
[145.08992004 47.59209061]
[136.07240295 59.57892227]
[134.55479431 66.86195374]
[126.74047089 71.71871948]
[124.96424103 86.50704193]
[110.35543823 92.58103943]
[114.81140137 97.25388336]
[116.82649231 104.38661957]
[115.16197205 112.59976196]
[109.36904144 119.94840240]
[109.68109894 134.94515991]
[109.99314880 149.94190979]
[124.03063965 153.52108765]
[136.64675903 160.61636353]
[146.97921753 170.73554993]
[154.32368469 183.18002319]
[158.18180847 197.09297180]
[158.29504395 211.51832581]
[154.66192627 225.46658325]
[147.53778076 237.98255920]
[137.41676331 248.21086121]
[124.99760437 255.45431519]
[111.13535309 259.22152710]
[111.13535309 274.22152710]
[111.13535309 289.22152710]
[111.13535309 304.22152710]
[111.13535309 319.22152710]
[111.13535309 334.22152710]
[111.13535309 349.22152710]
[111.13535309 364.22152710]
[111.13535309 379.22152710]
[111.13535309 394.22152710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 130]
[21 129]
[22 128]
[30 58]
[31 57]
[32 56]
[34 55]
[35 54]
[36 53]
[37 52]
[44 51]
[45 50]
[59 124]
[61 122]
[62 120]
[63 119]
[65 117]
[66 116]
[67 115]
[68 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
