%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUACACCUCCUAUGAAAAAACUUCCUACCACUCACCCUAGCAUUACUUAUAUGAUAUGUxxxxxxxxxxAGCAGGCAGUUGAGGUGGAUUAAACCAAACCCAGCUACGCAAAAUCUUAGCAUACUCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.70827484 257.93301392]
[86.70827484 242.93301392]
[86.70827484 227.93301392]
[86.70827484 212.93301392]
[86.70827484 197.93301392]
[86.70827484 182.93301392]
[86.70827484 167.93301392]
[86.70827484 152.93301392]
[86.70827484 137.93301392]
[86.70827484 122.93300629]
[83.59304810 115.95957184]
[83.06621552 109.19899750]
[84.73660278 103.47238159]
[87.97949219 99.39542389]
[92.02051544 97.31846619]
[81.14168549 86.99126434]
[70.26286316 76.66405487]
[59.38403702 66.33685303]
[48.50521088 56.00964737]
[37.62638474 45.68244171]
[39.15547180 60.60430145]
[32.50703812 74.05043030]
[19.72140312 81.89437866]
[4.72231579 81.72894287]
[-7.88719559 73.60488892]
[-14.23743248 60.01538849]
[-12.37958813 45.13088608]
[-2.88381124 33.51924515]
[11.33576488 28.74392891]
[25.91603088 32.27082062]
[17.14982414 20.09898186]
[8.38361740 7.92714548]
[-0.38259017 -4.24469137]
[-14.72607899 -10.92113590]
[-15.88559532 -25.77054024]
[-24.65180206 -37.94237518]
[-33.41801071 -50.11421204]
[-47.20346832 -44.06938934]
[-61.93878937 -41.02421188]
[-76.97938538 -41.10940170]
[-91.66783905 -44.31880569]
[-105.36262512 -50.50976181]
[-117.46613312 -59.40944290]
[-127.45075989 -70.62687683]
[-134.88188171 -83.67013550]
[-139.43679810 -97.96787262]
[-140.91871643 -112.89438629]
[-139.26528931 -127.79699707]
[-134.55120850 -142.02456665]
[-126.98483276 -154.95594788]
[-116.89898682 -166.02716064]
[-125.66519928 -178.19898987]
[-134.43141174 -190.37083435]
[-143.19761658 -202.54266357]
[-158.21757507 -199.82913208]
[-172.92517090 -203.90951538]
[-184.40017700 -213.97366333]
[-190.36424255 -228.02331543]
[-189.63317871 -243.26890564]
[-182.35214233 -256.68344116]
[-169.96679688 -265.60339355]
[-154.93624878 -268.25778198]
[-140.24484253 -264.11950684]
[-128.80955505 -254.01025391]
[-122.90087891 -239.93722534]
[-123.69197083 -224.69461060]
[-131.02577209 -211.30886841]
[-122.25956726 -199.13703918]
[-113.49336243 -186.96519470]
[-104.72714996 -174.79336548]
[-91.03023529 -180.85060120]
[-76.36748505 -183.92871094]
[-61.37933350 -183.89077759]
[-46.72092056 -180.73602295]
[-33.03348541 -174.59997559]
[-20.91631889 -165.74861145]
[-10.90049839 -154.56686401]
[-3.42563605 -141.54188538]
[1.17942786 -127.24179077]
[2.71108770 -112.29090118]
[1.09997416 -97.34247589]
[-3.58590770 -83.05019379]
[-11.14404583 -70.03953552]
[-21.24617195 -58.88042068]
[-12.47996521 -46.70858383]
[-3.71375823 -34.53674698]
[10.00271225 -28.73091316]
[11.78924656 -13.01089859]
[20.55545425 -0.83906192]
[29.32166100 11.33277512]
[38.08786774 23.50461197]
[47.95359039 34.80361557]
[58.83241653 45.13082123]
[69.71124268 55.45802689]
[80.59006500 65.78523254]
[91.46889496 76.11243439]
[102.34771729 86.43964386]
[116.41923523 91.63505554]
[131.39895630 90.85520935]
[146.37866211 90.07536316]
[161.35838318 89.29552460]
[164.65827942 74.56414795]
[171.81129456 61.26990891]
[182.28663635 50.39931488]
[195.30696106 42.75903702]
[209.90606689 38.91603851]
[225.00061035 39.15549469]
[239.47047424 43.45963287]
[252.24189758 51.50905991]
[262.36715698 62.70645523]
[269.09487915 76.22090149]
[271.92587280 91.04952240]
[270.64999390 106.09195709]
[265.36193848 120.23194122]
[256.45413208 132.42019653]
[244.58760071 141.75228882]
[230.64288330 147.53569031]
[215.65481567 149.34124756]
[200.73556519 147.03497314]
[186.99227905 140.78800964]
[175.44477844 131.06393433]
[166.94996643 118.58431244]
[162.13822937 104.27523804]
[147.15850830 105.05508423]
[132.17880249 105.83492279]
[117.19908142 106.61476898]
[130.71890259 113.11205292]
[144.23870850 119.60932922]
[159.20072937 120.67600250]
[172.19580078 128.16787720]
[180.61613464 140.58149719]
[182.77195740 155.42576599]
[178.23066711 169.72180176]
[167.90357971 180.60073853]
[153.86309814 185.87944031]
[138.92678833 184.49861145]
[126.09201050 176.73532104]
[117.93439484 164.14750671]
[116.09104156 149.26048279]
[108.89965820 136.09674072]
[101.70827484 122.93300629]
[101.70827484 137.93301392]
[101.70827484 152.93301392]
[101.70827484 167.93301392]
[101.70827484 182.93301392]
[101.70827484 197.93301392]
[101.70827484 212.93301392]
[101.70827484 227.93301392]
[101.70827484 242.93301392]
[101.70827484 257.93301392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[15 97]
[16 96]
[17 95]
[18 94]
[19 93]
[20 92]
[30 91]
[31 90]
[32 89]
[33 88]
[35 86]
[36 85]
[37 84]
[51 70]
[52 69]
[53 68]
[54 67]
[98 126]
[99 125]
[100 124]
[101 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
