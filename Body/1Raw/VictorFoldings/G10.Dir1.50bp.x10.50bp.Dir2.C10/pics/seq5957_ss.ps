%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAUCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGUAAGUxxxxxxxxxxCCCCAUUCUAUACCAACACCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.98078156 269.44665527]
[92.98078156 254.44664001]
[92.98078156 239.44664001]
[92.98078156 224.44664001]
[92.98078156 209.44664001]
[92.98078156 194.44664001]
[92.98078156 179.44664001]
[92.98078156 164.44664001]
[92.98078156 149.44664001]
[92.98078156 134.44664001]
[76.18847656 119.88294220]
[73.11827850 100.58289337]
[81.91794586 86.18624115]
[73.66565704 73.66027832]
[65.41336823 61.13431549]
[57.16107559 48.60835266]
[53.07282257 46.75156021]
[50.12037659 43.94904327]
[48.46351624 40.68764877]
[48.08256912 37.45518112]
[48.79437256 34.68017197]
[41.61186218 21.51158905]
[34.42935181 8.34300613]
[27.24684334 -4.82557678]
[22.67560387 -7.60466671]
[19.94299507 -11.48863697]
[19.16023445 -15.57385063]
[20.05636024 -19.04724121]
[13.70923138 -32.63819122]
[7.36210203 -46.22914124]
[1.01497257 -59.82009506]
[-5.33215714 -73.41104126]
[-19.46806908 -68.36025238]
[-34.01483536 -64.65538025]
[-48.84461212 -62.32897949]
[-63.82707596 -61.40150070]
[-78.83055878 -61.88109589]
[-93.72320557 -63.76354599]
[-108.37413025 -67.03230286]
[-122.65458679 -71.65865326]
[-136.43907166 -77.60193634]
[-149.60643005 -84.80990601]
[-162.04096985 -93.21923828]
[-173.63339233 -102.75601959]
[-184.28182983 -113.33643341]
[-193.89270020 -124.86750793]
[-202.38154602 -137.24789429]
[-209.67375183 -150.36880493]
[-215.70524597 -164.11491394]
[-220.42301941 -178.36543274]
[-223.78559875 -192.99510193]
[-225.76344299 -207.87538147]
[-226.33917236 -222.87547302]
[-225.50773621 -237.86358643]
[-223.27641296 -252.70796204]
[-219.66484070 -267.27816772]
[-214.70474243 -281.44616699]
[-208.43971252 -295.08740234]
[-200.92480469 -308.08206177]
[-192.22607422 -320.31588745]
[-182.41996765 -331.68139648]
[-171.59263611 -342.07867432]
[-159.83926392 -351.41638184]
[-147.26313782 -359.61242676]
[-133.97476196 -366.59481812]
[-120.09094238 -372.30215454]
[-105.73366547 -376.68432617]
[-91.02912903 -379.70275879]
[-76.10654449 -381.33096313]
[-61.09706879 -381.55462646]
[-46.13259888 -380.37179565]
[-31.34464836 -377.79284668]
[-16.86317825 -373.84042358]
[-2.81545544 -368.54931641]
[10.67506790 -361.96597290]
[23.48983192 -354.14828491]
[35.51621628 -345.16494751]
[46.64853668 -335.09487915]
[56.78895187 -324.02664185]
[65.84835052 -312.05743408]
[73.74710846 -299.29248047]
[80.41582489 -285.84396362]
[85.79588318 -271.83004761]
[89.83999634 -257.37393188]
[92.51263428 -242.60261536]
[93.79031372 -227.64595032]
[93.66178894 -212.63534546]
[92.12820435 -197.70274353]
[89.20302582 -182.97937012]
[84.91197205 -168.59461975]
[79.29274750 -154.67488098]
[72.39473724 -141.34252930]
[64.27856445 -128.71469116]
[55.01554489 -116.90236664]
[44.68709564 -106.00936127]
[33.38398361 -96.13140106]
[21.20553970 -87.35529327]
[8.25879383 -79.75817108]
[14.60592365 -66.16722107]
[20.95305252 -52.57627106]
[27.30018234 -38.98532104]
[33.64731216 -25.39437103]
[40.41542816 -12.00808525]
[47.59793472 1.16049695]
[54.78044510 14.32907963]
[61.96295166 27.49766159]
[69.68703461 40.35606384]
[77.93933105 52.88202667]
[86.19161987 65.40798950]
[94.44390869 77.93395233]
[118.23317719 77.50725555]
[135.12882996 101.34403992]
[149.70152283 104.89880371]
[164.27423096 108.45356750]
[178.88311768 111.85654449]
[193.52662659 115.10736847]
[208.99711609 109.66716003]
[221.26585388 120.54881287]
[217.71179199 136.55821228]
[201.99107361 141.22625732]
[190.27580261 129.75086975]
[175.63229370 126.50004578]
[168.37388611 128.13133240]
[160.71946716 123.02626801]
[146.14675903 119.47150421]
[131.57406616 115.91674805]
[125.67574310 120.54921722]
[136.76025391 130.65533447]
[147.84475708 140.76145935]
[158.92926025 150.86758423]
[172.66690063 156.89065552]
[179.46098328 170.26377869]
[176.22439575 184.91043091]
[164.42778015 194.17541504]
[149.43133545 193.84886169]
[138.04919434 184.07916260]
[135.45324707 169.30538940]
[128.26187134 156.14164734]
[121.07048035 142.97790527]
[113.87910461 129.81416321]
[107.98078156 134.44664001]
[107.98078156 149.44664001]
[107.98078156 164.44664001]
[107.98078156 179.44664001]
[107.98078156 194.44664001]
[107.98078156 209.44664001]
[107.98078156 224.44664001]
[107.98078156 239.44664001]
[107.98078156 254.44664001]
[107.98078156 269.44665527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 110]
[14 109]
[15 108]
[16 107]
[21 106]
[22 105]
[23 104]
[24 103]
[28 102]
[29 101]
[30 100]
[31 99]
[32 98]
[112 126]
[113 125]
[114 124]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
