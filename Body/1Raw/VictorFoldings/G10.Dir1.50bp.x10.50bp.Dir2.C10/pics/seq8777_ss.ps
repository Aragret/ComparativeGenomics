%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCUCUACCUGCACGACAACACAUAAUGACCCACCAAUCACAUGCCUAUCAUAUAGUAAxxxxxxxxxxGAAGUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCUACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[106.34477234 308.90545654]
[106.34477234 293.90545654]
[106.34477234 278.90545654]
[106.34477234 263.90545654]
[106.34477234 248.90545654]
[106.34477234 233.90545654]
[106.34477234 218.90545654]
[106.34477234 203.90545654]
[106.34477234 188.90545654]
[106.34477234 173.90545654]
[104.78718567 158.98654175]
[101.68886566 144.31002808]
[87.03348541 142.40400696]
[73.81845093 135.78765869]
[63.51172256 125.19594574]
[57.25818634 111.80541229]
[55.75250626 97.10350800]
[59.16193390 82.72335052]
[67.10774231 70.26232147]
[57.84279251 58.46567917]
[48.57784271 46.66903687]
[39.31289673 34.87239838]
[30.04794502 23.07575798]
[17.50065994 31.31222916]
[4.30006742 38.45493317]
[-9.45871639 44.45240784]
[-23.67655945 49.26144028]
[-38.25101852 52.84738159]
[-53.07708359 55.18439102]
[-68.04792786 56.25563431]
[-83.05569458 56.05339432]
[-97.99224091 54.57912064]
[-112.74994659 51.84344482]
[-127.22248077 47.86606979]
[-141.30557251 42.67565536]
[-154.89775085 36.30960464]
[-167.90107727 28.81377792]
[-180.22186279 20.24218941]
[-191.77133179 10.65659714]
[-202.46626282 0.12606496]
[-212.22961426 -11.27353191]
[-220.99104309 -23.46005630]
[-228.68739319 -36.34570694]
[-235.26322937 -49.83763504]
[-240.67117310 -63.83863449]
[-244.87226868 -78.24782562]
[-247.83622742 -92.96138000]
[-249.54168701 -107.87329865]
[-249.97639465 -122.87612152]
[-249.13719177 -137.86177063]
[-247.03012085 -152.72225952]
[-243.67037964 -167.35052490]
[-239.08216858 -181.64114380]
[-233.29853821 -195.49119568]
[-226.36117554 -208.80084229]
[-218.32006836 -221.47421265]
[-209.23313904 -233.41998291]
[-199.16584778 -244.55209351]
[-188.19076538 -254.79031372]
[-176.38694763 -264.06091309]
[-163.83944702 -272.29705811]
[-150.63867188 -279.43942261]
[-136.87974548 -285.43652344]
[-122.66177368 -290.24520874]
[-108.08721924 -293.83074951]
[-93.26109314 -296.16738892]
[-78.29022217 -297.23825073]
[-63.28246307 -297.03561401]
[-48.34595490 -295.56097412]
[-33.58831787 -292.82489014]
[-19.11588478 -288.84716797]
[-5.03292704 -283.65637207]
[8.55908298 -277.28997803]
[21.56221390 -269.79382324]
[33.88277435 -261.22189331]
[45.43199921 -251.63601685]
[56.12666702 -241.10520935]
[65.88972473 -229.70535278]
[74.65082550 -217.51860046]
[82.34684753 -204.63275146]
[88.92234039 -191.14065552]
[94.32992554 -177.13952637]
[98.53063965 -162.73022461]
[101.49421692 -148.01658630]
[103.19930267 -133.10462952]
[103.63361359 -118.10179138]
[102.79402161 -103.11616516]
[100.68656921 -88.25572968]
[97.32645416 -73.62755585]
[92.73786926 -59.33704376]
[86.95388794 -45.48715591]
[80.01618195 -32.17768097]
[71.97473907 -19.50452042]
[62.88750076 -7.55898237]
[52.81993484 3.57286310]
[41.84458542 13.81080914]
[51.10953522 25.60744858]
[60.37448502 37.40409088]
[69.63943481 49.20072937]
[78.90438080 60.99736786]
[91.07889557 56.56448364]
[104.01506042 55.83995438]
[116.60843658 58.88564682]
[127.78384399 65.44152832]
[136.58717346 74.94787598]
[142.26683044 86.59307861]
[144.33790588 99.38291931]
[159.15565491 101.71402740]
[173.97341919 104.04512787]
[188.81462097 106.22196198]
[203.67767334 108.24430084]
[213.01672363 96.05095673]
[227.20739746 90.17556000]
[242.43247986 92.19857025]
[254.59649658 101.57579803]
[260.42736816 115.78482819]
[258.35665894 131.00349426]
[248.94134521 143.13804626]
[234.71411133 148.92436218]
[219.50201416 146.80595398]
[207.39703369 137.35264587]
[201.65533447 123.10734558]
[186.79228210 121.08501434]
[179.69459534 123.31401062]
[171.64231873 118.86288452]
[156.82455444 116.53178406]
[142.00679016 114.20067596]
[132.15939331 130.52873230]
[116.36539459 141.21170044]
[119.46371460 155.88822937]
[126.19609833 142.48393250]
[138.65251160 134.12702942]
[153.60864258 132.98066711]
[167.19314575 139.34158325]
[175.88970947 151.56327820]
[177.44726562 166.48219299]
[171.46263123 180.23661804]
[159.48492432 189.26626587]
[144.61453247 191.23382568]
[130.70060730 185.63002014]
[121.34477234 173.90545654]
[121.34477234 188.90545654]
[121.34477234 203.90545654]
[121.34477234 218.90545654]
[121.34477234 233.90545654]
[121.34477234 248.90545654]
[121.34477234 263.90545654]
[121.34477234 278.90545654]
[121.34477234 293.90545654]
[121.34477234 308.90545654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 130]
[12 129]
[19 100]
[20 99]
[21 98]
[22 97]
[23 96]
[107 127]
[108 126]
[109 125]
[110 123]
[111 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
