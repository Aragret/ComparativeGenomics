%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCCCAUCCCUACGCAUCCUUUACAUAACAGACGAGGUCAACGAUCCCUCCCUUACCAUCxxxxxxxxxxCCACCUCCUAUUCUUGCACGAAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.73310089 467.78216553]
[85.73310089 452.78216553]
[85.73310089 437.78216553]
[85.73310089 422.78216553]
[85.73310089 407.78216553]
[85.73310089 392.78216553]
[85.73310089 377.78216553]
[85.73310089 362.78216553]
[85.73310089 347.78216553]
[85.73310089 332.78216553]
[71.89292145 329.94073486]
[58.87833786 324.42788696]
[47.19963837 316.45764160]
[37.31518173 306.34027100]
[29.61338806 294.47042847]
[24.39748192 281.31173706]
[21.87355804 267.37854004]
[22.14243126 253.21598816]
[25.19561386 239.37852478]
[30.91557503 226.40830994]
[39.08024979 214.81394958]
[49.37166977 205.05050659]
[61.38835144 197.50167847]
[74.66094208 192.46475220]
[88.67055511 190.13877869]
[78.42228699 179.39129639]
[78.83332062 164.18321228]
[90.17575836 153.50675964]
[90.79158020 138.51940918]
[91.40740967 123.53205109]
[92.02323151 108.54469299]
[81.81439209 119.53467560]
[67.32155609 123.40218353]
[52.99448395 118.95976257]
[43.23205948 107.57139587]
[41.03165436 92.73366547]
[47.06887054 79.00224304]
[59.49008560 70.59310913]
[74.48158264 70.08815765]
[87.44049072 77.64240265]
[94.38763428 90.93466187]
[97.74689484 76.31565857]
[91.56267548 64.95084381]
[94.70408630 52.81400299]
[104.94798279 46.30825424]
[104.00624847 37.15899658]
[108.83403015 31.50172424]
[112.79064178 17.03295708]
[116.74725342 2.56418920]
[105.00906372 -9.03926754]
[100.73117065 -24.88354874]
[104.98538971 -40.63718796]
[116.52426147 -52.04250336]
[132.14492798 -56.06628418]
[135.80363464 -70.61323547]
[139.46234131 -85.16019440]
[143.12104797 -99.70714569]
[146.77975464 -114.25409698]
[150.43846130 -128.80105591]
[136.47271729 -134.33398438]
[123.34868622 -141.64251709]
[111.29092407 -150.60160828]
[100.50575256 -161.05795288]
[91.17771912 -172.83262634]
[83.46644592 -185.72415161]
[77.50387573 -199.51191711]
[73.39204407 -213.96003723]
[71.20130920 -228.82124329]
[70.96914673 -243.84126282]
[72.69953918 -258.76309204]
[76.36286926 -273.33139038]
[81.89646149 -287.29684448]
[89.20562744 -300.42053223]
[98.16529083 -312.47787476]
[108.62214661 -323.26254272]
[120.39726257 -332.59002686]
[133.28915405 -340.30068970]
[147.07720947 -346.26257324]
[161.52551270 -350.37371826]
[176.38684082 -352.56375122]
[191.40687561 -352.79519653]
[206.32861328 -351.06411743]
[220.89671326 -347.40008545]
[234.86192322 -341.86581421]
[247.98526001 -334.55603027]
[260.04217529 -325.59579468]
[270.82635498 -315.13842773]
[280.15325928 -303.36288452]
[287.86331177 -290.47061157]
[293.82455444 -276.68228149]
[297.93502808 -262.23376465]
[300.12435913 -247.37234497]
[300.35507202 -232.35229492]
[298.62326050 -217.43064880]
[294.95855713 -202.86270142]
[289.42361450 -188.89776611]
[282.11322021 -175.77476501]
[273.15240479 -163.71829224]
[262.69451904 -152.93460083]
[250.91851807 -143.60826111]
[238.02589417 -135.89883423]
[224.23725891 -129.93823242]
[209.78855896 -125.82846069]
[194.92703247 -123.63983917]
[179.90698242 -123.40982819]
[164.98541260 -125.14234924]
[161.32670593 -110.59539795]
[157.66799927 -96.04843903]
[154.00929260 -81.50148773]
[150.35058594 -66.95453644]
[146.69187927 -52.40757751]
[157.12303162 -43.54150772]
[162.73138428 -30.98038483]
[162.36553955 -17.16265297]
[156.03997803 -4.79786777]
[144.94346619 3.66461754]
[131.21601868 6.52079964]
[127.25940704 20.98956680]
[123.30279541 35.45833588]
[119.49494171 49.96696091]
[125.21889496 66.52838898]
[112.36590576 79.67491913]
[109.00664520 94.29392242]
[107.01058960 109.16052246]
[106.39476013 124.14787292]
[105.77893829 139.13522339]
[105.16310883 154.12258911]
[115.59140778 165.69360352]
[114.75337219 180.88412476]
[103.65791321 190.75460815]
[119.05384827 194.83039856]
[133.16596985 202.19798279]
[145.30078125 212.49195862]
[154.86270142 225.20321655]
[161.38327026 239.70410156]
[164.54412842 255.27935791]
[164.19252014 271.16152954]
[160.34872437 286.56863403]
[153.20487976 300.74279785]
[143.11537170 312.98739624]
[130.57928467 322.70138550]
[116.21569824 329.40884399]
[100.73310089 332.78216553]
[100.73310089 347.78216553]
[100.73310089 362.78216553]
[100.73310089 377.78216553]
[100.73310089 392.78216553]
[100.73310089 407.78216553]
[100.73310089 422.78216553]
[100.73310089 437.78216553]
[100.73310089 452.78216553]
[100.73310089 467.78216553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[25 130]
[28 127]
[29 126]
[30 125]
[31 124]
[41 123]
[42 122]
[45 120]
[47 119]
[48 118]
[49 117]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
