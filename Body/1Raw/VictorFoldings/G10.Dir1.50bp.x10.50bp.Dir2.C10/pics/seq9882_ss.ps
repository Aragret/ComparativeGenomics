%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCUCACAAUCAUGGCAAGCCAACxxxxxxxxxxCAUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCAAACCCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-27.64518356 362.35931396]
[-34.55218124 375.67446899]
[-41.45917892 388.98962402]
[-48.36618042 402.30477905]
[-55.27317810 415.61993408]
[-62.18017578 428.93511963]
[-69.08717346 442.25027466]
[-75.99417114 455.56542969]
[-82.90116882 468.88058472]
[-81.62204742 485.22976685]
[-95.29261017 494.28778076]
[-109.84975433 486.73651123]
[-110.31834412 470.34405518]
[-96.21632385 461.97357178]
[-89.30932617 448.65841675]
[-82.40232849 435.34326172]
[-75.49533081 422.02810669]
[-68.58833313 408.71295166]
[-61.68133545 395.39779663]
[-54.77433777 382.08264160]
[-47.86733627 368.76748657]
[-40.96033859 355.45233154]
[-55.30653000 346.99310303]
[-69.14667511 337.72906494]
[-82.43567657 327.69042969]
[-95.13023376 316.90988159]
[-107.18898010 305.42257690]
[-118.57263184 293.26593018]
[-129.24407959 280.47952271]
[-139.16857910 267.10507202]
[-148.31376648 253.18609619]
[-156.64985657 238.76800537]
[-164.14968872 223.89775085]
[-170.78880310 208.62379456]
[-176.54560852 192.99589539]
[-181.40130615 177.06498718]
[-185.34010315 160.88296509]
[-188.34915161 144.50257874]
[-190.41864014 127.97716522]
[-191.54183960 111.36060333]
[-191.71508789 94.70701599]
[-190.93782043 78.07068634]
[-189.21255493 61.50580215]
[-186.54493713 45.06634903]
[-182.94364929 28.80589104]
[-178.42041016 12.77740955]
[-172.98999023 -2.96686673]
[-166.67005920 -18.37563896]
[-159.48120117 -33.39869690]
[-151.44686890 -47.98709106]
[-142.59323120 -62.09329224]
[-132.94912720 -75.67132568]
[-122.54598236 -88.67695618]
[-111.41770172 -101.06781006]
[-99.60054016 -112.80350494]
[-87.13301086 -123.84580994]
[-74.05572510 -134.15873718]
[-60.41130066 -143.70867920]
[-46.24419785 -152.46453857]
[-53.42670822 -165.63311768]
[-60.60921478 -178.80169678]
[-74.88231659 -186.87701416]
[-74.75485992 -203.27566528]
[-60.35795593 -211.12812805]
[-46.50191116 -202.35647583]
[-47.44063187 -185.98420715]
[-40.25812531 -172.81562805]
[-33.07561493 -159.64704895]
[-20.35010147 -165.78480530]
[-7.34238052 -171.29931641]
[5.91704798 -176.17767334]
[19.39709091 -180.40841675]
[33.06613922 -183.98162842]
[46.89213943 -186.88894653]
[60.84267044 -189.12351990]
[74.88502502 -190.68014526]
[88.98626709 -191.55514526]
[103.11334229 -191.74649048]
[117.23310852 -191.25372314]
[131.31246948 -190.07798767]
[145.31840515 -188.22204590]
[159.21807861 -185.69026184]
[172.97888184 -182.48857117]
[186.56857300 -178.62446594]
[199.95526123 -174.10700989]
[213.10755920 -168.94680786]
[225.99462891 -163.15596008]
[238.58627319 -156.74803162]
[250.85293579 -149.73806763]
[262.76586914 -142.14248657]
[274.29711914 -133.97911072]
[285.41967773 -125.26706696]
[296.10745239 -116.02680969]
[306.33535767 -106.27998352]
[316.07943726 -96.04946136]
[325.31683350 -85.35921478]
[334.02587891 -74.23432159]
[342.18615723 -62.70087433]
[349.77853394 -50.78590775]
[356.78521729 -38.51736069]
[363.18975830 -25.92400932]
[368.97717285 -13.03537846]
[374.13381958 0.11830875]
[378.64767456 13.50620747]
[382.50814819 27.09692574]
[385.70614624 40.85859299]
[388.23419189 54.75894165]
[390.08636475 68.76537323]
[391.25833130 82.84504700]
[391.74731445 96.96495056]
[391.55218506 111.09197235]
[390.67340088 125.19297791]
[389.11300659 139.23490906]
[386.87466431 153.18484497]
[383.96365356 167.01007080]
[380.38677979 180.67816162]
[376.15240479 194.15705872]
[371.27050781 207.41517639]
[365.75250244 220.42141724]
[359.61132812 233.14529419]
[352.86138916 245.55694580]
[345.51852417 257.62728882]
[337.59994507 269.32800293]
[329.12423706 280.63165283]
[320.11123657 291.51177979]
[310.58209229 301.94277954]
[300.55917358 311.90029907]
[290.06594849 321.36090088]
[279.12704468 330.30242920]
[267.76809692 338.70394897]
[256.01577759 346.54571533]
[243.89759827 353.80935669]
[231.44200134 360.47784424]
[218.67817688 366.53555298]
[205.63607788 371.96826172]
[192.34626770 376.76321411]
[178.83990479 380.90921021]
[165.14868164 384.39648438]
[151.30470276 387.21688843]
[137.34040833 389.36380005]
[123.28855133 390.83218384]
[109.18208313 391.61859131]
[95.05409241 391.72119141]
[80.93769836 391.13970947]
[66.86599731 389.87557983]
[52.87199783 387.93170166]
[38.98850632 385.31265259]
[25.24808121 382.02456665]
[11.68294048 378.07516479]
[-1.67510629 373.47372437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[59 68]
[60 67]
[61 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
