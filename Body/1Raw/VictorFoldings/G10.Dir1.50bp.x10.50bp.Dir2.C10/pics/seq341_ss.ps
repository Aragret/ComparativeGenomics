%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAGAACCCUAACACxxxxxxxxxxCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCUAUUUAUUCUAGCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[2.20243859 81.73784637]
[-12.29315758 77.88069153]
[-26.78875542 74.02352905]
[-41.28435135 70.16636658]
[-55.77994919 66.30921173]
[-70.27554321 62.45204926]
[-84.77114105 58.59489059]
[-99.70545197 57.19258881]
[-114.66569519 58.28389740]
[-129.62594604 59.37520981]
[-144.58619690 60.46651840]
[-159.54644775 61.55783081]
[-174.50669861 62.64913940]
[-189.11558533 66.05211639]
[-203.01814270 71.68407440]
[-216.92070007 77.31603241]
[-230.82325745 82.94799042]
[-228.95997620 97.92098236]
[-231.03645325 112.86590576]
[-236.91110229 126.76377869]
[-246.18338013 138.66702271]
[-258.22106934 147.76406860]
[-272.20346069 153.43464661]
[-287.17718506 155.29214478]
[-302.12130737 153.20988464]
[-316.01690674 147.32987976]
[-327.91656494 138.05300903]
[-337.00897217 126.01179504]
[-342.67413330 112.02722168]
[-344.52584839 97.05279541]
[-342.43783569 82.10948181]
[-336.55245972 68.21614838]
[-327.27099609 56.32006073]
[-315.22625732 47.23231888]
[-301.23950195 41.57254028]
[-286.26437378 39.72661591]
[-271.32186890 41.82040405]
[-257.43078613 47.71114349]
[-245.53829956 56.99720001]
[-236.45521545 69.04543304]
[-222.55265808 63.41347504]
[-208.65010071 57.78152084]
[-194.74754333 52.14956284]
[-209.47377014 49.29684067]
[-222.22859192 41.40287399]
[-231.35098267 29.49565315]
[-235.65299988 15.12579918]
[-234.57440186 0.16462910]
[-228.25564575 -13.43953705]
[-217.51959229 -23.91509438]
[-203.76435852 -29.89786148]
[-188.78121948 -30.60873222]
[-174.52133179 -25.95513153]
[-162.84173584 -16.54307747]
[-155.26336670 -3.59825492]
[-152.77314758 11.19359398]
[-155.69534302 25.90619850]
[-163.64944458 38.62360764]
[-175.59800720 47.68889236]
[-160.63775635 46.59757996]
[-145.67750549 45.50627136]
[-130.71725464 44.41495895]
[-115.75701141 43.32365036]
[-100.79676056 42.23233795]
[-114.00389862 35.12097931]
[-124.05390167 23.98555946]
[-129.77825928 10.12079334]
[-130.51139832 -4.86127949]
[-126.16808319 -19.21870422]
[-117.25331116 -31.28215599]
[-104.80359650 -39.64902496]
[-90.26644897 -43.34650803]
[-75.33209229 -41.94469452]
[-61.73693848 -35.60657883]
[-51.06167603 -25.06908226]
[-44.54751587 -11.55739403]
[-42.95184708 3.35749245]
[-46.46020508 17.94143677]
[-54.66466522 30.49877739]
[-66.61131287 39.56948090]
[-80.91397858 44.09929657]
[-66.41838837 47.95645523]
[-51.92278671 51.81361389]
[-37.42719269 55.67077255]
[-22.93159485 59.52793121]
[-8.43599892 63.38509369]
[6.05959797 67.24224854]
[15.09765434 48.13998795]
[27.96642876 31.37759972]
[44.08529282 17.71139336]
[62.72697830 7.75797510]
[83.05039215 1.96643460]
[104.13854980 0.59808052]
[125.03998566 3.71465182]
[144.81164551 11.17553139]
[162.56143188 22.64409256]
[177.48851013 37.60288239]
[188.91937256 55.37697220]
[196.33827209 75.16441345]
[211.10432434 72.52555084]
[225.87039185 69.88668823]
[240.60818481 67.09436035]
[255.31614685 64.14888000]
[270.02410889 61.20339584]
[276.37954712 47.04754639]
[289.85852051 39.36008072]
[305.27807617 41.09698105]
[316.70907593 51.59038162]
[319.75610352 66.80535126]
[313.24749756 80.89142609]
[299.68591309 88.43222046]
[284.28610229 86.52814484]
[272.96960449 75.91136169]
[258.26162720 78.85684204]
[243.55368042 81.80232239]
[237.57398987 86.22827148]
[228.50924683 84.65274048]
[213.74319458 87.29160309]
[198.97714233 89.93047333]
[199.48773193 100.24665070]
[198.92599487 110.56017303]
[197.29797363 120.75987244]
[194.62124634 130.73580933]
[190.92462158 140.38046265]
[186.24797058 149.58987427]
[180.64170837 158.26478577]
[174.16622925 166.31169128]
[166.89135742 173.64384460]
[158.89549255 180.18223572]
[150.26483154 185.85636902]
[141.09237671 190.60510254]
[131.47702026 194.37725830]
[121.52237701 197.13215637]
[111.33576202 198.84011841]
[101.02696228 199.48274231]
[90.70709229 199.05307007]
[80.48738861 197.55577087]
[70.47799683 195.00695801]
[60.78681564 191.43409729]
[51.51828766 186.87573242]
[42.77232361 181.38096619]
[34.64318848 175.00904846]
[27.21850204 167.82862854]
[20.57829285 159.91712952]
[14.79413128 151.35980225]
[9.92836094 142.24890137]
[6.03343010 132.68261719]
[3.15131879 122.76405334]
[1.31309211 112.60013580]
[0.53856355 102.30040741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[8 64]
[9 63]
[10 62]
[11 61]
[12 60]
[13 59]
[14 43]
[15 42]
[16 41]
[17 40]
[99 119]
[100 118]
[101 117]
[102 115]
[103 114]
[104 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
