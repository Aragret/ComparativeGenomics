%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACxxxxxxxxxxCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCAUCAUCCUAGUCCUCAUCGCCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-2.52474046 226.25238037]
[-12.50746727 237.44815063]
[-22.49019432 248.64390564]
[-32.47291946 259.83969116]
[-35.88214111 275.28921509]
[-50.12733459 279.63934326]
[-60.11006165 290.83511353]
[-69.00241089 302.91510010]
[-76.72649384 315.77349854]
[-84.45057678 328.63189697]
[-81.97836304 344.48333740]
[-92.93579102 356.20144653]
[-108.91725922 354.79711914]
[-117.66316223 341.34765625]
[-112.46437836 326.17028809]
[-97.30898285 320.90783691]
[-89.58489990 308.04940796]
[-81.86080933 295.19100952]
[-96.09664154 299.91766357]
[-110.66406250 296.34130859]
[-121.09251404 285.55947876]
[-124.18163300 270.88101196]
[-118.98342133 256.81054688]
[-107.09313202 247.66609192]
[-92.15974426 246.25398254]
[-78.76613617 253.00758362]
[-71.02262115 265.85427856]
[-71.30582428 280.85238647]
[-61.32310104 269.65661621]
[-58.62791061 255.00788879]
[-43.66868591 249.85694885]
[-33.68595886 238.66119385]
[-23.70323372 227.46542358]
[-13.72050667 216.26965332]
[-31.85628128 195.20980835]
[-46.14157867 171.36964417]
[-56.15924072 145.44532776]
[-61.61672974 118.19391632]
[-62.35467911 90.41120911]
[-58.35153198 62.90851212]
[-49.72419357 36.48896408]
[-63.24838638 30.00079918]
[-76.77257538 23.51263428]
[-89.40434265 32.24956512]
[-104.71353912 33.48408890]
[-118.58206940 26.88412666]
[-127.27936554 14.22503281]
[-128.46589661 -1.08795881]
[-121.82249451 -14.93573093]
[-109.13619995 -23.59330177]
[-93.81956482 -24.73182869]
[-79.99268341 -18.04505348]
[-71.37492371 -5.33168411]
[-70.28440857 9.98844528]
[-56.76021957 16.47661018]
[-43.23603058 22.96477509]
[-37.10164261 12.51213646]
[-30.20589447 2.54533792]
[-22.58708572 -6.88027239]
[-14.28752232 -15.71235275]
[-5.35329437 -23.90185547]
[4.16598511 -31.40330315]
[14.21745205 -38.17503738]
[24.74529076 -44.17945480]
[35.69103241 -49.38320923]
[46.99390030 -53.75740433]
[58.59112167 -57.27775192]
[70.41829681 -59.92469788]
[82.40974426 -61.68354797]
[94.49887848 -62.54452896]
[106.61856079 -62.50286484]
[118.70148468 -61.55878448]
[130.68055725 -59.71753311]
[142.48925781 -56.98933029]
[154.06199646 -53.38933182]
[165.33451843 -48.93752670]
[176.24423218 -43.65863800]
[186.73052979 -37.58197784]
[196.73519897 -30.74129677]
[206.20268250 -23.17457771]
[215.08039856 -14.92384148]
[226.17170715 -25.02249146]
[237.26303101 -35.12113953]
[248.35433960 -45.21979141]
[259.44564819 -55.31843948]
[261.85140991 -61.58899307]
[266.40261841 -65.12703705]
[271.21478271 -65.59465027]
[282.71658325 -75.22317505]
[294.21838379 -84.85169983]
[290.41928101 -99.63444519]
[293.41882324 -114.59992981]
[302.62142944 -126.77673340]
[316.19995117 -133.74714661]
[331.45834351 -134.12719727]
[345.36703491 -127.84143066]
[355.16445923 -116.13787079]
[358.90530396 -101.34027863]
[355.84686279 -86.38672638]
[346.59637451 -74.24625397]
[332.99050903 -67.32936096]
[317.73074341 -67.00939941]
[303.84692383 -73.34989929]
[292.34512329 -63.72137451]
[280.84332275 -54.09284592]
[269.54431152 -44.22712326]
[258.45300293 -34.12847519]
[247.36167908 -24.02982521]
[236.27035522 -13.93117523]
[225.17904663 -3.83252573]
[232.14678955 5.19382668]
[238.46495056 14.68621635]
[244.10246277 24.59798050]
[249.03161621 34.88039780]
[253.22817993 45.48292160]
[256.67150879 56.35343552]
[259.34469604 67.43849945]
[261.23461914 78.68362427]
[262.33193970 90.03353882]
[262.63128662 101.43244171]
[262.13119507 112.82430267]
[260.83410645 124.15312958]
[258.74642944 135.36322021]
[255.87840271 146.39947510]
[252.24411011 157.20765686]
[247.86145020 167.73460388]
[242.75195312 177.92860413]
[236.94071960 187.73953247]
[230.45632935 197.11915588]
[223.33067322 206.02137756]
[215.59875488 214.40243530]
[207.29858398 222.22111511]
[198.47096252 229.43899536]
[189.15930176 236.02059937]
[179.40936279 241.93357849]
[169.26905823 247.14884949]
[158.78826904 251.64077759]
[148.01847839 255.38729858]
[137.01264954 258.36996460]
[125.82489014 260.57415771]
[114.51016998 261.98901367]
[103.12412262 262.60757446]
[91.72272491 262.42681885]
[80.36201477 261.44763184]
[69.09783173 259.67480469]
[57.98556137 257.11706543]
[47.07981873 253.78700256]
[36.43421173 249.70095825]
[26.10107803 244.87904358]
[16.13120461 239.34494019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[6 29]
[7 28]
[8 18]
[9 17]
[10 16]
[41 56]
[42 55]
[43 54]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[88 105]
[89 104]
[90 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
