%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUGxxxxxxxxxxAAAGCCCUCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGGACUGCAAAACCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[25.99088478 202.13171387]
[16.48252678 213.73306274]
[6.97416782 225.33439636]
[-2.53419089 236.93574524]
[-12.04254913 248.53707886]
[-21.55090714 260.13842773]
[-30.19002342 272.40078735]
[-37.91410828 285.25918579]
[-45.63819504 298.11758423]
[-53.36227798 310.97601318]
[-50.89006042 326.82742310]
[-61.84748840 338.54556274]
[-77.82895660 337.14123535]
[-86.57485962 323.69174194]
[-81.37607574 308.51437378]
[-66.22068024 303.25192261]
[-58.49659729 290.39352417]
[-50.77251053 277.53512573]
[-43.04842758 264.67669678]
[-57.69319534 267.92181396]
[-71.07761383 261.14999390]
[-77.13839722 247.42897034]
[-73.12996674 232.97447205]
[-60.86816788 224.33454895]
[-45.90772247 225.42315674]
[-35.02585602 235.74716187]
[-33.15224838 250.63006592]
[-23.64389038 239.02873230]
[-14.13553238 227.42738342]
[-4.62717342 215.82604980]
[4.88118505 204.22470093]
[14.38954353 192.62336731]
[0.71436220 177.78559875]
[-10.41961288 160.95692444]
[-18.72740936 142.56805420]
[-23.99638939 123.08966827]
[-26.09169388 103.02030182]
[-24.95969391 82.87363434]
[-20.62936211 63.16530991]
[-13.21153450 44.39976883]
[-2.89606857 27.05730820]
[-14.59569263 17.67014694]
[-26.29531670 8.28298378]
[-37.99493790 -1.10417759]
[-49.88731766 -10.24591160]
[-61.96730804 -19.13826180]
[-74.04729462 -28.03061104]
[-86.12728119 -36.92296219]
[-100.50111389 -31.31970215]
[-115.61795807 -34.39941788]
[-126.65408325 -45.17937469]
[-130.08789062 -60.21973801]
[-124.82369232 -74.72117615]
[-112.54124451 -84.05632782]
[-97.15985107 -85.24639130]
[-83.58765411 -77.91161346]
[-76.15548706 -64.39250183]
[-77.23493195 -49.00294876]
[-65.15494537 -40.11059952]
[-53.07495880 -31.21825027]
[-40.99496841 -22.32590103]
[-36.16301727 -22.15935898]
[-31.39998055 -18.91208458]
[-28.60777855 -12.80380154]
[-16.90815353 -3.41663957]
[-5.20853043 5.97052240]
[6.49109316 15.35768414]
[13.96221828 7.77344513]
[22.04631996 0.84627503]
[30.68580437 -5.37447309]
[39.81911850 -10.84448051]
[49.38119125 -15.52477455]
[59.30389786 -19.38201141]
[69.51654816 -22.38871002]
[79.94637299 -24.52344894]
[90.51907349 -25.77101898]
[101.15931702 -26.12253189]
[111.79130554 -25.57548523]
[122.33927917 -24.13377380]
[132.72810364 -21.80767059]
[142.88375854 -18.61374664]
[152.73388672 -14.57475758]
[162.20829773 -9.71947956]
[171.23951721 -4.08250475]
[179.76319885 2.29600739]
[187.71859741 9.37061214]
[195.04904175 17.09090805]
[201.70230103 25.40188980]
[207.63099670 34.24434662]
[220.87358093 27.19921112]
[234.11616516 20.15407562]
[247.05422974 12.56416702]
[259.66534424 4.44262552]
[272.27648926 -3.67891693]
[284.88760376 -11.80045891]
[297.49874878 -19.92200089]
[300.59820557 -35.41938400]
[313.79431152 -44.11640167]
[329.25805664 -40.85326385]
[337.81506348 -27.56593704]
[334.38864136 -12.13755417]
[321.01156616 -3.72150087]
[305.62026978 -7.31087303]
[293.00915527 0.81066918]
[280.39801025 8.93221092]
[267.78689575 17.05375290]
[255.17576599 25.17529488]
[254.47189331 27.95232582]
[252.58964539 30.60771751]
[249.57341003 32.67755508]
[245.63949585 33.72416687]
[241.16130066 33.39665985]
[227.91871643 40.44179535]
[214.67613220 47.48693085]
[222.94546509 71.84593201]
[226.10057068 97.37606812]
[224.01020813 123.01535034]
[216.76133728 147.69726562]
[230.28552246 154.18542480]
[243.80970764 160.67358398]
[257.97827148 154.05650330]
[273.07196045 158.14480591]
[281.96401978 171.00814819]
[280.45587158 186.57283020]
[269.25961304 197.48970032]
[253.66180420 198.60414124]
[241.02722168 189.38995361]
[237.32154846 174.19778442]
[223.79736328 167.70960999]
[210.27316284 161.22145081]
[205.24632263 169.50862122]
[199.59793091 177.38531494]
[193.36137390 184.80500793]
[186.57347107 191.72389221]
[179.27430725 198.10108948]
[171.50697327 203.89894104]
[163.31736755 209.08322144]
[154.75382996 213.62330627]
[145.86694336 217.49238586]
[136.70918274 220.66761780]
[127.33464813 223.13023376]
[117.79868317 224.86570740]
[108.15760040 225.86378479]
[98.46835327 226.11856079]
[88.78814697 225.62854004]
[79.17414856 224.39662170]
[69.68314362 222.43008423]
[60.37117386 219.74052429]
[51.29323196 216.34384155]
[42.50292969 212.26007080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[5 28]
[6 27]
[7 19]
[8 18]
[9 17]
[10 16]
[41 67]
[42 66]
[43 65]
[44 64]
[45 61]
[46 60]
[47 59]
[48 58]
[89 114]
[90 113]
[91 112]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[118 130]
[119 129]
[120 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
