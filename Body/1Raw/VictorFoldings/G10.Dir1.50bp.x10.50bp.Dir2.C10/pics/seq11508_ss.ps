%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUCCGCCAUCCCAUACAUUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCUACUCAGUxxxxxxxxxxACUCUCCUCGCUCCGGGCCCAUAACACUUGGGGGUAGCUAAAGUGAACUGUAUCCGACAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.61703491]
[92.50000000 291.61703491]
[92.50000000 276.61703491]
[92.50000000 261.61703491]
[92.50000000 246.61705017]
[92.50000000 231.61705017]
[92.50000000 216.61705017]
[92.50000000 201.61705017]
[92.50000000 186.61705017]
[92.50000000 171.61705017]
[86.09273529 170.65295410]
[79.79807281 169.11680603]
[73.66697693 167.02105713]
[67.74908447 164.38267517]
[62.09231186 161.22302246]
[56.74245834 157.56767273]
[51.74284363 153.44621277]
[47.13394165 148.89204407]
[42.95307541 143.94200134]
[39.23408890 138.63618469]
[25.80663681 145.32226562]
[12.37918854 152.00834656]
[-1.04826105 158.69441223]
[-14.47571087 165.38049316]
[-20.91687012 180.07371521]
[-36.45692062 184.05949402]
[-49.17486572 174.28025818]
[-49.31458664 158.23780823]
[-36.76890182 148.23854065]
[-21.16178513 151.95303345]
[-7.73433638 145.26696777]
[5.69311285 138.58088684]
[19.12056160 131.89482117]
[32.54801178 125.20874023]
[28.22668076 105.81739044]
[29.36869431 85.98322296]
[35.88712311 67.21600342]
[47.28578568 50.94428635]
[62.69702530 38.40666199]
[80.94774628 30.55748367]
[100.64871216 27.99423409]
[120.30030060 30.91201973]
[126.00496674 17.03913879]
[131.70962524 3.16625857]
[137.41429138 -10.70662212]
[143.11895752 -24.57950211]
[148.82362366 -38.45238495]
[146.91606140 -54.15817261]
[158.91229248 -62.98652267]
[150.46723938 -70.77774811]
[145.15142822 -81.22500610]
[143.77076721 -93.09873199]
[146.65692139 -104.93757629]
[153.60633850 -115.22824097]
[163.88641357 -122.59875488]
[176.31028748 -126.00045776]
[174.16171265 -140.84577942]
[172.01313782 -155.69110107]
[169.86454773 -170.53642273]
[167.71597290 -185.38174438]
[165.56739807 -200.22706604]
[150.57211304 -201.83720398]
[136.44866943 -207.12670898]
[124.08483887 -215.76306152]
[114.25783539 -227.20338440]
[107.58540344 -240.72851562]
[104.48696899 -255.48828125]
[105.15731049 -270.55484009]
[109.55427551 -284.98114014]
[117.40147400 -297.86026001]
[128.20562744 -308.38269043]
[141.28756714 -315.88690186]
[155.82496643 -319.90124512]
[170.90399170 -320.17330933]
[185.57675171 -316.68606567]
[198.92089844 -309.65866089]
[210.09762573 -299.53286743]
[218.40435791 -286.94522095]
[223.31889343 -272.68695068]
[224.53234863 -257.65435791]
[221.96839905 -242.79243469]
[215.78823853 -229.03538513]
[206.38037109 -217.24798584]
[194.33615112 -208.17121887]
[180.41271973 -202.37565613]
[182.56129456 -187.53031921]
[184.70986938 -172.68499756]
[186.85845947 -157.83967590]
[189.00703430 -142.99435425]
[191.15560913 -128.14903259]
[204.22230530 -120.78279877]
[218.03588867 -126.62958527]
[231.84947205 -132.47637939]
[245.60231018 -138.46467590]
[259.29293823 -144.59384155]
[262.41821289 -148.92832947]
[266.49920654 -151.34724426]
[270.62899780 -151.81031799]
[274.02023315 -150.64985657]
[288.06222534 -155.92459106]
[302.10418701 -161.19934082]
[316.14617920 -166.47407532]
[321.17239380 -181.28189087]
[334.56774902 -189.35028076]
[350.00729370 -186.86961365]
[360.20101929 -175.01119995]
[360.33572388 -159.37419128]
[350.34780884 -147.34191895]
[334.95324707 -144.59565735]
[321.42089844 -152.43209839]
[307.37893677 -147.15736389]
[293.33694458 -141.88262939]
[279.29498291 -136.60787964]
[265.42208862 -130.90321350]
[251.73147583 -124.77404022]
[246.88169861 -119.13562012]
[237.69625854 -118.66278839]
[223.88267517 -112.81600189]
[210.06909180 -106.96921539]
[213.45335388 -87.24589539]
[206.09501648 -69.32017517]
[190.85914612 -58.40384674]
[172.78517151 -57.28185654]
[175.10076904 -42.56834793]
[162.69650269 -32.74771881]
[156.99183655 -18.87483978]
[151.28717041 -5.00195885]
[145.58250427 8.87092209]
[139.87785339 22.74380302]
[134.17318726 36.61668396]
[145.84030151 44.46696472]
[155.75921631 54.43509674]
[163.55166626 66.14092255]
[168.92045593 79.13802338]
[171.66084290 92.93074036]
[171.66831970 106.99304962]
[168.94261169 120.78866577]
[163.58764648 133.79147339]
[155.80764771 145.50558472]
[145.89933777 155.48425293]
[134.24057007 163.34693909]
[121.27598572 168.79377747]
[107.50000000 171.61705017]
[107.50000000 186.61705017]
[107.50000000 201.61705017]
[107.50000000 216.61705017]
[107.50000000 231.61705017]
[107.50000000 246.61705017]
[107.50000000 261.61703491]
[107.50000000 276.61703491]
[107.50000000 291.61703491]
[107.50000000 306.61703491]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[49 123]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[91 119]
[92 118]
[93 117]
[94 115]
[95 114]
[99 113]
[100 112]
[101 111]
[102 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
