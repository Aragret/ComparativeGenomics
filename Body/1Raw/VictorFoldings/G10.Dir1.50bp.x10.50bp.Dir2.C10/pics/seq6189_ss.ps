%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUCACCUCGGAGCUGGUAAAAAGAGGCCUAACCCCUGUCUUUAGAUUUACAGUCCAAUxxxxxxxxxxCUCCGCAUGAUGAAACUUCGGCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.34332275 275.70300293]
[90.34332275 260.70300293]
[90.34332275 245.70300293]
[90.34332275 230.70300293]
[90.34332275 215.70300293]
[90.34332275 200.70300293]
[90.34332275 185.70300293]
[90.34332275 170.70300293]
[90.34332275 155.70300293]
[90.34332275 140.70300293]
[75.47559357 121.33192444]
[76.92736053 102.17353058]
[88.04005432 93.02394867]
[75.60061646 84.64180756]
[63.16117859 76.25966644]
[50.72173691 67.87752533]
[37.84668350 71.96294403]
[25.16083145 67.92597961]
[17.25000191 57.46208191]
[16.83704567 44.54595566]
[4.57467747 35.90684128]
[-7.68769073 27.26772499]
[-19.95005989 18.62860870]
[-32.21242523 9.98949337]
[-45.73661804 3.50132799]
[-60.14883423 -0.65655947]
[-74.56105042 -4.81444693]
[-83.74038696 -4.18870211]
[-89.22816467 -9.21164989]
[-103.55075836 -13.66846561]
[-117.87335968 -18.12528229]
[-132.19595337 -22.58209801]
[-146.69154358 -26.43925667]
[-161.33505249 -29.69008255]
[-175.97854614 -32.94090652]
[-190.62205505 -36.19173431]
[-205.38810730 -38.83059692]
[-220.25115967 -40.85293198]
[-233.84014893 -32.32540512]
[-248.93156433 -37.76864624]
[-253.94854736 -53.00706100]
[-245.04251099 -66.35105133]
[-229.04539490 -67.56423950]
[-218.22882080 -55.71598053]
[-203.36576843 -53.69364548]
[-201.02615356 -55.34696960]
[-197.86991882 -56.14207840]
[-194.23231506 -55.75521851]
[-190.56213379 -53.99428558]
[-187.37123108 -50.83523560]
[-172.72772217 -47.58440781]
[-158.08422852 -44.33358383]
[-143.44071960 -41.08275986]
[-140.97175598 -42.53588104]
[-137.76036072 -43.06587601]
[-134.16749573 -42.37797546]
[-130.65640259 -40.31805801]
[-127.73913574 -36.90469360]
[-113.41654205 -32.44787979]
[-99.09394073 -27.99106407]
[-84.77134705 -23.53424835]
[-70.40316010 -19.22666359]
[-55.99094391 -15.06877518]
[-41.57872772 -10.91088772]
[-51.50526428 -22.15650368]
[-57.07630920 -36.08358002]
[-57.64411545 -51.07283020]
[-53.14267349 -65.38146210]
[-44.09535599 -77.34583282]
[-31.55408669 -85.57483673]
[-16.97703171 -89.11171722]
[-2.05905271 -87.54522705]
[11.46535110 -81.05750275]
[22.02370644 -70.40287781]
[28.38840485 -56.82014465]
[29.81942558 -41.88856125]
[26.15038872 -27.34420776]
[17.80788612 -14.87814903]
[5.76189423 -5.93979836]
[-8.58700752 -1.56841266]
[-23.57331085 -2.27287507]
[-11.31094265 6.36624098]
[0.95142531 15.00535679]
[13.21379375 23.64447403]
[25.47616196 32.28358841]
[41.87634659 28.69306564]
[56.09623718 38.23658752]
[59.10388184 55.43808365]
[71.54331970 63.82022476]
[83.98275757 72.20236969]
[96.42220306 80.58451080]
[111.38244629 79.49320221]
[122.47376251 69.39455414]
[126.93653870 53.61432266]
[142.89825439 49.85192871]
[153.93887329 61.97780609]
[148.70074463 77.51788330]
[132.57241821 80.48587036]
[121.48110199 90.58451843]
[126.82260895 104.60122681]
[141.82179260 104.75726318]
[155.70170593 97.16394043]
[168.34780884 105.03321838]
[183.34700012 105.18925476]
[198.34619141 105.34529114]
[188.98306274 93.62641907]
[190.45738220 78.69905090]
[201.93208313 69.03825378]
[216.89237976 70.12898254]
[226.84448242 81.35197449]
[226.13806152 96.33533478]
[215.17272949 106.57273865]
[230.03578186 108.59507751]
[244.89881897 110.61740875]
[259.86355591 103.91004944]
[272.99438477 113.73419952]
[270.78338623 129.98361206]
[255.50511169 135.94229126]
[242.87649536 125.48046112]
[228.01344299 123.45812225]
[213.15039062 121.43579102]
[198.19015503 120.34447479]
[183.19096375 120.18843842]
[168.19177246 120.03240204]
[155.38470459 127.63689423]
[141.66575623 119.75645447]
[126.66657257 119.60041809]
[121.33576202 124.87606049]
[134.42398071 132.20399475]
[147.51219177 139.53192139]
[162.16596985 142.73612976]
[172.30615234 153.78948975]
[174.23805237 168.66455078]
[167.25775146 181.94143677]
[153.90861511 188.78251648]
[139.05455017 186.69517517]
[128.10784912 176.43995667]
[125.05690002 161.75483704]
[117.86551666 148.59109497]
[110.67413330 135.42735291]
[105.34332275 140.70300293]
[105.34332275 155.70300293]
[105.34332275 170.70300293]
[105.34332275 185.70300293]
[105.34332275 200.70300293]
[105.34332275 215.70300293]
[105.34332275 230.70300293]
[105.34332275 245.70300293]
[105.34332275 260.70300293]
[105.34332275 275.70300293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 91]
[14 90]
[15 89]
[16 88]
[20 85]
[21 84]
[22 83]
[23 82]
[24 81]
[25 64]
[26 63]
[27 62]
[29 61]
[30 60]
[31 59]
[32 58]
[33 53]
[34 52]
[35 51]
[36 50]
[37 45]
[38 44]
[92 99]
[93 98]
[100 127]
[101 126]
[103 124]
[104 123]
[105 122]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
