%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUCCUAACACUCACAACAAAACUAACUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAxxxxxxxxxxCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.19045258 212.81375122]
[96.56647491 197.82673645]
[95.94249725 182.83972168]
[95.31851959 167.85269165]
[94.69454193 152.86567688]
[94.07056427 137.87866211]
[93.44658661 122.89164734]
[92.82260895 107.90463257]
[90.64577484 93.06343079]
[86.93961334 78.52848816]
[83.23345184 63.99355698]
[79.37628937 49.49795914]
[75.36854553 35.04327011]
[71.36080933 20.58858299]
[67.35306549 6.13389397]
[63.34532928 -8.32079506]
[48.67612457 -5.16723680]
[33.84712982 -2.88001752]
[18.90946007 -1.46702123]
[3.91461396 -0.93311894]
[-11.08572102 -1.28015113]
[-26.03983498 -2.50692129]
[-40.89617538 -4.60920095]
[-55.60353470 -7.57974243]
[-70.11120605 -11.40830612]
[-84.36918640 -16.08169365]
[-98.32831573 -21.58379555]
[-111.94048309 -27.89564323]
[-125.15876007 -34.99547958]
[-137.93757629 -42.85883331]
[-150.23287964 -51.45858765]
[-162.00230408 -60.76511002]
[-173.20524597 -70.74630737]
[-183.80311584 -81.36778259]
[-193.75936890 -92.59291077]
[-203.03968811 -104.38300323]
[-211.61206055 -116.69741821]
[-219.44696045 -129.49369812]
[-226.51737976 -142.72773743]
[-232.79893494 -156.35391235]
[-238.26995850 -170.32524109]
[-242.91162109 -184.59358215]
[-246.70790100 -199.10974121]
[-249.64570618 -213.82366943]
[-251.71493530 -228.68464661]
[-252.90843201 -243.64146423]
[-253.22209167 -258.64251709]
[-252.65483093 -273.63613892]
[-251.20860291 -288.57064819]
[-248.88839722 -303.39450073]
[-245.70220947 -318.05667114]
[-241.66102600 -332.50656128]
[-236.77877808 -346.69436646]
[-231.07229614 -360.57119751]
[-224.56123352 -374.08920288]
[-217.26806641 -387.20181274]
[-209.21792603 -399.86376953]
[-200.43853760 -412.03149414]
[-190.96020508 -423.66296387]
[-180.81558228 -434.71817017]
[-170.03962708 -445.15890503]
[-158.66950989 -454.94924927]
[-146.74441528 -464.05545044]
[-134.30545044 -472.44607544]
[-121.39550018 -480.09222412]
[-108.05906677 -486.96755981]
[-94.34212494 -493.04833984]
[-80.29195404 -498.31362915]
[-65.95700073 -502.74526978]
[-51.38666153 -506.32797241]
[-36.63117981 -509.04940796]
[-21.74141502 -510.90017700]
[-6.76869631 -511.87393188]
[8.23536205 -511.96728516]
[23.21903801 -511.17990112]
[38.13067627 -509.51452637]
[52.91888046 -506.97689819]
[67.53266144 -503.57577515]
[81.92165375 -499.32284546]
[96.03624725 -494.23275757]
[109.82778931 -488.32312012]
[123.24874115 -481.61428833]
[136.25282288 -474.12936401]
[148.79522705 -465.89413452]
[160.83270264 -456.93704224]
[172.32376099 -447.28894043]
[183.22877502 -436.98306274]
[193.51017761 -426.05496216]
[203.13250732 -414.54229736]
[212.06260681 -402.48477173]
[220.26966858 -389.92395020]
[227.72543335 -376.90310669]
[234.40417480 -363.46716309]
[240.28288269 -349.66241455]
[245.34129333 -335.53643799]
[249.56195068 -321.13793945]
[252.93032837 -306.51657104]
[255.43479919 -291.72271729]
[257.06674194 -276.80737305]
[257.82049561 -261.82199097]
[257.69351196 -246.81816101]
[256.68621826 -231.84767151]
[254.80206299 -216.96209717]
[252.04756165 -202.21273804]
[248.43218994 -187.65048218]
[243.96842957 -173.32548523]
[238.67166138 -159.28715515]
[232.56013489 -145.58387756]
[225.65493774 -132.26289368]
[217.97985840 -119.37011719]
[209.56137085 -106.94999695]
[200.42846680 -95.04534912]
[190.61265564 -83.69720459]
[180.14776611 -72.94469452]
[169.06987000 -62.82487106]
[157.41716003 -53.37263107]
[145.22981262 -44.62055588]
[132.54981995 -36.59881210]
[119.42090607 -29.33505821]
[105.88833618 -22.85432816]
[91.99874115 -17.17896652]
[77.80001831 -12.32853508]
[81.80775452 2.12615347]
[85.81549835 16.58084106]
[89.82323456 31.03553009]
[93.83097839 45.49021912]
[98.68024445 51.13204956]
[97.76838684 60.28739548]
[101.47454834 74.82233429]
[105.18070984 89.35726929]
[111.34966278 75.68452454]
[123.44765472 66.81668091]
[138.34315491 65.04916382]
[152.18051147 70.83947754]
[161.37794495 82.68881989]
[163.55476379 97.53002930]
[158.14747620 111.52149963]
[146.55575562 121.04158783]
[131.78007507 123.62603760]
[117.64508820 118.60588074]
[107.80962372 107.28065491]
[108.43360138 122.26766968]
[109.05757904 137.25468445]
[109.68155670 152.24169922]
[110.30553436 167.22871399]
[110.92951202 182.21574402]
[111.55348969 197.20275879]
[112.17746735 212.18977356]
[118.87745667 227.76367188]
[105.76692963 238.51310730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 130]
[10 129]
[11 128]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
