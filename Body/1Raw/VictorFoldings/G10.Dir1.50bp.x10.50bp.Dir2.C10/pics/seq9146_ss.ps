%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGAGUACUUCGAGUCUCCCUUCACCAUUUCCGACGGCAUCUACGGCUCAACAUUUUUUGUxxxxxxxxxxUGACACUGAGCCACAACCCAAACAACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[4.10938787 225.79365540]
[-4.57798767 218.66970825]
[-15.01780033 229.44052124]
[-19.06674957 244.73484802]
[-33.48056793 248.48864746]
[-43.92038345 259.25946045]
[-54.36019516 270.03027344]
[-64.80001068 280.80108643]
[-75.23982239 291.57186890]
[-85.67963409 302.34268188]
[-96.11944580 313.11349487]
[-106.55925751 323.88430786]
[-116.99906921 334.65512085]
[-121.04801941 349.94946289]
[-135.46183777 353.70324707]
[-134.96467590 369.49972534]
[-145.84365845 380.96371460]
[-161.64450073 381.29385376]
[-172.99282837 370.29425049]
[-173.15588379 354.49081421]
[-162.03694153 343.25939941]
[-146.23265076 343.26342773]
[-142.93041992 328.73950195]
[-127.76987457 324.21530151]
[-117.33006287 313.44448853]
[-106.89025116 302.67367554]
[-96.45043945 291.90289307]
[-86.01062775 281.13208008]
[-75.57081604 270.36126709]
[-65.13100433 259.59045410]
[-54.69118881 248.81964111]
[-44.25137711 238.04884338]
[-40.94915390 223.52490234]
[-25.78860855 219.00070190]
[-15.34879589 208.22988892]
[-26.94586945 194.35995483]
[-36.88442993 179.25723267]
[-45.03462982 163.11901855]
[-51.28998947 146.15618896]
[-55.56878662 128.59033203]
[-57.81512070 110.65095520]
[-57.99963760 92.57241821]
[-56.11993408 74.59092712]
[-52.20056534 56.94139862]
[-46.29273224 39.85441971]
[-38.47362900 23.55322647]
[-28.84539986 8.25078869]
[-17.53384018 -5.85296917]
[-4.68673277 -18.57378578]
[9.52807903 -29.74546814]
[24.92488289 -39.22205734]
[41.30252457 -46.87974930]
[58.44703293 -52.61849594]
[76.13441467 -56.36332321]
[74.57683563 -71.28223419]
[73.01925659 -86.20114899]
[71.46167755 -101.12005615]
[69.90409088 -116.03897095]
[68.34651184 -130.95788574]
[64.33877563 -145.41256714]
[57.99164200 -159.00352478]
[51.64451218 -172.59446716]
[37.11748886 -179.40220642]
[33.52281189 -195.03735352]
[43.61801147 -207.50596619]
[59.65891266 -207.24320984]
[69.34030914 -194.45062256]
[65.23546600 -178.94160461]
[71.58259583 -165.35064697]
[77.92972565 -151.75970459]
[79.87184143 -166.63343811]
[86.69849396 -179.98997498]
[97.61594391 -190.27633667]
[111.35483551 -196.29653931]
[126.31774902 -197.35064697]
[140.76496887 -193.31605530]
[153.01672363 -184.66189575]
[161.64851379 -172.39437866]
[165.65673828 -157.93981934]
[164.57534790 -142.97885132]
[158.53007507 -129.25097656]
[148.22381592 -118.35230255]
[134.85484314 -111.55003357]
[119.97759247 -109.63505554]
[105.32180023 -112.83000946]
[92.59149170 -120.76344299]
[83.26542664 -132.51545715]
[84.82300568 -117.59654999]
[86.38058472 -102.67764282]
[87.93817139 -87.75872803]
[89.49575043 -72.83981323]
[91.05332947 -57.92090225]
[106.81159973 -58.02739334]
[122.50226593 -56.56533051]
[137.96957397 -53.54923248]
[153.05999756 -49.00902939]
[167.62376404 -42.98979187]
[181.51631165 -35.55126572]
[194.59974670 -26.76728249]
[206.74418640 -16.72503090]
[217.82911682 -5.52418852]
[227.74449158 6.72406769]
[236.39190674 19.89816284]
[243.68550110 33.86733627]
[249.55291748 48.49292755]
[253.93589783 63.62976837]
[256.79092407 79.12761688]
[258.08969116 94.83263397]
[257.81930542 110.58895111]
[272.72119141 112.30163574]
[287.62310791 114.01432800]
[302.52499390 115.72702026]
[313.75350952 104.84332275]
[329.35455322 103.77503204]
[341.96182251 113.02656555]
[345.62252808 128.22962952]
[338.60821533 142.20579529]
[324.23080444 148.35595703]
[309.27890015 143.77619934]
[300.81231689 130.62892151]
[285.91040039 128.91622925]
[271.00851440 127.20353699]
[256.10659790 125.49085236]
[253.90339661 136.50752258]
[250.92375183 147.34001160]
[247.18269348 157.93368530]
[242.69909668 168.23507690]
[237.49557495 178.19221497]
[231.59838867 187.75486755]
[225.03729248 196.87481689]
[217.84538269 205.50601196]
[210.05894470 213.60493469]
[201.71726990 221.13072205]
[192.86241150 228.04541016]
[183.53907776 234.31410217]
[173.79426575 239.90518188]
[163.67718506 244.79043579]
[153.23884583 248.94522095]
[142.53190613 252.34858704]
[131.61041260 254.98333740]
[120.52942657 256.83621216]
[109.34487152 257.89782715]
[98.11318207 258.16287231]
[86.89100647 257.62997437]
[75.73496246 256.30181885]
[64.70133972 254.18515015]
[53.84579468 251.29058838]
[43.22309875 247.63278198]
[32.88684464 243.23016357]
[22.88917542 238.10494995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[5 32]
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[15 22]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 70]
[61 69]
[62 68]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
