%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAAxxxxxxxxxxACGCCUUCUUCAAAGCCAUACUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[144.11486816 314.70397949]
[143.49089050 299.71694946]
[142.86691284 284.72994995]
[142.24293518 269.74291992]
[141.61897278 254.75590515]
[140.99499512 239.76889038]
[140.37101746 224.78187561]
[139.74703979 209.79486084]
[136.19227600 195.22215271]
[129.84513855 181.63121033]
[123.49800873 168.04025269]
[111.10208130 159.78251648]
[112.27313995 144.00471497]
[105.92601013 130.41375732]
[97.20955658 132.39410400]
[87.87110901 131.80842590]
[78.68161774 128.47467041]
[70.46099854 122.44532013]
[64.00633240 114.01921082]
[60.01788330 103.73114014]
[46.11532974 109.36309814]
[32.21277237 114.99505615]
[18.31021690 120.62701416]
[16.26623154 135.84928894]
[6.87225103 148.00036621]
[-7.34479380 153.81166077]
[-22.56058884 151.71997070]
[-34.68215942 142.28794861]
[-40.44886780 128.05276489]
[-38.30949783 112.84359741]
[-28.83952522 100.75165558]
[-14.58632851 95.02959442]
[0.61605477 97.21662903]
[12.67825985 106.72445679]
[26.58081627 101.09249878]
[40.48337173 95.46054077]
[54.38592911 89.82859039]
[54.69798279 74.83183289]
[41.04174423 68.62642670]
[27.38550186 62.42102051]
[13.72926044 56.21561050]
[0.07301920 50.01020432]
[-12.29828262 53.80556488]
[-23.56655884 48.30602646]
[-27.89827347 36.96832275]
[-41.42246246 30.48015594]
[-57.72377777 32.26879883]
[-67.20394897 18.88752747]
[-60.11058807 4.10184813]
[-43.74074173 3.12199974]
[-34.93429947 16.95596695]
[-21.41010857 23.44413185]
[-4.04096746 21.13916779]
[6.27842617 36.35396194]
[19.93466759 42.55937195]
[33.59090805 48.76477814]
[47.24715042 54.97018433]
[60.90339279 61.17559052]
[74.86377716 55.68856049]
[80.64005280 41.84534073]
[86.41632843 28.00212479]
[92.19259644 14.15890694]
[96.35048676 -0.25330892]
[98.83560181 -15.04601574]
[101.32072449 -29.83872414]
[103.80583954 -44.63143158]
[89.87452698 -50.36434174]
[77.56849670 -59.05395126]
[67.50501251 -70.26438904]
[60.18885040 -83.43334961]
[55.98699188 -97.90028381]
[55.11019897 -112.93953705]
[57.60245132 -127.79673767]
[63.33873749 -141.72665405]
[72.03132629 -154.03057861]
[83.24420929 -164.09135437]
[96.41493988 -171.40432739]
[110.88288879 -175.60267639]
[125.92234802 -176.47583008]
[140.77894592 -173.97996521]
[154.70747375 -168.24031067]
[167.00930786 -159.54473877]
[177.06735229 -148.32942200]
[184.37713623 -135.15692139]
[188.57197571 -120.68795013]
[189.44148254 -105.64827728]
[186.94203186 -90.79228973]
[181.19898987 -76.86514282]
[172.50044250 -64.56542969]
[161.28268433 -54.51009750]
[148.10841370 -47.20351410]
[133.63842773 -43.01217270]
[118.59854889 -42.14631271]
[116.11342621 -27.35360527]
[113.62831116 -12.56089783]
[111.14319611 2.23180962]
[122.02071381 -8.09677029]
[136.41664124 -12.31071568]
[151.14672852 -9.47794151]
[162.95280457 -0.22503109]
[169.22349548 13.40135765]
[168.57176208 28.38719177]
[161.14178467 41.41774368]
[148.57698059 49.61077881]
[133.65658569 51.15406799]
[119.68084717 45.70624924]
[109.74106598 34.47233582]
[106.03581238 19.93517876]
[100.25954437 33.77839661]
[94.48326874 47.62161636]
[88.70700073 61.46483231]
[109.99916077 63.00570679]
[126.50394440 74.92213440]
[133.90179443 92.82008362]
[130.93707275 110.95592499]
[119.51696014 124.06663513]
[125.86408997 137.65757751]
[138.71400452 146.88743591]
[137.08895874 161.69313049]
[143.43609619 175.28407288]
[149.78321838 188.87503052]
[151.47074890 173.97026062]
[157.40002441 160.19187927]
[167.06347656 148.71940613]
[179.63385010 140.53492737]
[194.03506470 136.33909607]
[209.03430176 136.49108887]
[223.34753418 140.97789001]
[235.74946594 149.41540527]
[245.17845154 161.08135986]
[250.82730103 174.97705078]
[252.21244812 189.91296387]
[249.21531677 204.61048889]
[242.09246826 217.81144714]
[231.45367432 228.38574219]
[218.20965576 235.42819214]
[203.49418640 238.33590698]
[188.56697083 236.85997009]
[174.70587158 231.12672424]
[163.09747314 221.62698364]
[154.73405457 209.17088318]
[155.35803223 224.15789795]
[155.98200989 239.14491272]
[156.60598755 254.13192749]
[157.22996521 269.11895752]
[157.85394287 284.10595703]
[158.47792053 299.09298706]
[159.10189819 314.07998657]
[165.80187988 329.65390015]
[152.69136047 340.40335083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 121]
[10 120]
[11 119]
[13 117]
[14 116]
[20 37]
[21 36]
[22 35]
[23 34]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[45 52]
[46 51]
[59 111]
[60 110]
[61 109]
[62 108]
[63 96]
[64 95]
[65 94]
[66 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
