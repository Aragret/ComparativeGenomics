%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUUCCCGUACUAAUUAAUCCCCUGGCCCAACCCGUCAUCUACUCUACCAUCUUUGCAGGCAxxxxxxxxxxAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-67.20590210 221.05386353]
[-79.66751862 229.40301514]
[-86.82568359 243.51226807]
[-101.70583344 244.16844177]
[-114.16744232 252.51759338]
[-126.62905884 260.86672974]
[-134.33447266 277.56268311]
[-151.85102844 278.11105347]
[-164.14308167 286.70788574]
[-176.43515015 295.30468750]
[-188.72720337 303.90151978]
[-201.01927185 312.49832153]
[-195.71195984 326.61511230]
[-194.08290100 341.60833740]
[-196.23451233 356.53552246]
[-202.03152466 370.45837402]
[-211.10954285 382.50164795]
[-222.89791870 391.90829468]
[-236.65560913 398.08703613]
[-251.51780701 400.64944458]
[-266.55026245 399.43441772]
[-280.80801392 394.51840210]
[-293.39480591 386.21038818]
[-303.51943970 375.03259277]
[-310.54547119 361.68771362]
[-314.03118896 347.01458740]
[-313.75753784 331.93560791]
[-309.74172974 317.39862061]
[-302.23611450 304.31744385]
[-291.71258545 293.51440430]
[-278.83264160 285.66851807]
[-264.40591431 281.27307129]
[-249.33927917 280.60427856]
[-234.57983398 283.70425415]
[-221.05538940 290.37808228]
[-209.61607361 300.20626831]
[-197.32402039 291.60946655]
[-185.03195190 283.01263428]
[-172.73989868 274.41583252]
[-160.44783020 265.81900024]
[-158.01596069 253.93365479]
[-147.79702759 246.67741394]
[-134.97819519 248.40512085]
[-122.51658630 240.05596924]
[-110.05497742 231.70683289]
[-103.78814697 218.19476318]
[-88.01666260 216.94140625]
[-75.55504608 208.59225464]
[-82.48264313 196.49838257]
[-88.57835388 183.96461487]
[-93.81440735 171.04808044]
[-98.16691589 157.80766296]
[-101.61605835 144.30371094]
[-104.14609528 130.59779358]
[-105.74549866 116.75239563]
[-106.40697479 102.83062744]
[-106.12751770 88.89595795]
[-104.90838623 75.01190948]
[-102.75515747 61.24176788]
[-99.67762756 47.64831543]
[-95.68983459 34.29351425]
[-90.80995941 21.23824883]
[-85.06024170 8.54203224]
[-78.46689606 -3.73725915]
[-71.05998230 -15.54364681]
[-62.87326813 -26.82330894]
[-53.94406509 -37.52482605]
[-44.31307983 -47.59941483]
[-34.02422333 -57.00114822]
[-23.12439537 -65.68716431]
[-11.66328335 -73.61786652]
[0.30686405 -80.75711060]
[12.73147869 -87.07233429]
[25.55392265 -92.53475952]
[38.71574020 -97.11948395]
[52.15693283 -100.80561066]
[65.81622314 -103.57633209]
[79.63134766 -105.41901398]
[93.53932953 -106.32525635]
[107.47676086 -106.29093933]
[121.38010406 -105.31620789]
[135.18598938 -103.40550232]
[148.83146667 -100.56754303]
[162.25434875 -96.81526947]
[175.39341736 -92.16577911]
[188.18881226 -86.64026642]
[200.58216858 -80.26392365]
[212.51701355 -73.06581116]
[223.93891907 -65.07875824]
[233.37483215 -76.73909760]
[242.81076050 -88.39943695]
[252.24667358 -100.05976868]
[261.68258667 -111.72010803]
[263.70672607 -127.99385834]
[278.91555786 -134.12767029]
[291.66354370 -123.81159973]
[288.83663940 -107.65794373]
[273.34292603 -102.28418732]
[263.90701294 -90.62385559]
[254.47109985 -78.96351624]
[245.03517151 -67.30317688]
[235.59925842 -55.64284134]
[246.13273621 -45.79806137]
[255.95333862 -35.24203110]
[265.01315308 -24.02625084]
[273.26797485 -12.20543003]
[280.67755127 0.16276464]
[287.20571899 13.01799583]
[292.82064819 26.29755402]
[297.49493408 39.93665314]
[301.20578003 53.86876297]
[303.93505859 68.02591705]
[305.66949463 82.33904266]
[306.40060425 96.73833466]
[306.12484741 111.15352631]
[304.84353638 125.51432037]
[302.56292725 139.75064087]
[317.16751099 143.17199707]
[331.77212524 146.59336853]
[346.37670898 150.01473999]
[359.67263794 141.47106934]
[375.09756470 144.91299438]
[383.50018311 158.29849243]
[379.89535522 173.68617249]
[366.42178345 181.94680786]
[351.07305908 178.17950439]
[342.95535278 164.61933899]
[328.35076904 161.19796753]
[313.74615479 157.77659607]
[299.14157104 154.35523987]
[294.13958740 170.15463257]
[287.88635254 185.50187683]
[280.42214966 200.29804993]
[271.79510498 214.44776917]
[262.06082153 227.85986328]
[251.28201294 240.44787598]
[239.52815247 252.13069153]
[226.87503052 262.83297729]
[213.40417480 272.48577881]
[199.20239258 281.02688599]
[184.36125183 288.40124512]
[168.97637939 294.56134033]
[153.14694214 299.46743774]
[136.97497559 303.08792114]
[120.56468201 305.39947510]
[104.02185059 306.38720703]
[87.45310211 306.04473877]
[70.96521759 304.37423706]
[54.66447067 301.38653564]
[38.65591431 297.10089111]
[23.04273415 291.54486084]
[7.92555618 284.75430298]
[-6.59818602 276.77294922]
[-20.43488503 267.65228271]
[-33.49536133 257.45108032]
[-45.69543457 246.23506165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[4 45]
[5 44]
[6 43]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[117 130]
[118 129]
[119 128]
[120 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
