%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCCGAGCAGUACAUGCUAAGACUUCACCAGUCAAAGCGAACUACUAUACUCAAUUGAUCxxxxxxxxxxCAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.70167542 319.40298462]
[143.08586121 304.41564941]
[142.47003174 289.42828369]
[141.85420227 274.44094849]
[141.23837280 259.45358276]
[140.62255859 244.46623230]
[140.00672913 229.47886658]
[139.39089966 214.49151611]
[136.93797302 199.69343567]
[132.68513489 185.30895996]
[128.43228149 170.92448425]
[124.17943573 156.53999329]
[119.92658997 142.15551758]
[106.33953857 145.06704712]
[92.83703613 143.81195068]
[80.63748932 138.70338440]
[70.78227234 130.39311218]
[58.62893677 139.18496704]
[46.47560501 147.97680664]
[34.32226944 156.76864624]
[30.37058258 172.31739807]
[15.69150829 178.79075623]
[1.54557979 171.22291565]
[-1.21565819 155.41926575]
[9.52598000 143.50303650]
[25.53042793 144.61531067]
[37.68376160 135.82347107]
[49.83709335 127.03162384]
[61.99042892 118.23978424]
[60.56270981 114.90360260]
[59.42717361 111.45700836]
[58.59223175 107.92552948]
[43.59302139 108.07952881]
[28.59381294 108.23352051]
[13.59460354 108.38751984]
[1.38558412 118.79518127]
[-14.33556652 115.59753418]
[-21.50892830 101.24753571]
[-14.63171101 86.75328064]
[1.02047241 83.23352051]
[13.44060612 93.38831329]
[28.43981552 93.23431396]
[43.43902588 93.08031464]
[58.43823624 92.92632294]
[64.03587341 78.00002289]
[74.77552032 66.21919250]
[89.12165833 59.26820755]
[87.89104462 44.31877136]
[86.66043091 29.36933708]
[85.42982483 14.41990280]
[70.42390442 13.76748848]
[55.61808777 11.23942947]
[41.24588776 6.87559462]
[27.53396797 0.74480981]
[14.69858932 -7.05623436]
[2.94218254 -16.40450478]
[-7.54983616 -27.15256310]
[-16.61199188 -39.13090134]
[-24.10136414 -52.15060043]
[-29.89983177 -66.00631714]
[-33.91594315 -80.47953796]
[-36.08636475 -95.34199524]
[-36.37686157 -110.35927582]
[-34.78285217 -125.29454803]
[-31.32947540 -139.91226196]
[-26.07119751 -153.98185730]
[-19.09095001 -167.28146362]
[-10.49882030 -179.60130310]
[-0.43031842 -190.74708557]
[10.95576000 -200.54302979]
[23.47984123 -208.83462524]
[36.94440079 -215.49111938]
[51.13708496 -220.40751648]
[65.83405304 -223.50628662]
[80.80351257 -224.73854065]
[95.80937958 -224.08486938]
[110.61498260 -221.55555725]
[124.98681641 -217.19052124]
[138.69821167 -211.05857849]
[151.53294373 -203.25645447]
[163.28855896 -193.90719604]
[173.77967834 -183.15824890]
[182.84082031 -171.17915344]
[190.32910156 -158.15882874]
[196.12640381 -144.30261230]
[200.14129639 -129.82905579]
[202.31045532 -114.96642303]
[202.59970093 -99.94911194]
[201.00442505 -85.01396942]
[197.54981995 -70.39655304]
[192.29035950 -56.32739258]
[185.30899048 -43.02838135]
[176.71582031 -30.70925903]
[166.64639282 -19.56432343]
[155.25947571 -9.76934052]
[142.73471069 -1.47879493]
[129.26957703 5.17656136]
[115.07648468 10.09176350]
[100.37925720 13.18929100]
[101.60987091 28.13872528]
[102.84047699 43.08816147]
[104.07109070 58.03759384]
[114.37380981 59.68817902]
[124.10509491 63.86634445]
[132.64578247 70.38899994]
[139.43276978 78.92175293]
[143.99578857 88.99554443]
[145.98948669 100.03221893]
[145.21842957 111.37760925]
[160.15444946 112.76163483]
[167.56901550 99.45960236]
[179.75688171 90.32856750]
[194.60641479 86.95052338]
[209.54484558 89.91075134]
[221.98402405 98.69637299]
[229.76875305 111.78521729]
[231.55029297 126.90956879]
[227.01998901 141.44903564]
[216.96273804 152.88458252]
[203.12101746 159.23490906]
[187.89300537 159.39981079]
[173.91702271 153.35069275]
[163.61450195 142.13560486]
[158.77041626 127.69764709]
[143.83441162 126.31362152]
[134.31106567 137.90266418]
[138.56391907 152.28715515]
[142.81675720 166.67163086]
[147.06961060 181.05610657]
[151.32244873 195.44059753]
[156.21224976 181.25997925]
[166.68579102 170.52195740]
[180.74008179 165.28012085]
[195.68733215 166.53691101]
[208.66900635 174.05198669]
[217.20242310 186.38813782]
[219.65565491 201.18617249]
[215.55950928 215.61605835]
[205.69737244 226.91818237]
[191.95529175 232.93110657]
[176.96134949 232.50488281]
[163.58302307 225.72103882]
[154.37825012 213.87570190]
[154.99407959 228.86305237]
[155.60990906 243.85040283]
[156.22573853 258.83776855]
[156.84155273 273.82510376]
[157.45738220 288.81246948]
[158.07321167 303.79980469]
[158.68904114 318.78717041]
[165.38055420 334.36471558]
[152.26417542 345.10702515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[17 29]
[18 28]
[19 27]
[20 26]
[32 44]
[33 43]
[34 42]
[35 41]
[47 102]
[48 101]
[49 100]
[50 99]
[109 125]
[110 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
