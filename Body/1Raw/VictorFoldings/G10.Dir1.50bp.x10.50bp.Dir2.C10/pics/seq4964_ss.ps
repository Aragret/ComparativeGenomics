%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUCAUAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAxxxxxxxxxxUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUAAUCCUAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-28.12986374 127.47925568]
[-42.95234680 129.78013611]
[-57.77482986 132.08100891]
[-72.15930939 136.33384705]
[-85.84993744 142.46302795]
[-99.54055786 148.59219360]
[-113.23118591 154.72137451]
[-126.92181396 160.85055542]
[-140.61244202 166.97972107]
[-150.04641724 179.68052673]
[-164.82426453 177.81913757]
[-178.51487732 183.94831848]
[-187.94886780 196.64912415]
[-202.72669983 194.78773499]
[-216.41732788 200.91691589]
[-225.85131836 213.61772156]
[-240.62915039 211.75633240]
[-254.31977844 217.88551331]
[-267.67788696 224.70907593]
[-280.66824341 232.20907593]
[-288.75091553 245.80986023]
[-303.64169312 245.47280884]
[-316.63208008 252.97280884]
[-324.35858154 267.43768311]
[-340.75549316 267.70828247]
[-348.95507812 253.50619507]
[-340.52230835 239.44134521]
[-324.13208008 239.98242188]
[-311.14169312 232.48242188]
[-303.98822021 219.41809082]
[-288.16824341 219.21870422]
[-275.17788696 211.71870422]
[-288.61581421 205.05372620]
[-291.98873901 190.43788147]
[-282.83038330 178.55830383]
[-267.83734131 178.10140991]
[-257.97259521 189.40127563]
[-260.44894409 204.19488525]
[-246.75831604 198.06570435]
[-238.30358887 185.80329895]
[-222.54650879 187.22628784]
[-208.85588074 181.09710693]
[-200.40113831 168.83470154]
[-184.64405823 170.25769043]
[-170.95343018 164.12852478]
[-162.49868774 151.86610413]
[-146.74160767 153.28909302]
[-133.05097961 147.15992737]
[-119.36035919 141.03074646]
[-105.66973114 134.90158081]
[-91.97911072 128.77239990]
[-78.28848267 122.64322662]
[-87.71044922 113.39442444]
[-87.58656311 101.26232147]
[-97.69200134 90.17719269]
[-107.79743195 79.09205627]
[-123.58039093 74.63893890]
[-127.35254669 58.67952728]
[-115.23343658 47.63149261]
[-99.69015503 52.86010742]
[-96.71229553 68.98661804]
[-86.60686493 80.07175446]
[-76.50142670 91.15689087]
[-64.20099640 92.85841370]
[-56.79616547 103.74147034]
[-60.07570267 117.25852203]
[-45.25321960 114.95764923]
[-30.43074036 112.65677643]
[-31.01603127 97.32212067]
[-29.80463028 82.02418518]
[-26.81314468 66.97276306]
[-22.08259964 52.37426758]
[-15.67786980 38.42888641]
[-7.68678474 25.32786369]
[1.78106833 13.25086021]
[12.59585190 2.36349726]
[24.60925674 -7.18492270]
[37.65653610 -15.26345634]
[51.55876923 -21.76131821]
[66.12529755 -26.58940125]
[81.15637207 -29.68149185]
[96.44586182 -30.99518967]
[111.78408813 -30.51247787]
[126.96071625 -28.23997688]
[141.76760864 -24.20884895]
[156.00172424 -18.47437668]
[169.46786499 -11.11520004]
[178.13447571 -23.35815430]
[186.80107117 -35.60110855]
[187.77459717 -51.97133255]
[202.55754089 -59.07040405]
[215.94247437 -49.59540939]
[214.16012573 -33.29340363]
[199.04403687 -26.93449974]
[190.37742615 -14.69154644]
[181.71081543 -2.44859290]
[201.12420654 16.65573502]
[216.16897583 39.36057663]
[226.19519043 64.68507385]
[240.84791565 61.47607803]
[255.50064087 58.26707840]
[270.15338135 55.05808258]
[284.80609131 51.84908676]
[288.28314209 36.98728943]
[297.87078857 25.11129379]
[311.66546631 18.57908630]
[326.92819214 18.68764114]
[340.62857056 25.41540527]
[350.04635620 37.42657471]
[353.31164551 52.33632660]
[349.77609253 67.18431854]
[340.14172363 79.02246094]
[326.32144165 85.50029755]
[311.05926514 85.33164215]
[297.38549805 78.54998016]
[288.01510620 66.50181580]
[273.36236572 69.71080780]
[258.70965576 72.91980743]
[244.05691528 76.12879944]
[229.40419006 79.33779907]
[230.74504089 91.16230774]
[231.00767517 103.05970001]
[230.18991089 114.93185425]
[228.29849243 126.68087769]
[225.34902954 138.20986938]
[221.36582947 149.42373657]
[216.38175964 160.23004150]
[210.43791199 170.53962708]
[203.58331299 180.26748657]
[195.87448120 189.33340454]
[187.37498474 197.66259766]
[178.15493774 205.18640137]
[168.29035950 211.84274292]
[157.86259460 217.57675171]
[146.95765686 222.34112549]
[135.66546631 226.09657288]
[124.07916260 228.81213379]
[112.29427338 230.46540833]
[100.40799713 231.04275513]
[88.51835632 230.53942871]
[76.72340393 228.95957947]
[65.12040710 226.31620789]
[53.80504990 222.63114929]
[42.87065887 217.93476868]
[32.40739822 212.26580811]
[22.50156212 205.67102051]
[13.23483753 198.20477295]
[4.68364716 189.92866516]
[-3.08148909 180.91093445]
[-9.99653435 171.22593689]
[-16.00446129 160.95356750]
[-21.05572510 150.17851257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 52]
[5 51]
[6 50]
[7 49]
[8 48]
[9 47]
[11 45]
[12 44]
[14 42]
[15 41]
[17 39]
[18 38]
[19 32]
[20 31]
[22 29]
[23 28]
[54 63]
[55 62]
[56 61]
[87 96]
[88 95]
[89 94]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
