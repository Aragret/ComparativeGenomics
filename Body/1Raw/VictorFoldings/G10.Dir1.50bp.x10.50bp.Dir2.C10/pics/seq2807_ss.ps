%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCUGCCCGUGAAGAGGCGGGCAUAACACAGCAAGACGAGAAGACCCUAUGGAGCUUUAAxxxxxxxxxxUAGCAUCACACACCGCACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 302.84890747]
[92.50000000 287.84890747]
[92.50000000 272.84890747]
[92.50000000 257.84890747]
[92.50000000 242.84890747]
[92.50000000 227.84890747]
[92.50000000 212.84890747]
[92.50000000 197.84890747]
[92.50000000 182.84890747]
[92.50000000 167.84890747]
[79.85923004 165.22326660]
[67.93891907 160.26451111]
[57.16545868 153.15003967]
[47.92423630 144.13433838]
[35.48479843 152.51647949]
[23.04535675 160.89862061]
[10.60591698 169.28077698]
[-1.83352339 177.66291809]
[-14.27296352 186.04505920]
[-26.71240425 194.42720032]
[-29.48879051 209.98570251]
[-42.50111771 218.95536804]
[-58.02940750 216.01464844]
[-66.86099243 202.90821838]
[-63.75625610 187.41188049]
[-50.55718231 178.71936035]
[-35.09454727 181.98776245]
[-22.65510750 173.60562134]
[-10.21566677 165.22348022]
[2.22377372 156.84132385]
[14.66321373 148.45918274]
[27.10265350 140.07704163]
[39.54209518 131.69490051]
[33.07558060 113.44793701]
[31.99159241 94.11939240]
[36.37731552 75.26380920]
[45.88001633 58.39768600]
[59.73542404 44.87751007]
[76.82919312 35.79066467]
[95.78651428 31.86798477]
[115.08271027 33.42495346]
[119.98426819 19.24839592]
[113.32575226 5.16642284]
[118.49857330 -9.14079857]
[131.96461487 -15.40189075]
[127.02931976 -27.36419487]
[131.45133972 -39.09725571]
[142.33442688 -44.46992874]
[147.52984619 -58.54145050]
[152.72526550 -72.61296844]
[157.92068481 -86.68448639]
[163.11608887 -100.75600433]
[168.31150818 -114.82752991]
[163.62614441 -126.88991547]
[168.29130554 -138.52844238]
[179.28381348 -143.67353821]
[184.77084351 -157.63392639]
[190.25787354 -171.59432983]
[195.74490356 -185.55471802]
[198.38375854 -200.32077026]
[198.07171631 -215.31752014]
[197.60366821 -230.31021118]
[196.97969055 -245.29724121]
[196.19984436 -260.27694702]
[195.26422119 -275.24774170]
[194.32858276 -290.21853638]
[179.85246277 -294.77993774]
[168.00410461 -304.26574707]
[160.38589478 -317.39309692]
[158.02812195 -332.38659668]
[161.24967957 -347.21853638]
[169.61485291 -359.88299561]
[181.99234009 -368.66717529]
[196.70819092 -372.38314819]
[211.77218628 -370.52832031]
[225.14706421 -363.35357666]
[235.02397156 -351.82919312]
[240.06713867 -337.51379395]
[239.59451294 -322.34338379]
[233.67004395 -308.36965942]
[223.09492493 -297.48245239]
[209.29937744 -291.15417480]
[210.23500061 -276.18338013]
[211.17063904 -261.21258545]
[214.74998474 -254.69078064]
[211.96670532 -245.92121887]
[212.59068298 -230.93418884]
[216.03358459 -224.33934021]
[213.06846619 -215.62957764]
[213.38052368 -200.63282776]
[220.94857788 -213.58367920]
[231.94113159 -223.78973389]
[245.41719055 -230.37728882]
[260.22311401 -232.78242493]
[275.09143066 -230.79925537]
[288.74935913 -224.59751892]
[300.02767944 -214.70816040]
[307.96090698 -201.97773743]
[311.86993408 -187.49603271]
[311.42010498 -172.50277710]
[306.64996338 -158.28147888]
[297.96780396 -146.04953003]
[286.11691284 -136.85406494]
[272.11178589 -131.48228455]
[257.15130615 -130.39401245]
[242.51620483 -133.68241882]
[229.45930481 -141.06600952]
[219.09835815 -151.91268921]
[212.32029724 -165.29394531]
[209.70529175 -180.06768799]
[204.21826172 -166.10728455]
[198.73123169 -152.14689636]
[193.24420166 -138.18650818]
[196.80673218 -121.03109741]
[182.38302612 -109.63211060]
[177.18760681 -95.56059265]
[171.99220276 -81.48907471]
[166.79678345 -67.41754913]
[161.60136414 -53.34603500]
[156.40594482 -39.27451324]
[160.32460022 -22.19692421]
[146.14117432 -10.50033951]
[152.86419678 2.74113059]
[148.09527588 17.18800163]
[134.16082764 24.14994621]
[129.25927734 38.32650375]
[139.41482544 44.26673508]
[148.39952087 51.86257935]
[155.94645691 60.88838959]
[161.83146667 71.07604218]
[165.87969971 82.12291718]
[167.97091675 93.70084381]
[168.04299927 105.46589661]
[166.09378052 117.06857300]
[162.18119812 128.16421509]
[156.42146301 138.42321777]
[148.98567200 147.54081726]
[140.09471130 155.24617004]
[130.01271057 161.31037903]
[119.03913879 165.55331421]
[107.50000000 167.84890747]
[107.50000000 182.84890747]
[107.50000000 197.84890747]
[107.50000000 212.84890747]
[107.50000000 227.84890747]
[107.50000000 242.84890747]
[107.50000000 257.84890747]
[107.50000000 272.84890747]
[107.50000000 287.84890747]
[107.50000000 302.84890747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[41 126]
[42 125]
[45 122]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[56 113]
[57 112]
[58 111]
[59 110]
[60 90]
[61 89]
[62 87]
[63 86]
[64 84]
[65 83]
[66 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
