%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAUCAUCCUAGCCCUAAGUCUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCxxxxxxxxxxCCAAAAAACACAUAAUUUGAAUCAACACAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 286.71249390]
[92.50000000 271.71249390]
[92.50000000 256.71249390]
[92.50000000 241.71249390]
[92.50000000 226.71249390]
[92.50000000 211.71249390]
[92.50000000 196.71249390]
[92.50000000 181.71249390]
[92.50000000 166.71249390]
[92.50000000 151.71249390]
[70.35102844 143.02755737]
[54.34814453 125.42321777]
[40.33143234 130.76472473]
[26.31471825 136.10624695]
[12.35432816 141.59327698]
[-1.54822814 147.22523499]
[-15.45078373 152.85719299]
[-29.35334015 158.48915100]
[-31.79209518 170.20347595]
[-39.52716827 179.17439270]
[-50.52939606 183.22715759]
[-61.99780655 181.45425415]
[-71.07254028 174.41580200]
[-85.19734192 179.46455383]
[-99.32214355 184.51332092]
[-103.55596924 199.44161987]
[-115.77661133 209.00381470]
[-131.28500366 209.52302551]
[-144.11782837 200.79960632]
[-149.34063721 186.18789673]
[-144.94511414 171.30639648]
[-132.62145996 161.87733459]
[-117.10835266 161.52639771]
[-104.37090302 170.38851929]
[-90.24610138 165.33975220]
[-76.12129974 160.29100037]
[-69.35729218 143.33087158]
[-52.07278824 136.52328491]
[-34.98529816 144.58659363]
[-21.08274078 138.95463562]
[-7.18018484 133.32267761]
[6.72237110 127.69071960]
[11.77361774 122.22898102]
[20.97320557 122.08953094]
[34.98991776 116.74801636]
[49.00662994 111.40650940]
[47.88039398 96.26121521]
[51.15686417 81.43174744]
[58.55927277 68.17079926]
[69.46231079 57.59856415]
[82.94496918 50.60811996]
[97.86831665 47.78996277]
[112.97173309 49.38215637]
[126.97939301 55.25020218]
[136.48774719 43.64886093]
[139.25134277 28.07089233]
[153.30325317 23.13193130]
[162.81159973 11.53059006]
[172.31996155 -0.07075109]
[181.82832336 -11.67209244]
[191.33668518 -23.27343369]
[200.84503174 -34.87477493]
[203.60862732 -50.45274353]
[217.66053772 -55.39170456]
[227.16889954 -66.99304199]
[236.67724609 -78.59438324]
[226.26879883 -89.42031097]
[217.21386719 -101.40130615]
[209.63954163 -114.36919403]
[203.65217590 -128.14190674]
[199.33580017 -142.52610779]
[196.75103760 -157.31987000]
[195.93417358 -172.31550598]
[196.89665222 -187.30250549]
[199.62496948 -202.07046509]
[204.08084106 -216.41206360]
[210.20169067 -230.12599182]
[217.90161133 -243.01969910]
[227.07247925 -254.91218567]
[237.58558655 -265.63650513]
[249.29331970 -275.04211426]
[262.03134155 -282.99694824]
[275.62078857 -289.38934326]
[289.87094116 -294.12957764]
[304.58172607 -297.15106201]
[319.54660034 -298.41143799]
[334.55551147 -297.89297485]
[349.39776611 -295.60296631]
[363.86495972 -291.57354736]
[377.75405884 -285.86129761]
[390.87002563 -278.54638672]
[403.02874756 -269.73150635]
[414.05953979 -259.54043579]
[423.80755615 -248.11624146]
[432.13592529 -235.61926270]
[438.92776489 -222.22496033]
[444.08770752 -208.12135315]
[447.54330444 -193.50646973]
[449.24606323 -178.58543396]
[449.17205811 -163.56774902]
[447.32235718 -148.66423035]
[443.72293091 -134.08409119]
[438.42425537 -120.03202820]
[431.50079346 -106.70529938]
[423.04965210 -94.29099274]
[413.18954468 -82.96338654]
[402.05886841 -72.88150024]
[389.81387329 -64.18687439]
[376.62646484 -57.00156784]
[362.68179321 -51.42644501]
[348.17556763 -47.53977585]
[333.31149292 -45.39612198]
[318.29818726 -45.02557755]
[303.34646606 -46.43334198]
[288.66616821 -49.59965515]
[274.46340942 -54.48006821]
[260.93759155 -61.00606155]
[248.27859497 -69.08602905]
[238.77023315 -57.48468781]
[229.26187134 -45.88334656]
[227.17839050 -31.13518143]
[212.44638062 -25.36641693]
[202.93801880 -13.76507473]
[193.42965698 -2.16373372]
[183.92131042 9.43760777]
[174.41294861 21.03894806]
[164.90458679 32.64028931]
[162.82109070 47.38845444]
[148.08909607 53.15721893]
[138.58073425 64.75856018]
[144.73216248 72.99137878]
[149.15325928 82.26895905]
[151.67297363 92.23241425]
[152.19387817 102.49633789]
[150.69578552 112.66369629]
[147.23667908 122.34119415]
[141.95033264 131.15447998]
[135.04125977 138.76264954]
[126.77670288 144.87136841]
[117.47636414 149.24438477]
[107.50000000 151.71249390]
[107.50000000 166.71249390]
[107.50000000 181.71249390]
[107.50000000 196.71249390]
[107.50000000 211.71249390]
[107.50000000 226.71249390]
[107.50000000 241.71249390]
[107.50000000 256.71249390]
[107.50000000 271.71249390]
[107.50000000 286.71249390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 46]
[13 45]
[14 44]
[15 42]
[16 41]
[17 40]
[18 39]
[23 36]
[24 35]
[25 34]
[54 130]
[55 129]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[64 120]
[65 119]
[66 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
