%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAAUUUACACUCACAACAxxxxxxxxxxCUAUACAACCGUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.33592224 274.34368896]
[97.33592224 259.34368896]
[97.33592224 244.34370422]
[97.33592224 229.34370422]
[97.33592224 214.34370422]
[97.33592224 199.34370422]
[97.33592224 184.34370422]
[97.33592224 169.34370422]
[97.33592224 154.34370422]
[97.33592224 139.34370422]
[87.87497711 136.30549622]
[79.74953461 131.10920715]
[73.41955566 124.22355652]
[69.19757843 116.20574188]
[67.23478699 107.65821838]
[67.51905060 99.18431091]
[69.88467407 91.34597015]
[74.03259277 84.62650299]
[79.55912781 79.40085602]
[72.10421753 66.38454437]
[64.64930725 53.36824036]
[50.95571899 53.43568039]
[38.85684204 47.35004044]
[30.92570686 36.55840302]
[16.10795021 38.88950348]
[1.29019141 41.22060776]
[-13.52756691 43.55171204]
[-28.34532547 45.88281631]
[-43.16308212 48.21392059]
[-49.29125977 62.37192154]
[-62.11371994 70.95026398]
[-77.53887177 71.21163177]
[-90.64459991 63.07262421]
[-97.24890900 49.13036728]
[-95.24440002 33.83378220]
[-85.27069855 22.06395721]
[-70.51037598 17.57660103]
[-55.67339325 21.80360985]
[-45.49418640 33.39616394]
[-30.67642784 31.06505775]
[-15.85867023 28.73395538]
[-1.04091251 26.40285110]
[13.77684593 24.07174683]
[28.59460449 21.74064255]
[34.51911163 7.23648596]
[47.20608139 -1.95650995]
[45.95920944 -16.90459633]
[44.71233368 -31.85268402]
[43.46545792 -46.80076981]
[42.21858597 -61.74885941]
[35.27827835 -48.45103455]
[25.92057419 -36.72783279]
[14.49163914 -27.01292610]
[1.41425121 -19.66568756]
[-12.82782745 -14.95790577]
[-27.70775032 -13.06373405]
[-42.67507553 -14.05324078]
[-57.17613220 -17.88982201]
[-70.67449188 -24.43155670]
[-82.67082214 -33.43644714]
[-92.72135162 -44.57138824]
[-100.45429230 -57.42446899]
[-105.58357239 -71.52022552]
[-107.91947174 -86.33722687]
[-107.37555695 -101.32736969]
[-103.97196198 -115.93611145]
[-97.83459473 -129.62306213]
[-89.19047546 -141.88191223]
[-78.35939026 -152.25917053]
[-65.74198914 -160.37095642]
[-51.80501556 -165.91722107]
[-37.06404114 -168.69276428]
[-22.06436157 -168.59492493]
[-7.36084557 -165.62733459]
[6.50258970 -159.89974976]
[19.01310539 -151.62406921]
[29.70791054 -141.10641479]
[38.19137955 -128.73585510]
[44.14969254 -114.97000122]
[47.36243820 -100.31809998]
[47.71124649 -85.32871246]
[48.18487167 -101.14282227]
[61.37126160 -108.06874847]
[69.09534454 -120.92714691]
[76.81943512 -133.78555298]
[84.54351807 -146.64395142]
[84.28666687 -163.04109192]
[98.49560547 -171.22877502]
[112.55339813 -162.78421021]
[111.99858856 -146.39445496]
[97.40191650 -138.91987610]
[89.67783356 -126.06147003]
[81.95375061 -113.20306396]
[74.22966766 -100.34465790]
[74.30851746 -85.45026398]
[60.56964874 -77.60462189]
[57.16667175 -62.99573135]
[58.41354752 -48.04764557]
[59.66041946 -33.09955978]
[60.90729523 -18.15147209]
[62.15417099 -3.20338440]
[76.12770081 3.37956762]
[84.72834778 16.36691093]
[85.34584808 32.06221008]
[77.66561127 45.91332626]
[85.12052155 58.92963791]
[92.57543182 71.94594574]
[122.86206818 74.52839661]
[138.98599243 105.92587280]
[153.62950134 109.17669678]
[168.27299500 112.42752838]
[182.91650391 115.67835236]
[187.14439392 114.16625977]
[191.21492004 114.12374878]
[194.67453003 115.31245422]
[197.19783020 117.36840057]
[198.61808777 119.85641479]
[212.94068909 124.31323242]
[228.80986023 120.17783356]
[240.13159180 132.04165649]
[235.25906372 147.70022583]
[219.20469666 151.04533386]
[208.48387146 138.63583374]
[194.16127014 134.17901611]
[179.66567993 130.32185364]
[165.02217102 127.07102966]
[150.37867737 123.82019806]
[135.73516846 120.56937408]
[129.88536072 125.26295471]
[141.17771912 135.13629150]
[152.47006226 145.00962830]
[166.71138000 149.71972656]
[174.37252808 162.61572266]
[171.69760132 177.37528992]
[159.99800110 186.76248169]
[145.00950623 186.17517090]
[134.08029175 175.90130615]
[132.56849670 160.97760010]
[125.37712097 147.81385803]
[118.18573761 134.65011597]
[112.33592224 139.34370422]
[112.33592224 154.34370422]
[112.33592224 169.34370422]
[112.33592224 184.34370422]
[112.33592224 199.34370422]
[112.33592224 214.34370422]
[112.33592224 229.34370422]
[112.33592224 244.34370422]
[112.33592224 259.34368896]
[112.33592224 274.34368896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 107]
[20 106]
[21 105]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[46 101]
[47 100]
[48 99]
[49 98]
[50 97]
[81 96]
[83 94]
[84 93]
[85 92]
[86 91]
[109 128]
[110 127]
[111 126]
[112 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
