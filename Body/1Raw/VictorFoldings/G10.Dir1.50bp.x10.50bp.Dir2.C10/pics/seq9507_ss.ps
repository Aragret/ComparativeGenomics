%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAGCCCUAAGUCUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCGAAUUGGUxxxxxxxxxxCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[129.14678955 358.95095825]
[129.14678955 343.95095825]
[129.14678955 328.95095825]
[129.14678955 313.95095825]
[129.14678955 298.95095825]
[129.14678955 283.95095825]
[129.14678955 268.95095825]
[129.14678955 253.95097351]
[129.14678955 238.95097351]
[129.14678955 223.95097351]
[126.84590912 209.12849426]
[122.29862213 194.83436584]
[117.75132751 180.54023743]
[113.20404053 166.24609375]
[108.65674591 151.95196533]
[104.10945892 137.65783691]
[96.52728271 137.72189331]
[89.08425140 136.27461243]
[82.07855225 133.37397766]
[75.79087830 129.13621521]
[70.47315216 123.73110962]
[66.33841705 117.37522125]
[51.91102982 121.48016357]
[37.48364258 125.58510590]
[23.05625916 129.69004822]
[20.50072670 144.73771667]
[11.66233635 157.18141174]
[-1.70404458 164.55044556]
[-16.94450951 165.38168335]
[-31.03305626 159.51008606]
[-41.17238998 148.10145569]
[-45.34933853 133.42100525]
[-42.73456955 118.38352203]
[-33.84724426 105.97473145]
[-20.45194817 98.65839386]
[-5.20832777 97.88717651]
[8.85698605 103.81420898]
[18.95131493 115.26266479]
[33.37870026 111.15772247]
[47.80608368 107.05278015]
[62.23346710 102.94783020]
[62.14372635 93.37308502]
[64.47732544 83.94471741]
[69.15332794 75.27471161]
[75.93666840 67.94310760]
[84.44928741 62.45933914]
[94.19083405 59.22717667]
[104.56795502 58.51562881]
[114.93038940 60.43791199]
[116.46768188 45.51689529]
[118.00497437 30.59588051]
[119.54226685 15.67486286]
[121.07955933 0.75384670]
[122.31017303 -14.19558811]
[123.23358154 -29.16713715]
[124.15699768 -44.13868713]
[115.55876923 -60.38987350]
[125.74339294 -74.64883423]
[126.35921478 -89.63619232]
[110.88364410 -100.78617096]
[105.22825623 -118.84642029]
[111.48128510 -136.55068970]
[126.97702026 -146.88768005]
[126.66903687 -161.88452148]
[126.36106110 -176.88136292]
[126.05308533 -191.87820435]
[125.74510956 -206.87503052]
[117.72609711 -220.51344299]
[125.20044708 -233.39689636]
[124.89247131 -248.39372253]
[111.16857910 -255.16966248]
[102.17498779 -267.55407715]
[99.97837067 -282.70114136]
[105.08348083 -297.13015747]
[116.31720734 -307.52545166]
[131.09812927 -311.49822998]
[146.02967834 -308.13562012]
[157.68072510 -298.21029663]
[163.37391663 -284.00305176]
[161.80101013 -268.77859497]
[153.32344055 -256.03536987]
[139.88931274 -248.70170593]
[140.19728088 -233.70486450]
[148.19427490 -221.13914490]
[140.74194336 -207.18301392]
[141.04992676 -192.18617249]
[141.35789490 -177.18934631]
[141.66587830 -162.19250488]
[141.97386169 -147.19566345]
[152.26121521 -142.61976624]
[160.11259460 -134.47805786]
[164.35058594 -123.93579865]
[164.31874084 -112.52210999]
[159.98303223 -101.90824890]
[151.94245911 -93.66291046]
[141.34657288 -89.02036285]
[140.73074341 -74.03301239]
[148.70976257 -64.88983917]
[148.28118896 -52.36037064]
[139.12854004 -43.21527481]
[138.20513916 -28.24372482]
[137.28172302 -13.27217388]
[139.75923157 -9.12354565]
[139.61395264 -3.36448526]
[136.00057983 2.29113913]
[134.46328735 17.21215630]
[132.92599487 32.13317108]
[131.38870239 47.05418777]
[129.85140991 61.97520447]
[140.07011414 72.95600891]
[155.06300354 72.49407959]
[167.05575562 61.83794022]
[182.83924866 64.71213531]
[190.30572510 78.91182709]
[183.72755432 93.54422760]
[168.15093994 97.38461304]
[155.52491760 87.48696899]
[140.53204346 87.94889069]
[141.13490295 102.02234650]
[137.11541748 115.13718414]
[129.16876221 125.86146545]
[118.40358734 133.11054993]
[122.95088196 147.40467834]
[127.49816895 161.69880676]
[132.04545593 175.99293518]
[136.59274292 190.28706360]
[141.14004517 204.58120728]
[145.07670593 190.10699463]
[153.89559937 177.97328186]
[166.44776917 169.76091003]
[181.09783936 166.53981018]
[195.93713379 168.72966003]
[209.03230286 176.04515076]
[218.67726135 187.53318787]
[223.61538696 201.69703674]
[223.20335388 216.69139099]
[217.49481201 230.56266785]
[207.23350525 241.50367737]
[193.75634766 248.08897400]
[178.81918335 249.46057129]
[164.36811829 245.43977356]
[152.28590393 236.55044556]
[144.14678955 223.95097351]
[144.14678955 238.95097351]
[144.14678955 253.95097351]
[144.14678955 268.95095825]
[144.14678955 283.95095825]
[144.14678955 298.95095825]
[144.14678955 313.95095825]
[144.14678955 328.95095825]
[144.14678955 343.95095825]
[144.14678955 358.95095825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
[22 41]
[23 40]
[24 39]
[25 38]
[49 109]
[50 108]
[51 107]
[52 106]
[53 105]
[54 102]
[55 101]
[56 100]
[58 97]
[59 96]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[110 118]
[111 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
