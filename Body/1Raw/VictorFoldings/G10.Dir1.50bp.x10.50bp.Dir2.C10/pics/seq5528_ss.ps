%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCACAAAAAACAAUAGCCUCAUCxxxxxxxxxxUCAUACACCUAUCCCCCAUUCUCCUCCUAUCCCUCAACCCCGACAUCAUUACCGGGUUUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.50439453 279.93334961]
[97.50439453 264.93334961]
[97.50439453 249.93334961]
[97.50439453 234.93334961]
[97.50439453 219.93334961]
[97.50439453 204.93334961]
[97.50439453 189.93334961]
[97.50439453 174.93334961]
[97.50439453 159.93334961]
[97.50439453 144.93334961]
[90.58277893 142.04521179]
[78.65879059 151.14567566]
[76.73956299 136.26893616]
[69.81795502 133.38079834]
[59.15633011 143.93209839]
[48.49470139 154.48338318]
[46.97374344 170.45417786]
[33.46076202 179.10165405]
[18.32175827 173.79220581]
[13.17008495 158.59880066]
[21.95766258 145.17649841]
[37.94341278 143.82176208]
[48.60503769 133.27046204]
[59.26666641 122.71917725]
[57.22344208 93.21379089]
[72.82405090 70.67349243]
[97.02536011 63.46801376]
[98.89297485 48.58473587]
[100.76058960 33.70145416]
[102.62819672 18.81817627]
[87.89002991 16.00000954]
[73.36270905 12.24335384]
[59.10591888 7.56364441]
[45.17825317 1.98011088]
[31.63694572 -4.48430204]
[18.53763771 -11.80303097]
[5.93415785 -19.94600105]
[-6.12170267 -28.87975121]
[-17.58040428 -38.56756973]
[-28.39485931 -48.96964645]
[-38.52062988 -60.04323959]
[-47.91610336 -71.74284363]
[-56.54267502 -84.02037811]
[-64.36489868 -96.82540131]
[-71.35062408 -110.10528564]
[-77.47114563 -123.80546570]
[-82.70131683 -137.86962891]
[-87.01964569 -152.24000549]
[-90.40838623 -166.85754395]
[-92.85361481 -181.66215515]
[-94.34527588 -196.59301758]
[-94.87725067 -211.58876038]
[-94.44734192 -226.58779907]
[-93.05732727 -241.52845764]
[-90.71290588 -256.34936523]
[-87.42372894 -270.98962402]
[-83.20329285 -285.38906860]
[-78.06895447 -299.48849487]
[-72.04180908 -313.23001099]
[-65.14662170 -326.55712891]
[-57.41172791 -339.41506958]
[-48.86891174 -351.75103760]
[-39.55327606 -363.51431274]
[-29.50310135 -374.65655518]
[-18.75968742 -385.13198853]
[-7.36718273 -394.89758301]
[4.62760019 -403.91317749]
[17.17537117 -412.14172363]
[30.22456932 -419.54943848]
[43.72156906 -426.10583496]
[57.61091232 -431.78402710]
[71.83552551 -436.56066895]
[86.33694458 -440.41610718]
[101.05559540 -443.33450317]
[115.93098450 -445.30386353]
[130.90199280 -446.31613159]
[145.90708923 -446.36709595]
[160.88462830 -445.45657349]
[175.77305603 -443.58831787]
[190.51119995 -440.76998901]
[205.03848267 -437.01318359]
[219.29521179 -432.33331299]
[233.22280884 -426.74963379]
[246.76405334 -420.28506470]
[259.86328125 -412.96618652]
[272.46667480 -404.82308960]
[284.52243042 -395.88919067]
[295.98101807 -386.20126343]
[306.79537964 -375.79904175]
[316.92102051 -364.72534180]
[326.31634521 -353.02563477]
[334.94277954 -340.74801636]
[342.76486206 -327.94290161]
[349.75045776 -314.66293335]
[355.87081909 -300.96270752]
[361.10083008 -286.89846802]
[365.41900635 -272.52804565]
[368.80758667 -257.91046143]
[371.25265503 -243.10583496]
[372.74414062 -228.17495728]
[373.27593994 -213.17919922]
[372.84588623 -198.18017578]
[371.45568848 -183.23951721]
[369.11111450 -168.41864014]
[365.82177734 -153.77842712]
[361.60116577 -139.37904358]
[356.46667480 -125.27965546]
[350.43939209 -111.53820801]
[343.54403687 -98.21116638]
[335.80902100 -85.35329437]
[327.26605225 -73.01742554]
[317.95028687 -61.25425720]
[307.89999390 -50.11212158]
[297.15646362 -39.63680649]
[285.76385498 -29.87135696]
[273.76898193 -20.85589981]
[261.22109985 -12.62748528]
[248.17182922 -5.21992350]
[234.67475891 1.33634555]
[220.78535461 7.01438046]
[206.56068420 11.79084873]
[192.05921936 15.64612293]
[177.34054565 18.56435966]
[162.46513367 20.53356934]
[147.49411011 21.54565811]
[132.48901367 21.59646797]
[117.51148224 20.68578911]
[115.64386749 35.56906891]
[113.77625275 50.45234680]
[111.90863800 65.33562469]
[120.00753021 68.21134186]
[127.39662170 72.99482727]
[133.62394714 79.50688934]
[138.28370667 87.46093750]
[141.04176331 96.47505951]
[141.65803528 106.09015656]
[140.00416565 115.79328156]
[136.07542419 125.04501343]
[129.99586487 133.30935669]
[122.01621246 140.08462524]
[112.50439453 144.93334961]
[112.50439453 159.93334961]
[112.50439453 174.93334961]
[112.50439453 189.93334961]
[112.50439453 204.93334961]
[112.50439453 219.93334961]
[112.50439453 234.93334961]
[112.50439453 249.93334961]
[112.50439453 264.93334961]
[112.50439453 279.93334961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 24]
[15 23]
[16 22]
[27 130]
[28 129]
[29 128]
[30 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
