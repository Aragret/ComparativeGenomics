%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAGCCCUAAGUCUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCGAAUUGGxxxxxxxxxxCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[280.10437012 233.93882751]
[268.80535889 224.07310486]
[257.50637817 214.20738220]
[246.20735168 204.34165955]
[234.90835571 194.47593689]
[223.60934448 184.61021423]
[211.62251282 175.59268188]
[199.01138306 167.47113037]
[186.40025330 159.34959412]
[173.78913879 151.22805786]
[161.17800903 143.10650635]
[148.56687927 134.98497009]
[134.10935974 138.37846375]
[121.20418549 130.32171631]
[117.74280548 115.13433075]
[105.13167572 107.01278687]
[103.63732910 110.52794647]
[100.45620728 113.57965088]
[95.79243469 115.47421265]
[90.10980988 115.61637878]
[84.08618164 113.60009003]
[78.53791046 109.27945709]
[63.60360336 107.87715149]
[48.66929245 106.47485352]
[33.73498535 105.07254791]
[18.80067825 103.67024231]
[3.86637092 102.26793671]
[-12.64998627 110.34195709]
[-26.57657433 99.70945740]
[-41.53682327 98.61814880]
[-56.49707413 97.52684021]
[-65.17294312 110.12352753]
[-78.89846039 116.64326477]
[-93.94450378 115.42553711]
[-106.27834320 106.89720154]
[-112.64448547 93.43103027]
[-127.60473633 92.33972168]
[-142.12196350 99.96745300]
[-155.83998108 90.98146820]
[-154.64688110 74.62577820]
[-139.77000427 67.72571564]
[-126.51342773 77.37947845]
[-111.55317688 78.47078705]
[-103.30017853 66.07104492]
[-89.85926056 59.42290878]
[-74.79577637 60.40159607]
[-62.16172409 68.84419250]
[-55.40576172 82.56658936]
[-40.44551468 83.65789795]
[-25.48526382 84.74921417]
[-16.09162903 77.06371307]
[-3.58029985 77.89173126]
[5.26867485 87.33363342]
[20.20298195 88.73593140]
[35.13729095 90.13823700]
[50.07159805 91.54054260]
[65.00590515 92.94284821]
[79.94021606 94.34514618]
[90.38002777 83.57434082]
[88.51241302 68.69106293]
[86.64479828 53.80778122]
[82.78763580 39.31218338]
[77.01136780 25.46896744]
[62.78010941 18.06282997]
[59.83894348 2.29168272]
[70.44407654 -9.74620152]
[86.46016693 -8.81638718]
[95.60102844 4.36785126]
[90.85458374 19.69269371]
[96.63085938 33.53591156]
[99.72669983 18.85886383]
[108.43266296 6.64386225]
[121.29638672 -1.07135677]
[136.17192078 -2.99972153]
[150.57768250 1.18046260]
[162.11047363 10.77184677]
[168.84637451 24.17437363]
[169.66166687 39.15219879]
[164.42036438 53.20668793]
[153.99681091 63.99323654]
[140.12989807 69.71240234]
[125.13294983 69.41010284]
[111.50777435 63.13677216]
[101.52807617 51.94016647]
[103.39569092 66.82344818]
[105.26330566 81.70672607]
[113.25321960 94.40165710]
[125.86434937 102.52320099]
[141.12313843 99.39157104]
[153.79692078 107.80761719]
[156.68841553 122.37384033]
[169.29954529 130.49537659]
[181.91067505 138.61692810]
[194.52180481 146.73846436]
[207.13293457 154.86001587]
[219.74406433 162.98155212]
[216.95748901 148.24266052]
[224.14363098 135.07606506]
[238.04710388 129.44635010]
[252.36949158 133.90385437]
[260.62261963 146.42927551]
[259.06771851 161.34846497]
[248.40919495 171.90289307]
[233.47506714 173.31120300]
[244.77407837 183.17692566]
[256.07308960 193.04264832]
[267.37210083 202.90837097]
[278.67108154 212.77409363]
[289.97009277 222.63981628]
[301.36196899 212.84156799]
[314.03237915 204.76434326]
[327.72335815 198.57260132]
[342.15618896 194.39239502]
[357.03704834 192.30882263]
[372.06295776 192.36430359]
[386.92797852 194.55772400]
[401.32955933 198.84440613]
[414.97445679 205.13710022]
[427.58483887 213.30767822]
[438.90405273 223.18980408]
[448.70159912 234.58229065]
[456.77804565 247.25318909]
[462.96893311 260.94454956]
[467.14825439 275.37765503]
[469.23089600 290.25863647]
[469.17449951 305.28451538]
[466.98016357 320.14944458]
[462.69256592 334.55072021]
[456.39904785 348.19522095]
[448.22769165 360.80514526]
[438.34484863 372.12371826]
[426.95178223 381.92056274]
[414.28036499 389.99621582]
[400.58859253 396.18627930]
[386.15527344 400.36468506]
[371.27416992 402.44641113]
[356.24826050 402.38906860]
[341.38348389 400.19381714]
[326.98245239 395.90536499]
[313.33834839 389.61096191]
[300.72894287 381.43884277]
[289.41098022 371.55529785]
[279.61483765 360.16162109]
[271.53994751 347.48971558]
[265.35076904 333.79757690]
[261.17321777 319.36395264]
[259.09240723 304.48272705]
[259.15069580 289.45684814]
[261.34686279 274.59219360]
[265.63623047 260.19143677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 96]
[8 95]
[9 94]
[10 93]
[11 92]
[12 91]
[15 88]
[16 87]
[22 58]
[23 57]
[24 56]
[25 55]
[26 54]
[27 53]
[29 50]
[30 49]
[31 48]
[36 43]
[37 42]
[59 86]
[60 85]
[61 84]
[62 70]
[63 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
