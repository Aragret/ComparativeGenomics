%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCGCUUCGAAGCGAAAAxxxxxxxxxxUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[103.16347504 303.10424805]
[102.85142517 288.10751343]
[102.53936768 273.11074829]
[102.22731018 258.11401367]
[101.91525269 243.11724854]
[101.60319519 228.12049866]
[101.29113770 213.12373352]
[100.97908783 198.12698364]
[100.66703033 183.13023376]
[86.25481415 178.97233582]
[78.00252533 191.49830627]
[69.75023651 204.02426147]
[66.08537292 220.57736206]
[49.16464233 221.63809204]
[43.46125031 205.67225647]
[57.22427368 195.77197266]
[65.47656250 183.24601746]
[73.72885132 170.72004700]
[69.03527069 164.87023926]
[54.20956421 167.15025330]
[59.64810944 153.17062378]
[54.95452499 147.32080078]
[40.93781281 152.66232300]
[30.79753685 164.80667114]
[16.14930916 162.10876465]
[2.13259602 167.45027161]
[-11.88411713 172.79179382]
[-24.53184891 184.08210754]
[-38.88217545 175.05412292]
[-34.17957306 158.76541138]
[-17.22562981 158.77507019]
[-3.20891666 153.43356323]
[10.80779648 148.09205627]
[19.94550514 136.32975769]
[35.59630203 138.64559937]
[49.61301422 133.30409241]
[45.12124252 107.94577026]
[51.70001602 85.24574280]
[66.25833130 69.39280701]
[84.41832733 62.50071335]
[81.31999969 47.82418442]
[78.22167969 33.14765930]
[75.12335968 18.47113609]
[68.25589752 23.36694527]
[59.12529373 25.71756744]
[48.59592438 24.79798698]
[37.73088074 20.15670586]
[25.83850288 11.01497078]
[13.94612217 1.87323689]
[2.05374265 -7.26849747]
[-9.83863735 -16.41023064]
[-26.15786552 -18.02727509]
[-32.66963196 -33.07815552]
[-22.67518806 -46.07981491]
[-6.45596218 -43.65726089]
[-0.69690287 -28.30261040]
[11.19547653 -19.16087723]
[23.08785629 -10.01914310]
[34.98023605 -0.87740862]
[46.87261581 8.26432514]
[53.88097382 5.59356928]
[67.89768219 0.25205681]
[74.90604401 -2.41869950]
[77.69836426 -17.15650558]
[80.49069214 -31.89431190]
[83.28301239 -46.63211823]
[69.43214417 -52.54544830]
[57.17655563 -61.29842758]
[47.08946609 -72.48165894]
[39.64265823 -85.57208252]
[35.18444443 -99.95743561]
[33.92333603 -114.96488953]
[35.91831589 -129.89251709]
[41.07608414 -144.04212952]
[49.15539551 -156.75192261]
[59.77836609 -167.42742920]
[72.44814301 -175.56935120]
[86.57213593 -180.79685974]
[101.48973846 -182.86547852]
[116.50323486 -181.67842102]
[130.91040039 -177.29122925]
[144.03741455 -169.90910339]
[155.27026367 -159.87730408]
[164.08360291 -147.66505432]
[170.06520081 -133.84352112]
[172.93528748 -119.05918884]
[172.55963135 -104.00352478]
[168.95578003 -89.38072205]
[162.29232788 -75.87471008]
[152.88090515 -64.11719513]
[141.16171265 -54.65809250]
[127.68287659 -47.93982315]
[113.07483673 -44.27661133]
[98.02082062 -43.83979416]
[95.22850037 -29.10198784]
[92.43617249 -14.36418056]
[89.64384460 0.37362501]
[89.79988098 15.37281322]
[92.89820862 30.04933929]
[95.99652863 44.72586441]
[99.09484863 59.40238953]
[125.67147827 62.36656570]
[147.42019653 82.62470245]
[153.44627380 114.77527618]
[137.98524475 146.95883179]
[152.96496582 147.73867798]
[167.94467163 148.51852417]
[182.92439270 149.29837036]
[190.20755005 135.88500977]
[202.59432983 126.96701050]
[217.62528992 124.31504059]
[232.31604004 128.45564270]
[243.74971008 138.56672668]
[249.65614319 152.64070129]
[248.86262512 167.88316345]
[241.52668762 181.26774597]
[229.10490417 190.13690186]
[214.06361389 192.72966003]
[199.38928223 188.53123474]
[187.99551392 178.37521362]
[182.14454651 164.27809143]
[167.16482544 163.49824524]
[152.18511963 162.71839905]
[137.20539856 161.93855286]
[131.81999207 167.15846252]
[144.59205627 175.02449036]
[157.36410522 182.89053345]
[170.13616943 190.75656128]
[184.77844238 194.01293945]
[195.68109131 204.31500244]
[199.76103210 218.74946594]
[195.86453247 233.23454285]
[185.09344482 243.67407227]
[170.49366760 247.11595154]
[156.19377136 242.58685303]
[146.23750305 231.36755371]
[143.44023132 216.63211060]
[135.97654724 203.62083435]
[128.51286316 190.60954285]
[121.04918671 177.59826660]
[115.66378021 182.81817627]
[115.97583771 197.81492615]
[116.28789520 212.81167603]
[116.59995270 227.80844116]
[116.91201019 242.80519104]
[117.22406006 257.80194092]
[117.53611755 272.79870605]
[117.84817505 287.79544067]
[118.16023254 302.79220581]
[120.75122833 321.99993896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 18]
[11 17]
[12 16]
[22 36]
[23 35]
[25 33]
[26 32]
[27 31]
[40 101]
[41 100]
[42 99]
[43 98]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 97]
[64 96]
[65 95]
[66 94]
[105 124]
[106 123]
[107 122]
[108 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
