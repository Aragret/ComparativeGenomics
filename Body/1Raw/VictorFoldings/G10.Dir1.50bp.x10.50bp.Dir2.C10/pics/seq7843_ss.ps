%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCAAACCACUUUCACCGCUACACGACCGGGGGUAUACUACGGUCAAUGCUCUGAAAUCxxxxxxxxxxUCCCUCAACCCCGACAUCAUUACCGGGUUUUCCUCUUGUAAAUAUAGUUUAACCAAAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.29554749 385.17898560]
[143.29554749 370.17898560]
[143.29554749 355.17898560]
[143.29554749 340.17898560]
[143.29554749 325.17898560]
[143.29554749 310.17898560]
[143.29554749 295.17898560]
[143.29554749 280.17898560]
[143.29554749 265.17898560]
[143.29554749 250.17897034]
[141.58285522 235.27706909]
[138.17988586 220.66818237]
[134.77690125 206.05928040]
[130.17134094 191.78382874]
[124.39506531 177.94061279]
[118.61878967 164.09738159]
[96.14879608 166.63560486]
[74.12082672 161.52563477]
[55.06316757 149.35398865]
[41.16318512 131.51768494]
[34.01626968 110.06389618]
[34.44271088 87.45501709]
[20.12011337 82.99819946]
[5.79751682 78.54138184]
[-8.52508068 74.08457184]
[-22.84767723 69.62775421]
[-36.71503067 76.72241974]
[-51.17668915 71.99854279]
[-57.85491180 58.73442078]
[-72.17751312 54.27760696]
[-81.18387604 63.05267715]
[-93.00661469 67.11754608]
[-105.36096954 65.75207520]
[-115.88725281 59.27930069]
[-122.60153961 48.99177551]
[-124.26947784 36.89389801]
[-138.39427185 31.84514427]
[-152.51907349 26.79638672]
[-166.64389038 21.74763107]
[-180.76869202 16.69887352]
[-196.36791992 19.33981705]
[-205.74835205 7.77016735]
[-219.87315369 2.72141123]
[-234.93049622 8.25817013]
[-248.57214355 -0.18488856]
[-250.33337402 -16.13097382]
[-238.86312866 -27.34761238]
[-222.96038818 -25.23036003]
[-214.82440186 -11.40339184]
[-200.69958496 -6.35463572]
[-186.11065674 -9.35669899]
[-175.71992493 2.57407141]
[-161.59512329 7.62282753]
[-147.47032166 12.67158413]
[-133.34552002 17.72034073]
[-119.22071838 22.76909637]
[-105.17593384 12.14780045]
[-87.41115570 12.03351116]
[-72.97894287 22.65865326]
[-67.72069550 39.95500946]
[-53.39809799 44.41182709]
[-40.37285233 37.27890396]
[-25.78421211 41.59471893]
[-18.39086151 55.30515671]
[-4.06826448 59.76197052]
[10.25433254 64.21878815]
[24.57692909 68.67560577]
[38.89952850 73.13241577]
[42.02608109 66.92192078]
[45.78174591 61.07037354]
[50.12577057 55.64128113]
[55.01101303 50.69355392]
[60.38446045 46.28087997]
[66.18780518 42.45114899]
[72.35806274 39.24592209]
[78.82828522 36.69997406]
[85.52825928 34.84093857]
[92.38526917 33.68898773]
[99.32491302 33.25661850]
[106.27188873 33.54852676]
[113.15079498 34.56154633]
[119.88700104 36.28467941]
[126.40739441 38.69923019]
[132.64122009 41.77899933]
[138.52084351 45.49055862]
[143.98245239 49.79364014]
[148.96676636 54.64154053]
[161.04676819 45.74919128]
[173.12675476 36.85684204]
[185.20674133 27.96449089]
[197.28672791 19.07214165]
[193.98632812 4.20515490]
[197.02458191 -10.71761036]
[205.87509155 -23.11069489]
[219.00444031 -30.82691956]
[234.13789368 -32.52940369]
[248.65348816 -27.92318344]
[260.03631592 -17.80631256]
[266.31423950 -3.93159795]
[266.39953613 11.29707909]
[260.27746582 25.24126053]
[249.00871277 35.48503113]
[234.54562378 40.25359344]
[219.39404297 38.72077179]
[206.17907715 31.15213013]
[194.09909058 40.04447937]
[182.01910400 48.93682861]
[169.93911743 57.82917786]
[157.85911560 66.72152710]
[163.85279846 80.55892181]
[166.58731079 95.38861847]
[165.92309570 110.45368958]
[161.89405823 124.98519135]
[154.70585632 138.24139404]
[144.72535706 149.54570007]
[132.46200562 158.32112122]
[138.23828125 172.16433716]
[144.01455688 186.00755310]
[149.28544617 171.96412659]
[161.71507263 163.56742859]
[176.71092224 163.91987610]
[188.73234558 172.89125061]
[193.33766174 187.16679382]
[188.82528687 201.47198486]
[176.86245728 210.52133179]
[161.86921692 210.97129822]
[149.38578796 202.65631104]
[152.78877258 217.26519775]
[156.19174194 231.87409973]
[162.25302124 218.15327454]
[173.91603088 208.72064209]
[188.60101318 205.66262817]
[203.05976868 209.65562439]
[214.09419250 219.81642151]
[219.26353455 233.89753723]
[217.42442322 248.78436279]
[208.98361206 261.18405151]
[195.80815125 268.35394287]
[180.81233215 268.70812988]
[167.31309509 262.16821289]
[158.29554749 250.17897034]
[158.29554749 265.17898560]
[158.29554749 280.17898560]
[158.29554749 295.17898560]
[158.29554749 310.17898560]
[158.29554749 325.17898560]
[158.29554749 340.17898560]
[158.29554749 355.17898560]
[158.29554749 370.17898560]
[158.29554749 385.17898560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 129]
[12 128]
[13 127]
[14 118]
[15 117]
[16 116]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[29 61]
[30 60]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[42 50]
[43 49]
[87 109]
[88 108]
[89 107]
[90 106]
[91 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
