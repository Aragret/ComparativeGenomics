%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUxxxxxxxxxxUUUGGUGCAACUCCAAAUAAAAGUAAUAACCAUGCACACUACUAUAACCACCCUAACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.30763245 455.23114014]
[83.30763245 440.23114014]
[83.30763245 425.23114014]
[83.30763245 410.23114014]
[83.30763245 395.23114014]
[83.30763245 380.23114014]
[83.30763245 365.23114014]
[83.30763245 350.23114014]
[83.30763245 335.23114014]
[83.30763245 320.23114014]
[69.79679871 317.57369995]
[57.01403809 312.44259644]
[45.40810394 305.01608276]
[35.38677216 295.55319214]
[27.30250931 284.38442993]
[21.44008636 271.90036011]
[18.00652885 258.53796387]
[17.12382507 244.76528931]
[18.82458115 231.06504822]
[23.05082321 217.91773987]
[29.65597343 205.78480530]
[38.40993118 195.09240723]
[49.00709152 186.21643066]
[61.07700729 179.46932983]
[74.19734192 175.08909607]
[87.90866089 173.23086548]
[88.84429169 158.26008606]
[89.77992249 143.28929138]
[90.71554565 128.31849670]
[80.96535492 123.79512787]
[73.26071167 115.96311188]
[68.70391083 105.70513153]
[68.02884674 94.26234436]
[71.48819733 83.08457947]
[78.80017853 73.64665222]
[89.16444397 67.25405121]
[80.14691162 55.26721573]
[71.12937927 43.28038406]
[62.11185074 31.29355240]
[51.89837265 20.30788803]
[40.49735260 10.56023502]
[28.99554825 0.93170875]
[17.19890785 -8.33324051]
[5.11891937 -17.22558975]
[-6.96106911 -26.11793900]
[-19.04105759 -35.01028824]
[-31.12104607 -43.90263748]
[-44.00951004 -42.74447632]
[-53.89883041 -50.45293427]
[-55.79527664 -62.44087982]
[-67.68765259 -71.58261108]
[-84.00688171 -73.19966125]
[-90.51864624 -88.25053406]
[-80.52420807 -101.25219727]
[-64.30497742 -98.82964325]
[-58.54592133 -83.47499084]
[-46.65354156 -74.33325958]
[-29.18286324 -73.00083923]
[-22.22869682 -55.98262787]
[-10.14870739 -47.09027863]
[1.93128049 -38.19792938]
[14.01126862 -29.30557823]
[26.09125710 -20.41322899]
[29.67299080 -20.60985565]
[33.52496338 -19.04014015]
[36.79672623 -15.59805489]
[38.62407303 -10.57009506]
[50.12587738 -0.94156843]
[57.32015991 0.95262539]
[61.76409531 9.00888252]
[59.08585358 -5.75008154]
[64.01613617 -19.91667366]
[75.27875519 -29.82391167]
[89.95841980 -32.90734100]
[104.25533295 -28.36882401]
[114.46879578 -17.38314056]
[117.95507812 -2.79390264]
[113.81175995 11.62250996]
[103.11133575 22.13445282]
[88.62357330 26.02094078]
[74.09868622 22.27602196]
[83.11621094 34.26285553]
[92.13374329 46.24968719]
[101.15127563 58.23651886]
[115.82779694 61.33484268]
[128.92095947 54.01573563]
[142.01411438 46.69662857]
[155.10726929 39.37752533]
[168.20042419 32.05841827]
[180.63986206 23.67627525]
[192.33947754 14.28911400]
[204.03910828 4.90195227]
[202.32040405 -10.42937660]
[209.18376160 -24.24595642]
[222.43910217 -32.13896561]
[237.85668945 -31.58977699]
[250.51683044 -22.77363205]
[256.37973022 -8.50372982]
[253.57452393 6.66645336]
[242.99638367 17.89616776]
[228.02073669 21.60205460]
[213.42626953 16.60157585]
[201.72663879 25.98873711]
[190.02702332 35.37590027]
[204.98118591 36.54751587]
[216.49426270 46.16257477]
[220.31236267 60.66850662]
[215.02479553 74.70565796]
[202.58520508 83.08757782]
[187.58976746 82.71732330]
[175.57901001 73.73168182]
[170.99066162 59.45067978]
[175.51951599 45.15157318]
[162.42636108 52.47068024]
[149.33322144 59.78978348]
[136.24006653 67.10888672]
[123.14690399 74.42799377]
[128.75581360 82.03594208]
[132.00668335 90.73921967]
[132.73280334 99.83946991]
[130.96641541 108.63155365]
[126.92951965 116.45816040]
[121.01038361 122.75893402]
[113.72778320 127.11044312]
[105.68634033 129.25411987]
[104.75070953 144.22491455]
[103.81508636 159.19570923]
[102.87945557 174.16650391]
[118.57135773 178.61839294]
[132.89863586 186.40127563]
[145.16456604 197.13345337]
[154.77342224 210.28987122]
[161.25932312 225.22787476]
[164.30886841 241.21849060]
[163.77629089 257.48211670]
[159.69033813 273.22640991]
[152.25286865 287.68502808]
[141.82878113 300.15478516]
[128.92811584 310.02996826]
[114.18117523 316.83169556]
[98.30763245 320.23114014]
[98.30763245 335.23114014]
[98.30763245 350.23114014]
[98.30763245 365.23114014]
[98.30763245 380.23114014]
[98.30763245 395.23114014]
[98.30763245 410.23114014]
[98.30763245 425.23114014]
[98.30763245 440.23114014]
[98.30763245 455.23114014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 128]
[27 127]
[28 126]
[29 125]
[36 84]
[37 83]
[38 82]
[39 81]
[40 70]
[41 68]
[42 67]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[50 57]
[51 56]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 104]
[91 103]
[92 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
