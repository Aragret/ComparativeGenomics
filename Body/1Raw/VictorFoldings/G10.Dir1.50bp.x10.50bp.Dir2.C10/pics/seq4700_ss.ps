%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCAUCACAGCGCUAAGCUCGCACUGAUUUUUUACCUGAGUAGGCCUAGAAAUAAACAUGCxxxxxxxxxxGCUGGGCCAGCCAGGCAACCUUCUAGGUAACGACCACAUCUACAACGUUAUCGUCACAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[107.89630127 269.24447632]
[107.89630127 254.24449158]
[107.89630127 239.24449158]
[107.89630127 224.24449158]
[107.89630127 209.24449158]
[107.89630127 194.24449158]
[107.89630127 179.24449158]
[107.89630127 164.24449158]
[107.89630127 149.24449158]
[107.89630127 134.24449158]
[101.38814545 130.51702881]
[88.37183380 123.06212616]
[81.86367798 119.33467102]
[68.92562103 126.92457581]
[55.98756790 134.51448059]
[43.04951096 142.10438538]
[38.95935440 157.13464355]
[25.73020554 164.64758301]
[11.42636776 160.65560913]
[-1.51168847 168.24552917]
[-14.44974422 175.83543396]
[-16.87974739 191.28305054]
[-28.70466995 201.51560974]
[-44.34114838 201.70159912]
[-56.40611267 191.75320435]
[-59.20285797 176.36775208]
[-51.41084290 162.80976868]
[-36.70922470 157.48095703]
[-22.03965187 162.89736938]
[-9.10159683 155.30746460]
[3.83645916 147.71755981]
[7.33138609 133.28422546]
[20.34429359 125.40267181]
[35.45960236 129.16633606]
[48.39765930 121.57643127]
[61.33571625 113.98651886]
[74.27377319 106.39661407]
[73.96178436 98.90310669]
[58.97476578 99.52708435]
[43.98773956 100.15082550]
[43.36422729 85.16378784]
[58.35078812 84.54006195]
[73.33780670 83.91608429]
[73.02581787 76.42257690]
[59.50162506 69.93441772]
[45.97743607 63.44624710]
[29.67612457 65.23489380]
[20.19595337 51.85361862]
[27.28931236 37.06793976]
[43.65916061 36.08809280]
[52.46560287 49.92205811]
[65.98979187 56.41022491]
[79.51398468 62.89838791]
[92.96994781 56.26988983]
[96.06826782 41.59336472]
[99.16658783 26.91683960]
[102.26491547 12.24031448]
[105.36323547 -2.43621159]
[108.46155548 -17.11273766]
[111.55987549 -31.78926277]
[105.42448425 -49.11949158]
[117.57757568 -61.74098969]
[103.75222778 -55.92209244]
[90.48210907 -62.91524124]
[87.46662140 -77.60900879]
[96.90982819 -89.26344299]
[111.90951538 -89.36009216]
[121.50196075 -77.82895660]
[125.80954742 -92.19713593]
[130.11712646 -106.56532288]
[118.03826904 -97.67144775]
[103.22969055 -95.28269196]
[88.96693420 -99.92742920]
[78.40476990 -110.57828522]
[73.87946320 -124.87939453]
[76.39196777 -139.66746521]
[85.38654327 -151.67153931]
[98.87366486 -158.23640442]
[113.87011719 -157.90998840]
[127.05880737 -150.76448059]
[135.52253723 -138.38040161]
[137.38897705 -123.49503326]
[144.84388733 -136.51133728]
[152.29879761 -149.52764893]
[159.75370789 -162.54396057]
[156.95225525 -178.34051514]
[167.66352844 -190.28405762]
[183.67074585 -189.21252441]
[192.69454956 -175.94789124]
[187.81265259 -160.66564941]
[172.77000427 -155.08905029]
[165.31509399 -142.07273865]
[157.86018372 -129.05642700]
[150.40527344 -116.04012299]
[144.48532104 -102.25773621]
[140.17773438 -87.88955688]
[135.87014771 -73.52136993]
[132.31538391 -58.94866562]
[138.87806702 -48.73893738]
[136.62692261 -36.40397644]
[126.23640442 -28.69094086]
[123.13808441 -14.01441574]
[120.03975677 0.66211021]
[116.94143677 15.33863544]
[113.84311676 30.01516151]
[110.74479675 44.69168854]
[107.64646912 59.36821365]
[150.04434204 101.14188385]
[164.61705017 104.69664764]
[179.18974304 108.25141144]
[193.76245117 111.80617523]
[208.33514404 115.36093140]
[217.61643982 103.28709412]
[231.00927734 96.03783417]
[246.19328308 94.86914062]
[260.53771973 99.98348999]
[271.55737305 110.49479675]
[277.34295654 124.58190918]
[276.89215088 139.80415344]
[270.28298950 153.52418518]
[258.66061401 163.36491394]
[244.03862000 167.62138367]
[228.95039368 165.55613708]
[216.01004028 157.52697754]
[207.45956421 144.92503357]
[204.78039551 129.93363953]
[190.20768738 126.37887573]
[175.63497925 122.82411194]
[161.06228638 119.26934814]
[146.48957825 115.71459198]
[140.59126282 120.34706116]
[151.67576599 130.45318604]
[162.76026917 140.55931091]
[174.89294434 149.37963867]
[175.17140198 164.37705994]
[163.37451172 173.64167786]
[148.87051392 169.81622314]
[143.17738342 155.93948364]
[135.98600769 142.77575684]
[128.79461670 129.61201477]
[122.89630127 134.24449158]
[122.89630127 149.24449158]
[122.89630127 164.24449158]
[122.89630127 179.24449158]
[122.89630127 194.24449158]
[122.89630127 209.24449158]
[122.89630127 224.24449158]
[122.89630127 239.24449158]
[122.89630127 254.24449158]
[122.89630127 269.24447632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 37]
[14 36]
[15 35]
[16 34]
[19 31]
[20 30]
[21 29]
[44 53]
[45 52]
[46 51]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[62 98]
[68 97]
[69 96]
[70 95]
[82 94]
[83 93]
[84 92]
[85 91]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
