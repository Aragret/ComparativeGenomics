%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCCUAACACCAGCCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAAxxxxxxxxxxACGCCUUCUUCAAAGCCAUACUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[133.30628967 338.87677002]
[133.30628967 323.87677002]
[133.30628967 308.87677002]
[133.30628967 293.87677002]
[133.30628967 278.87677002]
[133.30628967 263.87677002]
[133.30628967 248.87677002]
[133.30628967 233.87677002]
[133.30628967 218.87677002]
[133.30628967 203.87677002]
[130.66743469 189.11071777]
[125.03547668 175.20816040]
[118.97245789 161.48809814]
[112.90944672 147.76805115]
[106.84643555 134.04800415]
[95.76386261 134.47019958]
[85.11329651 131.37715149]
[75.98086548 125.08427429]
[69.29789734 116.23331451]
[65.74591064 105.72688293]
[50.76619720 104.94704437]
[35.78648376 104.16719818]
[26.98844147 106.85910034]
[20.50422478 103.21210480]
[5.54397678 102.12078857]
[-9.41627216 101.02947998]
[-23.74279213 107.74225616]
[-35.87341690 99.09950256]
[-50.83366394 98.00819397]
[-57.03773117 100.58055115]
[-62.73714066 99.71564484]
[-66.38935089 96.54753876]
[-81.29125214 94.83485413]
[-96.19315338 93.12216187]
[-111.09506226 91.40946960]
[-120.17842865 103.79446411]
[-134.24380493 109.96380615]
[-149.50767517 108.25797272]
[-161.86413574 99.13582611]
[-167.98934937 85.05118561]
[-166.23568726 69.79273987]
[-157.07485962 57.46493149]
[-142.97108459 51.38388824]
[-127.71820068 53.18537521]
[-115.41917419 62.38480377]
[-109.38237000 76.50756836]
[-94.48046875 78.22026062]
[-79.57856750 79.93295288]
[-64.67665863 81.64563751]
[-49.74235535 83.04794312]
[-34.78210449 84.13925171]
[-21.52564240 77.34841919]
[-8.32496166 86.06922913]
[6.63528728 87.16054535]
[21.59553528 88.25185394]
[36.56632614 89.18748474]
[51.54604340 89.96732330]
[66.52575684 90.74716949]
[75.39355469 75.49157715]
[90.61363983 66.56295776]
[108.25685120 66.26627350]
[114.88535309 52.81031036]
[121.51385498 39.35434341]
[128.14234924 25.89837837]
[115.69372559 17.48734283]
[104.50640106 7.45950651]
[94.78878784 -3.99831581]
[86.72190857 -16.67267227]
[80.45606232 -30.32744789]
[76.10797119 -44.70826340]
[73.75862885 -59.54721069]
[73.45181274 -74.56784821]
[75.19322968 -89.49035645]
[78.95044708 -104.03673553]
[84.65346527 -117.93598938]
[92.19604492 -130.92918396]
[101.43766785 -142.77427673]
[112.20616913 -153.25059509]
[124.30093384 -162.16296387]
[137.49665833 -169.34535217]
[151.54750061 -174.66397095]
[166.19169617 -178.01972961]
[181.15644836 -179.35009766]
[196.16297913 -178.63031006]
[210.93170166 -175.87376404]
[225.18750000 -171.13182068]
[238.66477966 -164.49281311]
[251.11250305 -156.08042908]
[262.29873657 -146.05139160]
[272.01510620 -134.59251404]
[280.08062744 -121.91728210]
[286.34497070 -108.26182556]
[290.69152832 -93.88053894]
[293.03924561 -79.04134369]
[293.34445190 -64.02066803]
[291.60140991 -49.09835052]
[287.84262085 -34.55237961]
[282.13809204 -20.65373993]
[274.59411621 -7.66135502]
[265.35119629 4.18273592]
[254.58157349 14.65788460]
[242.48583984 23.56894493]
[229.28935242 30.74991035]
[215.23793030 36.06700134]
[200.59336853 39.42116547]
[185.62846375 40.74991989]
[170.62202454 40.02850342]
[155.85359192 37.27036285]
[141.59831238 32.52687836]
[134.96981812 45.98284149]
[128.34132385 59.43880844]
[121.71282196 72.89477539]
[131.46138000 85.29212189]
[134.72200012 100.72250366]
[130.82231140 116.00389862]
[120.56649017 127.98498535]
[126.62950134 141.70503235]
[132.69252014 155.42509460]
[138.75552368 169.14514160]
[143.07994080 172.29460144]
[145.48023987 176.39227295]
[145.92070007 180.52842712]
[144.73895264 183.91529846]
[147.80224609 169.23143005]
[155.38862610 156.29129028]
[166.70576477 146.44638062]
[180.57170105 140.72485352]
[195.53829956 139.72430420]
[210.04243469 143.54919434]
[222.56933594 151.80007935]
[231.81066895 163.61521912]
[236.80128479 177.76066589]
[237.01998901 192.75907898]
[232.44390869 207.04400635]
[223.55097961 219.12358093]
[211.26997375 227.73617554]
[196.88351440 231.98233032]
[181.89411926 231.41856384]
[167.86726379 226.10375977]
[156.26789856 216.59298706]
[148.30628967 203.87677002]
[148.30628967 218.87677002]
[148.30628967 233.87677002]
[148.30628967 248.87677002]
[148.30628967 263.87677002]
[148.30628967 278.87677002]
[148.30628967 293.87677002]
[148.30628967 308.87677002]
[148.30628967 323.87677002]
[148.30628967 338.87677002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 123]
[12 119]
[13 118]
[14 117]
[15 116]
[20 58]
[21 57]
[22 56]
[24 55]
[25 54]
[26 53]
[28 51]
[29 50]
[32 49]
[33 48]
[34 47]
[35 46]
[61 112]
[62 111]
[63 110]
[64 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
