%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUAUGACGCACUCUCCCCUGAACxxxxxxxxxxCAAAAAUUUUGGUGCAACUCCAAAUAAAAGUAAUAACCAUGCACACUACUAUAACCACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.52372742 117.57103729]
[88.89075470 130.48373413]
[88.52896118 146.30079651]
[75.39187622 153.31979370]
[67.75891113 166.23248291]
[60.12593842 179.14518738]
[52.49296570 192.05789185]
[44.85999680 204.97058105]
[44.49820709 220.78765869]
[31.36111832 227.80664062]
[33.94536209 243.64018250]
[23.07106781 255.43550110]
[7.08006477 254.14421082]
[-1.76071715 240.75689697]
[3.33061194 225.54316711]
[18.44841957 220.17367554]
[18.26425171 205.28019714]
[31.94729996 197.33761597]
[39.58026886 184.42491150]
[47.21323776 171.51222229]
[54.84621048 158.59951782]
[62.47917938 145.68681335]
[62.29500961 130.79335022]
[75.97805786 122.85076141]
[83.61103058 109.93806458]
[70.72178650 117.61058044]
[63.03845215 130.49337769]
[54.03424072 142.49021912]
[43.81037903 153.46621704]
[32.48181915 163.29798889]
[20.17592621 171.87498474]
[7.03104877 179.10079956]
[-6.80502510 184.89416504]
[-21.17673874 189.18995667]
[-35.92251587 191.93986511]
[-50.87657166 193.11300659]
[-65.87078094 192.69616699]
[-80.73655701 190.69404602]
[-95.30678558 187.12913513]
[-109.41764069 182.04153442]
[-122.91048431 175.48843384]
[-135.63362122 167.54350281]
[-147.44400024 158.29606628]
[-158.20883179 147.85009766]
[-167.80711365 136.32304382]
[-176.13090515 123.84449005]
[-183.08665466 110.55472565]
[-188.59613037 96.60317993]
[-192.59741211 82.14670563]
[-195.04550171 67.34782410]
[-195.91288757 52.37292480]
[-195.18980408 37.39036179]
[-192.88438416 22.56858635]
[-189.02255249 8.07423496]
[-183.64772034 -5.92973661]
[-176.82031250 -19.28588295]
[-168.61711121 -31.84404182]
[-159.13032532 -43.46302795]
[-148.46661377 -54.01220703]
[-136.74586487 -63.37298203]
[-124.09985352 -71.44010925]
[-110.67076111 -78.12288666]
[-96.60956573 -83.34618378]
[-82.07436371 -87.05127716]
[-67.22855377 -89.19651794]
[-52.23905945 -89.75777435]
[-37.27439880 -88.72874451]
[-22.50281525 -86.12099457]
[-8.09038544 -81.96385193]
[5.80085421 -76.30403900]
[19.01472855 -69.20520020]
[31.40267372 -60.74713516]
[42.82541656 -51.02494812]
[53.15453720 -40.14793777]
[62.27389908 -28.23839569]
[70.08097839 -15.43021584]
[76.48800659 -1.86739814]
[81.42294312 12.29757214]
[84.83030701 26.90544128]
[86.67179871 41.79197693]
[86.92668915 56.79009247]
[87.95789337 71.75460815]
[94.22729492 58.12762451]
[100.49669647 44.50064850]
[106.76610565 30.87366676]
[107.89334869 13.95723534]
[124.46072388 10.35748768]
[132.50610352 25.28090096]
[120.39308167 37.14307404]
[114.12368011 50.77005005]
[107.85427094 64.39703369]
[101.58486938 78.02400970]
[111.10820770 89.61306000]
[125.69195557 86.10388947]
[140.27571106 82.59472656]
[154.85945129 79.08555603]
[169.44320679 75.57639313]
[183.68989563 70.88259125]
[197.50347900 65.03579712]
[211.31706238 59.18901443]
[213.83786011 43.96899033]
[224.20399475 32.54328537]
[239.10768127 28.55779457]
[253.79316711 33.28427887]
[263.57440186 45.21453094]
[265.33023071 60.54165268]
[258.50036621 74.37481689]
[245.26417542 82.29990387]
[229.84530640 81.78805542]
[217.16384888 73.00259399]
[203.35026550 78.84938049]
[189.53668213 84.69617462]
[203.61531067 89.87229156]
[212.09387207 102.24622345]
[211.83831787 117.24404907]
[202.94313049 129.32194519]
[188.69633484 134.01544189]
[174.36413574 129.58959961]
[165.24430847 117.68041992]
[164.70790100 102.69001770]
[172.95237732 90.16014099]
[158.36862183 93.66930389]
[143.78486633 97.17847443]
[129.20112610 100.68763733]
[114.61737061 104.19680786]
[129.09820557 108.10904694]
[143.57902527 112.02128601]
[158.52493286 110.74846649]
[173.39663696 112.70609283]
[187.50402832 117.80331421]
[200.19242859 125.80359650]
[210.87301636 136.33567810]
[219.05018616 148.91082764]
[224.34443665 162.94544983]
[226.51008606 177.78829956]
[225.44667053 192.75054932]
[221.20349121 207.13789368]
[213.97749329 220.28265381]
[204.10398865 231.57485962]
[192.04116821 240.49047852]
[178.34881592 246.61578369]
[163.66232300 249.66650391]
[148.66322327 249.50109863]
[134.04759216 246.12722778]
[120.49364471 239.70144653]
[108.63037109 230.52197266]
[99.00830078 219.01477051]
[92.07394409 205.71383667]
[88.14910126 191.23641968]
[87.41590118 176.25434875]
[89.90837097 161.46289062]
[95.50795746 147.55383301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[10 16]
[82 92]
[83 91]
[84 90]
[85 89]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 112]
[99 111]
[100 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
