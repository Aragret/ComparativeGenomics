%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAAUGGUACUGAACCUACGAGUACACCGACUACGGCGGACUAAUCUUCAACUCCUACAxxxxxxxxxxUCAACAGAAACAAAGCAUACAUCAUUAUUCUCGCACGGACUACAACCACGACCAAUGAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[111.97119141 269.20187378]
[111.97119141 254.20185852]
[111.97119141 239.20185852]
[111.97119141 224.20185852]
[111.97119141 209.20185852]
[111.97119141 194.20185852]
[111.97119141 179.20185852]
[111.97119141 164.20185852]
[111.97119141 149.20185852]
[111.97119141 134.20185852]
[105.24320984 130.88761902]
[98.61470795 144.34358215]
[91.98598480 157.79943848]
[78.53024292 151.17048645]
[85.15874481 137.71507263]
[91.78723907 124.25910950]
[85.05925751 120.94486237]
[73.16687775 130.08659363]
[61.27450180 139.22833252]
[57.77688980 154.88548279]
[43.29238129 161.78320312]
[28.93224716 154.63015747]
[25.71235466 138.91354370]
[36.10272980 126.68980408]
[52.13276672 127.33595276]
[64.02514648 118.19422150]
[75.91752625 109.05248260]
[73.54061890 101.93909454]
[68.78680420 87.71231842]
[66.40989685 80.59892273]
[51.41070938 80.44288635]
[36.41070938 80.44288635]
[21.41152000 80.59892273]
[6.41233063 80.75495911]
[-4.46568489 92.21987915]
[-20.26649666 92.55135345]
[-31.61576462 81.55273438]
[-31.78016853 65.74929810]
[-20.66216850 54.51695251]
[-4.85788059 54.51964188]
[6.25629425 65.75577545]
[21.25548172 65.59973907]
[36.25466919 65.44370270]
[42.95374298 62.20825958]
[51.56674576 65.44370270]
[66.56593323 65.59973907]
[78.26555634 56.21257401]
[81.36387634 41.53604889]
[84.46219635 26.85952377]
[87.40768433 12.15156269]
[90.20000458 -2.58624291]
[85.16692352 -17.58553123]
[95.13822174 -28.64999771]
[97.93054962 -43.38780212]
[100.72286987 -58.12561035]
[103.51519775 -72.86341858]
[89.23516846 -77.52271271]
[75.66821289 -83.96989441]
[63.03712463 -92.09909821]
[51.54931259 -101.77682495]
[41.39341354 -112.84416962]
[32.73620224 -125.11939240]
[25.71983337 -138.40090942]
[20.45952415 -152.47065735]
[17.04165268 -167.09756470]
[15.52234554 -182.04145813]
[15.92654896 -197.05694580]
[18.24762726 -211.89746094]
[22.44746399 -226.31930542]
[28.45709610 -240.08566284]
[36.17783737 -252.97048950]
[45.48291016 -264.76217651]
[56.21951675 -275.26712036]
[68.21134949 -284.31277466]
[81.26148987 -291.75067139]
[95.15564728 -297.45861816]
[109.66565704 -301.34292603]
[124.55326843 -303.33978271]
[139.57400513 -303.41638184]
[154.48121643 -301.57150269]
[169.03009033 -297.83544922]
[182.98175049 -292.26953125]
[196.10708618 -284.96514893]
[208.19058228 -276.04226685]
[219.03378296 -265.64739990]
[228.45866394 -253.95124817]
[236.31044006 -241.14585876]
[242.46018982 -227.44152832]
[246.80693054 -213.06327820]
[249.27928162 -198.24720764]
[249.83663940 -183.23661804]
[248.46984863 -168.27799988]
[245.20137024 -153.61698914]
[240.08485413 -139.49432373]
[233.20434570 -126.14191437]
[224.67280579 -113.77902222]
[214.63032532 -102.60865021]
[203.24183655 -92.81423950]
[190.69433594 -84.55661011]
[177.19384766 -77.97135925]
[162.96209717 -73.16663361]
[148.23275757 -70.22132874]
[133.24769592 -69.18379974]
[118.25299835 -70.07109070]
[115.46067810 -55.33328629]
[112.66835022 -40.59547806]
[109.87602997 -25.85767365]
[115.10884094 -11.91253185]
[104.93781281 0.20608163]
[102.14548492 14.94388771]
[104.00247192 22.14786339]
[99.13872528 29.95784569]
[96.04040527 44.63437271]
[92.94208527 59.31089783]
[133.25434875 63.08331680]
[157.94308472 103.91490173]
[171.72546387 109.83486176]
[183.56922913 100.14035034]
[198.56398010 97.07173157]
[213.26399231 101.33413696]
[224.29132080 111.94810486]
[229.11198425 126.47463226]
[226.61820984 141.57560730]
[217.38307190 153.78096008]
[203.52870178 160.28598022]
[188.23875427 159.59585571]
[175.02676392 151.86918640]
[166.92871094 138.88148499]
[165.80549622 123.61724854]
[152.02311707 117.69728088]
[145.76013184 121.82342529]
[155.01713562 133.62631226]
[164.27412415 145.42918396]
[176.74166870 153.76948547]
[176.68887329 168.76937866]
[164.16294861 177.02171326]
[150.35977173 171.15037537]
[147.61694336 156.40319824]
[140.42555237 143.23945618]
[133.23417664 130.07571411]
[126.97119141 134.20185852]
[126.97119141 149.20185852]
[126.97119141 164.20185852]
[126.97119141 179.20185852]
[126.97119141 194.20185852]
[126.97119141 209.20185852]
[126.97119141 224.20185852]
[126.97119141 239.20185852]
[126.97119141 254.20185852]
[126.97119141 269.20187378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 27]
[18 26]
[19 25]
[30 46]
[31 45]
[32 43]
[33 42]
[34 41]
[47 114]
[48 113]
[49 112]
[50 110]
[51 109]
[53 107]
[54 106]
[55 105]
[56 104]
[116 130]
[117 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
