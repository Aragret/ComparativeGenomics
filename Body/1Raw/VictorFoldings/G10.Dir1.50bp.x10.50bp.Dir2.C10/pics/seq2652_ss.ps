%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCAACCCAACACAGGCAUGCUCAUAAGGAAAGGUUAAAAAAAGUAAAAGGAACUCGGCAAxxxxxxxxxxAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAAUCAACACAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.84104156 325.65704346]
[109.84104156 310.65704346]
[109.84104156 295.65704346]
[109.84104156 280.65704346]
[109.84104156 265.65704346]
[109.84104156 250.65705872]
[109.84104156 235.65705872]
[109.84104156 220.65705872]
[109.84104156 205.65705872]
[109.84104156 190.65705872]
[108.12834930 175.75515747]
[104.72537231 161.14625549]
[101.32239532 146.53736877]
[97.91941833 131.92848206]
[83.59682465 127.47166443]
[72.50550842 137.57031250]
[73.31868744 153.18673706]
[63.86235046 165.64112854]
[48.60149002 169.05288696]
[34.74181747 161.81109619]
[28.82744408 147.33511353]
[33.65095901 132.46003723]
[46.93484497 124.20944214]
[62.40685654 126.47899628]
[73.49816895 116.38034821]
[74.09999847 91.25924683]
[91.57939911 78.04454803]
[90.95542145 63.05752945]
[90.33144379 48.07051468]
[75.14791107 43.34378433]
[62.51505661 33.72911453]
[53.94288254 20.39872932]
[50.44812775 4.96758938]
[52.43374252 -10.70225906]
[59.64248657 -24.72636795]
[71.19010925 -35.42451477]
[85.67376709 -41.52200317]
[84.73814392 -56.49279404]
[83.80251312 -71.46358490]
[82.86688232 -86.43437958]
[81.93125153 -101.40516663]
[80.99562836 -116.37596130]
[65.99256134 -116.88944244]
[51.10910416 -118.84854126]
[36.48420715 -122.23498535]
[22.25443077 -127.01713562]
[8.55263519 -133.15034485]
[-4.49324656 -140.57736206]
[-16.76140594 -149.22882080]
[-28.13729286 -159.02395630]
[-38.51469421 -169.87130737]
[-47.79671860 -181.66960144]
[-55.89669418 -194.30865479]
[-62.73899460 -207.67048645]
[-68.25973511 -221.63031006]
[-72.40737152 -236.05781555]
[-75.14316559 -250.81826782]
[-76.44158936 -265.77386475]
[-76.29050446 -280.78494263]
[-74.69132996 -295.71136475]
[-71.65899658 -310.41375732]
[-67.22181702 -324.75485229]
[-61.42122269 -338.60073853]
[-54.31137085 -351.82214355]
[-45.95864487 -364.29562378]
[-36.44103622 -375.90469360]
[-25.84740829 -386.54098511]
[-14.27667427 -396.10516357]
[-1.83686960 -404.50793457]
[11.35585499 -411.67086792]
[25.17831993 -417.52706909]
[39.50146866 -422.02185059]
[54.19155884 -425.11322021]
[69.11143494 -426.77236938]
[84.12179565 -426.98376465]
[99.08248138 -425.74548340]
[113.85380554 -423.06900024]
[128.29785156 -418.97940063]
[142.27975464 -413.51480103]
[155.66897583 -406.72625732]
[168.34048462 -398.67712402]
[180.17597961 -389.44259644]
[191.06494141 -379.10885620]
[200.90571594 -367.77243042]
[209.60641479 -355.53912354]
[217.08578491 -342.52319336]
[223.27401733 -328.84616089]
[228.11331177 -314.63571167]
[231.55848694 -300.02456665]
[233.57739258 -285.14907837]
[234.15115356 -270.14822388]
[233.27444458 -255.16198730]
[230.95541382 -240.33033752]
[227.21572876 -225.79176331]
[222.09031677 -211.68199158]
[215.62702942 -198.13276672]
[207.88621521 -185.27059937]
[198.94013977 -173.21559143]
[188.87234497 -162.08029175]
[177.77680969 -151.96867371]
[165.75717163 -142.97514343]
[152.92562866 -135.18368530]
[139.40199280 -128.66702271]
[125.31253052 -123.48603058]
[110.78880310 -119.68906403]
[95.96641541 -117.31159210]
[96.90204620 -102.34079742]
[97.83767700 -87.37000275]
[98.77330017 -72.39921570]
[99.70893097 -57.42842102]
[100.64456177 -42.45763016]
[114.36897278 -38.85602570]
[126.32315826 -31.17234421]
[135.32626343 -20.14977837]
[140.48403931 -6.86210680]
[141.27772522 7.39089918]
[137.61610413 21.21062088]
[129.84582520 33.23683167]
[118.71857452 42.28158188]
[105.31845856 47.44653702]
[105.94243622 62.43355179]
[106.56641388 77.42057037]
[119.82402802 84.08023071]
[127.27669525 98.21320343]
[124.99670410 115.18067169]
[112.52831268 128.52549744]
[115.93128967 143.13438416]
[119.33426666 157.74328613]
[122.73724365 172.35217285]
[128.79852295 158.63136292]
[140.46153259 149.19873047]
[155.14649963 146.14071655]
[169.60527039 150.13371277]
[180.63967896 160.29449463]
[185.80903625 174.37561035]
[183.96990967 189.26243591]
[175.52909851 201.66215515]
[162.35365295 208.83204651]
[147.35783386 209.18620300]
[133.85858154 202.64628601]
[124.84104156 190.65705872]
[124.84104156 205.65705872]
[124.84104156 220.65705872]
[124.84104156 235.65705872]
[124.84104156 250.65705872]
[124.84104156 265.65704346]
[124.84104156 280.65704346]
[124.84104156 295.65704346]
[124.84104156 310.65704346]
[124.84104156 325.65704346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 129]
[12 128]
[13 127]
[14 126]
[15 25]
[16 24]
[27 122]
[28 121]
[29 120]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[42 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
