%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACAAAACCCACCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACUCCUACCUAUxxxxxxxxxxUCAAAGCCCUCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGGACUGCAAAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[23.98788834 296.02856445]
[6.96354151 288.54507446]
[-9.33295059 279.58657837]
[-17.58523941 292.11254883]
[-25.83752823 304.63848877]
[-34.08981705 317.16445923]
[-35.22087860 332.94519043]
[-48.68395996 339.31658936]
[-56.93624878 351.84252930]
[-65.18853760 364.36849976]
[-73.44082642 376.89447021]
[-71.63014221 392.83502197]
[-83.06554413 404.08718872]
[-98.97476196 402.01925659]
[-107.15361786 388.21759033]
[-101.32798004 373.26965332]
[-85.96678925 368.64218140]
[-77.71450043 356.11621094]
[-69.46221161 343.59024048]
[-61.20992279 331.06430054]
[-60.66912460 316.17950439]
[-46.61577988 308.91217041]
[-38.36349106 296.38619995]
[-30.11120224 283.86026001]
[-21.85891342 271.33428955]
[-32.06945801 263.59307861]
[-41.78948593 255.24424744]
[-50.98289490 246.31883240]
[-59.61553574 236.84997559]
[-67.65534973 226.87283325]
[-75.07247925 216.42448425]
[-81.83936310 205.54373169]
[-87.93088531 194.27096558]
[-93.32441711 182.64807129]
[-97.99991608 170.71821594]
[-101.94002533 158.52571106]
[-105.13011169 146.11582947]
[-107.55832672 133.53466797]
[-109.21565247 120.82895660]
[-110.09592438 108.04588318]
[-110.19588470 95.23293304]
[-109.51515198 82.43768311]
[-108.05625916 69.70766449]
[-105.82463074 57.09015274]
[-102.82854462 44.63201141]
[-99.07913971 32.37951279]
[-94.59033203 20.37816238]
[-89.37879181 8.67253685]
[-83.46389008 -2.69388986]
[-76.86757660 -13.67890167]
[-69.61436462 -24.24169922]
[-61.73118973 -34.34305191]
[-53.24732971 -43.94543839]
[-44.19429016 -53.01320267]
[-34.60570145 -61.51265717]
[-24.51717567 -69.41223907]
[-13.96617889 -76.68260956]
[-2.99190068 -83.29676056]
[8.36489868 -89.23012543]
[20.06204033 -94.46067810]
[32.05607986 -98.96898651]
[44.30246735 -102.73829651]
[56.75572205 -105.75462341]
[69.36959076 -108.00675964]
[82.09722137 -109.48633575]
[94.89134979 -110.18785858]
[107.70445251 -110.10871887]
[120.48893738 -109.24922180]
[133.19732666 -107.61254883]
[145.78240967 -105.20478821]
[158.19746399 -102.03487396]
[170.39634705 -98.11457825]
[182.33378601 -93.45847321]
[193.96543884 -88.08383942]
[205.24807739 -82.01064301]
[216.13983154 -75.26144409]
[226.60021973 -67.86130524]
[236.59039307 -59.83771896]
[246.07327271 -51.22047424]
[255.01361084 -42.04158401]
[263.37823486 -32.33514023]
[271.13601685 -22.13718605]
[278.25820923 -11.48560429]
[284.71835327 -0.41995466]
[290.49240112 11.01866436]
[295.55895996 22.78776932]
[299.89916992 34.84364700]
[303.49697876 47.14152145]
[318.14047241 43.89069748]
[332.78396606 40.63987350]
[344.57931519 30.09566307]
[358.68093872 34.89079666]
[373.32443237 31.63997269]
[387.96795654 28.38914680]
[395.57247925 17.91895103]
[407.88336182 15.53962135]
[418.16079712 21.99574089]
[432.86877441 19.05025864]
[447.57672119 16.10477448]
[462.28469849 13.15929317]
[476.99264526 10.21380997]
[491.70062256 7.26832771]
[495.44381714 -7.52866650]
[505.24310303 -19.23066330]
[519.15283203 -25.51422310]
[534.41113281 -25.13174057]
[547.98852539 -18.15915871]
[557.18920898 -5.98088598]
[560.18634033 8.98507023]
[556.38488770 23.76721001]
[546.53961182 35.43052673]
[532.60528564 41.65926361]
[517.34857178 41.21669388]
[503.79873657 34.19070053]
[494.64608765 21.97628975]
[479.93814087 24.92177200]
[465.23016357 27.86725426]
[450.52221680 30.81273651]
[435.81423950 33.75822067]
[421.10629272 36.70370102]
[408.61187744 48.98743057]
[391.21878052 43.03264999]
[376.57528687 46.28347397]
[361.93176270 49.53429794]
[351.18383789 59.84598541]
[336.03479004 55.28337479]
[321.39129639 58.53419876]
[306.74780273 61.78502274]
[309.31585693 80.20337677]
[310.24636841 98.77659607]
[309.53207397 117.35939789]
[307.17852783 135.80638123]
[303.20413208 153.97325134]
[297.64004517 171.71786499]
[290.52972412 188.90139771]
[281.92883301 205.38943481]
[271.90466309 221.05297852]
[260.53561401 235.76947021]
[247.91064453 249.42381287]
[234.12852478 261.90914917]
[219.29707336 273.12780762]
[203.53231812 282.99206543]
[186.95759583 291.42468262]
[169.70259094 298.35974121]
[151.90226746 303.74295044]
[133.69589233 307.53222656]
[115.22589874 309.69787598]
[96.63679504 310.22302246]
[78.07400513 309.10351562]
[59.68274689 306.34814453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[8 20]
[9 19]
[10 18]
[11 17]
[88 128]
[89 127]
[90 126]
[92 124]
[93 123]
[94 122]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[102 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
