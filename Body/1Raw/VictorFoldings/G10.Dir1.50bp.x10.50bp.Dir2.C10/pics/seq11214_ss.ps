%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAUUCUACCCUAGCAUCAxxxxxxxxxxCUUGCACGAAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.20876312 282.92636108]
[110.20876312 267.92636108]
[110.20876312 252.92636108]
[110.20876312 237.92636108]
[110.20876312 222.92636108]
[110.20876312 207.92636108]
[110.20876312 192.92636108]
[110.20876312 177.92636108]
[110.20876312 162.92636108]
[110.20876312 147.92636108]
[79.68223572 135.47970581]
[68.90220642 110.33232117]
[56.39817047 118.61779785]
[43.89413452 126.90327454]
[31.39009666 135.18875122]
[18.88606071 143.47422791]
[6.38202572 151.75968933]
[8.94483948 166.77142334]
[5.17397785 181.52609253]
[-4.27723551 193.46739197]
[-17.77132034 200.52639771]
[-32.97034454 201.48010254]
[-47.24098587 196.16326904]
[-58.11076736 185.49707031]
[-63.69643784 171.32949829]
[-63.03024292 156.11515808]
[-56.22760391 142.49003601]
[-44.46712494 132.81475830]
[-29.78637314 128.76564026]
[-14.72887993 131.04418945]
[-1.90344906 139.25566101]
[10.60058689 130.97018433]
[23.10462189 122.68471527]
[35.60865784 114.39923859]
[48.11269379 106.11376190]
[60.61672974 97.82828522]
[64.27543640 83.28133392]
[57.17903137 70.06615448]
[50.08263016 56.85096741]
[42.98622513 43.63578415]
[31.90109253 33.53034973]
[18.08750916 27.68356133]
[4.27392626 21.83677483]
[-8.40752697 30.62223244]
[-23.82639694 31.13408279]
[-37.06258011 23.20899200]
[-43.89245605 9.37583160]
[-42.13663483 -5.95128965]
[-32.35539627 -17.88154221]
[-17.66989708 -22.60802650]
[-2.76622629 -18.62253761]
[7.59990978 -7.19683123]
[10.12071419 8.02319145]
[23.93429756 13.86997986]
[37.74787903 19.71676826]
[43.95703888 15.51006222]
[34.63757706 3.75643873]
[25.31811714 -7.99718475]
[12.65174294 -16.03229332]
[12.42540264 -31.03058434]
[24.84354782 -39.44424438]
[38.68898392 -33.67329407]
[41.45506668 -18.92996979]
[48.91520691 -5.91665888]
[56.37535095 7.09665251]
[62.58450699 2.88994718]
[62.27653122 -12.10689068]
[61.96855164 -27.10372925]
[47.69611740 -32.26725388]
[36.25531387 -42.24084473]
[29.19342422 -55.67565536]
[27.46550751 -70.75473785]
[31.30525017 -85.43876648]
[40.19335556 -97.74185944]
[52.92778778 -106.00010681]
[67.78631592 -109.09666443]
[82.75943756 -106.61273956]
[95.82217407 -98.88426208]
[105.20789337 -86.95645142]
[109.64725494 -72.44243622]
[108.53986359 -57.30512619]
[102.03549194 -43.59171677]
[91.01380920 -33.15683365]
[76.96539307 -27.41170692]
[77.27336884 -12.41486835]
[77.58134460 2.58196950]
[75.69473267 19.91863060]
[67.25148010 31.84705353]
[56.20140839 36.53938293]
[63.29781342 49.75456619]
[70.39421844 62.96974564]
[77.49061584 76.18492889]
[104.72037506 59.38794708]
[140.93006897 73.05776978]
[153.60159302 65.03076935]
[166.27310181 57.00377655]
[166.27107239 41.57641220]
[174.62922668 28.60935211]
[188.68054199 22.24033928]
[203.94126892 24.50169945]
[215.54176331 34.67184448]
[219.78038025 49.50551224]
[215.30455017 64.26934052]
[203.54252625 74.25224304]
[188.24751282 76.26870728]
[174.30009460 69.67529297]
[161.62858582 77.70228577]
[148.95706177 85.72928619]
[150.03135681 93.15194702]
[164.87670898 91.00360107]
[167.02482605 105.84898376]
[152.17993164 107.99726868]
[153.25422668 115.41992950]
[167.68161011 119.52487946]
[182.10899353 123.62982178]
[196.53637695 127.73476410]
[210.96376038 131.83970642]
[223.08816528 122.15576935]
[238.59057617 121.48147583]
[251.51002502 130.07609558]
[256.87869263 144.63484192]
[252.63224792 159.55955505]
[240.40351868 169.11140442]
[224.89469910 169.61749268]
[212.06924438 160.88322449]
[206.85882568 146.26708984]
[192.43142700 142.16215515]
[178.00404358 138.05720520]
[163.57666016 133.95225525]
[149.14927673 129.84732056]
[143.16415405 134.36708069]
[153.85736084 144.88636780]
[164.55056763 155.40563965]
[178.81298828 160.05142212]
[186.38647461 172.99908447]
[183.44514465 187.70788574]
[171.47483826 196.74734497]
[156.52261353 195.55101013]
[146.14190674 184.72323608]
[145.57666016 169.73406982]
[138.38526917 156.57032776]
[131.19389343 143.40660095]
[125.20876312 147.92636108]
[125.20876312 162.92636108]
[125.20876312 177.92636108]
[125.20876312 192.92636108]
[125.20876312 207.92636108]
[125.20876312 222.92636108]
[125.20876312 237.92636108]
[125.20876312 252.92636108]
[125.20876312 267.92636108]
[125.20876312 282.92636108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[37 92]
[38 91]
[39 90]
[40 89]
[41 55]
[42 54]
[43 53]
[66 86]
[67 85]
[68 84]
[94 108]
[95 107]
[96 106]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
