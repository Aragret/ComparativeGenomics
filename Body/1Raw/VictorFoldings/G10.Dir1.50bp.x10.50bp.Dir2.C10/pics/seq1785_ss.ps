%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCUUAACACAAAGCACCCAACUUACACUUAGGAGAUUUCAACUUAACUUGACCGCUCUGAxxxxxxxxxxGCUGUCUCUUACUUUUAACCAGUGAAAUUGACCUGCCCGUGAAGAGGCGGGCAUAACACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.23144531 286.68728638]
[97.23144531 271.68728638]
[97.23144531 256.68728638]
[97.23144531 241.68728638]
[97.23144531 226.68728638]
[97.23144531 211.68728638]
[97.23144531 196.68728638]
[97.23144531 181.68728638]
[97.23144531 166.68728638]
[97.23144531 151.68728638]
[83.21472931 146.34577942]
[73.23200226 157.54154968]
[63.24927902 168.73730469]
[53.26655197 179.93307495]
[54.42040253 195.69519043]
[44.02771378 207.60180664]
[28.25428200 208.58894348]
[16.45820808 198.07095337]
[15.63789082 182.28796387]
[26.28001022 170.60375977]
[42.07078552 169.95034790]
[52.05351257 158.75459290]
[62.03623962 147.55882263]
[72.01896667 136.36305237]
[62.09030533 117.23457336]
[62.66654587 97.69899750]
[71.72246552 82.67057037]
[85.30842590 75.08267975]
[81.30068207 60.62799454]
[77.29294586 46.17330551]
[71.95152283 38.68190765]
[73.35553741 31.37612915]
[69.64937592 16.84119415]
[58.74225616 5.38059759]
[63.09504318 -8.86378670]
[59.38888168 -23.39872360]
[55.68272018 -37.93365860]
[51.97655869 -52.46859360]
[46.92780304 -66.59339905]
[40.58067322 -80.18434906]
[34.23354340 -93.77529907]
[27.88641548 -107.36624908]
[21.53928566 -120.95719910]
[15.19215679 -134.54815674]
[8.84502697 -148.13909912]
[-5.58370209 -143.93051147]
[-20.48578453 -141.97389221]
[-35.51189423 -142.31510925]
[-50.30979919 -144.94616699]
[-64.53261566 -149.80537415]
[-77.84693909 -156.77883911]
[-89.94065857 -165.70309448]
[-100.53028870 -176.36894226]
[-109.36759186 -188.52635193]
[-116.24539948 -201.89033508]
[-121.00249481 -216.14762878]
[-123.52735901 -230.96401978]
[-123.76081848 -245.99220276]
[-121.69738007 -260.87985229]
[-117.38542938 -275.27804565]
[-110.92604065 -288.84921265]
[-102.47062683 -301.27526855]
[-92.21740723 -312.26486206]
[-80.40671539 -321.56045532]
[-67.31542206 -328.94412231]
[-53.25040436 -334.24276733]
[-38.54136276 -337.33221436]
[-23.53310013 -338.13998413]
[-8.57743263 -336.64718628]
[5.97505808 -332.88879395]
[19.78324127 -326.95294189]
[32.52342987 -318.97872925]
[43.89698410 -309.15310669]
[53.63727951 -297.70639038]
[61.51599884 -284.90695190]
[67.34844971 -271.05474854]
[70.99791718 -256.47457886]
[72.37884521 -241.50816345]
[71.45886230 -226.50636292]
[68.25953674 -211.82083130]
[62.85586929 -197.79582214]
[55.37452698 -184.76010132]
[45.99087906 -173.01925659]
[34.92489624 -162.84849548]
[22.43597794 -154.48623657]
[28.78310776 -140.89527893]
[35.13023758 -127.30432892]
[41.47736740 -113.71337891]
[47.82449722 -100.12242889]
[54.17162704 -86.53147888]
[60.51875305 -72.94052887]
[64.55409241 -87.38753510]
[75.66036224 -97.46973419]
[90.42919159 -100.09303284]
[104.32821655 -94.45236206]
[113.09200287 -82.27877808]
[114.03105164 -67.30820465]
[106.85718536 -54.13490677]
[93.77197266 -46.80161285]
[78.79109955 -47.55881500]
[66.51149750 -56.17475510]
[70.21765900 -41.63982010]
[73.92382050 -27.10488319]
[77.62998199 -12.56994820]
[88.27201080 -2.14898777]
[84.18431091 13.13503265]
[87.89047241 27.66996956]
[91.74763489 42.16556549]
[95.75537109 56.62025452]
[99.76311493 71.07494354]
[131.59431458 79.97798920]
[141.32893372 119.92810059]
[155.55570984 124.68191528]
[164.75314331 124.43856049]
[170.02720642 129.68544006]
[184.15200806 134.73419189]
[198.27682495 139.78295898]
[211.01426697 130.92083740]
[226.52737427 131.27177429]
[238.85102844 140.70083618]
[243.24655151 155.58233643]
[238.02375793 170.19404602]
[225.19091797 178.91746521]
[209.68252563 178.39825439]
[197.46188354 168.83605957]
[193.22805786 153.90776062]
[179.10325623 148.85899353]
[164.97845459 143.81024170]
[150.80189514 138.90869141]
[136.57511902 134.15487671]
[130.48919678 138.53797913]
[140.69526672 149.53053284]
[150.90135193 160.52307129]
[163.20021057 169.11013794]
[163.30992126 184.10974121]
[151.13795471 192.87577820]
[136.94645691 188.01763916]
[132.70013428 173.63166809]
[125.50874329 160.46792603]
[118.31736755 147.30418396]
[112.23144531 151.68728638]
[112.23144531 166.68728638]
[112.23144531 181.68728638]
[112.23144531 196.68728638]
[112.23144531 211.68728638]
[112.23144531 226.68728638]
[112.23144531 241.68728638]
[112.23144531 256.68728638]
[112.23144531 271.68728638]
[112.23144531 286.68728638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 24]
[12 23]
[13 22]
[14 21]
[28 110]
[29 109]
[30 108]
[32 107]
[33 106]
[35 104]
[36 103]
[37 102]
[38 101]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[112 130]
[113 129]
[115 128]
[116 127]
[117 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
