%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACACAUUCGAAGAACxxxxxxxxxxAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCAUAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-12.05878162 168.11126709]
[-25.30136681 175.15640259]
[-38.54395294 182.20153809]
[-47.09326172 195.51393127]
[-61.96341705 194.66082764]
[-75.20600128 201.70596313]
[-88.44858551 208.75109863]
[-101.69116974 215.79623413]
[-114.93376160 222.84136963]
[-128.17634583 229.88650513]
[-141.41893005 236.93164062]
[-149.96824646 250.24403381]
[-164.83839417 249.39093018]
[-178.08097839 256.43606567]
[-191.32356262 263.48120117]
[-204.56614685 270.52633667]
[-217.80873108 277.57147217]
[-231.05131531 284.61660767]
[-229.21542358 299.68292236]
[-232.94985962 314.39407349]
[-241.74960327 326.76052856]
[-254.42454529 335.10980225]
[-269.26049805 338.31274414]
[-284.25103760 335.93612671]
[-297.36880493 328.30145264]
[-306.83975220 316.44119263]
[-311.38296509 301.95935059]
[-310.38406372 286.81448364]
[-303.97808838 273.05484009]
[-293.03143311 262.54125977]
[-279.02453613 256.69561768]
[-263.85171509 256.30853271]
[-249.56497192 261.43231201]
[-238.09645081 271.37402344]
[-224.85386658 264.32888794]
[-211.61128235 257.28375244]
[-198.36869812 250.23861694]
[-185.12611389 243.19348145]
[-171.88352966 236.14834595]
[-164.28141785 223.33985901]
[-148.46406555 223.68905640]
[-135.22148132 216.64392090]
[-121.97889709 209.59878540]
[-108.73630524 202.55364990]
[-95.49372101 195.50851440]
[-82.25113678 188.46337891]
[-69.00855255 181.41824341]
[-61.40644073 168.60975647]
[-45.58908844 168.95895386]
[-32.34650040 161.91381836]
[-19.10391617 154.86868286]
[-28.03471756 128.34477234]
[-31.13364983 100.52977753]
[-28.25955963 72.69065857]
[-19.54335976 46.09545517]
[-5.38206577 21.95555878]
[13.57928848 1.37051475]
[36.47703171 -14.72204208]
[62.26818848 -25.58911133]
[89.77799225 -30.73570824]
[89.46594238 -45.73246002]
[89.15388489 -60.72921371]
[88.84182739 -75.72596741]
[88.37378693 -90.71866608]
[87.74980927 -105.70568085]
[87.12583160 -120.69269562]
[72.67079926 -125.25646210]
[60.65030670 -134.49137878]
[52.51588440 -147.28227234]
[49.24979782 -162.08457947]
[51.24645233 -177.11087036]
[58.26473236 -190.54661560]
[69.45715332 -200.76940918]
[83.47216797 -206.54479980]
[98.61740875 -207.17536926]
[113.06400299 -202.58496094]
[125.06745148 -193.32792664]
[133.17829895 -180.52206421]
[136.41709900 -165.71374512]
[134.39274597 -150.69117737]
[127.34972382 -137.26837158]
[116.13848114 -127.06622314]
[102.11284637 -121.31667328]
[102.73682404 -106.32965851]
[103.36080170 -91.34264374]
[106.80369568 -84.74778748]
[103.83857727 -76.03802490]
[104.15063477 -61.04127121]
[104.46269226 -46.04451752]
[104.77474976 -31.04776382]
[113.48680115 -30.43933868]
[122.13903809 -29.25238037]
[130.69308472 -27.49215317]
[139.11099243 -25.16646767]
[147.35543823 -22.28563690]
[155.38984680 -18.86243629]
[163.17860413 -14.91205120]
[170.68713379 -10.45200157]
[177.88214111 -5.50206947]
[184.73173523 -0.08420815]
[191.20550537 5.77755213]
[197.27476501 12.05721378]
[202.91259766 18.72692299]
[208.09396362 25.75710106]
[212.79592896 33.11656189]
[216.99760437 40.77267075]
[220.68035889 48.69146729]
[223.82786560 56.83783340]
[226.42617798 65.17562866]
[228.46374512 73.66788483]
[229.93154907 82.27693176]
[230.82307434 90.96457672]
[231.13435364 99.69229889]
[230.86402893 108.42139435]
[230.01329041 117.11312866]
[228.58590698 125.72896576]
[226.58821106 134.23068237]
[224.02906799 142.58058167]
[220.91981506 150.74163818]
[217.27426147 158.67762756]
[213.10855103 166.35336304]
[208.44119263 173.73481750]
[203.29286194 180.78923035]
[197.68640137 187.48532104]
[191.64668274 193.79339600]
[185.20046997 199.68547058]
[178.37638855 205.13542175]
[171.20468140 210.11906433]
[163.71716309 214.61430359]
[155.94705200 218.60119629]
[147.92878723 222.06205750]
[139.69795227 224.98155212]
[131.29104614 227.34671021]
[122.74535370 229.14706421]
[114.09878540 230.37460327]
[105.38967896 231.02391052]
[96.65667725 231.09208679]
[87.93849945 230.57884216]
[79.27381134 229.48645020]
[70.70105743 227.81974792]
[62.25824738 225.58612061]
[53.98283386 222.79550171]
[45.91151428 219.46025085]
[38.08009720 215.59515381]
[30.52330589 211.21737671]
[23.27466393 206.34631348]
[16.36631775 201.00357056]
[9.82890797 195.21286011]
[3.69143081 188.99984741]
[-2.01889324 182.39210510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[60 90]
[61 89]
[62 88]
[63 87]
[64 85]
[65 84]
[66 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
