%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCACCACCUCUUGCUCAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUAxxxxxxxxxxAUGCACACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[364.67431641 378.33801270]
[358.04583740 364.88204956]
[351.41732788 351.42608643]
[344.78881836 337.97012329]
[338.16033936 324.51416016]
[331.53182983 311.05819702]
[322.39010620 299.16580200]
[311.09109497 289.30007935]
[299.79208374 279.43435669]
[288.49307251 269.56863403]
[276.23181152 278.86956787]
[262.30618286 285.43432617]
[247.31800842 288.97665405]
[231.91560364 289.34088135]
[216.76567078 286.50891113]
[202.52445984 280.60110474]
[189.80937195 271.87097168]
[179.17216492 260.69458008]
[171.07499695 247.55410767]
[165.87037659 233.01719666]
[163.78581238 217.71232605]
[164.91384888 202.30174255]
[169.20797729 187.45272827]
[176.48457336 173.80874634]
[164.98275757 164.18022156]
[153.48095703 154.55169678]
[141.81217957 163.93623352]
[128.53692627 170.86425781]
[114.16525269 175.06961060]
[99.24932861 176.39068604]
[84.36225128 174.77674866]
[70.07599640 170.28977966]
[56.93944931 163.10221863]
[45.45734406 153.49017334]
[36.07083511 141.82298279]
[29.14055824 128.54890442]
[24.93278885 114.17794037]
[23.60918999 99.26223755]
[25.22061729 84.37488556]
[29.70516014 70.08786774]
[36.89051437 56.95011139]
[25.38871002 47.32158661]
[13.88690662 37.69305801]
[-1.66147149 34.76756668]
[-6.45399046 20.66504669]
[-17.95579338 11.03652000]
[-33.50417328 8.11102581]
[-38.29669189 -5.99149275]
[-49.79849243 -15.62001896]
[-61.30029678 -25.24854469]
[-72.80210114 -34.87707138]
[-88.52053070 -33.23196030]
[-100.74563599 -43.24806976]
[-102.22447205 -58.98302078]
[-92.07966614 -71.10153961]
[-76.32996368 -72.41393280]
[-64.31937408 -62.14157486]
[-63.17357254 -46.37887573]
[-51.67177200 -36.75034714]
[-40.16996765 -27.12182236]
[-28.66816330 -17.49329567]
[-13.94247246 -15.25649834]
[-8.32726765 -0.46528313]
[3.17453599 9.16324329]
[17.90022850 11.40004063]
[23.51543236 26.19125557]
[35.01723480 35.81978226]
[46.51903915 45.44830704]
[58.18781662 36.06377029]
[71.46307373 29.13573647]
[85.83474731 24.93039322]
[100.75067139 23.60931587]
[115.63774872 25.22325897]
[129.92401123 29.71021461]
[143.06054688 36.89778900]
[154.54264832 46.50982285]
[163.92916870 58.17701721]
[170.85943604 71.45109558]
[175.06721497 85.82205963]
[176.39080811 100.73776245]
[174.77938843 115.62511444]
[170.29484558 129.91212463]
[163.10948181 143.04988098]
[174.61129761 152.67842102]
[186.11309814 162.30694580]
[197.56735229 153.18789673]
[210.58261108 146.49354553]
[224.65289307 142.48196411]
[239.23161316 141.30693054]
[253.75285339 143.01211548]
[267.65328979 147.52938843]
[280.39413452 154.68161011]
[291.48184204 164.18949890]
[300.48739624 175.68258667]
[307.06289673 188.71366882]
[310.95489502 202.77615356]
[312.01419067 217.32377625]
[310.20169067 231.79183960]
[305.58959961 245.61912537]
[298.35879517 258.26962280]
[309.65780640 268.13534546]
[320.95681763 278.00106812]
[332.25582886 287.86679077]
[327.77484131 273.55175781]
[327.62893677 258.55245972]
[331.83062744 244.15295410]
[340.02020264 231.58589172]
[351.49658203 221.92710876]
[365.27737427 216.00343323]
[380.18283081 214.32194519]
[394.93698120 217.02662659]
[408.27676392 223.88591003]
[419.06027222 234.31263733]
[426.36431885 247.41418457]
[429.56369019 262.06903076]
[428.38446045 277.02258301]
[422.92761230 290.99481201]
[413.66027832 302.78955078]
[401.37576294 311.39715576]
[387.12570190 316.08078003]
[372.13000488 316.43942261]
[357.67233276 312.44241333]
[344.98779297 304.42968750]
[351.61630249 317.88565063]
[358.24478149 331.34161377]
[364.87329102 344.79757690]
[371.50180054 358.25354004]
[378.13027954 371.70950317]
[392.88973999 368.60964966]
[407.95639038 369.27853394]
[422.38308716 373.67413330]
[435.26296997 381.52008057]
[445.78643799 392.32321167]
[453.29193115 405.40444946]
[457.30764771 419.94146729]
[457.58117676 435.02044678]
[454.09533691 449.69354248]
[447.06921387 463.03836060]
[436.94451904 474.21606445]
[424.35763550 482.52401733]
[410.09985352 487.43994141]
[395.06738281 488.65481567]
[380.20523071 486.09231567]
[366.44757080 479.91348267]
[354.65927124 470.50674438]
[345.58132935 458.46340942]
[339.78442383 444.54052734]
[337.63293457 429.61331177]
[339.26208496 414.62008667]
[344.56951904 400.50335693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[4 125]
[5 124]
[6 123]
[7 103]
[8 102]
[9 101]
[10 100]
[24 85]
[25 84]
[26 83]
[41 68]
[42 67]
[43 66]
[45 64]
[46 63]
[48 61]
[49 60]
[50 59]
[51 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
