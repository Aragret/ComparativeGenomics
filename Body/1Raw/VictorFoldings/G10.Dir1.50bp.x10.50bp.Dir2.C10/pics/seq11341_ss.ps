%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAAUUAUUCAGCUUCCUACACUAUUAAAGUUUACCACAACCACCACCCCAUCAUACUCUxxxxxxxxxxAGAAAAAGUCUUUAACUCCACCAUUAGCACCCAAAGCUAAGAUUCUAAUUUAAACUAUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-54.11157608 155.81019592]
[-68.43417358 160.26701355]
[-82.75676727 164.72381592]
[-97.07936859 169.18063354]
[-107.95740509 180.66883850]
[-122.40882874 177.06250000]
[-136.73143005 181.51931763]
[-147.60946655 193.00752258]
[-162.06088257 189.40118408]
[-176.38348389 193.85798645]
[-190.70608521 198.31480408]
[-190.37771606 212.14042664]
[-193.65585327 225.56262207]
[-200.30807495 237.65789795]
[-209.87007141 247.59585571]
[-221.67800903 254.69616699]
[-234.91464233 258.47518921]
[-248.66583252 258.67883301]
[-261.98376465 255.29978943]
[-273.95214844 248.57736206]
[-283.74938965 238.98068237]
[-290.70489502 227.17594910]
[-305.20050049 231.03311157]
[-319.69610596 234.89025879]
[-334.19168091 238.74742126]
[-337.00466919 253.74908447]
[-346.05493164 266.03952026]
[-359.54562378 273.17846680]
[-374.79809570 273.74847412]
[-388.78396606 267.63638306]
[-398.72634888 256.05569458]
[-402.65118408 241.30584717]
[-399.77914429 226.31536865]
[-390.68054199 214.06065369]
[-377.16183472 206.97489929]
[-361.90725708 206.46496582]
[-347.94555664 212.63209534]
[-338.04885864 224.25183105]
[-323.55325317 220.39466858]
[-309.05764771 216.53750610]
[-294.56207275 212.68034363]
[-293.96337891 196.44386292]
[-288.39486694 181.16064453]
[-278.38534546 168.31547546]
[-264.89569092 159.15998840]
[-249.22657776 154.59077454]
[-232.89308167 155.06150818]
[-217.47816467 160.53797913]
[-204.47927856 170.50028992]
[-195.16288757 183.99221802]
[-180.84030151 179.53540039]
[-166.51770020 175.07858276]
[-156.66410828 163.90916443]
[-141.18823242 167.19671631]
[-126.86564636 162.73989868]
[-117.01205444 151.57048035]
[-101.53618622 154.85804749]
[-87.21358490 150.40122986]
[-72.89099121 145.94441223]
[-58.56838989 141.48759460]
[-61.69290161 126.84325409]
[-63.46791077 111.97486877]
[-63.87859726 97.00654602]
[-62.92153549 82.06320953]
[-60.60471344 67.26956940]
[-56.94746780 52.74910736]
[-51.98032379 38.62300491]
[-45.74473572 25.00915718]
[-38.29274750 12.02119350]
[-29.68655586 -0.23249063]
[-19.99798393 -11.64962387]
[-9.30789757 -22.13491821]
[2.29448366 -31.60086250]
[14.71232510 -39.96845245]
[27.84198761 -47.16785049]
[41.57388687 -53.13896942]
[55.79341507 -57.83197784]
[70.38189697 -61.20770264]
[85.21757507 -63.23796844]
[100.17662811 -63.90583801]
[115.13420868 -63.20573044]
[129.96548462 -61.14348984]
[144.54664612 -57.73633194]
[158.75604248 -53.01268768]
[172.47503662 -47.01198578]
[185.58914185 -39.78430557]
[197.98892212 -31.38997269]
[207.49728394 -42.99131393]
[217.00564575 -54.59265518]
[216.86000061 -70.63504791]
[229.40197754 -80.63894653]
[245.01046753 -76.93022156]
[251.71195984 -62.35388565]
[244.36564636 -48.09165573]
[228.60697937 -45.08429718]
[219.09863281 -33.48295593]
[209.59027100 -21.88161469]
[221.84948730 -9.62598896]
[232.74580383 3.85581136]
[242.15736389 18.41299248]
[249.97886658 33.88272858]
[256.12286377 50.09199524]
[260.52059937 66.85948181]
[263.12289429 83.99765015]
[278.10260010 83.21780396]
[293.08233643 82.43796539]
[308.06204224 81.65811920]
[323.04174805 80.87827301]
[332.31192017 68.28470612]
[347.52038574 64.64648438]
[361.48617554 71.68145752]
[367.61505127 86.06793976]
[363.01318359 101.01306152]
[349.85339355 109.46019745]
[334.34936523 107.42086792]
[323.82159424 95.85798645]
[308.84188843 96.63783264]
[293.86218262 97.41767883]
[278.88244629 98.19752502]
[263.90274048 98.97736359]
[263.36489868 113.30642700]
[261.57678223 127.53364563]
[258.55200195 141.55014038]
[254.31378174 155.24862671]
[248.89453125 168.52426147]
[242.33570862 181.27546692]
[234.68753052 193.40463257]
[226.00852966 204.81892395]
[216.36512756 215.43098450]
[205.83113098 225.15960693]
[194.48715210 233.93032837]
[182.42002869 241.67601013]
[169.72210693 248.33738708]
[156.49057007 253.86347961]
[142.82669067 258.21197510]
[128.83503723 261.34960938]
[114.62268829 263.25234985]
[100.29843140 263.90567017]
[85.97189331 263.30453491]
[71.75271606 261.45355225]
[57.74972534 258.36688232]
[44.07009506 254.06816101]
[30.81852341 248.59030151]
[18.09642792 241.97520447]
[6.00117874 234.27351379]
[-5.37465525 225.54415894]
[-15.94400978 215.85397339]
[-25.62599182 205.27708435]
[-34.34650040 193.89447021]
[-42.03879929 181.79324341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[6 55]
[7 54]
[9 52]
[10 51]
[11 50]
[22 41]
[23 40]
[24 39]
[25 38]
[87 97]
[88 96]
[89 95]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
