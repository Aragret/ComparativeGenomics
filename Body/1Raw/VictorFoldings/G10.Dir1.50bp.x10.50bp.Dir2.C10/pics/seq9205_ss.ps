%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAACUAAUAUUUCACUUUACAUCCAAACAUCACUUUGGCUUCGAAGCCGCCGCCUGAUAxxxxxxxxxxCGCACUCACAGUCGCAUCAUAAUCCUCUCUCAAGGACUUCAAACUCUACUCCCACUAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[105.07472992 239.75666809]
[104.76267242 224.75990295]
[104.45062256 209.76315308]
[104.13856506 194.76640320]
[103.82650757 179.76965332]
[103.51445007 164.77288818]
[103.20239258 149.77613831]
[102.89033508 134.77938843]
[102.57828522 119.78263092]
[90.31591797 111.14351654]
[76.08913422 115.89733124]
[61.86235428 120.65114594]
[47.63557816 125.40496063]
[33.40879822 130.15878296]
[35.39452362 145.07365417]
[34.52143860 160.09477234]
[30.82110214 174.67915344]
[24.42728233 188.29956055]
[15.57111073 200.46363831]
[4.57273054 210.73164368]
[-8.17027187 218.73242188]
[-22.19724464 224.17672729]
[-37.00112534 226.86776733]
[-52.04675674 226.70825195]
[-66.79025269 223.70394897]
[-80.69864655 217.96347046]
[-93.26914978 209.69432068]
[-104.04736328 199.19543457]
[-112.64363861 186.84632874]
[-118.74724579 173.09341431]
[-122.13753510 158.43386841]
[-122.69195557 143.39761353]
[-120.39045715 128.52818298]
[-115.31623840 114.36313629]
[-107.65273285 101.41449738]
[-97.67696381 90.15036774]
[-85.74956512 80.97793579]
[-72.30168915 74.22877502]
[-57.81947327 70.14686584]
[-42.82644272 68.87976837]
[-27.86458588 70.47328186]
[-13.47476101 74.86981201]
[-0.17715438 81.91042328]
[11.54753494 91.34059143]
[21.27546692 102.81943512]
[28.65498352 115.93199921]
[42.88176346 111.17818451]
[57.10853958 106.42436981]
[71.33531952 101.67055511]
[85.56210327 96.91674042]
[96.86110687 87.05101776]
[103.48960114 73.59504700]
[104.48848724 64.44879150]
[110.39852905 59.93026352]
[117.30552673 46.61510849]
[124.21252441 33.29995346]
[131.11952209 19.98479652]
[119.73652649 29.75348663]
[105.03768921 32.74417877]
[90.74254608 28.20008087]
[80.46846008 17.27107239]
[76.81528473 2.72272730]
[80.70745087 -11.76350880]
[91.16005707 -22.52190781]
[105.52806854 -26.83007050]
[120.17578125 -23.59776306]
[124.48336792 -37.96594620]
[128.79095459 -52.33413315]
[133.09854126 -66.70231628]
[121.22793579 -57.53231812]
[106.57961273 -54.30329514]
[91.95373535 -57.63250732]
[80.14617920 -66.88354492]
[73.41408539 -80.28797913]
[73.04435730 -95.28342438]
[79.10766602 -109.00334930]
[90.44495392 -118.82505035]
[104.88898468 -122.87101746]
[119.67864990 -120.36782837]
[131.98674011 -111.79398346]
[139.46046448 -98.78846741]
[140.67132568 -83.83886719]
[148.39541626 -96.69727325]
[155.98532104 -109.63533020]
[163.44023132 -122.65163422]
[170.89514160 -135.66795349]
[173.52037048 -152.41741943]
[190.34197998 -154.53149414]
[197.03013611 -138.95251465]
[183.91145325 -128.21304321]
[176.45654297 -115.19672394]
[169.00163269 -102.18041992]
[168.40263367 -94.76510620]
[161.25381470 -88.97319031]
[153.52973938 -76.11478424]
[147.46672058 -62.39472961]
[143.15913391 -48.02654648]
[138.85154724 -33.65836334]
[134.54396057 -19.29017830]
[139.47682190 -13.64067650]
[154.19485474 -16.53544617]
[149.34254456 -2.34167194]
[154.27540588 3.30783033]
[169.09317017 0.97672653]
[183.91093445 -1.35437739]
[198.72868347 -3.68548131]
[207.82772827 -16.60767174]
[223.41316223 -19.22869301]
[236.23843384 -9.99353886]
[238.69451904 5.61873627]
[229.32429504 18.34564781]
[213.68692017 20.63654327]
[201.05978394 11.13227654]
[186.24203491 13.46338081]
[171.42427063 15.79448414]
[156.60652161 18.12558937]
[144.43467712 26.89179611]
[137.52767944 40.20695114]
[130.62068176 53.52210617]
[123.71368408 66.83726501]
[116.94557190 80.22354889]
[110.31707001 93.67951202]
[122.58525848 85.04866028]
[131.21701050 72.78111267]
[143.17601013 63.72669601]
[157.32508850 58.74637985]
[172.31884766 58.31372833]
[186.73155212 62.46989059]
[199.19274902 70.81965637]
[208.51751709 82.56906891]
[213.81918335 96.60089874]
[214.59362793 111.58089447]
[210.76721191 126.08463287]
[202.70378113 138.73300171]
[191.17005920 148.32325745]
[177.26277161 153.94352722]
[162.30432129 155.05937195]
[147.71710205 151.56466675]
[134.88815308 143.79176331]
[125.03871918 132.48185730]
[117.57503510 119.47057343]
[117.88709259 134.46733093]
[118.19915009 149.46408081]
[118.51120758 164.46083069]
[118.82325745 179.45759583]
[119.13531494 194.45434570]
[119.44737244 209.45109558]
[119.75942993 224.44784546]
[120.07148743 239.44461060]
[122.66248322 258.65234375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 50]
[11 49]
[12 48]
[13 47]
[14 46]
[51 122]
[52 121]
[54 120]
[55 119]
[56 118]
[57 117]
[66 99]
[67 98]
[68 97]
[69 96]
[82 95]
[83 94]
[84 92]
[85 91]
[86 90]
[103 116]
[104 115]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
