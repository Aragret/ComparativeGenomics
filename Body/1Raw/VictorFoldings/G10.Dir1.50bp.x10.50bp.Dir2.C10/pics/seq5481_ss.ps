%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGxxxxxxxxxxAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-10.48791218 199.00387573]
[-17.53472137 190.52589417]
[-29.86600494 199.06634521]
[-42.19728851 207.60681152]
[-54.52857208 216.14726257]
[-66.85985565 224.68772888]
[-73.79943848 238.90577698]
[-88.66768646 239.79148865]
[-100.99897003 248.33195496]
[-113.33025360 256.87240601]
[-125.66153717 265.41287231]
[-137.99282837 273.95333862]
[-143.30767822 281.45986938]
[-150.66612244 282.53948975]
[-163.17015076 290.82498169]
[-175.67419434 299.11044312]
[-172.39851379 313.93051147]
[-174.70153809 328.93252563]
[-182.27177429 342.08758545]
[-194.08543396 351.61660767]
[-208.54479980 356.23083496]
[-223.69438171 355.30624390]
[-237.48529053 348.96786499]
[-248.05245972 338.07293701]
[-253.96673584 324.09487915]
[-254.42826843 308.92413330]
[-249.37464905 294.61242676]
[-239.48931885 283.09524536]
[-226.10920715 275.93026733]
[-211.04385376 274.08645630]
[-196.33073425 277.81317139]
[-183.95967102 286.60641479]
[-171.45562744 278.32092285]
[-158.95159912 270.03546143]
[-146.53327942 261.62203979]
[-134.20199585 253.08158875]
[-121.87071228 244.54113770]
[-109.53942871 236.00067139]
[-97.20814514 227.46020508]
[-91.15058136 213.85304260]
[-75.40031433 212.35644531]
[-63.06903076 203.81597900]
[-50.73774719 195.27552795]
[-38.40646362 186.73506165]
[-26.07518005 178.19461060]
[-37.17578125 156.49913025]
[-44.57472992 133.27905273]
[-48.07236481 109.16093445]
[-47.57430267 84.79561615]
[-43.09398270 60.84058380]
[-34.75230789 37.94225693]
[-22.77437401 16.71854591]
[-7.48340511 -2.25783706]
[-17.81430817 -13.13315105]
[-28.14521027 -24.00846481]
[-44.08153534 -25.85593033]
[-52.45067215 -39.54304504]
[-46.83253860 -54.57022476]
[-31.53688240 -59.40990067]
[-18.29722404 -50.34949493]
[-17.26989555 -34.33936691]
[-6.93899393 -23.46405411]
[3.39190888 -12.58873940]
[10.18338680 -18.07761574]
[17.28603554 -23.15740967]
[24.67525101 -27.81052208]
[32.32542801 -32.02083206]
[40.21006775 -35.77375031]
[48.30184937 -39.05627823]
[56.57274246 -41.85704422]
[64.99408722 -44.16633987]
[73.53671265 -45.97616959]
[82.17102814 -47.28026199]
[90.86710358 -48.07409668]
[99.59481812 -48.35492325]
[108.32394409 -48.12177277]
[117.02423096 -47.37545013]
[125.66552734 -46.11854172]
[134.21791077 -44.35540009]
[142.65174866 -42.09213638]
[150.93782043 -39.33659363]
[159.04740906 -36.09831238]
[166.95242310 -32.38851929]
[174.62548828 -28.22005844]
[182.04000854 -23.60737801]
[190.95616150 -35.66980743]
[199.87231445 -47.73223877]
[194.29740906 -62.11709213]
[197.40692139 -77.22782898]
[208.20861816 -88.24267578]
[223.25572205 -91.64683533]
[237.74674988 -86.35404205]
[247.05767822 -74.05321503]
[248.21740723 -58.66950607]
[240.85588074 -45.11179733]
[227.32214355 -37.70630264]
[211.93475342 -38.81608963]
[203.01860046 -26.75365829]
[194.10244751 -14.69122696]
[210.00032043 0.45464143]
[223.48851013 17.78116226]
[234.27153015 36.90877914]
[242.11320496 57.41848373]
[246.84172058 78.86097717]
[261.77774048 77.47695160]
[276.71374512 76.09292603]
[291.64974976 74.70890808]
[306.58575439 73.32488251]
[314.39318848 59.91503906]
[328.60516357 53.68615341]
[343.75692749 57.03336334]
[354.02230835 68.66959381]
[355.45404053 84.12047577]
[347.50161743 97.44483185]
[333.22286987 103.51917267]
[318.10833740 100.00779724]
[307.96978760 88.26089478]
[293.03378296 89.64492035]
[278.09777832 91.02894592]
[263.16174316 92.41297150]
[248.22573853 93.79698944]
[248.27711487 104.82111359]
[247.50971985 115.81861115]
[245.92779541 126.72875977]
[243.54005432 137.49131775]
[240.35971069 148.04684448]
[236.40429688 158.33706665]
[231.69567871 168.30516052]
[226.25985718 177.89607239]
[220.12683105 187.05683899]
[213.33045959 195.73689270]
[205.90829468 203.88830566]
[197.90132141 211.46604919]
[189.35374451 218.42826843]
[180.31275940 224.73655701]
[170.82829285 230.35604858]
[160.95271301 235.25573730]
[150.74055481 239.40855408]
[140.24822998 242.79154968]
[129.53364563 245.38607788]
[118.65597534 247.17779541]
[107.67529297 248.15679932]
[96.65222931 248.31770325]
[85.64764404 247.65960693]
[74.72232056 246.18614197]
[63.93657303 243.90544128]
[53.34996796 240.83012390]
[43.02095795 236.97714233]
[33.00658417 232.36778259]
[23.36214256 227.02749634]
[14.14088821 220.98577881]
[5.39374065 214.27600098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 45]
[3 44]
[4 43]
[5 42]
[6 41]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[14 34]
[15 33]
[16 32]
[53 63]
[54 62]
[55 61]
[85 99]
[86 98]
[87 97]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
