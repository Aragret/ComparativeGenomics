%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUGUCUCCAUCUAUUGAUGAGGGUCUUACUCUUUUAGUAUAAAUAGUACCGUUAACUUCxxxxxxxxxxUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[163.14466858 300.57904053]
[162.83261108 285.58227539]
[162.52055359 270.58554077]
[162.20849609 255.58877563]
[161.89643860 240.59202576]
[161.58438110 225.59526062]
[161.27232361 210.59851074]
[160.96026611 195.60176086]
[160.64820862 180.60501099]
[154.44281006 166.94876099]
[143.35148621 156.85011292]
[128.73159790 154.00268555]
[123.73654175 138.99069214]
[112.64522552 128.89204407]
[101.55390930 118.79338837]
[86.60581970 117.54651642]
[73.99469757 125.66806030]
[61.38356781 133.78959656]
[55.81753159 141.11566162]
[48.42452240 141.94573975]
[35.64716339 149.80317688]
[22.86980629 157.66059875]
[15.54747295 172.33422852]
[-0.83562893 173.05950928]
[-9.42596817 159.09031677]
[-1.38653982 144.79698181]
[15.01238060 144.88323975]
[27.78973770 137.02581787]
[40.56709671 129.16839600]
[53.26202393 121.17847443]
[65.87315369 113.05693054]
[78.48428345 104.93538666]
[77.08197784 90.00108337]
[63.17942047 84.36912537]
[49.27686691 78.73716736]
[43.97972488 79.48542023]
[39.40425110 78.21364594]
[36.20926666 75.55023193]
[34.70060349 72.29579163]
[21.17641449 65.80762482]
[7.65222359 59.31945801]
[-4.79535818 62.85662842]
[-15.94678402 57.12385559]
[-20.04169655 45.69849014]
[-33.42798233 38.93037415]
[-46.81426620 32.16225815]
[-60.20055008 25.39414406]
[-77.06385040 23.64327621]
[-80.04962921 6.95431328]
[-64.83942413 -0.53474599]
[-53.43243790 12.00786018]
[-40.04615021 18.77597427]
[-26.65986633 25.54409027]
[-13.27358150 32.31220245]
[4.13975334 30.36908340]
[14.14038849 45.79526901]
[27.66457939 52.28343201]
[41.18877029 58.77159882]
[54.90882111 64.83460999]
[68.81137848 70.46656799]
[82.71393585 76.09852600]
[95.49129486 68.24109650]
[96.73816681 53.29301071]
[97.98503876 38.34492493]
[99.23191833 23.39683723]
[84.94257355 18.59285736]
[72.21850586 10.50821590]
[61.79946136 -0.38705626]
[54.29119492 -13.45952225]
[50.13022614 -27.94916534]
[49.55846786 -43.01358032]
[52.60916519 -57.77693558]
[59.10494995 -71.38091278]
[68.66816711 -83.03459167]
[80.74282074 -92.06044769]
[94.62691498 -97.93373108]
[109.51324463 -100.31296539]
[124.53633118 -99.05983734]
[138.82275391 -94.24719238]
[151.54191589 -86.15483856]
[161.95436096 -75.25325012]
[169.45469666 -62.17623901]
[173.60687256 -47.68407440]
[174.16950989 -32.61931610]
[171.10986328 -17.85781288]
[164.60581970 -4.25777578]
[155.03553772 7.39010620]
[142.95541382 16.40863991]
[129.06776428 22.27350044]
[114.18000031 24.64371300]
[112.93312836 39.59180069]
[111.68625641 54.53988647]
[110.43937683 69.48797607]
[121.09159088 84.53302002]
[120.05552673 99.51165771]
[111.65255737 107.70207214]
[122.74387360 117.80072784]
[133.83518982 127.89937592]
[149.24841309 131.46913147]
[153.45013428 145.75880432]
[164.54145813 155.85745239]
[169.75178528 149.27458191]
[178.20352173 144.60525513]
[189.08610535 143.19409180]
[201.08587646 146.03158569]
[215.85192871 148.67045593]
[230.61798096 151.30931091]
[245.38403320 153.94818115]
[252.50094604 140.59884644]
[263.39611816 130.10357666]
[277.00213623 123.49060059]
[291.98602295 121.40778351]
[306.87982178 124.05918121]
[320.22439575 131.18502808]
[330.71234131 142.08721924]
[337.31622314 155.69767761]
[339.38897705 170.68295288]
[336.72760010 185.57498169]
[329.59280396 198.91476440]
[318.68359375 209.39541626]
[305.06872559 215.99015808]
[290.08206177 218.05288696]
[275.19183350 215.38154602]
[261.85684204 208.23780823]
[251.38348389 197.32156372]
[244.79786682 183.70228577]
[242.74517822 168.71423340]
[227.97912598 166.07537842]
[213.21305847 163.43650818]
[198.44700623 160.79763794]
[192.74650574 165.67147827]
[204.43978882 175.06651306]
[219.16717529 177.91328430]
[228.02966309 190.01519775]
[226.29841614 204.91496277]
[214.89718628 214.66238403]
[199.90943909 214.05645752]
[189.33227539 203.42050171]
[188.80915833 188.43040466]
[181.34547424 175.41912842]
[175.64497375 180.29295349]
[175.95703125 195.28970337]
[176.26907349 210.28645325]
[176.58113098 225.28320312]
[176.89318848 240.27996826]
[177.20524597 255.27671814]
[177.51730347 270.27346802]
[177.82936096 285.27023315]
[178.14141846 300.26696777]
[180.73242188 319.47470093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 101]
[11 100]
[13 98]
[14 97]
[15 96]
[16 32]
[17 31]
[18 30]
[20 29]
[21 28]
[22 27]
[33 61]
[34 60]
[35 59]
[39 58]
[40 57]
[41 56]
[44 54]
[45 53]
[46 52]
[47 51]
[62 93]
[63 92]
[64 91]
[65 90]
[105 130]
[106 129]
[107 128]
[108 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
