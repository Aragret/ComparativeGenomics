%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGGCACAGCUCUAAGCCUCCUUAUUCGAGCCGAGCUGGGCCAGCCAGGCAACCUUCUAGxxxxxxxxxxCCACGUUCUCCUGAUCAAAUAUCACUCUCCUACUUACAGGACUCAACAUACUAGUCACAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 219.47857666]
[92.50000000 204.47857666]
[92.50000000 189.47857666]
[92.50000000 174.47857666]
[92.50000000 159.47857666]
[92.50000000 144.47857666]
[92.50000000 129.47857666]
[92.50000000 114.47858429]
[80.81378937 105.07472229]
[66.16106415 108.28372192]
[51.50834274 111.49272156]
[36.85561752 114.70171356]
[29.08530426 119.62289429]
[21.86919594 117.82290649]
[7.15367317 120.73037720]
[-7.56184959 123.63785553]
[-19.60056686 133.90332031]
[-33.58619690 128.77970886]
[-48.30171967 131.68717957]
[-63.01724243 134.59465027]
[-77.73276520 137.50212097]
[-92.44828796 140.40959167]
[-107.16381073 143.31706238]
[-121.59119415 147.42201233]
[-135.63316345 152.69676208]
[-149.67514038 157.97149658]
[-163.71711731 163.24623108]
[-173.70504761 176.25289917]
[-189.92549133 173.83847046]
[-195.69224548 158.48670959]
[-185.07296753 145.99018860]
[-168.99186707 149.20425415]
[-154.94989014 143.92951965]
[-140.90791321 138.65478516]
[-126.86593628 133.38003540]
[-140.72018433 127.63027954]
[-148.68357849 114.91869354]
[-147.81251526 99.94400787]
[-138.42897034 88.24148560]
[-124.00149536 84.13685608]
[-109.86308289 89.14736938]
[-101.23986816 101.42092133]
[-101.31935120 116.42071533]
[-110.07128143 128.60154724]
[-95.35575867 125.69407654]
[-80.64023590 122.78659821]
[-65.92471313 119.87912750]
[-51.20919037 116.97165680]
[-36.49366760 114.06418610]
[-25.50750351 104.00667572]
[-10.46932220 108.92233276]
[4.24620056 106.01485443]
[18.96172333 103.10738373]
[33.64662170 100.04898834]
[48.29934692 96.83999634]
[62.95207214 93.63099670]
[77.60479736 90.42200470]
[94.31964874 81.97031403]
[107.10110474 88.57823181]
[119.93476105 80.81309509]
[113.14696503 67.42884827]
[107.37836456 53.57477188]
[102.66121674 39.32834244]
[99.02190399 24.76923561]
[96.48078156 9.97887135]
[95.05204773 -4.96003532]
[94.74370575 -19.96393967]
[95.55747223 -34.94893265]
[97.48880005 -49.83120728]
[100.52689362 -64.52754211]
[104.65474701 -78.95574188]
[109.84928894 -93.03512573]
[116.08146667 -106.68694305]
[123.31642914 -119.83485413]
[131.51370239 -132.40533447]
[140.62745667 -144.32806396]
[150.60671997 -155.53639221]
[161.39567566 -165.96762085]
[172.93400574 -175.56341553]
[185.15716553 -184.27012634]
[197.99679565 -192.03903198]
[211.38110352 -198.82670593]
[225.23522949 -204.59518433]
[239.48170471 -209.31219482]
[254.04084778 -212.95138550]
[268.83123779 -215.49238586]
[283.77014160 -216.92097473]
[298.77404785 -217.22918701]
[313.75903320 -216.41529846]
[328.64129639 -214.48382568]
[343.33761597 -211.44561768]
[357.76577759 -207.31762695]
[371.84512329 -202.12295532]
[385.49688721 -195.89067078]
[398.64471436 -188.65559387]
[411.21511841 -180.45820618]
[423.13778687 -171.34434509]
[434.34603882 -161.36499023]
[444.77716064 -150.57592773]
[454.37286377 -139.03752136]
[463.07943726 -126.81428528]
[470.84823608 -113.97457886]
[477.63580322 -100.59020996]
[483.40414429 -86.73603058]
[488.12103271 -72.48952484]
[491.76010132 -57.93035126]
[494.30096436 -43.13994217]
[495.72943115 -28.20100975]
[496.03750610 -13.19709969]
[495.22348022 1.78787863]
[493.29190063 16.67012215]
[490.25354004 31.36640167]
[486.12542725 45.79453278]
[480.93063354 59.87382126]
[474.69821167 73.52552795]
[467.46304321 86.67331696]
[459.26553345 99.24364471]
[450.15158081 111.16622162]
[440.17211914 122.37437439]
[429.38296509 132.80540466]
[417.84448242 142.40100098]
[405.62115479 151.10748291]
[392.78137207 158.87617493]
[379.39697266 165.66360474]
[365.54272461 171.43183899]
[351.29617310 176.14860535]
[336.73696899 179.78753662]
[321.94653320 182.32827759]
[307.00759888 183.75660706]
[292.00369263 184.06455994]
[277.01870728 183.25039673]
[262.13647461 181.31866455]
[247.44023132 178.28019714]
[233.01214600 174.15194702]
[218.93289185 168.95703125]
[205.28123474 162.72450256]
[192.13351440 155.48919678]
[179.56326294 147.29158020]
[167.64076233 138.17752075]
[156.43270874 128.19795227]
[146.00175476 117.40872192]
[136.40626526 105.87014008]
[127.69989014 93.64675140]
[114.86624146 101.41188812]
[107.50000000 114.47858429]
[107.50000000 129.47857666]
[107.50000000 144.47857666]
[107.50000000 159.47857666]
[107.50000000 174.47857666]
[107.50000000 189.47857666]
[107.50000000 204.47857666]
[107.50000000 219.47857666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 57]
[10 56]
[11 55]
[12 54]
[14 53]
[15 52]
[16 51]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 35]
[25 34]
[26 33]
[27 32]
[59 144]
[60 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
