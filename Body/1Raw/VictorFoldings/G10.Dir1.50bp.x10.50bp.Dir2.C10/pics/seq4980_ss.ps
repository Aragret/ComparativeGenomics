%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGGUUAxxxxxxxxxxUGCCCUCCUUUUACCCCUACCAUGAGCCCUACAAACAACUAACCUGCCACUAAUAGUUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.77799988 420.91461182]
[98.77799988 405.91461182]
[98.77799988 390.91461182]
[98.77799988 375.91461182]
[98.77799988 360.91461182]
[98.77799988 345.91461182]
[98.77799988 330.91461182]
[98.77799988 315.91461182]
[98.77799988 300.91461182]
[98.77799988 285.91461182]
[83.27743530 282.27774048]
[69.07515717 275.06268311]
[56.98429489 264.67810059]
[47.69813156 251.71418762]
[41.75038528 236.90919495]
[39.48451996 221.10739136]
[41.03391266 205.21090698]
[46.31401443 190.12821960]
[55.02695465 176.72227478]
[66.67832947 165.76104736]
[80.60527039 157.87361145]
[96.01415253 153.51400757]
[95.39017487 138.52699280]
[94.76619720 123.53997040]
[93.51932526 108.59188843]
[87.74305725 94.74866486]
[78.47810364 82.95202637]
[69.21315765 71.15538788]
[59.94820786 59.35874939]
[50.68325806 47.56210709]
[35.23879242 45.53570938]
[26.01086426 33.44025803]
[28.03790474 18.72880936]
[18.77295494 6.93216896]
[9.50800610 -4.86447096]
[-4.23272324 2.14274287]
[-19.06785965 6.34803343]
[-34.43251419 7.59314203]
[-49.74198914 5.83249283]
[-64.41405487 1.13485587]
[-77.89105225 -6.31933355]
[-89.66112518 -16.24490738]
[-99.27764130 -28.26287460]
[-106.37615204 -41.91488647]
[-110.68819427 -56.68072891]
[-112.05143738 -71.99813080]
[-110.41580963 -87.28417969]
[-105.84532928 -101.95751953]
[-98.51559448 -115.46043396]
[-88.70704651 -127.28007507]
[-98.21540833 -138.88140869]
[-107.72377014 -150.48275757]
[-117.23212433 -162.08409119]
[-126.74048615 -173.68544006]
[-136.24884033 -185.28677368]
[-145.75720215 -196.88812256]
[-161.51585388 -199.89547729]
[-168.86218262 -214.15769958]
[-162.16069031 -228.73403931]
[-146.55220032 -232.44276428]
[-134.01020813 -222.43887329]
[-134.15585327 -206.39648438]
[-124.64749908 -194.79513550]
[-115.13914490 -183.19380188]
[-105.63078308 -171.59245300]
[-96.12242889 -159.99111938]
[-86.61406708 -148.38977051]
[-77.10570526 -136.78843689]
[-64.28643036 -143.78852844]
[-50.39093018 -148.30195618]
[-35.89680099 -150.17196655]
[-21.30251694 -149.33271790]
[-7.11027622 -145.81155396]
[6.19127464 -139.72813416]
[18.14386368 -131.29039001]
[28.33538628 -120.78735352]
[36.41411209 -108.57931519]
[42.10081863 -95.08545685]
[45.19845581 -80.76943207]
[45.59895325 -66.12345886]
[43.28701019 -51.65138245]
[38.34065628 -37.85135269]
[30.92864037 -25.19867134]
[21.30464554 -14.12942028]
[30.56959534 -2.33278036]
[39.83454514 9.46385956]
[54.60729218 10.98094177]
[64.17131805 22.81242943]
[62.47989655 38.29716110]
[71.74484253 50.09379959]
[81.00979614 61.89043808]
[90.27474213 73.68708038]
[99.53969574 85.48371887]
[97.80594635 70.58425140]
[99.36795807 55.66580200]
[104.15032196 41.44859695]
[111.92214966 28.61899757]
[122.30825806 17.79638672]
[134.80720520 9.50325108]
[148.81561279 4.13996220]
[163.65715027 1.96544325]
[178.61534119 3.08467531]
[192.96801758 7.44362450]
[206.02229309 14.83185291]
[217.14793396 24.89267540]
[225.80781555 37.14038467]
[231.58387756 50.98369217]
[234.19726562 65.75428009]
[233.52178955 80.73905945]
[229.59008789 95.21461487]
[222.59194946 108.48210144]
[212.86524963 119.90099335]
[200.87954712 128.92002869]
[187.21348572 135.10379028]
[172.52682495 138.15373230]
[157.52861023 137.92260742]
[142.94290161 134.42160034]
[129.47386169 127.81970978]
[117.77173615 118.43566132]
[108.40260315 106.72427368]
[111.24951172 110.19653320]
[112.65962219 114.01525879]
[112.70471954 117.67310333]
[111.61802673 120.74118042]
[109.75321960 122.91599274]
[110.37719727 137.90301514]
[111.00117493 152.89002991]
[124.90856171 155.39634705]
[137.97511292 160.76133728]
[149.62062073 168.74389648]
[159.32853699 178.98674011]
[166.66900635 191.03242493]
[171.31773376 204.34375000]
[173.07048035 218.32769775]
[171.85191345 232.36192322]
[167.71887207 245.82238770]
[160.85775757 258.11108398]
[151.57609558 268.68270874]
[140.28874207 277.06878662]
[127.49937439 282.89837646]
[113.77799988 285.91461182]
[113.77799988 300.91461182]
[113.77799988 315.91461182]
[113.77799988 330.91461182]
[113.77799988 345.91461182]
[113.77799988 360.91461182]
[113.77799988 375.91461182]
[113.77799988 390.91461182]
[113.77799988 405.91461182]
[113.77799988 420.91461182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[22 127]
[23 126]
[24 125]
[25 120]
[26 93]
[27 92]
[28 91]
[29 90]
[30 89]
[33 86]
[34 85]
[35 84]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
