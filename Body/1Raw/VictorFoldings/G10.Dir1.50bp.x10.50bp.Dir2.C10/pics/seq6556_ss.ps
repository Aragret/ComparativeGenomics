%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGUAGACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 249.28964233]
[92.50000000 234.28964233]
[92.50000000 219.28964233]
[92.50000000 204.28964233]
[92.50000000 189.28964233]
[92.50000000 174.28964233]
[92.50000000 159.28964233]
[92.50000000 144.28964233]
[92.50000000 129.28964233]
[92.50000000 114.28964233]
[87.21332550 100.25215149]
[77.31843567 88.97868347]
[67.42354584 77.70520782]
[57.52865982 66.43173218]
[47.52147675 55.25782394]
[37.40300369 44.18458939]
[23.83315277 37.79246902]
[8.85191822 37.04240417]
[-6.12931681 36.29233551]
[-21.11055183 35.54226685]
[-36.09178543 34.79220200]
[-39.78666306 47.87785721]
[-46.14828110 59.88768387]
[-54.88952255 70.28559875]
[-65.61711884 78.60813141]
[-77.84933472 84.48509216]
[-91.03762817 87.65601349]
[-104.59121704 87.98173523]
[-117.90357208 85.45046234]
[-130.37954712 80.17820740]
[-141.46195984 72.40344238]
[-150.65652466 62.47635269]
[-157.55389404 50.84302521]
[-161.84780884 38.02542496]
[-163.34878540 24.59797668]
[-178.25804138 22.95046997]
[-193.16728210 21.30296326]
[-208.07653809 19.65545654]
[-222.98577881 18.00794983]
[-237.89503479 16.36044502]
[-254.30242920 20.63053131]
[-262.94766235 6.04641962]
[-251.32673645 -6.29823589]
[-236.24752808 1.45119452]
[-221.33827209 3.09870076]
[-206.42903137 4.74620724]
[-191.51977539 6.39371347]
[-176.61053467 8.04121971]
[-161.70127869 9.68872643]
[-155.97425842 -5.77056074]
[-146.47549438 -19.25765228]
[-133.83341980 -29.87112236]
[-118.88673401 -36.89995956]
[-102.62880707 -39.87119675]
[-86.14166260 -38.58172989]
[-70.52391815 -33.11219406]
[-56.81764984 -23.82195091]
[-45.93879318 -11.32546711]
[-38.61598206 3.54831576]
[-35.34172058 19.81096649]
[-20.36048317 20.56103325]
[-5.37924910 21.31110001]
[9.60198593 22.06116867]
[24.58322144 22.81123543]
[36.43002319 13.61051655]
[39.41155624 -1.09017968]
[42.39308548 -15.79087639]
[45.37461853 -30.49157143]
[31.49067307 -36.29866409]
[19.00658226 -44.70304871]
[8.40219879 -55.38168716]
[0.08512883 -67.92411804]
[-5.62494278 -81.84824371]
[-8.50853539 -96.61885834]
[-8.45481205 -111.66822052]
[-5.46583652 -126.41787720]
[0.34350133 -140.30088806]
[8.74990654 -152.78361511]
[19.43025970 -163.38626099]
[31.97403717 -171.70130920]
[45.89908981 -177.40911865]
[60.67017365 -180.29032898]
[75.71952820 -180.23416138]
[90.46869659 -177.24279785]
[104.35076141 -171.43121338]
[116.83213043 -163.02279663]
[127.43305206 -152.34072876]
[135.74606323 -139.79560852]
[141.45162964 -125.86962891]
[144.33044434 -111.09807587]
[144.27185059 -96.04872894]
[141.27809143 -81.30004883]
[135.46426392 -67.41892242]
[127.05381775 -54.93891525]
[116.37003326 -44.33971786]
[103.82356262 -36.02873993]
[89.89666748 -30.32542992]
[75.12464905 -27.44900894]
[60.07531357 -27.51004028]
[57.09378433 -12.80934429]
[54.11225128 1.89135158]
[51.13072205 16.59204865]
[51.86791992 26.13997650]
[48.47623444 34.06611633]
[58.59470749 45.13934708]
[65.46685791 47.97156906]
[68.80213165 56.53684616]
[78.69702148 67.81031799]
[88.59191132 79.08379364]
[98.48679352 90.35726929]
[107.38227081 82.31419373]
[123.18003845 83.30110168]
[138.17929077 83.15102386]
[147.06387329 70.42923737]
[161.74029541 65.39115906]
[176.56517029 69.97402191]
[185.83802795 82.41562653]
[185.99328613 97.93193054]
[176.97122192 110.55658722]
[162.24099731 115.43515778]
[147.46672058 110.69174194]
[138.32936096 98.15027618]
[123.33011627 98.30034637]
[136.56513977 105.35967255]
[149.80017090 112.41899109]
[163.03520203 119.47830963]
[176.27023315 126.53763580]
[191.27023315 126.53297424]
[205.54040527 131.15489197]
[217.68939209 139.95274353]
[226.53263855 152.06872559]
[231.20791626 166.32150269]
[231.25938416 181.32141113]
[226.68200684 195.60594177]
[217.92210388 207.78231812]
[205.83378601 216.66333008]
[191.59565735 221.38305664]
[176.59597778 221.48133850]
[162.29724121 216.94856262]
[150.09358215 208.22669983]
[141.17489624 196.16613770]
[136.41076660 181.94281006]
[136.26553345 166.94459534]
[129.07414246 153.78085327]
[121.88276672 140.61711121]
[114.69138336 127.45337677]
[107.50000000 114.28964233]
[107.50000000 129.28964233]
[107.50000000 144.28964233]
[107.50000000 159.28964233]
[107.50000000 174.28964233]
[107.50000000 189.28964233]
[107.50000000 204.28964233]
[107.50000000 219.28964233]
[107.50000000 234.28964233]
[107.50000000 249.28964233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 110]
[12 109]
[13 108]
[14 107]
[15 105]
[16 104]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[65 102]
[66 101]
[67 100]
[68 99]
[112 123]
[113 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
