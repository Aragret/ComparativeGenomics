%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUCUCCAGCAUUCCCCCUCAAACCUAAGAAAUAUGUCUGAUAAAAGAGUUACUUUGAUAxxxxxxxxxxGACCUAACCUGACUAGAAAAGCUAUUACCUAAAACAAUUUCACAGCACCAAAUCUCCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-26.49319839 341.45037842]
[-38.24314499 334.92053223]
[-49.65687180 327.81930542]
[-60.70661926 320.16403198]
[-71.36551666 311.97329712]
[-81.11317444 323.37429810]
[-90.86082458 334.77532959]
[-100.60847473 346.17636108]
[-110.35612488 357.57736206]
[-120.10378265 368.97839355]
[-129.85142517 380.37942505]
[-139.59909058 391.78042603]
[-149.34674072 403.18145752]
[-146.59552002 418.57513428]
[-154.42761230 432.10998535]
[-169.14492798 437.39529419]
[-183.79841614 431.93548584]
[-191.46913147 418.30853271]
[-188.53521729 402.94863892]
[-176.38195801 393.10830688]
[-160.74775696 393.43380737]
[-151.00010681 382.03277588]
[-141.25245667 370.63177490]
[-131.50480652 359.23074341]
[-121.75714874 347.82971191]
[-112.00949860 336.42871094]
[-102.26184845 325.02767944]
[-92.51419067 313.62664795]
[-82.76654053 302.22564697]
[-96.34383392 289.07119751]
[-108.97670746 275.00729370]
[-120.60438538 260.10159302]
[-131.17094421 244.42581177]
[-140.62554932 228.05532837]
[-148.92272949 211.06887817]
[-156.02256775 193.54818726]
[-161.89093018 175.57751465]
[-166.49957275 157.24331665]
[-169.82632446 138.63377380]
[-171.85520935 119.83839417]
[-172.57644653 100.94759369]
[-171.98657227 82.05223083]
[-170.08842468 63.24320602]
[-166.89112854 44.61098099]
[-162.41006470 26.24518013]
[-156.66679382 8.23414612]
[-149.68894958 -9.33548832]
[-141.51007080 -26.37921143]
[-132.16950989 -42.81504059]
[-121.71220398 -58.56392288]
[-110.18843842 -73.55009460]
[-97.65366364 -87.70148468]
[-84.16815186 -100.95001984]
[-69.79678345 -113.23196411]
[-78.81430817 -125.21879578]
[-87.83184052 -137.20562744]
[-96.84937286 -149.19245911]
[-112.46929169 -152.85275269]
[-119.21595764 -167.40823364]
[-111.91391754 -181.69317627]
[-96.16466522 -184.74940491]
[-84.04967499 -174.23243713]
[-84.86254120 -158.20999146]
[-75.84500885 -146.22315979]
[-66.82747650 -134.23632812]
[-57.80994797 -122.24949646]
[-46.66090393 -129.75942993]
[-35.15517044 -136.71057129]
[-23.32073021 -143.08602905]
[-11.18636417 -148.87026978]
[1.21841645 -154.04924011]
[13.86344051 -158.61035156]
[26.71795654 -162.54249573]
[39.75069809 -165.83612061]
[52.92997360 -168.48320007]
[66.22372437 -170.47732544]
[79.59962463 -171.81361389]
[93.02513123 -172.48884583]
[106.46761322 -172.50135803]
[119.89435577 -171.85112000]
[133.27272034 -170.53973389]
[146.57015991 -168.57035828]
[159.75433350 -165.94781494]
[172.79318237 -162.67845154]
[185.65499878 -158.77024841]
[198.30850220 -154.23268127]
[210.72290039 -149.07681274]
[222.86801147 -143.31517029]
[234.71429443 -136.96176147]
[246.23295593 -130.03204346]
[257.39596558 -122.54287720]
[268.17614746 -114.51246643]
[278.54733276 -105.96034241]
[288.48428345 -96.90731049]
[297.96282959 -87.37538147]
[306.95989990 -77.38774109]
[315.45364380 -66.96868896]
[323.42340088 -56.14354706]
[330.84973145 -44.93865585]
[337.71466064 -33.38126373]
[344.00143433 -21.49947929]
[349.69476318 -9.32219696]
[354.78082275 3.12096548]
[359.24725342 15.79974461]
[363.08316040 28.68330574]
[366.27923584 41.74031448]
[368.82769775 54.93901443]
[370.72235107 68.24730682]
[371.95855713 81.63282013]
[372.53338623 95.06301117]
[372.44537354 108.50520325]
[371.69476318 121.92671204]
[370.28335571 135.29489136]
[368.21459961 148.57723999]
[365.49353027 161.74142456]
[362.12677002 174.75546265]
[358.12246704 187.58769226]
[353.49041748 200.20690918]
[348.24185181 212.58239746]
[342.38955688 224.68408203]
[335.94772339 236.48252869]
[328.93206787 247.94905090]
[321.35964966 259.05572510]
[313.24884033 269.77557373]
[304.61941528 280.08251953]
[295.49230957 289.95150757]
[285.88977051 299.35848999]
[275.83514404 308.28063965]
[265.35284424 316.69622803]
[254.46841431 324.58477783]
[243.20829773 331.92715454]
[231.59989929 338.70544434]
[219.67143250 344.90316772]
[207.45191956 350.50531006]
[194.97106934 355.49816895]
[182.25924683 359.86965942]
[169.34735107 363.60910034]
[156.26681519 366.70745850]
[143.04942322 369.15713501]
[129.72734070 370.95220947]
[116.33295441 372.08831787]
[102.89884186 372.56268311]
[89.45767975 372.37414551]
[76.04216003 371.52319336]
[62.68490982 370.01184082]
[49.41840744 367.84384155]
[36.27492523 365.02441406]
[23.28642845 361.56039429]
[10.48450470 357.46026611]
[-2.09971118 352.73397827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[54 66]
[55 65]
[56 64]
[57 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
