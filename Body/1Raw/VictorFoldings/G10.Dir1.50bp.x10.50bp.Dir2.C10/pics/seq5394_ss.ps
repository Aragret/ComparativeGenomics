%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUCAACUUAAACUCCAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAGCUAxxxxxxxxxxUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[169.14622498 208.84257507]
[160.38002014 196.67073059]
[151.61381531 184.49890137]
[142.84759521 172.32705688]
[129.13113403 166.52122498]
[127.34459686 150.80120850]
[118.57839203 138.62937927]
[109.81217957 126.45754242]
[101.04597473 114.28570557]
[88.37675476 108.37110901]
[86.78218842 94.48050690]
[78.01598358 82.30867004]
[63.67249298 75.63222504]
[62.51297760 60.78281784]
[53.74676895 48.61098099]
[41.00017929 56.52939224]
[27.74293327 63.55948257]
[14.03684139 69.66847229]
[-0.05419330 74.82788086]
[-14.46446991 79.01364899]
[-29.12680054 82.20626831]
[-43.97282410 84.39083862]
[-58.93331528 85.55718994]
[-73.93852997 85.69987488]
[-88.91849518 84.81823730]
[-103.80337524 82.91637421]
[-118.52377319 80.00316620]
[-133.01103210 76.09218597]
[-147.19764709 71.20166779]
[-161.01742554 65.35442352]
[-174.40596008 58.57771683]
[-187.30082703 50.90313339]
[-199.64189148 42.36645889]
[-211.37162781 33.00749969]
[-222.43533325 22.86989212]
[-232.78143311 12.00089741]
[-242.36167908 0.45119667]
[-251.13140869 -11.72536087]
[-259.04974365 -24.47200203]
[-266.07974243 -37.72929764]
[-272.18862915 -51.43542862]
[-277.34796143 -65.52649689]
[-281.53363037 -79.93680573]
[-284.72613525 -94.59915924]
[-286.91061401 -109.44519043]
[-288.07687378 -124.40569305]
[-288.21945190 -139.41090393]
[-287.33770752 -154.39086914]
[-285.43576050 -169.27574158]
[-282.52243042 -183.99610901]
[-278.61135864 -198.48335266]
[-273.72076416 -212.66992188]
[-267.87341309 -226.48966980]
[-261.09661865 -239.87815857]
[-253.42195129 -252.77296448]
[-244.88519287 -265.11398315]
[-235.52615356 -276.84365845]
[-225.38847351 -287.90728760]
[-214.51940918 -298.25332642]
[-202.96963501 -307.83349609]
[-190.79302979 -316.60314941]
[-178.04632568 -324.52136230]
[-164.78898621 -331.55130005]
[-151.08280945 -337.66009521]
[-136.99171448 -342.81930542]
[-122.58137512 -347.00488281]
[-107.91900635 -350.19729614]
[-93.07295227 -352.38168335]
[-78.11244202 -353.54782104]
[-63.10723114 -353.69030762]
[-48.12727356 -352.80847168]
[-33.24241638 -350.90640259]
[-18.52206421 -347.99301147]
[-4.03484774 -344.08184814]
[10.15168762 -339.19113159]
[23.97139549 -333.34368896]
[37.35984039 -326.56680298]
[50.25460052 -318.89205933]
[62.59555435 -310.35522461]
[74.32516479 -300.99609375]
[85.38873291 -290.85833740]
[95.73468781 -279.98919678]
[105.31478119 -268.43939209]
[114.08434296 -256.26269531]
[122.00250244 -243.51596069]
[129.03231812 -230.25857544]
[135.14103699 -216.55235291]
[140.30015564 -202.46121216]
[144.48564148 -188.05085754]
[147.67796326 -173.38845825]
[149.86224365 -158.54238892]
[151.02828979 -143.58187866]
[151.17066956 -128.57666016]
[150.28872681 -113.59671021]
[148.38656616 -98.71186829]
[145.47306824 -83.99153900]
[141.56179810 -69.50434113]
[136.67098999 -55.31784058]
[130.82347107 -41.49817276]
[124.04649353 -28.10977364]
[116.37165070 -15.21506405]
[107.83472443 -2.87416697]
[98.47553253 8.85537720]
[88.33769989 19.91888046]
[77.46849823 30.26475906]
[65.91860199 39.84477615]
[74.68481445 52.01661301]
[88.40128326 57.82244492]
[90.18782043 73.54245758]
[98.95402527 85.71429443]
[111.62324524 91.62889099]
[113.21781158 105.51949310]
[121.98401642 117.69132996]
[130.75022888 129.86317444]
[139.51643372 142.03500366]
[153.85992432 148.71145630]
[155.01943970 163.56085205]
[163.78564453 175.73269653]
[172.55184937 187.90452576]
[181.31805420 200.07637024]
[194.96937561 193.74879456]
[209.57154846 190.11935425]
[224.59674072 189.31925964]
[239.50178528 191.37742615]
[253.74789429 196.21945190]
[266.82003784 203.67028809]
[278.24572754 213.46061707]
[287.61187744 225.23651123]
[294.57992554 238.57228088]
[298.89797974 252.98585510]
[300.40997314 267.95617676]
[299.06121826 282.94207764]
[294.90045166 297.40182495]
[288.07812500 310.81274414]
[278.84085083 322.68997192]
[267.52252197 332.60421753]
[254.53233337 340.19708252]
[240.33984375 345.19403076]
[225.45809937 347.41448975]
[210.42509460 346.77816772]
[195.78422546 343.30804443]
[182.06477356 337.12960815]
[169.76269531 328.46618652]
[159.32267761 317.63092041]
[151.12213135 305.01556396]
[145.45751953 291.07608032]
[142.53358459 276.31643677]
[142.45605469 261.27017212]
[145.22770691 246.48117065]
[150.74835205 232.48406982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[4 117]
[6 115]
[7 114]
[8 113]
[9 112]
[11 110]
[12 109]
[14 107]
[15 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
