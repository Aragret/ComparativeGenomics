%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGUAACUACUACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUxxxxxxxxxxCUUCAUAGGCUAUGUCCUCCCGUGAGGCCAAAUAUCAUUCUGAGGGGCCACAGUAAUUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-0.38520077 141.45089722]
[-14.61197948 146.20471191]
[-25.24866676 157.91673279]
[-39.77198410 154.61180115]
[-50.40867233 166.32383728]
[-64.93199158 163.01890564]
[-79.15876770 167.77272034]
[-93.38555145 172.52653503]
[-107.61232758 177.28034973]
[-121.83911133 182.03416443]
[-136.06588745 186.78799438]
[-148.67701721 194.90953064]
[-158.89050293 205.89518738]
[-169.10397339 216.88085938]
[-179.31745911 227.86651611]
[-180.17274475 243.88676453]
[-193.31430054 253.08886719]
[-208.66105652 248.41378784]
[-214.44030762 233.44783020]
[-206.21867371 219.67160034]
[-190.30311584 217.65304565]
[-180.08964539 206.66737366]
[-169.87615967 195.68171692]
[-159.66267395 184.69604492]
[-174.09529114 188.78260803]
[-189.08398438 189.36460876]
[-203.79002380 186.40950012]
[-217.39041138 180.08264160]
[-229.12409973 170.73808289]
[-238.33442688 158.89875793]
[-244.50601196 145.22718811]
[-247.29345703 130.48846436]
[-246.54080200 115.50735474]
[-242.29016113 101.12222290]
[-234.77938843 88.13806915]
[-224.42880249 77.28148651]
[-211.81762695 69.16001892]
[-197.65159607 64.22814178]
[-182.72343445 62.76185989]
[-167.86853027 64.84321594]
[-153.91819763 70.35574341]
[-141.65307617 78.99095154]
[-131.75953674 90.26561737]
[-124.79123688 103.54878998]
[-121.13812256 118.09715271]
[-121.00462341 133.09655762]
[-124.39820099 147.70764160]
[-131.12896729 161.11274719]
[-140.81970215 172.56120300]
[-126.59292603 167.80738831]
[-112.36614227 163.05357361]
[-98.13936615 158.29975891]
[-83.91258240 153.54594421]
[-69.68580627 148.79212952]
[-60.06671524 137.42013550]
[-44.52580261 140.38502502]
[-34.90670776 129.01303101]
[-19.36579514 131.97792053]
[-5.13901567 127.22411346]
[-7.20716715 117.37780762]
[-8.35527420 107.38237000]
[-8.57348442 97.32357788]
[-7.85992527 87.28775024]
[-6.22072029 77.36102295]
[-3.66993666 67.62857819]
[-0.22946535 58.17394257]
[4.07116795 49.07825470]
[9.19505501 40.41957855]
[15.09822369 32.27221298]
[21.73001289 24.70608330]
[29.03351021 17.78611946]
[36.94603729 11.57171059]
[45.39968491 6.11618614]
[54.32191086 1.46636569]
[63.63614273 -2.33784652]
[73.26245117 -5.26380253]
[83.11820984 -7.28639269]
[93.11885071 -8.38825893]
[103.17855072 -8.55994511]
[113.21096802 -7.79997778]
[123.13001251 -6.11487865]
[132.85055542 -3.51910996]
[142.28916931 -0.03494782]
[151.36486816 4.30770683]
[159.35478210 -8.38722229]
[167.34469604 -21.08215332]
[175.33462524 -33.77708054]
[178.65431213 -50.40284348]
[195.54931641 -51.81534958]
[201.58363342 -35.97162628]
[188.02954102 -25.78716660]
[180.03962708 -13.09223652]
[172.04971313 -0.39730650]
[164.05979919 12.29762268]
[179.54095459 26.05000114]
[192.13056946 42.49066544]
[205.37315369 35.44552994]
[218.61573792 28.40039635]
[231.85832214 21.35526085]
[240.08166504 7.16693544]
[256.47811890 7.46497440]
[264.18038940 21.94278145]
[255.26506042 35.70682907]
[238.90345764 34.59784698]
[225.66087341 41.64298248]
[212.41828918 48.68811798]
[199.17570496 55.73325348]
[202.08166504 62.92307663]
[204.46717834 70.30194092]
[206.32005310 77.83221436]
[207.63087463 85.47550964]
[208.39292908 93.19286346]
[208.60235596 100.94491577]
[208.25807190 108.69215393]
[207.36184692 116.39508057]
[205.91824341 124.01441193]
[203.93460083 131.51130676]
[201.42106628 138.84753418]
[198.39044189 145.98571777]
[194.85816956 152.88943481]
[190.84226990 159.52349854]
[186.36322021 165.85408020]
[181.44384766 171.84890747]
[176.10922241 177.47741699]
[185.85688782 188.87843323]
[195.60453796 200.27946472]
[205.35218811 211.68048096]
[219.93965149 207.30720520]
[235.04391479 209.25170898]
[248.04806519 217.17710876]
[256.69906616 229.71028137]
[259.49804688 244.67976379]
[255.96011353 259.49200439]
[246.69819641 271.58071899]
[233.31698608 278.85144043]
[218.13487244 280.04446411]
[203.78224182 274.95312500]
[192.74577332 264.45950317]
[186.93760681 250.38168335]
[187.36402893 235.15873718]
[193.95115662 221.42813110]
[184.20350647 210.02711487]
[174.45585632 198.62608337]
[164.70820618 187.22506714]
[143.39939880 199.55830383]
[119.86026764 206.77516174]
[95.30049133 208.50474548]
[70.98223114 204.65817261]
[48.15522003 195.43313599]
[27.99255371 181.30371094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[4 56]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[11 49]
[12 24]
[13 23]
[14 22]
[15 21]
[84 94]
[85 93]
[86 92]
[87 91]
[96 107]
[97 106]
[98 105]
[99 104]
[124 144]
[125 143]
[126 142]
[127 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
