%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACAUACAAAACCCACCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACUCCUACCxxxxxxxxxxACUCUUUUAGUAUAAAUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 285.14791870]
[92.50000000 270.14791870]
[92.50000000 255.14791870]
[92.50000000 240.14791870]
[92.50000000 225.14791870]
[92.50000000 210.14791870]
[92.50000000 195.14791870]
[92.50000000 180.14791870]
[92.50000000 165.14791870]
[92.50000000 150.14791870]
[74.17842865 143.63839722]
[59.65370941 130.71221924]
[51.06158066 113.27005768]
[49.66543961 93.87664795]
[55.67057800 75.38362122]
[68.19399261 60.51023483]
[85.39421844 51.44348907]
[83.24564362 36.59816742]
[81.09706116 21.75284386]
[78.94848633 6.90752029]
[76.79990387 -7.93780231]
[74.65132904 -22.78312492]
[59.69796371 -21.54304504]
[44.69681168 -21.21689034]
[29.70368385 -21.80587387]
[14.77434731 -23.30780602]
[-0.03565469 -25.71709824]
[-14.67122936 -29.02478981]
[-29.07793045 -33.21857452]
[-43.20216370 -38.28284836]
[-56.99138641 -44.19877625]
[-70.39430237 -50.94434738]
[-83.36104584 -58.49447250]
[-95.84338379 -66.82106018]
[-107.79488373 -75.89312744]
[-119.17108154 -85.67694092]
[-129.92965698 -96.13609314]
[-140.03059387 -107.23168182]
[-149.43629456 -118.92242432]
[-158.11180115 -131.16484070]
[-166.02481079 -143.91337585]
[-173.14590454 -157.12060547]
[-179.44857788 -170.73739624]
[-184.90939331 -184.71310425]
[-189.50804138 -198.99572754]
[-193.22740173 -213.53213501]
[-196.05364990 -228.26824951]
[-197.97625732 -243.14926147]
[-198.98809814 -258.11981201]
[-199.08537292 -273.12417603]
[-198.26774597 -288.10656738]
[-196.53823853 -303.01126099]
[-193.90330505 -317.78277588]
[-190.37274170 -332.36621094]
[-185.95967102 -346.70724487]
[-180.68052673 -360.75259399]
[-174.55493164 -374.44995117]
[-167.60569763 -387.74841309]
[-159.85864258 -400.59848022]
[-151.34262085 -412.95236206]
[-142.08927917 -424.76406860]
[-132.13307190 -435.98968506]
[-121.51100922 -446.58746338]
[-110.26262665 -456.51794434]
[-98.42976379 -465.74423218]
[-86.05643463 -474.23196411]
[-73.18867493 -481.94958496]
[-59.87435532 -488.86837769]
[-46.16299820 -494.96261597]
[-32.10561752 -500.20959473]
[-17.75450516 -504.58981323]
[-3.16304970 -508.08700562]
[11.61446762 -510.68814087]
[26.52307320 -512.38348389]
[41.50730515 -513.16687012]
[56.51142502 -513.03521729]
[71.47960663 -511.98913574]
[86.35617828 -510.03247070]
[101.08579254 -507.17251587]
[115.61364746 -503.41989136]
[129.88571167 -498.78857422]
[143.84887695 -493.29577637]
[157.45121765 -486.96194458]
[170.64212036 -479.81066895]
[183.37249756 -471.86849976]
[195.59501648 -463.16500854]
[207.26420593 -453.73254395]
[218.33665466 -443.60626221]
[228.77114868 -432.82376099]
[238.52890015 -421.42520142]
[247.57360840 -409.45297241]
[255.87159729 -396.95162964]
[263.39202881 -383.96762085]
[270.10690308 -370.54931641]
[275.99127197 -356.74658203]
[281.02319336 -342.61077881]
[285.18399048 -328.19451904]
[288.45819092 -313.55142212]
[290.83355713 -298.73596191]
[292.30133057 -283.80322266]
[292.85598755 -268.80877686]
[292.49551392 -253.80841064]
[291.22122192 -238.85792542]
[289.03784180 -224.01293945]
[285.95352173 -209.32865906]
[281.97970581 -194.85974121]
[277.13122559 -180.65998840]
[271.42605591 -166.78224182]
[264.88546753 -153.27810669]
[257.53378296 -140.19783020]
[249.39834595 -127.59008026]
[240.50941467 -115.50174713]
[230.90005493 -103.97780609]
[220.60603333 -93.06113434]
[209.66561890 -82.79232788]
[198.11953735 -73.20959473]
[186.01072693 -64.34857941]
[173.38423157 -56.24225235]
[160.28703308 -48.92076874]
[146.76783752 -42.41136169]
[132.87695312 -36.73825073]
[118.66605377 -31.92253494]
[104.18799591 -27.98213387]
[89.49665070 -24.93170357]
[91.64522552 -10.08638191]
[93.79380798 4.75894117]
[95.94238281 19.60426331]
[98.09096527 34.44958496]
[100.23954010 49.29491043]
[110.97550201 50.49644470]
[121.21327209 53.94502640]
[130.48812866 59.48411179]
[138.37908936 66.86227417]
[144.52796936 75.74461365]
[148.65563965 85.72794342]
[150.57476807 96.35910034]
[150.19822693 107.15552521]
[147.54310608 117.62714386]
[142.72993469 127.29864502]
[135.97718811 135.73101807]
[127.59137726 142.54150391]
[117.95314789 147.42095947]
[107.50000000 150.14791870]
[107.50000000 165.14791870]
[107.50000000 180.14791870]
[107.50000000 195.14791870]
[107.50000000 210.14791870]
[107.50000000 225.14791870]
[107.50000000 240.14791870]
[107.50000000 255.14791870]
[107.50000000 270.14791870]
[107.50000000 285.14791870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
