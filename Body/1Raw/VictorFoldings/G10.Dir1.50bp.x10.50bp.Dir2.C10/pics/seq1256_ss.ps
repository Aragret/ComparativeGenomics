%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAAAAUAGACUACGAAAGxxxxxxxxxxUUUCCAAGGACAAAUCAGAGAAAAAGUCUUUAACUCCACCAUUAGCACCCAAAGCUAAGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[157.46778870 337.63034058]
[157.46778870 322.63034058]
[157.46778870 307.63034058]
[157.46778870 292.63034058]
[157.46778870 277.63034058]
[157.46778870 262.63034058]
[157.46778870 247.63034058]
[157.46778870 232.63034058]
[157.46778870 217.63034058]
[157.46778870 202.63034058]
[153.01097107 188.30773926]
[144.49987793 175.95616150]
[135.98878479 163.60459900]
[127.47769928 151.25302124]
[118.83858490 138.99064636]
[110.07237244 126.81881714]
[95.34841919 128.26773071]
[81.86511993 122.17719269]
[73.21868134 110.17164612]
[71.71523285 95.45316315]
[77.75579071 81.94739532]
[68.98957825 69.77555847]
[60.22337341 57.60371780]
[55.34168625 55.41540527]
[52.14675522 51.90188980]
[50.86144638 47.94592285]
[51.31813812 44.38798523]
[43.32822418 31.69305801]
[35.33830643 18.99812698]
[21.43919182 11.44000530]
[21.20816803 -3.45280838]
[13.21825314 -16.14773750]
[5.22833633 -28.84266853]
[-2.76157975 -41.53759766]
[-16.27194405 -34.98524857]
[-30.42112923 -29.95894814]
[-45.03738022 -26.51970863]
[-59.94327164 -24.70928001]
[-74.95785522 -24.54964066]
[-89.89886475 -26.04272842]
[-104.58493805 -29.17041588]
[-118.83779907 -33.89474106]
[-132.48442078 -40.15834808]
[-145.35916138 -47.88520432]
[-157.30572510 -56.98151779]
[-168.17909241 -67.33686066]
[-177.84725952 -78.82553864]
[-186.19287109 -91.30808258]
[-193.11463928 -104.63295746]
[-198.52850342 -118.63842773]
[-202.36877441 -133.15446472]
[-204.58882141 -148.00488281]
[-205.16171265 -163.00938416]
[-204.08045959 -177.98582458]
[-201.35821533 -192.75242615]
[-197.02801514 -207.12992859]
[-191.14242554 -220.94380188]
[-183.77288818 -234.02635193]
[-175.00886536 -246.21878052]
[-164.95675659 -257.37307739]
[-153.73855591 -267.35382080]
[-141.49047852 -276.03988647]
[-128.36117554 -283.32580566]
[-114.51004028 -289.12313843]
[-100.10520935 -293.36154175]
[-85.32153320 -295.98953247]
[-70.33849335 -296.97518921]
[-55.33795166 -296.30661011]
[-40.50201035 -293.99188232]
[-26.01076317 -290.05908203]
[-12.04011631 -284.55596924]
[1.24033487 -277.54934692]
[13.66938019 -269.12426758]
[25.09614182 -259.38299561]
[35.38190842 -248.44378662]
[44.40182114 -236.43943787]
[52.04639053 -223.51567078]
[58.22280884 -209.82936096]
[62.85610962 -195.54664612]
[65.89004517 -180.84092712]
[67.28778076 -165.89068604]
[67.03235626 -150.87742615]
[65.12687683 -135.98339844]
[61.59445953 -121.38938141]
[56.47799683 -107.27254486]
[49.83959198 -93.80426025]
[41.75982666 -81.14801025]
[32.33678818 -69.45743561]
[21.68486214 -58.87444687]
[9.93334961 -49.52751160]
[17.92326546 -36.83258438]
[25.91318321 -24.13765335]
[33.90309906 -11.44272423]
[47.23072052 -4.79262877]
[48.03323746 11.00821114]
[56.02315140 23.70314026]
[64.01306915 36.39807129]
[72.39521027 48.83750916]
[81.16141510 61.00934601]
[89.92762756 73.18118286]
[104.65158081 71.73226929]
[118.13488007 77.82280731]
[126.78131866 89.82835388]
[128.28475952 104.54683685]
[122.24420929 118.05260468]
[131.01042175 130.22444153]
[138.61593628 135.40206909]
[139.82926941 142.74192810]
[148.34036255 155.09350586]
[156.85145569 167.44506836]
[165.36253357 179.79664612]
[164.71263123 164.81072998]
[167.03581238 149.99172974]
[172.24053955 135.92366028]
[180.12170410 123.16092682]
[190.36869812 112.20651245]
[202.57769775 103.49213409]
[216.26753235 97.36122131]
[230.89871216 94.05538177]
[245.89462280 93.70491028]
[260.66427612 96.32361603]
[274.62557983 101.80828857]
[287.22836304 109.94279480]
[297.97592163 120.40653229]
[306.44470215 132.78715515]
[312.30096436 146.59672546]
[315.31390381 161.29101562]
[315.36480713 176.29092407]
[312.45162964 191.00531006]
[306.68917847 204.85429382]
[298.30459595 217.29208374]
[287.62826538 227.82850647]
[275.08099365 236.04833984]
[261.15719604 241.62760925]
[246.40567017 244.34646606]
[231.40773010 244.09774780]
[216.75445557 240.89125061]
[203.02333069 234.85336304]
[190.75549316 226.22201538]
[180.43440247 215.33738708]
[172.46778870 202.63034058]
[172.46778870 217.63034058]
[172.46778870 232.63034058]
[172.46778870 247.63034058]
[172.46778870 262.63034058]
[172.46778870 277.63034058]
[172.46778870 292.63034058]
[172.46778870 307.63034058]
[172.46778870 322.63034058]
[172.46778870 337.63034058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 111]
[12 110]
[13 109]
[14 108]
[15 106]
[16 105]
[21 100]
[22 99]
[23 98]
[27 97]
[28 96]
[29 95]
[31 93]
[32 92]
[33 91]
[34 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
