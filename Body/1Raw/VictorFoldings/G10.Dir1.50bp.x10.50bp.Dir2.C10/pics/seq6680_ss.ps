%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCGUCCUAAUCACAGCAGUCCUACUUCUCCUAUCUCUCCCAGUCCUAGCUGCUGGCAUxxxxxxxxxxAUCGGAGGACAACCAGUAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.44031525 284.28671265]
[93.44031525 269.28671265]
[93.44031525 254.28669739]
[93.44031525 239.28669739]
[93.44031525 224.28669739]
[93.44031525 209.28669739]
[93.44031525 194.28669739]
[93.44031525 179.28669739]
[93.44031525 164.28669739]
[93.44031525 149.28669739]
[72.20613098 117.12021637]
[85.29603577 94.89243317]
[71.90975189 88.12431335]
[58.52346802 81.35620117]
[45.13718414 74.58808899]
[32.97317505 88.41394043]
[17.50175667 98.38001251]
[-0.09412426 103.73190308]
[-18.47116470 104.06771088]
[-36.22825241 99.36821747]
[-52.01327896 89.99787140]
[-64.62611389 76.67652893]
[-73.10984039 60.42414093]
[-76.82334900 42.48269653]
[-75.48979187 24.22127342]
[-89.71656799 19.46745872]
[-103.94335175 14.71364403]
[-118.17012787 9.95982933]
[-132.39691162 5.20601463]
[-146.62368774 0.45219970]
[-160.85046387 -4.30161524]
[-174.44903564 5.70493746]
[-191.16667175 5.65892315]
[-204.44395447 -4.22439098]
[-209.18858337 -19.90857697]
[-223.51118469 -24.36539268]
[-237.83378601 -28.82220840]
[-247.25112915 -16.91935730]
[-260.33435059 -9.22558880]
[-275.31402588 -6.78142405]
[-290.16427612 -9.91741657]
[-302.87673950 -18.20944786]
[-311.73214722 -30.53609085]
[-315.53286743 -45.23026657]
[-313.76492310 -60.30470657]
[-306.66738892 -73.72071838]
[-295.20016479 -83.66390228]
[-280.91406250 -88.78951263]
[-265.74118042 -88.40436554]
[-251.73355103 -82.56053925]
[-240.78555298 -72.04836273]
[-234.37782288 -58.28953171]
[-233.37696838 -43.14480591]
[-219.05436707 -38.68799210]
[-204.73176575 -34.23117447]
[-194.78494263 -43.18977356]
[-181.60116577 -46.07066345]
[-168.61711121 -42.01294327]
[-159.27200317 -31.97890663]
[-156.09664917 -18.52839470]
[-141.86987305 -13.77457905]
[-127.64308929 -9.02076435]
[-113.41631317 -4.26694965]
[-99.18953705 0.48686510]
[-84.96275330 5.24067974]
[-70.73597717 9.99449444]
[-64.77191925 -0.33040079]
[-57.05221939 -9.42360210]
[-47.82528687 -16.99001503]
[-37.38849258 -22.78371429]
[-26.07856560 -26.61594582]
[-14.26073170 -28.36126137]
[-2.31692529 -27.96163559]
[9.36655998 -25.42839050]
[20.41156197 -20.84188271]
[30.46029282 -14.34894753]
[39.18692017 -6.15821218]
[46.30815125 3.46662021]
[51.59240723 14.21525288]
[54.86736679 25.74080276]
[56.02558517 37.67098999]
[55.02800751 49.62017441]
[51.90530014 61.20180130]
[65.29158783 67.96991730]
[78.67787170 74.73802948]
[92.06415558 81.50614929]
[106.63685608 77.95138550]
[115.40306091 65.77954865]
[116.51011658 49.41780853]
[131.35047913 42.43958282]
[144.65766907 52.02347183]
[142.74237061 68.31039429]
[127.57489777 74.54575348]
[118.80869293 86.71759033]
[121.98226166 93.51306915]
[132.94677734 83.27689362]
[146.07009888 90.54177856]
[143.21591187 105.26773071]
[128.32939148 107.10401917]
[131.50294495 113.89949036]
[146.46319580 114.99080658]
[161.42344666 116.08211517]
[176.38369751 117.17342377]
[191.34394836 118.26473236]
[196.15548706 115.92620087]
[200.90043640 115.73170471]
[204.75885010 117.28548431]
[207.19387817 119.91951752]
[222.05693054 121.94184875]
[234.55723572 112.64776611]
[249.60166931 114.91042328]
[258.38513184 126.88483429]
[273.24816895 128.90716553]
[288.11123657 130.92950439]
[303.07595825 124.22213745]
[316.20675659 134.04629517]
[313.99578857 150.29571533]
[298.71749878 156.25439453]
[286.08889771 145.79255676]
[271.22583008 143.77021790]
[256.36279297 141.74787903]
[244.69929504 150.94018555]
[229.59724426 149.10098267]
[220.03459167 136.80490112]
[205.17155457 134.78256226]
[190.25263977 133.22499084]
[175.29238892 132.13366699]
[160.33213806 131.04235840]
[145.37188721 129.95104980]
[130.41163635 128.85974121]
[124.91880798 133.96647644]
[137.52445984 142.09652710]
[152.26698303 144.86381531]
[161.33941650 156.80914307]
[160.04879761 171.75352478]
[149.06275940 181.96659851]
[134.06407166 182.16540527]
[122.81118774 172.24711609]
[121.12452698 157.34370422]
[113.93314362 144.17996216]
[108.44031525 149.28669739]
[108.44031525 164.28669739]
[108.44031525 179.28669739]
[108.44031525 194.28669739]
[108.44031525 209.28669739]
[108.44031525 224.28669739]
[108.44031525 239.28669739]
[108.44031525 254.28669739]
[108.44031525 269.28671265]
[108.44031525 284.28671265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 86]
[13 85]
[14 84]
[15 83]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[30 61]
[31 60]
[35 55]
[36 54]
[37 53]
[87 94]
[88 93]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[108 125]
[109 124]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
