%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUUAUCAAUxxxxxxxxxxAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[112.86067200 240.96246338]
[112.54861450 225.96571350]
[112.23655701 210.96896362]
[111.92450714 195.97219849]
[111.61244965 180.97544861]
[111.30039215 165.97869873]
[110.98833466 150.98194885]
[110.67627716 135.98518372]
[110.36421967 120.98843384]
[96.23941803 115.93968201]
[86.49176788 127.34069824]
[76.74411774 138.74171448]
[66.99646759 150.14274597]
[57.24881363 161.54376221]
[47.50115967 172.94477844]
[41.80383301 188.91278076]
[24.88269806 187.85848999]
[21.21155167 171.30677795]
[36.10013962 163.19712830]
[45.84778976 151.79611206]
[55.59544373 140.39509583]
[65.34309387 128.99406433]
[75.09074402 117.59304810]
[84.83840179 106.19202423]
[81.04344177 99.72299957]
[73.45353699 86.78494263]
[69.65858459 80.31591797]
[54.95062256 83.26139832]
[40.24266052 86.20687866]
[32.89823532 100.01243591]
[18.37875938 105.81923676]
[3.53988981 100.88548279]
[-4.61191607 87.54074097]
[-2.22762442 72.08599854]
[9.56697559 61.81850052]
[25.20283318 61.58625793]
[37.29717636 71.49891663]
[52.00513840 68.55343628]
[66.71309662 65.60795593]
[78.11412048 55.86030197]
[83.30953979 41.78878403]
[88.50495148 27.71726227]
[93.70037079 13.64574337]
[80.05537415 7.39822340]
[66.92195129 0.13663648]
[54.37533188 -8.09742355]
[42.48738480 -17.25679207]
[31.32619667 -27.28900337]
[20.95570183 -38.13659286]
[11.43530273 -49.73743057]
[2.81953216 -62.02506256]
[-4.84225941 -74.92910767]
[-11.50618553 -88.37564850]
[-17.13407516 -102.28766632]
[-21.69369316 -116.58547211]
[-25.15891838 -131.18716431]
[-27.50990677 -146.00912476]
[-28.73319054 -160.96643066]
[-28.82176018 -175.97340393]
[-27.77511024 -190.94410706]
[-25.59923744 -205.79278564]
[-22.30660248 -220.43435669]
[-17.91606712 -234.78498840]
[-12.45277977 -248.76246643]
[-5.94803381 -262.28674316]
[1.56091154 -275.28030396]
[10.03104496 -287.66879272]
[19.41385078 -299.38119507]
[29.65558243 -310.35043335]
[40.69757843 -320.51367188]
[52.47658920 -329.81274414]
[64.92514038 -338.19430542]
[77.97193909 -345.61041260]
[91.54223633 -352.01855469]
[105.55831909 -357.38201904]
[119.93988800 -361.67013550]
[134.60458374 -364.85827637]
[149.46838379 -366.92822266]
[164.44616699 -367.86807251]
[179.45213318 -367.67251587]
[194.40034485 -366.34259033]
[209.20515442 -363.88598633]
[223.78176880 -360.31671143]
[238.04669189 -355.65527344]
[251.91822815 -349.92831421]
[265.31692505 -343.16867065]
[278.16598511 -335.41506958]
[290.39187622 -326.71188354]
[301.92453003 -317.10900879]
[312.69790649 -306.66143799]
[322.65026855 -295.42898560]
[331.72463989 -283.47604370]
[339.86901855 -270.87100220]
[347.03677368 -257.68615723]
[353.18682861 -243.99694824]
[358.28396606 -229.88183594]
[362.29901123 -215.42166138]
[365.20892334 -200.69923401]
[366.99707031 -185.79890442]
[367.65319824 -170.80599976]
[367.17355347 -155.80642700]
[365.56085205 -140.88607788]
[362.82437134 -126.13043976]
[358.97976685 -111.62401581]
[354.04907227 -97.44989777]
[348.06051636 -83.68927765]
[341.04840088 -70.42098236]
[333.05288696 -57.72100830]
[324.11981201 -45.66209793]
[314.30029297 -34.31332779]
[303.65060425 -23.73969841]
[292.23175049 -14.00178051]
[280.10913086 -5.15535116]
[267.35217285 2.74891782]
[254.03396606 9.66575050]
[240.23077393 15.55552864]
[226.02168274 20.38451385]
[211.48808289 24.12504768]
[196.71319580 26.75570488]
[181.78167725 28.26141357]
[166.77905273 28.63355255]
[151.79124451 27.86998940]
[136.90411377 25.97509575]
[122.20291901 22.95973015]
[107.77188873 18.84115982]
[102.57646942 32.91267776]
[97.38105774 46.98419952]
[92.18563843 61.05571747]
[100.17770386 48.36213684]
[111.99474335 39.12321854]
[126.24155426 34.42978287]
[141.23605347 34.83596420]
[155.20787048 40.29380798]
[166.50741577 50.15892029]
[173.80055237 63.26655960]
[176.22621155 78.06912994]
[173.49800110 92.81893921]
[165.93803406 105.77451324]
[154.43888855 115.40621948]
[140.35826111 120.57687378]
[125.36097717 120.67637634]
[125.67303467 135.67312622]
[125.98509216 150.66989136]
[126.29714203 165.66664124]
[126.60919952 180.66339111]
[126.92125702 195.66014099]
[127.23331451 210.65690613]
[127.54537201 225.65365601]
[127.85742950 240.65040588]
[130.44842529 259.85812378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[27 39]
[28 38]
[29 37]
[40 128]
[41 127]
[42 126]
[43 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
