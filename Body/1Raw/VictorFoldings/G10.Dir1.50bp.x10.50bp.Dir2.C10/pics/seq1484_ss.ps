%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCUUAAAACUCAAAGGACCUGGCGGUGCUUCAUAUCCCUCUAGAGGAGCCUGUUCUGUAAxxxxxxxxxxCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[68.55170441 288.60510254]
[68.55170441 273.60510254]
[68.55170441 258.60510254]
[68.55170441 243.60510254]
[68.55170441 228.60510254]
[68.55170441 213.60510254]
[68.55170441 198.60510254]
[68.55170441 183.60510254]
[68.55170441 168.60510254]
[68.55170441 153.60510254]
[87.38594818 95.36204529]
[72.58824921 89.76393890]
[70.33443451 75.04084015]
[60.69261932 63.55017471]
[51.05080414 52.05950928]
[41.40899277 40.56884003]
[31.76717758 29.07817459]
[21.89146996 17.78789520]
[11.78603554 6.70276117]
[1.68060124 -4.38237238]
[-2.48179579 8.58251572]
[-13.81915092 18.43017960]
[-29.99456406 21.26342392]
[-46.64323044 14.88272285]
[-61.22697830 18.39188957]
[-75.81072998 21.90105820]
[-87.41784668 32.65212250]
[-101.60203552 28.10700607]
[-116.18578339 31.61617470]
[-130.76953125 35.12533951]
[-142.28012085 46.80602264]
[-158.08091736 42.41659546]
[-161.91740417 26.47252464]
[-149.84294128 15.37570381]
[-134.27870178 20.54159164]
[-119.69495392 17.03242493]
[-105.11119843 13.52325726]
[-94.54721069 3.02319241]
[-79.31989288 7.31730795]
[-64.73614502 3.80814099]
[-50.15239716 0.29897368]
[-48.92593002 -7.10006571]
[-63.72397232 -9.55322266]
[-61.27058792 -24.35122490]
[-46.47300339 -21.89814568]
[-45.24654007 -29.29718399]
[-57.91805649 -37.32418060]
[-70.58956909 -45.35117722]
[-85.43543243 -40.43850327]
[-99.94664764 -46.26591873]
[-107.27145386 -60.08189011]
[-103.95131683 -75.36294556]
[-91.55388641 -84.89383698]
[-75.93286896 -84.17436218]
[-64.46401215 -73.54424286]
[-62.56257629 -58.02269363]
[-49.89105988 -49.99569702]
[-37.21954346 -41.96870041]
[-18.91754723 -39.84476089]
[-7.19113684 -29.55853653]
[-6.26772356 -44.53008652]
[-5.34430981 -59.50163651]
[-4.42089605 -74.47319031]
[-3.49748254 -89.44474030]
[-2.57406902 -104.41629028]
[-1.65065539 -119.38784027]
[-0.72724181 -134.35939026]
[-14.98953342 -139.30809021]
[-27.38714027 -147.92213440]
[-37.00007629 -159.56233215]
[-43.11499786 -173.36488342]
[-45.27813721 -188.30554199]
[-43.32897949 -203.27561951]
[-37.41215897 -217.16424561]
[-27.96674538 -228.94078064]
[-15.69365120 -237.73132324]
[-1.50362206 -242.88357544]
[13.55034828 -244.01518250]
[28.35115623 -241.04219055]
[41.80047989 -234.18521118]
[52.90029526 -223.95306396]
[60.82691956 -211.10507202]
[64.99214172 -196.59460449]
[65.08688354 -181.49845886]
[61.10410309 -166.93685913]
[53.33935928 -153.99038696]
[42.36883926 -143.61973572]
[29.00663567 -136.59449768]
[14.24430847 -133.43597412]
[13.32089424 -118.46442413]
[12.39748096 -103.49287415]
[11.47406769 -88.52132416]
[10.55065346 -73.54977417]
[9.62724018 -58.57822418]
[8.70382690 -43.60667419]
[7.78041315 -28.63512421]
[12.76573467 -14.48780727]
[22.87117004 -3.40267348]
[32.97660446 7.68246031]
[37.67963791 8.79182243]
[41.71299744 12.90520096]
[43.25784302 19.43636131]
[52.89965820 30.92702866]
[62.54147339 42.41769409]
[72.18328857 53.90835953]
[81.82510376 65.39902496]
[95.93315125 70.17523956]
[98.87660980 85.72023010]
[112.69019318 91.56701660]
[127.65147400 90.48994446]
[142.61276245 89.41287994]
[157.97685242 82.24481964]
[169.11798096 95.02416229]
[159.92222595 109.26757050]
[143.68981934 104.37416077]
[128.72854614 105.45122528]
[113.76726532 106.52829742]
[112.07686615 121.43274689]
[126.41693115 125.83304596]
[141.20652771 119.61634827]
[155.21849060 127.42942810]
[157.70405579 143.27876282]
[146.75648499 155.00610352]
[130.77384949 153.61523438]
[122.01663208 140.17311096]
[107.67656708 135.77281189]
[101.64535522 140.23088074]
[112.12032318 150.96749878]
[122.59529114 161.70411682]
[133.07026672 172.44073486]
[143.54524231 183.17735291]
[156.91441345 189.97920227]
[163.05850220 203.66314697]
[159.25865173 218.17387390]
[147.19636536 227.09020996]
[132.20933533 226.46658325]
[120.92950439 216.57894897]
[118.34844971 201.80198669]
[111.15706635 188.63824463]
[103.96568298 175.47450256]
[96.77429962 162.31077576]
[89.58291626 149.14703369]
[83.55170441 153.60510254]
[83.55170441 168.60510254]
[83.55170441 183.60510254]
[83.55170441 198.60510254]
[83.55170441 213.60510254]
[83.55170441 228.60510254]
[83.55170441 243.60510254]
[83.55170441 258.60510254]
[83.55170441 273.60510254]
[83.55170441 288.60510254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 108]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[18 99]
[19 98]
[20 97]
[24 41]
[25 40]
[26 39]
[28 37]
[29 36]
[30 35]
[46 58]
[47 57]
[48 56]
[60 96]
[61 95]
[62 94]
[63 93]
[64 92]
[65 91]
[66 90]
[67 89]
[109 117]
[110 116]
[111 115]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
