%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAxxxxxxxxxxGAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[243.74790955 455.18325806]
[243.13209534 440.19589233]
[242.51626587 425.20855713]
[241.90043640 410.22119141]
[241.28460693 395.23385620]
[240.66879272 380.24649048]
[240.05296326 365.25912476]
[239.43713379 350.27178955]
[235.92796326 335.68801880]
[229.65856934 322.06106567]
[223.38916016 308.43408203]
[217.11975098 294.80709839]
[200.27761841 295.01708984]
[184.97497559 287.84844971]
[174.28652954 274.68853760]
[170.38294983 258.13381958]
[174.09004211 241.47756958]
[184.71472168 228.05471802]
[177.89114380 214.69662476]
[160.93809509 205.47213745]
[162.11410522 185.38868713]
[154.74786377 172.32199097]
[147.38162231 159.25529480]
[140.01538086 146.18859863]
[132.64913940 133.12190247]
[125.28290558 120.05521393]
[117.91666412 106.98851776]
[100.51584625 117.38587189]
[85.86841583 106.50206757]
[70.90713501 105.42500305]
[55.94585419 104.34793091]
[40.98457336 103.27085876]
[26.02329254 102.19379425]
[11.04305267 101.42413330]
[-3.94983363 100.96220398]
[-14.22995663 112.74579620]
[-29.68724823 115.11353302]
[-43.02324677 106.94743347]
[-47.94110107 92.10328674]
[-42.11875534 77.59004211]
[-28.30533791 70.26041412]
[-13.02312374 73.57521820]
[-3.48790765 85.96932220]
[11.50497818 86.43124390]
[15.57534409 83.82714844]
[21.33614731 83.79501343]
[27.10036278 87.23251343]
[42.06164551 88.30957794]
[57.02292633 89.38665009]
[71.98420715 90.46372223]
[86.94548798 91.54078674]
[97.31241608 82.81536865]
[112.17549896 85.11364746]
[112.17549896 70.11364746]
[112.17549896 55.11365128]
[112.17549896 40.11365128]
[97.31449127 37.87577438]
[82.95304108 33.44787979]
[69.41197968 26.92888451]
[56.99382019 18.46442604]
[45.97599411 8.24360371]
[36.60464478 -3.50524545]
[29.08912849 -16.51964760]
[23.59734535 -30.50885773]
[20.25198364 -45.16034698]
[19.12777901 -60.14680481]
[20.24984932 -75.13341522]
[23.59312439 -89.78538513]
[29.08291435 -103.77537537]
[36.59657669 -116.79084778]
[45.96625519 -128.54103088]
[56.98262405 -138.76342773]
[69.39957428 -147.22964478]
[82.93970490 -153.75057983]
[97.30052948 -158.18051147]
[112.16122437 -160.42050171]
[127.18978119 -160.42050171]
[142.05047607 -158.18051147]
[156.41130066 -153.75057983]
[169.95143127 -147.22964478]
[182.36837769 -138.76342773]
[193.38475037 -128.54103088]
[202.75442505 -116.79084778]
[210.26808167 -103.77537537]
[215.75787354 -89.78538513]
[219.10115051 -75.13341522]
[220.22322083 -60.14680481]
[219.09901428 -45.16034698]
[215.75366211 -30.50885773]
[210.26187134 -16.51964760]
[202.74635315 -3.50524545]
[193.37501526 8.24360371]
[182.35717773 18.46442604]
[169.93902588 26.92888451]
[156.39796448 33.44787979]
[142.03651428 37.87577438]
[127.17549896 40.11365128]
[127.17549896 55.11365128]
[127.17549896 70.11364746]
[127.17549896 85.11364746]
[130.98336792 99.62227631]
[138.34959412 112.68897247]
[145.71583557 125.75566864]
[153.08207703 138.82235718]
[160.44831848 151.88905334]
[167.81455994 164.95574951]
[175.18080139 178.02244568]
[185.88362122 180.35763550]
[193.35575867 188.06420898]
[195.27841187 198.40081787]
[191.24925232 207.87304688]
[198.07281494 221.23114014]
[211.29325867 219.97619629]
[224.11752319 223.29930115]
[235.01200867 230.78044128]
[242.68153381 241.50375366]
[246.22344971 254.16954041]
[245.23370361 267.25183105]
[239.85290527 279.18215942]
[230.74673462 288.53768921]
[237.01614380 302.16467285]
[243.28553772 315.79165649]
[249.55494690 329.41864014]
[251.27908325 314.51803589]
[257.24319458 300.75469971]
[266.93643188 289.30740356]
[279.52862549 281.15655518]
[293.94131470 277.00024414]
[308.94006348 277.19445801]
[323.24026489 281.72259521]
[335.61718750 290.19677734]
[345.01074219 301.89126587]
[350.61645508 315.80444336]
[351.95416260 330.74465942]
[348.90930176 345.43237305]
[341.74267578 358.60961914]
[331.06808472 369.14776611]
[317.79977417 376.14431763]
[303.07409668 379.00000000]
[288.15231323 377.47021484]
[274.31240845 371.68603516]
[262.73971558 362.14282227]
[254.42448425 349.65594482]
[255.04031372 364.64331055]
[255.65614319 379.63067627]
[256.27197266 394.61801147]
[256.88778687 409.60537720]
[257.50363159 424.59271240]
[258.11944580 439.58007812]
[258.73526001 454.56744385]
[265.42678833 470.14498901]
[252.31040955 480.88726807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 123]
[10 122]
[11 121]
[12 120]
[18 112]
[19 111]
[21 107]
[22 106]
[23 105]
[24 104]
[25 103]
[26 102]
[27 101]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 44]
[35 43]
[53 100]
[54 99]
[55 98]
[56 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
