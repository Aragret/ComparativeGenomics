%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUCCAAUGCUAAAACUAAUCGUCCCAACAAUUAUAUUACUACCACUGACAUGACUUUCxxxxxxxxxxCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCAAAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[172.34132385 374.50570679]
[172.03334045 359.50888062]
[171.72535706 344.51205444]
[171.41738892 329.51519775]
[171.10940552 314.51837158]
[170.80142212 299.52151489]
[170.49345398 284.52468872]
[170.18547058 269.52786255]
[169.87750244 254.53100586]
[181.35659790 221.87826538]
[171.25117493 210.79313660]
[161.14573669 199.70800781]
[157.50988770 214.26068115]
[143.95399475 220.68234253]
[130.39018250 214.27745056]
[126.73635101 199.72926331]
[135.66421509 187.67549133]
[150.64509583 186.92967224]
[141.72894287 174.86723328]
[132.81278992 162.80480957]
[123.89664459 150.74237061]
[114.98049164 138.67994690]
[106.06434631 126.61751556]
[97.14819336 114.55508423]
[83.65280914 108.00720978]
[68.65991974 108.46913910]
[57.86757660 119.70137024]
[42.65607834 119.95624542]
[32.01436996 109.59817505]
[17.02148628 110.06009674]
[2.02859998 110.52202606]
[-12.96428585 110.98394775]
[-26.51964188 119.14255524]
[-39.47914886 111.80086517]
[-54.47203445 112.26279449]
[-68.12243652 121.35116577]
[-82.69632721 113.83227539]
[-83.20133972 97.44091034]
[-69.11795807 89.03909302]
[-54.93395996 97.26990509]
[-39.94107437 96.80798340]
[-27.45810890 88.68241119]
[-13.42621136 95.99106598]
[1.56667411 95.52913666]
[16.55956078 95.06721497]
[31.55244637 94.60528564]
[41.53631592 83.61174774]
[56.73465347 82.92971039]
[68.19799805 93.47624969]
[83.19087982 93.01432800]
[68.20014191 92.48728943]
[56.66870880 82.89427185]
[53.42229462 68.24979401]
[59.81947708 54.68232727]
[73.18313599 47.86964417]
[87.92079163 50.66273499]
[97.86498260 61.89274216]
[98.85389709 76.86130524]
[98.85389709 61.86130524]
[98.85389709 46.86130524]
[91.11659241 33.06113434]
[98.85389709 20.33386230]
[98.85389709 5.33386230]
[98.23806763 -9.65349102]
[97.00746155 -24.60292625]
[95.77684784 -39.55236053]
[81.14879608 -43.52678299]
[68.76405334 -52.26714325]
[60.11812973 -64.71800232]
[56.25505829 -79.37584686]
[57.64133453 -94.47068024]
[64.10955048 -108.17973328]
[74.87863922 -118.84755707]
[88.64818573 -125.18596649]
[103.75543976 -126.42957306]
[118.37613678 -122.42819977]
[130.74475098 -113.66503143]
[139.36772156 -101.19826508]
[143.20376587 -86.53331757]
[141.78968811 -71.44106293]
[135.29621887 -57.74396133]
[124.50748444 -47.09599686]
[110.72628021 -40.78297424]
[111.95689392 -25.83353806]
[113.18750763 -10.88410378]
[115.30319977 -8.95670414]
[116.75823975 -6.04945612]
[117.16570282 -2.41893125]
[116.24217987 1.53968573]
[113.85389709 5.33386230]
[113.85389709 20.33386230]
[121.59119415 33.06113434]
[113.85389709 46.86130524]
[113.85389709 61.86130524]
[113.85389709 76.86130524]
[118.89166260 89.57073975]
[116.18538666 100.36371613]
[109.21062469 105.63893127]
[118.12677765 117.70136261]
[127.04292297 129.76379395]
[135.95907593 141.82621765]
[144.87522888 153.88865662]
[153.79138184 165.95108032]
[162.70753479 178.01351929]
[172.23086548 189.60256958]
[182.33630371 200.68769836]
[192.44174194 211.77282715]
[206.13235474 217.90200806]
[221.13157654 218.05599976]
[236.13078308 218.21000671]
[251.12998962 218.36399841]
[266.12921143 218.51799011]
[278.54934692 208.36320496]
[294.20150757 211.88296509]
[301.07873535 226.37721252]
[293.90536499 240.72721863]
[278.18423462 243.92486572]
[265.97518921 233.51721191]
[250.97599792 233.36320496]
[235.97679138 233.20921326]
[220.97756958 233.05522156]
[205.97836304 232.90121460]
[200.70236206 238.23167419]
[213.79156494 245.55781555]
[226.88078308 252.88397217]
[239.97000122 260.21011353]
[253.05921936 267.53625488]
[267.83837891 270.10076904]
[280.15319824 278.66494751]
[287.70111084 291.62753296]
[289.07089233 306.56484985]
[284.00637817 320.68402100]
[273.45455933 331.34512329]
[259.38830566 336.55474854]
[244.43765259 335.33889771]
[231.39801025 327.92489624]
[222.70744324 315.69894409]
[219.99092102 300.94583130]
[212.53077698 287.93252563]
[205.07063293 274.91918945]
[197.61048889 261.90588379]
[190.15034485 248.89257812]
[184.87432861 254.22303772]
[185.18231201 269.21987915]
[185.49029541 284.21670532]
[185.79826355 299.21356201]
[186.10624695 314.21038818]
[186.41423035 329.20721436]
[186.72219849 344.20407104]
[187.03018188 359.20089722]
[187.33815002 374.19775391]
[189.92393494 393.40615845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 107]
[11 106]
[12 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 50]
[26 49]
[29 46]
[30 45]
[31 44]
[32 43]
[34 41]
[35 40]
[58 95]
[59 94]
[60 93]
[62 91]
[63 90]
[64 85]
[65 84]
[66 83]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
