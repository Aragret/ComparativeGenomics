%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCUAGGCUAUAUACAACUACGCAAAGGCCCCAxxxxxxxxxxCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[91.35803223 276.97326660]
[91.04597473 261.97653198]
[90.73391724 246.97976685]
[90.42185974 231.98301697]
[90.10980225 216.98625183]
[89.79774475 201.98950195]
[89.48569489 186.99275208]
[89.17363739 171.99600220]
[88.86157990 156.99923706]
[74.63479614 152.24542236]
[65.36985016 164.04206848]
[56.10490036 175.83871460]
[46.83995056 187.63534546]
[37.57500458 199.43199158]
[32.54685211 215.62315369]
[15.59650612 215.27368164]
[11.24001312 198.88900757]
[25.77836227 190.16703796]
[35.04331207 178.37040710]
[44.30826187 166.57376099]
[53.57321167 154.77711487]
[62.83816147 142.98048401]
[49.89099503 125.23754120]
[44.76379395 104.16474152]
[48.02801895 83.00440979]
[58.98035049 64.93015289]
[75.78072357 52.57091904]
[95.75838470 47.62919998]
[96.69400787 32.65840912]
[97.62963867 17.68761826]
[83.13589478 13.62434864]
[69.80895233 6.63897896]
[58.23021317 -2.96100187]
[48.90423965 -14.75409985]
[42.23677063 -28.22332191]
[38.51706314 -42.77883911]
[37.90535355 -57.78382111]
[40.42594910 -72.58229065]
[45.96627808 -86.52779388]
[54.28190613 -99.01168060]
[65.00732422 -109.48960114]
[77.67202759 -117.50531769]
[91.72112274 -122.71049500]
[106.53967285 -124.87989807]
[107.47529602 -139.85069275]
[108.41092682 -154.82147217]
[96.90536499 -145.19744873]
[81.90613556 -145.04554749]
[70.20803070 -154.43461609]
[67.11041260 -169.11128235]
[74.01653290 -182.42689514]
[87.79784393 -188.34934998]
[102.21128845 -184.19570923]
[110.72752380 -171.84721375]
[113.82585144 -186.52374268]
[116.92417145 -201.20027161]
[104.02076721 -211.74603271]
[97.67758179 -227.06840515]
[99.33493805 -243.48721313]
[108.52146912 -257.09820557]
[122.98464203 -264.70132446]
[122.67258453 -279.69808960]
[122.36052704 -294.69482422]
[122.04846954 -309.69158936]
[121.73641205 -324.68835449]
[107.19813538 -328.82717896]
[94.52660370 -337.06875610]
[84.84856415 -348.68026733]
[79.02456665 -362.62918091]
[77.57249451 -377.67520142]
[80.62145996 -392.48043823]
[87.90034485 -405.72842407]
[98.76192474 -416.24118042]
[112.24038696 -423.08386230]
[127.13724518 -425.64807129]
[142.12786865 -423.70578003]
[155.87931824 -417.42968750]
[167.16880798 -407.37786865]
[174.99249268 -394.44415283]
[178.65469360 -379.77856445]
[177.82975769 -364.68515015]
[172.59106445 -350.50601196]
[163.40441895 -338.50198364]
[151.08668518 -329.74041748]
[136.73316956 -325.00039673]
[137.04522705 -310.00366211]
[137.35728455 -295.00689697]
[137.66934204 -280.01013184]
[137.98139954 -265.01339722]
[142.70178223 -263.65951538]
[147.17256165 -261.62799072]
[151.29705811 -258.96273804]
[162.79887390 -268.59124756]
[174.30067444 -278.21978760]
[179.41601562 -293.80072021]
[195.52043152 -296.89587402]
[206.04707336 -284.32122803]
[200.16703796 -269.01248169]
[183.92919922 -266.71798706]
[172.42739868 -257.08944702]
[160.92559814 -247.46093750]
[164.73866272 -231.09324646]
[160.09329224 -214.83351135]
[148.06152344 -202.80297852]
[131.60069275 -198.10194397]
[128.50238037 -183.42543030]
[125.40405273 -168.74890137]
[123.38172150 -153.88584900]
[122.44609070 -138.91505432]
[121.51045990 -123.94426727]
[135.94358826 -119.94672394]
[149.23529053 -113.03282928]
[160.80342102 -103.50263977]
[170.14080811 -91.77085114]
[176.83738708 -78.34875488]
[180.59828186 -63.82194901]
[181.25674438 -48.82479858]
[178.78155518 -34.01274109]
[173.27851868 -20.03361511]
[164.98591614 -7.49935150]
[154.26419067 3.04082632]
[141.58027649 11.12446594]
[127.48730469 16.39617538]
[112.60043335 18.62324524]
[111.66480255 33.59403610]
[110.72917175 48.56483078]
[120.41838837 51.27814484]
[129.46336365 55.80904770]
[137.52467346 62.01063538]
[144.29544067 69.67291260]
[149.51303101 78.52989960]
[152.96919250 88.26877594]
[154.51826477 98.54099274]
[154.08326721 108.97470093]
[151.65942383 119.18819427]
[147.31507874 128.80392456]
[141.18995667 137.46243286]
[133.49073792 144.83572388]
[124.48410797 150.63978577]
[114.48759460 154.64540100]
[103.85832977 156.68719482]
[104.17038727 171.68394470]
[104.48244476 186.68069458]
[104.79450226 201.67744446]
[105.10655975 216.67420959]
[105.41861725 231.67095947]
[105.73066711 246.66770935]
[106.04272461 261.66445923]
[106.35478210 276.66122437]
[108.94577789 295.86892700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[28 126]
[29 125]
[30 124]
[44 110]
[45 109]
[46 108]
[54 107]
[55 106]
[56 105]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
