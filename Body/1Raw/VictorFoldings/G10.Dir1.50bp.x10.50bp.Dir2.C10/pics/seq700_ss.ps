%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACCCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCAAAGxxxxxxxxxxCCCGUCUAUGUAGCAAAAUAGUGGGAAGAUUUAUAGGUAGAGGCGACAAACCUACCGAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.44839478 339.87979126]
[137.13633728 324.88305664]
[136.82427979 309.88629150]
[136.51222229 294.88952637]
[136.20016479 279.89279175]
[135.88812256 264.89602661]
[135.57606506 249.89927673]
[135.26400757 234.90252686]
[134.95195007 219.90576172]
[132.15962219 205.16795349]
[126.96421051 191.09643555]
[121.76879120 177.02491760]
[116.57337189 162.95339966]
[111.08634186 148.99301147]
[105.31007385 135.14979553]
[99.53379822 121.30657959]
[85.40899658 116.25782013]
[72.16641235 123.30295563]
[58.92382431 130.34808350]
[45.68124008 137.39321899]
[45.83074951 152.69799805]
[38.84033203 166.31390381]
[26.31633377 175.11207581]
[11.13667488 177.07080078]
[-3.21046805 171.73992920]
[-13.42822742 160.34449768]
[-17.16863632 145.50306702]
[-13.57217693 130.62611389]
[-3.46528792 119.13222504]
[10.82954025 113.66262817]
[26.02746201 115.47419739]
[38.63610458 124.15064240]
[51.87868881 117.10550690]
[65.12127686 110.06037140]
[78.36386108 103.01523590]
[85.13197327 89.62895203]
[82.95513916 74.78774261]
[73.06594849 66.44161987]
[71.58859253 53.99025726]
[78.77532959 44.20975876]
[76.90771484 29.32648087]
[75.04010010 14.44320011]
[60.03123093 14.79646015]
[45.06362534 13.62946415]
[30.29088593 10.95418739]
[15.86459637 6.79808187]
[1.93279886 1.20379734]
[-11.36154556 -5.77126026]
[-23.88201332 -14.05551529]
[-35.50012589 -23.56395721]
[-46.09666061 -34.19901657]
[-55.56288147 -45.85155487]
[-63.80164719 -58.40200424]
[-70.72841644 -71.72157288]
[-76.27210999 -85.67357635]
[-80.37583923 -100.11485291]
[-82.99748993 -114.89720154]
[-84.11016083 -129.86894226]
[-83.70244598 -144.87643433]
[-81.77851105 -159.76567078]
[-78.35810852 -174.38388062]
[-73.47633362 -188.58103943]
[-67.18328857 -202.21147156]
[-59.54354095 -215.13528442]
[-50.63549042 -227.21989441]
[-40.55055237 -238.34127808]
[-29.39221191 -248.38529968]
[-17.27497101 -257.24890137]
[-4.32317209 -264.84112549]
[9.33027649 -271.08407593]
[23.54526901 -275.91366577]
[38.17593765 -279.28036499]
[53.07214355 -281.14959717]
[68.08103180 -281.50219727]
[83.04858398 -280.33453369]
[97.82120514 -277.65859985]
[112.24731445 -273.50186157]
[126.17886353 -267.90698242]
[139.47290039 -260.93133545]
[151.99299622 -252.64653015]
[163.61070251 -243.13757324]
[174.20675659 -232.50204468]
[183.67247009 -220.84909058]
[191.91069031 -208.29827881]
[198.83686829 -194.97840881]
[204.37994385 -181.02615356]
[208.48303223 -166.58470154]
[211.10403442 -151.80223083]
[212.21604919 -136.83044434]
[211.80767822 -121.82297516]
[209.88308716 -106.93381500]
[206.46203613 -92.31576538]
[201.57963562 -78.11882019]
[195.28599548 -64.48867035]
[187.64567566 -51.56518173]
[178.73710632 -39.48096848]
[168.65167236 -28.36003494]
[157.49288940 -18.31650162]
[145.37525940 -9.45343113]
[132.42312622 -1.86177254]
[118.76940155 4.38057041]
[104.55419922 9.20954132]
[89.92337799 12.57558727]
[91.79099274 27.45886803]
[93.65860748 42.34214783]
[105.00077057 55.69712067]
[97.79634094 72.61090851]
[99.97318268 87.45211029]
[104.02700806 87.07106018]
[108.27944183 88.05329132]
[112.26125336 90.47066498]
[115.48315430 94.23226929]
[117.49207306 99.08071136]
[117.92719269 104.60773468]
[116.56922913 110.28827667]
[113.37701416 115.53030396]
[119.15328979 129.37351990]
[124.92956543 143.21673584]
[130.02450562 147.59269714]
[131.82426453 153.06921387]
[130.64489746 157.75798035]
[135.84031677 171.82951355]
[141.03572083 185.90103149]
[146.23114014 199.97254944]
[149.40292358 185.31172180]
[157.31620789 172.56887817]
[169.05091858 163.22563171]
[183.24269104 158.36830139]
[198.24145508 158.56164551]
[212.30329895 163.78318787]
[223.79327393 173.42582703]
[231.37545776 186.36840820]
[234.16825867 201.10612488]
[231.84698486 215.92541504]
[224.68150330 229.10328674]
[213.50495911 239.10751343]
[199.61683655 244.77494812]
[184.63188171 245.44664001]
[170.29238892 241.04446411]
[158.26560974 232.08029175]
[149.94869995 219.59370422]
[150.26075745 234.59046936]
[150.57281494 249.58721924]
[150.88487244 264.58398438]
[151.19692993 279.58071899]
[151.50898743 294.57748413]
[151.82104492 309.57421875]
[152.13308716 324.57098389]
[152.44514465 339.56774902]
[155.03614807 358.77545166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[11 123]
[12 122]
[13 121]
[14 118]
[15 117]
[16 116]
[17 35]
[18 34]
[19 33]
[20 32]
[36 108]
[37 107]
[40 105]
[41 104]
[42 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
