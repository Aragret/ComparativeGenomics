%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAUCAUCUGUAGGCUCAUUCAUUUCUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUxxxxxxxxxxUAGUAAGCCUCUACCUGCACGACAACACAUAAUGACCCACCAAUCACAUGCCUAUCAUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.56176758 253.98463440]
[97.24971008 238.98786926]
[96.93765259 223.99111938]
[96.62559509 208.99436951]
[96.31353760 193.99761963]
[96.00148773 179.00085449]
[95.68943024 164.00410461]
[95.37737274 149.00735474]
[95.06531525 134.01060486]
[81.04860687 128.66908264]
[70.83512115 139.65475464]
[60.62164307 150.64041138]
[50.40816498 161.62608337]
[40.19468307 172.61174011]
[29.98120308 183.59741211]
[29.12592125 199.61764526]
[15.98435783 208.81976318]
[0.63759536 204.14466858]
[-5.14164257 189.17871094]
[3.07998085 175.40248108]
[18.99553871 173.38392639]
[29.20901871 162.39826965]
[39.42250061 151.41259766]
[49.63597870 140.42694092]
[59.84945679 129.44126892]
[70.06293488 118.45560455]
[71.54666138 86.39761353]
[96.48024750 72.31645203]
[98.65708160 57.47524261]
[100.83391571 42.63403702]
[101.14597321 27.63728333]
[99.58839417 12.71837139]
[98.03081512 -2.20054054]
[96.47322845 -17.11945343]
[94.91564941 -32.03836441]
[78.40045929 -34.81294632]
[63.32565689 -42.07604599]
[50.88340378 -53.24500275]
[42.05537415 -67.42859650]
[37.53527832 -83.49816132]
[37.67438507 -100.17739105]
[42.45420456 -116.14372253]
[51.48857117 -130.13319397]
[64.05481720 -141.04049683]
[79.15158081 -148.00636292]
[76.66645813 -162.79907227]
[74.18134308 -177.59178162]
[71.69622040 -192.38449097]
[56.68394089 -191.84931946]
[41.73024368 -193.27828979]
[27.09100723 -196.64694214]
[13.01673031 -201.89762878]
[-0.25175887 -208.94050598]
[-12.48741913 -217.65507507]
[-23.48088264 -227.89219666]
[-33.04403687 -239.47671509]
[-41.01324081 -252.21040344]
[-47.25213623 -265.87536621]
[-51.65396118 -280.23779297]
[-54.14339828 -295.05187988]
[-54.67785263 -310.06420898]
[-53.24817276 -325.01782227]
[-49.87882996 -339.65689087]
[-44.62746811 -353.73092651]
[-37.58395386 -366.99908447]
[-28.86880875 -379.23431396]
[-18.63115692 -390.22729492]
[-7.04618120 -399.78991699]
[5.68788481 -407.75851440]
[19.35314560 -413.99673462]
[33.71576691 -418.39788818]
[48.52999115 -420.88662720]
[63.54232407 -421.42034912]
[78.49588776 -419.98995972]
[93.13480377 -416.61993408]
[107.20858002 -411.36788940]
[120.47639465 -404.32376099]
[132.71122742 -395.60803223]
[143.70372009 -385.36984253]
[153.26576233 -373.78442383]
[161.23376465 -361.04998779]
[167.47135925 -347.38442993]
[171.87181091 -333.02157593]
[174.35984802 -318.20724487]
[174.89286804 -303.19488525]
[173.46176147 -288.24139404]
[170.09101868 -273.60263062]
[164.83831787 -259.52911377]
[157.79354858 -246.26162720]
[149.07723999 -234.02720642]
[138.83853149 -223.03520203]
[127.25265503 -213.47370911]
[114.51782990 -205.50631714]
[100.85197449 -199.26937866]
[86.48892975 -194.86959839]
[88.97405243 -180.07690430]
[91.45916748 -165.28419495]
[93.94428253 -150.49148560]
[107.27901459 -149.53326416]
[120.06414795 -145.59692383]
[131.64295959 -138.88076782]
[141.41979980 -129.72596741]
[148.89077759 -118.59927368]
[153.66967773 -106.06922150]
[155.50796509 -92.77700806]
[154.30767822 -79.40377808]
[150.12667847 -66.63564301]
[143.17582703 -55.12851715]
[133.80836487 -45.47442245]
[122.50202179 -38.17101288]
[109.83456421 -33.59594727]
[111.39214325 -18.67703438]
[112.94972229 -3.75812149]
[114.50730896 11.16079044]
[116.06488800 26.07970238]
[123.48880768 13.04569530]
[135.76402283 4.42484331]
[150.54400635 1.86510837]
[165.00340271 5.85580873]
[176.37817383 15.63408184]
[182.49391174 29.33071518]
[182.18153381 44.32746124]
[175.50074768 57.75754547]
[163.72866821 67.05367279]
[149.11561584 70.43879700]
[134.45506287 67.26582336]
[122.54947662 58.14128494]
[115.67512512 44.81087494]
[113.49828339 59.65208054]
[111.32144928 74.49328613]
[117.03652191 77.06948853]
[122.15365601 80.93634796]
[126.37980652 85.95220184]
[129.45613098 91.90863037]
[131.17323303 98.53892517]
[131.38420105 105.52988434]
[130.01490784 112.53662872]
[127.07072449 119.19957733]
[122.63922119 125.16290283]
[116.88864899 130.09333801]
[110.06207275 133.69854736]
[110.37412262 148.69529724]
[110.68618011 163.69204712]
[110.99823761 178.68881226]
[111.31029510 193.68556213]
[111.62235260 208.68231201]
[111.93441010 223.67906189]
[112.24645996 238.67582703]
[112.55851746 253.67257690]
[115.14952087 272.88031006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[28 130]
[29 129]
[30 128]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[45 98]
[46 97]
[47 96]
[48 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
