%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGCCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUCACxxxxxxxxxxACCCCUUACGAGUGCGGCUUCGACCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-53.95983505 211.61755371]
[-66.44190979 219.93608093]
[-73.63469696 234.02770996]
[-88.51641083 234.64735413]
[-100.99848175 242.96588135]
[-113.48055267 251.28440857]
[-125.54747772 260.19445801]
[-137.17123413 269.67541504]
[-148.79499817 279.15634155]
[-160.41876221 288.63729858]
[-172.04252625 298.11822510]
[-157.04605103 297.79263306]
[-143.83497620 304.89666748]
[-135.83750916 317.58682251]
[-135.12898254 332.57009888]
[-141.89326477 345.95831299]
[-154.37503052 354.27728271]
[-169.33531189 355.36825562]
[-182.89193726 348.94815063]
[-191.52699280 336.68292236]
[-192.99972534 321.75540161]
[-186.92662048 308.03753662]
[-200.15116882 315.11645508]
[-213.37573242 322.19537354]
[-226.60029602 329.27429199]
[-232.60559082 344.15097046]
[-248.02142334 348.59301758]
[-261.02206421 339.19287109]
[-261.63455200 323.16152954]
[-249.38902283 312.79684448]
[-233.67921448 316.04974365]
[-220.45465088 308.97082520]
[-207.23008728 301.89190674]
[-194.00553894 294.81298828]
[-181.52346802 286.49447632]
[-169.89970398 277.01351929]
[-158.27593994 267.53259277]
[-146.65217590 258.05163574]
[-135.02841187 248.57070923]
[-149.38256836 244.21659851]
[-155.11137390 230.35366821]
[-148.01841736 217.13664246]
[-133.29937744 214.24708557]
[-121.73604584 223.80165100]
[-121.79907990 238.80232239]
[-109.31700897 230.48381042]
[-96.83493042 222.16528320]
[-90.53494263 208.66864014]
[-74.76042938 207.45399475]
[-62.27835846 199.13548279]
[-69.16244507 186.86872864]
[-75.12094879 174.12666321]
[-80.12126160 160.97900391]
[-84.13602448 147.49771118]
[-87.14328003 133.75651550]
[-89.12655640 119.83061981]
[-90.07501984 105.79622650]
[-89.98346710 91.73011017]
[-88.85240173 77.70925140]
[-86.68801880 63.81035233]
[-83.50215912 50.10947037]
[-79.31225586 36.68156815]
[-74.14122772 23.60011482]
[-68.01736450 10.93669319]
[-60.97418976 -1.23941243]
[-53.05022812 -12.86157799]
[-44.28884125 -23.86621284]
[-34.73796463 -34.19310379]
[-24.44985962 -43.78574753]
[-13.48081684 -52.59165192]
[-1.89085448 -60.56264114]
[10.25661182 -67.65509796]
[22.89511681 -73.83022308]
[35.95550537 -79.05421448]
[49.36632156 -83.29850006]
[63.05418396 -86.53984833]
[76.94419861 -88.76052856]
[90.96035767 -89.94839478]
[105.02598572 -90.09694672]
[119.06410980 -89.20536041]
[132.99792480 -87.27852631]
[146.75119019 -84.32698059]
[160.24865723 -80.36687469]
[173.41645813 -75.41987610]
[186.18255615 -69.51305389]
[198.47711182 -62.67872620]
[210.23283386 -54.95428848]
[221.38540649 -46.38200760]
[231.87380981 -37.00878525]
[241.64065552 -26.88591003]
[250.63249207 -16.06876755]
[258.80014038 -4.61654472]
[266.09890747 7.40809584]
[272.48886108 19.93935966]
[286.33316040 14.16573811]
[300.17749023 8.39211655]
[309.93627930 -4.06086111]
[324.66113281 -1.81851232]
[334.41992188 -14.27149010]
[349.14477539 -12.02914143]
[362.98907471 -17.80276299]
[376.83340454 -23.57638550]
[390.67773438 -29.35000610]
[389.68188477 -44.45917511]
[393.64834595 -59.07238770]
[402.14688110 -71.60450745]
[414.25558472 -80.69613647]
[428.66104126 -85.36109924]
[443.80059814 -85.09336090]
[458.03210449 -79.92197418]
[469.81179810 -70.40789032]
[477.86187744 -57.58311462]
[481.30917358 -42.83879852]
[479.77972412 -27.77428627]
[473.43945312 -14.02366638]
[462.97607422 -3.07850242]
[449.52459717 3.87395644]
[434.54415894 6.07955885]
[419.65966797 3.29905796]
[406.48574829 -4.16593838]
[396.45135498 -15.50568390]
[382.60702515 -9.73206139]
[368.76269531 -3.95843959]
[354.91839600 1.81518221]
[346.14984131 13.85519218]
[330.43475342 12.02581120]
[321.66619873 24.06582069]
[305.95111084 22.23644066]
[292.10678101 28.01006126]
[278.26248169 33.78368378]
[283.21047974 49.04880524]
[286.85388184 64.67674255]
[289.16671753 80.55622101]
[290.13250732 96.57415009]
[289.74438477 112.61647034]
[288.00512695 128.56895447]
[284.92706299 144.31800842]
[280.53219604 159.75146484]
[274.85174561 174.75944519]
[267.92620850 189.23507690]
[259.80487061 203.07525635]
[250.54559326 216.18147278]
[240.21429443 228.46034241]
[228.88453674 239.82447815]
[216.63700867 250.19293213]
[203.55891418 259.49188232]
[189.74339294 267.65509033]
[175.28880310 274.62445068]
[160.29811096 280.35034180]
[144.87803650 284.79196167]
[129.13838196 287.91769409]
[113.19123840 289.70529175]
[97.15016174 290.14202881]
[81.12937927 289.22476196]
[65.24297333 286.96005249]
[49.60406494 283.36401367]
[34.32402420 278.46224976]
[19.51165581 272.28967285]
[5.27243757 264.89025879]
[-8.29223537 256.31668091]
[-21.08576965 246.62995911]
[-33.01706696 235.89910889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[4 47]
[5 46]
[6 45]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[22 34]
[23 33]
[24 32]
[25 31]
[94 130]
[95 129]
[96 128]
[98 126]
[100 124]
[101 123]
[102 122]
[103 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
