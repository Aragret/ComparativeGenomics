%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUAACACCCAUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACAxxxxxxxxxxUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUAAACACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.22595215]
[92.50000000 291.22595215]
[92.50000000 276.22595215]
[92.50000000 261.22595215]
[92.50000000 246.22593689]
[92.50000000 231.22593689]
[92.50000000 216.22593689]
[92.50000000 201.22593689]
[92.50000000 186.22593689]
[92.50000000 171.22593689]
[77.85705566 168.11074829]
[64.18161774 162.01957703]
[52.07120132 153.21856689]
[42.05495453 142.09223938]
[34.57052612 129.12677002]
[29.94492912 114.88865662]
[28.38027573 100.00000000]
[29.94492912 85.11134338]
[34.57052612 70.87322998]
[42.05495453 57.90776062]
[52.07120132 46.78144073]
[64.18161774 37.98041916]
[77.85705566 31.88924408]
[92.50000000 28.77405739]
[92.50000000 13.77405739]
[84.76270294 -0.02611508]
[92.50000000 -12.75338745]
[92.50000000 -27.75338745]
[92.50000000 -42.75338745]
[77.52785492 -43.75547028]
[62.65607834 -45.75534821]
[47.95109177 -48.74408722]
[33.47856522 -52.70834351]
[19.30314445 -57.63040543]
[5.48813915 -63.48829651]
[-7.90475035 -70.25585175]
[-20.81570816 -77.90283966]
[-33.18706894 -86.39511108]
[-44.96357727 -95.69474030]
[-56.09263992 -105.76018524]
[-66.52455139 -116.54650116]
[-76.21271515 -128.00550842]
[-85.11386108 -140.08601379]
[-93.18824005 -152.73408508]
[-100.39978790 -165.89321899]
[-106.71629333 -179.50465393]
[-112.10954285 -193.50758362]
[-116.55545807 -207.83947754]
[-120.03417206 -222.43632507]
[-122.53015137 -237.23291016]
[-124.03225708 -252.16319275]
[-124.53376770 -267.16043091]
[-124.03244019 -282.15771484]
[-122.53053284 -297.08801270]
[-120.03473663 -311.88464355]
[-116.55620575 -326.48150635]
[-112.11047363 -340.81347656]
[-106.71739197 -354.81646729]
[-100.40106201 -368.42797852]
[-93.18968201 -381.58718872]
[-85.11546326 -394.23538208]
[-76.21446228 -406.31600952]
[-66.52644348 -417.77511597]
[-56.09466934 -428.56155396]
[-44.96573257 -438.62716675]
[-33.18933868 -447.92694092]
[-20.81808662 -456.41934204]
[-7.90722561 -464.06649780]
[5.48557901 -470.83422852]
[19.30051231 -476.69229126]
[33.47587204 -481.61453247]
[47.94834518 -485.57897949]
[62.65329742 -488.56790161]
[77.52504730 -490.56796265]
[92.49717712 -491.57022095]
[107.50282288 -491.57022095]
[122.47495270 -490.56796265]
[137.34671021 -488.56790161]
[152.05165100 -485.57897949]
[166.52412415 -481.61453247]
[180.69949341 -476.69229126]
[194.51441956 -470.83422852]
[207.90722656 -464.06649780]
[220.81808472 -456.41934204]
[233.18934631 -447.92694092]
[244.96572876 -438.62716675]
[256.09466553 -428.56155396]
[266.52642822 -417.77511597]
[276.21447754 -406.31600952]
[285.11544800 -394.23538208]
[293.18966675 -381.58718872]
[300.40106201 -368.42797852]
[306.71740723 -354.81646729]
[312.11047363 -340.81347656]
[316.55621338 -326.48150635]
[320.03472900 -311.88464355]
[322.53051758 -297.08801270]
[324.03244019 -282.15771484]
[324.53375244 -267.16043091]
[324.03225708 -252.16319275]
[322.53015137 -237.23291016]
[320.03417969 -222.43632507]
[316.55545044 -207.83947754]
[312.10955811 -193.50758362]
[306.71627808 -179.50465393]
[300.39978027 -165.89321899]
[293.18823242 -152.73408508]
[285.11386108 -140.08601379]
[276.21270752 -128.00550842]
[266.52453613 -116.54650116]
[256.09265137 -105.76018524]
[244.96357727 -95.69474030]
[233.18707275 -86.39511108]
[220.81570435 -77.90283966]
[207.90475464 -70.25585175]
[194.51185608 -63.48829651]
[180.69685364 -57.63040543]
[166.52143860 -52.70834351]
[152.04890442 -48.74408722]
[137.34391785 -45.75534821]
[122.47214508 -43.75547028]
[107.50000000 -42.75338745]
[107.50000000 -27.75338745]
[107.50000000 -12.75338745]
[115.23729706 -0.02611508]
[107.50000000 13.77405739]
[107.50000000 28.77405739]
[122.14294434 31.88924408]
[135.81838989 37.98041916]
[147.92880249 46.78144073]
[157.94503784 57.90776062]
[165.42947388 70.87322998]
[170.05506897 85.11134338]
[171.61972046 100.00000000]
[170.05506897 114.88865662]
[165.42947388 129.12677002]
[157.94503784 142.09223938]
[147.92880249 153.21856689]
[135.81838989 162.01957703]
[122.14294434 168.11074829]
[107.50000000 171.22593689]
[107.50000000 186.22593689]
[107.50000000 201.22593689]
[107.50000000 216.22593689]
[107.50000000 231.22593689]
[107.50000000 246.22593689]
[107.50000000 261.22595215]
[107.50000000 276.22595215]
[107.50000000 291.22595215]
[107.50000000 306.22595215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 127]
[25 126]
[27 124]
[28 123]
[29 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
