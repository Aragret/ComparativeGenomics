%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAAACAAAUGAUAACCAUACACAACACUAAAGGACGAACCUGAUCUCUUAUACUAGUAUxxxxxxxxxxACUAGGCGGCUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUGACAAAACACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[91.26528931 273.82363892]
[91.26528931 258.82363892]
[91.26528931 243.82363892]
[91.26528931 228.82363892]
[91.26528931 213.82363892]
[91.26528931 198.82363892]
[91.26528931 183.82363892]
[91.26528931 168.82363892]
[91.26528931 153.82363892]
[91.26528931 138.82363892]
[81.21490479 133.47058105]
[73.43942261 125.71524811]
[68.44619751 116.39097595]
[66.46302795 106.41370392]
[67.43496704 96.69402313]
[71.04735565 88.05462646]
[76.77166748 81.16074371]
[83.92858887 76.46921539]
[79.02703094 62.29265594]
[74.12548065 48.11609650]
[69.22393036 33.93954086]
[64.32238007 19.76298141]
[57.55426788 6.37669611]
[49.04317856 -5.97487640]
[40.40406036 -18.23724365]
[31.63785362 -30.40908051]
[22.87164688 -42.58091736]
[14.10543919 -54.75275421]
[5.33923197 -66.92459106]
[-3.42697501 -79.09642792]
[-3.11238885 -64.09973145]
[-8.82019234 -50.22813797]
[-19.59819412 -39.79575348]
[-33.64838409 -34.54292679]
[-48.62687302 -35.34595108]
[-62.03491592 -42.07086182]
[-71.63574982 -53.59579468]
[-75.82773590 -67.99813080]
[-73.91156006 -82.87523651]
[-66.20687866 -95.74527740]
[-53.99901962 -104.46124268]
[-39.32451248 -107.56911469]
[-24.63139915 -104.55043030]
[-12.37179279 -95.90980530]
[-24.41000557 -106.17586517]
[-21.55986595 -120.79523468]
[-26.75528145 -134.86676025]
[-34.24820709 -135.82246399]
[-41.06018066 -138.96839905]
[-46.57191849 -143.98518372]
[-50.29244232 -150.38500977]
[-51.90274429 -157.55891418]
[-51.28295898 -164.83465576]
[-48.52075577 -171.53977966]
[-58.50348282 -182.73554993]
[-74.37360382 -185.08477783]
[-82.30684662 -199.02905273]
[-76.21751404 -213.87155151]
[-60.77681351 -218.22636414]
[-47.82953262 -208.75283813]
[-47.30771637 -192.71827698]
[-37.32498932 -181.52250671]
[-36.84914780 -181.72132874]
[-36.36910248 -181.90974426]
[-36.99308014 -196.89675903]
[-37.61705780 -211.88377380]
[-38.24103165 -226.87078857]
[-38.86500931 -241.85780334]
[-52.90050888 -247.85510254]
[-62.93745422 -259.35391235]
[-66.98300934 -274.07110596]
[-64.23392487 -289.08462524]
[-55.23603058 -301.41348267]
[-41.77587128 -308.60977173]
[-26.52596474 -309.24472046]
[-12.51419449 -303.19216919]
[-2.52260685 -291.65393066]
[1.46496105 -276.92092896]
[-1.34322536 -261.91836548]
[-10.38959885 -249.62503052]
[-23.87799454 -242.48178101]
[-23.25401688 -227.49476624]
[-22.63003922 -212.50775146]
[-22.00606155 -197.52073669]
[-21.38208580 -182.53372192]
[-4.06666613 -164.31585693]
[-12.68376160 -140.06216431]
[-7.48834610 -125.99065399]
[4.17825603 -116.73107910]
[1.69972682 -101.10522461]
[8.74486160 -87.86263275]
[17.51106834 -75.69079590]
[26.27727699 -63.51896286]
[35.04348373 -51.34712601]
[43.80969238 -39.17528915]
[52.57589722 -27.00345230]
[59.07911301 -23.39044189]
[61.39474869 -14.48596668]
[69.90583801 -2.13439393]
[69.90331268 -17.13439369]
[75.89846039 -30.88423729]
[86.89115906 -41.09014130]
[101.04758453 -46.04953384]
[116.00613403 -44.93507385]
[129.27136230 -37.93268204]
[138.63035583 -26.21051025]
[142.52182007 -11.72408390]
[140.29655457 3.10993814]
[132.32580566 15.81690788]
[119.93925476 24.27701759]
[105.20326996 27.07893181]
[90.57613373 23.75522614]
[78.49893951 14.86143017]
[83.40048981 29.03798866]
[88.30204010 43.21454620]
[93.20359039 57.39110565]
[98.10514069 71.56766510]
[126.21927643 78.12733459]
[138.58811951 109.72249603]
[151.97439575 116.49061584]
[165.36068726 123.25872803]
[180.29606628 118.09054565]
[194.47471619 125.07205200]
[199.48469543 140.06123352]
[192.35368347 154.16528320]
[177.31237793 159.01651001]
[163.28451538 151.73677063]
[158.59257507 136.64501953]
[145.20628357 129.87689209]
[131.82000732 123.10878754]
[125.43132782 127.03749847]
[133.93408203 139.39480591]
[142.43684387 151.75210571]
[155.03257751 159.89752197]
[154.86242676 174.89656067]
[142.08515930 182.75415039]
[128.62280273 176.13865662]
[127.03673553 161.22239685]
[119.84535217 148.05865479]
[112.65396881 134.89492798]
[106.26528931 138.82363892]
[106.26528931 153.82363892]
[106.26528931 168.82363892]
[106.26528931 183.82363892]
[106.26528931 198.82363892]
[106.26528931 213.82363892]
[106.26528931 228.82363892]
[106.26528931 243.82363892]
[106.26528931 258.82363892]
[106.26528931 273.82363892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 117]
[19 116]
[20 115]
[21 114]
[22 113]
[23 99]
[24 98]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[44 90]
[46 88]
[47 87]
[54 62]
[55 61]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[119 130]
[120 129]
[121 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
