%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCCCAUAxxxxxxxxxxAACAAUAUACUCUCCGGACAAUGAACCAUAACCAAUACUACCAAUCAAUACUCAUCAUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-24.60596275 263.86596680]
[-34.11432266 275.46731567]
[-43.62268066 287.06863403]
[-46.38627625 302.64660645]
[-60.43817520 307.58557129]
[-69.94653320 319.18692017]
[-79.45489502 330.78826904]
[-88.96324921 342.38958740]
[-98.47161102 353.99093628]
[-91.26639557 367.37576294]
[-89.73676300 382.49954224]
[-94.11597443 397.05599976]
[-103.73622894 408.82540894]
[-117.13050842 416.01303101]
[-132.25628662 417.52276611]
[-146.80699158 413.12442017]
[-158.56373596 403.48867798]
[-165.73371887 390.08496094]
[-167.22355652 374.95721436]
[-162.80606079 360.41229248]
[-153.15487671 348.66824341]
[-139.74172974 341.51589966]
[-124.61203003 340.04595947]
[-110.07295227 344.48257446]
[-100.56459045 332.88122559]
[-91.05623627 321.27990723]
[-81.54787445 309.67855835]
[-72.03952026 298.07720947]
[-69.95602417 283.32904053]
[-55.22402191 277.56027222]
[-45.71566391 265.95895386]
[-36.20730591 254.35760498]
[-57.31877899 232.77612305]
[-75.04673767 208.33898926]
[-89.00991058 181.57177734]
[-98.90796661 153.05015564]
[-104.52804565 123.38756561]
[-105.74925995 93.22197723]
[-102.54534912 63.20215988]
[-94.98522186 33.97377014]
[-83.23147583 6.16543102]
[-96.32463074 -1.15367484]
[-109.41778564 -8.47278023]
[-122.51093292 -15.79188633]
[-135.29734802 -7.37962532]
[-150.52967834 -5.88462305]
[-164.70762634 -11.65042019]
[-174.57321167 -23.35207939]
[-177.85939026 -38.30064392]
[-173.81103516 -53.06104279]
[-163.35841370 -64.24144745]
[-148.90347290 -69.27267456]
[-133.76785278 -66.99859619]
[-121.42959595 -57.94177246]
[-114.72395325 -44.18339539]
[-115.19183350 -28.88504028]
[-102.09867859 -21.56593513]
[-89.00552368 -14.24682903]
[-75.91236877 -6.92772341]
[-70.14134216 -15.89056969]
[-63.91408157 -24.54265785]
[-57.24729156 -32.86078644]
[-50.15884399 -40.82265472]
[-42.66775513 -48.40690994]
[-34.79410172 -55.59321594]
[-26.55900383 -62.36230469]
[-17.98454094 -68.69602203]
[-9.09370518 -74.57738495]
[0.08966267 -79.99062347]
[9.54093742 -84.92121887]
[19.23477554 -89.35595703]
[29.14518356 -93.28293610]
[39.24558640 -96.69163513]
[49.50889969 -99.57291412]
[59.90760803 -101.91904449]
[70.41381836 -103.72372437]
[80.99936676 -104.98213196]
[91.63586426 -105.69088745]
[102.29478455 -105.84808350]
[112.94755554 -105.45330048]
[123.56561279 -104.50760651]
[134.12046814 -103.01352692]
[144.58384705 -100.97507477]
[154.92765808 -98.39771271]
[165.12419128 -95.28834534]
[175.14608765 -91.65532684]
[184.96649170 -87.50838470]
[194.55905151 -82.85864258]
[203.89807129 -77.71857452]
[212.95846558 -72.10195160]
[221.71598816 -66.02384949]
[230.14712524 -59.50055313]
[238.22926331 -52.54956436]
[245.94075012 -45.18951416]
[253.26091003 -37.44014359]
[260.17010498 -29.32223129]
[266.64978027 -20.85754395]
[272.68261719 -12.06878185]
[278.25241089 -2.97950864]
[283.34420776 6.38590097]
[287.94439697 16.00233459]
[292.04058838 25.84400558]
[295.62185669 35.88452530]
[298.67852783 46.09696579]
[301.20248413 56.45394897]
[303.18692017 66.92769623]
[304.62649536 77.49012756]
[305.51739502 88.11292267]
[305.85717773 98.76758575]
[305.64498901 109.42556000]
[304.88134766 120.05825806]
[303.56832886 130.63716125]
[301.70944214 141.13392639]
[299.30969238 151.52038574]
[296.37548828 161.76869202]
[292.91470337 171.85136414]
[288.93661499 181.74137878]
[284.45190430 191.41220093]
[279.47259521 200.83790588]
[274.01205444 209.99320984]
[268.08486938 218.85357666]
[261.70700073 227.39523315]
[254.89549255 235.59529114]
[247.66865540 243.43174744]
[240.04583740 250.88360596]
[232.04750061 257.93087769]
[223.69506836 264.55462646]
[215.01095581 270.73715210]
[206.01844788 276.46185303]
[196.74165344 281.71337891]
[187.20544434 286.47763062]
[177.43539429 290.74185181]
[167.45771790 294.49462891]
[157.29914856 297.72583008]
[146.98692322 300.42684937]
[136.54870605 302.59045410]
[126.01249695 304.21078491]
[115.40652466 305.28356934]
[104.75924683 305.80584717]
[94.09920502 305.77627563]
[83.45498657 305.19494629]
[72.85513306 304.06335449]
[62.32806396 302.38458252]
[51.90201187 300.16314697]
[41.60493469 297.40496826]
[31.46444511 294.11743164]
[21.50772858 290.30938721]
[11.76148891 285.99102783]
[2.25185728 281.17395020]
[-6.99566507 275.87106323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[41 59]
[42 58]
[43 57]
[44 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
