%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUGACUUUCCAAAAAACACAUAAUUUGAAUCAACACAACCACCCACAGCCUAAUUAUUAxxxxxxxxxxUUACCGAGAAAGCUCACAAGAACUGCUAACUCAUGCCCCCAUGUCUAACAACAUGGCUUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[124.62138367 332.19091797]
[124.62138367 317.19091797]
[124.62138367 302.19091797]
[124.62138367 287.19091797]
[124.62138367 272.19091797]
[124.62138367 257.19091797]
[124.62138367 242.19091797]
[124.62138367 227.19091797]
[124.62138367 212.19091797]
[124.62138367 197.19091797]
[122.01666260 182.41880798]
[116.88636017 168.32342529]
[111.75605774 154.22802734]
[106.62575531 140.13264465]
[101.49545288 126.03724670]
[78.71345520 115.06843567]
[75.93987274 89.93595123]
[64.35082245 80.41261292]
[52.76177597 70.88928223]
[41.17272568 61.36594009]
[29.58367920 51.84260559]
[19.03890038 62.52543640]
[7.56636047 72.20510864]
[-4.73887491 80.80141449]
[-17.77483749 88.24311066]
[-31.43350792 94.46854401]
[-45.60169983 99.42611694]
[-60.16201019 103.07476044]
[-74.99378967 105.38423157]
[-89.97412872 106.33539581]
[-104.97888947 105.92036438]
[-119.88375092 104.14258575]
[-134.56518555 101.01679230]
[-148.90155029 96.56887817]
[-162.77403259 90.83570099]
[-176.06770325 83.86477661]
[-188.67237854 75.71386719]
[-200.48361206 66.45050812]
[-211.40354919 56.15146637]
[-221.34169006 44.90208054]
[-230.21568298 32.79557419]
[-237.95199585 19.93226433]
[-244.48651123 6.41874313]
[-249.76510620 -7.63301086]
[-253.74400330 -22.10655785]
[-256.39025879 -36.88196182]
[-257.68194580 -51.83678436]
[-257.60833740 -66.84710693]
[-256.17007446 -81.78855133]
[-253.37905884 -96.53729248]
[-249.25840759 -110.97112274]
[-243.84228516 -124.97044373]
[-237.17555237 -138.41923523]
[-229.31347656 -151.20605469]
[-220.32119751 -163.22496033]
[-210.27322388 -174.37635803]
[-199.25282288 -184.56781006]
[-187.35130310 -193.71490479]
[-174.66729736 -201.74182129]
[-161.30592346 -208.58204651]
[-147.37788391 -214.17890930]
[-132.99858093 -218.48602295]
[-118.28720093 -221.46769714]
[-103.36563110 -223.09922791]
[-88.35751343 -223.36709595]
[-73.38722229 -222.26908875]
[-58.57880783 -219.81428528]
[-44.05497742 -216.02302551]
[-29.93608093 -210.92675781]
[-16.33911705 -204.56768799]
[-3.37675500 -196.99850464]
[8.84359169 -188.28195190]
[20.22065926 -178.49023438]
[30.66017151 -167.70451355]
[40.07562256 -156.01416016]
[48.38899231 -143.51603699]
[55.53138733 -130.31370544]
[61.44363022 -116.51657867]
[66.07672119 -102.23898315]
[69.39227295 -87.59923553]
[71.36280823 -72.71863556]
[71.97200775 -57.72049713]
[71.21481323 -42.72910309]
[69.09749603 -27.86867905]
[65.63761139 -13.26236439]
[60.86382294 0.96880573]
[54.81569290 14.70690441]
[47.54333496 27.83809090]
[39.10701752 40.25355530]
[50.69606400 49.77689362]
[62.28511429 59.30023193]
[73.87416077 68.82357025]
[85.46321106 78.34690857]
[92.77198029 74.94145966]
[100.77165222 73.93125916]
[108.69757080 75.41286469]
[115.79211426 79.24466705]
[121.37715149 85.06038666]
[135.62384033 80.36658478]
[146.30981445 68.69950867]
[160.81906128 72.06561279]
[175.06576538 67.37181854]
[178.82673645 52.40990829]
[190.09529114 41.87316513]
[205.27569580 39.12382126]
[219.52392578 45.03918076]
[228.29342651 57.73167801]
[228.78587341 73.15118408]
[220.84414673 86.37738037]
[207.00239563 93.18984985]
[191.67749023 91.41474915]
[179.75956726 81.61850739]
[165.51286316 86.31230927]
[155.84591675 97.64365387]
[140.31764221 94.61327362]
[126.07095337 99.30707550]
[125.72702026 104.27729034]
[124.44424438 109.09140778]
[122.26943970 113.57376099]
[119.28195953 117.56077576]
[115.59084320 120.90694427]
[120.72114563 135.00233459]
[125.85144806 149.09773254]
[130.98175049 163.19311523]
[136.11204529 177.28849792]
[139.19964600 162.60972595]
[146.80847168 149.68278503]
[158.14349365 139.85845947]
[172.02027893 134.16329956]
[186.98881531 133.19239807]
[201.48504639 137.04721069]
[213.99420166 145.32493591]
[223.20921326 157.16062927]
[228.16716003 171.31756592]
[228.35000610 186.31645203]
[223.73861694 200.59002686]
[214.81488037 212.64685059]
[202.51121521 221.22705078]
[188.11326599 225.43409729]
[173.12550354 224.82836914]
[159.11401367 219.47317505]
[147.54287720 209.92807007]
[139.62138367 197.19091797]
[139.62138367 212.19091797]
[139.62138367 227.19091797]
[139.62138367 242.19091797]
[139.62138367 257.19091797]
[139.62138367 272.19091797]
[139.62138367 287.19091797]
[139.62138367 302.19091797]
[139.62138367 317.19091797]
[139.62138367 332.19091797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 125]
[12 124]
[13 123]
[14 122]
[15 121]
[17 93]
[18 92]
[19 91]
[20 90]
[21 89]
[98 116]
[99 115]
[101 113]
[102 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
