%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAUCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAxxxxxxxxxxUUCCUCACAGGUUUCUACUCCAAAGACCACAUCAUCGAAACCGCAAACAUAUCAUACACAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.48093414 270.21188354]
[114.48093414 255.21188354]
[114.48093414 240.21188354]
[114.48093414 225.21188354]
[114.48093414 210.21188354]
[114.48093414 195.21188354]
[114.48093414 180.21188354]
[114.48093414 165.21188354]
[114.48093414 150.21188354]
[114.48093414 135.21188354]
[93.97938538 140.08158875]
[72.69028473 133.20018005]
[60.72002792 142.23970032]
[48.74976730 151.27922058]
[36.77951050 160.31874084]
[40.63448715 175.02273560]
[38.56409073 190.08201599]
[30.88404465 203.20014954]
[18.76549721 212.37670898]
[4.05644035 216.21234131]
[-11.00010300 214.12213135]
[-24.10811806 206.42483521]
[-33.26872635 194.29423523]
[-37.08500671 179.58013916]
[-34.97499847 164.52635193]
[-27.26046562 151.42848206]
[-15.11781788 142.28382874]
[-0.39871982 138.48690796]
[14.65227222 140.61672974]
[27.73999023 148.34848022]
[39.71025085 139.30895996]
[51.68050766 130.26943970]
[63.65076447 121.22991943]
[62.42430115 113.83087921]
[47.62622452 116.28381348]
[32.82810593 118.73651123]
[30.37563515 103.93835449]
[45.17329407 101.48573303]
[59.97137451 99.03280640]
[58.74491119 91.63376617]
[44.49821854 86.93996429]
[30.25152588 82.24616241]
[16.00483322 77.55236053]
[1.09071386 83.46409607]
[-12.75788403 75.36496735]
[-14.91750145 59.46793365]
[-3.73146367 47.96784210]
[12.21925735 49.68657684]
[20.69863510 63.30566788]
[34.94532776 67.99947357]
[49.19202042 72.69326782]
[63.43870926 77.38706970]
[74.35569000 72.39257812]
[85.04557037 71.29000854]
[81.38686371 56.74305344]
[77.72815704 42.19609833]
[74.06945038 27.64914513]
[70.41074371 13.10219002]
[55.33569717 13.18205929]
[40.67975616 9.65122986]
[27.29499245 2.71497846]
[15.95958519 -7.22343016]
[7.33255672 -19.58618927]
[1.91547215 -33.65454483]
[0.02327357 -48.61058044]
[1.76597095 -63.58477402]
[7.04224634 -77.70654297]
[15.54534340 -90.15486908]
[26.78090477 -100.20601654]
[40.09570694 -107.27563477]
[54.71564865 -110.95269775]
[69.79074097 -111.02342224]
[84.44454193 -107.48371124]
[97.82509613 -100.53934479]
[109.15447235 -90.59407043]
[117.77400970 -78.22608185]
[123.18256378 -64.15444183]
[125.06568909 -49.19726181]
[123.31391907 -34.22412872]
[118.02908325 -20.10556030]
[109.51844025 -7.66239405]
[98.27678680 2.38194251]
[84.95770264 9.44348431]
[88.61640930 23.99043846]
[92.27510834 38.53739166]
[95.93381500 53.08434677]
[99.59252167 67.63130188]
[113.19947052 68.88737488]
[125.63348389 75.84357452]
[134.52633667 87.71214294]
[137.97489929 102.73519135]
[152.22158813 98.04138947]
[166.46827698 93.34758759]
[180.71498108 88.65378571]
[194.96166992 83.95999146]
[209.20835876 79.26618958]
[208.51588440 64.18563843]
[211.91889954 49.47774506]
[219.16488647 36.23394012]
[229.71612549 25.43699455]
[242.78964233 17.88812065]
[257.41531372 14.14748859]
[272.50781250 14.49268246]
[286.94717407 18.89808464]
[299.66189575 27.03678513]
[309.70846558 38.30484009]
[316.34133911 51.86608124]
[319.06835938 66.71417999]
[317.68713379 81.74729919]
[312.30017090 95.84989166]
[303.30718994 107.97544861]
[291.37557983 117.22417450]
[277.39068604 122.90974426]
[262.39035034 124.61026001]
[247.48762512 122.19952393]
[233.78842163 115.85644531]
[222.30932617 106.05169678]
[213.90216064 93.51287842]
[199.65547180 98.20668030]
[185.40878296 102.90048218]
[171.16207886 107.59428406]
[156.91539001 112.28808594]
[142.66870117 116.98188019]
[157.42167664 119.69291687]
[172.17465210 122.40394592]
[186.76036072 118.90296173]
[201.70129395 120.23291016]
[215.43931580 126.25510406]
[226.54176331 136.34150696]
[233.85081482 149.44027710]
[236.60426331 164.18539429]
[234.51495361 179.03916931]
[227.80076599 192.45259094]
[217.16189575 203.02682495]
[203.70780945 209.65914917]
[188.84158325 211.65789795]
[174.11351013 208.81465149]
[161.05953979 201.42590332]
[151.04096985 190.26219177]
[145.10261536 176.48773193]
[143.86370850 161.53935242]
[136.67231750 148.37562561]
[129.48094177 135.21188354]
[129.48094177 150.21188354]
[129.48094177 165.21188354]
[129.48094177 180.21188354]
[129.48094177 195.21188354]
[129.48094177 210.21188354]
[129.48094177 225.21188354]
[129.48094177 240.21188354]
[129.48094177 255.21188354]
[129.48094177 270.21188354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 33]
[13 32]
[14 31]
[15 30]
[40 52]
[41 51]
[42 50]
[43 49]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
