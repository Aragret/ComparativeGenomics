%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCGAUAGAAAUUGAAxxxxxxxxxxGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[152.48289490 324.90249634]
[164.43597412 315.69454956]
[158.65971375 301.85134888]
[146.61802673 293.08508301]
[148.44439697 277.36965942]
[142.66812134 263.52642822]
[136.89184570 249.68322754]
[131.11557007 235.84001160]
[125.33930206 221.99678040]
[119.56303406 208.15356445]
[113.78675842 194.31034851]
[99.95639801 188.90139771]
[93.90123749 174.94468689]
[99.66841888 160.47482300]
[93.89214325 146.63159180]
[88.11587524 132.78837585]
[92.00244904 147.27612305]
[88.44097900 161.84718323]
[78.30964661 172.90864563]
[64.10662842 177.73298645]
[49.33409500 175.13059998]
[37.63466263 165.74320984]
[31.89316559 151.88552856]
[33.52534103 136.97459412]
[42.12873077 124.68713379]
[55.58191299 118.05298615]
[70.56643677 118.70763397]
[55.80038071 116.06877136]
[41.03432465 113.42990875]
[26.90264893 123.68822479]
[10.04982948 120.64412689]
[0.77257323 106.65161133]
[-14.04518509 104.32051086]
[-20.44160843 106.36825562]
[-26.04939461 105.03256989]
[-29.42561913 101.57184601]
[-44.13357925 98.62636566]
[-58.84154129 95.68087769]
[-73.54950714 92.73539734]
[-86.56106567 101.70616913]
[-102.08960724 98.76676178]
[-110.92230988 85.66107941]
[-107.81889343 70.16448975]
[-94.62055969 61.47084427]
[-79.15763855 64.73792267]
[-70.60401917 78.02743530]
[-55.89606094 80.97292328]
[-41.18809891 83.91840363]
[-26.48013687 86.86388397]
[-11.71408081 89.50274658]
[3.10367703 91.83385468]
[12.38966274 82.84679413]
[25.35280418 80.83898926]
[37.27160645 86.76942444]
[43.67319107 98.66385651]
[58.43924332 101.30271912]
[73.20529938 103.94158173]
[82.79134369 84.05102539]
[101.39005280 80.20600128]
[108.01854706 66.75003815]
[114.64704895 53.29407120]
[121.27555084 39.83810425]
[116.42215729 25.03667450]
[123.33608246 11.48483753]
[137.47689819 6.94908905]
[124.79327393 14.95693970]
[110.66696930 20.00150108]
[95.77996826 21.83923531]
[80.85098267 20.38142204]
[66.60073090 15.69843864]
[53.71717834 8.01637077]
[42.82231903 -2.29391527]
[34.44211960 -14.73466492]
[28.98115349 -28.70527267]
[26.70306396 -43.53127289]
[27.71783257 -58.49691010]
[31.97646523 -72.87967682]
[39.27336884 -85.98522186]
[49.25626755 -97.18083191]
[61.44321442 -105.92601776]
[75.24585724 -111.79859161]
[89.99783325 -114.51502991]
[104.98696899 -113.94420624]
[119.48962402 -110.11366272]
[132.80564880 -103.20832825]
[144.29217529 -93.56158447]
[153.39466858 -81.63914490]
[159.67369080 -68.01659393]
[162.82609558 -53.35159302]
[162.69970703 -38.35212708]
[159.30061340 -23.74232864]
[152.79405212 -10.22930622]
[165.40518188 -18.35084915]
[178.01629639 -26.47239113]
[190.62742615 -34.59393311]
[203.23855591 -42.71547318]
[206.33802795 -58.21285629]
[219.53413391 -66.90987396]
[234.99787903 -63.64673996]
[243.55490112 -50.35941315]
[240.12844849 -34.93102646]
[226.75140381 -26.51497459]
[211.36010742 -30.10434723]
[198.74897766 -21.98280525]
[186.13784790 -13.86126232]
[173.52671814 -5.73972034]
[160.91558838 2.38182187]
[150.93286133 13.57758808]
[155.95491028 27.55308914]
[149.42436218 41.29377747]
[134.73150635 46.46660233]
[128.10301208 59.92256927]
[121.47451782 73.37853241]
[114.84601593 86.83450317]
[121.73249054 108.84345245]
[101.95909119 127.01210785]
[107.73535919 140.85533142]
[113.51163483 154.69854736]
[127.85321045 160.77777100]
[133.51397705 174.89904785]
[127.62997437 188.53407288]
[133.40625000 202.37730408]
[139.18252563 216.22052002]
[144.95878601 230.06373596]
[150.73506165 243.90695190]
[156.51133728 257.75018311]
[162.28761292 271.59338379]
[174.74246216 281.34979248]
[172.50292969 296.07507324]
[178.27920532 309.91827393]
[193.23200989 307.89935303]
[208.19772339 309.82025146]
[222.15594482 315.55001831]
[234.15501404 324.69796753]
[243.37678528 336.64038086]
[249.19250488 350.56301880]
[251.20565796 365.51660156]
[249.27897644 380.48156738]
[243.54382324 394.43759155]
[234.39125061 406.43313599]
[222.44526672 415.65026855]
[208.52038574 421.46063232]
[193.56602478 423.46801758]
[178.60180664 421.53555298]
[164.64799500 415.79501343]
[152.65600586 406.63778687]
[143.44346619 394.68826294]
[137.63848877 380.76113892]
[135.63688660 365.80599976]
[137.57511902 350.84252930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[5 127]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[14 118]
[15 117]
[16 116]
[27 57]
[28 56]
[29 55]
[32 51]
[33 50]
[36 49]
[37 48]
[38 47]
[39 46]
[59 114]
[60 113]
[61 112]
[62 111]
[65 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
