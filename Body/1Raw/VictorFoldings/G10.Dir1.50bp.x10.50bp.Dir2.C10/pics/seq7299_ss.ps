%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACACAUxxxxxxxxxxGCUGGUUUCAAGCCAACCCCAUGGCCUCCAUGACUUUUUCAAAAAGGUAUUAGAAAAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-24.76170540 146.67727661]
[-39.08430099 151.13409424]
[-53.40689850 155.59091187]
[-64.28494263 167.07911682]
[-78.73635864 163.47277832]
[-93.05895996 167.92959595]
[-107.38155365 172.38641357]
[-121.70415497 176.84321594]
[-136.02674866 181.30003357]
[-150.34934998 185.75685120]
[-164.67195129 190.21366882]
[-178.99453735 194.67048645]
[-165.22349548 200.61676025]
[-156.73071289 212.98092651]
[-156.12254333 227.96859741]
[-163.58560181 240.98023987]
[-176.82958984 248.02273560]
[-191.79010010 246.93484497]
[-203.87591553 238.05043030]
[-209.37808228 224.09599304]
[-206.60803223 209.35397339]
[-196.41519165 198.34811401]
[-211.31709290 200.06080627]
[-226.21899414 201.77349854]
[-241.12089539 203.48617554]
[-256.02279663 205.19886780]
[-270.92471313 206.91156006]
[-274.72732544 221.60525513]
[-283.58432007 233.93075562]
[-296.29785156 242.22116089]
[-311.14849854 245.35523987]
[-326.12786865 242.90914917]
[-339.21008301 235.21369934]
[-348.62591553 223.30964661]
[-353.10192871 208.80690002]
[-352.03277588 193.66683960]
[-345.56307983 179.93704224]
[-334.56781006 169.47433472]
[-320.53393555 163.69374084]
[-305.35949707 163.37701416]
[-291.09664917 168.56698608]
[-279.67434692 178.56178284]
[-272.63739014 192.00965881]
[-257.73550415 190.29696655]
[-242.83358765 188.58427429]
[-227.93168640 186.87159729]
[-213.02978516 185.15890503]
[-198.12788391 183.44621277]
[-183.45135498 180.34788513]
[-169.12875366 175.89106750]
[-154.80616760 171.43424988]
[-140.48356628 166.97744751]
[-126.16096497 162.52062988]
[-111.83837128 158.06381226]
[-97.51576996 153.60699463]
[-83.19317627 149.15017700]
[-73.33958435 137.98075867]
[-57.86371613 141.26831055]
[-43.54111862 136.81150818]
[-29.21852112 132.35469055]
[-31.82106209 119.16922760]
[-33.08171844 105.78863525]
[-32.98765182 92.34911346]
[-31.53982544 78.98748016]
[-28.75297546 65.83974457]
[-24.65546989 53.03974152]
[-19.28902054 40.71778107]
[-12.70825577 28.99928856]
[-4.98016500 18.00355530]
[3.81658244 7.84251499]
[13.59243965 -1.38039899]
[24.24789047 -9.57130051]
[35.67446899 -16.64680862]
[47.75585938 -22.53489876]
[60.36906815 -27.17563057]
[73.38571167 -30.52176666]
[86.67327118 -32.53924179]
[100.09649658 -33.20751572]
[113.51873779 -32.51979446]
[126.80335999 -30.48307037]
[139.81513977 -27.11808014]
[152.42161560 -22.45907974]
[164.49446106 -16.55349159]
[172.48437500 -29.24842072]
[180.47428894 -41.94335175]
[188.46420288 -54.63827896]
[186.32229614 -70.53770447]
[197.52113342 -82.02533722]
[213.46992493 -80.28884125]
[221.93412781 -66.66031647]
[216.42073059 -51.59439468]
[201.15913391 -46.64836502]
[193.16921997 -33.95343399]
[185.17930603 -21.25850487]
[177.18939209 -8.56357574]
[189.52642822 1.36293077]
[200.59838867 12.68324375]
[210.24884033 25.23739815]
[218.34138489 38.84799957]
[224.76170349 53.32271576]
[239.08430481 48.86590195]
[253.40690613 44.40908432]
[267.72949219 39.95227051]
[282.05209351 35.49545288]
[295.37942505 25.01602936]
[309.13870239 34.92153931]
[303.42922974 50.88519669]
[286.50891113 49.81805038]
[272.18630981 54.27486801]
[257.86370850 58.73168182]
[243.54112244 63.18849945]
[229.21852112 67.64531708]
[233.20034790 98.61431885]
[229.86364746 129.65945435]
[244.27586365 133.81733704]
[258.68807983 137.97523499]
[273.10031128 142.13311768]
[287.51251221 146.29100037]
[304.40698242 144.87208557]
[310.44729614 160.71351624]
[296.89709473 170.90312195]
[283.35464478 160.70321655]
[268.94241333 156.54533386]
[254.53019714 152.38745117]
[240.11798096 148.22955322]
[225.70576477 144.07167053]
[221.00907898 155.68713379]
[215.24185181 166.80993652]
[208.45510864 177.34170532]
[200.70890808 187.18925476]
[192.07177734 196.26547241]
[182.62010193 204.49005127]
[172.43751526 211.79023743]
[161.61410522 218.10145569]
[150.24560547 223.36787415]
[138.43258667 227.54289246]
[126.27958679 230.58956909]
[113.89409637 232.48097229]
[101.38568115 233.20034790]
[88.86501312 232.74134827]
[76.44285583 231.10801697]
[64.22909546 228.31481934]
[52.33178711 224.38647461]
[40.85618973 219.35771179]
[29.90381813 213.27302551]
[19.57156372 206.18624878]
[9.95083618 198.16007996]
[1.12674487 189.26550293]
[-6.82264566 179.58123779]
[-13.82701015 169.19294739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[83 95]
[84 94]
[85 93]
[86 92]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
