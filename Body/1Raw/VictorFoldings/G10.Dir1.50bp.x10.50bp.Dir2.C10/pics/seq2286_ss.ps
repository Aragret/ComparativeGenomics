%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAACAGCUCUUUGGACACUAGGAAAAAACCUUGUAGAGAGAGUAAAAAAUUUAACACCCAxxxxxxxxxxCAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAACACAAGAACACCUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.48105621 283.74566650]
[105.07205963 264.53793335]
[105.38410950 249.54118347]
[105.69616699 234.54441833]
[106.00822449 219.54766846]
[106.32028198 204.55091858]
[106.63233948 189.55416870]
[106.94439697 174.55740356]
[107.25644684 159.56065369]
[107.56850433 144.56390381]
[107.88056183 129.56715393]
[90.85897827 128.90327454]
[76.98796082 119.29258728]
[70.51028442 103.88294983]
[63.12521744 114.50908661]
[50.86650085 117.14401245]
[40.45697021 110.90309906]
[25.81346893 114.15392303]
[11.16996670 117.40475464]
[-3.47353458 120.65557861]
[-6.66444016 123.81462860]
[-10.33461380 125.57556152]
[-13.97222614 125.96241760]
[-17.12845612 125.16731262]
[-19.46808052 123.51398468]
[-34.33112717 125.53632355]
[-49.19417572 127.55865479]
[-54.73311996 131.35702515]
[-60.48826981 131.68800354]
[-64.71611023 129.34260559]
[-79.65041351 130.74490356]
[-94.58472443 132.14721680]
[-104.47206879 144.47668457]
[-120.19064331 146.12045288]
[-132.41488647 136.10331726]
[-133.89239502 120.36823273]
[-123.74655914 108.25057983]
[-107.99674225 106.93952942]
[-95.98703003 117.21290588]
[-81.05271912 115.81060028]
[-66.11840820 114.40830231]
[-51.21651077 112.69561005]
[-36.35346222 110.67327881]
[-21.49041557 108.65093994]
[-6.72436047 106.01207733]
[7.91914082 102.76125336]
[22.56264305 99.51042175]
[37.20614243 96.25959778]
[49.44228745 83.71859741]
[66.95552063 89.31024933]
[74.54542542 76.37219238]
[70.53768921 61.91750717]
[66.52994537 47.46281815]
[62.52220535 33.00812912]
[58.51446533 18.55344009]
[43.47624588 19.36949921]
[28.61425209 16.93325806]
[14.62361240 11.35866737]
[2.15869284 2.90645766]
[-8.19750023 -8.02804470]
[-15.96058846 -20.93341255]
[-20.76747894 -35.20603943]
[-22.39334297 -50.17836761]
[-20.76213837 -65.15011597]
[-15.95015621 -79.42102814]
[-8.18246460 -92.32362366]
[2.17762780 -103.25443268]
[14.64556217 -111.70219421]
[28.63818932 -117.27179718]
[43.50104904 -119.70273590]
[58.53897858 -118.88130951]
[73.04862976 -114.84594727]
[86.35134888 -107.78537750]
[97.82495880 -98.02984619]
[106.93280792 -86.03563690]
[113.24890900 -72.36373138]
[116.47785187 -57.65359879]
[116.46859741 -42.59325409]
[113.22159576 -27.88709831]
[106.88870239 -14.22296429]
[97.76612854 -2.23994899]
[86.28054047 7.50148058]
[72.96915436 14.54570007]
[76.97689819 29.00038910]
[80.98463440 43.45507812]
[84.99237823 57.90976715]
[89.00011444 72.36445618]
[115.88825226 74.35041809]
[130.49447632 97.46894073]
[144.51118469 92.12742615]
[158.52790833 86.78591156]
[172.54461670 81.44439697]
[186.44717407 75.81244659]
[200.22955322 69.89247894]
[214.01193237 63.97251892]
[227.79431152 58.05255508]
[227.56167603 42.85340118]
[233.16784668 28.72402382]
[243.75793457 17.81905556]
[257.71704102 11.80142307]
[272.91650391 11.58877087]
[287.03848267 17.21352768]
[297.92950439 27.81795692]
[303.92877197 41.78496170]
[304.12142944 56.98467636]
[298.47808838 71.09925842]
[287.85934448 81.97632599]
[273.88446045 87.95721436]
[258.68450928 88.12987518]
[244.57737732 82.46798706]
[233.71427917 71.83493805]
[219.93190002 77.75489807]
[206.14952087 83.67486572]
[192.36714172 89.59482574]
[189.77854919 93.67829895]
[184.56758118 96.14348602]
[177.88612366 95.46111298]
[163.86941528 100.80262756]
[149.85270691 106.14414215]
[135.83598328 111.48564911]
[150.69767761 113.51800537]
[165.55935669 115.55035400]
[180.02171326 111.57037354]
[195.01083374 112.14150238]
[209.12838745 117.21046448]
[221.05738831 126.30437469]
[229.68493652 138.57487488]
[234.20622253 152.87725830]
[234.19941711 167.87725830]
[229.66517639 182.17553711]
[221.02650452 194.43820190]
[209.08927917 203.52130127]
[194.96711731 208.57746887]
[179.97749329 209.13500977]
[165.51873779 205.14192200]
[152.93974304 196.97070312]
[143.41397095 185.38365173]
[137.83007812 171.46173096]
[136.70925903 156.50019836]
[129.79328918 143.18969727]
[122.87731934 129.87919617]
[122.56526184 144.87596130]
[122.25320435 159.87271118]
[121.94114685 174.86946106]
[121.62908936 189.86621094]
[121.31703186 204.86297607]
[121.00498199 219.85972595]
[120.69292450 234.85647583]
[120.38086700 249.85322571]
[120.06880951 264.84997559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[14 50]
[17 48]
[18 47]
[19 46]
[20 45]
[25 44]
[26 43]
[27 42]
[30 41]
[31 40]
[32 39]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[89 120]
[90 119]
[91 118]
[92 117]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
