%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCCCACUCUGCAUCAACUGAACGCAAAUCAGCCACUUUAAUUAAGCUAAGCCCUUACUxxxxxxxxxxAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCUACUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[60.24590302 221.69308472]
[52.71709824 218.97026062]
[46.36996841 232.56120300]
[47.54101944 248.33901978]
[35.14509201 256.59674072]
[28.79796410 270.18771362]
[22.45083427 283.77865601]
[16.10370445 297.36959839]
[18.06182289 313.65142822]
[4.77989292 323.27029419]
[-10.07877445 316.33111572]
[-11.22885609 299.97235107]
[2.51275325 291.02246094]
[8.85988235 277.43151855]
[15.20701218 263.84057617]
[21.55414200 250.24961853]
[19.92910004 235.44392395]
[32.77901840 226.21408081]
[39.12614441 212.62312317]
[28.78311539 206.38491821]
[19.07402802 199.19970703]
[10.08531189 191.13145447]
[1.89697993 182.25199890]
[-5.41807842 172.64036560]
[-11.79474735 162.38212585]
[-17.17626381 151.56857300]
[-21.51472473 140.29597473]
[-24.77151108 128.66468811]
[-26.91763115 116.77823639]
[-41.87788010 117.86954498]
[-56.83812714 118.96085358]
[-71.79837799 120.05216217]
[-80.80455017 132.83586121]
[-95.93403625 136.78968811]
[-110.04314423 130.04676819]
[-116.47000122 115.79091644]
[-112.18003082 100.75328827]
[-99.19882965 92.03421021]
[-83.65571594 93.75054932]
[-72.88968658 105.09191895]
[-57.92943954 104.00060272]
[-42.96919250 102.90929413]
[-28.00894165 101.81798553]
[-23.79157829 67.36199951]
[-10.47277069 35.30563354]
[10.96825409 8.00574780]
[38.95510101 -12.53050423]
[71.43010712 -24.79325104]
[68.94499207 -39.58596039]
[66.45986938 -54.37866592]
[63.97475433 -69.17137146]
[61.48963547 -83.96408081]
[59.00451660 -98.75679016]
[56.51939774 -113.54949188]
[54.03427887 -128.34220886]
[35.70335770 -137.26527405]
[30.87358093 -160.65260315]
[21.85605240 -172.63943481]
[7.50229788 -181.66197205]
[12.19871140 -197.95245361]
[29.15265846 -197.94923401]
[33.84288406 -181.65696716]
[42.86041260 -169.67013550]
[56.98521805 -174.71888733]
[56.36124039 -189.70590210]
[55.73726273 -204.69291687]
[55.11328506 -219.67993164]
[40.82762527 -224.87496948]
[29.62083054 -235.14512634]
[23.20185089 -248.92428589]
[22.54953575 -264.11120605]
[27.76336098 -278.39004517]
[38.04825211 -289.58331299]
[51.83583832 -295.98416138]
[67.02362061 -296.61648560]
[81.29555511 -291.38388062]
[92.47529602 -281.08428955]
[98.85800171 -267.28829956]
[99.47035980 -252.09968567]
[94.21898651 -237.83464050]
[83.90467834 -226.66845703]
[70.10030365 -220.30390930]
[70.72428131 -205.31689453]
[71.34825897 -190.32987976]
[71.97223663 -175.34286499]
[83.07373047 -159.02662659]
[80.83551025 -141.32672119]
[68.82698822 -130.82731628]
[71.31210327 -116.03461456]
[73.79722595 -101.24190521]
[76.28234100 -86.44919586]
[78.76746368 -71.65649414]
[81.25257874 -56.86378479]
[83.73770142 -42.07107544]
[86.22281647 -27.27836990]
[94.20541382 -27.89064407]
[102.21067047 -28.00276184]
[110.20728302 -27.61428452]
[118.16397858 -26.72673035]
[126.04963684 -25.34357071]
[133.83341980 -23.47021675]
[141.48487854 -21.11399078]
[148.97410583 -18.28411102]
[156.27180481 -14.99164486]
[163.34942627 -11.24946594]
[170.17930603 -7.07221127]
[176.73474121 -2.47621632]
[182.99006653 2.52054429]
[188.92082214 7.89852953]
[194.50384521 13.63670635]
[199.71726990 19.71263504]
[204.54071045 26.10255241]
[208.95532227 32.78147125]
[212.94383240 39.72326660]
[216.49063110 46.90079498]
[219.58186340 54.28598404]
[222.20542908 61.84995270]
[224.35107422 69.56311798]
[226.01040649 77.39531708]
[227.17692566 85.31591797]
[227.84608459 93.29394531]
[228.01527405 101.29820251]
[227.68380737 109.29738617]
[226.85298157 117.26020050]
[225.52607727 125.15551758]
[223.70825195 132.95245361]
[221.40661621 140.62051392]
[218.63020325 148.12973022]
[215.38983154 155.45071411]
[211.69819641 162.55482483]
[207.56973267 169.41430664]
[203.02058411 176.00233459]
[198.06854248 182.29310608]
[192.73295593 188.26206970]
[187.03472900 193.88583374]
[180.99610901 199.14244080]
[174.64074707 204.01132202]
[167.99345398 208.47341919]
[161.08027649 212.51130676]
[153.92820740 216.10919189]
[146.56524658 219.25297546]
[139.02017212 221.93038940]
[131.32249451 224.13096619]
[123.50231934 225.84608459]
[115.59023285 227.06903076]
[107.61717224 227.79504395]
[99.61432648 228.02127075]
[91.61299133 227.74682617]
[83.64445496 226.97279358]
[75.73987579 225.70219421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[5 16]
[6 15]
[7 14]
[8 13]
[29 43]
[30 42]
[31 41]
[32 40]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[57 63]
[58 62]
[64 85]
[65 84]
[66 83]
[67 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
