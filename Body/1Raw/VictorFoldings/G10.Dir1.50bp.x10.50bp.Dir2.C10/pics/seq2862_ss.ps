%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAAACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAxxxxxxxxxxGAACCCAUCCCUGAGAAUCCAAAAUUCUCCGUGCCACCUAUCACACCCCAUCCUAAAGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[115.29677582 240.21115112]
[114.98471832 225.21440125]
[114.67266083 210.21765137]
[114.36060333 195.22088623]
[114.04854584 180.22413635]
[113.73649597 165.22738647]
[113.42443848 150.23063660]
[113.11238098 135.23387146]
[112.80032349 120.23712158]
[98.38810730 116.07923126]
[90.13581848 128.60519409]
[91.94650269 144.54574585]
[80.51110077 155.79791260]
[64.60188293 153.72999573]
[56.42303467 139.92832947]
[62.24866867 124.98036957]
[77.60985565 120.35290527]
[85.86214447 107.82694244]
[81.60659790 101.65116119]
[68.83996582 83.12380219]
[54.19646454 86.37462616]
[39.55296326 89.62545013]
[24.94407082 93.02842712]
[10.37136841 96.58319092]
[-4.20133448 100.13795471]
[-6.88051605 115.12934875]
[-15.43099213 127.73130035]
[-28.37134171 135.76045227]
[-43.45956802 137.82569885]
[-58.08155060 133.56922913]
[-69.70394135 123.72849274]
[-76.31307983 110.00846863]
[-76.76390839 94.78622437]
[-70.97830963 80.69911194]
[-59.95867920 70.18780518]
[-45.61422729 65.07345581]
[-30.43021965 66.24214935]
[-17.03738022 73.49140930]
[-7.75609684 85.56525421]
[6.81660604 82.01049042]
[21.38930893 78.45572662]
[27.17970276 73.78485870]
[36.30213928 74.98194885]
[50.94564056 71.73112488]
[65.58914185 68.48030090]
[77.66912842 59.58794785]
[85.12403870 46.57164001]
[92.57894897 33.55532837]
[100.03385925 20.53902054]
[107.48876953 7.52271128]
[97.75830841 -4.07657528]
[92.59313202 -18.27844048]
[92.59851074 -33.36221313]
[97.75448608 -47.50738525]
[107.42063904 -59.01334000]
[120.41555023 -66.50379181]
[135.16116333 -69.09141541]
[149.87446594 -66.48291016]
[157.32937622 -79.49922180]
[156.81137085 -97.87615204]
[172.25271606 -106.15653992]
[179.43522644 -119.32512665]
[186.61772156 -132.49371338]
[173.59051514 -125.05787659]
[159.28776550 -120.53775024]
[144.35333252 -119.13678741]
[129.45947266 -120.91806030]
[115.27662659 -125.80139160]
[102.44322968 -133.56694031]
[91.53696442 -143.86517334]
[83.04877472 -156.23249817]
[77.36075592 -170.11219788]
[74.72894287 -184.87951660]
[75.27181244 -199.86968994]
[78.96492767 -214.40794373]
[85.64203644 -227.83985901]
[95.00258636 -239.56079102]
[106.62519836 -249.04312134]
[119.98670197 -255.86003113]
[134.48562622 -259.70465088]
[149.46932983 -260.40390015]
[164.26329041 -257.92633057]
[178.20161438 -252.38345337]
[190.65682983 -244.02478027]
[201.06829834 -233.22656250]
[208.96734619 -220.47489929]
[213.99839783 -206.34378052]
[215.93498230 -191.46931458]
[214.68994141 -176.52107239]
[210.31930542 -162.17195129]
[203.01849365 -149.06597900]
[211.28900146 -162.55334473]
[226.17369080 -162.00979614]
[239.26684570 -169.32890320]
[252.36000061 -176.64799500]
[265.45315552 -183.96710205]
[278.54629517 -191.28620911]
[291.63946533 -198.60531616]
[297.37225342 -213.58912659]
[312.70443726 -218.31179810]
[325.87448120 -209.15049744]
[326.77944946 -193.13299561]
[314.72512817 -182.54653931]
[298.95855713 -185.51216125]
[285.86541748 -178.19305420]
[272.77224731 -170.87394714]
[259.67910767 -163.55484009]
[246.58595276 -156.23574829]
[233.49279785 -148.91664124]
[226.15879822 -135.95277405]
[210.33760071 -135.97282410]
[199.78631592 -125.31119537]
[192.60380554 -112.14261627]
[185.42129517 -98.97403717]
[188.53221130 -87.24246979]
[182.60250854 -76.19450378]
[170.34568787 -72.04431152]
[162.89077759 -59.02800369]
[172.58554077 -47.65712738]
[177.81480408 -33.62916183]
[177.92936707 -18.63045120]
[172.89607239 -4.47109270]
[163.30422974 7.13350201]
[150.29663086 14.77043629]
[135.43344116 17.50133896]
[120.50508118 14.97762108]
[113.05017090 27.99393082]
[105.59526062 41.01023865]
[98.14035034 54.02655029]
[90.68544006 67.04286194]
[98.83908081 54.45246124]
[111.17562103 45.91959381]
[125.83304596 42.73214722]
[140.59906006 45.37121582]
[153.24497986 53.43848038]
[161.86210632 65.71631622]
[165.14981079 80.35157776]
[162.61189270 95.13531494]
[154.63137817 107.83616638]
[142.41282654 116.53713226]
[127.79708099 119.92506409]
[128.10913086 134.92181396]
[128.42118835 149.91857910]
[128.73324585 164.91532898]
[129.04530334 179.91207886]
[129.35736084 194.90882874]
[129.66941833 209.90559387]
[129.98147583 224.90234375]
[130.29353333 239.89909363]
[132.88452148 259.10681152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 18]
[11 17]
[20 45]
[21 44]
[22 43]
[23 41]
[24 40]
[25 39]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[58 118]
[59 117]
[61 114]
[62 113]
[63 112]
[91 111]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
