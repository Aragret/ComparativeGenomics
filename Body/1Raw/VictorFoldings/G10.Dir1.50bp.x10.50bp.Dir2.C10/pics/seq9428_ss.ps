%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUUAGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCCCUxxxxxxxxxxUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCUUCUUAUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.51304626 252.39848328]
[114.51304626 237.39848328]
[114.51304626 222.39848328]
[114.51304626 207.39848328]
[114.51304626 192.39848328]
[114.51304626 177.39848328]
[114.51304626 162.39848328]
[114.51304626 147.39848328]
[114.51304626 132.39848328]
[114.51304626 117.39848328]
[100.19044495 112.94166565]
[91.67935944 125.29323578]
[90.91293335 141.67446899]
[76.22094727 148.95991516]
[62.71726608 139.65493774]
[64.29331207 123.33170319]
[79.32778168 116.78215027]
[87.83887482 104.43058014]
[91.39363861 89.85787201]
[89.52602386 74.97459412]
[87.65840912 60.09131241]
[85.79079437 45.20803452]
[83.92317963 30.32475471]
[82.05557251 15.44147396]
[67.07804108 16.35215187]
[52.07294083 16.30134201]
[37.10192490 15.28925419]
[22.22651100 13.32004547]
[7.50783062 10.40180779]
[-6.99363613 6.54653406]
[-21.21829796 1.77006567]
[-35.10770416 -3.90796900]
[-48.60477829 -10.46423817]
[-61.65405655 -17.87179947]
[-74.20191956 -26.10021591]
[-86.19680023 -35.11567307]
[-97.58941650 -44.88112259]
[-108.33294678 -55.35643768]
[-118.38324738 -66.49857330]
[-127.69901276 -78.26174164]
[-136.24195862 -90.59761047]
[-143.97700500 -103.45548248]
[-150.87232971 -116.78252411]
[-156.89964294 -130.52397156]
[-162.03413391 -144.62335205]
[-166.25471497 -159.02273560]
[-169.54406738 -173.66294861]
[-171.88864136 -188.48384094]
[-173.27882385 -203.42448425]
[-173.70889282 -218.42350769]
[-173.17709351 -233.41926575]
[-171.68559265 -248.35014343]
[-169.24053955 -263.15478516]
[-165.85195923 -277.77236938]
[-161.53378296 -292.14279175]
[-156.30377197 -306.20700073]
[-150.18339539 -319.90725708]
[-143.19781494 -333.18722534]
[-135.37574768 -345.99230957]
[-126.74930573 -358.26995850]
[-117.35395813 -369.96966553]
[-107.22831726 -381.04336548]
[-96.41397858 -391.44555664]
[-84.95538330 -401.13351440]
[-72.89962006 -410.06738281]
[-60.29623032 -418.21051025]
[-47.19700241 -425.52938843]
[-33.65576553 -431.99392700]
[-19.72816467 -437.57763672]
[-5.47142839 -442.25750732]
[9.05585575 -446.01431274]
[23.79399300 -448.83264160]
[38.68242264 -450.70089722]
[53.65995789 -451.61141968]
[68.66506195 -451.56042480]
[83.63606262 -450.54818726]
[98.51145935 -448.57879639]
[113.23010254 -445.66040039]
[127.73152924 -441.80496216]
[141.95613098 -437.02835083]
[155.84547424 -431.35015869]
[169.34248352 -424.79373169]
[182.39167786 -417.38604736]
[194.93945312 -409.15747070]
[206.93423462 -400.14190674]
[218.32673645 -390.37631226]
[229.07014465 -379.90087891]
[239.12033081 -368.75863647]
[248.43595886 -356.99536133]
[256.97879028 -344.65939331]
[264.71368408 -331.80145264]
[271.60885620 -318.47433472]
[277.63601685 -304.73281860]
[282.77035522 -290.63336182]
[286.99078369 -276.23394775]
[290.27996826 -261.59368896]
[292.62438965 -246.77278137]
[294.01440430 -231.83210754]
[294.44430542 -216.83308411]
[293.91232300 -201.83732605]
[292.42065430 -186.90646362]
[289.97543335 -172.10185242]
[286.58670044 -157.48432922]
[282.26837158 -143.11395264]
[277.03820801 -129.04977417]
[270.91766357 -115.34960175]
[263.93194580 -102.06971741]
[256.10971069 -89.26469421]
[247.48315430 -76.98715973]
[238.08767700 -65.28755951]
[227.96191406 -54.21396255]
[217.14746094 -43.81188583]
[205.68875122 -34.12406540]
[193.63288879 -25.19031525]
[181.02941895 -17.04734612]
[167.93009949 -9.72861671]
[154.38879395 -3.26420379]
[140.46113586 2.31932974]
[126.20434570 6.99903965]
[111.67701721 10.75569534]
[96.93885040 13.57386112]
[98.80646515 28.45713997]
[100.67407227 43.34041977]
[102.54168701 58.22370148]
[104.40930176 73.10697937]
[106.27691650 87.99025726]
[105.83303833 72.99682617]
[110.66385651 58.79601288]
[120.15853882 47.18347168]
[133.11648560 39.62758255]
[147.89921570 37.08376694]
[162.63748169 39.87368774]
[175.46765137 47.64456177]
[184.76741028 59.41378403]
[189.36080933 73.69316101]
[188.66702271 88.67710876]
[182.77377319 102.47093964]
[172.42626953 113.33045959]
[158.93290710 119.88249969]
[143.99990845 121.29858398]
[129.51304626 117.39848328]
[129.51304626 132.39848328]
[129.51304626 147.39848328]
[129.51304626 162.39848328]
[129.51304626 177.39848328]
[129.51304626 192.39848328]
[129.51304626 207.39848328]
[129.51304626 222.39848328]
[129.51304626 237.39848328]
[129.51304626 252.39848328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 18]
[12 17]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[24 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
