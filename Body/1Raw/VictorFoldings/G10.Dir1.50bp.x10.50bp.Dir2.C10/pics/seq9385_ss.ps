%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACAACUCAACGGCUACAUAGAAAAAUCCACCCCUUACGAGUGCGGCUUCGACCCUAUAUxxxxxxxxxxAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUAUCUCGAACUGACACUGAGCCACAACCCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[105.85768127 411.77850342]
[105.85768127 396.77850342]
[105.85768127 381.77850342]
[105.85768127 366.77850342]
[105.85768127 351.77850342]
[105.85768127 336.77850342]
[105.85768127 321.77850342]
[105.85768127 306.77850342]
[105.85768127 291.77850342]
[105.85768127 276.77850342]
[88.48750305 270.47659302]
[74.78522491 258.03143311]
[66.81817627 241.28746033]
[65.80098724 222.74018860]
[71.91042328 205.16423035]
[84.25530243 191.19822693]
[101.00639343 182.94873047]
[99.46910095 168.02772522]
[97.93180847 153.10670471]
[96.39451599 138.18568420]
[72.35746765 126.59015656]
[61.70318604 102.12134552]
[69.58981323 76.62551117]
[59.71410370 65.33523560]
[49.83839798 54.04495621]
[41.78073502 49.60988617]
[39.87873840 42.41998672]
[30.23692322 30.92932129]
[20.59510994 19.43865585]
[10.95329571 7.94798851]
[2.98839068 3.34841490]
[1.23441637 -3.87901688]
[-8.16944122 -15.56522560]
[-17.57329750 -27.25143433]
[-30.30431175 -19.28540421]
[-43.88815308 -12.88106251]
[-58.13412857 -8.12831306]
[-72.84223938 -5.09387827]
[-87.80601501 -3.82035685]
[-102.81537628 -4.32562733]
[-117.65962982 -6.60259581]
[-132.13037109 -10.61929798]
[-146.02445984 -16.31934547]
[-159.14685059 -23.62271690]
[-171.31332397 -32.42688751]
[-182.35307312 -42.60825729]
[-192.11111450 -54.02389908]
[-200.45048523 -66.51354980]
[-207.25408936 -79.90187836]
[-212.42640686 -94.00093842]
[-215.89485168 -108.61278534]
[-217.61073303 -123.53231049]
[-217.54994202 -138.55004883]
[-215.71333313 -153.45520020]
[-212.12670898 -168.03849792]
[-206.84040833 -182.09521484]
[-199.92864990 -195.42802429]
[-191.48844910 -207.84974670]
[-181.63829041 -219.18601990]
[-170.51647949 -229.27767944]
[-158.27912903 -237.98306274]
[-145.09805298 -245.17996216]
[-131.15826416 -250.76733398]
[-116.65547943 -254.66676331]
[-101.79328156 -256.82348633]
[-86.78031158 -257.20721436]
[-71.82733917 -255.81259155]
[-57.14427567 -252.65917969]
[-42.93724823 -247.79125977]
[-29.40570068 -241.27716064]
[-16.73959351 -233.20831299]
[-5.11674166 -223.69802856]
[5.29968929 -212.87979126]
[14.36346912 -200.90547180]
[21.94735527 -187.94317627]
[27.94488525 -174.17488098]
[32.27185822 -159.79386902]
[34.86753464 -145.00201416]
[35.69546890 -130.00698853]
[34.74404907 -115.01928711]
[32.02661896 -100.24931335]
[27.58133698 -85.90442657]
[21.47060204 -72.18599701]
[13.78020287 -59.28661728]
[4.61809826 -47.38736343]
[-5.88708925 -36.65529251]
[3.51676774 -24.96908188]
[12.92062473 -13.28287411]
[22.44396210 -1.69382548]
[32.08577728 9.79684162]
[41.72759247 21.28750801]
[51.36940384 32.77817535]
[61.12868118 44.16924667]
[71.00438690 55.45952988]
[80.88008881 66.74980927]
[86.76484680 64.00032043]
[93.02915955 62.28324509]
[99.49338531 61.64782333]
[105.97214508 62.11227798]
[112.27963257 63.66328430]
[118.23495483 66.25637054]
[123.66733551 69.81716919]
[128.42097473 74.24355316]
[132.35954285 79.40859985]
[135.37010193 85.16416168]
[137.36630249 91.34519958]
[152.35919189 90.88327026]
[167.35206604 90.42134857]
[182.34495544 89.95941925]
[190.19364929 76.67778778]
[203.98722839 69.76831818]
[219.32420349 71.43579102]
[231.31062317 81.14811707]
[236.12165833 95.80613708]
[232.22210693 110.73252869]
[220.85632324 121.16432953]
[205.65107727 123.77279663]
[191.45831299 117.72557068]
[182.80688477 104.95230865]
[167.81399536 105.41423035]
[152.82110596 105.87615967]
[137.82823181 106.33808136]
[136.02714539 113.16017914]
[133.00688171 119.53692627]
[128.86964417 125.25252533]
[123.75541687 130.11355591]
[117.83729553 133.95552063]
[111.31553650 136.64839172]
[112.85282898 151.56941223]
[114.39012146 166.49043274]
[115.92741394 181.41143799]
[127.50063324 183.51080322]
[138.21197510 188.34133911]
[147.42814636 195.61114502]
[154.60574341 204.88426208]
[159.32336426 215.60685730]
[161.30628967 227.14027405]
[160.44250488 238.79905701]
[156.78903198 249.89173889]
[150.56811523 259.76181030]
[142.15383911 267.82656860]
[132.04953003 273.61157227]
[120.85768127 276.77850342]
[120.85768127 291.77850342]
[120.85768127 306.77850342]
[120.85768127 321.77850342]
[120.85768127 336.77850342]
[120.85768127 351.77850342]
[120.85768127 366.77850342]
[120.85768127 381.77850342]
[120.85768127 396.77850342]
[120.85768127 411.77850342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[17 131]
[18 130]
[19 129]
[20 128]
[23 95]
[24 94]
[25 93]
[27 92]
[28 91]
[29 90]
[30 89]
[32 88]
[33 87]
[34 86]
[106 122]
[107 121]
[108 120]
[109 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
