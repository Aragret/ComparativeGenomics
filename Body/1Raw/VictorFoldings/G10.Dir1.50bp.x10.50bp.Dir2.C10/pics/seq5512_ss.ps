%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCAxxxxxxxxxxAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCUAACAAACUAGGAGGCGUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[47.32962799 195.08024597]
[39.17296219 207.66868591]
[31.01629448 220.25712585]
[22.85962868 232.84556580]
[14.70296383 245.43400574]
[13.69210625 261.22290039]
[0.27793062 267.69662476]
[-7.87873507 280.28506470]
[-16.03540039 292.87350464]
[-17.04625893 308.66238403]
[-30.46043396 315.13610840]
[-38.61709976 327.72454834]
[-42.15579987 344.30505371]
[-59.06796646 345.49459839]
[-64.89276886 329.57266235]
[-51.20553970 319.56787109]
[-43.04887390 306.97943115]
[-42.62143707 292.09097290]
[-28.62384033 284.71682739]
[-20.46717453 272.12838745]
[-12.31050873 259.53994751]
[-11.88307095 244.65147400]
[2.11452436 237.27734375]
[10.27118969 224.68890381]
[18.42785645 212.10046387]
[26.58452225 199.51202393]
[34.74118805 186.92358398]
[28.01012421 181.43635559]
[21.73860741 175.42927551]
[15.96666813 168.94070435]
[10.73115158 162.01205444]
[6.06547976 154.68754578]
[1.99943507 147.01394653]
[-1.44102728 139.04023743]
[-4.23394489 130.81730652]
[-6.36148977 122.39766693]
[-7.81008005 113.83504486]
[-8.57046890 105.18410492]
[-8.63780308 96.50008392]
[-8.01165295 87.83839417]
[-6.69601393 79.25434113]
[-4.69928598 70.80271912]
[-2.03421378 62.53747177]
[-15.72483921 56.40829849]
[-29.41546440 50.27912521]
[-43.10609055 44.14995193]
[-59.35455322 46.36795807]
[-69.18438721 33.24140549]
[-62.48350525 18.27376556]
[-46.14519882 16.86246300]
[-36.97691727 30.45932579]
[-23.28629112 36.58849716]
[-9.59566593 42.71767426]
[4.09496021 48.84684753]
[23.24880028 23.03458405]
[49.11434937 3.95276046]
[79.42972565 -6.72996521]
[111.54391479 -8.07941437]
[142.64862061 0.02241919]
[149.47219849 -13.33568001]
[156.29577637 -26.69377899]
[163.11935425 -40.05187988]
[162.50674438 -55.86122131]
[175.18681335 -63.67562866]
[182.01039124 -77.03372955]
[188.83396912 -90.39183044]
[195.65754700 -103.74992371]
[202.48112488 -117.10802460]
[209.30468750 -130.46612549]
[197.18591309 -139.36170959]
[186.65112305 -150.08618164]
[177.97320557 -162.36175537]
[171.37690735 -175.87046814]
[167.03312683 -190.26239014]
[165.05435181 -205.16476440]
[165.49185181 -220.19157410]
[168.33428955 -234.95356750]
[173.50802612 -249.06840515]
[180.87907410 -262.17047119]
[190.25650024 -273.92034912]
[201.39738464 -284.01376343]
[214.01318359 -292.18920898]
[227.77708435 -298.23495483]
[242.33259583 -301.99438477]
[257.30267334 -303.37011719]
[272.29959106 -302.32653809]
[286.93484497 -298.89065552]
[300.82937622 -293.15148926]
[313.62329102 -285.25769043]
[324.98516846 -275.41372681]
[334.62072754 -263.87457275]
[342.28039551 -250.93911743]
[347.76571655 -236.94242859]
[350.93469238 -222.24705505]
[351.70513916 -207.23364258]
[350.05718994 -192.29107666]
[346.03347778 -177.80639648]
[339.73825073 -164.15480042]
[331.33453369 -151.68989563]
[321.04003906 -140.73454285]
[309.12142944 -131.57252502]
[295.88739014 -124.44114685]
[281.68072510 -119.52513885]
[266.86944580 -116.95183563]
[251.83717346 -116.78789520]
[236.97328186 -119.03755188]
[222.66279602 -123.64254761]
[215.83921814 -110.28444672]
[209.01564026 -96.92635345]
[202.19206238 -83.56825256]
[195.36849976 -70.21015167]
[188.54492188 -56.85205460]
[189.64559937 -41.99817276]
[176.47744751 -33.22830200]
[169.65386963 -19.87020493]
[162.83029175 -6.51210499]
[156.00672913 6.84599447]
[163.62057495 11.87029743]
[170.78631592 17.51533699]
[177.45347595 23.74135399]
[183.57508850 30.50449562]
[189.10806274 37.75712585]
[194.01339722 45.44815826]
[198.25654602 53.52342606]
[201.80764771 61.92604828]
[204.64166260 70.59684753]
[206.73863220 79.47473907]
[208.08380127 88.49720001]
[208.66767883 97.60068512]
[208.48617554 106.72106934]
[207.54054260 115.79411316]
[205.83744812 124.75591278]
[203.38890076 133.54333496]
[200.21214294 142.09451294]
[196.32954407 150.34918213]
[191.76844788 158.24923706]
[186.56098938 165.73901367]
[180.74383545 172.76574707]
[174.35797119 179.27996826]
[167.44837952 185.23577881]
[160.06370544 190.59124756]
[152.25598145 195.30862427]
[144.08018494 199.35470581]
[135.59391785 202.70100403]
[126.85694885 205.32391357]
[117.93081665 207.20498657]
[108.87837982 208.33096313]
[99.76342010 208.69390869]
[90.65011597 208.29127502]
[81.60267639 207.12591553]
[72.68481445 205.20599365]
[63.95934296 202.54507446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[7 21]
[8 20]
[9 19]
[11 17]
[12 16]
[43 54]
[44 53]
[45 52]
[46 51]
[59 117]
[60 116]
[61 115]
[62 114]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
