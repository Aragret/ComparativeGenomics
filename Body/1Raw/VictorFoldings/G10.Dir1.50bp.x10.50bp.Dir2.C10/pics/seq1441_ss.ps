%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAACUCAAAGGACCUGGCxxxxxxxxxxAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 251.83639526]
[92.50000000 236.83639526]
[92.50000000 221.83639526]
[92.50000000 206.83639526]
[92.50000000 191.83639526]
[92.50000000 176.83639526]
[92.50000000 161.83639526]
[92.50000000 146.83639526]
[92.50000000 131.83639526]
[92.50000000 116.83638763]
[86.96044922 111.78037262]
[79.76906586 124.94410706]
[72.57768250 138.10784912]
[69.06332397 152.69035339]
[57.05827713 161.68360901]
[42.07586288 160.95748901]
[30.99675751 150.84544373]
[28.90904617 135.99143982]
[36.77150726 123.21717834]
[50.97328949 118.38925171]
[63.42731476 110.02879333]
[75.88134003 101.66832733]
[70.34178162 96.61231232]
[55.40413284 97.97852325]
[40.51491165 99.79818726]
[25.68788910 102.06960297]
[10.86086369 104.34101868]
[-3.96616125 106.61243439]
[-18.79318619 108.88385010]
[-27.07303047 118.82361603]
[-39.51060104 120.38305664]
[-49.33696365 113.26541901]
[-64.20697784 115.23587036]
[-76.87203217 125.65357208]
[-92.12943268 119.64160919]
[-94.28368378 103.38457489]
[-81.11866760 93.60630798]
[-66.17742920 100.36585236]
[-51.30741501 98.39540100]
[-38.02746201 86.96164703]
[-21.06460190 94.05682373]
[-6.23757792 91.78540802]
[8.58944702 89.51399231]
[23.41647148 87.24257660]
[38.24349594 84.97116089]
[40.63219833 82.30252838]
[44.45677185 80.68665314]
[49.19470215 80.79677582]
[54.03791428 83.04087067]
[68.97557068 81.67465973]
[88.58258057 78.49975586]
[100.77055359 87.36837769]
[108.57560730 74.55895996]
[116.38065338 61.74954224]
[124.18570709 48.94012451]
[131.99075317 36.13070679]
[139.79580688 23.32128906]
[127.74050140 14.37786770]
[116.54841614 4.37524271]
[106.31230164 -6.60370016]
[97.11697388 -18.46798325]
[89.03863525 -31.11929512]
[82.14421844 -44.45280075]
[76.49086761 -58.35800934]
[72.12541962 -72.71969604]
[69.08404541 -87.41885376]
[67.39195251 -102.33367920]
[67.06316376 -117.34058380]
[68.10040283 -132.31521606]
[70.49507141 -147.13346863]
[74.22733307 -161.67257690]
[79.26625061 -175.81204224]
[85.57007599 -189.43470764]
[93.08657074 -202.42768860]
[101.75344849 -214.68331909]
[111.49889374 -226.10003662]
[122.24214935 -236.58325195]
[133.89419556 -246.04608154]
[146.35847473 -254.41011047]
[159.53169250 -261.60604858]
[173.30470276 -267.57424927]
[187.56336975 -272.26525879]
[202.18954468 -275.64019775]
[217.06202698 -277.67114258]
[232.05757141 -278.34121704]
[247.05191040 -277.64486694]
[261.92080688 -275.58789062]
[276.54104614 -272.18734741]
[290.79147339 -267.47137451]
[304.55401611 -261.47903442]
[317.71463013 -254.26005554]
[330.16421509 -245.87420654]
[341.79968262 -236.39099121]
[352.52456665 -225.88897705]
[362.25000000 -214.45520020]
[370.89538574 -202.18441772]
[378.38912964 -189.17828369]
[384.66906738 -175.54460144]
[389.68322754 -161.39633179]
[393.39001465 -146.85070801]
[395.75872803 -132.02828979]
[396.76974487 -117.05186462]
[396.41467285 -102.04556274]
[394.69647217 -87.13372040]
[391.62933350 -72.43991089]
[387.23873901 -58.08588791]
[381.56106567 -44.19060516]
[374.64331055 -30.86919403]
[366.54281616 -18.23205185]
[357.32672119 -6.38389015]
[347.07138062 4.57710838]
[335.86181641 14.56011677]
[323.79086304 23.48241043]
[310.95855713 31.27005577]
[297.47125244 37.85852051]
[283.44070435 43.19320679]
[268.98318481 47.22991562]
[254.21846008 49.93518829]
[239.26892090 51.28661346]
[224.25842285 51.27299118]
[209.31135559 49.89443207]
[194.55157471 47.16236115]
[180.10139465 43.09942245]
[166.08055115 37.73927307]
[152.60522461 31.12633896]
[144.80017090 43.93575668]
[136.99511719 56.74517441]
[129.19007874 69.55459595]
[121.38502502 82.36401367]
[113.57997131 95.17343140]
[123.82112122 84.21355438]
[137.40031433 77.84130096]
[152.37489319 76.96829224]
[166.60256958 81.71942139]
[178.04791260 91.41498566]
[185.07356262 104.66792297]
[186.67439270 119.58225250]
[182.62139893 134.02432251]
[173.49440002 145.92802429]
[160.59913635 153.59039307]
[145.78039551 155.91525269]
[131.15817261 152.57000732]
[118.82434845 144.03321838]
[110.54340363 131.52618408]
[107.50000000 116.83638763]
[107.50000000 131.83639526]
[107.50000000 146.83639526]
[107.50000000 161.83639526]
[107.50000000 176.83639526]
[107.50000000 191.83639526]
[107.50000000 206.83639526]
[107.50000000 221.83639526]
[107.50000000 236.83639526]
[107.50000000 251.83639526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[23 50]
[24 49]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[32 39]
[33 38]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
