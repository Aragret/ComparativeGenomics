%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAxxxxxxxxxxUAUUUAUUACCUCAGAAGUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 311.02532959]
[92.50000000 296.02532959]
[92.50000000 281.02532959]
[92.50000000 266.02532959]
[92.50000000 251.02532959]
[92.50000000 236.02532959]
[92.50000000 221.02532959]
[92.50000000 206.02532959]
[92.50000000 191.02532959]
[92.50000000 176.02532959]
[77.81385040 173.10180664]
[63.98011780 167.36964417]
[51.53031158 159.04904175]
[40.94276810 148.45971680]
[32.62427521 136.00849915]
[26.89444160 122.17379761]
[23.97340775 107.48715210]
[23.97340775 92.51284790]
[26.89444160 77.82620239]
[32.62427521 63.99150085]
[40.94276810 51.54028702]
[51.53031158 40.95095825]
[63.98011780 32.63036346]
[77.81385040 26.89818764]
[92.50000000 23.97467422]
[92.50000000 8.97467422]
[92.50000000 -6.02532578]
[92.50000000 -21.02532578]
[77.52671051 -22.00655365]
[62.64965439 -23.96498489]
[47.93253708 -26.89223099]
[33.43838501 -30.77575874]
[19.22926140 -35.59893799]
[5.36601305 -41.34111786]
[-8.09199429 -47.97770309]
[-21.08713150 -55.48027802]
[-33.56375122 -63.81671906]
[-45.46842957 -72.95131683]
[-56.75017929 -82.84497070]
[-67.36070251 -93.45529938]
[-77.25454712 -104.73687744]
[-86.38936615 -116.64139557]
[-94.72602081 -129.11785889]
[-102.22882843 -142.11286926]
[-108.86565399 -155.57075500]
[-114.60807800 -169.43391418]
[-119.43150330 -183.64294434]
[-123.31529236 -198.13702393]
[-126.24279785 -212.85409546]
[-128.20149231 -227.73110962]
[-129.18298340 -242.70439148]
[-129.18307495 -257.70980835]
[-128.20175171 -272.68307495]
[-126.24324036 -287.56011963]
[-123.31590271 -302.27722168]
[-119.43228912 -316.77136230]
[-114.60903168 -330.98043823]
[-108.86676788 -344.84365845]
[-102.23010254 -358.30163574]
[-94.72744751 -371.29672241]
[-86.39093781 -383.77328491]
[-77.25626373 -395.67791748]
[-67.36254883 -406.95962524]
[-56.75215530 -417.57006836]
[-45.47052002 -427.46383667]
[-33.56595230 -436.59860229]
[-21.08942986 -444.93518066]
[-8.09438038 -452.43789673]
[5.36354923 -459.07464600]
[19.22673035 -464.81698608]
[33.43579483 -469.64035034]
[47.92990112 -473.52404785]
[62.64698410 -476.45147705]
[77.52401733 -478.41006470]
[92.49729919 -479.39147949]
[107.50270081 -479.39147949]
[122.47598267 -478.41006470]
[137.35301208 -476.45147705]
[152.07009888 -473.52404785]
[166.56420898 -469.64035034]
[180.77326965 -464.81698608]
[194.63644409 -459.07464600]
[208.09437561 -452.43789673]
[221.08943176 -444.93518066]
[233.56594849 -436.59860229]
[245.47052002 -427.46383667]
[256.75216675 -417.57006836]
[267.36254883 -406.95962524]
[277.25625610 -395.67791748]
[286.39093018 -383.77328491]
[294.72744751 -371.29672241]
[302.23010254 -358.30163574]
[308.86676025 -344.84365845]
[314.60903931 -330.98043823]
[319.43228149 -316.77136230]
[323.31591797 -302.27722168]
[326.24322510 -287.56011963]
[328.20175171 -272.68307495]
[329.18307495 -257.70980835]
[329.18298340 -242.70439148]
[328.20150757 -227.73110962]
[326.24279785 -212.85409546]
[323.31527710 -198.13702393]
[319.43151855 -183.64294434]
[314.60806274 -169.43391418]
[308.86566162 -155.57075500]
[302.22882080 -142.11286926]
[294.72601318 -129.11785889]
[286.38937378 -116.64139557]
[277.25454712 -104.73687744]
[267.36068726 -93.45529938]
[256.75018311 -82.84497070]
[245.46842957 -72.95131683]
[233.56375122 -63.81671906]
[221.08712769 -55.48027802]
[208.09199524 -47.97770309]
[194.63398743 -41.34111786]
[180.77073669 -35.59893799]
[166.56161499 -30.77575874]
[152.06745911 -26.89223099]
[137.35034180 -23.96498489]
[122.47328949 -22.00655365]
[107.50000000 -21.02532578]
[107.50000000 -6.02532578]
[107.50000000 8.97467422]
[107.50000000 23.97467422]
[122.18614960 26.89818764]
[136.01988220 32.63036346]
[148.46969604 40.95095825]
[159.05723572 51.54028702]
[167.37571716 63.99150085]
[173.10556030 77.82620239]
[176.02659607 92.51284790]
[176.02659607 107.48715210]
[173.10556030 122.17379761]
[167.37571716 136.00849915]
[159.05723572 148.45971680]
[148.46969604 159.04904175]
[136.01988220 167.36964417]
[122.18614960 173.10180664]
[107.50000000 176.02532959]
[107.50000000 191.02532959]
[107.50000000 206.02532959]
[107.50000000 221.02532959]
[107.50000000 236.02532959]
[107.50000000 251.02532959]
[107.50000000 266.02532959]
[107.50000000 281.02532959]
[107.50000000 296.02532959]
[107.50000000 311.02532959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 126]
[26 125]
[27 124]
[28 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
