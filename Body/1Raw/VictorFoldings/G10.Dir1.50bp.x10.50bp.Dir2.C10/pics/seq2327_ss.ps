%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCxxxxxxxxxxAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 302.01260376]
[92.50000000 287.01260376]
[92.50000000 272.01260376]
[92.50000000 257.01260376]
[92.50000000 242.01260376]
[92.50000000 227.01260376]
[92.50000000 212.01260376]
[92.50000000 197.01260376]
[92.50000000 182.01260376]
[92.50000000 167.01260376]
[83.39332581 165.35409546]
[74.59959412 162.46406555]
[66.28450012 158.39695740]
[58.60474014 153.22943115]
[51.70502472 147.05885315]
[45.71537781 140.00149536]
[32.72499847 147.50149536]
[26.81221008 154.54669189]
[19.39000511 155.01898193]
[6.24837399 162.25068665]
[-6.89325714 169.48239136]
[-7.84094667 184.88061523]
[-16.98152161 197.30854797]
[-31.39826012 202.80047607]
[-46.49082947 199.60392761]
[-57.44325256 188.73893738]
[-60.76064301 173.67247009]
[-55.38443756 159.21218872]
[-43.03016281 149.97230530]
[-27.64002609 148.90122986]
[-14.12495995 156.34075928]
[-0.98332834 149.10905457]
[12.15830326 141.87734985]
[25.22499847 134.51110840]
[38.21537781 127.01111603]
[32.87255478 106.39107513]
[34.22827148 85.13327789]
[42.14724731 65.35900879]
[55.83925629 49.04150391]
[73.93799591 37.80907440]
[94.63742065 32.78257370]
[115.87196350 34.46359634]
[121.00226593 20.36820602]
[126.13256836 6.27281713]
[131.26287842 -7.82257223]
[123.48905182 -31.55219078]
[146.20275879 -48.52735901]
[146.81857300 -63.51471329]
[147.43440247 -78.50206757]
[148.05023193 -93.48941803]
[148.66606140 -108.47676849]
[149.28187561 -123.46412659]
[149.89770508 -138.45147705]
[141.47218323 -126.04138184]
[130.76069641 -115.54071045]
[118.18557739 -107.36351776]
[104.24267578 -101.83221436]
[89.48172760 -99.16489410]
[74.48477173 -99.46673584]
[59.84310532 -102.72583008]
[46.13405228 -108.81367493]
[33.89814758 -117.49023438]
[23.61784744 -128.41339111]
[15.69849586 -141.15246582]
[10.45234585 -155.20513916]
[8.08625126 -170.01734924]
[8.69350529 -185.00506592]
[12.25016403 -199.57730103]
[18.61599159 -213.15950012]
[27.53998566 -225.21612549]
[38.67028046 -235.27180481]
[51.56801987 -242.93002319]
[65.72464752 -247.88883972]
[80.58197784 -249.95272827]
[95.55420685 -249.04031372]
[110.05097198 -245.18757629]
[123.50069427 -238.54640198]
[135.37304688 -229.37867737]
[145.19990540 -218.04585266]
[152.59382629 -204.99481201]
[157.26325989 -190.74011230]
[159.02407837 -175.84381104]
[157.80795288 -160.89912415]
[166.72410583 -172.96154785]
[175.64025879 -185.02398682]
[168.09768677 -198.25386047]
[166.59474182 -213.40843201]
[171.39181519 -227.86207581]
[181.65777588 -239.11062622]
[195.61399841 -245.20518494]
[210.84248352 -245.08984375]
[224.70478821 -238.78459167]
[234.79919434 -227.38183594]
[239.37678528 -212.85717773]
[237.64447021 -197.72711182]
[229.90237427 -184.61300659]
[217.49186707 -175.78695679]
[202.56314087 -172.77813721]
[187.70268250 -176.10783386]
[178.78652954 -164.04539490]
[169.87037659 -151.98297119]
[164.88505554 -137.83564758]
[164.26924133 -122.84829712]
[163.65341187 -107.86094666]
[163.03758240 -92.87359619]
[162.42175293 -77.88623810]
[161.80593872 -62.89888763]
[161.19010925 -47.91153336]
[171.29554749 -36.82640076]
[186.27578735 -36.05673981]
[201.25602722 -35.28707886]
[210.16789246 -47.88002396]
[224.48182678 -53.63456726]
[239.63031006 -50.71446228]
[250.77951050 -40.05149460]
[254.37176514 -25.04818726]
[249.26078796 -10.49203682]
[237.07748413 -1.02785861]
[221.70950317 0.32436302]
[208.06069946 -6.86686134]
[200.48635864 -20.30683899]
[185.50611877 -21.07649803]
[170.52587891 -21.84615898]
[160.90191650 -6.48420763]
[145.35826111 -2.69227004]
[140.22796631 11.40311909]
[135.09765625 25.49850845]
[129.96736145 39.59389877]
[139.82620239 45.58665085]
[148.51916504 53.17233276]
[155.79173279 62.12887573]
[161.43103027 72.19408417]
[165.27194214 83.07330322]
[167.20204163 94.44804382]
[167.16484070 105.98531342]
[165.16140747 117.34737396]
[161.25039673 128.20158386]
[155.54629517 138.23020935]
[148.21609497 147.13966370]
[139.47439575 154.66911316]
[129.57708740 160.59814453]
[118.81393433 164.75318909]
[107.50000000 167.01260376]
[107.50000000 182.01260376]
[107.50000000 197.01260376]
[107.50000000 212.01260376]
[107.50000000 227.01260376]
[107.50000000 242.01260376]
[107.50000000 257.01260376]
[107.50000000 272.01260376]
[107.50000000 287.01260376]
[107.50000000 302.01260376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[16 35]
[17 34]
[19 33]
[20 32]
[21 31]
[42 128]
[43 127]
[44 126]
[45 125]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[53 102]
[83 101]
[84 100]
[85 99]
[109 123]
[110 122]
[111 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
