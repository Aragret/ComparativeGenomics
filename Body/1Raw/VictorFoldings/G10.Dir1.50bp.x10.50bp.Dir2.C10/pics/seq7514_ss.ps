%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUCAUUUUCCUUAUCUGCUUCCUAGUCCUGUAUGCCCUUUUCCUAACACUCACAACAAxxxxxxxxxxACUAAUCUCCCUACAAAUCUCCUUAAUUAUAACAUUCACAGCCACAGAACUAAUCAUAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[75.01661682 457.89324951]
[75.01661682 442.89324951]
[75.01661682 427.89324951]
[75.01661682 412.89324951]
[75.01661682 397.89324951]
[75.01661682 382.89324951]
[75.01661682 367.89324951]
[75.01661682 352.89324951]
[75.01661682 337.89324951]
[75.01661682 322.89324951]
[61.50578308 320.23580933]
[48.72302246 315.10467529]
[37.11708450 307.67819214]
[27.09575272 298.21530151]
[19.01149178 287.04653931]
[13.14906788 274.56246948]
[9.71551132 261.20007324]
[8.83280754 247.42739868]
[10.53356266 233.72714233]
[14.75980473 220.57984924]
[21.36495590 208.44691467]
[30.11891365 197.75450134]
[40.71607208 188.87852478]
[52.78598785 182.13142395]
[65.90632629 177.75119019]
[79.61764526 175.89297485]
[80.55327606 160.92218018]
[81.48889923 145.95138550]
[82.42453003 130.98059082]
[71.22876740 120.99787140]
[56.46270752 123.63673401]
[44.28022003 134.61485291]
[28.76728249 129.29689026]
[25.88227463 113.15350342]
[38.59304428 102.79163361]
[53.82384491 108.87068176]
[68.58989716 106.23181915]
[72.08054352 89.39247894]
[83.25705719 77.91902161]
[97.70784760 74.54777527]
[100.80616760 59.87125397]
[103.90449524 45.19472504]
[107.00281525 30.51820183]
[109.79513550 15.78039551]
[112.28025818 0.98768824]
[114.76537323 -13.80501938]
[100.25448608 -17.64673424]
[86.15997314 -22.81097221]
[72.60208893 -29.25367165]
[59.69650269 -36.91986084]
[47.55332565 -45.74414062]
[36.27615738 -55.65121841]
[25.96122169 -66.55657196]
[16.69651413 -78.36714935]
[8.56108570 -90.98220062]
[1.62434316 -104.29408264]
[-4.05452871 -118.18923187]
[-8.42707920 -132.54908752]
[-11.45600224 -147.25112915]
[-13.11545658 -162.16993713]
[-13.39128208 -177.17822266]
[-12.28112793 -192.14793396]
[-9.79446316 -206.95135498]
[-5.95250607 -221.46217346]
[-0.78803366 -235.55661011]
[5.65489101 -249.11437988]
[13.32129765 -262.01983643]
[22.14577866 -274.16287231]
[32.05304337 -285.43988037]
[42.95856857 -295.75463867]
[54.76930237 -305.01913452]
[67.38449097 -313.15435791]
[80.69648743 -320.09088135]
[94.59172821 -325.76953125]
[108.95165253 -330.14181519]
[123.65375519 -333.17050171]
[138.57258606 -334.82971191]
[153.58087158 -335.10528564]
[168.55056763 -333.99487305]
[183.35394287 -331.50796509]
[197.86470032 -327.66577148]
[211.95904541 -322.50106812]
[225.51672363 -316.05792236]
[238.42204285 -308.39129639]
[250.56492615 -299.56661987]
[261.84176636 -289.65914917]
[272.15634155 -278.75347900]
[281.42065430 -266.94256592]
[289.55566406 -254.32725525]
[296.49197388 -241.01513672]
[302.17037964 -227.11979675]
[306.54244995 -212.75979614]
[309.57086182 -198.05764771]
[311.22982788 -183.13879395]
[311.50515747 -168.13049316]
[310.39450073 -153.16082764]
[307.90734863 -138.35748291]
[304.06491089 -123.84679413]
[298.89996338 -109.75254059]
[292.45660400 -96.19497681]
[284.78976440 -83.28977203]
[275.96487427 -71.14703369]
[266.05722046 -59.87036514]
[255.15135193 -49.55597305]
[243.34031677 -40.29185486]
[230.72485352 -32.15705872]
[217.41262817 -25.22097969]
[203.51719666 -19.54280281]
[189.15711975 -15.17096996]
[174.45492554 -12.14278126]
[159.53602600 -10.48407364]
[144.52774048 -10.20899773]
[129.55807495 -11.31990051]
[127.07295990 3.47280669]
[124.58784485 18.26551437]
[126.61943817 22.65278625]
[125.87062073 28.36860466]
[121.67933655 33.61652374]
[118.58101654 48.29304886]
[115.48269653 62.96957397]
[112.38437653 77.64610291]
[125.17683411 89.78017426]
[127.55623627 108.33352661]
[117.11418152 125.13170624]
[97.39532471 131.91622925]
[96.45969391 146.88702393]
[95.52406311 161.85780334]
[94.58843994 176.82859802]
[110.28034210 181.28050232]
[124.60761261 189.06338501]
[136.87355042 199.79554749]
[146.48240662 212.95198059]
[152.96830750 227.88996887]
[156.01785278 243.88059998]
[155.48526001 260.14419556]
[151.39932251 275.88851929]
[143.96185303 290.34713745]
[133.53776550 302.81689453]
[120.63710022 312.69207764]
[105.89015961 319.49380493]
[90.01661682 322.89324951]
[90.01661682 337.89324951]
[90.01661682 352.89324951]
[90.01661682 367.89324951]
[90.01661682 382.89324951]
[90.01661682 397.89324951]
[90.01661682 412.89324951]
[90.01661682 427.89324951]
[90.01661682 442.89324951]
[90.01661682 457.89324951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 128]
[27 127]
[28 126]
[29 125]
[30 37]
[31 36]
[40 121]
[41 120]
[42 119]
[43 118]
[44 115]
[45 114]
[46 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
