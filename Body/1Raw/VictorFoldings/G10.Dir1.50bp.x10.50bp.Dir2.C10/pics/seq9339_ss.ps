%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAGCCUUACUACUAAUAAUUAUUACAUUUUGACUACCACAACUCAACGGCUACAUAGxxxxxxxxxxCGGCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCACAGGACUAUUCCUAGCCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.85478973 347.42068481]
[114.54273224 332.42395020]
[114.23067474 317.42718506]
[113.91861725 302.43041992]
[113.60655975 287.43368530]
[113.29450989 272.43692017]
[112.98245239 257.44015503]
[112.67039490 242.44342041]
[112.35833740 227.44665527]
[110.02723694 212.62890625]
[105.71965027 198.26071167]
[101.41206360 183.89253235]
[97.10447693 169.52435303]
[92.79689789 155.15615845]
[78.90385437 98.96442413]
[65.81069946 91.64532471]
[52.71754456 84.32621765]
[39.62438965 77.00711060]
[31.06948662 89.34279633]
[21.36394119 100.79521179]
[10.59837437 111.25743866]
[-1.12669516 120.63177490]
[-13.70179176 128.83070374]
[-27.00950241 135.77767944]
[-40.92557526 141.40782166]
[-55.32007217 145.66856384]
[-70.05859375 148.52012634]
[-85.00353241 149.93589783]
[-100.01534271 149.90263367]
[-114.95385742 148.42066956]
[-129.67959595 145.50382996]
[-144.05508423 141.17935181]
[-157.94607544 135.48760986]
[-171.22286987 128.48175049]
[-183.76152039 120.22718048]
[-195.44494629 110.80098724]
[-206.16404724 100.29116821]
[-215.81875610 88.79586029]
[-224.31892395 76.42239380]
[-231.58517456 63.28629303]
[-237.54968262 49.51021957]
[-242.15673828 35.22279358]
[-245.36332703 20.55741882]
[-247.13952637 5.65102243]
[-247.46875000 -9.35721302]
[-246.34790039 -24.32715797]
[-243.78746033 -39.11903763]
[-239.81134033 -53.59473801]
[-234.45664978 -67.61910248]
[-227.77340698 -81.06118774]
[-219.82398987 -93.79548645]
[-210.68263245 -105.70310211]
[-200.43469238 -116.67283630]
[-189.17584229 -126.60228729]
[-177.01123047 -135.39872742]
[-164.05439758 -142.98004150]
[-150.42636108 -149.27542114]
[-136.25433350 -154.22610474]
[-121.67065430 -157.78587341]
[-106.81149292 -159.92146301]
[-91.81558228 -160.61294556]
[-76.82293701 -159.85388184]
[-61.97354889 -157.65133667]
[-47.40606308 -154.02589417]
[-33.25649643 -149.01138306]
[-19.65696144 -142.65464783]
[-6.73443747 -135.01501465]
[5.39041853 -126.16383362]
[16.60439682 -116.18374634]
[26.80279541 -105.16793060]
[35.89038849 -93.21923828]
[43.78232956 -80.44924164]
[50.40492630 -66.97717285]
[55.69635010 -52.92881393]
[59.60719299 -38.43534088]
[62.10093689 -23.63207054]
[63.15430450 -8.65722752]
[62.75745010 6.34937143]
[60.91408920 21.24761009]
[57.64142990 35.89838409]
[52.97002411 50.16490173]
[46.94349670 63.91395569]
[60.03665161 71.23306274]
[73.12980652 78.55216980]
[86.22296143 85.87126923]
[74.77849579 76.17465973]
[70.75988770 61.72298813]
[75.55584717 47.51036072]
[87.50902557 38.44826889]
[102.48873138 37.66831970]
[115.31839752 45.44004440]
[121.56443787 59.07774734]
[119.06839752 73.86861420]
[108.69252777 84.70150757]
[120.95489502 76.06238556]
[133.21726990 67.42327118]
[139.61007690 52.32148361]
[155.91603088 50.57572174]
[165.36097717 63.98188019]
[158.22874451 78.74884796]
[141.85638428 79.68563843]
[129.59400940 88.32476044]
[117.33164978 96.96387482]
[122.52706146 111.03539276]
[137.46136475 109.63308716]
[152.39567566 108.23078156]
[167.32998657 106.82848358]
[176.06825256 93.86019135]
[191.11221313 89.59246826]
[205.35855103 96.04039764]
[212.08059692 110.15947723]
[208.10438538 125.28308868]
[195.30738831 134.27033997]
[179.73193359 132.87773132]
[168.73228455 121.76278687]
[153.79797363 123.16509247]
[138.86367798 124.56739807]
[123.92936707 125.96970367]
[119.73829651 132.18942261]
[132.17761230 140.57176208]
[123.79507446 153.01094055]
[111.35614777 144.62886047]
[107.16507721 150.84858704]
[111.47266388 165.21676636]
[115.78025055 179.58494568]
[120.08782959 193.95314026]
[124.39541626 208.32131958]
[128.99858093 194.04507446]
[138.92585754 182.80012512]
[152.52117920 176.46237183]
[167.51654053 176.08908081]
[181.41036987 181.74255371]
[191.88485718 192.47962952]
[197.19264221 206.50915527]
[196.44824219 221.49067688]
[189.77586365 234.92492676]
[178.28860474 244.57080078]
[163.90278625 248.81912231]
[149.01829529 246.96119690]
[136.11819458 239.30696106]
[127.35509491 227.13459778]
[127.66714478 242.13136292]
[127.97920227 257.12811279]
[128.29125977 272.12487793]
[128.60331726 287.12161255]
[128.91537476 302.11837769]
[129.22743225 317.11511230]
[129.53948975 332.11187744]
[129.85154724 347.10864258]
[132.44253540 366.31634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 85]
[16 84]
[17 83]
[18 82]
[94 103]
[95 102]
[96 101]
[104 118]
[105 117]
[106 116]
[107 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
