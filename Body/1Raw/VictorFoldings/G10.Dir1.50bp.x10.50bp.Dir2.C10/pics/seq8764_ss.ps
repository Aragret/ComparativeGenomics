%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACACUUCUAGUAAGCCUCUACCUGCACGACAACACAUAAUGACCCACCAAUCACAUGCCxxxxxxxxxxCUUAGGCCCCAAAAAUUUUGGUGCAACUCCAAAUAAAAGUAAUAACCAUGCACACUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[154.75582886 274.05718994]
[154.44377136 259.06042480]
[154.13171387 244.06367493]
[153.81965637 229.06692505]
[153.50759888 214.07017517]
[153.19554138 199.07341003]
[152.88348389 184.07666016]
[152.57142639 169.07991028]
[152.25936890 154.08316040]
[146.48310852 140.23994446]
[136.04328918 129.46913147]
[125.60347748 118.69831848]
[106.90994263 128.00576782]
[88.55130768 123.32912445]
[78.33782196 134.31478882]
[68.12434387 145.30044556]
[61.76770401 161.01762390]
[44.90507507 159.26034546]
[41.92563248 142.57025146]
[57.13867950 135.08697510]
[67.35215759 124.10131073]
[77.56564331 113.11563873]
[74.51647186 105.09021759]
[74.24858856 96.50923920]
[76.79123688 88.30924225]
[65.91240692 77.98204041]
[55.03358459 67.65483856]
[44.15475845 57.32762909]
[32.68221283 67.01493073]
[20.21359444 75.38134003]
[6.90026760 82.32529449]
[-7.09616041 87.76250458]
[-21.60578346 91.62695312]
[-36.45246887 93.87174988]
[-51.45599365 94.46962738]
[-66.43422699 93.41333771]
[-81.20534515 90.71570587]
[-95.59004211 86.40946960]
[-109.41370392 80.54690552]
[-122.50851440 73.19918060]
[-134.71553040 64.45549011]
[-145.88655090 54.42197418]
[-155.88598633 43.22043228]
[-164.59243774 30.98683929]
[-171.90022278 17.86969948]
[-177.72064209 4.02824259]
[-181.98303223 -10.36950779]
[-184.63565063 -25.14877701]
[-185.64630127 -40.13015747]
[-185.00271606 -55.13179016]
[-182.71269226 -69.97157288]
[-178.80404663 -84.46935272]
[-173.32421875 -98.44915009]
[-166.33973694 -111.74125671]
[-157.93537903 -124.18432617]
[-148.21316528 -135.62730408]
[-137.29112244 -145.93128967]
[-125.30181885 -154.97119141]
[-112.39080811 -162.63728333]
[-98.71481323 -168.83650208]
[-84.43984222 -173.49359131]
[-69.73918915 -176.55203247]
[-54.79130936 -177.97468567]
[-39.77764511 -177.74427795]
[-24.88045311 -175.86361694]
[-10.28057289 -172.35552979]
[3.84476638 -167.26258850]
[17.32409668 -160.64663696]
[29.99379158 -152.58798218]
[41.70005417 -143.18443298]
[52.30077744 -132.55015564]
[61.66727829 -120.81423187]
[69.68585968 -108.11913300]
[76.25918579 -94.61896515]
[81.30744934 -80.47760010]
[84.76938629 -65.86670685]
[86.60295868 -50.96364594]
[86.78591919 -35.94932938]
[85.31603241 -21.00601578]
[82.21115875 -6.31510210]
[77.50897217 7.94507551]
[71.26657104 21.60141182]
[63.55971146 34.48813248]
[54.48196411 46.44880676]
[65.36078644 56.77600861]
[76.23961639 67.10321808]
[87.11843872 77.43041992]
[106.61824036 71.92385864]
[126.35913849 82.38292694]
[137.23796082 72.05572510]
[148.11679077 61.72851944]
[158.99560547 51.40131378]
[169.87443542 41.07411194]
[177.19906616 25.78404045]
[193.91925049 28.58970451]
[195.85183716 45.43314362]
[180.20164490 51.95293427]
[169.32281494 62.28013992]
[158.44398499 72.60734558]
[147.56517029 82.93454742]
[136.68634033 93.26175690]
[136.37428284 108.25850677]
[146.81410217 119.02931976]
[157.25390625 129.80012512]
[168.28674316 118.97132111]
[187.97972107 117.23029327]
[202.97889709 117.07425690]
[217.97808838 116.91822052]
[226.09603882 103.79943848]
[240.02766418 97.17272949]
[255.32745361 99.15266418]
[267.11328125 109.10745239]
[271.62435913 123.86054230]
[267.42117310 138.70429993]
[255.84500122 148.90211487]
[240.58970642 151.19990540]
[226.52323914 144.86447144]
[218.13412476 131.91740417]
[203.13493347 132.07344055]
[188.13575745 132.22947693]
[182.91584778 137.61488342]
[196.15368652 144.66894531]
[209.39151001 151.72300720]
[222.62934875 158.77706909]
[235.86718750 165.83111572]
[250.63403320 168.46553040]
[262.93435669 177.05050659]
[270.49981689 190.00288391]
[271.93521118 204.93403625]
[266.97586060 219.09048462]
[256.53631592 229.86154175]
[242.54177856 235.26091003]
[227.57304382 234.29284668]
[214.39056396 227.13587952]
[205.42535400 215.10986328]
[202.33076477 200.43081665]
[194.86708069 187.41954041]
[187.40339661 174.40826416]
[179.93971252 161.39697266]
[172.47602844 148.38569641]
[167.25613403 153.77110291]
[167.56817627 168.76785278]
[167.88023376 183.76460266]
[168.19229126 198.76136780]
[168.50434875 213.75811768]
[168.81640625 228.75486755]
[169.12846375 243.75161743]
[169.44052124 258.74838257]
[169.75257874 273.74511719]
[172.34358215 292.95285034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 104]
[11 103]
[12 102]
[14 22]
[15 21]
[16 20]
[25 87]
[26 86]
[27 85]
[28 84]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[106 120]
[107 119]
[108 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
