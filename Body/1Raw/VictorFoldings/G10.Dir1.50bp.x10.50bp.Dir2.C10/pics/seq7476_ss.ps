%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCACGCCCUCAUAAUCAUUUUCCUUAxxxxxxxxxxUAGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCCCUACCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.33057404 439.79736328]
[95.33057404 424.79736328]
[95.33057404 409.79736328]
[95.33057404 394.79736328]
[95.33057404 379.79736328]
[95.33057404 364.79736328]
[95.33057404 349.79736328]
[95.33057404 334.79736328]
[95.33057404 319.79736328]
[95.33057404 304.79736328]
[80.27219391 301.45648193]
[66.32186890 294.85955811]
[54.17424011 285.33166504]
[44.43492889 273.34393311]
[37.59036255 259.49017334]
[33.98347473 244.45753479]
[33.79651260 228.99241638]
[37.04185104 213.86337280]
[43.56121445 199.82296753]
[53.03339005 187.57028198]
[64.99005127 177.71615601]
[78.83892822 170.75268555]
[93.89312744 167.02871704]
[93.58106995 152.03196716]
[93.26901245 137.03521729]
[81.05082703 132.52447510]
[71.10121155 124.11997223]
[64.61131287 112.82785034]
[62.35809708 100.00000000]
[64.61131287 87.17214966]
[71.10121155 75.88002777]
[81.05082703 67.47551727]
[93.26901245 62.96479034]
[93.58106995 47.96803665]
[85.21128845 38.09886169]
[85.81721497 25.57481384]
[94.52501678 17.12013626]
[95.14899445 2.13312006]
[95.77297211 -12.85389614]
[96.39694977 -27.84091187]
[85.97494507 -39.41759872]
[86.82124329 -54.60767365]
[97.92207336 -64.47211456]
[98.54605103 -79.45912933]
[99.17002869 -94.44615173]
[99.79400635 -109.43316650]
[100.41798401 -124.42018127]
[85.56441498 -126.60864258]
[71.02098846 -130.33775330]
[56.94703293 -135.56666565]
[43.49675751 -142.23808289]
[30.81753159 -150.27891541]
[19.04827309 -159.60105896]
[8.31793499 -170.10237122]
[-1.25591660 -181.66780090]
[-9.56838512 -194.17062378]
[-16.52839470 -207.47384644]
[-22.05968857 -221.43173218]
[-26.10166168 -235.89134216]
[-28.61002731 -250.69422913]
[-29.55730438 -265.67825317]
[-28.93311119 -280.67916870]
[-26.74429131 -295.53268433]
[-23.01482201 -310.07601929]
[-17.78556633 -324.14984131]
[-11.11382198 -337.59997559]
[-3.07268476 -350.27899170]
[6.24974060 -362.04803467]
[16.75131226 -372.77810669]
[28.31697083 -382.35168457]
[40.81999588 -390.66384888]
[54.12339783 -397.62353516]
[68.08141327 -403.15447998]
[82.54111481 -407.19610596]
[97.34407806 -409.70413208]
[112.32810211 -410.65103149]
[127.32902527 -410.02645874]
[142.18247986 -407.83728027]
[156.72573853 -404.10748291]
[170.79943848 -398.87786865]
[184.24938965 -392.20581055]
[196.92822266 -384.16436768]
[208.69702148 -374.84164429]
[219.42684937 -364.33981323]
[229.00013733 -352.77392578]
[237.31199646 -340.27069092]
[244.27136230 -326.96713257]
[249.80198669 -313.00897217]
[253.84324646 -298.54916382]
[256.35089111 -283.74615479]
[257.29745483 -268.76211548]
[256.67251587 -253.76119995]
[254.48298645 -238.90779114]
[250.75280762 -224.36462402]
[245.52287292 -210.29106140]
[238.85046387 -196.84126282]
[230.80871582 -184.16262817]
[221.48571777 -172.39405823]
[210.98362732 -161.66447449]
[199.41751099 -152.09147644]
[186.91407776 -143.77990723]
[173.61033630 -136.82087708]
[159.65205383 -131.29058838]
[145.19215393 -127.24967957]
[130.38906860 -124.74238586]
[115.40499878 -123.79620361]
[114.78102112 -108.80918884]
[114.15704346 -93.82217407]
[113.53306580 -78.83515167]
[112.90908813 -63.84814072]
[123.15151215 -53.09508133]
[122.73220825 -37.88722610]
[111.38396454 -27.21693420]
[110.75998688 -12.22991848]
[110.13600922 2.75709748]
[109.51203156 17.74411392]
[118.48487091 32.79363632]
[108.57782745 48.28009415]
[108.26576996 63.27684784]
[123.41032410 70.52340698]
[133.89779663 83.63381958]
[137.64190674 100.00000000]
[133.89779663 116.36618042]
[123.41032410 129.47659302]
[108.26576996 136.72315979]
[108.57782745 151.71990967]
[108.88987732 166.71665955]
[123.22499847 169.53863525]
[136.64895630 175.29005432]
[148.57061768 183.71488953]
[158.46557617 194.43943787]
[165.89924622 206.98892212]
[170.54591370 220.80847168]
[172.20300293 235.28770447]
[170.79994202 249.78764343]
[166.40116882 263.66894531]
[159.20312500 276.32006836]
[149.52552795 287.18423462]
[137.79716492 295.78387451]
[124.53685760 301.74176025]
[110.33057404 304.79736328]
[110.33057404 319.79736328]
[110.33057404 334.79736328]
[110.33057404 349.79736328]
[110.33057404 364.79736328]
[110.33057404 379.79736328]
[110.33057404 394.79736328]
[110.33057404 409.79736328]
[110.33057404 424.79736328]
[110.33057404 439.79736328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 127]
[24 126]
[25 125]
[33 119]
[34 118]
[37 116]
[38 115]
[39 114]
[40 113]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
