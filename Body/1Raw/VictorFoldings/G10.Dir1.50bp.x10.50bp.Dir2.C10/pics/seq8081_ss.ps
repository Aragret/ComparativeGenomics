%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCAACUAAAAAUAUUAAACACAAACUACCACCUACCUCCCUCACCAAAGCCCAUAAAxxxxxxxxxxUCUAAUUUAAACUAUUCUCUGUUCUUUCAUGGGGAAGCAGAUUUGGGUACCACCCAAGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.30130005 362.09255981]
[125.98924255 347.09579468]
[125.67718506 332.09906006]
[125.36512756 317.10229492]
[125.05307770 302.10552979]
[124.74102020 287.10879517]
[124.42896271 272.11203003]
[124.11690521 257.11526489]
[123.80484772 242.11853027]
[121.93723297 227.23524475]
[111.51430511 216.59513855]
[115.91908264 201.39947510]
[112.51610565 186.79057312]
[109.11312866 172.18168640]
[105.71015167 157.57279968]
[102.30716705 142.96389771]
[98.90419006 128.35501099]
[88.94337463 126.13347626]
[80.41272736 120.53158569]
[74.41567993 112.27395630]
[71.72795105 102.42868805]
[72.69718933 92.26927948]
[77.19803619 83.10983276]
[67.93309021 71.31319427]
[58.66813660 59.51655197]
[49.40318680 47.71991348]
[39.89482880 36.11857224]
[30.14717865 24.71755028]
[20.39952660 13.31652832]
[10.65187359 1.91550744]
[0.90422171 -9.48551369]
[-11.52925968 -1.06597888]
[-24.82726479 5.90847874]
[-38.82255936 11.35014820]
[-53.33913422 15.19059563]
[-68.19443512 17.38152122]
[-83.20162964 17.89537430]
[-98.17199707 16.72569084]
[-112.91725922 13.88718224]
[-127.25199127 9.41554451]
[-140.99591064 3.36701322]
[-153.97616577 -4.18234396]
[-166.02954102 -13.13758659]
[-177.00442505 -23.38609314]
[-186.76280212 -34.79897690]
[-195.18197632 -47.23271179]
[-202.15603638 -60.53092575]
[-207.59729004 -74.52638245]
[-211.43730164 -89.04306793]
[-213.62777710 -103.89843750]
[-214.14118958 -118.90564728]
[-212.97105408 -133.87597656]
[-210.13209534 -148.62115479]
[-205.66003418 -162.95574951]
[-199.61109924 -176.69949341]
[-192.06134033 -189.67953491]
[-183.10574341 -201.73262024]
[-172.85690308 -212.70721436]
[-161.44374084 -222.46525574]
[-149.00975037 -230.88404846]
[-135.71131897 -237.85771179]
[-121.71570587 -243.29853821]
[-107.19889832 -247.13812256]
[-92.34347534 -249.32815552]
[-77.33624268 -249.84111023]
[-62.36594772 -248.67053223]
[-47.62085342 -245.83114624]
[-33.28639221 -241.35864258]
[-19.54283524 -235.30929565]
[-6.56302404 -227.75915527]
[5.48980665 -218.80319214]
[16.46408081 -208.55403137]
[26.22178268 -197.14056396]
[34.64020157 -184.70632935]
[41.61346817 -171.40769958]
[47.05388260 -157.41191101]
[50.89302444 -142.89498901]
[53.08261871 -128.03950500]
[53.59512711 -113.03225708]
[52.42409897 -98.06199646]
[49.58426666 -83.31698608]
[45.11134338 -68.98265839]
[39.06158066 -55.23928070]
[31.51105690 -42.25969696]
[22.55473328 -30.20713234]
[12.30524254 -19.23316574]
[22.05289459 -7.83214474]
[31.80054665 3.56887627]
[41.54819870 14.96989727]
[51.29585266 26.37091827]
[55.96403503 27.62931824]
[59.86618423 31.87249184]
[61.19982910 38.45496368]
[70.46477509 50.25160217]
[79.72972870 62.04824066]
[88.99467468 73.84487915]
[110.38006592 73.59049988]
[125.86903381 88.33808899]
[140.68679810 86.00698090]
[155.50454712 83.67588043]
[170.32231140 81.34477234]
[185.14007568 79.01367188]
[189.29560852 75.64453888]
[193.87272644 74.37865448]
[197.98304749 75.01657867]
[200.95214844 77.02951050]
[215.88645935 75.62720490]
[230.82077026 74.22489929]
[242.12084961 62.83684921]
[258.05364990 64.71444702]
[266.39688110 78.41735840]
[260.75033569 93.43389130]
[245.44557190 98.24463654]
[232.22306824 89.15921021]
[217.28875732 90.56151581]
[202.35444641 91.96381378]
[187.47117615 93.83142853]
[172.65341187 96.16253662]
[157.83566284 98.49363708]
[143.01789856 100.82473755]
[128.20013428 103.15584564]
[123.53224945 115.85688019]
[113.51308441 124.95203400]
[116.91606140 139.56092834]
[120.31903839 154.16981506]
[123.72202301 168.77870178]
[127.12500000 183.38760376]
[130.52796936 197.99649048]
[141.19432068 209.68151855]
[136.54612732 223.83226013]
[142.99819946 210.29081726]
[155.27806091 201.67657471]
[170.20710754 200.21932983]
[183.92098999 206.29624939]
[192.86993408 218.33438110]
[194.73751831 233.21766663]
[189.04032898 247.09361267]
[177.25306702 256.37048340]
[162.42681885 258.64697266]
[148.39932251 253.33384705]
[138.80160522 241.80647278]
[139.11366272 256.80322266]
[139.42572021 271.79998779]
[139.73777771 286.79672241]
[140.04983521 301.79348755]
[140.36187744 316.79022217]
[140.67393494 331.78698730]
[140.98599243 346.78375244]
[141.29804993 361.78048706]
[143.88905334 380.98822021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 130]
[12 128]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[23 96]
[24 95]
[25 94]
[26 93]
[27 90]
[28 89]
[29 88]
[30 87]
[31 86]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[106 116]
[107 115]
[108 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
