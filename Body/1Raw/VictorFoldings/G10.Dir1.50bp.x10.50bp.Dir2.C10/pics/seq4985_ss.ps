%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGGUUACCCAAGxxxxxxxxxxAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[7.63597250 130.64735413]
[4.87063026 120.51284790]
[-9.99241638 122.53517914]
[-24.85546303 124.55751801]
[-38.75801849 130.18946838]
[-50.83800888 139.08181763]
[-62.91799545 147.97416687]
[-74.99798584 156.86651611]
[-87.07797241 165.75886536]
[-99.15795898 174.65121460]
[-111.23795319 183.54356384]
[-123.31793976 192.43591309]
[-135.39791870 201.32826233]
[-147.47792053 210.22062683]
[-143.18501282 224.75839233]
[-144.12632751 239.88749695]
[-150.18817139 253.78102112]
[-160.63854980 264.76123047]
[-174.21553040 271.50225830]
[-189.27963257 273.19006348]
[-204.01179504 269.62081909]
[-216.63302612 261.22555542]
[-225.61924744 249.01803589]
[-229.88534546 234.47238159]
[-228.91615295 219.34503174]
[-222.82872009 205.46270752]
[-212.35812378 194.50177002]
[-198.76873779 187.78578186]
[-183.70155334 186.12574768]
[-168.97599792 189.72212219]
[-156.37026978 198.14062500]
[-144.29028320 189.24827576]
[-132.21028137 180.35592651]
[-120.13030243 171.46357727]
[-108.05030823 162.57122803]
[-95.97032166 153.67887878]
[-83.89033508 144.78652954]
[-71.81034851 135.89418030]
[-59.73035812 127.00183105]
[-47.65036774 118.10948181]
[-47.65036774 110.60948181]
[-60.64076614 103.10951233]
[-47.65036774 95.60948181]
[-47.65036774 88.10948181]
[-59.73035812 79.21713257]
[-71.81034851 70.32478333]
[-83.89033508 61.43243408]
[-95.97032166 52.54008484]
[-108.05030823 43.64773560]
[-120.13030243 34.75538635]
[-136.14341736 35.73487854]
[-146.78584290 23.72994804]
[-143.89361572 7.94975233]
[-129.68540955 0.49950698]
[-115.06053162 7.09440184]
[-111.23795319 22.67539787]
[-99.15795898 31.56774712]
[-87.07797241 40.46009827]
[-74.99798584 49.35244751]
[-62.91799545 58.24479675]
[-50.83800888 67.13714600]
[-38.75801849 76.02949524]
[-28.88542175 86.94759369]
[-25.07729721 99.01251221]
[-26.87779808 109.69446564]
[-12.01475143 107.67213440]
[2.84829593 105.64980316]
[2.89136910 93.65274811]
[4.41030359 81.75215912]
[7.38201475 70.12889862]
[11.76133823 58.95962524]
[17.48171806 48.41408157]
[24.45621300 38.65254593]
[32.57882690 29.82337189]
[41.72610855 22.06074333]
[51.75904465 15.48264122]
[62.52514267 10.18903732]
[73.86078644 6.26038408]
[85.59370422 3.75639033]
[97.54556274 2.71511126]
[109.53472137 3.15237236]
[121.37897491 5.06152821]
[132.89830017 8.41356373]
[143.91764832 13.15753365]
[154.26953125 19.22133827]
[163.79661560 26.51282310]
[172.35412598 34.92116928]
[184.24650574 25.77943420]
[196.13888550 16.63769913]
[208.03126526 7.49596548]
[204.05046082 -7.17446947]
[205.99177551 -22.25093269]
[213.55915833 -35.43437576]
[225.59864807 -44.71441269]
[240.27430725 -48.67591476]
[255.34820557 -46.71477127]
[268.52166748 -39.13005066]
[277.78585815 -27.07836533]
[281.72805786 -12.39750767]
[279.74710083 2.67379594]
[272.14505005 15.83728218]
[260.08117676 25.08561516]
[245.39515686 29.00848961]
[230.32647705 27.00769806]
[217.17300415 19.38834572]
[205.28062439 28.53007889]
[193.38824463 37.67181396]
[181.49586487 46.81354904]
[195.42118835 80.89052582]
[195.69229126 117.70195770]
[210.18788147 121.55911255]
[224.68348694 125.41627502]
[239.17907715 129.27343750]
[249.07577515 117.65370941]
[263.03747559 111.48656464]
[278.29208374 111.99650574]
[291.81076050 119.08226776]
[300.90939331 131.33697510]
[303.78140259 146.32745361]
[299.85659790 161.07731628]
[289.91421509 172.65797424]
[275.92831421 178.77009583]
[260.67584229 178.20008850]
[247.18518066 171.06114197]
[238.13488770 158.77069092]
[235.32191467 143.76902771]
[220.82632446 139.91186523]
[206.33073425 136.05471802]
[191.83512878 132.19755554]
[187.82948303 141.90888977]
[182.80038452 151.13188171]
[176.80644226 159.75904846]
[169.91749573 167.68986511]
[162.21382141 174.83190918]
[153.78520203 181.10194397]
[144.72982788 186.42694092]
[135.15322876 190.74482727]
[125.16699982 194.00529480]
[114.88751221 196.17034912]
[104.43454742 197.21475220]
[93.92990112 197.12634277]
[83.49599457 195.90615845]
[73.25439453 193.56840515]
[63.32446289 190.14033508]
[53.82189560 185.66188049]
[44.85742950 180.18522644]
[36.53551865 173.77420044]
[28.95314407 166.50352478]
[22.19865417 158.45788574]
[16.35075951 149.73106384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[87 108]
[88 107]
[89 106]
[90 105]
[110 129]
[111 128]
[112 127]
[113 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
