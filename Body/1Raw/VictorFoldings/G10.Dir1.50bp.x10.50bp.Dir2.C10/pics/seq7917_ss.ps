%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAxxxxxxxxxxUCAUGCACCUAAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUCUACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[6.41839647 226.01251221]
[-3.08996201 237.61384583]
[-12.59832096 249.21519470]
[-21.49067116 261.29516602]
[-29.74295998 273.82113647]
[-37.99524689 286.34710693]
[-46.24753952 298.87307739]
[-54.49982834 311.39901733]
[-62.75211716 323.92498779]
[-71.00440216 336.45095825]
[-66.35797119 351.38229370]
[-72.44392395 365.78698730]
[-86.38866425 372.86358643]
[-101.60791016 369.27072144]
[-110.91559601 356.70486450]
[-109.91693115 341.09921265]
[-99.08343506 329.82226562]
[-83.53036499 328.19866943]
[-75.27807617 315.67269897]
[-67.02578735 303.14672852]
[-58.77349854 290.62078857]
[-50.52120972 278.09481812]
[-42.26892090 265.56884766]
[-34.01663208 253.04289246]
[-49.01655960 253.08911133]
[-58.57034302 241.52514648]
[-55.69493866 226.80332947]
[-42.49203110 219.68409729]
[-28.61188316 225.37106323]
[-24.19966125 239.70683289]
[-14.69130325 228.10549927]
[-5.18294477 216.50415039]
[-18.96602249 202.39021301]
[-30.86983490 186.65884399]
[-40.70634460 169.55856323]
[-48.32016754 151.35948181]
[-53.59103012 132.34910583]
[-56.43566895 112.82772064]
[-56.80915070 93.10369873]
[-54.70557785 73.48860931]
[-50.15817261 54.29231644]
[-64.28297424 49.24356079]
[-78.40777588 44.19480515]
[-92.53258514 39.14604568]
[-109.48265839 39.50841141]
[-114.52310181 23.32106209]
[-100.36370087 13.99649239]
[-87.48382568 25.02124405]
[-73.35902405 30.06999969]
[-59.23421860 35.11875534]
[-45.10941696 40.16751480]
[-24.44243622 4.34045172]
[4.86548376 -24.84427452]
[-3.64560652 -37.19584656]
[-12.15669632 -49.54742050]
[-20.66778755 -61.89899063]
[-29.17887688 -74.25056458]
[-44.76235580 -75.55024719]
[-55.82810593 -86.59938049]
[-57.15121841 -102.18088531]
[-48.10695648 -114.93766022]
[-32.96574783 -118.84635162]
[-18.87680817 -112.06138611]
[-12.49250221 -97.78641510]
[-16.82730484 -82.76165771]
[-8.31621456 -70.41007996]
[0.19487578 -58.05850983]
[8.70596600 -45.70693588]
[17.21705627 -33.35536575]
[27.57369232 -39.25192642]
[38.34786224 -44.34570694]
[49.47745132 -48.60733795]
[60.89830399 -52.01225662]
[72.54457855 -54.54083252]
[84.34912872 -56.17848587]
[96.24390411 -56.91577530]
[108.16033936 -56.74845505]
[120.02972412 -55.67748642]
[131.78364563 -53.70904160]
[143.35432434 -50.85447311]
[154.67507935 -47.13023376]
[165.68063354 -42.55779266]
[176.30752563 -37.16351318]
[186.49452209 -30.97849464]
[196.18287659 -24.03838921]
[205.93054199 -35.43941116]
[208.84254456 -53.59154892]
[225.55540466 -58.85271835]
[235.06376648 -70.45406342]
[234.91812134 -86.49645233]
[247.46011353 -96.50035095]
[263.06860352 -92.79162598]
[269.77008057 -78.21528625]
[262.42376709 -63.95306015]
[246.66511536 -60.94570160]
[237.15675354 -49.34436035]
[238.02940369 -37.23875046]
[230.14671326 -27.48773766]
[217.33155823 -25.69175911]
[207.58390808 -14.29073811]
[214.04719543 -7.84204149]
[220.12460327 -1.02845442]
[225.79556274 6.12696934]
[231.04087830 13.60001850]
[235.84281921 21.36540794]
[240.18511963 29.39686394]
[244.05308533 37.66720963]
[247.43365479 46.14846039]
[250.31535339 54.81192398]
[252.68846130 63.62828445]
[254.54493713 72.56771088]
[255.87850952 81.59996033]
[256.68463135 90.69445801]
[256.96063232 99.82044983]
[256.70550537 108.94704437]
[255.92019653 118.04337311]
[254.60729980 127.07864380]
[252.77128601 136.02229309]
[250.41835022 144.84405518]
[247.55647278 153.51409912]
[244.19531250 162.00305176]
[240.34628296 170.28222656]
[236.02236938 178.32359314]
[231.23820496 186.09996033]
[226.00999451 193.58499146]
[220.35542297 200.75335693]
[214.29362488 207.58084106]
[207.84510803 214.04429626]
[201.03167725 220.12188721]
[193.87640381 225.79304504]
[186.40350342 231.03855896]
[178.63822937 235.84069824]
[170.60690308 240.18321228]
[162.33665466 244.05142212]
[153.85549927 247.43220520]
[145.19210815 250.31414795]
[136.37580872 252.68748474]
[127.43643188 254.54420471]
[118.40422821 255.87800598]
[109.30974579 256.68438721]
[100.18376160 256.96063232]
[91.05715942 256.70574951]
[81.96081543 255.92066956]
[72.92550659 254.60801697]
[63.98180771 252.77224731]
[55.15997696 250.41955566]
[46.48986816 247.55790710]
[38.00081253 244.19697571]
[29.72153473 240.34815979]
[21.68004990 236.02445984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[41 51]
[42 50]
[43 49]
[44 48]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[85 100]
[86 99]
[88 96]
[89 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
