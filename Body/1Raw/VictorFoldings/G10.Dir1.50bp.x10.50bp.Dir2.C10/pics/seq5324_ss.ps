%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAACxxxxxxxxxxUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCUUAAUUUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[76.39654541 281.01876831]
[76.39654541 266.01876831]
[76.39654541 251.01875305]
[76.39654541 236.01875305]
[76.39654541 221.01875305]
[76.39654541 206.01875305]
[76.39654541 191.01875305]
[76.39654541 176.01875305]
[76.39654541 161.01875305]
[76.39654541 146.01875305]
[71.92467499 112.39183807]
[90.68056488 97.46533966]
[77.90320587 89.60791016]
[65.12584686 81.75048828]
[52.34849167 73.89305878]
[39.57113266 66.03563690]
[26.79377556 58.17820740]
[17.80107689 70.19680023]
[7.75271511 81.34783936]
[-3.26804161 91.53892517]
[-15.16987038 100.68560028]
[-27.85414886 108.71208191]
[-41.21576691 115.55184937]
[-55.14400101 121.14822388]
[-69.52344513 125.45484161]
[-84.23493195 128.43601990]
[-99.15655518 130.06703186]
[-114.16468048 130.33438110]
[-129.13493347 129.23583984]
[-143.94326782 126.78053284]
[-158.46696472 122.98878479]
[-172.58569336 117.89202118]
[-186.18243408 111.53247833]
[-199.14453125 103.96285248]
[-211.36457825 95.24587250]
[-222.74130249 85.45376587]
[-233.18045044 74.66768646]
[-242.59548950 62.97700119]
[-250.90843201 50.47858810]
[-258.05038452 37.27601624]
[-263.96212769 23.47868538]
[-268.59472656 9.20093155]
[-271.90979004 -5.43893480]
[-273.87979126 -20.31960106]
[-274.48849487 -35.31776047]
[-273.73077393 -50.30912781]
[-271.61294556 -65.16947937]
[-268.15255737 -79.77567291]
[-263.37826538 -94.00668335]
[-257.32968140 -107.74456787]
[-250.05685425 -120.87550354]
[-241.62010193 -133.29067993]
[-232.08932495 -144.88720703]
[-221.54350281 -155.56900024]
[-210.07000732 -165.24754333]
[-197.76393127 -173.84263611]
[-184.72723389 -181.28306580]
[-171.06796265 -187.50715637]
[-156.89927673 -192.46333313]
[-142.33860779 -196.11054993]
[-127.50659943 -198.41856384]
[-112.52616882 -199.36824036]
[-97.52144623 -198.95173645]
[-82.61676788 -197.17250061]
[-67.93563080 -194.04525757]
[-53.59970856 -189.59593201]
[-39.72778320 -183.86140442]
[-26.43480492 -176.88916016]
[-13.83093071 -168.73701477]
[-2.02059913 -159.47250366]
[8.89832306 -149.17237854]
[18.83535767 -137.92202759]
[27.70815849 -125.81464386]
[35.44320297 -112.95056915]
[41.97639847 -99.43640900]
[47.25360107 -85.38413239]
[51.23108292 -70.91019440]
[53.87588882 -56.13453293]
[55.16610336 -41.17958069]
[55.09102631 -26.16926384]
[53.65128708 -11.22796535]
[50.85881424 3.52050376]
[46.73675156 17.95392990]
[41.31924820 31.95271301]
[34.65120316 45.40085220]
[47.42855835 53.25827789]
[60.20591736 61.11570358]
[72.98327637 68.97312927]
[85.76062775 76.83055115]
[98.53798676 84.68798065]
[113.50878143 85.62361145]
[127.16502380 79.41819763]
[132.44288635 67.60304260]
[143.99682617 62.73215103]
[155.38618469 66.92619324]
[169.16856384 61.00622559]
[182.95094299 55.08626175]
[196.73332214 49.16630173]
[210.51570129 43.24633789]
[224.29808044 37.32637405]
[229.92224121 22.55665970]
[244.37686157 16.16609192]
[259.08627319 21.94608307]
[265.32366943 36.46746445]
[259.38848877 51.11495972]
[244.80197144 57.19847107]
[230.21804810 51.10875702]
[216.43566895 57.02871704]
[202.65328979 62.94868088]
[188.87089539 68.86864471]
[175.08851624 74.78860474]
[161.30613708 80.70857239]
[151.61845398 95.30818176]
[133.37042236 93.07444000]
[119.71418762 99.27984619]
[120.49403381 114.25955963]
[134.72080994 119.01338196]
[148.94758606 123.76719666]
[163.88650513 117.91838074]
[177.70083618 126.07582092]
[179.79341125 141.98181152]
[168.55900574 153.43464661]
[152.61566162 151.64869690]
[144.19377136 137.99397278]
[129.96699524 133.24015808]
[115.74021912 128.48634338]
[109.65429688 132.86944580]
[119.86037445 143.86199951]
[130.06645203 154.85453796]
[140.27252197 165.84709167]
[154.18211365 171.46163940]
[161.05380249 184.79504395]
[157.55519104 199.38133240]
[145.38291931 208.14694214]
[130.43988037 206.84100342]
[119.97263336 196.09686279]
[119.05661011 181.12686157]
[111.86522675 167.96313477]
[104.67384338 154.79939270]
[97.48246002 141.63565063]
[91.39654541 146.01875305]
[91.39654541 161.01875305]
[91.39654541 176.01875305]
[91.39654541 191.01875305]
[91.39654541 206.01875305]
[91.39654541 221.01875305]
[91.39654541 236.01875305]
[91.39654541 251.01875305]
[91.39654541 266.01876831]
[91.39654541 281.01876831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[91 115]
[92 114]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
