%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCAUAAUCCUUCUAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAAxxxxxxxxxxUUUGAGAAGCCUUCGCUUCGAAGCGAAAAGUCCUAAUAGUAGAAGAACCCUCCAUAAACCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[136.44854736 555.71667480]
[136.44854736 540.71667480]
[136.44854736 525.71667480]
[136.44854736 510.71667480]
[136.44854736 495.71667480]
[136.44854736 480.71667480]
[136.44854736 465.71667480]
[136.44854736 450.71667480]
[136.44854736 435.71667480]
[136.44854736 420.71667480]
[118.69911194 416.19003296]
[102.85572052 406.97332764]
[90.13104248 393.76452637]
[81.50105286 377.56756592]
[77.63018036 359.61584473]
[78.82016754 341.27841187]
[84.98657227 323.95553589]
[95.66468048 308.97171021]
[110.04456329 297.47451782]
[127.03249359 290.34655762]
[124.88391113 275.50125122]
[122.73533630 260.65591431]
[120.58675385 245.81060791]
[118.43817902 230.96528625]
[116.28959656 216.11996460]
[106.80904388 204.63220215]
[112.48984528 189.86605835]
[110.34126282 175.02073669]
[107.43379211 160.30522156]
[103.77508545 145.75825500]
[100.11637878 131.21130371]
[88.10289001 128.85511780]
[77.91979218 122.05954742]
[71.13375092 111.87007904]
[68.78881836 99.85439301]
[71.24575806 87.86110687]
[78.12657166 77.73540497]
[70.49359894 64.82270813]
[62.86063004 51.91000748]
[55.22766113 38.99731064]
[42.91671371 35.01681900]
[36.83533859 24.05377960]
[39.78169632 12.28172970]
[32.41545868 -0.78496516]
[25.04921722 -13.85165977]
[10.93984890 -8.66302967]
[-3.81914759 -5.80502701]
[-18.84547997 -5.35168171]
[-33.74992752 -7.31473637]
[-48.14643097 -11.64334297]
[-61.66208649 -18.22537994]
[-73.94680786 -26.89035797]
[-84.68238831 -37.41383362]
[-93.59074402 -49.52322006]
[-100.44114685 -62.90485764]
[-105.05612946 -77.21212769]
[-107.31617737 -92.07444763]
[-107.16272736 -107.10683441]
[-104.59976959 -121.91991425]
[-99.69368744 -136.13000488]
[-92.57155609 -149.36900330]
[-83.41786194 -161.29402161]
[-72.46970367 -171.59616089]
[-60.01066589 -180.00856018]
[-46.36346817 -186.31333923]
[-31.88160133 -190.34716797]
[-16.94018745 -192.00555420]
[-1.92624068 -191.24557495]
[12.77134037 -188.08689880]
[26.77185249 -182.61132812]
[39.71265030 -174.96070862]
[51.25853348 -165.33320618]
[61.11043930 -153.97821045]
[69.01317596 -141.18981934]
[74.76204681 -127.29929352]
[78.20813751 -112.66643524]
[79.26219177 -97.67025757]
[77.89690399 -82.69921875]
[74.14764404 -68.14108276]
[68.11151886 -54.37295914]
[59.94487762 -41.75146103]
[49.85926437 -30.60352135]
[38.11591339 -21.21789932]
[45.48215103 -8.15120506]
[52.84839249 4.91549015]
[68.40467834 12.98062897]
[68.14035797 31.36433983]
[75.77333069 44.27703857]
[83.40629578 57.18973541]
[91.03926849 70.10243225]
[101.66941071 68.83315277]
[112.10314178 71.23069000]
[121.11293030 77.01296997]
[133.61695862 68.72749329]
[146.12100220 60.44202042]
[158.62503052 52.15654755]
[171.12907410 43.87107086]
[183.63310242 35.58559799]
[190.45449829 20.67249298]
[206.80364990 19.39301872]
[215.86196899 33.06338882]
[208.31101990 47.62069702]
[191.91857910 48.08963394]
[179.41455078 56.37510681]
[166.91050720 64.66058350]
[154.40647888 72.94606018]
[141.90243530 81.23152924]
[129.39840698 89.51700592]
[129.10388184 111.27490234]
[114.66333771 127.55260468]
[118.32204437 142.09954834]
[121.98074341 156.64651489]
[132.06875610 145.54551697]
[147.04969788 146.30114746]
[155.96948242 158.36090088]
[152.30589294 172.90663147]
[138.73777771 179.30242920]
[125.18658447 172.87216187]
[127.33516693 187.71748352]
[136.96940613 200.26707458]
[131.13491821 213.97137451]
[133.28349304 228.81669617]
[135.43208313 243.66201782]
[137.58065796 258.50735474]
[139.72923279 273.35266113]
[141.87782288 288.19799805]
[153.84010315 288.92852783]
[165.47412109 291.78729248]
[176.40449524 296.68041992]
[186.27888489 303.44836426]
[194.77926636 311.87124634]
[201.63224792 321.67590332]
[206.61778259 332.54473877]
[209.57633972 344.12609863]
[210.41390991 356.04550171]
[209.10502625 367.91790771]
[205.69355774 379.36001587]
[200.29122925 390.00277710]
[193.07394409 399.50314331]
[184.27604675 407.55529785]
[174.18280029 413.90036011]
[163.12101746 418.33471680]
[151.44854736 420.71667480]
[151.44854736 435.71667480]
[151.44854736 450.71667480]
[151.44854736 465.71667480]
[151.44854736 480.71667480]
[151.44854736 495.71667480]
[151.44854736 510.71667480]
[151.44854736 525.71667480]
[151.44854736 540.71667480]
[151.44854736 555.71667480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[27 119]
[28 118]
[29 112]
[30 111]
[31 110]
[37 90]
[38 89]
[39 88]
[40 87]
[43 85]
[44 84]
[45 83]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
