%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCAUUCCCCCUCAAAxxxxxxxxxxUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUAGCAUUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.85351562 300.02990723]
[137.54951477 285.03298950]
[137.24551392 270.03607178]
[136.94149780 255.03915405]
[136.63749695 240.04223633]
[136.33349609 225.04531860]
[136.02949524 210.04840088]
[135.72549438 195.05148315]
[135.42147827 180.05456543]
[131.22201538 165.65440369]
[123.41696930 152.84498596]
[115.61192322 140.03556824]
[100.98708344 142.96049500]
[86.24334717 140.71035767]
[73.15674591 133.55619812]
[63.30372238 122.35982513]
[57.87117004 108.46995544]
[57.51350403 93.55979156]
[62.27381516 79.42541504]
[71.57865906 67.76948547]
[63.77361298 54.96006775]
[55.96856308 42.15065002]
[40.87206268 38.31222916]
[33.13910675 25.21047020]
[36.89148712 10.84192085]
[29.08643913 -1.96749711]
[21.28138733 -14.77691555]
[13.47633743 -27.58633232]
[5.67128754 -40.39575195]
[0.98290497 -42.94756317]
[-1.92911577 -46.68658447]
[-2.91080332 -50.72077179]
[-2.19139886 -54.22932816]
[-9.20362759 -67.48936462]
[-16.21585655 -80.74940491]
[-30.12911224 -75.10916138]
[-44.54160309 -70.90546417]
[-59.30543518 -68.18143463]
[-74.26910400 -66.96503448]
[-89.27906036 -67.26875305]
[-104.18127441 -69.08946228]
[-118.82283020 -72.40847778]
[-133.05348206 -77.19175720]
[-146.72718811 -83.39019775]
[-159.70364380 -90.94020081]
[-171.84968567 -99.76428986]
[-183.04067993 -109.77191925]
[-193.16178894 -120.86039734]
[-202.10914612 -132.91592407]
[-209.79093933 -145.81480408]
[-216.12835693 -159.42465210]
[-221.05633545 -173.60583496]
[-224.52433777 -188.21282959]
[-226.49674988 -203.09571838]
[-226.95335388 -218.10180664]
[-225.88945007 -233.07708740]
[-223.31594849 -247.86790466]
[-219.25927734 -262.32247925]
[-213.76106262 -276.29244995]
[-206.87770081 -289.63452148]
[-198.67985535 -302.21173096]
[-189.25164795 -313.89501953]
[-178.68980408 -324.56454468]
[-167.10272217 -334.11077881]
[-154.60929871 -342.43576050]
[-141.33773804 -349.45410156]
[-127.42424011 -355.09371948]
[-113.01155853 -359.29678345]
[-98.24761200 -362.02017212]
[-83.28388977 -363.23590088]
[-68.27394867 -362.93151855]
[-53.37181091 -361.11016846]
[-38.73040009 -357.79049683]
[-24.49996567 -353.00659180]
[-10.82652950 -346.80755615]
[2.14959574 -339.25698853]
[14.29525280 -330.43234253]
[25.48580742 -320.42422485]
[35.60642624 -309.33532715]
[44.55325699 -297.27938843]
[52.23448563 -284.38018799]
[58.57129669 -270.77005005]
[63.49865723 -256.58865356]
[66.96601105 -241.98150635]
[68.93776703 -227.09851074]
[69.39370728 -212.09240723]
[68.32913971 -197.11717224]
[65.75499725 -182.32647705]
[61.69768906 -167.87208557]
[56.19885254 -153.90234375]
[49.31491470 -140.56059265]
[41.11651611 -127.98374176]
[31.68778229 -116.30084229]
[21.12547112 -105.63179779]
[9.53796959 -96.08607483]
[-2.95581794 -87.76163483]
[4.05641127 -74.50159454]
[11.06864071 -61.24155807]
[18.48070526 -48.20080185]
[26.28575516 -35.39138412]
[34.09080505 -22.58196640]
[41.89585495 -9.77254772]
[49.70090866 3.03687048]
[64.19062805 6.29012060]
[72.28852844 19.16950607]
[68.77797699 34.34560013]
[76.58303070 47.15501785]
[84.38807678 59.96443558]
[99.01291656 57.03950500]
[113.75665283 59.28964615]
[126.84325409 66.44380188]
[136.69627380 77.64017487]
[142.12882996 91.53004456]
[142.48649597 106.44020844]
[137.72618103 120.57458496]
[128.42134094 132.23051453]
[136.22639465 145.03993225]
[144.03143311 157.84934998]
[143.94644165 142.84959412]
[147.14085388 128.19367981]
[153.46031189 114.58983612]
[162.59942627 102.69544983]
[174.11657715 93.08528900]
[187.45523071 86.22375488]
[201.97077942 82.44242096]
[216.96182251 81.92400360]
[231.70391846 84.69355774]
[245.48469543 90.61726379]
[257.63821411 99.40884399]
[267.57717896 110.64347839]
[274.82131958 123.77826691]
[279.02053833 138.17849731]
[279.97192383 153.14830017]
[277.62954712 167.96427917]
[272.10653687 181.91047668]
[263.66983032 194.31297302]
[252.72709656 204.57243347]
[239.80712891 212.19309998]
[225.53427124 216.80670166]
[210.59822083 218.19029236]
[195.72073364 216.27702332]
[181.62075806 211.15934753]
[168.97964478 203.08456421]
[158.40824890 192.44287109]
[150.41839600 179.75054932]
[150.72241211 194.74746704]
[151.02641296 209.74440002]
[151.33041382 224.74131775]
[151.63441467 239.73823547]
[151.93841553 254.73515320]
[152.24243164 269.73205566]
[152.54643250 284.72897339]
[152.85043335 299.72592163]
[155.43112183 318.93502808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 118]
[11 117]
[12 116]
[20 108]
[21 107]
[22 106]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[33 98]
[34 97]
[35 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
