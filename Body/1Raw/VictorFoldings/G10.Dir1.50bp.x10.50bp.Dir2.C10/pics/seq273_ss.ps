%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCxxxxxxxxxxAGACCUAACCUGACUAGAAAAGCUAUUACCUAAAACAAUUUCACAGCACCAAAUCUCCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[153.36978149 56.74092865]
[142.81776428 67.40184021]
[132.26574707 78.06274414]
[121.71373749 88.72365570]
[111.16172028 99.38456726]
[100.71971130 110.15324402]
[90.38880920 121.02855682]
[80.05790710 131.90386963]
[69.72700500 142.77919006]
[59.39610291 153.65449524]
[61.28754044 167.02731323]
[55.20256805 178.86598206]
[43.57315826 184.93109131]
[30.76898956 183.19741821]
[20.21697617 193.85833740]
[9.66495991 204.51924133]
[8.30913067 220.50489807]
[-5.11376333 229.29156494]
[-20.30682564 224.13885498]
[-25.61524010 208.99949646]
[-16.96684456 195.48710632]
[-0.99594873 193.96722412]
[9.55606651 183.30632019]
[20.10808182 172.64541626]
[19.28622627 155.87556458]
[31.05725861 143.43472290]
[48.52078629 143.32359314]
[58.85168839 132.44828796]
[69.18259430 121.57296753]
[79.51349640 110.69765472]
[89.84439850 99.82234192]
[92.69527435 92.22534180]
[100.50080872 88.83255005]
[111.05282593 78.17163849]
[121.60484314 67.51073456]
[132.15686035 56.84982300]
[142.70887756 46.18891525]
[118.47595978 14.01997662]
[101.49223328 -22.49210739]
[92.50321198 -61.73852539]
[91.90219879 -101.99057007]
[99.71310425 -141.47579956]
[85.56578827 -146.46112061]
[71.41846466 -151.44644165]
[55.40674973 -147.90287781]
[44.53313446 -160.17872620]
[49.98347092 -175.64566040]
[66.15091705 -178.39260864]
[76.40379333 -165.59376526]
[90.55110931 -160.60844421]
[104.69842529 -155.62310791]
[108.39956665 -164.31887817]
[112.52458191 -172.82182312]
[117.06346893 -181.11132812]
[122.00521088 -189.16725159]
[127.33781433 -196.97003174]
[133.04833984 -204.50071716]
[139.12292480 -211.74102783]
[145.54681396 -218.67337036]
[152.30444336 -225.28091431]
[159.37940979 -231.54762268]
[166.75451660 -237.45826721]
[174.41188049 -242.99848938]
[182.33290100 -248.15483093]
[190.49836731 -252.91477966]
[198.88844299 -257.26675415]
[207.48277283 -261.20022583]
[216.26049805 -264.70556641]
[225.20028687 -267.77432251]
[234.28047180 -270.39901733]
[243.47897339 -272.57324219]
[252.77348328 -274.29174805]
[262.14141846 -275.55035400]
[271.56005859 -276.34600830]
[281.00653076 -276.67672729]
[290.45791626 -276.54171753]
[299.89120483 -275.94131470]
[309.28356934 -274.87698364]
[318.61215210 -273.35128784]
[327.85433960 -271.36788940]
[336.98767090 -268.93164062]
[345.98999023 -266.04843140]
[354.83941650 -262.72525024]
[363.51446533 -258.97018433]
[371.99407959 -254.79232788]
[380.25765991 -250.20181274]
[388.28515625 -245.20977783]
[396.05706787 -239.82833862]
[403.55453491 -234.07057190]
[410.75930786 -227.95042419]
[417.65393066 -221.48277283]
[424.22164917 -214.68330383]
[430.44650269 -207.56852722]
[436.31338501 -200.15568542]
[441.80804443 -192.46281433]
[446.91714478 -184.50856018]
[451.62823486 -176.31222534]
[455.92993164 -167.89372253]
[459.81173706 -159.27348328]
[463.26425171 -150.47244263]
[466.27905273 -141.51193237]
[468.84884644 -132.41374207]
[470.96737671 -123.19994354]
[472.62948608 -113.89290619]
[473.83114624 -104.51522064]
[474.56939697 -95.08966064]
[474.84249878 -85.63909912]
[474.64974976 -76.18650055]
[473.99157715 -66.75479126]
[472.86962891 -57.36688614]
[471.28662109 -48.04557037]
[469.24633789 -38.81348038]
[466.75375366 -29.69303131]
[463.81491089 -20.70636749]
[460.43698120 -11.87530804]
[456.62808228 -3.22129726]
[452.39752197 5.23465204]
[447.75552368 13.47200680]
[442.71334839 21.47076416]
[437.28326416 29.21150017]
[431.47842407 36.67541885]
[425.31295776 43.84439468]
[418.80175781 50.70101547]
[411.96069336 57.22863007]
[404.80630493 63.41139221]
[397.35601807 69.23427582]
[389.62789917 74.68314362]
[381.64068604 79.74475861]
[373.41378784 84.40682983]
[364.96716309 88.65802765]
[356.32135010 92.48802948]
[347.49728394 95.88752747]
[338.51638794 98.84826660]
[329.40051270 101.36304474]
[320.17175293 103.42575073]
[310.85253906 105.03137207]
[301.46545410 106.17600250]
[292.03332520 106.85685730]
[282.57904053 107.07228088]
[273.12554932 106.82173157]
[263.69580078 106.10582733]
[254.31268311 104.92628479]
[244.99900818 103.28596497]
[235.77735901 101.18885040]
[226.67013550 98.64001465]
[217.69946289 95.64564514]
[208.88710022 92.21300507]
[200.25447083 88.35042572]
[191.82250977 84.06726837]
[183.61170959 79.37393188]
[175.64201355 74.28181458]
[167.93275452 68.80325317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 34]
[5 33]
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[14 24]
[15 23]
[16 22]
[42 51]
[43 50]
[44 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
