%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACUAAAACCCCUACGCAUUUAUAUAGAGGAGACAAGUCGUAACAUGGUAAGUGUACUxxxxxxxxxxACCAAGCAUAAUAUAGCAAGGACUAACCCCUAUACCUUCUGCAUAAUGAAUUAACUAGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.54167175 272.83062744]
[102.22961426 257.83386230]
[101.91755676 242.83711243]
[101.60549927 227.84036255]
[101.29344177 212.84361267]
[100.98138428 197.84684753]
[100.66933441 182.85009766]
[100.35727692 167.85334778]
[100.04521942 152.85659790]
[88.34559631 143.46943665]
[73.63763428 146.41491699]
[58.92967224 149.36039734]
[44.22171021 152.30587769]
[29.57820892 155.55670166]
[15.00550556 159.11146545]
[0.43280309 162.66622925]
[-2.81360650 177.53976440]
[-12.15777969 189.48017883]
[-25.70417595 196.15216064]
[-40.74227905 196.28041077]
[-54.28890991 189.89306641]
[-63.68000793 178.30545044]
[-78.25270844 181.86021423]
[-92.78764343 185.56637573]
[-107.28324127 189.42353821]
[-121.77883911 193.28070068]
[-125.70220947 208.13003540]
[-136.53599548 219.01693726]
[-151.36595154 223.01287842]
[-166.20292664 219.04298401]
[-177.05581665 208.17514038]
[-181.00526428 193.33271790]
[-176.98887634 178.50827026]
[-166.08706665 167.68949890]
[-151.23233032 163.78659058]
[-136.42054749 167.84941101]
[-125.63600159 178.78509521]
[-111.14040375 174.92793274]
[-96.64480591 171.07077026]
[-90.95283508 166.28045654]
[-81.80747223 167.28750610]
[-67.23477173 163.73274231]
[-64.23421478 149.12240601]
[-55.15034485 137.21472168]
[-41.74230576 130.40403748]
[-26.64525795 130.08894348]
[-12.85249043 136.38548279]
[-3.12195873 148.09352112]
[11.45074368 144.53875732]
[26.02344704 140.98399353]
[29.25278854 137.38581848]
[34.80015564 135.81802368]
[41.27622604 137.59791565]
[55.98418808 134.65243530]
[70.69215393 131.70695496]
[85.40011597 128.76147461]
[71.36665344 100.31531525]
[88.18860626 77.94882965]
[85.39627838 63.21102142]
[82.60395813 48.47321320]
[79.81163025 33.73540878]
[64.78856659 32.06239700]
[50.92673111 26.03406143]
[39.45870209 16.18643570]
[31.40421295 3.39516568]
[27.47946358 -11.20236015]
[28.03343773 -26.30813789]
[33.01688004 -40.57897186]
[41.98666382 -52.74591064]
[54.14520264 -61.72707748]
[68.41136932 -66.72386932]
[83.51661682 -67.29198456]
[98.11781311 -63.38089752]
[110.91661835 -55.33838272]
[120.77497101 -43.87957382]
[126.81627655 -30.02338409]
[128.50334167 -15.00189304]
[125.68616486 -0.15080215]
[118.61523438 13.20934010]
[107.91930389 23.89055824]
[94.54943848 30.94308472]
[97.34176636 45.68088913]
[100.13408661 60.41869736]
[102.92641449 75.15650177]
[120.17480469 81.41779327]
[129.82328796 98.95229340]
[125.19981384 120.13326263]
[139.77250671 116.57849884]
[154.34521484 113.02373505]
[159.45979309 108.67074585]
[165.14947510 107.74394989]
[169.59799194 109.63765717]
[184.30595398 106.69216919]
[199.01391602 103.74668884]
[206.87406921 98.96444702]
[214.05834961 100.89627075]
[228.82440186 98.25740814]
[243.59045410 95.61854553]
[258.29843140 92.67305756]
[272.94192505 89.42223358]
[287.58541870 86.17140961]
[290.57589722 71.23899841]
[299.38668823 58.81764984]
[312.49127197 51.05944824]
[327.61920166 49.30853653]
[342.14947510 53.86828232]
[353.56460571 63.94867325]
[359.88690186 77.80322266]
[360.02096558 93.03154755]
[353.94354248 106.99525452]
[342.70761108 117.27503204]
[328.25988770 122.08985901]
[313.10345459 120.60553741]
[299.86434937 113.07922363]
[290.83624268 100.81491089]
[276.19274902 104.06573486]
[261.54925537 107.31655884]
[258.24575806 110.84677887]
[252.66696167 112.29882812]
[246.22932434 110.38459778]
[231.46327209 113.02346039]
[216.69720459 115.66232300]
[201.95939636 118.45465088]
[187.25143433 121.40013123]
[172.54348755 124.34561920]
[157.89997864 127.59644318]
[143.32727051 131.15119934]
[128.75457764 134.70596313]
[143.24757385 138.57289124]
[158.13269043 136.72004700]
[172.24295044 141.80929565]
[182.51841736 152.73699951]
[186.73077393 167.13339233]
[183.96652222 181.87649536]
[174.82511902 193.76913452]
[161.28895569 200.23228455]
[146.29347229 199.86436462]
[133.09056091 192.74516296]
[124.54338074 180.41853333]
[122.50565338 165.55581665]
[115.04196930 152.54454041]
[115.35402679 167.54129028]
[115.66608429 182.53804016]
[115.97814178 197.53479004]
[116.29019928 212.53155518]
[116.60225677 227.52830505]
[116.91430664 242.52505493]
[117.22636414 257.52182007]
[117.53842163 272.51855469]
[120.12941742 291.72628784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 56]
[11 55]
[12 54]
[13 53]
[14 50]
[15 49]
[16 48]
[22 42]
[23 41]
[24 39]
[25 38]
[26 37]
[58 84]
[59 83]
[60 82]
[61 81]
[87 128]
[88 127]
[89 126]
[92 125]
[93 124]
[94 123]
[96 122]
[97 121]
[98 120]
[99 117]
[100 116]
[101 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
