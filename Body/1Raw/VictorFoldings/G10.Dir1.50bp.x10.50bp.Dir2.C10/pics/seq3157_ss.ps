%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACACCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACxxxxxxxxxxCCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[79.74964142 527.12042236]
[79.74964142 512.12042236]
[79.74964142 497.12042236]
[79.74964142 482.12042236]
[79.74964142 467.12042236]
[79.74964142 452.12042236]
[79.74964142 437.12042236]
[79.74964142 422.12042236]
[79.74964142 407.12042236]
[79.74964142 392.12042236]
[65.39762878 389.40844727]
[51.78951263 384.09100342]
[39.39403915 376.34960938]
[28.63848305 366.44934082]
[19.89391136 354.72964478]
[13.46240711 341.59289551]
[9.56661320 327.49029541]
[8.34203529 312.90670776]
[9.83232307 298.34368896]
[13.98772430 284.30249023]
[20.66673660 271.26660156]
[29.64092636 259.68518066]
[40.60274887 249.95767212]
[53.17607880 242.41986084]
[66.92911530 237.33239746]
[81.38922882 234.87174988]
[79.47957611 232.73620605]
[78.32929230 229.69139099]
[78.29828644 226.03340149]
[79.62863922 222.18617249]
[82.40269470 218.65542603]
[83.96027374 203.73652649]
[85.51786041 188.81761169]
[87.07543945 173.89869690]
[88.63301849 158.97978210]
[90.19059753 144.06086731]
[91.28191376 129.10061646]
[91.90589142 114.11360931]
[83.73806000 99.49233246]
[92.80198669 85.40900421]
[93.11404419 70.41224670]
[93.42610168 55.41549683]
[93.73815918 40.41874313]
[93.42610168 25.42198944]
[92.49047089 10.45119762]
[91.55484772 -4.51959419]
[81.01216125 -19.58052635]
[89.35119629 -34.99028015]
[88.10431671 -49.93836594]
[86.85744476 -64.88645172]
[85.61057281 -79.83454132]
[84.36369324 -94.78263092]
[70.81645966 -105.80123138]
[69.42459869 -122.87011719]
[80.56099701 -135.43350220]
[79.00341034 -150.35241699]
[77.44583130 -165.27133179]
[74.29730225 -169.59640503]
[73.27108765 -174.23313904]
[74.12184906 -178.30473328]
[76.28641510 -181.16517639]
[75.66243744 -196.15219116]
[60.88616180 -199.13966370]
[47.25450134 -205.57714844]
[35.55998611 -215.09039307]
[26.48252296 -227.12629700]
[20.54986382 -240.98512268]
[18.10692215 -255.86112976]
[19.29573059 -270.88943481]
[24.04717064 -285.19635010]
[32.08500290 -297.95004272]
[42.94191742 -308.40902710]
[55.98670578 -315.96530151]
[70.46096039 -320.17947388]
[85.52317047 -320.80657959]
[100.29763794 -317.81015015]
[113.92539215 -311.36441040]
[125.61413574 -301.84408569]
[134.68429565 -289.80267334]
[140.60855103 -275.94024658]
[143.04248047 -261.06277466]
[141.84455872 -246.03517151]
[137.08444214 -231.73115540]
[129.03887939 -218.98234558]
[118.17563629 -208.52992249]
[105.12626648 -200.98158264]
[90.64945984 -196.77616882]
[91.27343750 -181.78915405]
[92.36474609 -166.82890320]
[93.92232513 -151.90998840]
[95.47990417 -136.99108887]
[106.55259705 -130.32832336]
[111.82627869 -118.31738281]
[109.16011047 -105.27439880]
[99.31178284 -96.02950287]
[100.55865479 -81.08141327]
[101.80553436 -66.13333130]
[103.05240631 -51.18524170]
[104.29927826 -36.23715591]
[113.35124207 -28.15202713]
[114.47763062 -15.66402340]
[106.52563477 -5.45522261]
[107.46126556 9.51556873]
[108.39689636 24.48636055]
[110.47745514 26.45578003]
[111.87685394 29.39442825]
[112.21183014 33.03718567]
[111.20587921 36.98168945]
[108.73490906 40.73080063]
[108.42285919 55.72755432]
[108.11080170 70.72430420]
[107.79874420 85.72106171]
[115.35920715 94.63314056]
[114.99454498 106.31444550]
[106.89290619 114.73758698]
[106.26892853 129.72459412]
[108.75645447 134.46081543]
[109.09891510 139.19738770]
[107.66628265 143.10241699]
[105.10951233 145.61845398]
[103.55193329 160.53736877]
[101.99435425 175.45628357]
[100.43676758 190.37518311]
[98.87918854 205.29409790]
[97.32160950 220.21301270]
[96.38597870 235.18380737]
[111.45517731 238.47438049]
[125.59470367 244.62577820]
[138.26733398 253.40228271]
[148.99197388 264.46853638]
[157.36189270 277.40228271]
[163.06018066 291.71047974]
[165.87168884 306.84808350]
[165.69125366 322.23886108]
[162.52751160 337.29730225]
[156.50262451 351.45092773]
[147.84742737 364.16189575]
[136.89271545 374.94766235]
[124.05650330 383.39916992]
[109.82814789 389.19638062]
[94.74964142 392.12042236]
[94.74964142 407.12042236]
[94.74964142 422.12042236]
[94.74964142 437.12042236]
[94.74964142 452.12042236]
[94.74964142 467.12042236]
[94.74964142 482.12042236]
[94.74964142 497.12042236]
[94.74964142 512.12042236]
[94.74964142 527.12042236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 126]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[37 116]
[38 115]
[40 112]
[41 111]
[42 110]
[43 109]
[44 104]
[45 103]
[46 102]
[48 99]
[49 98]
[50 97]
[51 96]
[52 95]
[55 91]
[56 90]
[57 89]
[61 88]
[62 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
