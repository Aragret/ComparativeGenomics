%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAACCAAUACUACCAAUCAAUACUxxxxxxxxxxAUAACAAGCUCCAUCUGCCUACGACAAACAGACCUAAAAUCGCUCAUUGCAUACUCUUCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.21155548 262.18780518]
[120.21155548 247.18782043]
[120.21155548 232.18782043]
[120.21155548 217.18782043]
[120.21155548 202.18782043]
[120.21155548 187.18782043]
[120.21155548 172.18782043]
[120.21155548 157.18782043]
[120.21155548 142.18782043]
[120.21155548 127.18782043]
[107.06933594 119.95580292]
[93.92829132 112.72441101]
[81.25677490 120.75141144]
[68.58525848 128.77841187]
[72.75945282 143.29573059]
[72.67317963 158.40100098]
[68.33343506 172.86970520]
[60.09201813 185.52891541]
[48.61702728 195.35243225]
[34.83868790 201.54386902]
[19.87394714 203.60134888]
[4.93592930 201.35806274]
[-8.76440620 194.99586487]
[-20.11643410 185.03051758]
[-28.19989777 172.26986694]
[-32.35950470 157.74835205]
[-32.25805664 142.64317322]
[-27.90377808 128.17884827]
[-19.64964867 115.52791595]
[-8.16479492 105.71594238]
[5.61975813 99.53834534]
[20.58655739 97.49590302]
[35.52231598 99.75418854]
[49.21625137 106.13014221]
[60.55826187 116.10688782]
[73.22977448 108.07989502]
[85.90129089 100.05289459]
[95.06323242 88.17607117]
[99.61051941 73.88194275]
[104.15780640 59.58781052]
[108.70510101 45.29368210]
[113.25238800 30.99955177]
[117.79968262 16.70542145]
[103.88357544 11.08764458]
[90.43219757 4.43349218]
[77.52259064 -3.21891928]
[65.22869873 -11.82575798]
[53.62094498 -21.33772278]
[42.76581955 -31.70033073]
[32.72549820 -42.85422516]
[23.55749512 -54.73551559]
[15.31431866 -67.27614594]
[8.04318905 -80.40428925]
[1.78575408 -94.04473877]
[-3.42214346 -108.11936951]
[-7.55067301 -122.54755402]
[-10.57618618 -137.24665833]
[-12.48135281 -152.13247681]
[-13.25526047 -167.11976624]
[-12.89347649 -182.12263489]
[-11.39807320 -197.05519104]
[-8.77761459 -211.83187866]
[-5.04711294 -226.36807251]
[-0.22793524 -240.58049011]
[5.65231419 -254.38774109]
[12.55995369 -267.71072388]
[20.45541573 -280.47314453]
[29.29347610 -292.60186768]
[39.02350998 -304.02743530]
[49.58978653 -314.68441772]
[60.93177795 -324.51174927]
[72.98451996 -333.45315552]
[85.67897034 -341.45742798]
[98.94242859 -348.47869873]
[112.69890594 -354.47674561]
[126.86961365 -359.41723633]
[141.37338257 -363.27185059]
[156.12713623 -366.01852417]
[171.04637146 -367.64151001]
[186.04560852 -368.13150024]
[201.03895569 -367.48574829]
[215.94052124 -365.70788574]
[230.66494751 -362.80810547]
[245.12789917 -358.80307007]
[259.24652100 -353.71566772]
[272.93997192 -347.57504272]
[286.12976074 -340.41641235]
[298.74041748 -332.28070068]
[310.69961548 -323.21459961]
[321.93893433 -313.26998901]
[332.39395142 -302.50384521]
[342.00479126 -290.97781372]
[350.71640015 -278.75793457]
[358.47888184 -265.91421509]
[365.24774170 -252.52020264]
[370.98428345 -238.65261841]
[375.65557861 -224.39091492]
[379.23489380 -209.81675720]
[381.70172119 -195.01365662]
[383.04196167 -180.06637573]
[383.24789429 -165.06053162]
[382.31835938 -150.08210754]
[380.25866699 -135.21687317]
[377.08065796 -120.54998779]
[372.80249023 -106.16545868]
[367.44866943 -92.14568329]
[361.04989624 -78.57096100]
[353.64282227 -65.51905060]
[345.26983643 -53.06471634]
[335.97891235 -41.27929306]
[325.82327271 -30.23028564]
[314.86111450 -19.98098373]
[303.15518188 -10.59009743]
[290.77255249 -2.11141562]
[277.78417969 5.40649605]
[264.26440430 11.92057514]
[250.29069519 17.39350891]
[235.94309998 21.79394722]
[221.30378723 25.09668732]
[206.45663452 27.28280830]
[191.48664856 28.33979034]
[176.47961426 28.26157761]
[161.52146912 27.04861832]
[146.69789124 24.70786095]
[132.09381104 21.25271225]
[127.54651642 35.54684067]
[122.99922943 49.84097290]
[118.45194244 64.13510132]
[113.90464783 78.42922974]
[109.35736084 92.72336578]
[120.20095062 82.35916901]
[130.84895325 71.79413605]
[144.75570679 66.17255402]
[159.75440979 66.37031555]
[173.50810242 72.35662079]
[183.87384033 83.19873810]
[189.23654175 97.20735931]
[188.76063538 112.19980621]
[182.52027893 125.84011841]
[171.48779297 136.00299072]
[157.38211060 141.10494995]
[142.40293884 140.35156250]
[135.21154785 127.18782043]
[135.21154785 142.18782043]
[135.21154785 157.18782043]
[135.21154785 172.18782043]
[135.21154785 187.18782043]
[135.21154785 202.18782043]
[135.21154785 217.18782043]
[135.21154785 232.18782043]
[135.21154785 247.18782043]
[135.21154785 262.18780518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 37]
[13 36]
[14 35]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
