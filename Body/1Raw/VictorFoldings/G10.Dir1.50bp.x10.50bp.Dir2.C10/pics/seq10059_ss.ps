%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAAxxxxxxxxxxAUCUGCCUACGACAAACAGACCUAAAAUCGCUCAUUGCAUACUCUUCAAUCAGCCACAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[106.20515442 282.75961304]
[106.20515442 267.75961304]
[106.20515442 252.75962830]
[106.20515442 237.75962830]
[106.20515442 222.75962830]
[106.20515442 207.75962830]
[106.20515442 192.75962830]
[106.20515442 177.75962830]
[106.20515442 162.75962830]
[106.20515442 147.75962830]
[72.74689484 125.01000977]
[74.77615356 94.49208069]
[61.68299866 87.17298126]
[48.58984375 79.85387421]
[35.49668884 72.53476715]
[22.40353584 65.21566010]
[11.56033611 76.99975586]
[-1.76250386 85.86955261]
[-16.80170059 91.32167053]
[-32.69677353 93.04839325]
[-48.53926849 90.95503998]
[-63.42469025 85.16513062]
[-76.50414276 76.01313019]
[-87.03273010 64.02512360]
[-94.41198730 49.88855743]
[-98.22389984 34.41283798]
[-98.25456238 18.48297501]
[-94.50621033 3.00899076]
[-107.89250183 -3.75912404]
[-118.25141907 7.22143650]
[-131.27160645 14.83045197]
[-145.89355469 18.45864868]
[-160.93019104 17.82028389]
[-175.16329956 12.97563171]
[-187.44213867 4.32540894]
[-196.77650452 -7.42236328]
[-202.41664124 -21.31029701]
[-203.91336060 -36.20966721]
[-201.15385437 -50.91213226]
[-214.54014587 -57.68024445]
[-227.92642212 -64.44836426]
[-241.31271362 -71.21647644]
[-254.69898987 -77.98458862]
[-268.08529663 -84.75270844]
[-281.33215332 -76.84550476]
[-296.75033569 -77.37818146]
[-309.41989136 -86.18076324]
[-315.29806519 -100.44437408]
[-312.50912476 -115.61755371]
[-301.94302368 -126.85858917]
[-286.97134399 -130.58052063]
[-272.37152100 -125.59567261]
[-262.80230713 -113.49470520]
[-261.31716919 -98.13899231]
[-247.93087769 -91.37087250]
[-234.54460144 -84.60276031]
[-221.15830994 -77.83464813]
[-207.77203369 -71.06652832]
[-194.38574219 -64.29841614]
[-184.18125916 -75.23669434]
[-171.29502869 -82.86403656]
[-156.76702881 -86.55494690]
[-141.77252197 -86.00202179]
[-127.52703857 -81.24153137]
[-115.18776703 -72.65116882]
[-105.75959778 -60.92010498]
[-100.01327515 -46.99369812]
[-98.42239380 -31.99731827]
[-101.12438202 -17.14540863]
[-87.73809814 -10.37729454]
[-78.85516357 -21.26156044]
[-67.88206482 -30.04467583]
[-55.30524445 -36.33386993]
[-41.68296051 -39.84700394]
[-27.62049675 -40.42523193]
[-13.74327374 -38.04017639]
[-0.66903335 -32.79530716]
[11.01966286 -24.92145348]
[20.80138969 -14.76666260]
[28.23911858 -2.78079438]
[32.99974060 10.50439644]
[34.86898804 24.49884987]
[33.76107788 38.58041763]
[29.72264099 52.12250519]
[42.81579590 59.44161224]
[55.90895081 66.76071930]
[69.00210571 74.07982635]
[82.09526062 81.39892578]
[104.35553741 63.26770782]
[140.58776855 74.07476044]
[153.36512756 66.21733093]
[166.14248657 58.35990906]
[163.37039185 43.43744278]
[166.17996216 28.52198792]
[174.19120789 15.63073444]
[186.32067871 6.50711870]
[200.92796326 2.38503480]
[216.03755188 3.82196093]
[229.60598755 10.62356472]
[239.79826355 21.86998367]
[245.23594666 36.04023361]
[245.18365479 51.21790695]
[239.64842224 65.35034180]
[229.37887573 76.52624512]
[215.76388550 83.23417664]
[200.64474487 84.56692505]
[186.06622314 80.34426117]
[173.99992371 71.13726807]
[161.22256470 78.99468994]
[148.44520569 86.85211945]
[149.14634705 94.31926727]
[162.78112793 100.57170868]
[150.54866028 109.25357819]
[151.24980164 116.72073364]
[165.26652527 122.06224060]
[179.28323364 127.40375519]
[193.29994202 132.74526978]
[205.65414429 123.50527191]
[221.04426575 122.43406677]
[234.55940247 129.87347412]
[241.88690186 143.44960022]
[240.68861389 158.83035278]
[231.34687805 171.10778809]
[216.84262085 176.36424255]
[201.80410767 172.92236328]
[191.03005981 161.88047791]
[187.95843506 146.76197815]
[173.94172668 141.42047119]
[159.92500305 136.07896423]
[145.90829468 130.73744202]
[139.73251343 134.99299622]
[149.47247314 146.40057373]
[159.21244812 157.80816650]
[171.59548950 166.27339172]
[171.62361145 181.27337646]
[159.27238464 189.78495789]
[145.26525879 184.41831970]
[141.76370239 169.83155823]
[134.57232666 156.66781616]
[127.38093567 143.50407410]
[121.20515442 147.75962830]
[121.20515442 162.75962830]
[121.20515442 177.75962830]
[121.20515442 192.75962830]
[121.20515442 207.75962830]
[121.20515442 222.75962830]
[121.20515442 237.75962830]
[121.20515442 252.75962830]
[121.20515442 267.75961304]
[121.20515442 282.75961304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 88]
[13 87]
[14 86]
[15 85]
[16 84]
[28 70]
[29 69]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[90 110]
[91 109]
[92 108]
[114 130]
[115 129]
[116 128]
[117 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
