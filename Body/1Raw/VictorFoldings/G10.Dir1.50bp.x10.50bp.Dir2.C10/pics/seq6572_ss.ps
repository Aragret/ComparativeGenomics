%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUxxxxxxxxxxUGAAAUGCCCCAACUAAAUACUACCGUAUGGCCCACCAUAAUUACCCCCAUACUCCUUACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 339.71395874]
[92.50000000 324.71395874]
[92.50000000 309.71395874]
[92.50000000 294.71395874]
[92.50000000 279.71395874]
[92.50000000 264.71395874]
[92.50000000 249.71395874]
[92.50000000 234.71395874]
[92.50000000 219.71395874]
[92.50000000 204.71395874]
[81.95767212 203.42019653]
[71.60002136 201.06782532]
[61.53307724 197.68090820]
[51.85988617 193.29412842]
[42.67945862 187.95236206]
[34.08576965 181.71032715]
[26.16678429 174.63189697]
[19.00356102 166.78952026]
[12.66942406 158.26348877]
[-0.37133104 165.67555237]
[-13.41208649 173.08761597]
[-26.45284081 180.49967957]
[-39.49359512 187.91174316]
[-52.53435135 195.32382202]
[-63.31690979 208.40711975]
[-78.87381744 201.66775513]
[-76.70442200 184.85317993]
[-59.94641495 182.28306580]
[-46.90566254 174.87100220]
[-33.86490631 167.45892334]
[-20.82415199 160.04685974]
[-7.78339624 152.63479614]
[5.25735903 145.22273254]
[0.61977750 133.83541870]
[-2.65460920 121.98397064]
[-4.52088642 109.83097839]
[-4.95345449 97.54312897]
[-3.94638014 85.28898621]
[-1.51347697 73.23663330]
[2.31188273 61.55139160]
[7.47722673 50.39354706]
[13.91170216 39.91615295]
[21.52704811 30.26292610]
[30.21880341 21.56628036]
[39.86774445 13.94550705]
[50.34151840 7.50513983]
[61.49645615 2.33352160]
[57.00601196 -11.97856712]
[52.51556396 -26.29065514]
[48.02511597 -40.60274506]
[43.53466797 -54.91483307]
[34.11574936 -43.24076080]
[19.11624908 -43.11832428]
[9.50801277 -54.63708115]
[12.31927776 -69.37128448]
[25.49365997 -76.54315186]
[39.39402008 -70.90695953]
[36.37454224 -85.59990692]
[33.35506439 -100.29285431]
[30.33558846 -114.98580933]
[27.31611061 -129.67875671]
[24.29663277 -144.37170410]
[9.24187374 -145.60900879]
[-4.85397625 -151.03889465]
[-16.84823036 -160.22119141]
[-25.76856804 -172.41152954]
[-30.89185905 -186.62168884]
[-31.80277824 -201.69970703]
[-28.42748260 -216.42329407]
[-21.03959465 -229.59887695]
[-10.23801327 -240.15835571]
[3.10162330 -247.24571228]
[17.89793015 -250.28643799]
[32.95143890 -249.03401184]
[47.04182816 -243.58996582]
[59.02685165 -234.39562988]
[67.93493652 -222.19633484]
[73.04395294 -207.98103333]
[73.93972015 -192.90209961]
[70.54963684 -178.18191528]
[63.14851379 -165.01376343]
[52.33633041 -154.46514893]
[38.98958206 -147.39118958]
[42.00905991 -132.69822693]
[45.02853775 -118.00528717]
[48.04801559 -103.31233215]
[51.06749344 -88.61938477]
[54.08697128 -73.92643738]
[57.84675980 -59.40528107]
[62.33720398 -45.09319305]
[66.82765198 -30.78110313]
[71.31809998 -16.46901321]
[75.80854797 -2.15692520]
[102.87609100 -4.94280338]
[129.75041199 -0.67858124]
[154.62609863 10.34926891]
[175.83197021 27.39989090]
[191.94342041 49.32781601]
[201.87808228 74.65991974]
[216.65603638 72.08847046]
[231.43397522 69.51702118]
[219.37210083 60.60011292]
[215.69825745 46.05697632]
[222.07812500 32.48136139]
[235.61912537 26.02834892]
[250.18186951 29.62368393]
[259.16372681 41.63727188]
[258.49237061 56.62223816]
[248.47250366 67.78437805]
[263.46557617 67.32840729]
[278.45861816 66.87244415]
[293.45169067 66.41647339]
[308.44476318 65.96051025]
[322.09878540 56.87755585]
[336.66967773 64.40223694]
[337.16818237 80.79380798]
[323.08145142 89.19001770]
[308.90072632 80.95357513]
[293.90765381 81.40954590]
[278.91461182 81.86550903]
[263.92153931 82.32147980]
[248.92846680 82.77744293]
[234.00541687 84.29496765]
[219.22747803 86.86641693]
[204.44953918 89.43786621]
[204.95954895 97.81909180]
[204.79812622 106.21426392]
[203.96627808 114.56967926]
[202.46936035 122.83189392]
[200.31690979 130.94805908]
[197.52272034 138.86622620]
[194.10466003 146.53576660]
[190.08459473 153.90760803]
[185.48823547 160.93460083]
[180.34500122 167.57177734]
[174.68778992 173.77668762]
[168.55278015 179.50962830]
[161.97921753 184.73393250]
[155.00917053 189.41618347]
[147.68722534 193.52642822]
[140.06021118 197.03836060]
[132.17692566 199.92951965]
[124.08779907 202.18141174]
[115.84458160 203.77963257]
[107.50000000 204.71395874]
[107.50000000 219.71395874]
[107.50000000 234.71395874]
[107.50000000 249.71395874]
[107.50000000 264.71395874]
[107.50000000 279.71395874]
[107.50000000 294.71395874]
[107.50000000 309.71395874]
[107.50000000 324.71395874]
[107.50000000 339.71395874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[47 93]
[48 92]
[49 91]
[50 90]
[51 89]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[62 83]
[99 125]
[100 124]
[101 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
