%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAAAAUxxxxxxxxxxCCACUAAAACACUCACCAAGACCUCAACCCCUGACCCCCAUGCCUCAGGAUACUCCUCAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.47903442 269.44970703]
[98.47903442 254.44972229]
[98.47903442 239.44972229]
[98.47903442 224.44972229]
[98.47903442 209.44972229]
[98.47903442 194.44972229]
[98.47903442 179.44972229]
[98.47903442 164.44972229]
[98.47903442 149.44972229]
[98.47903442 134.44972229]
[92.35755920 130.11642456]
[85.16617584 143.28015137]
[79.29842377 157.08483887]
[64.30173492 156.76960754]
[59.01927567 142.73052979]
[70.08925629 132.60742188]
[80.11460114 121.44980621]
[73.99312592 117.11650848]
[59.84580994 122.10182953]
[45.69849396 127.08715057]
[31.55117798 132.07247925]
[17.40386200 137.05780029]
[3.25654531 142.04312134]
[2.08038878 157.22654724]
[-5.17544937 170.61581421]
[-17.25385284 179.89117432]
[-32.06216049 183.44558716]
[-47.03475189 180.66322327]
[-59.57752609 172.02618408]
[-67.51737976 159.03085327]
[-69.47867584 143.92875671]
[-65.12162018 129.33642578]
[-55.20108795 117.78208160]
[-41.43587494 111.26757050]
[-26.21088982 110.92157745]
[-12.16395092 116.80404663]
[-1.72877669 127.89579773]
[12.41854000 122.91047668]
[26.56585693 117.92515564]
[40.71317291 112.93983459]
[54.86048889 107.95451355]
[69.00780487 102.96919250]
[69.77746582 87.98894501]
[56.21556854 81.57997131]
[42.65367508 75.17099762]
[29.09177780 68.76202393]
[15.52988052 62.35304642]
[-1.37408686 61.05219269]
[-4.80355644 44.44872665]
[10.20166779 36.55698776]
[21.93885612 48.79114914]
[35.50075150 55.20012665]
[49.06264877 61.60910034]
[62.62454605 68.01807404]
[76.18643951 74.42705536]
[89.68182373 67.87918091]
[93.04108429 53.26017380]
[78.92716217 48.12434387]
[65.55136871 41.29296112]
[53.11647797 32.86959076]
[41.81100464 22.98192978]
[31.80633163 11.77986908]
[23.25413132 -0.56676930]
[16.28404999 -13.87081337]
[11.00175381 -27.93057823]
[7.48732042 -42.53291702]
[5.79402781 -57.45647049]
[5.94754601 -72.47499084]
[7.94554710 -87.36080933]
[11.75774288 -101.88825989]
[17.32633972 -115.83711243]
[24.56692314 -128.99589539]
[33.36972046 -141.16513062]
[43.60129166 -152.16033936]
[55.10652542 -161.81483459]
[67.71100616 -169.98225403]
[81.22364807 -176.53878784]
[95.43960571 -181.38502502]
[110.14337158 -184.44752502]
[125.11204529 -185.67982483]
[140.11868286 -185.06327820]
[154.93582153 -182.60722351]
[169.33880615 -178.34887695]
[183.10931396 -172.35281372]
[196.03857422 -164.70991516]
[207.93058777 -155.53605652]
[218.60507202 -144.97030640]
[227.90020752 -133.17285156]
[235.67507935 -120.32251740]
[241.81181335 -106.61412048]
[246.21740723 -92.25548553]
[248.82504272 -77.46427917]
[249.59519958 -62.46472931]
[248.51620483 -47.48423004]
[245.60443115 -32.74987793]
[240.90397644 -18.48504448]
[234.48614502 -4.90598059]
[226.44819641 7.78145933]
[216.91201782 19.38493538]
[206.02214050 29.72854424]
[193.94366455 38.65547562]
[180.85971069 46.03040695]
[166.96859741 51.74152756]
[152.48094177 55.70225906]
[137.61636353 57.85256577]
[122.60019684 58.15984344]
[107.66009521 56.61943436]
[104.30083466 71.23844147]
[119.47573853 73.46898651]
[133.04040527 83.92665100]
[140.55247498 101.29920197]
[155.13623047 104.80836487]
[169.71997070 108.31753540]
[184.30372620 111.82670593]
[198.88748169 115.33586884]
[209.40724182 104.14524078]
[224.11755371 99.72912598]
[239.06143188 103.27542877]
[250.21902466 113.83021545]
[254.58901978 128.55430603]
[250.99588013 143.48698425]
[240.40617371 154.61145020]
[225.66845703 158.93525696]
[210.74711609 155.29534912]
[199.65589905 144.67080688]
[195.37831116 129.91961670]
[180.79455566 126.41045380]
[166.21081543 122.90128326]
[151.62705994 119.39212036]
[137.04330444 115.88294983]
[131.15223694 120.52464294]
[142.26829529 130.59605408]
[153.38435364 140.66744995]
[167.63188171 145.35876465]
[175.26644897 158.27050781]
[172.51130676 173.01530457]
[160.72938538 182.29896545]
[145.74917603 181.52891541]
[134.98129272 171.08607483]
[133.75286865 156.13549805]
[126.56148529 142.97177124]
[119.37010193 129.80802917]
[113.47903442 134.44972229]
[113.47903442 149.44972229]
[113.47903442 164.44972229]
[113.47903442 179.44972229]
[113.47903442 194.44972229]
[113.47903442 209.44972229]
[113.47903442 224.44972229]
[113.47903442 239.44972229]
[113.47903442 254.44972229]
[113.47903442 269.44970703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[56 108]
[57 107]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
