%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCCUAAUGGGGGGGGGGAAUCGGUGCCCCCGAUAUGGCGUUUCCCCGCAUAAACAACAUAAGCUUCUxxxxxxxxxxACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCCCCCCCCCCCUUCCCCUACU\
) } def
/len { sequence length } bind def

/coor [
[83.28809357 402.09307861]
[71.40382385 392.81799316]
[62.08511734 380.96786499]
[55.87375259 367.23168945]
[53.13084793 352.40808105]
[54.01587677 337.35882568]
[58.47738647 322.95886230]
[66.25598145 310.04544067]
[76.89943695 299.36926270]
[89.78894043 291.55108643]
[104.17513275 287.04541016]
[103.23950195 272.07461548]
[102.30387115 257.10385132]
[101.36824799 242.13304138]
[100.43261719 227.16224670]
[99.49698639 212.19146729]
[98.56136322 197.22067261]
[97.62573242 182.24987793]
[96.69010162 167.27908325]
[95.75447845 152.30828857]
[94.81884766 137.33750916]
[79.14643097 131.40162659]
[67.59589386 119.25896454]
[62.45029831 103.30960846]
[64.72670746 86.70607758]
[73.97516632 72.73020172]
[65.98525238 60.03527451]
[57.99533844 47.34034348]
[50.00542068 34.64541626]
[42.01550674 21.95048523]
[26.86495018 18.33130836]
[18.94288254 5.34302425]
[22.48658371 -9.07841015]
[14.49666786 -21.77334023]
[-0.79111260 -21.29268837]
[-14.17847443 -28.48124695]
[-22.11744881 -41.32021332]
[-22.56109047 -56.30884552]
[-15.49034405 -69.41876984]
[-23.48026085 -82.11370087]
[-31.47017670 -94.80863190]
[-39.46009445 -107.50356293]
[-47.45000839 -120.19848633]
[-61.29176712 -114.33317566]
[-75.89517212 -110.76432037]
[-90.88196564 -109.58437347]
[-105.86394501 -110.82389069]
[-120.45304871 -114.45077515]
[-134.27137756 -120.37106323]
[-146.96101379 -128.43142700]
[-158.19325256 -138.42306519]
[-167.67715454 -150.08718872]
[-175.16706848 -163.12165833]
[-180.46899414 -177.18884277]
[-183.44558716 -191.92437744]
[-184.01974487 -206.94657898]
[-182.17660522 -221.86633301]
[-177.96391296 -236.29718018]
[-171.49076843 -249.86532593]
[-162.92486572 -262.21932983]
[-152.48805237 -273.03918457]
[-140.45069885 -282.04464722]
[-127.12457275 -289.00241089]
[-112.85487366 -293.73229980]
[-98.01121521 -296.11178589]
[-82.97808075 -296.07922363]
[-68.14486694 -293.63546753]
[-53.89579010 -288.84381104]
[-40.59993362 -281.82836914]
[-28.60169601 -272.77087402]
[-18.21185493 -261.90591431]
[-9.69953728 -249.51490784]
[-3.28523016 -235.91885376]
[0.86492044 -221.46989441]
[2.64341521 -206.54229736]
[2.00418687 -191.52272034]
[-1.03620696 -176.80021667]
[-6.39901257 -162.75613403]
[-13.94532108 -149.75422668]
[-23.47966385 -138.13130188]
[-34.75508118 -128.18840027]
[-26.76516342 -115.49347687]
[-18.77524757 -102.79854584]
[-10.78533077 -90.10361481]
[-2.79541469 -77.40868378]
[12.08307076 -78.11313629]
[25.40511894 -71.22989655]
[33.54693604 -58.51859283]
[34.23760223 -43.33900833]
[27.19159698 -29.76325607]
[35.18151474 -17.06832695]
[49.71686935 -14.02546215]
[58.00062561 -1.26481760]
[54.71043396 13.96056938]
[62.70035172 26.65549850]
[70.69026947 39.35042953]
[78.68018341 52.04535675]
[86.67009735 64.74028778]
[96.10104370 62.50691223]
[105.78972626 62.75201035]
[115.09568024 65.45938110]
[123.40373230 70.45005798]
[130.16468811 77.39413452]
[134.93161011 85.83256531]
[137.38937378 95.20752716]
[152.34962463 96.29883575]
[167.30987549 97.39015198]
[182.27012634 98.48146057]
[188.47419739 95.90909576]
[194.17359924 96.77400970]
[197.82580566 99.94210815]
[212.72772217 101.65480042]
[227.62962341 103.36749268]
[241.03826904 94.55910492]
[256.23965454 99.68721008]
[261.57257080 114.81795502]
[252.94606018 128.34432983]
[236.97764587 129.89006042]
[225.91693115 118.26939392]
[211.01502991 116.55670166]
[196.11312866 114.84400940]
[181.17881775 113.44171143]
[166.21856689 112.35039520]
[151.25831604 111.25908661]
[136.29806519 110.16777802]
[126.51558685 126.79286194]
[109.78963470 136.40187073]
[110.72526550 151.37266541]
[111.66089630 166.34346008]
[112.59652710 181.31425476]
[113.53215027 196.28503418]
[114.46778107 211.25582886]
[115.40341187 226.22662354]
[116.33903503 241.19741821]
[117.27466583 256.16821289]
[118.21029663 271.13900757]
[119.14591980 286.10980225]
[133.98115540 288.78921509]
[147.74378967 294.94171143]
[159.63368225 304.20962524]
[168.95957947 316.05407715]
[175.17926025 329.78646851]
[177.93115234 344.60842896]
[177.05525208 359.65823364]
[172.60247803 374.06088257]
[164.83171082 386.97903442]
[154.19473267 397.66162109]
[141.30996704 405.48764038]
[126.92650604 410.00201416]
[111.88060760 410.94235229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[26 98]
[27 97]
[28 96]
[29 95]
[30 94]
[33 91]
[34 90]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[105 125]
[106 124]
[107 123]
[108 122]
[111 121]
[112 120]
[113 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
