%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAACAAACGGGGGGGGGGCCACAGGUCCUAAACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGAxxxxxxxxxxGCAGUCAUUCUCAUAAUCGCCCACGGGCUUACAUCCUCAUUACUAUUCUGCCCCCCCCCCCCUAGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 391.40884399]
[71.19830322 385.39282227]
[59.48964310 375.86340332]
[50.78712082 363.52774048]
[45.73651886 349.30120850]
[44.71262741 334.23953247]
[47.79142761 319.46035767]
[54.74444962 306.06042480]
[65.05573273 295.03411865]
[77.96011353 287.19958496]
[92.50000000 283.13827515]
[92.50000000 268.13827515]
[92.50000000 253.13829041]
[92.50000000 238.13829041]
[92.50000000 223.13829041]
[92.50000000 208.13829041]
[92.50000000 193.13829041]
[92.50000000 178.13829041]
[92.50000000 163.13829041]
[92.50000000 148.13829041]
[92.50000000 133.13829041]
[81.96235657 128.79304504]
[73.45478058 121.20725250]
[67.93477631 111.23465729]
[53.03287506 112.94734955]
[38.13097382 114.66003418]
[23.22907066 116.37272644]
[8.32716846 118.08541870]
[3.80229378 132.62657166]
[-6.25068617 144.06587219]
[-20.09003258 150.42137146]
[-35.31799316 150.59194946]
[-49.29623413 144.54804993]
[-59.60293579 133.33682251]
[-64.45240784 118.90067291]
[-63.00444031 103.74074554]
[-55.50991058 90.48360443]
[-43.26728821 81.42611694]
[-28.39768028 78.13755035]
[-13.47733688 81.18767548]
[-1.09129870 90.04803467]
[6.61447906 103.18351746]
[21.51638222 101.47082520]
[36.41828537 99.75813293]
[51.32018661 98.04544830]
[66.22209167 96.33275604]
[67.98191833 88.63168335]
[71.47256470 81.54515076]
[76.50532532 75.45623779]
[82.80815125 70.69409180]
[90.04031372 67.51615143]
[97.81087494 66.09419250]
[105.69976807 66.50509644]
[113.28055573 68.72664642]
[122.04676056 56.55480576]
[130.81297302 44.38296890]
[131.34136963 39.05940247]
[133.66122437 34.91565704]
[137.00593567 32.44287491]
[140.52519226 31.74843788]
[150.03355408 20.14709663]
[159.54191589 8.54575539]
[168.80686951 -3.25088453]
[177.82438660 -15.23771667]
[184.86952209 -28.48030281]
[189.77107239 -42.65686035]
[194.67263794 -56.83341980]
[199.57418823 -71.00997925]
[204.47573853 -85.18653870]
[209.37728882 -99.36309052]
[196.58828735 -107.32484436]
[185.89196777 -117.93315887]
[177.82484436 -130.65594482]
[172.79154968 -144.85501099]
[171.04455566 -159.81816101]
[172.67150879 -174.79484558]
[177.59077454 -189.03381348]
[185.55561829 -201.82087708]
[196.16653442 -212.51463318]
[208.89126587 -220.57867432]
[223.09156799 -225.60852051]
[238.05513000 -227.35188293]
[253.03141785 -225.72131348]
[267.26919556 -220.79859924]
[280.05432129 -212.83064270]
[290.74551392 -202.21714783]
[298.80648804 -189.49046326]
[303.83288574 -175.28894043]
[305.57263184 -160.32495117]
[303.93841553 -145.34907532]
[299.01223755 -131.11247253]
[291.04119873 -118.32927704]
[280.42510986 -107.64067078]
[267.69647217 -99.58279419]
[253.49374390 -94.55982208]
[238.52932739 -92.82370758]
[223.55384827 -94.46154022]
[218.65228271 -80.28498077]
[213.75073242 -66.10842896]
[208.84918213 -51.93186951]
[203.94763184 -37.75531006]
[199.04608154 -23.57875252]
[203.67855835 -17.68043137]
[218.52717590 -19.80610085]
[212.94351196 -5.88379192]
[217.57598877 0.01452808]
[232.51029968 -1.38777554]
[241.24856567 -14.35606670]
[256.29251099 -18.62378883]
[270.53884888 -12.17585659]
[277.26089478 1.94321680]
[273.28469849 17.06683540]
[260.48770142 26.05408669]
[244.91224670 24.66147041]
[233.91259766 13.54653168]
[218.97828674 14.94883537]
[199.44718933 7.92027712]
[189.81123352 -6.22018719]
[180.79370117 5.76664543]
[180.57690430 10.59660530]
[177.28025818 15.32560349]
[171.14324951 18.05411339]
[161.63490295 29.65545464]
[152.12654114 41.25679779]
[142.98480225 53.14917755]
[134.21859741 65.32101440]
[125.45239258 77.49285126]
[133.95756531 98.86872101]
[126.89392853 120.76325226]
[107.50000000 133.13829041]
[107.50000000 148.13829041]
[107.50000000 163.13829041]
[107.50000000 178.13829041]
[107.50000000 193.13829041]
[107.50000000 208.13829041]
[107.50000000 223.13829041]
[107.50000000 238.13829041]
[107.50000000 253.13829041]
[107.50000000 268.13827515]
[107.50000000 283.13827515]
[122.03988647 287.19958496]
[134.94427490 295.03411865]
[145.25555420 306.06042480]
[152.20857239 319.46035767]
[155.28736877 334.23953247]
[154.26348877 349.30120850]
[149.21287537 363.52774048]
[140.51036072 375.86340332]
[128.80169678 385.39282227]
[114.95575714 391.40884399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[54 127]
[55 126]
[56 125]
[60 124]
[61 123]
[62 122]
[63 119]
[64 118]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[106 116]
[107 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
