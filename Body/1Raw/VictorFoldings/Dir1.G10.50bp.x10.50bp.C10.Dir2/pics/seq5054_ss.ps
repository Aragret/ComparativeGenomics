%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUCUCACGGGGGGGGGGAUGACAAAAACUAGCCCCCAUCUCAAUCAUAUACCAAAUCUCUCCCUCACxxxxxxxxxxUAGCCCCCAUCUCAAUCAUAUACCAAAUCUCUCCCUCACUAAACGUAAGCCCCCCCCCCCCUUCUCCUCAC\
) } def
/len { sequence length } bind def

/coor [
[83.32703400 368.13021851]
[69.83815002 361.39868164]
[58.35265350 351.63412476]
[49.53828430 339.40423584]
[43.90750122 325.42001343]
[41.78767395 310.49456787]
[43.30204010 295.49554443]
[48.36256409 281.29504395]
[56.67502975 268.71862793]
[67.75615692 258.49746704]
[80.96171570 251.22583008]
[95.52394104 247.32646179]
[95.21596527 232.32962036]
[94.90798187 217.33277893]
[94.60000610 202.33593750]
[94.29203033 187.33911133]
[93.98405457 172.34226990]
[93.67607117 157.34542847]
[93.36809540 142.34858704]
[93.06011963 127.35175323]
[92.75214386 112.35491943]
[85.67907715 100.29409790]
[92.25102234 87.95306396]
[84.23200989 74.31465912]
[91.70635986 61.43120956]
[91.39838409 46.43437195]
[76.40652466 45.80934906]
[61.48252487 44.25349808]
[46.68411636 41.77283096]
[32.06856155 38.37694931]
[17.69239807 34.07899094]
[3.61124849 28.89558029]
[-10.12041092 22.84677505]
[-23.44945526 15.95597458]
[-36.32431412 8.24983978]
[-48.69517899 -0.24181527]
[-60.51419067 -9.48613930]
[-71.73561859 -19.44736671]
[-82.31605530 -30.08695984]
[-92.21455383 -41.36375427]
[-101.39283752 -53.23412323]
[-109.81538391 -65.65214539]
[-117.44961548 -78.56977081]
[-124.26599121 -91.93702698]
[-130.23814392 -105.70220184]
[-135.34295654 -119.81203461]
[-139.56068420 -134.21192932]
[-142.87503052 -148.84619141]
[-145.27314758 -163.65820312]
[-146.74575806 -178.59065247]
[-147.28718567 -193.58576965]
[-146.89530945 -208.58552551]
[-145.57167053 -223.53192139]
[-143.32136536 -238.36709595]
[-140.15312195 -253.03367615]
[-136.07919312 -267.47491455]
[-131.11532593 -281.63494873]
[-125.28073120 -295.45901489]
[-118.59798431 -308.89355469]
[-111.09294891 -321.88665771]
[-102.79464722 -334.38806152]
[-93.73518372 -346.34936523]
[-83.94961548 -357.72430420]
[-73.47580719 -368.46887207]
[-62.35426331 -378.54150391]
[-50.62802124 -387.90319824]
[-38.34244537 -396.51779175]
[-25.54506874 -404.35192871]
[-12.28539944 -411.37530518]
[1.38526165 -417.56072998]
[15.41402435 -422.88430786]
[29.74661636 -427.32540894]
[44.32758331 -430.86685181]
[59.10051727 -433.49496460]
[74.00826263 -435.19955444]
[88.99314880 -435.97402954]
[103.99719238 -435.81539917]
[118.96234894 -434.72427368]
[133.83071899 -432.70489502]
[148.54479980 -429.76504517]
[163.04762268 -425.91613770]
[177.28312683 -421.17300415]
[191.19619751 -415.55404663]
[204.73303223 -409.08096313]
[217.84124756 -401.77883911]
[230.47013855 -393.67590332]
[242.57084656 -384.80349731]
[254.09654236 -375.19595337]
[265.00265503 -364.89044189]
[275.24694824 -353.92684937]
[284.78985596 -342.34756470]
[293.59439087 -330.19738770]
[301.62655640 -317.52337646]
[308.85522461 -304.37448120]
[315.25244141 -290.80163574]
[320.79345703 -276.85733032]
[325.45684814 -262.59552002]
[329.22454834 -248.07138062]
[332.08200073 -233.34109497]
[334.01815796 -218.46165466]
[335.02551270 -203.49061584]
[335.10018921 -188.48591614]
[334.24185181 -173.50559998]
[332.45385742 -158.60763550]
[329.74313354 -143.84963989]
[326.12014771 -129.28871155]
[321.59890747 -114.98120117]
[316.19692993 -100.98245239]
[309.93508911 -87.34661865]
[302.83764648 -74.12645721]
[294.93200684 -61.37311935]
[286.24880981 -49.13594437]
[276.82162476 -37.46227264]
[266.68692017 -26.39727020]
[255.88389587 -15.98374462]
[244.45437622 -6.26198483]
[232.44256592 2.73039746]
[219.89494324 10.95861244]
[206.86004639 18.39082718]
[193.38829041 24.99828529]
[179.53181458 30.75542641]
[165.34422302 35.63997650]
[150.88041687 39.63303757]
[136.19633484 42.71916199]
[121.34878540 44.88640976]
[106.39522552 46.12639236]
[106.70320129 61.12323380]
[114.70018768 73.68895721]
[107.24785614 87.64508057]
[114.32092285 99.70590210]
[107.74897766 112.04693604]
[108.05695343 127.04377747]
[108.36493683 142.04061890]
[108.67291260 157.03744507]
[108.98088837 172.03428650]
[109.28886414 187.03112793]
[109.59684753 202.02796936]
[109.90482330 217.02481079]
[110.21279907 232.02163696]
[110.52077484 247.01847839]
[125.23081207 250.31671143]
[138.72377014 257.04006958]
[150.21519470 266.79766846]
[159.03697205 279.02221680]
[164.67622375 293.00299072]
[166.80511475 307.92718506]
[165.29983521 322.92709351]
[160.24792480 337.13067627]
[151.94308472 349.71212769]
[140.86814880 359.94000244]
[127.66700745 367.21963501]
[113.10714722 371.12783813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[23 129]
[25 127]
[26 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
