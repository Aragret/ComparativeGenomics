%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUAACUAAGGGGGGGGGGGCUAUACUAACCCCAGGGUUGGUCAAUUUCGUGCCAGCCACCGCGGUCACxxxxxxxxxxCCUCCUAUCCCUCAACCCCGACAUCAUUACCGGGUUUUCCUCUUGUAAAUCCCCCCCCCCAUAGUUUAACCAA\
) } def
/len { sequence length } bind def

/coor [
[82.07192230 376.68154907]
[68.19778442 370.83331299]
[55.84298325 362.22793579]
[45.54760742 351.24160767]
[37.76173401 338.35464478]
[32.82571793 324.13040161]
[30.95535088 309.19067383]
[32.23239136 294.18856812]
[36.60101318 279.77993774]
[43.87024307 266.59463501]
[53.72229385 255.20909119]
[65.72648621 246.12101746]
[79.35803986 239.72770691]
[94.02104187 236.30865479]
[93.72090912 221.31166077]
[93.42078400 206.31465149]
[93.12065125 191.31765747]
[92.82051849 176.32066345]
[92.52038574 161.32366943]
[92.22025299 146.32667542]
[91.92012024 131.32966614]
[91.61998749 116.33267212]
[81.61280823 105.15876007]
[66.73950195 103.21327209]
[51.86620331 101.26777649]
[36.99290466 99.32228851]
[22.01166916 98.57221985]
[7.01842594 99.02237701]
[-7.96280909 99.77244568]
[-22.92603683 100.82212067]
[-37.88926315 101.87179565]
[-52.85249329 102.92147064]
[-67.81571960 103.97114563]
[-82.77894592 105.02081299]
[-97.74217224 106.07048798]
[-111.02557373 115.68731689]
[-125.88317871 108.74588013]
[-127.03076172 92.38693237]
[-113.28778839 83.43916321]
[-98.79184723 91.10726166]
[-83.82862091 90.05758667]
[-68.86539459 89.00791168]
[-53.90216446 87.95823669]
[-38.93893814 86.90856934]
[-23.97570992 85.85889435]
[-9.01248264 84.80921936]
[-5.22812986 81.81299591]
[0.49273738 81.19966888]
[6.56826544 84.02913666]
[21.56150818 83.57897186]
[10.27976894 73.69351196]
[6.81255341 59.09973145]
[12.44250107 45.19636154]
[25.08690643 37.12672806]
[40.06817627 37.87605286]
[51.84424210 47.16714096]
[56.05873489 61.56290817]
[51.15257645 75.73786926]
[38.93839645 84.44898224]
[53.81169891 86.39447784]
[68.68499756 88.33997345]
[83.55829620 90.28546143]
[96.86153412 83.35553741]
[103.79145813 70.05229950]
[110.72138977 56.74906158]
[111.92397308 47.63633347]
[117.92539215 43.25102997]
[125.12010956 30.08911705]
[132.31483459 16.92720222]
[139.50955200 3.76528764]
[127.51257324 -5.28403950]
[116.96109772 -15.98377037]
[108.08003235 -28.10584068]
[101.05868530 -41.39186859]
[96.04670715 -55.55865479]
[93.15093231 -70.30424500]
[92.43308258 -85.31432343]
[93.90845490 -100.26895905]
[97.54561615 -114.84938812]
[103.26702881 -128.74482727]
[110.95073700 -141.65910339]
[120.43297577 -153.31694031]
[131.51161194 -163.46984863]
[143.95053101 -171.90141296]
[157.48457336 -178.43193054]
[171.82525635 -182.92219543]
[186.66693115 -185.27648926]
[201.69322205 -185.44464111]
[216.58386230 -183.42306519]
[231.02143860 -179.25485229]
[244.69824219 -173.02883911]
[257.32272339 -164.87773132]
[268.62579346 -154.97529602]
[278.36651611 -143.53257751]
[286.33731079 -130.79348755]
[292.36825562 -117.02955627]
[296.33078003 -102.53417206]
[298.14044189 -87.61629486]
[297.75866699 -72.59391022]
[295.19360352 -57.78721237]
[290.49990845 -43.51181030]
[283.77764893 -30.07198715]
[275.17007446 -17.75421143]
[264.86068726 -6.82103586]
[253.06921387 2.49449658]
[240.04699707 9.99382496]
[226.07162476 15.51710033]
[211.44094849 18.94659424]
[196.46685791 20.20920563]
[181.46849060 19.27802467]
[166.76556396 16.17289734]
[152.67146301 10.96000862]
[145.47674561 24.12192345]
[138.28202820 37.28383636]
[131.08729553 50.44575119]
[124.02462769 63.67898941]
[117.09469604 76.98222351]
[110.16477203 90.28546143]
[115.87034607 104.15797424]
[130.15463257 108.73609924]
[144.43890381 113.31422424]
[156.87582397 104.03506470]
[172.39204407 103.87196350]
[185.02125549 112.88764191]
[189.90728760 127.61538696]
[185.17134094 142.39207458]
[172.63450623 151.53576660]
[157.11743164 151.53053284]
[144.58676147 142.37838745]
[139.86077881 127.59850311]
[125.57649994 123.02037811]
[111.29221344 118.44225311]
[108.83159637 117.36811066]
[106.61698151 116.03254700]
[106.91711426 131.02954102]
[107.21724701 146.02653503]
[107.51737976 161.02352905]
[107.81751251 176.02053833]
[108.11764526 191.01753235]
[108.41777802 206.01452637]
[108.71791077 221.01152039]
[109.01804352 236.00851440]
[123.80609894 238.83818054]
[137.68254089 244.68096924]
[150.04072571 253.28149414]
[160.34042358 264.26373291]
[168.13136292 277.14764404]
[173.07296753 291.36996460]
[174.94921875 306.30895996]
[173.67808533 321.31155396]
[169.31512451 335.72189331]
[162.05108643 348.91006470]
[152.20350647 360.29946899]
[140.20289612 369.39227295]
[126.57386017 375.79095459]
[111.91220093 379.21575928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 62]
[24 61]
[25 60]
[26 59]
[27 50]
[28 49]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[63 118]
[64 117]
[65 116]
[67 115]
[68 114]
[69 113]
[70 112]
[119 132]
[120 131]
[121 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
