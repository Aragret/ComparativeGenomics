%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUACCUACGGGGGGGGGGGCCUAAUCUACUCCACCUCAAUCACACUACUCCCCAUAUCUAACAACGUAAxxxxxxxxxxCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCACCCCCCCCCCUCUGCCUACG\
) } def
/len { sequence length } bind def

/coor [
[83.08731079 346.92550659]
[70.21403503 339.02264404]
[60.08973694 327.81213379]
[53.53515625 314.20278931]
[51.08163452 299.29788208]
[52.92807007 284.30563354]
[58.92478561 270.44143677]
[68.58564758 258.82916260]
[81.12749481 250.41021729]
[95.53361511 245.86705017]
[95.22155762 230.87030029]
[94.90950012 215.87355042]
[94.59744263 200.87680054]
[94.28539276 185.88003540]
[93.97333527 170.88328552]
[93.66127777 155.88653564]
[93.34922028 140.88978577]
[93.03716278 125.89302826]
[92.72510529 110.89627075]
[91.78948212 95.92547607]
[90.23190308 81.00656891]
[74.85076904 79.41661835]
[60.13694000 74.67996216]
[46.72664642 67.00386047]
[35.19925690 56.72263336]
[26.05223656 44.28308868]
[19.67967224 30.22511864]
[16.35530663 15.15824223]
[16.22076988 -0.26479629]
[19.27955437 -15.37632179]
[25.39695930 -29.52262497]
[34.30602646 -42.09224701]
[45.61917496 -52.54240036]
[58.84508896 -60.42242050]
[73.41002655 -65.39318848]
[71.54241943 -80.27646637]
[69.67480469 -95.15975189]
[67.80718994 -110.04302979]
[65.93957520 -124.92630768]
[50.93666840 -124.43907928]
[35.95280457 -125.33824158]
[21.11582756 -127.61611938]
[6.55232048 -131.25328064]
[-7.61346197 -136.21868896]
[-21.26066017 -142.46997070]
[-34.27283478 -149.95381165]
[-46.53897476 -158.60635376]
[-57.95442581 -168.35377502]
[-68.42179108 -179.11291504]
[-77.85176086 -190.79196167]
[-86.16388702 -203.29129028]
[-93.28725433 -216.50424194]
[-99.16107941 -230.31811523]
[-103.73524475 -244.61502075]
[-106.97074127 -259.27301025]
[-108.83995056 -274.16699219]
[-109.32692719 -289.16989136]
[-108.42751312 -304.15374756]
[-106.14939117 -318.99069214]
[-102.51199341 -333.55413818]
[-97.54634857 -347.71981812]
[-91.29483032 -361.36691284]
[-83.81077576 -374.37896729]
[-75.15802765 -386.64495850]
[-65.41041565 -398.06027222]
[-54.65111160 -408.52743530]
[-42.97190094 -417.95721436]
[-30.47243500 -426.26913452]
[-17.25935555 -433.39227295]
[-3.44539380 -439.26586914]
[10.85159111 -443.83981323]
[25.50962067 -447.07504272]
[40.40363312 -448.94403076]
[55.40655899 -449.43075562]
[70.39038849 -448.53109741]
[85.22729492 -446.25271606]
[99.79067993 -442.61508179]
[113.95629883 -437.64920044]
[127.60328674 -431.39746094]
[140.61521912 -423.91317749]
[152.88105774 -415.26022339]
[164.29618835 -405.51242065]
[174.76319885 -394.75292969]
[184.19277954 -383.07357788]
[192.50448608 -370.57397461]
[199.62741089 -357.36077881]
[205.50077820 -343.54672241]
[210.07446289 -329.24966431]
[213.30947876 -314.59158325]
[215.17819214 -299.69750977]
[215.66465759 -284.69458008]
[214.76475525 -269.71078491]
[212.48612976 -254.87391663]
[208.84825134 -240.31057739]
[203.88214111 -226.14505005]
[197.63015747 -212.49816895]
[190.14567566 -199.48635864]
[181.49252319 -187.22065735]
[171.74452209 -175.80569458]
[160.98487854 -165.33886719]
[149.30534363 -155.90948486]
[136.80560303 -147.59797668]
[123.59228516 -140.47528076]
[109.77812958 -134.60214233]
[95.48099518 -130.02868652]
[80.82286072 -126.79392242]
[82.69046783 -111.91064453]
[84.55808258 -97.02735901]
[86.42569733 -82.14408112]
[88.29331207 -67.26080322]
[102.82495880 -66.18804932]
[116.86914062 -62.28601074]
[129.88031006 -55.70423126]
[141.35264587 -46.69639969]
[150.83972168 -35.61054611]
[157.97189331 -22.87561798]
[162.47067261 -8.98487568]
[164.15960693 5.52321482]
[162.97122192 20.08585548]
[158.94967651 34.13774490]
[152.24917603 47.13302231]
[143.12799072 58.56647873]
[131.93859863 67.99318695]
[119.11395264 75.04582214]
[105.15081024 79.44898987]
[106.70838928 94.36789703]
[108.97396851 96.51291656]
[110.48652649 99.55048370]
[110.90640259 103.19461060]
[110.00775909 107.03523254]
[107.72186279 110.58421326]
[108.03392029 125.58097076]
[108.34597778 140.57772827]
[108.65802765 155.57447815]
[108.97008514 170.57122803]
[109.28214264 185.56797791]
[109.59420013 200.56474304]
[109.90625763 215.56149292]
[110.21831512 230.55824280]
[110.53036499 245.55499268]
[125.11300659 249.49494934]
[137.99421692 257.38488770]
[148.12976074 268.58523560]
[154.69801331 282.18795776]
[157.16651917 297.09042358]
[155.33514404 312.08450317]
[149.35235596 325.95474243]
[139.70317078 337.57669067]
[127.16978455 346.00823975]
[112.76823425 350.56585693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 126]
[21 125]
[35 110]
[36 109]
[37 108]
[38 107]
[39 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
