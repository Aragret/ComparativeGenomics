%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGAUGAAGGGGGGGGGGGGCUACAAAGUAAGCGCAAGUACCCACGUAAAGACGUUAGGUCAAGGUGUxxxxxxxxxxUGAGGUGGCAAGAAAUGGGCUACAUUUUCUACCCCAGAAAACUACGAUAGCCCCCCCCCCCCCUUAUGAA\
) } def
/len { sequence length } bind def

/coor [
[60.29918289 485.92312622]
[45.42827988 483.41171265]
[31.64947128 477.28024292]
[19.82889938 467.91406250]
[10.70961857 455.90200806]
[4.86487246 441.99914551]
[2.66206741 427.07940674]
[4.23967361 412.08068848]
[9.49852085 397.94577026]
[18.10803413 385.56326294]
[29.52701378 375.71145630]
[43.03765106 369.00970459]
[57.79065323 365.87927246]
[58.41463089 350.89224243]
[59.03860855 335.90524292]
[59.66258621 320.91821289]
[60.28656387 305.93121338]
[60.91054153 290.94418335]
[61.53451920 275.95718384]
[62.15849686 260.97015381]
[62.78247452 245.98313904]
[63.40645218 230.99612427]
[64.03042603 216.00910950]
[64.65440369 201.02209473]
[65.27838135 186.03507996]
[55.86149979 179.46142578]
[50.76115799 169.03768921]
[51.36189270 157.32817078]
[57.62944031 147.27696228]
[68.09013367 141.46777344]
[69.33701324 126.51968384]
[70.58388519 111.57160187]
[68.56155396 96.70854950]
[63.36613464 82.63703156]
[58.17071915 68.56551361]
[46.13250732 58.29945374]
[48.98264694 43.68008423]
[43.78723145 29.60856438]
[29.71095657 22.93801498]
[24.64252090 8.59348202]
[31.08861732 -4.78498650]
[21.82366943 -16.58162689]
[9.38422871 -24.96376991]
[-3.05521178 -33.34591293]
[-21.42112732 -34.16627502]
[-28.55615616 -50.16913223]
[-41.16728210 -58.29067230]
[-53.77841187 -66.41221619]
[-66.38954163 -74.53376007]
[-82.78670502 -74.78866577]
[-90.52703857 -89.24617004]
[-81.64794922 -103.03361511]
[-65.28347778 -101.96767426]
[-58.26799774 -87.14488220]
[-45.65686798 -79.02334595]
[-33.04574203 -70.90180206]
[-20.43461227 -62.78025818]
[-8.50780964 -65.02941132]
[2.07947087 -58.31163788]
[5.32693148 -45.78535461]
[17.76637268 -37.40320969]
[30.20581245 -29.02106667]
[24.17716217 -42.75625610]
[20.88951111 -57.39153290]
[20.46447945 -72.38550568]
[22.91778755 -87.18352509]
[28.15868187 -101.23816681]
[35.99328995 -114.02952576]
[46.13179779 -125.08442688]
[58.19915390 -133.99391174]
[71.74896240 -140.42840576]
[86.27998352 -144.14988708]
[101.25468445 -145.02067566]
[116.11911774 -143.00857544]
[130.32342529 -138.18801880]
[143.34213257 -130.73730469]
[154.69367981 -120.93208313]
[163.95812988 -109.13505554]
[170.79278564 -95.78261566]
[174.94479370 -81.36870575]
[176.26057434 -66.42652893]
[174.69146729 -51.50882339]
[170.29550171 -37.16743469]
[163.23529053 -23.93287659]
[153.77203369 -12.29472828]
[142.25575256 -2.68350816]
[129.11250305 4.54524279]
[114.82846069 9.12411785]
[99.93202209 10.88373280]
[84.97425079 9.75899696]
[70.50846100 5.79151678]
[57.06977463 -0.87194270]
[45.16013718 -9.98040199]
[58.75352097 -4.00080967]
[64.22286224 10.19570160]
[57.85875320 24.41314888]
[63.05416870 38.48466873]
[74.72077179 47.74423981]
[72.24224091 63.37009811]
[77.43765259 77.44161987]
[82.63307190 91.51313782]
[90.03262329 84.39891052]
[99.63184357 82.30690765]
[108.48870850 85.40910339]
[114.12708282 92.35263062]
[129.12626648 92.19659424]
[144.12545776 92.04055786]
[159.12464905 91.88452148]
[174.12384033 91.72848511]
[189.12303162 91.57244873]
[201.33062744 81.16312408]
[217.05221558 84.35863495]
[224.22752380 98.70766449]
[217.35227966 113.20285034]
[201.70057678 116.72473907]
[189.27906799 106.57163239]
[174.27987671 106.72766876]
[159.28068542 106.88370514]
[144.28149414 107.03974915]
[129.28231812 107.19578552]
[114.28311920 107.35182190]
[102.20340729 117.55921173]
[85.53197479 112.81847382]
[84.28509521 127.76656342]
[83.03822327 142.71464539]
[95.81443787 156.63468933]
[94.44987488 175.16130066]
[80.26539612 186.65905762]
[79.64141846 201.64607239]
[79.01744080 216.63308716]
[78.39346313 231.62010193]
[77.76948547 246.60711670]
[77.14551544 261.59411621]
[76.52153778 276.58114624]
[75.89756012 291.56817627]
[75.27358246 306.55517578]
[74.64960480 321.54220581]
[74.02562714 336.52920532]
[73.40164948 351.51623535]
[72.77767181 366.50323486]
[87.21939850 370.84918213]
[100.12619019 378.65081787]
[110.68672180 389.41772461]
[118.23714447 402.47305298]
[122.30282593 416.99618530]
[122.62820435 432.07415771]
[119.19281769 446.75912476]
[112.21262360 460.12805176]
[102.12640381 471.34048462]
[89.56817627 479.69165039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[25 128]
[30 125]
[31 124]
[32 123]
[33 101]
[34 100]
[35 99]
[37 97]
[38 96]
[41 93]
[42 62]
[43 61]
[44 60]
[46 57]
[47 56]
[48 55]
[49 54]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
