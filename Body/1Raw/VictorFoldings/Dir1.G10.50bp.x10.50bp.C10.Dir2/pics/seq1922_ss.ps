%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUUACUACGGGGGGGGGGCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCGAUAGAAxxxxxxxxxxUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCACCACGCCCCCCCCCCACCCUACUAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 567.44580078]
[71.19830322 561.42974854]
[59.48964310 551.90032959]
[50.78712082 539.56469727]
[45.73651886 525.33813477]
[44.71262741 510.27645874]
[47.79142761 495.49731445]
[54.74444962 482.09738159]
[65.05573273 471.07104492]
[77.96011353 463.23654175]
[92.50000000 459.17523193]
[92.50000000 444.17523193]
[92.50000000 429.17523193]
[92.50000000 414.17523193]
[92.50000000 399.17523193]
[92.50000000 384.17523193]
[92.50000000 369.17523193]
[92.50000000 354.17523193]
[92.50000000 339.17523193]
[92.50000000 324.17523193]
[92.50000000 309.17523193]
[77.77018738 306.44155884]
[63.78981781 301.04629517]
[51.03553772 293.17181396]
[39.94248962 283.08502197]
[30.88946152 271.12838745]
[24.18593407 257.70822144]
[20.06152153 243.28092957]
[18.65810013 228.33743286]
[20.02492142 213.38655090]
[24.11689758 198.93759155]
[30.79607773 185.48301697]
[39.83630371 173.48173523]
[50.93086243 163.34333801]
[63.70289993 155.41418457]
[77.71820831 149.96557617]
[92.50000000 147.18443298]
[92.50000000 132.18443298]
[78.17774963 124.81686401]
[69.03902435 111.55444336]
[67.25458527 95.54745483]
[53.23787308 90.20594025]
[39.22116089 84.86443329]
[25.20444679 79.52291870]
[9.10823250 82.66041565]
[-1.45144641 70.11349487]
[4.38830376 54.78935242]
[20.62004852 52.45215225]
[30.54595947 65.50620270]
[44.56267166 70.84771729]
[58.57938766 76.18923187]
[72.59609985 81.53073883]
[80.13410950 73.59102631]
[89.85247803 68.54979706]
[100.68457794 66.96035004]
[104.39073944 52.42541122]
[108.09690094 37.89047623]
[111.80306244 23.35553932]
[115.35781860 8.78283691]
[118.76080322 -5.82605600]
[122.16378021 -20.43494797]
[124.95610046 -35.17275620]
[127.13294220 -50.01396179]
[129.30978394 -64.85516357]
[123.65709686 -79.63210297]
[133.15950012 -91.10178375]
[135.33633423 -105.94298553]
[137.51318359 -120.78419495]
[123.71660614 -126.91257477]
[112.08579254 -136.53686523]
[103.48384094 -148.94287109]
[98.54904938 -163.20997620]
[97.64763641 -178.27947998]
[100.84647369 -193.03312683]
[107.90819550 -206.37608337]
[118.30877686 -217.31823730]
[131.27641296 -225.04757690]
[145.84884644 -228.99057007]
[160.94467163 -228.85458374]
[175.44369507 -224.64973450]
[188.27000427 -216.68803406]
[198.47177124 -205.56030273]
[205.29199219 -192.09230042]
[208.22453308 -177.28343201]
[207.05180359 -162.23260498]
[201.86080933 -148.05670166]
[193.03675842 -135.80767822]
[181.23446655 -126.39446259]
[167.32974243 -120.51560974]
[152.35438538 -118.60735321]
[150.17755127 -103.76615143]
[148.00071716 -88.92494202]
[153.80908203 -75.20954895]
[144.15098572 -62.67832947]
[141.97415161 -47.83712387]
[139.79730225 -32.99591827]
[141.42620850 -30.63921928]
[142.18843079 -27.47488976]
[141.76376343 -23.84149933]
[139.96475220 -20.18984222]
[136.77267456 -17.03197098]
[133.36968994 -2.42307806]
[129.96672058 12.18581486]
[131.52241516 19.46080208]
[126.33799744 27.06170082]
[122.63183594 41.59663773]
[118.92567444 56.13157272]
[115.21951294 70.66651154]
[127.17387390 81.19394684]
[132.81471252 96.09075165]
[130.83142090 111.89582062]
[121.68482208 124.93703461]
[107.50000000 132.18443298]
[107.50000000 147.18443298]
[122.28179169 149.96557617]
[136.29710388 155.41418457]
[149.06913757 163.34333801]
[160.16369629 173.48173523]
[169.20391846 185.48301697]
[175.88310242 198.93759155]
[179.97508240 213.38655090]
[181.34190369 228.33743286]
[179.93847656 243.28092957]
[175.81407166 257.70822144]
[169.11053467 271.12838745]
[160.05751038 283.08502197]
[148.96446228 293.17181396]
[136.21018982 301.04629517]
[122.22981262 306.44155884]
[107.50000000 309.17523193]
[107.50000000 324.17523193]
[107.50000000 339.17523193]
[107.50000000 354.17523193]
[107.50000000 369.17523193]
[107.50000000 384.17523193]
[107.50000000 399.17523193]
[107.50000000 414.17523193]
[107.50000000 429.17523193]
[107.50000000 444.17523193]
[107.50000000 459.17523193]
[122.03988647 463.23654175]
[134.94427490 471.07104492]
[145.25555420 482.09738159]
[152.20857239 495.49731445]
[155.28736877 510.27645874]
[154.26348877 525.33813477]
[149.21287537 539.56469727]
[140.51036072 551.90032959]
[128.80169678 561.42974854]
[114.95575714 567.44580078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[37 114]
[38 113]
[41 52]
[42 51]
[43 50]
[44 49]
[55 108]
[56 107]
[57 106]
[58 105]
[59 103]
[60 102]
[61 101]
[62 96]
[63 95]
[64 94]
[66 92]
[67 91]
[68 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
