%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACAUCAUGGGGGGGGGGAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACxxxxxxxxxxAGAAAACCCCACAAACCCCAUUACUAAACCCACACUCAACAGAAACAAAGCCCCCCCCCCCAUACAUCAU\
) } def
/len { sequence length } bind def

/coor [
[-29.87322235 243.41183472]
[-37.08693695 236.53269958]
[-43.93678665 229.29118347]
[-50.40458679 221.70648193]
[-56.47317123 213.79873657]
[-62.12643433 205.58894348]
[-67.34937286 197.09889221]
[-72.12811279 188.35110474]
[-76.44998169 179.36882019]
[-80.30350494 170.17585754]
[-83.67845917 160.79664612]
[-98.09067535 164.95452881]
[-112.50289154 169.11241150]
[-126.87107086 173.41999817]
[-141.19366455 177.87681580]
[-155.51626587 182.33363342]
[-169.83886719 186.79045105]
[-184.16146851 191.24726868]
[-198.48405457 195.70408630]
[-212.80665588 200.16088867]
[-212.55001831 215.26423645]
[-216.56022644 229.82771301]
[-224.51216125 242.67074585]
[-235.76119995 252.75219727]
[-249.39544678 259.25482178]
[-264.30963135 261.65145874]
[-279.29470825 259.74783325]
[-293.13595581 253.69825745]
[-304.71124268 243.99316406]
[-313.08230591 231.41929626]
[-317.57046509 216.99594116]
[-317.81192017 201.89234924]
[-313.78710938 187.33290100]
[-305.82226562 174.49787903]
[-294.56311035 164.42773438]
[-280.92233276 157.93881226]
[-266.00573730 155.55715942]
[-251.02256775 157.47583008]
[-237.18743896 163.53930664]
[-225.62187195 173.25601196]
[-217.26347351 185.83830261]
[-202.94087219 181.38148499]
[-188.61827087 176.92466736]
[-174.29568481 172.46784973]
[-159.97308350 168.01103210]
[-145.65048218 163.55421448]
[-131.32788086 159.09739685]
[-125.84011841 154.07446289]
[-116.66077423 154.70019531]
[-102.24855804 150.54231262]
[-87.83634186 146.38442993]
[-93.05837250 112.74645233]
[-92.30420685 78.71390533]
[-85.59720612 45.34028244]
[-73.14497375 13.65866756]
[-55.33297729 -15.35022068]
[-32.71259308 -40.78840256]
[-5.98404598 -61.86843109]
[-13.70813084 -74.72682953]
[-21.43221664 -87.58523560]
[-36.02888489 -95.05981445]
[-36.58369446 -111.44957733]
[-22.52590370 -119.89413452]
[-8.31696415 -111.70645905]
[-8.57381344 -95.30931854]
[-0.84972835 -82.45092010]
[6.87435675 -69.59251404]
[15.73239326 -74.16365051]
[24.81409836 -78.27250671]
[34.09536743 -81.90818024]
[43.55156708 -85.06101990]
[53.15759659 -87.72265625]
[62.88795471 -89.88602448]
[72.71681976 -91.54538727]
[82.61810303 -92.69633484]
[92.56552124 -93.33580780]
[102.53267670 -93.46212006]
[112.49311066 -93.07492828]
[122.42037964 -92.17527008]
[132.28813171 -90.76551819]
[142.07019043 -88.84942627]
[151.74058533 -86.43207550]
[161.27365112 -83.51988220]
[170.64407349 -80.12057495]
[179.82698059 -76.24317932]
[188.79801941 -71.89799500]
[197.53335571 -67.09653473]
[206.00981140 -61.85155869]
[214.20487976 -56.17698669]
[222.09683228 -50.08787537]
[229.66470337 -43.60039139]
[236.88839722 -36.73175049]
[243.74876404 -29.50018883]
[250.22758484 -21.92489815]
[256.30764771 -14.02598381]
[261.97283936 -5.82441425]
[267.20809937 2.65804243]
[271.99954224 11.39887142]
[276.33447266 20.37487221]
[280.20135498 29.56221962]
[283.58993530 38.93652725]
[286.49121094 48.47291565]
[288.89746094 58.14606857]
[290.80236816 67.93031311]
[292.20080566 77.79968262]
[293.08911133 87.72797394]
[293.46490479 97.68884277]
[293.32717896 107.65584564]
[292.67630005 117.60252380]
[291.51400757 127.50248718]
[289.84341431 137.32943726]
[287.66888428 147.05732727]
[284.99627686 156.66029358]
[281.83261108 166.11288452]
[278.18630981 175.38998413]
[274.06704712 184.46697998]
[269.48577881 193.31976318]
[264.45465088 201.92486572]
[258.98699951 210.25942993]
[253.09735107 218.30134583]
[246.80134583 226.02923584]
[240.11570740 233.42262268]
[233.05815125 240.46186829]
[225.64741516 247.12829590]
[217.90318298 253.40419006]
[209.84600830 259.27291870]
[201.49725342 264.71890259]
[192.87911987 269.72766113]
[184.01445007 274.28591919]
[174.92678833 278.38156128]
[165.64024353 282.00375366]
[156.17947388 285.14285278]
[146.56958008 287.79052734]
[136.83609009 289.93975830]
[127.00482178 291.58483887]
[117.10187531 292.72137451]
[107.15354156 293.34640503]
[97.18621826 293.45825195]
[87.22635651 293.05657959]
[77.30040741 292.14248657]
[67.43470764 290.71841431]
[57.65544128 288.78808594]
[47.98857117 286.35668945]
[38.45975113 283.43066406]
[29.09427834 280.01773071]
[19.91700935 276.12701416]
[10.95230198 271.76876831]
[2.22395086 266.95465088]
[-6.24487543 261.69735718]
[-14.43169880 256.01086426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 51]
[12 50]
[13 49]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
