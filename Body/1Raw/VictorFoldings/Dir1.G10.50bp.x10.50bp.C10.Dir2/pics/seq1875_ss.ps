%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAACCCACGGGGGGGGGGUCCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUxxxxxxxxxxUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCCCCCCCCCCCACACCCAC\
) } def
/len { sequence length } bind def

/coor [
[81.06204987 498.36874390]
[67.04010773 492.81573486]
[54.84014893 483.94940186]
[45.22907639 472.32708740]
[38.81105423 458.67938232]
[35.98951721 443.86419678]
[36.94182968 428.81283569]
[41.60813522 414.47140503]
[49.69510269 401.74145508]
[60.69437790 391.42318726]
[73.91453552 384.16519165]
[88.52455139 380.42376709]
[88.52455139 365.42376709]
[88.52455139 350.42376709]
[88.52455139 335.42376709]
[88.52455139 320.42376709]
[88.52455139 305.42376709]
[88.52455139 290.42376709]
[88.52455139 275.42376709]
[88.52455139 260.42376709]
[88.52455139 245.42376709]
[88.52455139 230.42376709]
[76.90891266 225.28619385]
[68.08205414 216.08853149]
[63.39219284 204.18420410]
[63.57513428 191.34381104]
[68.63905334 179.49172974]
[77.85796356 170.41772461]
[89.87556458 165.50675964]
[90.49139404 150.51940918]
[91.10721588 135.53204346]
[91.72304535 120.54469299]
[92.33886719 105.55734253]
[89.71282196 100.93973541]
[89.89660645 95.17704010]
[93.30020142 89.97100830]
[94.53081512 75.02156830]
[81.52877808 71.40023041]
[69.37667847 65.53604126]
[58.45777512 57.61548996]
[49.11618042 47.88987732]
[41.64599228 36.66737747]
[36.28203583 24.30325317]
[33.19248962 11.18861580]
[32.47360992 -2.26194763]
[34.14673615 -15.62348080]
[38.15764999 -28.47408295]
[44.37834167 -40.40823364]
[52.61109161 -51.04957962]
[62.59475327 -60.06282806]
[74.01303101 -67.16427612]
[86.50452423 -72.13076019]
[99.67412567 -74.80669403]
[113.10556030 -75.10887146]
[115.55848694 -89.90695190]
[118.01141357 -104.70503235]
[120.46434021 -119.50310516]
[122.91727448 -134.30119324]
[125.37020111 -149.09927368]
[127.82312775 -163.89733887]
[113.52812195 -168.53529358]
[100.08408356 -175.25209045]
[87.79134369 -183.89768982]
[76.92453766 -194.27891541]
[67.72641754 -206.16387939]
[60.40249634 -219.28706360]
[55.11637497 -233.35527039]
[51.98615265 -248.05422974]
[51.08176041 -263.05554199]
[52.42340469 -278.02410889]
[55.98110580 -292.62548828]
[61.67539215 -306.53350830]
[69.37904358 -319.43743896]
[78.91996765 -331.04901123]
[90.08499908 -341.10879517]
[102.62472534 -349.39208984]
[116.25899506 -355.71383667]
[130.68322754 -359.93276978]
[145.57514954 -361.95468140]
[160.60209656 -361.73437500]
[175.42834473 -359.27676392]
[189.72268677 -354.63677979]
[203.16578674 -347.91806030]
[215.45729065 -339.27072144]
[226.32261658 -328.88793945]
[235.51904297 -317.00167847]
[242.84109497 -303.87744141]
[248.12521362 -289.80850220]
[251.25334167 -275.10910034]
[252.15559387 -260.10763550]
[250.81182861 -245.13926697]
[247.25204468 -230.53839111]
[241.55577087 -216.63119507]
[233.85028076 -203.72836304]
[224.30770874 -192.11814880]
[213.14123535 -182.05993652]
[200.60032654 -173.77842712]
[186.96516418 -167.45864868]
[172.54034424 -163.24174500]
[157.64811707 -161.22196960]
[142.62120056 -161.44441223]
[140.16827393 -146.64633179]
[137.71534729 -131.84826660]
[135.26242065 -117.05017853]
[132.80949402 -102.25209808]
[130.35656738 -87.45402527]
[127.90364075 -72.65594482]
[143.37184143 -66.62081909]
[157.15455627 -57.35079956]
[168.58532715 -45.29084015]
[177.11067200 -31.02088165]
[182.31697083 -15.22795868]
[183.95043945 1.32687020]
[181.92953491 17.84519958]
[176.34904480 33.52978516]
[167.47563171 47.62302017]
[155.73503113 59.44353104]
[141.69175720 68.41911316]
[126.02181244 74.11444092]
[109.48024750 76.25218201]
[108.24963379 91.20161438]
[107.32622528 106.17316437]
[106.71039581 121.16052246]
[106.09457397 136.14787292]
[105.47874451 151.13522339]
[104.86292267 166.12257385]
[119.89129639 175.12997437]
[128.27821350 190.41223145]
[127.80992126 207.74966431]
[118.70380402 222.40634155]
[103.52455139 230.42376709]
[103.52455139 245.42376709]
[103.52455139 260.42376709]
[103.52455139 275.42376709]
[103.52455139 290.42376709]
[103.52455139 305.42376709]
[103.52455139 320.42376709]
[103.52455139 335.42376709]
[103.52455139 350.42376709]
[103.52455139 365.42376709]
[103.52455139 380.42376709]
[118.13455963 384.16519165]
[131.35472107 391.42318726]
[142.35398865 401.74145508]
[150.44096375 414.47140503]
[155.10726929 428.81283569]
[156.05958557 443.86419678]
[153.23805237 458.67938232]
[146.82002258 472.32708740]
[137.20895386 483.94940186]
[125.00899506 492.81573486]
[110.98704529 498.36874390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[29 126]
[30 125]
[31 124]
[32 123]
[33 122]
[36 121]
[37 120]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
