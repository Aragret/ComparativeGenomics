%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGGAGGACGGGGGGGGGGUACUCAAAACCAUACCUCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAxxxxxxxxxxAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCUCCUCAUUCUAACCUGCCCCCCCCCCAAUCGGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[75.64288330 362.01950073]
[61.62094116 356.46649170]
[49.42098236 347.60015869]
[39.80990982 335.97784424]
[33.39188766 322.33013916]
[30.57034874 307.51495361]
[31.52266502 292.46359253]
[36.18896866 278.12216187]
[44.27593613 265.39221191]
[55.27521133 255.07392883]
[68.49536896 247.81594849]
[83.10538483 244.07450867]
[83.10538483 229.07450867]
[83.10538483 214.07450867]
[83.10538483 199.07450867]
[83.10538483 184.07450867]
[83.10538483 169.07450867]
[83.10538483 154.07450867]
[83.10538483 139.07450867]
[70.60134888 130.78903198]
[56.78776550 136.63583374]
[42.97418213 142.48262024]
[29.16059875 148.32940674]
[27.35282707 163.58154297]
[18.14833069 175.87677002]
[4.02307749 181.90776062]
[-11.22331333 180.05218506]
[-23.48963737 170.80918884]
[-29.47631645 156.66510010]
[-27.57296371 141.42460632]
[-18.29157066 129.18731689]
[-4.12878704 123.24500275]
[11.10567188 125.19611359]
[23.31381035 134.51582336]
[37.12739563 128.66903687]
[50.94097519 122.82224274]
[64.75456238 116.97545624]
[62.30550385 106.21571350]
[62.99046707 95.46247864]
[66.60719299 85.58886719]
[72.72127533 77.35537720]
[80.71281433 71.35143280]
[89.83665466 67.95390320]
[88.60604095 53.00447083]
[86.60998535 38.13787460]
[83.85373688 23.39327621]
[81.09749603 8.64868069]
[78.34125519 -6.09591627]
[65.81551361 -7.18440914]
[53.93516922 -11.26571751]
[43.40355301 -18.09253883]
[34.84276962 -27.25520515]
[28.75695229 -38.20626068]
[25.50258446 -50.29317474]
[25.26761246 -62.79721451]
[28.06060791 -74.97618866]
[33.71057129 -86.10850525]
[41.87739563 -95.53591919]
[52.07233429 -102.70244598]
[63.68724823 -107.18717194]
[62.14995575 -122.10819244]
[60.61266327 -137.02920532]
[59.07537079 -151.95022583]
[57.53807831 -166.87123108]
[56.00078583 -181.79225159]
[41.24601746 -185.19453430]
[28.39673996 -193.20545959]
[18.84674835 -204.95603943]
[13.63195515 -219.17169189]
[13.31802082 -234.31039429]
[17.93899918 -248.73001099]
[26.99364090 -260.86639404]
[39.49976349 -269.40313721]
[54.10080338 -273.41415405]
[69.21294403 -272.46444702]
[83.19692993 -266.65695190]
[94.53588867 -256.62167358]
[101.99985504 -243.44715881]
[104.77919006 -228.56246948]
[102.57241058 -213.58218384]
[95.61890411 -200.13127136]
[84.67292023 -189.66874695]
[70.92179871 -183.32954407]
[72.45909119 -168.40852356]
[73.99638367 -153.48751831]
[75.53367615 -138.56649780]
[77.07096863 -123.64548492]
[78.60826111 -108.72446442]
[95.79708099 -104.99351501]
[110.72377777 -95.64480591]
[121.61270905 -81.77159882]
[127.16218567 -65.00647736]
[126.70004272 -47.32923508]
[120.26504517 -30.83309174]
[108.60414886 -17.47681808]
[93.08585358 -8.85215855]
[95.84209442 5.89243746]
[98.59833527 20.63703346]
[101.35457611 35.38162994]
[112.10683441 24.92271233]
[127.01285553 26.59916306]
[135.17329407 39.18515396]
[130.62121582 53.47775650]
[116.68510437 59.02616501]
[103.55547333 51.77386093]
[104.78608704 66.72329712]
[119.60354614 72.68797302]
[129.99581909 84.81789398]
[133.61703491 100.37492371]
[148.20079041 103.88409424]
[162.78453064 107.39325714]
[177.36828613 110.90242767]
[185.72052002 98.25268555]
[197.89736938 89.22493744]
[212.42842102 84.90933990]
[227.55897522 85.82701111]
[241.46194458 91.86714172]
[252.45848083 102.30036163]
[259.22070312 115.86679840]
[260.93203735 130.92823792]
[257.38580322 145.66595459]
[249.01028442 158.30027771]
[236.81681824 167.30557251]
[222.27783203 171.59439087]
[207.14900208 170.64883423]
[193.25718689 164.58308411]
[182.27989197 154.12962341]
[175.54267883 140.55075073]
[173.85911560 125.48617554]
[159.27537537 121.97700500]
[144.69161987 118.46784210]
[130.10786438 114.95867157]
[118.40548706 131.36874390]
[98.10538483 139.07450867]
[98.10538483 154.07450867]
[98.10538483 169.07450867]
[98.10538483 184.07450867]
[98.10538483 199.07450867]
[98.10538483 214.07450867]
[98.10538483 229.07450867]
[98.10538483 244.07450867]
[112.71539307 247.81594849]
[125.93555450 255.07392883]
[136.93482971 265.39221191]
[145.02178955 278.12216187]
[149.68809509 292.46359253]
[150.64041138 307.51495361]
[147.81887817 322.33013916]
[141.40084839 335.97784424]
[131.78977966 347.60015869]
[119.58982849 356.46649170]
[105.56787872 362.01950073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 37]
[21 36]
[22 35]
[23 34]
[43 106]
[44 105]
[45 99]
[46 98]
[47 97]
[48 96]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[109 132]
[110 131]
[111 130]
[112 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
