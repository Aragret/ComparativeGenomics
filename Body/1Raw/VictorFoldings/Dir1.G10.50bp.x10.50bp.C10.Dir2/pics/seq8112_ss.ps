%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUACCUCCCGGGGGGGGGGUCACCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCCUGAGAACCAAAxxxxxxxxxxUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCCCCCCCCCCCUACCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.19715118 388.55657959]
[79.63893127 380.20544434]
[69.55271149 368.99298096]
[62.57251358 355.62408447]
[59.13713074 340.93908691]
[59.46250916 325.86111450]
[63.52819061 311.33801270]
[71.07861328 298.28265381]
[81.63913727 287.51577759]
[94.54593658 279.71414185]
[108.98766327 275.36819458]
[108.36368561 260.38116455]
[107.73970795 245.39414978]
[107.11573029 230.40713501]
[106.49175262 215.42012024]
[105.86777496 200.43310547]
[105.24379730 185.44609070]
[104.61981964 170.45907593]
[103.99584198 155.47206116]
[103.37186432 140.48503113]
[85.50218201 136.98966980]
[71.33889008 126.20273590]
[63.58184433 110.62944794]
[63.50888443 93.63636780]
[70.77790070 78.72557831]
[83.57007599 68.81298065]
[79.56233215 54.35829163]
[75.55459595 39.90360641]
[71.54685211 25.44891548]
[67.38896179 11.03670025]
[56.01454163 0.03974409]
[59.77101898 -14.37337971]
[55.46343231 -28.74156380]
[44.08900833 -39.73852158]
[47.84548569 -54.15164566]
[43.53790283 -68.51982880]
[39.23031616 -82.88801575]
[34.92273331 -97.25619507]
[30.61514664 -111.62438202]
[26.30756187 -125.99256134]
[22.33431625 -111.52835846]
[13.95556831 -99.08663177]
[2.04639173 -89.96678925]
[-12.14942741 -85.12130737]
[-27.14928627 -85.05623627]
[-41.38660812 -89.77838135]
[-53.37445831 -98.79456329]
[-61.86082840 -111.16313171]
[-65.95941162 -125.59232330]
[-65.24214935 -140.57516479]
[-59.78395462 -154.54685974]
[-50.15487671 -166.04820251]
[-37.36057663 -173.87800598]
[-22.73727608 -177.21853638]
[-7.81222725 -175.72088623]
[5.85580730 -169.54150391]
[16.83934593 -159.32574463]
[23.99226570 -146.13768005]
[24.92789459 -161.10847473]
[25.86352158 -176.07926941]
[26.79915047 -191.05004883]
[19.93770599 -205.30596924]
[28.45380592 -217.52584839]
[29.38943481 -232.49664307]
[30.32506371 -247.46742249]
[20.14615631 -259.25842285]
[21.30828094 -274.42761230]
[32.61192322 -284.05899048]
[33.54755020 -299.02975464]
[34.48318100 -314.00054932]
[20.96484184 -321.01300049]
[11.47251987 -332.92166138]
[7.65081739 -347.66323853]
[10.16186714 -362.68371582]
[18.57061386 -375.38067627]
[31.42019272 -383.55429077]
[46.48433685 -385.78845215]
[61.15308762 -381.69607544]
[72.88500214 -371.98617554]
[79.64745331 -358.34106445]
[80.26879883 -343.12484741]
[74.64139557 -328.97378540]
[63.74022293 -318.33969116]
[49.45397186 -313.06494141]
[48.51834106 -298.09414673]
[47.58271408 -283.12335205]
[57.59922028 -272.15954590]
[56.86362457 -256.96368408]
[45.29585648 -246.53179932]
[44.36022568 -231.56100464]
[43.42459869 -216.59020996]
[50.35296631 -203.40510559]
[41.76994324 -190.11442566]
[40.83431244 -175.14363098]
[39.89868546 -160.17283630]
[38.96305847 -145.20205688]
[40.67574692 -130.30015564]
[44.98332977 -115.93196869]
[49.29091644 -101.56378174]
[53.59849930 -87.19559479]
[57.90608597 -72.82741547]
[62.21366882 -58.45922852]
[73.27998352 -48.48998260]
[69.83161926 -33.04914856]
[74.13919830 -18.68096542]
[85.20552063 -8.71171761]
[81.75714874 6.72911549]
[86.72274017 12.26884174]
[86.00154114 21.44117546]
[90.00928497 35.89586258]
[94.01702118 50.35055161]
[98.02476501 64.80524445]
[110.32252502 65.35930634]
[121.98087311 70.18492889]
[131.52740479 78.89809418]
[137.68173218 90.61224365]
[139.52484131 104.02609253]
[136.63041687 117.56758881]
[150.41279602 123.48754883]
[164.29383850 116.28679657]
[179.54454041 119.74369812]
[188.96398926 132.22599792]
[188.10461426 147.83995056]
[177.37217712 159.21311951]
[161.83421326 160.97544861]
[148.82727051 152.29479980]
[144.49284363 137.26992798]
[130.71044922 131.34997559]
[118.35888672 139.86105347]
[118.98286438 154.84808350]
[119.60684204 169.83509827]
[120.23081207 184.82211304]
[120.85478973 199.80912781]
[121.47876740 214.79614258]
[122.10274506 229.78315735]
[122.72672272 244.77017212]
[123.35070038 259.75720215]
[123.97467804 274.74420166]
[138.72769165 277.87463379]
[152.23832703 284.57641602]
[163.65730286 294.42819214]
[172.26681519 306.81072998]
[177.52566528 320.94561768]
[179.10327148 335.94436646]
[176.90046692 350.86407471]
[171.05570984 364.76696777]
[161.93643188 376.77902222]
[150.11585999 386.14517212]
[136.33705139 392.27667236]
[121.46614838 394.78805542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[26 112]
[27 111]
[28 110]
[29 109]
[30 107]
[32 105]
[33 104]
[35 102]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[58 96]
[59 95]
[60 94]
[61 93]
[63 91]
[64 90]
[65 89]
[68 86]
[69 85]
[70 84]
[118 128]
[119 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
