%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUCCUACUACUCGGGGGGGGGGAACUUAAACUCCAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAxxxxxxxxxxCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCACACCCCCCCCCCGCAGUCCUACUUCUC\
) } def
/len { sequence length } bind def

/coor [
[85.09116364 177.35813904]
[70.72112274 173.13893127]
[57.40919495 166.27653503]
[45.63646317 157.01895142]
[35.82838821 145.70075989]
[28.33942032 132.73097229]
[23.44020844 118.57832336]
[21.30780602 103.75426483]
[22.01927757 88.79453278]
[25.54890633 74.23974609]
[31.76914024 60.61592484]
[40.45518112 48.41540909]
[51.29312134 38.07911682]
[63.89128876 29.98059654]
[77.79439545 24.41252136]
[92.50000000 21.57611465]
[92.50000000 6.57611465]
[92.50000000 -8.42388535]
[92.50000000 -23.42388535]
[92.50000000 -38.42388535]
[92.50000000 -53.42388535]
[92.50000000 -68.42388153]
[92.50000000 -83.42388153]
[92.50000000 -98.42388153]
[92.50000000 -113.42388153]
[77.51963043 -114.26505280]
[62.60999298 -115.94486237]
[47.81799698 -118.45801544]
[33.19018936 -121.79660797]
[18.77258873 -125.95014191]
[4.61056042 -130.90554810]
[-9.25133514 -136.64723206]
[-22.76948547 -143.15711975]
[-35.90135193 -150.41473389]
[-48.60562515 -158.39724731]
[-60.84232712 -167.07954407]
[-72.57295227 -176.43429565]
[-83.76060486 -186.43208313]
[-94.37007141 -197.04142761]
[-104.36797333 -208.22895813]
[-113.72285461 -219.95948792]
[-122.40528107 -232.19609070]
[-130.38793945 -244.90026855]
[-137.64570618 -258.03207397]
[-144.15574646 -271.55014038]
[-149.89758301 -285.41195679]
[-154.85314941 -299.57394409]
[-159.00683594 -313.99148560]
[-162.34559631 -328.61926270]
[-164.85891724 -343.41122437]
[-166.53887939 -358.32086182]
[-167.38021851 -373.30120850]
[-167.38027954 -388.30517578]
[-166.53904724 -403.28555298]
[-164.85919189 -418.19519043]
[-162.34597778 -432.98715210]
[-159.00732422 -447.61495972]
[-154.85374451 -462.03253174]
[-149.89828491 -476.19454956]
[-144.15655518 -490.05642700]
[-137.64662170 -503.57455444]
[-130.38894653 -516.70642090]
[-122.40638733 -529.41064453]
[-113.72404480 -541.64727783]
[-104.36925507 -553.37792969]
[-94.37142944 -564.56549072]
[-83.76204681 -575.17492676]
[-72.57447052 -585.17279053]
[-60.84391022 -594.52764893]
[-48.60727310 -603.21002197]
[-35.90306473 -611.19262695]
[-22.77124786 -618.45037842]
[-9.25314713 -624.96032715]
[4.60870600 -630.70214844]
[18.77069664 -635.65765381]
[33.18826675 -639.81127930]
[47.81605148 -643.14996338]
[62.60802841 -645.66326904]
[77.51765442 -647.34313965]
[92.49801636 -648.18444824]
[107.50198364 -648.18444824]
[122.48234558 -647.34313965]
[137.39196777 -645.66326904]
[152.18394470 -643.14996338]
[166.81173706 -639.81127930]
[181.22930908 -635.65765381]
[195.39129639 -630.70214844]
[209.25314331 -624.96032715]
[222.77124023 -618.45037842]
[235.90306091 -611.19262695]
[248.60726929 -603.21002197]
[260.84390259 -594.52764893]
[272.57446289 -585.17279053]
[283.76205444 -575.17492676]
[294.37142944 -564.56549072]
[304.36926270 -553.37792969]
[313.72406006 -541.64727783]
[322.40637207 -529.41064453]
[330.38894653 -516.70642090]
[337.64660645 -503.57455444]
[344.15655518 -490.05642700]
[349.89828491 -476.19454956]
[354.85375977 -462.03253174]
[359.00732422 -447.61495972]
[362.34597778 -432.98715210]
[364.85919189 -418.19519043]
[366.53906250 -403.28555298]
[367.38027954 -388.30517578]
[367.38021851 -373.30120850]
[366.53887939 -358.32086182]
[364.85891724 -343.41122437]
[362.34558105 -328.61926270]
[359.00683594 -313.99148560]
[354.85314941 -299.57394409]
[349.89758301 -285.41195679]
[344.15576172 -271.55014038]
[337.64569092 -258.03207397]
[330.38793945 -244.90026855]
[322.40527344 -232.19609070]
[313.72283936 -219.95948792]
[304.36798096 -208.22895813]
[294.37005615 -197.04142761]
[283.76058960 -186.43208313]
[272.57296753 -176.43429565]
[260.84231567 -167.07954407]
[248.60562134 -158.39724731]
[235.90135193 -150.41473389]
[222.76948547 -143.15711975]
[209.25134277 -136.64723206]
[195.38943481 -130.90554810]
[181.22741699 -125.95014191]
[166.80981445 -121.79660797]
[152.18200684 -118.45801544]
[137.39001465 -115.94486237]
[122.48036957 -114.26505280]
[107.50000000 -113.42388153]
[107.50000000 -98.42388153]
[107.50000000 -83.42388153]
[107.50000000 -68.42388153]
[107.50000000 -53.42388535]
[107.50000000 -38.42388535]
[107.50000000 -23.42388535]
[107.50000000 -8.42388535]
[107.50000000 6.57611465]
[107.50000000 21.57611465]
[122.20560455 24.41252136]
[136.10870361 29.98059654]
[148.70687866 38.07911682]
[159.54481506 48.41540909]
[168.23086548 60.61592484]
[174.45109558 74.23974609]
[177.98072815 88.79453278]
[178.69219971 103.75426483]
[176.55978394 118.57832336]
[171.66058350 132.73097229]
[164.17161560 145.70075989]
[154.36354065 157.01895142]
[142.59080505 166.27653503]
[129.27888489 173.13893127]
[114.90883636 177.35813904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
