%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCUCUACAUGGGGGGGGGGCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCxxxxxxxxxxAAUAUCACUCUCCUACUUACAGGACUCAACAUACUAGUCACAGCCCUAUACCCCCCCCCCCUCCCUCUACAU\
) } def
/len { sequence length } bind def

/coor [
[252.79206848 241.73114014]
[243.80401611 231.18942261]
[235.58898926 220.03451538]
[228.18865967 208.32298279]
[221.64059448 196.11422729]
[215.97804260 183.47015381]
[211.22976685 170.45489502]
[207.41986084 157.13447571]
[204.56770325 143.57643127]
[202.68777466 129.84956360]
[201.78965759 116.02347565]
[201.87794495 102.16830444]
[202.95219421 88.35434723]
[188.12516785 86.08293152]
[173.29814148 83.81151581]
[158.47111511 81.54010010]
[143.64408875 79.26868439]
[128.81706238 76.99726105]
[98.21225739 146.29878235]
[85.48259735 154.23323059]
[72.75292969 162.16769409]
[60.02326965 170.10215759]
[47.29360580 178.03662109]
[37.05011368 191.54614258]
[21.23286629 185.44277954]
[22.71906090 168.55409241]
[39.35914612 165.30694580]
[52.08880997 157.37249756]
[64.81847382 149.43803406]
[77.54813385 141.50357056]
[90.27780151 133.56910706]
[89.21727753 126.14447021]
[74.36799622 128.26551819]
[59.51868439 130.38632202]
[57.39809799 115.53697968]
[72.24695587 113.41622925]
[87.09623718 111.29518890]
[86.03571320 103.87054443]
[71.59374237 99.81723022]
[57.15176392 95.76391602]
[46.21995926 106.55239105]
[31.35445595 110.41404724]
[16.55400276 106.31012726]
[5.79984856 95.34455109]
[1.98480558 80.46701813]
[6.13510132 65.67950439]
[17.13432693 54.95977402]
[32.02374649 51.19138336]
[46.79817963 55.38801193]
[57.48337936 66.42078400]
[61.20508194 81.32194519]
[75.64705658 85.37525940]
[90.08902740 89.42857361]
[94.18444061 83.14545441]
[106.47067261 64.29608917]
[96.93276215 52.71903610]
[87.39484406 41.14197922]
[71.64163208 39.87244034]
[61.46389771 27.78156281]
[62.89991760 12.04265022]
[75.09772491 1.99331963]
[90.82057953 3.59566140]
[100.74037933 15.89903450]
[98.97190094 31.60406494]
[108.50981140 43.18112183]
[118.04772949 54.75817490]
[131.08848572 62.17023849]
[145.91551208 64.44165802]
[160.74253845 66.71307373]
[175.56956482 68.98448944]
[190.39657593 71.25590515]
[205.22360229 73.52732086]
[209.00701904 57.58250427]
[214.11886597 42.01303482]
[220.52281189 26.92937660]
[228.17337036 12.43854141]
[237.01615906 -1.35667312]
[246.98841858 -14.35840797]
[258.01931763 -26.47443962]
[270.03051758 -37.61883545]
[282.93679810 -47.71255493]
[296.64645386 -56.68402481]
[311.06225586 -64.46963501]
[326.08181763 -71.01419067]
[341.59854126 -76.27130890]
[357.50231934 -80.20375061]
[373.68026733 -82.78366089]
[390.01757812 -83.99279785]
[406.39834595 -83.82263947]
[422.70626831 -82.27446747]
[438.82568359 -79.35931396]
[454.64221191 -75.09793854]
[470.04360962 -69.52062988]
[484.92062378 -62.66703415]
[499.16772461 -54.58583450]
[512.68383789 -45.33443069]
[525.37304688 -34.97852707]
[537.14538574 -23.59165001]
[547.91735840 -11.25465393]
[557.61254883 1.94488072]
[566.16229248 15.91325092]
[573.50585938 30.55130196]
[579.59124756 45.75513458]
[584.37536621 61.41683960]
[587.82421875 77.42526245]
[602.69427490 75.45481110]
[617.56427002 73.48435974]
[632.43426514 71.51390839]
[638.90460205 57.50895309]
[651.93164062 49.24463272]
[667.35858154 49.35806274]
[680.26275635 57.81304550]
[686.52642822 71.91162872]
[684.15087891 87.15499878]
[673.89422607 98.67906189]
[659.02923584 102.80652618]
[644.29931641 98.22033691]
[634.40472412 86.38391876]
[619.53472900 88.35437012]
[604.66467285 90.32482147]
[589.79467773 92.29527283]
[590.59393311 106.11777496]
[590.40722656 119.96231842]
[589.23559570 133.75868225]
[587.08496094 147.43687439]
[583.96606445 160.92750549]
[579.89477539 174.16213989]
[574.89178467 187.07360840]
[568.98229980 199.59643555]
[562.19641113 211.66706848]
[554.56842041 223.22425842]
[546.13702393 234.20936584]
[536.94500732 244.56665039]
[527.03887939 254.24353027]
[516.46893311 263.19091797]
[505.28881836 271.36340332]
[493.55511475 278.71948242]
[481.32742310 285.22183228]
[468.66769409 290.83746338]
[455.64019775 295.53778076]
[442.31094360 299.29901123]
[428.74755859 302.10195923]
[415.01889038 303.93243408]
[401.19448853 304.78109741]
[387.34454346 304.64361572]
[373.53930664 303.52066040]
[359.84878540 301.41787720]
[346.34243774 298.34591675]
[333.08880615 294.32031250]
[320.15512085 289.36151123]
[307.60702515 283.49456787]
[295.50811768 276.74926758]
[283.91986084 269.15975952]
[272.90100098 260.76455688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 72]
[14 71]
[15 70]
[16 69]
[17 68]
[18 67]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[38 53]
[39 52]
[40 51]
[55 66]
[56 65]
[57 64]
[105 121]
[106 120]
[107 119]
[108 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
