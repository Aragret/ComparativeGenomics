%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAGAGGAGGGGGGGGGGGCCUGUUCUGUAAUCGAUAAACCCCGAUCAACCUCACCACCUCUUGCUCAGxxxxxxxxxxCUCCUCAAGUAUACUUCAAAGGACAUUUAACUAAAACCCCUACGCAUUUACCCCCCCCCCUAUAGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[79.02318573 364.50573730]
[65.17724609 358.48971558]
[53.46858597 348.96029663]
[44.76605988 336.62463379]
[39.71545792 322.39810181]
[38.69156647 307.33642578]
[41.77036667 292.55725098]
[48.72338867 279.15731812]
[59.03467178 268.13101196]
[71.93905640 260.29647827]
[86.47894287 256.23516846]
[86.47894287 241.23516846]
[86.47894287 226.23516846]
[86.47894287 211.23516846]
[86.47894287 196.23516846]
[86.47894287 181.23516846]
[86.47894287 166.23516846]
[86.47894287 151.23516846]
[86.47894287 136.23516846]
[86.47894287 121.23517609]
[81.69034576 110.94905090]
[82.55507660 101.29467010]
[87.37709808 94.79970551]
[93.56640625 92.59245300]
[88.66485596 78.41589355]
[83.76330566 64.23933411]
[67.94549561 51.81173325]
[72.26770782 33.00354004]
[66.78067780 19.04315186]
[61.29364395 5.08276129]
[50.86991882 15.17666531]
[34.29905701 19.10474777]
[19.33880615 18.01343727]
[4.37855816 16.92212677]
[-10.58169079 15.83081532]
[-20.48827553 27.77398109]
[-35.53118134 31.58063126]
[-49.92610550 25.78703117]
[-58.13790512 12.62094021]
[-57.00897598 -2.85501385]
[-46.97341156 -14.69000912]
[-31.89009666 -18.33324814]
[-17.55886841 -12.38383293]
[-9.49038029 0.87056661]
[5.46986866 1.96187711]
[20.43011665 3.05318761]
[35.39036560 4.14449835]
[40.98825073 -0.84686500]
[37.94053268 -15.53398228]
[52.18401337 -10.82959175]
[57.78189850 -15.82095432]
[58.40587616 -30.80797005]
[59.02985382 -45.79498672]
[43.59597778 -51.32872009]
[30.62608147 -61.32874298]
[21.36991501 -74.81706238]
[16.71495056 -90.48027039]
[17.10129929 -106.79742432]
[22.48011971 -122.18774414]
[32.31945801 -135.16374207]
[45.65683746 -144.47499084]
[61.19340515 -149.22865295]
[61.19340515 -164.22865295]
[61.19340515 -179.22865295]
[61.19340515 -194.22865295]
[46.69588470 -198.47113037]
[33.98160553 -206.62733459]
[24.08125687 -218.03610229]
[17.79741478 -231.77253723]
[15.63948250 -246.72312927]
[17.78239441 -261.67587280]
[24.05243301 -275.41864014]
[33.94131470 -286.83734131]
[46.64739609 -295.00631714]
[61.14064407 -299.26333618]
[76.24616241 -299.26333618]
[90.73941040 -295.00631714]
[103.44548798 -286.83734131]
[113.33437347 -275.41864014]
[119.60441589 -261.67587280]
[121.74732208 -246.72312927]
[119.58939362 -231.77253723]
[113.30554962 -218.03610229]
[103.40520477 -206.62733459]
[90.69092560 -198.47113037]
[76.19340515 -194.22865295]
[76.19340515 -179.22865295]
[76.19340515 -164.22865295]
[76.19340515 -149.22865295]
[89.38975525 -145.54254150]
[101.18302155 -138.54248047]
[110.75699615 -128.70516968]
[117.44704437 -116.70400238]
[120.78626251 -103.36284637]
[120.53804779 -89.59957886]
[116.71283722 -76.36289978]
[109.56787872 -64.56696320]
[99.58990479 -55.02820206]
[87.46200562 -48.40886307]
[74.01686859 -45.17100906]
[73.39289093 -30.18399429]
[72.76891327 -15.19697762]
[75.25403595 -0.40427008]
[80.74106598 13.55611992]
[86.22809601 27.51651001]
[95.99635315 30.77427292]
[102.46686554 39.06592941]
[103.28693390 49.77252197]
[97.93986511 59.33778381]
[102.84141541 73.51434326]
[107.74296570 87.69090271]
[118.40459442 98.24218750]
[132.63137817 102.99600220]
[146.85815430 107.74981689]
[161.08493042 112.50363159]
[172.08186340 101.85816193]
[186.76962280 97.55371857]
[201.77307129 100.57943726]
[213.64453125 110.24002838]
[219.65603638 124.31555939]
[218.42616272 139.57157898]
[210.23753357 152.50234985]
[196.97184753 160.13650513]
[181.67745972 160.71974182]
[167.86889648 154.11805725]
[158.71928406 141.84844971]
[156.33111572 126.73041534]
[142.10433960 121.97660065]
[127.87755585 117.22278595]
[113.65077972 112.46897125]
[101.47894287 121.23517609]
[101.47894287 136.23516846]
[101.47894287 151.23516846]
[101.47894287 166.23516846]
[101.47894287 181.23516846]
[101.47894287 196.23516846]
[101.47894287 211.23516846]
[101.47894287 226.23516846]
[101.47894287 241.23516846]
[101.47894287 256.23516846]
[116.01882935 260.29647827]
[128.92320251 268.13101196]
[139.23449707 279.15731812]
[146.18751526 292.55725098]
[149.26631165 307.33642578]
[148.24241638 322.39810181]
[143.19181824 336.62463379]
[134.48928833 348.96029663]
[122.78063202 358.48971558]
[108.93469238 364.50573730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 111]
[25 110]
[26 109]
[28 105]
[29 104]
[30 103]
[32 47]
[33 46]
[34 45]
[35 44]
[51 102]
[52 101]
[53 100]
[62 89]
[63 88]
[64 87]
[65 86]
[112 130]
[113 129]
[114 128]
[115 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
