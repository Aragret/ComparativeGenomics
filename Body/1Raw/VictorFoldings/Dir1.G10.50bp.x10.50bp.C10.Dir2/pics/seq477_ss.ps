%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUAACCAGGGGGGGGGGGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCxxxxxxxxxxGAUCAAAAGGAACAAGCAUCAAGCACGCAGCAAUGCAGCUCAAAACGCUUCCCCCCCCCCAGCCUAGCCA\
) } def
/len { sequence length } bind def

/coor [
[103.75803375 394.05346680]
[89.26834106 389.84500122]
[76.36210632 382.02890015]
[65.91931152 371.13806152]
[58.65194321 357.91503906]
[55.05551910 343.26144409]
[55.37524033 328.17636108]
[59.58930969 313.68829346]
[67.41040802 300.78506470]
[78.30527496 290.34646606]
[91.53108215 283.08422852]
[106.18608093 279.49343872]
[106.49813080 264.49670410]
[106.81018829 249.49993896]
[107.12224579 234.50318909]
[107.43430328 219.50643921]
[107.74636078 204.50968933]
[108.05841827 189.51292419]
[108.37046814 174.51617432]
[108.68252563 159.51942444]
[108.99458313 144.52267456]
[109.30664062 129.52590942]
[103.60613251 124.65208435]
[89.46400452 129.65213013]
[92.20510864 114.90443420]
[86.50460052 110.03060913]
[71.73854065 112.66947174]
[56.97248840 115.30833435]
[42.20643234 117.94720459]
[35.55788040 131.96777344]
[21.92190361 139.37316895]
[6.54181671 137.31585693]
[-4.66842604 126.58691406]
[-7.39825630 111.31184387]
[-0.59799910 97.36422729]
[13.11750793 90.10719299]
[28.47437286 92.33123016]
[39.56756592 103.18114471]
[54.33362198 100.54228210]
[69.09967804 97.90341949]
[83.86573029 95.26455688]
[95.56535339 85.87739563]
[101.34162903 72.03417206]
[107.11790466 58.19095612]
[105.29152679 42.47552109]
[117.33322144 33.70927811]
[119.51005554 18.86807251]
[117.95247650 3.94915986]
[116.39488983 -10.96975231]
[114.83731079 -25.88866425]
[99.82111359 -26.33269501]
[84.99808502 -28.77429008]
[70.63277435 -33.16987610]
[56.98153687 -39.44101334]
[44.28799820 -47.47578430]
[32.77868652 -57.13079453]
[22.65900421 -68.23374176]
[14.10954666 -80.58648682]
[7.28288889 -93.96856689]
[2.30085993 -108.14117432]
[-0.74762923 -122.85137939]
[-1.80817509 -137.83666992]
[-0.86185080 -152.82958984]
[2.07445526 -167.56260681]
[6.94834137 -181.77276611]
[13.67282772 -195.20648193]
[22.12790680 -207.62400818]
[32.16268921 -218.80375671]
[43.59809113 -228.54618835]
[56.23003387 -236.67744446]
[69.83309174 -243.05242920]
[84.16448975 -247.55735779]
[98.96847534 -250.11183167]
[113.98085785 -250.67027283]
[128.93371582 -249.22271729]
[143.56021118 -245.79498291]
[157.59928894 -240.44827271]
[170.80044556 -233.27796936]
[182.92805481 -224.41204834]
[193.76570129 -214.00874329]
[203.11996460 -202.25369263]
[210.82392883 -189.35668945]
[216.74008179 -175.54791260]
[220.76286316 -161.07377625]
[222.82046509 -146.19258118]
[222.87617493 -131.16992188]
[220.92901611 -116.27388763]
[217.01370239 -101.77030945]
[211.20013428 -87.91802216]
[203.59204102 -74.96424103]
[194.32522583 -63.14013672]
[183.56504822 -52.65672684]
[171.50352478 -43.70109940]
[158.35592651 -36.43307495]
[144.35688782 -30.98236847]
[129.75622559 -27.44624519]
[131.31381226 -12.52733326]
[132.87138367 2.39157891]
[134.42897034 17.31049156]
[145.29736328 12.20061970]
[156.43240356 14.27176857]
[163.78601074 21.96538162]
[178.72032166 20.56307793]
[193.65461731 19.16077423]
[202.50360107 9.71887207]
[215.01492310 8.89085293]
[224.40856934 16.57635498]
[239.36880493 15.48504353]
[254.32905579 14.39373302]
[267.58563232 4.73997736]
[282.46252441 11.64004040]
[283.65560913 27.99572754]
[269.93759155 36.98171234]
[255.42036438 29.35398293]
[240.46012878 30.44529343]
[225.49987793 31.53660393]
[211.57328796 42.16910172]
[195.05693054 34.09508133]
[180.12261963 35.49738693]
[165.18830872 36.89968872]
[159.74774170 45.24294662]
[150.15147400 49.36885071]
[139.39807129 47.40645218]
[131.17643738 39.48554993]
[133.41596985 54.21082687]
[120.96112061 63.96722794]
[115.18484497 77.81044769]
[109.40857697 91.65366364]
[125.44683075 102.06094360]
[124.30339050 129.83796692]
[123.99134064 144.83471680]
[123.67928314 159.83148193]
[123.36722565 174.82823181]
[123.05516815 189.82498169]
[122.74311066 204.82173157]
[122.43105316 219.81849670]
[122.11900330 234.81524658]
[121.80694580 249.81199646]
[121.49488831 264.80874634]
[121.18283081 279.80551147]
[135.67576599 284.00277710]
[148.58802795 291.80892944]
[159.03923035 302.69171143]
[166.31680298 315.90908813]
[169.92454529 330.55990601]
[169.61648560 345.64526367]
[165.41360474 360.13656616]
[157.60246277 373.04580688]
[146.71566772 383.49282837]
[133.49546814 390.76528931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[26 41]
[27 40]
[28 39]
[29 38]
[42 128]
[43 127]
[44 126]
[46 124]
[47 99]
[48 98]
[49 97]
[50 96]
[102 120]
[103 119]
[104 118]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
