%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAACACAUAGGGGGGGGGGAUUUGAAUCAACACAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCUCUxxxxxxxxxxCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAACCCCCCCCCCAAAAAACUCAUA\
) } def
/len { sequence length } bind def

/coor [
[85.10473633 368.46569824]
[70.94413757 363.31069946]
[58.35439301 355.02850342]
[48.01445389 344.06573486]
[40.48194122 331.01361084]
[36.16307831 316.57598877]
[35.29076767 301.53155518]
[37.91205978 286.69155884]
[43.88558578 272.85632324]
[52.88920593 260.77197266]
[64.43736267 251.09017944]
[77.90727997 244.33309937]
[92.57254028 240.86512756]
[92.57254028 225.86512756]
[92.57254028 210.86512756]
[92.57254028 195.86512756]
[92.57254028 180.86512756]
[92.57254028 165.86512756]
[92.57254028 150.86512756]
[92.57254028 135.86512756]
[92.57254028 120.86512756]
[92.57254028 105.86512756]
[89.76103210 101.36174774]
[89.70673370 95.59995270]
[92.88886261 90.26033020]
[93.49674988 75.27265167]
[94.10462952 60.28497314]
[79.17640686 58.77293777]
[64.36671448 56.36231232]
[49.72958755 53.06189728]
[35.31844330 48.88373184]
[21.18586349 43.84306335]
[7.38341618 37.95828629]
[-6.03853369 31.25087357]
[-19.03101158 23.74529648]
[-31.54660797 15.46894455]
[-43.53965378 6.45201778]
[-54.96639252 -3.27258205]
[-65.78511810 -13.66937160]
[-75.95636749 -24.70041275]
[-85.44301605 -36.32545471]
[-94.21045685 -48.50207901]
[-102.22669220 -61.18585205]
[-109.46247101 -74.33049774]
[-115.89139557 -87.88804626]
[-121.48999786 -101.80902863]
[-126.23786163 -116.04264832]
[-130.11764526 -130.53697205]
[-133.11521912 -145.23910522]
[-135.21961975 -160.09539795]
[-136.42317200 -175.05166626]
[-136.72149658 -190.05329895]
[-136.11349487 -205.04557800]
[-134.60139465 -219.97380066]
[-132.19068909 -234.78347778]
[-128.89021301 -249.42059326]
[-124.71198273 -263.83172607]
[-119.67124939 -277.96426392]
[-113.78640747 -291.76669312]
[-107.07893372 -305.18859863]
[-99.57329559 -318.18106079]
[-91.29688263 -330.69662476]
[-82.27989960 -342.68960571]
[-72.55525208 -354.11630249]
[-62.15840912 -364.93499756]
[-51.12731934 -375.10620117]
[-39.50223541 -384.59277344]
[-27.32556915 -393.36016846]
[-14.64175797 -401.37634277]
[-1.49708116 -408.61206055]
[12.06049728 -415.04092407]
[25.98150635 -420.63946533]
[40.21514893 -425.38726807]
[54.70948792 -429.26696777]
[69.41163635 -432.26446533]
[84.26794434 -434.36880493]
[99.22420502 -435.57229614]
[114.22584534 -435.87054443]
[129.21812439 -435.26248169]
[144.14633179 -433.75030518]
[158.95600891 -431.33953857]
[173.59310913 -428.03900146]
[188.00421143 -423.86068726]
[202.13674927 -418.81988525]
[215.93913269 -412.93499756]
[229.36102295 -406.22744751]
[242.35342407 -398.72174072]
[254.86894226 -390.44528198]
[266.86190796 -381.42825317]
[278.28857422 -371.70355225]
[289.10720825 -361.30664062]
[299.27835083 -350.27551270]
[308.76489258 -338.65039062]
[317.53219604 -326.47369385]
[325.54830933 -313.78982544]
[332.78396606 -300.64511108]
[339.21276855 -287.08752441]
[344.81124878 -273.16647339]
[349.55899048 -258.93280029]
[353.43862915 -244.43846130]
[356.43606567 -229.73629761]
[358.54034424 -214.87997437]
[359.74374390 -199.92370605]
[360.04193115 -184.92205811]
[359.43380737 -169.92979431]
[357.92153931 -155.00158691]
[355.51071167 -140.19192505]
[352.21011353 -125.55484772]
[348.03173828 -111.14376068]
[342.99087524 -97.01124573]
[337.10589600 -83.20888519]
[330.39828491 -69.78702545]
[322.89254761 -56.79465485]
[314.61602783 -44.27917480]
[305.59893799 -32.28625107]
[295.87417603 -20.85964966]
[285.47723389 -10.04106426]
[274.44604492 0.13002953]
[262.82086182 9.61651897]
[250.64411926 18.38378716]
[237.96023560 26.39984512]
[224.81549072 33.63544083]
[211.25785828 40.06417465]
[197.33679199 45.66258621]
[183.10310364 50.41024780]
[168.60873413 54.28984070]
[153.90655518 57.28720093]
[139.05023193 59.39139175]
[124.09394836 60.59474182]
[109.09230804 60.89285660]
[108.48442841 75.88053131]
[107.87654114 90.86820984]
[107.57254028 105.86512756]
[107.57254028 120.86512756]
[107.57254028 135.86512756]
[107.57254028 150.86512756]
[107.57254028 165.86512756]
[107.57254028 180.86512756]
[107.57254028 195.86512756]
[107.57254028 210.86512756]
[107.57254028 225.86512756]
[107.57254028 240.86512756]
[122.23780060 244.33309937]
[135.70771790 251.09017944]
[147.25587463 260.77197266]
[156.25949097 272.85632324]
[162.23301697 286.69155884]
[164.85430908 301.53155518]
[163.98199463 316.57598877]
[159.66313171 331.01361084]
[152.13061523 344.06573486]
[141.79067993 355.02850342]
[129.20094299 363.31069946]
[115.04033661 368.46569824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[25 132]
[26 131]
[27 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
