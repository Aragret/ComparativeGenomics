%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGCUCUGGGGGGGGGGGAGCCCUAGGAUUCAUCUUUCUUUUCACCGUAGGUGGCCUGACUGGCAUUxxxxxxxxxxUCCCUAAAGCCCAUGUCGAAGCCCCCAUCGCUGGGUCAAUAGUACUUGCCCCCCCCCCCCGCAGUACUCU\
) } def
/len { sequence length } bind def

/coor [
[83.84438324 409.41439819]
[69.99844360 403.39837646]
[58.28977966 393.86895752]
[49.58725739 381.53329468]
[44.53665543 367.30676270]
[43.51276398 352.24508667]
[46.59156036 337.46591187]
[53.54458237 324.06597900]
[63.85586929 313.03967285]
[76.76024628 305.20513916]
[91.30013275 301.14382935]
[91.30013275 286.14382935]
[91.30013275 271.14382935]
[91.30013275 256.14382935]
[91.30013275 241.14384460]
[91.30013275 226.14384460]
[91.30013275 211.14384460]
[91.30013275 196.14384460]
[91.30013275 181.14384460]
[91.30013275 166.14384460]
[91.30013275 151.14384460]
[88.13455963 144.41146851]
[91.45941925 135.83259583]
[91.77147675 120.83583832]
[81.67282867 109.74452209]
[66.71257782 108.65321350]
[51.75232697 107.56190491]
[36.79207993 106.47058868]
[21.82128716 105.53496552]
[6.84157324 104.75511932]
[1.20674109 118.80956268]
[-8.68813896 130.27124023]
[-21.76974487 137.89688110]
[-36.61907959 140.85929871]
[-51.62540054 138.83715820]
[-65.16093445 132.04981995]
[-75.75744629 121.23350525]
[-82.26551056 107.56149292]
[-83.97917175 92.51683044]
[-80.71255493 77.73143005]
[-72.81999207 64.80912018]
[-61.15760803 55.15160370]
[-46.99045563 49.80646515]
[-31.85528183 49.35350037]
[-17.39383316 53.84184265]
[-5.17478085 62.78463364]
[3.47644281 75.21182251]
[7.62141848 89.77540588]
[22.60113335 90.55525208]
[29.48897171 87.74396515]
[37.88338852 91.51034546]
[52.84363937 92.60165405]
[67.80388641 93.69296265]
[82.76413727 94.78427124]
[85.27919006 84.64345551]
[93.89170837 76.23488617]
[96.37683105 61.44217682]
[98.86194611 46.64947128]
[92.01095581 29.58946609]
[103.62849426 16.47334099]
[105.80532837 1.63213551]
[107.98217010 -13.20907021]
[110.15900421 -28.05027580]
[112.18134308 -42.91332245]
[114.04895020 -57.79660416]
[115.91656494 -72.67988586]
[101.83943176 -78.07411957]
[89.46268463 -86.68106842]
[79.50588989 -98.00032043]
[72.54791260 -111.37380981]
[68.99329376 -126.02399445]
[69.04869080 -141.09915161]
[72.71087646 -155.72282410]
[79.76694489 -169.04481506]
[89.80666351 -180.29058838]
[102.24633026 -188.80635071]
[116.36272430 -194.09698486]
[131.33512878 -195.85491943]
[146.29309082 -193.97793579]
[160.36694336 -188.57516479]
[172.73847961 -179.96070862]
[182.68841553 -168.63542175]
[189.63827515 -155.25772095]
[193.18400574 -140.60537720]
[193.11947632 -125.53025818]
[189.44842529 -110.90881348]
[182.38427734 -97.59110260]
[172.33775330 -86.35140991]
[159.89291382 -77.84320068]
[145.77331543 -72.56111908]
[130.79985046 -70.81227112]
[128.93223572 -55.92898941]
[127.06462097 -41.04570770]
[129.36734009 -33.97159195]
[125.00021362 -25.87343788]
[122.82337189 -11.03223324]
[120.64653778 3.80897236]
[118.46969604 18.65017891]
[125.45140839 28.57807159]
[123.71533203 40.99600220]
[113.65465546 49.13459015]
[111.16954041 63.92729568]
[108.68441772 78.72000122]
[119.23571014 89.38162994]
[134.05346680 87.05052948]
[148.87123108 84.71942139]
[163.68898010 82.38832092]
[176.09721375 71.66602325]
[191.49617004 77.30556488]
[194.04470825 93.50547028]
[181.12112427 103.60066223]
[166.02008057 97.20607758]
[151.20233154 99.53717804]
[136.38456726 101.86828613]
[121.56681061 104.19938660]
[135.68821716 109.25766754]
[150.65229797 108.22027588]
[164.45452881 114.09381866]
[174.08227539 125.59626770]
[177.43411255 140.21697998]
[173.77841187 154.76469421]
[163.91311646 166.06407166]
[149.99151611 171.64878845]
[135.05229187 170.29988098]
[122.35622406 162.31176758]
[114.67449188 149.42800903]
[113.68419647 134.45838928]
[106.76822662 121.14789581]
[106.45616913 136.14465332]
[106.30013275 151.14384460]
[106.30013275 166.14384460]
[106.30013275 181.14384460]
[106.30013275 196.14384460]
[106.30013275 211.14384460]
[106.30013275 226.14384460]
[106.30013275 241.14384460]
[106.30013275 256.14382935]
[106.30013275 271.14382935]
[106.30013275 286.14382935]
[106.30013275 301.14382935]
[120.84001923 305.20513916]
[133.74440002 313.03967285]
[144.05569458 324.06597900]
[151.00871277 337.46591187]
[154.08750916 352.24508667]
[153.06361389 367.30676270]
[148.01301575 381.53329468]
[139.31048584 393.86895752]
[127.60182953 403.39837646]
[113.75588989 409.41439819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[24 128]
[25 54]
[26 53]
[27 52]
[28 51]
[29 49]
[30 48]
[56 103]
[57 102]
[58 101]
[60 98]
[61 97]
[62 96]
[63 95]
[64 93]
[65 92]
[66 91]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
