%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAACUAACCUCCUGGGGGGGGGGCGGACUCCUGCCUCACUCAUUUACACCAACCACCCAACUAUCUAUAAACCxxxxxxxxxxAAAAACCAUCGUUGUAUUUCAACUACAAGAACACCAAUGACCCCAAUACGCCCCCCCCCCCAAAACUAACCCCCU\
) } def
/len { sequence length } bind def

/coor [
[85.09116364 177.35813904]
[70.72112274 173.13893127]
[57.40919495 166.27653503]
[45.63646317 157.01895142]
[35.82838821 145.70075989]
[28.33942032 132.73097229]
[23.44020844 118.57832336]
[21.30780602 103.75426483]
[22.01927757 88.79453278]
[25.54890633 74.23974609]
[31.76914024 60.61592484]
[40.45518112 48.41540909]
[51.29312134 38.07911682]
[63.89128876 29.98059654]
[77.79439545 24.41252136]
[92.50000000 21.57611465]
[92.50000000 6.57611465]
[92.50000000 -8.42388535]
[92.50000000 -23.42388535]
[92.50000000 -38.42388535]
[92.50000000 -53.42388535]
[92.50000000 -68.42388153]
[92.50000000 -83.42388153]
[92.50000000 -98.42388153]
[92.50000000 -113.42388153]
[92.50000000 -128.42388916]
[92.50000000 -143.42388916]
[77.52111053 -144.29618835]
[62.61828232 -146.03794861]
[47.84194183 -148.64329529]
[33.24208832 -152.10340881]
[18.86812401 -156.40657043]
[4.76868677 -161.53823853]
[-9.00851727 -167.48101807]
[-22.41686821 -174.21482849]
[-35.41099548 -181.71687317]
[-47.94693756 -189.96177673]
[-59.98226547 -198.92161560]
[-71.47626495 -208.56610107]
[-82.39003754 -218.86259460]
[-92.68666077 -229.77622986]
[-102.33128357 -241.27011108]
[-111.29128265 -253.30532837]
[-119.53633118 -265.84115601]
[-127.03854370 -278.83520508]
[-133.77252197 -292.24346924]
[-139.71546936 -306.02059937]
[-144.84730530 -320.11996460]
[-149.15065002 -334.49389648]
[-152.61094666 -349.09368896]
[-155.21647644 -363.86999512]
[-156.95843506 -378.77282715]
[-157.83091736 -393.75167847]
[-157.83097839 -408.75595093]
[-156.95861816 -423.73483276]
[-155.21678162 -438.63766479]
[-152.61137390 -453.41400146]
[-149.15119934 -468.01382446]
[-144.84797668 -482.38778687]
[-139.71626282 -496.48721313]
[-133.77342224 -510.26437378]
[-127.03955078 -523.67272949]
[-119.53745270 -536.66680908]
[-111.29251099 -549.20269775]
[-102.33261108 -561.23797607]
[-92.68807983 -572.73193359]
[-82.39154816 -583.64569092]
[-71.47785950 -593.94226074]
[-59.98394012 -603.58685303]
[-47.94868469 -612.54681396]
[-35.41281509 -620.79180908]
[-22.41874695 -628.29394531]
[-9.01045227 -635.02783203]
[4.76670265 -640.97076416]
[18.86609840 -646.10253906]
[33.24002457 -650.40582275]
[47.83985138 -653.86602783]
[62.61616898 -656.47149658]
[77.51898193 -658.21343994]
[92.49786377 -659.08581543]
[107.50213623 -659.08581543]
[122.48101807 -658.21343994]
[137.38383484 -656.47149658]
[152.16015625 -653.86602783]
[166.75997925 -650.40582275]
[181.13389587 -646.10253906]
[195.23329163 -640.97076416]
[209.01045227 -635.02783203]
[222.41874695 -628.29394531]
[235.41281128 -620.79180908]
[247.94868469 -612.54681396]
[259.98394775 -603.58685303]
[271.47787476 -593.94226074]
[282.39154053 -583.64569092]
[292.68807983 -572.73193359]
[302.33261108 -561.23797607]
[311.29251099 -549.20269775]
[319.53744507 -536.66680908]
[327.03955078 -523.67272949]
[333.77340698 -510.26437378]
[339.71624756 -496.48721313]
[344.84799194 -482.38778687]
[349.15121460 -468.01382446]
[352.61138916 -453.41400146]
[355.21679688 -438.63766479]
[356.95861816 -423.73483276]
[357.83096313 -408.75595093]
[357.83090210 -393.75167847]
[356.95843506 -378.77282715]
[355.21646118 -363.86999512]
[352.61093140 -349.09368896]
[349.15066528 -334.49389648]
[344.84732056 -320.11996460]
[339.71548462 -306.02059937]
[333.77252197 -292.24346924]
[327.03854370 -278.83520508]
[319.53634644 -265.84115601]
[311.29129028 -253.30532837]
[302.33129883 -241.27011108]
[292.68664551 -229.77622986]
[282.39004517 -218.86259460]
[271.47625732 -208.56610107]
[259.98226929 -198.92161560]
[247.94692993 -189.96177673]
[235.41099548 -181.71687317]
[222.41687012 -174.21482849]
[209.00851440 -167.48101807]
[195.23130798 -161.53823853]
[181.13188171 -156.40657043]
[166.75790405 -152.10340881]
[152.15806580 -148.64329529]
[137.38171387 -146.03794861]
[122.47888947 -144.29618835]
[107.50000000 -143.42388916]
[107.50000000 -128.42388916]
[107.50000000 -113.42388153]
[107.50000000 -98.42388153]
[107.50000000 -83.42388153]
[107.50000000 -68.42388153]
[107.50000000 -53.42388535]
[107.50000000 -38.42388535]
[107.50000000 -23.42388535]
[107.50000000 -8.42388535]
[107.50000000 6.57611465]
[107.50000000 21.57611465]
[122.20560455 24.41252136]
[136.10870361 29.98059654]
[148.70687866 38.07911682]
[159.54481506 48.41540909]
[168.23086548 60.61592484]
[174.45109558 74.23974609]
[177.98072815 88.79453278]
[178.69219971 103.75426483]
[176.55978394 118.57832336]
[171.66058350 132.73097229]
[164.17161560 145.70075989]
[154.36354065 157.01895142]
[142.59080505 166.27653503]
[129.27888489 173.13893127]
[114.90883636 177.35813904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[27 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
