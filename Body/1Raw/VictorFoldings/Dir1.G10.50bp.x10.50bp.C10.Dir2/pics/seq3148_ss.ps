%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUACCCACACCCAGGGGGGGGGGCCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACxxxxxxxxxxCCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACCCCCCCCCCCUAAACCCACACUCA\
) } def
/len { sequence length } bind def

/coor [
[94.82342529 405.88775635]
[80.80869293 400.40383911]
[68.13326263 392.29089355]
[57.28436661 381.86077881]
[48.67898941 369.51437378]
[42.64790726 355.72622681]
[39.42293549 341.02639771]
[39.12803650 325.97982788]
[41.77454376 311.16488647]
[47.26073456 297.15103149]
[55.37572861 284.47692871]
[65.80761719 273.62969971]
[78.15541077 265.02633667]
[91.94451141 258.99746704]
[106.64488983 255.77488708]
[106.34853363 240.77781677]
[106.05217743 225.78074646]
[105.75581360 210.78367615]
[105.45945740 195.78660583]
[105.16310120 180.78953552]
[104.86674500 165.79246521]
[104.57038879 150.79537964]
[104.27403259 135.79830933]
[103.97766876 120.80123901]
[91.06201935 113.17327881]
[82.77007294 127.32162476]
[66.37527466 126.94420624]
[58.74317551 112.42927551]
[67.72503662 98.70854950]
[84.08107758 99.89673615]
[92.33746338 87.37347412]
[93.52173615 72.42029572]
[83.54016876 60.46178436]
[84.95420837 45.31400681]
[96.41633606 35.87180328]
[97.60060883 20.91862679]
[98.78488159 5.96544933]
[99.96915436 -8.98772717]
[101.15342712 -23.94090462]
[102.33769989 -38.89408112]
[103.52197266 -53.84725952]
[104.70624542 -68.80043793]
[89.03696442 -73.80561066]
[75.00213623 -82.36922455]
[63.39553070 -94.00246429]
[54.87250900 -108.04302216]
[49.91304016 -123.69284821]
[48.79467010 -140.06344604]
[51.57698822 -156.22637939]
[58.09846115 -171.26586914]
[67.98582458 -184.33073425]
[80.67541504 -194.68251038]
[95.44533539 -201.73724365]
[111.45649719 -205.09840393]
[111.75285339 -220.09547424]
[112.04920959 -235.09254456]
[112.34557343 -250.08961487]
[97.49909210 -252.38427734]
[83.09095001 -256.63735962]
[69.37826538 -262.77301025]
[56.60577393 -270.68164062]
[45.00140381 -280.22219849]
[34.77225113 -291.22436523]
[26.10086632 -303.49182129]
[19.14200401 -316.80563354]
[14.01984978 -330.92822266]
[10.82581615 -345.60751343]
[9.61690426 -360.58154297]
[10.41468906 -375.58312988]
[13.20493126 -390.34448242]
[17.93783760 -404.60223389]
[24.52894211 -418.10186768]
[32.86061859 -430.60253906]
[42.78418350 -441.88113403]
[54.12253189 -451.73632812]
[66.67332458 -459.99230957]
[80.21257019 -466.50170898]
[94.49864960 -471.14834595]
[109.27661133 -473.84933472]
[124.28273010 -474.55642700]
[139.24919128 -473.25704956]
[153.90890503 -469.97433472]
[168.00025940 -464.76693726]
[181.27177429 -457.72772217]
[193.48660278 -448.98236084]
[204.42675781 -438.68688965]
[213.89698792 -427.02508545]
[221.72830200 -414.20501709]
[227.78094482 -400.45550537]
[231.94688416 -386.02191162]
[234.15176392 -371.16183472]
[234.35627747 -356.14047241]
[232.55673218 -341.22589111]
[228.78526306 -326.68423462]
[223.10917664 -312.77505493]
[215.62976074 -299.74655151]
[206.48049927 -287.83123779]
[195.82467651 -277.24179077]
[183.85244751 -268.16711426]
[170.77748108 -260.76925659]
[156.83311462 -255.18016052]
[142.26818848 -251.49960327]
[127.34264374 -249.79325867]
[127.04628754 -234.79618835]
[126.74993134 -219.79911804]
[126.45356750 -204.80204773]
[139.74398804 -201.73779297]
[152.17211914 -196.10630798]
[163.24729919 -188.12757874]
[172.53178406 -178.11433411]
[179.65812683 -166.45971680]
[184.34362793 -153.62193298]
[186.40164185 -140.10621643]
[185.74894714 -126.44489288]
[182.40913391 -113.17646027]
[176.51176453 -100.82436371]
[168.28730774 -89.87630463]
[158.05821228 -80.76505280]
[146.22616577 -73.85127258]
[133.25642395 -69.40928650]
[119.65942383 -67.61616516]
[118.47515106 -52.66298676]
[117.29087830 -37.70980835]
[116.10660553 -22.75663185]
[114.92233276 -7.80345440]
[113.73805237 7.14972210]
[112.55377960 22.10289955]
[111.36950684 37.05607605]
[121.20244598 48.18482208]
[120.21443939 63.36634064]
[108.47491455 73.60456848]
[107.29064178 88.55774689]
[120.66902161 98.14144135]
[118.97474670 120.50488281]
[119.27110291 135.50195312]
[119.56745911 150.49902344]
[119.86381531 165.49609375]
[120.16017151 180.49317932]
[120.45653534 195.49024963]
[120.75289154 210.48731995]
[121.04924774 225.48439026]
[121.34560394 240.48146057]
[121.64196014 255.47853088]
[136.45817566 258.11785889]
[150.47468567 263.59722900]
[163.15274048 271.70608521]
[174.00502014 282.13269043]
[182.61437988 294.47631836]
[188.64993286 308.26248169]
[191.87965393 322.96127319]
[192.17942810 338.00775146]
[189.53771973 352.82354736]
[184.05606079 366.83917236]
[175.94517517 379.51589966]
[165.51679993 390.36648560]
[153.17178345 398.97387695]
[139.38464355 405.00717163]
[124.68531036 408.23452759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 134]
[25 30]
[31 132]
[32 131]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[54 106]
[55 105]
[56 104]
[57 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
