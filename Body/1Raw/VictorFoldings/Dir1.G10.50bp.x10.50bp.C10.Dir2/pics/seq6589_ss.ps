%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUAGGGGCCAGGGGGGGGGGUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAxxxxxxxxxxUAUAGCAACAGCCUUCAUAGGCUAUGUCCUCCCGUGAGGCCAAAUAUCAUCCCCCCCCCCUCUGAGGGGCCA\
) } def
/len { sequence length } bind def

/coor [
[-9.20738697 161.82559204]
[-13.49022865 153.55955505]
[-17.14849472 144.99874878]
[-20.16205215 136.19030762]
[-22.51431847 127.18270111]
[-24.19234848 118.02549744]
[-25.18690300 108.76909637]
[-40.18613434 108.92110443]
[-55.18536377 109.07311249]
[-66.20751190 120.07993317]
[-81.42102814 120.02042389]
[-91.84642029 109.44465637]
[-105.56747437 117.32141113]
[-118.37250519 109.71348572]
[-133.37173462 109.86549377]
[-147.09278870 117.74224854]
[-159.89781189 110.13432312]
[-174.89704895 110.28633118]
[-189.89627075 110.43834686]
[-204.89550781 110.59035492]
[-219.89472961 110.74236298]
[-234.89396667 110.89437103]
[-249.89318848 111.04638672]
[-254.48452759 113.76894379]
[-259.18701172 114.35783386]
[-263.15542603 113.13717651]
[-265.80184937 110.72389984]
[-280.78259277 109.96415710]
[-295.76336670 109.20442200]
[-300.55587769 123.51994324]
[-309.03393555 136.01095581]
[-320.56838989 145.75053406]
[-334.30328369 152.01593018]
[-349.21939087 154.34222412]
[-364.20989990 152.55679321]
[-378.16235352 146.79209900]
[-390.04141235 137.47595215]
[-398.96554565 125.29966736]
[-404.27258301 111.16679382]
[-405.56863403 96.12609100]
[-402.75756836 81.29367828]
[-396.04800415 67.77021790]
[-385.93777466 56.55923843]
[-373.17715454 48.49267578]
[-358.71307373 44.16911697]
[-343.61886597 43.90940094]
[-329.01461792 47.73279953]
[-315.98406982 55.35559464]
[-305.49414062 66.21212006]
[-298.32327271 79.49674988]
[-295.00363159 94.22367096]
[-280.02285767 94.98341370]
[-265.04211426 95.74314880]
[-250.04519653 96.04715729]
[-235.04597473 95.89514160]
[-220.04673767 95.74313354]
[-205.04751587 95.59112549]
[-190.04827881 95.43911743]
[-175.04905701 95.28710175]
[-160.04981995 95.13509369]
[-147.40161133 87.26921082]
[-133.52374268 94.86626434]
[-118.52451324 94.71425629]
[-105.87630463 86.84837341]
[-91.99842834 94.44542694]
[-81.78952026 83.66054535]
[-66.58032990 83.29271698]
[-55.33737183 94.07388306]
[-40.33814240 93.92187500]
[-25.33891296 93.76986694]
[-23.53260612 77.90129089]
[-19.72549248 62.39063644]
[-13.97923470 47.48912430]
[-6.38690233 33.43811417]
[2.92853403 20.46517563]
[13.81619644 8.78043079]
[26.09974289 -1.42686903]
[39.58021927 -9.99139977]
[54.03929138 -16.77444458]
[69.24276733 -21.66614342]
[84.94441223 -24.58726692]
[100.88990021 -25.49050140]
[116.82097626 -24.36121750]
[132.47961426 -21.21770859]
[147.61218262 -16.11088562]
[161.97360229 -9.12346363]
[175.33126831 -0.36861336]
[187.46881104 10.01186562]
[198.54792786 -0.10017584]
[199.92642212 -12.96308899]
[209.41188049 -21.15764999]
[221.53596497 -20.68342590]
[232.81774902 -30.56885147]
[244.09951782 -40.45427704]
[255.38128662 -50.33969879]
[266.66305542 -60.22512436]
[271.42578125 -75.91743469]
[287.45629883 -79.37492371]
[298.26379395 -67.04082489]
[292.73046875 -51.60340500]
[276.54849243 -48.94335175]
[265.26672363 -39.05792618]
[253.98493958 -29.17250252]
[242.70317078 -19.28707886]
[231.42138672 -9.40165424]
[226.71038818 7.47715902]
[208.65995789 10.97893143]
[197.58085632 21.09097290]
[216.30268860 52.85826111]
[224.98347473 88.69554901]
[239.97653198 88.23958588]
[254.96960449 87.78361511]
[269.96267700 87.32764435]
[283.61666870 78.24469757]
[298.18759155 85.76937866]
[298.68609619 102.16094971]
[284.59936523 110.55715942]
[270.41864014 102.32071686]
[255.42556763 102.77667999]
[240.43251038 103.23265076]
[225.43943787 103.68862152]
[224.82081604 112.97772217]
[223.51527405 122.19541168]
[221.52996826 131.29095459]
[218.87585449 140.21427917]
[215.56753540 148.91630554]
[211.62318420 157.34912109]
[207.06455994 165.46632385]
[201.91670227 173.22323608]
[196.20797729 180.57719421]
[189.96977234 187.48770142]
[183.23645020 193.91673279]
[176.04504395 199.82890320]
[168.43513489 205.19168091]
[160.44859314 209.97557068]
[152.12939453 214.15420532]
[143.52331543 217.70462036]
[134.67770386 220.60726929]
[125.64124298 222.84617615]
[116.46367645 224.40902710]
[107.19551086 225.28720093]
[97.88774109 225.47587585]
[88.59159088 224.97401428]
[79.35823059 223.78439331]
[70.23847198 221.91352844]
[61.28249359 219.37173462]
[52.53959274 216.17300415]
[44.05788422 212.33493042]
[35.88404465 207.87864685]
[28.06305695 202.82865906]
[20.63796043 197.21278381]
[13.64962196 191.06190491]
[7.13649797 184.40988159]
[1.13443351 177.29331970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 70]
[8 69]
[9 68]
[12 65]
[14 63]
[15 62]
[17 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[27 53]
[28 52]
[29 51]
[88 108]
[89 107]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
