%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAACAUAUGGGGGGGGGGGACGCACUCUCCCCUGAACUCUACACAACAUAUUUUGUCACCAAGACCCUAxxxxxxxxxxGACUAGUUCCCCUAAUAAUCGGUGCCCCCGAUAUGGCGUUUCCCCGCAUACCCCCCCCCCAACAACAUAAG\
) } def
/len { sequence length } bind def

/coor [
[110.31499481 471.34768677]
[96.29305267 465.79467773]
[84.09309387 456.92834473]
[74.48202515 445.30603027]
[68.06399536 431.65832520]
[65.24246216 416.84313965]
[66.19477844 401.79177856]
[70.86108398 387.45034790]
[78.94805145 374.72039795]
[89.94732666 364.40209961]
[103.16748047 357.14413452]
[117.77749634 353.40270996]
[117.77749634 338.40270996]
[117.77749634 323.40270996]
[117.77749634 308.40270996]
[117.77749634 293.40270996]
[117.77749634 278.40270996]
[117.77749634 263.40270996]
[117.77749634 248.40269470]
[117.77749634 233.40269470]
[117.77749634 218.40269470]
[116.08709717 203.49824524]
[112.72783661 188.87924194]
[109.36858368 174.26023865]
[106.00932312 159.64123535]
[92.08043671 159.41773987]
[78.57927704 155.98518372]
[66.23502350 149.52893066]
[55.71437454 140.39767456]
[47.58554459 129.08457947]
[42.28755569 116.20066833]
[40.10654449 102.44178009]
[41.16031265 88.55101776]
[45.39194107 75.27859497]
[52.57288361 63.34134674]
[62.31531143 53.38399124]
[54.41883087 40.63073349]
[46.52234650 27.87747574]
[38.62586594 15.12421894]
[30.72938347 2.37096167]
[17.01723480 8.50777340]
[2.60945988 12.76211739]
[-12.23682022 15.05806923]
[-27.25665665 15.35465527]
[-42.18200302 13.64658165]
[-56.74649429 9.96433258]
[-70.69021606 4.37362051]
[-83.76432800 -3.02578115]
[-95.73549652 -12.10182095]
[-106.39009094 -22.69252586]
[-115.53796387 -34.60889435]
[-123.01586914 -47.63826370]
[-128.69033813 -61.54810715]
[-132.46011353 -76.09019470]
[-134.25793457 -91.00499725]
[-134.05168152 -106.02634430]
[-131.84506226 -120.88616180]
[-127.67745209 -135.31925964]
[-121.62322235 -149.06806946]
[-113.79041290 -161.88722229]
[-104.31882477 -173.54794312]
[-93.37747192 -183.84213257]
[-81.16163635 -192.58609009]
[-67.88930511 -199.62374878]
[-53.79734039 -204.82952881]
[-39.13724136 -208.11051941]
[-24.17062759 -209.40815735]
[-9.16459656 -208.69932556]
[5.61305189 -205.99662781]
[19.89859200 -201.34831238]
[33.43708420 -194.83735657]
[45.98691559 -186.57992554]
[57.32411957 -176.72338867]
[67.24636841 -165.44364929]
[75.57659912 -152.94201660]
[82.16613770 -139.44160461]
[86.89738464 -125.18331146]
[89.68591309 -110.42162323]
[90.48194885 -95.41996002]
[89.27130127 -80.44606018]
[86.07556152 -65.76714325]
[80.95176697 -51.64516449]
[73.99135590 -38.33215714]
[65.31855011 -26.06570625]
[55.08811951 -15.06471920]
[43.48263931 -5.52552080]
[51.37912369 7.22773600]
[59.27560425 19.98099327]
[67.17208862 32.73424911]
[75.06857300 45.48750687]
[84.55375671 42.08107758]
[94.47557831 40.31190491]
[104.55356598 40.22999954]
[114.50283051 41.83767700]
[124.04212952 45.08948898]
[132.90179443 49.89351654]
[140.83140564 56.11396027]
[147.60678101 63.57497787]
[153.03640747 72.06565857]
[167.07838440 66.79091644]
[181.12036133 61.51617813]
[195.16233826 56.24143600]
[209.20431519 50.96669388]
[217.11741638 37.01095963]
[232.98411560 34.63881683]
[244.63285828 45.66997147]
[243.12771606 61.64226151]
[229.62330627 70.30311584]
[214.47904968 65.00866699]
[200.43707275 70.28340912]
[186.39511108 75.55815125]
[172.35313416 80.83289337]
[158.31115723 86.10763550]
[159.44161987 107.73839569]
[152.81069946 128.35874939]
[139.28421021 145.27624512]
[120.62832642 156.28196716]
[123.98758698 170.90097046]
[127.34684753 185.51998901]
[130.70610046 200.13899231]
[136.77955627 186.42355347]
[148.45193481 177.00253296]
[163.14027405 173.96072388]
[177.59419250 177.97122192]
[188.61520386 188.14654541]
[193.76445007 202.23503113]
[191.90248108 217.11901855]
[183.44131470 229.50483704]
[170.25332642 236.65165710]
[155.25688171 236.97793579]
[141.77052307 230.41148376]
[132.77749634 218.40269470]
[132.77749634 233.40269470]
[132.77749634 248.40269470]
[132.77749634 263.40270996]
[132.77749634 278.40270996]
[132.77749634 293.40270996]
[132.77749634 308.40270996]
[132.77749634 323.40270996]
[132.77749634 338.40270996]
[132.77749634 353.40270996]
[147.38751221 357.14413452]
[160.60766602 364.40209961]
[171.60694885 374.72039795]
[179.69390869 387.45034790]
[184.36021423 401.79177856]
[185.31253052 416.84313965]
[182.49099731 431.65832520]
[176.07296753 445.30603027]
[166.46189880 456.92834473]
[154.26193237 465.79467773]
[140.23999023 471.34768677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 120]
[23 119]
[24 118]
[25 117]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
