%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUAACCCCAGGGGGGGGGGGGGUUGGUCAAUUUCGUGCCAGCCACCGCGGUCACACGAUUAACCCAAGUxxxxxxxxxxAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUCCCCCCCCCCUACUAAACCCA\
) } def
/len { sequence length } bind def

/coor [
[88.47573853 438.57104492]
[74.98686218 431.83950806]
[63.50135803 422.07495117]
[54.68698883 409.84506226]
[49.05620575 395.86087036]
[46.93637848 380.93539429]
[48.45074844 365.93637085]
[53.51127243 351.73587036]
[61.82373428 339.15945435]
[72.90486908 328.93829346]
[86.11042023 321.66665649]
[100.67264557 317.76730347]
[100.36466980 302.77044678]
[100.05669403 287.77362061]
[99.74871063 272.77676392]
[99.44073486 257.77993774]
[99.13275909 242.78309631]
[98.82478333 227.78625488]
[98.51679993 212.78942871]
[98.20882416 197.79258728]
[97.59300232 182.80523682]
[96.66958618 167.83367920]
[95.74617004 152.86213684]
[94.82276154 137.89057922]
[93.89934540 122.91902924]
[92.97592926 107.94747925]
[91.28553772 93.04303741]
[88.83260345 78.24495697]
[86.37967682 63.44687653]
[82.98055267 59.32362747]
[81.67687225 54.76226425]
[82.27734375 50.65020370]
[84.26068115 47.66464233]
[82.72338867 32.74362564]
[81.18609619 17.82260895]
[79.64880371 2.90159297]
[65.35586548 -2.33990169]
[54.79906845 -13.22295952]
[50.03383636 -27.55169868]
[51.95450974 -42.46719360]
[60.12700653 -55.01788330]
[72.88546753 -62.74362564]
[71.34817505 -77.66464233]
[69.81088257 -92.58566284]
[68.27359009 -107.50667572]
[53.25930023 -107.56341553]
[38.33610535 -109.21577454]
[23.67309189 -112.44504547]
[9.43640614 -117.21462250]
[-4.21263981 -123.47046661]
[-17.11939240 -131.14170837]
[-29.13760757 -140.14140320]
[-40.13110733 -150.36759949]
[-49.97533417 -161.70440674]
[-58.55873871 -174.02339172]
[-65.78406525 -187.18495178]
[-71.56944275 -201.03997803]
[-75.84932709 -215.43145752]
[-78.57521820 -230.19633484]
[-79.71623230 -245.16731262]
[-79.25943756 -260.17474365]
[-77.21001434 -275.04861450]
[-73.59117126 -289.62039185]
[-68.44393158 -303.72491455]
[-61.82660294 -317.20242310]
[-53.81417465 -329.90017700]
[-44.49742508 -341.67431641]
[-33.98192596 -352.39141846]
[-22.38682365 -361.93005371]
[-9.84349918 -370.18215942]
[3.50592017 -377.05419922]
[17.51017570 -382.46835327]
[32.01058960 -386.36322021]
[46.84286118 -388.69473267]
[61.83892822 -389.43640137]
[76.82887268 -388.57986450]
[91.64284515 -386.13485718]
[106.11299896 -382.12899780]
[120.07537842 -376.60775757]
[133.37176514 -369.63363647]
[145.85151672 -361.28570557]
[157.37321472 -351.65853882]
[167.80630493 -340.86120605]
[177.03259277 -329.01602173]
[184.94752502 -316.25726318]
[191.46142578 -302.72949219]
[196.50047302 -288.58593750]
[200.00758362 -273.98687744]
[201.94302368 -259.09774780]
[202.28485107 -244.08724976]
[201.02919006 -229.12544250]
[198.19029236 -214.38188171]
[193.80029297 -200.02360535]
[187.90895081 -186.21331787]
[180.58302307 -173.10748291]
[171.90550232 -160.85461426]
[161.97473145 -149.59353638]
[150.90322876 -139.45184326]
[138.81642151 -130.54447937]
[125.85128784 -122.97232819]
[112.15472412 -116.82121277]
[97.88192749 -112.16082001]
[83.19460297 -109.04396820]
[84.73189545 -94.12295532]
[86.26918793 -79.20193481]
[87.80648041 -64.28092194]
[101.87215424 -59.31882858]
[112.43196869 -48.69810867]
[117.35346222 -34.48754883]
[115.60986328 -19.48821449]
[107.49380493 -6.68131781]
[94.56982422 1.36430037]
[96.10711670 16.28531647]
[97.64440918 31.20633316]
[99.18170166 46.12734985]
[101.17775726 60.99394989]
[103.63068390 75.79203033]
[106.08361053 90.59010315]
[117.04834747 80.35415649]
[131.91680908 82.33630371]
[139.81710815 95.08718872]
[134.97253418 109.28331757]
[120.92544556 114.54441833]
[107.94747925 107.02407074]
[108.87089539 121.99562073]
[109.79431152 136.96716309]
[110.71772003 151.93872070]
[111.64113617 166.91026306]
[112.56455231 181.88182068]
[115.94268799 187.68101501]
[115.85141754 193.44119263]
[113.20566559 197.48460388]
[113.51364136 212.48144531]
[113.82161713 227.47828674]
[114.12959290 242.47512817]
[114.43757629 257.47195435]
[114.74555206 272.46881104]
[115.05352783 287.46563721]
[115.36150360 302.46246338]
[115.66948700 317.45932007]
[130.37951660 320.75753784]
[143.87248230 327.48089600]
[155.36389160 337.23849487]
[164.18568420 349.46304321]
[169.82493591 363.44381714]
[171.95381165 378.36801147]
[170.44853210 393.36791992]
[165.39662170 407.57150269]
[157.09178162 420.15295410]
[146.01686096 430.38082886]
[132.81570435 437.66046143]
[118.25585175 441.56866455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 129]
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 118]
[28 117]
[29 116]
[33 115]
[34 114]
[35 113]
[36 112]
[42 106]
[43 105]
[44 104]
[45 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
