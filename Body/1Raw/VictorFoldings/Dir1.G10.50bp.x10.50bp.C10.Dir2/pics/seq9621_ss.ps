%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAUUAUAGCGGGGGGGGGGUACUCUCAUAACCCUCAACACCCACUCCCUCUUAGCCAAUAUUGUGCCUAxxxxxxxxxxUAGACAGUCCCACCCUCACACGAUUCUUUACCUUUCACUUCAUCUUGCCCCCCCCCCCCCUUCAUUAUUGC\
) } def
/len { sequence length } bind def

/coor [
[67.99060822 158.68273926]
[55.73589325 150.08944702]
[45.70041656 138.98486328]
[38.38732910 125.92572021]
[34.16327286 111.56674957]
[33.24003601 96.62786865]
[35.66389847 81.85805511]
[41.31333923 67.99781036]
[49.90511703 55.74204254]
[61.00846863 45.70520401]
[74.06671906 38.39051056]
[88.42516327 34.16469574]
[87.50175476 19.19314575]
[86.57833862 4.22159481]
[85.65492249 -10.74995518]
[84.73151398 -25.72150421]
[83.80809784 -40.69305420]
[82.88468170 -55.66460419]
[81.96127319 -70.63615417]
[81.03785706 -85.60770416]
[80.11444092 -100.57925415]
[79.19103241 -115.55080414]
[64.18674469 -115.50749207]
[49.20577621 -116.34481812]
[34.29977036 -118.05989838]
[19.52011490 -120.64682770]
[4.91775227 -124.09667969]
[-9.45697689 -128.39756775]
[-23.55451965 -133.53466797]
[-37.32627869 -139.49026489]
[-50.72478104 -146.24382019]
[-63.70383835 -153.77207947]
[-76.21870422 -162.04907227]
[-88.22624969 -171.04626465]
[-99.68506622 -180.73263550]
[-110.55566406 -191.07481384]
[-120.80056000 -202.03713989]
[-130.38444519 -213.58181763]
[-139.27429199 -225.66905212]
[-147.43942261 -238.25717163]
[-154.85173035 -251.30279541]
[-161.48562622 -264.76095581]
[-167.31826782 -278.58523560]
[-172.32954407 -292.72799683]
[-176.50216675 -307.14047241]
[-179.82177734 -321.77301025]
[-182.27690125 -336.57513428]
[-183.85908508 -351.49581909]
[-184.56289673 -366.48364258]
[-184.38587952 -381.48693848]
[-183.32865906 -396.45401001]
[-181.39488220 -411.33322144]
[-178.59120178 -426.07330322]
[-174.92729187 -440.62344360]
[-170.41578674 -454.93344116]
[-165.07223511 -468.95404053]
[-158.91505432 -482.63687134]
[-151.96548462 -495.93475342]
[-144.24745178 -508.80184937]
[-135.78758240 -521.19384766]
[-126.61504364 -533.06799316]
[-116.76145172 -544.38330078]
[-106.26076508 -555.10089111]
[-95.14918518 -565.18371582]
[-83.46501923 -574.59704590]
[-71.24855042 -583.30841064]
[-58.54188156 -591.28784180]
[-45.38882065 -598.50775146]
[-31.83470917 -604.94335938]
[-17.92627144 -610.57238770]
[-3.71145058 -615.37542725]
[10.76074982 -619.33593750]
[25.44044113 -622.44030762]
[40.27701950 -624.67785645]
[55.21933746 -626.04077148]
[70.21588898 -626.52441406]
[85.21498108 -626.12707520]
[100.16489410 -624.85021973]
[115.01410675 -622.69818115]
[129.71142578 -619.67834473]
[144.20619202 -615.80114746]
[158.44842529 -611.08001709]
[172.38903809 -605.53118896]
[185.97996521 -599.17370605]
[199.17437744 -592.02966309]
[211.92675781 -584.12347412]
[224.19317627 -575.48260498]
[235.93133545 -566.13665771]
[247.10078430 -556.11798096]
[257.66299438 -545.46105957]
[267.58157349 -534.20263672]
[276.82229614 -522.38146973]
[285.35336304 -510.03839111]
[293.14532471 -497.21594238]
[300.17135620 -483.95828247]
[306.40719604 -470.31112671]
[311.83135986 -456.32153320]
[316.42517090 -442.03771973]
[320.17279053 -427.50891113]
[323.06127930 -412.78521729]
[325.08065796 -397.91738892]
[326.22402954 -382.95666504]
[326.48742676 -367.95462036]
[325.86990356 -352.96298218]
[324.37362671 -338.03344727]
[322.00375366 -323.21743774]
[318.76843262 -308.56604004]
[314.67886353 -294.12976074]
[309.74908447 -279.95840454]
[303.99612427 -266.10076904]
[297.43978882 -252.60464478]
[290.10272217 -239.51657104]
[282.01019287 -226.88165283]
[273.19006348 -214.74343872]
[263.67279053 -203.14378357]
[253.49118042 -192.12266541]
[242.68029785 -181.71807861]
[231.27743530 -171.96589661]
[219.32188416 -162.89973450]
[206.85487366 -154.55084229]
[193.91935730 -146.94799805]
[180.55996704 -140.11741638]
[166.82270813 -134.08264160]
[152.75497437 -128.86447144]
[138.40524292 -124.48090363]
[123.82298279 -120.94705200]
[109.05846405 -118.27508545]
[94.16258240 -116.47422028]
[95.08599091 -101.50267029]
[96.00940704 -86.53112030]
[96.93282318 -71.55957031]
[97.85623169 -56.58801651]
[98.77964783 -41.61646652]
[99.70306396 -26.64491844]
[100.62647247 -11.67336845]
[101.54988861 3.29818153]
[102.47330475 18.26973152]
[103.39671326 33.24127960]
[118.16563416 35.67058182]
[132.02380371 41.32513046]
[144.27639771 49.92142105]
[154.30915833 61.02846909]
[161.61903381 74.08940887]
[165.83956909 88.44940948]
[166.75914001 103.38851929]
[164.33164978 118.15773773]
[158.67880249 132.01660156]
[150.08401489 144.27026367]
[138.97819519 154.30436707]
[125.91815186 161.61585999]
[111.55867004 165.83815002]
[96.61967468 166.75955200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
