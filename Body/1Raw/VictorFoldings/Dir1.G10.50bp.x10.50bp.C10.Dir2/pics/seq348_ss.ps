%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAGCACUGGGGGGGGGGUAAACACAUCUCUGCCAAACCCCAAAAACAAAGAACCCUAACACCAGCCUxxxxxxxxxxAUGAUGAAACUUCGGCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCCCCCCCCCCCACAGGACU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 415.74414062]
[71.19830322 409.72811890]
[59.48964310 400.19869995]
[50.78712082 387.86303711]
[45.73651886 373.63650513]
[44.71262741 358.57482910]
[47.79142761 343.79565430]
[54.74444962 330.39572144]
[65.05573273 319.36941528]
[77.96011353 311.53488159]
[92.50000000 307.47357178]
[92.50000000 292.47357178]
[92.50000000 277.47357178]
[92.50000000 262.47357178]
[92.50000000 247.47358704]
[92.50000000 232.47358704]
[92.50000000 217.47358704]
[92.50000000 202.47358704]
[92.50000000 187.47358704]
[92.50000000 172.47358704]
[92.50000000 157.47358704]
[73.32026672 151.45536804]
[57.34960556 139.24801636]
[46.50900269 122.31985474]
[42.10237885 102.70702362]
[44.65976715 82.76859283]
[53.87356567 64.90278625]
[43.21193695 54.35149384]
[32.55031204 43.80020142]
[21.88868523 33.24891281]
[10.15816116 42.62501526]
[-2.58156538 50.57585907]
[-16.15820312 56.99391556]
[-30.38814163 61.79238892]
[-45.07894135 64.90638733]
[-60.03192139 66.29379272]
[-75.04486084 65.93584442]
[-89.91472626 63.83738327]
[-104.44042969 60.02679062]
[-118.42551422 54.55559540]
[-131.68084717 47.49779510]
[-144.02717590 38.94883728]
[-155.29753113 29.02433395]
[-165.33947754 17.85850525]
[-174.01722717 5.60235405]
[-181.21340942 -7.57836819]
[-186.83071899 -21.50540733]
[-190.79316711 -35.99041367]
[-193.04719543 -50.83749771]
[-193.56228638 -65.84587097]
[-192.33151245 -80.81255341]
[-189.37147522 -95.53514862]
[-184.72224426 -109.81454468]
[-178.44668579 -123.45763397]
[-170.62963867 -136.27989197]
[-161.37686157 -148.10794067]
[-150.81347656 -158.78179932]
[-139.08232117 -168.15711975]
[-126.34206390 -176.10710144]
[-112.76499939 -182.52426147]
[-98.53473663 -187.32177734]
[-83.84373474 -190.43479919]
[-68.89066315 -191.82121277]
[-53.87774277 -191.46224976]
[-39.00801468 -189.36280823]
[-24.48257065 -185.55123901]
[-10.49785233 -180.07911682]
[2.75701451 -173.02043152]
[15.10277176 -164.47064209]
[26.37245941 -154.54539490]
[36.41366196 -143.37889099]
[45.09059143 -131.12216187]
[52.28590012 -117.94096375]
[57.90227509 -104.01354980]
[61.86376190 -89.52827454]
[64.11679077 -74.68103790]
[64.63088989 -59.67263412]
[63.39910889 -44.70603180]
[60.43809891 -29.98363495]
[55.78791428 -15.70454884]
[49.51143265 -2.06188345]
[41.69354630 10.75986195]
[32.43997574 22.58728600]
[43.10160065 33.13857651]
[53.76322937 43.68986511]
[64.42485809 54.24115753]
[75.94261932 47.26760864]
[88.75861359 43.13969803]
[102.18122864 42.08018494]
[115.48614502 44.14624405]
[127.95536041 49.22637939]
[138.91600037 57.04645538]
[147.77659607 67.18446350]
[154.05897522 79.09332275]
[168.63168335 75.53855896]
[180.20512390 64.75124359]
[194.40345764 69.25197601]
[208.97615051 65.69721222]
[223.54885864 62.14245224]
[211.58056641 53.10033798]
[209.32095337 38.27150726]
[218.05293274 26.07509422]
[232.81889343 23.43565750]
[245.23538208 31.85174942]
[248.25291443 46.54509735]
[240.15698242 59.17438889]
[255.05888367 57.46170044]
[269.96078491 55.74900818]
[282.80432129 45.55215454]
[297.95535278 51.82738876]
[299.82778931 68.11929321]
[286.49545288 77.66814423]
[271.67349243 70.65090942]
[256.77157593 72.36360168]
[241.86967468 74.07629395]
[227.10362244 76.71515656]
[212.53091431 80.26992035]
[197.95822144 83.82467651]
[187.42712402 94.35773468]
[172.18644714 90.11125946]
[157.61373901 93.66602325]
[157.84667969 103.63654327]
[156.36691284 113.49939728]
[153.21826172 122.96257019]
[148.49394226 131.74586487]
[142.33383179 139.58924866]
[134.92033386 146.26049805]
[126.47291565 151.56207275]
[117.24169922 155.33702087]
[107.50000000 157.47358704]
[107.50000000 172.47358704]
[107.50000000 187.47358704]
[107.50000000 202.47358704]
[107.50000000 217.47358704]
[107.50000000 232.47358704]
[107.50000000 247.47358704]
[107.50000000 262.47357178]
[107.50000000 277.47357178]
[107.50000000 292.47357178]
[107.50000000 307.47357178]
[122.03988647 311.53488159]
[134.94427490 319.36941528]
[145.25555420 330.39572144]
[152.20857239 343.79565430]
[155.28736877 358.57482910]
[154.26348877 373.63650513]
[149.21287537 387.86303711]
[140.51036072 400.19869995]
[128.80169678 409.72811890]
[114.95575714 415.74414062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[27 86]
[28 85]
[29 84]
[30 83]
[94 121]
[95 120]
[97 118]
[98 117]
[99 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
