%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAGAGUCCAGGGGGGGGGGUAUCAACAAUAGGGUUUACGACCUCGAUGUUGGAUCAGGACAUCCCGAUGxxxxxxxxxxAAUCUUUGAAAUAGGGCCCGUAUUUACCCUAUAGCACCCCCUCUACCCCCCCCCCCCCCCUCUAGAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[103.50661469 422.28964233]
[92.33934021 412.19085693]
[83.51606750 399.99072266]
[77.42251587 386.22253418]
[74.32508087 371.48825073]
[74.35915375 356.43194580]
[77.52325439 341.71182251]
[83.67905426 327.97137451]
[92.55745697 315.81127930]
[103.77033234 305.76315308]
[116.82749939 298.26620483]
[131.15815735 293.64822388]
[129.62086487 278.72720337]
[128.08357239 263.80618286]
[126.54628754 248.88516235]
[125.00899506 233.96414185]
[123.47170258 219.04313660]
[121.93441010 204.12211609]
[120.39711761 189.20109558]
[118.85982513 174.28007507]
[117.32253265 159.35906982]
[115.78524017 144.43804932]
[114.24794769 129.51702881]
[87.64389038 126.83917999]
[74.55454254 106.71958923]
[59.56165314 106.25766754]
[44.56876755 105.79573822]
[29.57588196 105.33381653]
[14.58299541 104.87188721]
[6.44392204 117.82189941]
[-6.99561357 124.91242981]
[-22.07953262 124.32781219]
[-34.76072311 116.32510376]
[-41.68691254 103.13822937]
[-56.67979813 102.67630768]
[-71.67268372 102.21437836]
[-84.29869843 112.11202240]
[-99.87531281 108.27163696]
[-106.45348358 93.63923645]
[-98.98700714 79.43954468]
[-83.20351410 76.56535339]
[-71.21075439 87.22149658]
[-56.21787262 87.68341827]
[-41.22498703 88.14534760]
[-33.50013733 75.40987396]
[-20.35034561 68.20300293]
[-5.25904608 68.54807281]
[7.71849966 76.45250702]
[15.04492188 89.87900543]
[30.03780746 90.34092712]
[45.03069305 90.80285645]
[60.02357864 91.26477814]
[75.01646423 91.72670746]
[78.16889954 85.30212402]
[82.93553925 79.96431732]
[88.96393585 76.10795593]
[86.81535339 61.26263428]
[84.66677856 46.41731262]
[79.53647614 32.32192230]
[71.63999176 19.56866646]
[56.41512680 14.51070404]
[51.01250458 -0.59529579]
[59.57655716 -14.16130352]
[75.53767395 -15.78063869]
[86.65185547 -4.21108627]
[84.39324951 11.67218304]
[92.28973389 24.42543983]
[106.71711731 20.32049561]
[106.71711731 5.32049561]
[106.71711731 -9.67950439]
[92.94324493 -16.25546837]
[83.39331818 -28.16183853]
[79.96347809 -43.03459549]
[83.33472443 -57.92074585]
[92.83769226 -69.86463165]
[106.58555603 -76.49478912]
[121.84867859 -76.49478912]
[135.59654236 -69.86463165]
[145.09950256 -57.92074585]
[148.47074890 -43.03459549]
[145.04090881 -28.16183853]
[135.49098206 -16.25546837]
[121.71711731 -9.67950439]
[121.71711731 5.32049561]
[121.71711731 20.32049561]
[117.60579681 33.72528458]
[109.08065796 41.99325943]
[99.51210022 44.26873398]
[101.66068268 59.11405563]
[103.80925751 73.95938110]
[120.77998352 78.99507141]
[132.37779236 94.90709686]
[145.51942444 87.67539215]
[158.66105652 80.44369507]
[171.80268860 73.21199036]
[184.94432068 65.98028564]
[198.08595276 58.74858475]
[198.32107544 43.39149094]
[206.21701050 30.21766281]
[219.64979553 22.77079201]
[235.00607300 23.05404854]
[248.15509033 30.99123955]
[255.55981445 44.44729996]
[255.22842407 59.80261612]
[247.25006104 72.92668915]
[233.77085876 80.28919983]
[218.41665649 79.90968323]
[205.31765747 71.89021301]
[192.17602539 79.12191772]
[179.03439331 86.35362244]
[165.89276123 93.58531952]
[152.75112915 100.81702423]
[139.60949707 108.04872894]
[154.60942078 108.00274658]
[169.32933044 105.11756897]
[183.63359070 109.63288879]
[194.02941895 120.44615936]
[197.97837830 134.91702271]
[194.51622009 149.51199341]
[184.48832703 160.66732788]
[170.34329224 165.65911865]
[155.53501892 163.26849365]
[143.67936707 154.07917786]
[137.67158508 140.33714294]
[129.16896057 127.97974396]
[130.70625305 142.90075684]
[132.24354553 157.82177734]
[133.78083801 172.74278259]
[135.31813049 187.66380310]
[136.85542297 202.58482361]
[138.39271545 217.50584412]
[139.93000793 232.42684937]
[141.46730042 247.34786987]
[143.00459290 262.26889038]
[144.54188538 277.18991089]
[146.07917786 292.11093140]
[161.05036926 293.70999146]
[175.36183167 298.38717651]
[188.38789368 305.93798828]
[199.55915833 316.03240967]
[208.38722229 328.22906494]
[214.48619080 341.99484253]
[217.58941650 356.72790527]
[217.56126404 371.78424072]
[214.40295410 386.50561523]
[208.25256348 400.24847412]
[199.37895203 412.41204834]
[188.17002869 422.46459961]
[175.11581421 429.96667480]
[160.78697205 434.59030151]
[145.80989075 436.13336182]
[130.83932495 434.52841187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[34 44]
[35 43]
[36 42]
[56 90]
[57 89]
[58 88]
[59 67]
[60 66]
[68 85]
[69 84]
[70 83]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
