%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGAUUAACCGGGGGGGGGGCAAGUCAAUAGAAGCCGGCGUAAAGAGUGUUUUAGAUCACCCCCUCCCCAxxxxxxxxxxAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCUUACCCCCCCCCCCCCCCCACUAUUAACC\
) } def
/len { sequence length } bind def

/coor [
[91.00818634 391.43399048]
[79.84091187 381.33520508]
[71.01763916 369.13507080]
[64.92408752 355.36691284]
[61.82665253 340.63259888]
[61.86072540 325.57629395]
[65.02482605 310.85617065]
[71.18062592 297.11572266]
[80.05902863 284.95562744]
[91.27190399 274.90750122]
[104.32907104 267.41055298]
[118.65973663 262.79257202]
[117.12244415 247.87155151]
[115.58515167 232.95053101]
[114.04785919 218.02951050]
[112.51056671 203.10848999]
[110.97327423 188.18748474]
[109.43598175 173.26646423]
[107.89868927 158.34544373]
[106.36139679 143.42443848]
[104.82410431 128.50341797]
[79.74884796 113.69116974]
[82.96017456 89.56481171]
[74.04402161 77.50238037]
[65.12787628 65.43994904]
[56.21172333 53.37751770]
[47.29557419 41.31508636]
[38.37942123 29.25265503]
[22.00051117 31.29142761]
[6.90765858 24.84570122]
[-2.83354068 11.75431061]
[-4.65081882 -4.36785984]
[1.85610592 -19.12779808]
[-7.30582952 -31.00462151]
[-16.46776390 -42.88144684]
[-25.62969971 -54.75827026]
[-38.57787323 -47.14590836]
[-52.37805176 -41.21646118]
[-66.81257629 -37.06343460]
[-81.65380859 -34.75233459]
[-96.66766357 -34.31960297]
[-111.61737061 -35.77207565]
[-126.26713562 -39.08683395]
[-140.38591003 -44.21160889]
[-153.75103760 -51.06556702]
[-166.15170288 -59.54061508]
[-177.39236450 -69.50308990]
[-187.29571533 -80.79587555]
[-195.70556641 -93.24085236]
[-202.48930359 -106.64176178]
[-207.53991699 -120.78723907]
[-210.77775574 -135.45419312]
[-212.15174866 -150.41131592]
[-211.64024353 -165.42269897]
[-209.25128174 -180.25158691]
[-205.02256775 -194.66412354]
[-199.02078247 -208.43299866]
[-191.34057617 -221.34104919]
[-182.10308838 -233.18469238]
[-171.45399475 -243.77714539]
[-159.56126404 -252.95135498]
[-146.61245728 -260.56262207]
[-132.81176758 -266.49090576]
[-118.37689972 -270.64273071]
[-103.53547668 -272.95257568]
[-88.52157593 -273.38403320]
[-73.57199860 -271.93032837]
[-58.92251587 -268.61431885]
[-44.80416489 -263.48837280]
[-31.43962097 -256.63327026]
[-19.03965759 -248.15718079]
[-7.79984283 -238.19375610]
[2.10255766 -226.90014648]
[10.51136780 -214.45446777]
[17.29396820 -201.05297852]
[22.34338760 -186.90707397]
[25.57999039 -172.23985291]
[26.95273018 -157.28262329]
[26.43995476 -142.27128601]
[24.04975510 -127.44258118]
[19.81982422 -113.03040314]
[13.81687832 -99.26203918]
[6.13558865 -86.35463715]
[-3.10289741 -74.51176453]
[-13.75287628 -63.92020416]
[-4.59094095 -52.04338074]
[4.57099438 -40.16655731]
[13.73292923 -28.28973389]
[27.15277290 -30.99600601]
[40.49020004 -27.62725067]
[51.11727524 -18.78819847]
[56.91467667 -6.16715765]
[56.69420624 7.78625250]
[50.44185257 20.33650398]
[59.35800552 32.39893723]
[68.27415466 44.46136856]
[77.19030762 56.52379990]
[86.10645294 68.58622742]
[95.02260590 80.64865875]
[112.84821320 79.20382690]
[128.26028442 93.91127014]
[142.68766785 89.80632019]
[157.11505127 85.70137787]
[171.54244995 81.59643555]
[177.76657104 67.25090027]
[191.77868652 60.30867004]
[206.96270752 64.04764557]
[216.14916992 76.70239258]
[215.00054932 92.29773712]
[204.05915833 103.47002411]
[188.49119568 104.94404602]
[175.64738464 96.02381897]
[161.22000122 100.12876129]
[146.79261780 104.23370361]
[132.36523438 108.33865356]
[146.99447632 111.65307617]
[161.87748718 109.78341675]
[175.78399658 115.40563202]
[185.18591309 127.09339142]
[187.69804382 141.88153076]
[182.68302917 156.01835632]
[171.41317749 165.91737366]
[156.74763489 169.06723022]
[142.40698242 164.66882324]
[132.02943420 153.83801270]
[128.24774170 139.32353210]
[119.74511719 126.96612549]
[121.28240967 141.88714600]
[122.81970215 156.80815125]
[124.35699463 171.72917175]
[125.89428711 186.65019226]
[127.43157959 201.57119751]
[128.96887207 216.49221802]
[130.50616455 231.41323853]
[132.04345703 246.33425903]
[133.58074951 261.25527954]
[148.55194092 262.85433960]
[162.86340332 267.53152466]
[175.88946533 275.08233643]
[187.06072998 285.17675781]
[195.88879395 297.37341309]
[201.98776245 311.13919067]
[205.09098816 325.87225342]
[205.06283569 340.92858887]
[201.90452576 355.64996338]
[195.75413513 369.39282227]
[186.88052368 381.55639648]
[175.67160034 391.60894775]
[162.61738586 399.11102295]
[148.28854370 403.73464966]
[133.31146240 405.27770996]
[118.34090424 403.67276001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[33 88]
[34 87]
[35 86]
[36 85]
[101 115]
[102 114]
[103 113]
[104 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
