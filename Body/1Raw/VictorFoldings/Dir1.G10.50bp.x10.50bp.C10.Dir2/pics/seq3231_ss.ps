%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAACAACAGGGGGGGGGGUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGxxxxxxxxxxCCAGUAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACCCCCCCCCCCUUCACAACA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 392.69888306]
[71.19830322 386.68286133]
[59.48964310 377.15344238]
[50.78712082 364.81777954]
[45.73651886 350.59124756]
[44.71262741 335.52957153]
[47.79142761 320.75042725]
[54.74444962 307.35049438]
[65.05573273 296.32415771]
[77.96011353 288.48965454]
[92.50000000 284.42834473]
[92.50000000 269.42834473]
[92.50000000 254.42832947]
[92.50000000 239.42832947]
[92.50000000 224.42832947]
[92.50000000 209.42832947]
[92.50000000 194.42832947]
[92.50000000 179.42832947]
[92.50000000 164.42832947]
[92.50000000 149.42832947]
[92.50000000 134.42832947]
[92.50000000 119.42833710]
[82.16750336 112.51940155]
[77.25437927 100.49640656]
[80.01576233 87.23403931]
[90.11738586 77.38901520]
[104.54555511 74.76713562]
[100.83939362 60.23219681]
[89.93226624 48.77160263]
[94.28505707 34.52721786]
[90.57889557 19.99228096]
[86.87273407 5.45734406]
[83.16657257 -9.07759190]
[68.36075592 -6.61556196]
[53.39948273 -5.41803360]
[38.39054871 -5.49363422]
[23.44209480 -6.84181976]
[8.66182995 -9.45287609]
[-5.84375334 -13.30799007]
[-19.97014046 -18.37938499]
[-33.61554718 -24.63052177]
[-46.68165588 -32.01635742]
[-59.07432938 -40.48368073]
[-70.70426941 -49.97147751]
[-81.48768616 -60.41139221]
[-91.34687805 -71.72819519]
[-100.21081543 -83.84036255]
[-108.01562500 -96.66061401]
[-114.70507812 -110.09657288]
[-120.23097229 -124.05144501]
[-124.55348969 -138.42466736]
[-127.64149475 -153.11268616]
[-129.47273254 -168.00968933]
[-130.03401184 -183.00831604]
[-129.32127380 -198.00050354]
[-127.33967590 -212.87825012]
[-124.10348511 -227.53433228]
[-119.63602448 -241.86317444]
[-113.96947479 -255.76152039]
[-107.14466858 -269.12924194]
[-99.21076965 -281.86999512]
[-90.22496033 -293.89202881]
[-80.25197601 -305.10867310]
[-69.36367035 -315.43914795]
[-57.63849640 -324.80902100]
[-45.16094208 -333.15072632]
[-32.02090073 -340.40423584]
[-18.31305695 -346.51724243]
[-4.13617134 -351.44570923]
[10.40760708 -355.15411377]
[25.21348953 -357.61575317]
[40.17479706 -358.81289673]
[55.18372726 -358.73690796]
[70.13214874 -357.38833618]
[84.91234589 -354.77691650]
[99.41782379 -350.92141724]
[113.54408264 -345.84967041]
[127.18933105 -339.59817505]
[140.25524902 -332.21200562]
[152.64770508 -323.74435425]
[164.27740479 -314.25625610]
[175.06054688 -303.81607056]
[184.91944885 -292.49899292]
[193.78306580 -280.38662720]
[201.58753967 -267.56616211]
[208.27664185 -254.13002014]
[213.80218506 -240.17501831]
[218.12432861 -225.80168152]
[221.21195984 -211.11357117]
[223.04280090 -196.21653748]
[223.60369873 -181.21789551]
[222.89057922 -166.22572327]
[220.90859985 -151.34802246]
[217.67202759 -136.69201660]
[213.20419312 -122.36330414]
[207.53729248 -108.46510315]
[200.71212769 -95.09756470]
[192.77790833 -82.35699463]
[183.79179382 -70.33520508]
[173.81851196 -59.11880875]
[162.92994690 -48.78861618]
[151.20452881 -39.41906357]
[138.72676086 -31.07765770]
[125.58652496 -23.82450104]
[111.87852478 -17.71185112]
[97.70151520 -12.78375340]
[101.40767670 1.75118303]
[105.11383820 16.28611946]
[108.81999207 30.82105446]
[119.46202850 41.24201584]
[115.37432861 56.52603531]
[119.08049011 71.06097412]
[129.52029419 81.83177948]
[143.93251038 85.98966980]
[158.34472656 90.14755249]
[172.75694275 94.30544281]
[185.63342285 85.43242645]
[201.19586182 86.96360016]
[212.09616089 98.17598724]
[213.18753052 113.77543640]
[203.95465088 126.39637756]
[188.75701904 130.07957458]
[174.77047729 123.08594513]
[168.59906006 108.71765900]
[154.18684387 104.55976868]
[139.77462769 100.40188599]
[125.36241150 96.24399567]
[120.07222748 111.69822693]
[107.50000000 119.42833710]
[107.50000000 134.42832947]
[107.50000000 149.42832947]
[107.50000000 164.42832947]
[107.50000000 179.42832947]
[107.50000000 194.42832947]
[107.50000000 209.42832947]
[107.50000000 224.42832947]
[107.50000000 239.42832947]
[107.50000000 254.42832947]
[107.50000000 269.42834473]
[107.50000000 284.42834473]
[122.03988647 288.48965454]
[134.94427490 296.32415771]
[145.25555420 307.35049438]
[152.20857239 320.75042725]
[155.28736877 335.52957153]
[154.26348877 350.59124756]
[149.21287537 364.81777954]
[140.51036072 377.15344238]
[128.80169678 386.68286133]
[114.95575714 392.69888306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[27 112]
[28 111]
[30 109]
[31 108]
[32 107]
[33 106]
[113 127]
[114 126]
[115 125]
[116 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
