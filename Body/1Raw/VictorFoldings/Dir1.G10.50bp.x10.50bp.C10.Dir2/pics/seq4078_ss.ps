%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUACACAAAGGGGGGGGGGCAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUxxxxxxxxxxGAUAUGAAAAACCAUCGUUGUAUUUCAACUACAAGAACACCAAUGACCCCCCCCCCCCCCAAUACGCAAA\
) } def
/len { sequence length } bind def

/coor [
[79.82704163 360.03015137]
[68.61160278 349.96484375]
[60.02020645 337.58401489]
[54.51616287 323.55538940]
[52.39630127 308.63552856]
[53.77494812 293.62896729]
[58.57774734 279.34509277]
[66.54569244 266.55413818]
[77.24908447 255.94590759]
[90.11070251 248.09254456]
[104.43693542 243.41751099]
[103.19005585 228.46943665]
[101.94318390 213.52134705]
[100.69631195 198.57325745]
[99.44943237 183.62516785]
[98.20256042 168.67707825]
[96.95568848 153.72898865]
[95.70880890 138.78091431]
[94.46193695 123.83281708]
[93.21506500 108.88473511]
[91.81275940 93.95042419]
[90.25518036 79.03151703]
[88.69759369 64.11260223]
[87.14001465 49.19368744]
[72.14727783 49.80228424]
[57.14612961 49.45874786]
[42.19696808 48.16447067]
[27.35999489 45.92466354]
[12.69495201 42.74834442]
[-1.73911095 38.64830017]
[-15.88407135 33.64104080]
[-29.68297195 27.74673462]
[-43.08024979 20.98910904]
[-56.02195740 13.39538097]
[-68.45598602 4.99612331]
[-80.33226013 -4.17484045]
[-91.60296631 -14.08058262]
[-102.22271729 -24.68121719]
[-112.14875031 -35.93405533]
[-121.34109497 -47.79378891]
[-129.76274109 -60.21266174]
[-137.37977600 -73.14066315]
[-144.16152954 -86.52574921]
[-150.08068848 -100.31400299]
[-155.11341858 -114.44992065]
[-159.23947144 -128.87657166]
[-162.44219971 -143.53587341]
[-164.70874023 -158.36878967]
[-166.02995300 -173.31558228]
[-166.40051270 -188.31610107]
[-165.81893921 -203.30990601]
[-164.28755188 -218.23663330]
[-161.81254578 -233.03619385]
[-158.40386963 -247.64897156]
[-154.07525635 -262.01614380]
[-148.84413147 -276.07986450]
[-142.73155212 -289.78347778]
[-135.76214600 -303.07180786]
[-127.96397400 -315.89135742]
[-119.36842346 -328.19052124]
[-110.01012421 -339.91973877]
[-99.92675018 -351.03179932]
[-89.15889740 -361.48196411]
[-77.74993896 -371.22814941]
[-65.74580383 -380.23110962]
[-53.19483185 -388.45458984]
[-40.14756012 -395.86547852]
[-26.65653038 -402.43392944]
[-12.77606392 -408.13351440]
[1.43794775 -412.94125366]
[15.92826843 -416.83779907]
[30.63655090 -419.80749512]
[45.50357056 -421.83831787]
[60.46945953 -422.92211914]
[75.47396088 -423.05456543]
[90.45664978 -422.23507690]
[105.35720062 -420.46697998]
[120.11560822 -417.75741577]
[134.67245483 -414.11724854]
[148.96911621 -409.56112671]
[162.94801331 -404.10745239]
[176.55288696 -397.77816772]
[189.72894287 -390.59872437]
[202.42311096 -382.59808350]
[214.58428955 -373.80841064]
[226.16351318 -364.26510620]
[237.11413574 -354.00665283]
[247.39208984 -343.07431030]
[256.95596313 -331.51208496]
[265.76727295 -319.36657715]
[273.79052734 -306.68667603]
[280.99337769 -293.52340698]
[287.34689331 -279.92984009]
[292.82546997 -265.96066284]
[297.40701294 -251.67213440]
[301.07308960 -237.12179565]
[303.80892944 -222.36822510]
[305.60354614 -207.47085571]
[306.44970703 -192.48963928]
[306.34396362 -177.48493958]
[305.28680420 -162.51713562]
[303.28244019 -147.64653015]
[300.33895874 -132.93298340]
[296.46820068 -118.43574524]
[291.68579102 -104.21320343]
[286.01092529 -90.32260895]
[279.46649170 -76.81990814]
[272.07882690 -63.75946426]
[263.87771606 -51.19387436]
[254.89614868 -39.17372894]
[245.17028809 -27.74743652]
[234.73930359 -16.96100235]
[223.64520264 -6.85785913]
[211.93266296 2.52130866]
[199.64883423 11.13873482]
[186.84317017 18.95972061]
[173.56726074 25.95277214]
[159.87455750 32.08972931]
[145.82019043 37.34588623]
[131.46073914 41.70007324]
[116.85404968 45.13475418]
[102.05892944 47.63610840]
[103.61650848 62.55501938]
[105.17408752 77.47393036]
[106.73166656 92.39284515]
[110.65673065 99.49762726]
[108.16314697 107.63785553]
[109.41002655 122.58594513]
[110.65689850 137.53402710]
[111.90377045 152.48211670]
[113.15065002 167.43020630]
[114.39752197 182.37829590]
[115.64439392 197.32638550]
[116.89127350 212.27447510]
[118.13814545 227.22254944]
[119.38501740 242.17063904]
[134.28779602 244.40756226]
[148.27278137 250.02157593]
[160.58576965 258.70989990]
[170.56274414 270.00399780]
[177.66564941 283.29479980]
[181.51144409 297.86553955]
[181.89271545 312.93045044]
[178.78892517 327.67709351]
[172.36743164 341.31018066]
[162.97456360 353.09451294]
[151.11685181 362.39459229]
[137.43376160 368.70886230]
[122.66322327 371.69677734]
[107.60177612 371.19723511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 125]
[22 124]
[23 123]
[24 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
