%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUAAAACCCGGGGGGGGGGUCAUUCACACGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCUxxxxxxxxxxCAGCCACCAUGAAUAUUGUACGGUACCAUAAAUACUUGACCACCUGUAGUCCCCCCCCCCACAUAAAAACC\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 394.73468018]
[71.01555634 389.18167114]
[58.81560135 380.31533813]
[49.20452881 368.69302368]
[42.78650284 355.04531860]
[39.96496582 340.23013306]
[40.91728210 325.17874146]
[45.58358765 310.83734131]
[53.67055511 298.10736084]
[64.66983032 287.78909302]
[77.88998413 280.53112793]
[92.50000000 276.78967285]
[92.50000000 261.78967285]
[92.50000000 246.78968811]
[92.50000000 231.78968811]
[92.50000000 216.78968811]
[92.50000000 201.78968811]
[92.50000000 186.78968811]
[92.50000000 171.78968811]
[92.50000000 156.78968811]
[92.50000000 141.78968811]
[84.76270294 129.06240845]
[92.50000000 115.26223755]
[87.36969757 101.16684723]
[77.72788239 89.67618561]
[68.08606720 78.18551636]
[58.44425583 66.69484711]
[48.80244064 55.20418549]
[36.41228485 63.68066788]
[23.25093842 70.90187073]
[9.44515896 76.79824829]
[-4.87209272 81.31301117]
[-19.56293106 84.40267944]
[-34.48587036 86.03749847]
[-49.49719620 86.20172119]
[-64.45233154 84.89376831]
[-79.20724487 82.12623596]
[-93.61984253 77.92578125]
[-107.55131531 72.33284760]
[-120.86749268 65.40130615]
[-133.44012451 57.19791412]
[-145.14813232 47.80167770]
[-155.87876892 37.30308533]
[-165.52865601 25.80324936]
[-174.00489807 13.41292286]
[-181.22584534 0.25143281]
[-187.12193298 -13.55446434]
[-191.63641357 -27.87180710]
[-194.72579956 -42.56270599]
[-196.36030579 -57.48567963]
[-196.52423096 -72.49700928]
[-195.21598816 -87.45211792]
[-192.44815063 -102.20697784]
[-188.24740601 -116.61949158]
[-182.65420532 -130.55084229]
[-175.72239685 -143.86688232]
[-167.51875305 -156.43936157]
[-158.12228394 -168.14718628]
[-147.62347412 -178.87759399]
[-136.12344360 -188.52726746]
[-123.73294830 -197.00325012]
[-110.57131195 -204.22393799]
[-96.76529694 -210.11975098]
[-82.44786835 -214.63394165]
[-67.75690460 -217.72302246]
[-52.83389664 -219.35725403]
[-37.82256699 -219.52087402]
[-22.86748505 -218.21232605]
[-8.11267853 -215.44419861]
[6.29974985 -211.24316406]
[20.23099709 -205.64967346]
[33.54689789 -198.71760559]
[46.11920547 -190.51370239]
[57.82683945 -181.11700439]
[68.55704498 -170.61798096]
[78.20648193 -159.11776733]
[86.68222809 -146.72709656]
[93.90264130 -133.56532288]
[99.79818726 -119.75918579]
[104.31209564 -105.44165802]
[107.40087891 -90.75063324]
[109.03480530 -75.82759857]
[109.19812775 -60.81626511]
[107.88927460 -45.86120987]
[105.12085724 -31.10645866]
[100.91953278 -16.69411278]
[95.32576752 -2.76297712]
[88.39343262 10.55278301]
[80.18928528 23.12492561]
[70.79234314 34.83237457]
[60.29310608 45.56237030]
[69.93492126 57.05303574]
[79.57673645 68.54370117]
[89.21855164 80.03437042]
[98.86036682 91.52503967]
[101.11772156 89.07621002]
[104.44182587 87.34657288]
[108.59083557 86.69200134]
[113.21813202 87.38817596]
[117.89801788 89.60211945]
[132.89723206 89.44812775]
[147.89643860 89.29412842]
[162.89328003 88.98615265]
[177.88615417 88.52422333]
[192.87904358 88.06230164]
[197.33200073 73.58991241]
[206.24488831 61.34902954]
[218.65087891 52.66743469]
[233.20428467 48.48685074]
[248.32644653 49.26075745]
[262.37701416 54.90520477]
[273.83193970 64.80792236]
[281.44860840 77.89473724]
[284.40087891 92.74610138]
[282.36846924 107.75103760]
[275.57186890 121.28192139]
[264.74832153 131.87103271]
[251.07185364 138.36973572]
[236.02601624 140.07310486]
[221.24285889 136.79637146]
[208.32595825 128.89497375]
[198.67642212 117.22599030]
[193.34097290 103.05518341]
[178.34808350 103.51711273]
[163.35519409 103.97903442]
[156.72547913 107.34935760]
[148.05043030 104.29333496]
[133.05122375 104.44733429]
[118.05201721 104.60133362]
[107.50000000 115.26223755]
[115.23729706 129.06240845]
[107.50000000 141.78968811]
[107.50000000 156.78968811]
[107.50000000 171.78968811]
[107.50000000 186.78968811]
[107.50000000 201.78968811]
[107.50000000 216.78968811]
[107.50000000 231.78968811]
[107.50000000 246.78968811]
[107.50000000 261.78967285]
[107.50000000 276.78967285]
[122.11001587 280.53112793]
[135.33016968 287.78909302]
[146.32945251 298.10736084]
[154.41641235 310.83734131]
[159.08271790 325.17874146]
[160.03503418 340.23013306]
[157.21350098 355.04531860]
[150.79547119 368.69302368]
[141.18440247 380.31533813]
[128.98443604 389.18167114]
[114.96250153 394.73468018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 130]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[100 129]
[101 128]
[102 127]
[103 125]
[104 124]
[105 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
