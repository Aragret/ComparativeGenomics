%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAGACCAAGGGGGGGGGGGAAGUUAUUAUCUCGAACUGACACUGAGCCACAACCCAAACAACCCAGCUxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCCCCCCCCCCCUAGACCUA\
) } def
/len { sequence length } bind def

/coor [
[87.73483276 417.25595093]
[73.24514008 413.04745483]
[60.33890915 405.23135376]
[49.89610672 394.34051514]
[42.62874222 381.11752319]
[39.03231812 366.46389771]
[39.35203934 351.37881470]
[43.56610870 336.89074707]
[51.38720703 323.98751831]
[62.28207397 313.54895020]
[75.50788116 306.28668213]
[90.16287231 302.69592285]
[90.47492981 287.69915771]
[90.78698730 272.70239258]
[91.09904480 257.70565796]
[91.41110229 242.70889282]
[91.72315979 227.71214294]
[92.03520966 212.71539307]
[92.34726715 197.71862793]
[92.65932465 182.72187805]
[92.97138214 167.72512817]
[93.28343964 152.72837830]
[93.28343964 137.72837830]
[92.97138214 122.73162079]
[92.65932465 107.73486328]
[90.94663239 92.83296204]
[80.52569580 80.92856598]
[85.46726227 66.87758636]
[82.36894226 52.20105743]
[69.40972900 43.55833817]
[66.47666168 28.63011932]
[74.79603577 16.32875252]
[71.69771576 1.65222716]
[68.59939575 -13.02429867]
[65.50107574 -27.70082474]
[50.60083771 -25.89186668]
[35.59963989 -25.38844681]
[20.61165047 -26.19439507]
[5.75093937 -28.30357742]
[-8.86939144 -31.69994164]
[-23.13807106 -36.35763550]
[-36.94650650 -42.24121857]
[-50.18960190 -49.30590439]
[-62.76656723 -57.49792862]
[-74.58168793 -66.75494385]
[-85.54503632 -77.00650024]
[-95.57317352 -88.17456818]
[-104.58978271 -100.17415619]
[-112.52623749 -112.91394043]
[-119.32213593 -126.29695892]
[-124.92575073 -140.22135925]
[-129.29444885 -154.58114624]
[-132.39497375 -169.26707458]
[-134.20372009 -184.16732788]
[-134.70692444 -199.16853333]
[-133.90077209 -214.15650940]
[-131.79138184 -229.01719666]
[-128.39480591 -243.63748169]
[-123.73690796 -257.90609741]
[-117.85313416 -271.71444702]
[-110.78826141 -284.95742798]
[-102.59606171 -297.53430176]
[-93.33888245 -309.34927368]
[-83.08717346 -320.31250000]
[-71.91896057 -330.34045410]
[-59.91924667 -339.35690308]
[-47.17935562 -347.29318237]
[-33.79624176 -354.08889771]
[-19.87176704 -359.69232178]
[-5.51190519 -364.06082153]
[9.17405510 -367.16113281]
[24.07434082 -368.96966553]
[39.07555389 -369.47265625]
[54.06351852 -368.66629028]
[68.92417145 -366.55670166]
[83.54440308 -363.15991211]
[97.81295776 -358.50183105]
[111.62122345 -352.61785889]
[124.86412048 -345.55279541]
[137.44085693 -337.36041260]
[149.25572205 -328.10308838]
[160.21878052 -317.85122681]
[170.24659729 -306.68286133]
[179.26287842 -294.68301392]
[187.19897461 -281.94302368]
[193.99449158 -268.55981445]
[199.59771729 -254.63525391]
[203.96601868 -240.27532959]
[207.06611633 -225.58932495]
[208.87445068 -210.68901062]
[209.37724304 -195.68778992]
[208.57066345 -180.69984436]
[206.46086121 -165.83921814]
[203.06387329 -151.21902466]
[198.40557861 -136.95054626]
[192.52142334 -123.14236450]
[185.45617676 -109.89956665]
[177.26362610 -97.32294464]
[168.00610352 -85.50820923]
[157.75408936 -74.54529572]
[146.58560181 -64.51762390]
[134.58563232 -55.50152206]
[121.84552002 -47.56560516]
[108.46221161 -40.77027130]
[94.53758240 -35.16723633]
[80.17759705 -30.79914474]
[83.27591705 -16.12261963]
[86.37424469 -1.44609463]
[89.47256470 13.23043060]
[102.05426788 21.11942673]
[105.40547943 35.95937347]
[97.04547119 49.10273361]
[100.14379120 63.77926254]
[110.34311676 74.63389587]
[105.62316132 89.73464203]
[112.83080292 76.57980347]
[125.93479156 69.28010559]
[140.91368103 70.07574463]
[153.17062378 78.72254944]
[158.94415283 92.56691742]
[156.46240234 107.36019135]
[146.48703003 118.56250763]
[132.07933044 122.73601532]
[117.66085052 118.59991455]
[107.65608215 107.42281342]
[107.96813202 122.41956329]
[108.28018951 137.41632080]
[111.42128754 143.35273743]
[111.09297943 149.10803223]
[108.28018951 153.04043579]
[107.96813202 168.03718567]
[107.65608215 183.03393555]
[107.34402466 198.03068542]
[107.03196716 213.02745056]
[106.71990967 228.02420044]
[106.40785217 243.02095032]
[106.09579468 258.01770020]
[105.78374481 273.01446533]
[105.47168732 288.01119995]
[105.15962982 303.00796509]
[119.65256500 307.20526123]
[132.56483459 315.01138306]
[143.01603699 325.89416504]
[150.29360962 339.11154175]
[153.90135193 353.76239014]
[153.59327698 368.84771729]
[149.39039612 383.33901978]
[141.57926941 396.24829102]
[130.69245911 406.69528198]
[117.47226715 413.96774292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 127]
[24 126]
[25 125]
[26 115]
[28 113]
[29 112]
[32 109]
[33 108]
[34 107]
[35 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
