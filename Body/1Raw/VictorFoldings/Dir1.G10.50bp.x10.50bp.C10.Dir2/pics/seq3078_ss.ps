%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGGCCUAGGGGGGGGGGCUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAxxxxxxxxxxGGGGUAGCUAAAGUGAACUGUAUCCGACAUCUGGUUCCUACUUCAGGGUCCCCCCCCCCCAUAAAGCCUA\
) } def
/len { sequence length } bind def

/coor [
[-134.39410400 306.37423706]
[-150.24041748 302.04208374]
[-165.54418945 296.07174683]
[-180.13658142 288.52923584]
[-193.85665894 279.49795532]
[-206.55307007 269.07769775]
[-218.08581543 257.38348389]
[-228.32772827 244.54455566]
[-237.16592407 230.70262146]
[-250.55220032 237.47074890]
[-259.37661743 250.60240173]
[-274.22579956 249.44012451]
[-287.61209106 256.20825195]
[-300.99838257 262.97634888]
[-314.38464355 269.74447632]
[-327.77093506 276.51257324]
[-341.01351929 283.55770874]
[-354.10668945 290.87683105]
[-362.37719727 304.36419678]
[-377.26187134 303.82064819]
[-390.35504150 311.13973999]
[-403.44818115 318.45886230]
[-416.54135132 325.77795410]
[-424.46774292 340.13427734]
[-440.86682129 340.17742920]
[-448.86862183 325.86297607]
[-440.24157715 311.91644287]
[-423.86044312 312.68481445]
[-410.76730347 305.36569214]
[-397.67413330 298.04660034]
[-384.58099365 290.72747803]
[-377.24697876 277.76361084]
[-361.42578125 277.78366089]
[-348.33264160 270.46456909]
[-346.18206787 266.13436890]
[-341.25524902 263.14141846]
[-334.53906250 263.12631226]
[-321.15277100 256.35818481]
[-307.76647949 249.59007263]
[-294.38018799 242.82196045]
[-280.99392700 236.05384827]
[-273.12698364 223.40628052]
[-257.32031250 224.08445740]
[-243.93403625 217.31634521]
[-248.98719788 204.53553772]
[-252.89846802 191.35992432]
[-255.63757324 177.89129639]
[-257.18325806 164.23371887]
[-257.52349854 150.49273682]
[-256.65560913 136.77455139]
[-254.58621216 123.18517303]
[-251.33120728 109.82962799]
[-246.91571045 96.81116486]
[-241.37374878 84.23040009]
[-234.74807739 72.18460083]
[-227.08987427 60.76688766]
[-218.45822144 50.06554413]
[-208.91976929 40.16331863]
[-198.54820251 31.13678741]
[-187.42361450 23.05576897]
[-175.63192749 15.98277092]
[-163.26423645 9.97252274]
[-150.41607666 5.07153797]
[-137.18673706 1.31776249]
[-123.67841339 -1.25972128]
[-109.99549866 -2.64092064]
[-96.24372101 -2.81508708]
[-82.52936554 -1.78079915]
[-68.95841217 0.45402452]
[-55.63575745 3.87218690]
[-42.66438293 8.44734478]
[-30.14455223 14.14421177]
[-18.17305565 20.91882896]
[-6.84244680 28.71890640]
[3.75966787 37.48422623]
[13.55130577 47.14710617]
[22.45674133 57.63292694]
[30.40709686 68.86069489]
[37.34086990 80.74369049]
[43.20440674 93.19010925]
[47.95233154 106.10379791]
[62.44792557 102.24664307]
[76.94351959 98.38948059]
[91.43911743 94.53231812]
[97.84760284 89.55081177]
[106.27645111 90.74905396]
[117.84989166 79.96173859]
[132.04821777 84.46247101]
[146.62092590 80.90770721]
[159.59225464 67.87986755]
[176.22871399 73.37789154]
[190.72430420 69.52073669]
[205.21989441 65.66357422]
[219.71549988 61.80641556]
[234.12771606 57.64852524]
[248.45031738 53.19171143]
[262.77291870 48.73489761]
[277.09552002 44.27807999]
[291.22030640 39.22932434]
[305.12286377 33.59736633]
[319.02542114 27.96541023]
[326.57919312 13.81196404]
[342.38009644 11.03501511]
[354.30700684 21.76480103]
[353.21063232 37.77034760]
[339.93200684 46.77357101]
[324.65737915 41.86796570]
[310.75482178 47.49992371]
[296.85226440 53.13187790]
[295.64373779 55.72933960]
[293.30007935 57.98792267]
[289.95126343 59.46009445]
[285.89126587 59.75609589]
[281.55230713 58.60067749]
[267.22973633 63.05749130]
[252.90711975 67.51430511]
[238.58453369 71.97112274]
[235.58590698 75.76372528]
[230.14714050 77.67449188]
[223.57266235 76.30200958]
[209.07705688 80.15917206]
[194.58146667 84.01632690]
[180.08586121 87.87348938]
[173.71929932 98.20664215]
[161.62422180 101.51240540]
[150.17568970 95.48040771]
[135.60298157 99.03517151]
[125.07188416 109.56822968]
[109.83121490 105.32175446]
[95.29627991 109.02791595]
[80.80068207 112.88507843]
[66.30508423 116.74223328]
[51.80949020 120.59939575]
[54.41547012 136.83265686]
[55.30410767 153.24903870]
[54.46574783 169.66735840]
[51.90979004 185.90644836]
[47.66457367 201.78713989]
[41.77709961 217.13421631]
[34.31246567 231.77838135]
[25.35318184 245.55809021]
[14.99823380 258.32135010]
[3.36200500 269.92745972]
[-9.42699242 280.24838257]
[-23.22753906 289.17037964]
[-37.88726044 296.59512329]
[-53.24432373 302.44076538]
[-69.12920380 306.64300537]
[-85.36657715 309.15554810]
[-101.77723694 309.95086670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 44]
[10 43]
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[17 34]
[18 33]
[20 31]
[21 30]
[22 29]
[23 28]
[81 133]
[82 132]
[83 131]
[84 130]
[86 129]
[88 127]
[89 126]
[91 123]
[92 122]
[93 121]
[94 120]
[95 117]
[96 116]
[97 115]
[98 114]
[99 109]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
