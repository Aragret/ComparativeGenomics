%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGGCCUCCUGGGGGGGGGGAUUUAUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGxxxxxxxxxxGAACACUAUACCUAUUAUUCGGCGCAUGAGCUGGAGUCCUAGGCACAGCUCCCCCCCCCCCUAAGCCUCCU\
) } def
/len { sequence length } bind def

/coor [
[92.07868195 550.70678711]
[78.05673981 545.15380859]
[65.85678101 536.28747559]
[56.24571228 524.66516113]
[49.82768631 511.01742554]
[47.00614929 496.20223999]
[47.95846558 481.15087891]
[52.62477112 466.80944824]
[60.71173859 454.07949829]
[71.71101379 443.76123047]
[84.93117523 436.50323486]
[99.54118347 432.76181030]
[99.54118347 417.76181030]
[99.54118347 402.76181030]
[99.54118347 387.76181030]
[99.54118347 372.76181030]
[99.54118347 357.76181030]
[99.54118347 342.76181030]
[99.54118347 327.76181030]
[99.54118347 312.76181030]
[99.54118347 297.76181030]
[99.54118347 282.76181030]
[84.83275604 276.94027710]
[73.44808197 265.90237427]
[67.14399719 251.31037903]
[66.90901184 235.37814331]
[72.80841827 220.53512573]
[83.96984100 209.05598450]
[98.71211243 202.71199036]
[98.40413666 187.71514893]
[98.09616089 172.71830750]
[97.78817749 157.72146606]
[96.86476898 142.74992371]
[95.32747650 127.82890320]
[93.79018402 112.90789032]
[85.75148010 101.46800995]
[91.28880310 88.62940216]
[89.75151062 73.70838928]
[88.21421814 58.78737259]
[76.23603821 48.82941055]
[74.88956451 33.67547989]
[84.45677185 22.31748390]
[82.91947937 7.39646769]
[79.78063202 3.07178545]
[78.76023102 -1.56118214]
[79.61270142 -5.62847757]
[81.77607727 -8.48628044]
[81.16024780 -23.47363281]
[80.54442596 -38.46098709]
[79.92859650 -53.44834137]
[64.95769501 -54.64393234]
[50.24007034 -57.63539505]
[35.99034500 -62.37910080]
[22.41632652 -68.80587006]
[9.71596432 -76.82199097]
[-1.92553627 -86.31055450]
[-12.33840561 -97.13318634]
[-21.37079430 -109.13208008]
[-28.89098358 -122.13224030]
[-34.78930664 -135.94409180]
[-38.97974777 -150.36621094]
[-41.40119553 -165.18827820]
[-42.01834488 -180.19416809]
[-40.82219315 -195.16502380]
[-37.83018112 -209.88253784]
[-33.08594513 -224.13208008]
[-26.65866470 -237.70585632]
[-18.64207268 -250.40592957]
[-9.15307426 -262.04705811]
[1.66995382 -272.45953369]
[13.66917992 -281.49148560]
[26.66961861 -289.01116943]
[40.48168945 -294.90896606]
[54.90396500 -299.09887695]
[69.72613525 -301.51977539]
[84.73204041 -302.13635254]
[99.70285034 -300.93966675]
[114.42024994 -297.94708252]
[128.66961670 -293.20233154]
[142.24316406 -286.77453613]
[154.94291687 -278.75747681]
[166.58370972 -269.26803589]
[176.99577332 -258.44461060]
[186.02726746 -246.44505310]
[193.54647827 -233.44433594]
[199.44377136 -219.63204956]
[203.63313293 -205.20960999]
[206.05348206 -190.38735962]
[206.66949463 -175.38142395]
[205.47222900 -160.41065979]
[202.47911072 -145.69335938]
[197.73381042 -131.44416809]
[191.30552673 -117.87088013]
[183.28797913 -105.17141724]
[173.79811096 -93.53097534]
[162.97430420 -83.11932373]
[150.97439575 -74.08827972]
[137.97340393 -66.56954956]
[124.16088867 -60.67277527]
[109.73829651 -56.48395538]
[94.91595459 -54.06416702]
[95.53177643 -39.07681274]
[96.14759827 -24.08945847]
[96.76342773 -9.10210514]
[97.84049988 5.85917521]
[99.37779236 20.78019142]
[111.05983734 29.94890404]
[112.83142853 45.05903625]
[103.13523102 57.25008011]
[104.67252350 72.17109680]
[106.20981598 87.09210968]
[114.24851990 98.53199005]
[108.71119690 111.37059784]
[110.24848938 126.29161072]
[111.78578186 141.21263123]
[114.55033875 144.74206543]
[115.87471008 148.58518982]
[115.84146118 152.23835754]
[114.69203949 155.27941895]
[112.78501892 157.41349792]
[113.09299469 172.41032410]
[113.40097046 187.40716553]
[113.70895386 202.40400696]
[127.15068817 207.20783997]
[138.11582947 216.30012512]
[145.29492188 228.56849670]
[147.83978271 242.52293396]
[145.46360779 256.47671509]
[138.47314453 268.75036621]
[127.72932434 277.87362671]
[114.54118347 282.76181030]
[114.54118347 297.76181030]
[114.54118347 312.76181030]
[114.54118347 327.76181030]
[114.54118347 342.76181030]
[114.54118347 357.76181030]
[114.54118347 372.76181030]
[114.54118347 387.76181030]
[114.54118347 402.76181030]
[114.54118347 417.76181030]
[114.54118347 432.76181030]
[129.15119934 436.50323486]
[142.37135315 443.76123047]
[153.37063599 454.07949829]
[161.45759583 466.80944824]
[166.12390137 481.15087891]
[167.07621765 496.20223999]
[164.25468445 511.01742554]
[157.83665466 524.66516113]
[148.22558594 536.28747559]
[136.02563477 545.15380859]
[122.00368500 550.70678711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[29 123]
[30 122]
[31 121]
[32 120]
[33 115]
[34 114]
[35 113]
[37 111]
[38 110]
[39 109]
[42 106]
[43 105]
[47 104]
[48 103]
[49 102]
[50 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
