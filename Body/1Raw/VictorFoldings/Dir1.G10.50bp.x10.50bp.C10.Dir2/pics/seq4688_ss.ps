%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACUCAUCAGGGGGGGGGGCAGCGCUAAGCUCGCACUGAUUUUUUACCUGAGUAGGCCUAGAAAUAAACxxxxxxxxxxUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACUAAACCCCCCCCCCCCCACACUCAACA\
) } def
/len { sequence length } bind def

/coor [
[82.70574951 388.60614014]
[69.78659821 380.84777832]
[59.00529861 370.31875610]
[50.94328308 357.58688354]
[46.03532410 343.33877563]
[44.54609680 328.34283447]
[46.55592346 313.40771484]
[51.95640564 299.33889771]
[60.45631027 286.89511108]
[71.59724426 276.74737549]
[84.77838898 269.44299316]
[99.28890991 265.37585449]
[98.67308807 250.38850403]
[98.05725861 235.40113831]
[97.44143677 220.41378784]
[96.82560730 205.42643738]
[96.20978546 190.43908691]
[95.59395599 175.45173645]
[94.97813416 160.46438599]
[94.36230469 145.47702026]
[93.74648285 130.48966980]
[83.39756012 126.32651520]
[75.18120575 118.78174591]
[70.15280151 108.82447815]
[68.95824432 97.73371124]
[71.75096893 86.93405151]
[78.17225647 77.81269836]
[70.53929138 64.90000153]
[62.90631866 51.98730087]
[55.27334976 39.07460403]
[47.64038086 26.16190529]
[40.00740814 13.24920750]
[32.11092758 0.49595061]
[23.95426178 -12.09248829]
[9.95666695 -19.46662521]
[9.52922916 -34.35509872]
[2.18992758 -39.89860153]
[1.33741403 -47.28679657]
[-6.55906868 -60.04005432]
[-13.78300476 -65.73307800]
[-14.48364449 -73.13722229]
[-22.11661530 -86.04991913]
[-29.74958420 -98.96261597]
[-37.38255310 -111.87531281]
[-46.54449081 -123.75213623]
[-57.09650421 -134.41304016]
[-67.64852142 -145.07395935]
[-78.20053864 -155.73486328]
[-89.59160614 -165.49414062]
[-101.74494171 -174.28598022]
[-113.89827728 -183.07781982]
[-130.25764465 -184.21936035]
[-137.20457458 -199.07440186]
[-127.59265900 -212.36134338]
[-111.30981445 -210.41174316]
[-105.10643005 -195.23115540]
[-92.95310211 -186.43931580]
[-80.79976654 -177.64747620]
[-83.65936279 -192.37237549]
[-77.46165466 -206.03210449]
[-64.49757385 -213.57748413]
[-49.55917740 -212.21940613]
[-38.16831589 -202.45986938]
[-34.53552628 -187.90643311]
[-40.00362778 -173.93861389]
[-52.55139542 -165.71951294]
[-67.53962708 -166.28688049]
[-56.98760986 -155.62597656]
[-46.43559647 -144.96505737]
[-35.88358307 -134.30415344]
[-38.28436661 -149.11077881]
[-34.13713837 -163.52606201]
[-24.23502159 -174.79318237]
[-10.47172546 -180.75738525]
[4.52061367 -180.27806091]
[17.87481880 -173.44686890]
[27.03698921 -161.57022095]
[30.25492859 -146.91946411]
[26.91322517 -132.29643250]
[17.65095901 -120.49768829]
[4.23947048 -113.77964783]
[-10.75638580 -113.42710876]
[-24.46985626 -119.50828552]
[-16.83688736 -106.59558868]
[-9.20391655 -93.68288422]
[-1.57094681 -80.77018738]
[6.19418859 -67.93653870]
[14.09067059 -55.18327713]
[22.11766815 -42.51176071]
[35.53184509 -36.03803635]
[36.54270172 -20.24915504]
[44.69936752 -7.66071510]
[49.15768051 -5.79720640]
[52.46409225 -1.07963014]
[52.92010880 5.61623764]
[60.55307770 18.52893639]
[68.18605042 31.44163322]
[75.81901550 44.35433197]
[83.45198822 57.26702881]
[91.08496094 70.17972565]
[115.00547791 72.73166656]
[129.96194458 91.57332611]
[144.95481873 91.11139679]
[158.51017761 82.95278931]
[171.46968079 90.29448700]
[186.46257019 89.83255768]
[191.47929382 75.50786591]
[201.33489990 63.96527100]
[214.69650269 56.76582336]
[229.75704956 54.88319016]
[244.47973633 58.57197571]
[256.87341309 67.33330536]
[265.26199341 79.98228455]
[268.51092529 94.80823517]
[266.18084717 109.80607605]
[258.58688354 122.94746399]
[246.75605774 132.45513916]
[232.28837585 137.04327393]
[217.14050293 136.09135437]
[203.36103821 129.72811890]
[192.81355286 118.81413269]
[186.92449951 104.82544708]
[171.93161011 105.28736877]
[159.44865417 113.41294098]
[145.41674805 106.10428619]
[130.42385864 106.56620789]
[127.59256744 114.40058899]
[122.78470612 121.20339203]
[116.34468842 126.48731232]
[108.73383331 129.87384033]
[109.34966278 144.86120605]
[109.96548462 159.84855652]
[110.58131409 174.83590698]
[111.19713593 189.82325745]
[111.81296539 204.81060791]
[112.42878723 219.79797363]
[113.04461670 234.78532410]
[113.66043854 249.77267456]
[114.27626038 264.76004028]
[129.07153320 267.62298584]
[142.80751038 273.82138062]
[154.74340820 283.02087402]
[164.23556519 294.72540283]
[170.77206421 308.30371094]
[174.00039673 323.02359009]
[173.74647522 338.09118652]
[170.02398682 352.69390869]
[163.03367615 366.04428101]
[153.15254211 377.42230225]
[140.91343689 386.21441650]
[126.97640991 391.94644165]
[112.09307098 394.30926514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[32 95]
[33 92]
[34 91]
[36 89]
[38 88]
[39 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 70]
[46 69]
[47 68]
[48 67]
[49 58]
[50 57]
[51 56]
[102 126]
[103 125]
[105 123]
[106 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
