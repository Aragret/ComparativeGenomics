%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAACCUAGGGGGGGGGGUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUxxxxxxxxxxCUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACAGCCCUAGACCUCCCCCCCCCCCAACUACCUA\
) } def
/len { sequence length } bind def

/coor [
[5.00905418 207.46879578]
[-3.53812718 199.26066589]
[-11.37856865 190.37498474]
[-18.45875168 180.87240601]
[-24.73034859 170.81781006]
[-30.15055084 160.27981567]
[-34.68235779 149.33036804]
[-38.29483795 138.04418945]
[-40.96333313 126.49832153]
[-42.66962814 114.77158356]
[-43.40207672 102.94401550]
[-43.15567780 91.09635162]
[-58.05757904 89.38366699]
[-72.95948029 87.67097473]
[-87.86138153 85.95828247]
[-102.76328278 84.24559784]
[-117.66519165 82.53290558]
[-132.56709290 80.82021332]
[-147.46899414 79.10752869]
[-162.37089539 77.39483643]
[-177.27279663 75.68214417]
[-170.46347046 89.04751587]
[-176.47262573 102.79123688]
[-190.90806580 106.86777496]
[-203.21864319 98.29749298]
[-204.40632629 83.34458923]
[-193.60363770 72.93862915]
[-208.24714661 69.68780518]
[-222.89064026 66.43697357]
[-237.53414917 63.18614960]
[-244.09797668 76.75128174]
[-253.61367798 88.43666077]
[-265.56808472 97.61210632]
[-279.31652832 103.78279877]
[-294.11752319 106.61595917]
[-309.17291260 105.95880127]
[-323.67077637 101.84676361]
[-336.82925415 94.50160217]
[-347.93872070 84.31942749]
[-356.40005493 71.84936523]
[-361.75695801 57.76390076]
[-363.72052002 42.82264709]
[-362.18487549 27.83136559]
[-357.23284912 13.59851837]
[-349.13143921 0.89166570]
[-338.31759644 -9.60392857]
[-325.37448120 -17.32225037]
[-311.00009155 -21.84706116]
[-295.96963501 -22.93434143]
[-281.09368896 -20.52545738]
[-267.17446899 -14.75031567]
[-254.96266174 -5.92036343]
[-245.11679077 5.48821115]
[-238.16784668 18.86015892]
[-234.49058533 33.47434616]
[-234.28332520 48.54264832]
[-219.63981628 51.79347610]
[-204.99632263 55.04430008]
[-190.35281372 58.29512787]
[-175.56010437 60.78024673]
[-160.65820312 62.49293518]
[-145.75630188 64.20562744]
[-130.85440063 65.91831207]
[-115.95249939 67.63100433]
[-101.05059814 69.34369659]
[-86.14869690 71.05638123]
[-71.24678802 72.76907349]
[-56.34489059 74.48176575]
[-41.44298553 76.19445038]
[-37.09084702 57.82272720]
[-30.36336136 40.18180084]
[-21.37709427 23.57733536]
[-10.28774834 8.29702759]
[2.71253085 -5.39435911]
[17.39849091 -17.25959778]
[33.51567459 -27.09310341]
[50.78481674 -34.72449112]
[68.90670013 -40.02153015]
[87.56732941 -42.89244843]
[106.44338226 -43.28749084]
[125.20778656 -41.19982147]
[143.53543091 -36.66561127]
[161.10873413 -29.76342010]
[177.62321472 -20.61284447]
[186.38943481 -32.78467941]
[195.15563965 -44.95651627]
[203.92184448 -57.12835312]
[212.68804932 -69.30019379]
[213.79510498 -85.66192627]
[228.63546753 -92.64015198]
[241.94264221 -83.05626678]
[240.02735901 -66.76934814]
[224.85989380 -60.53398514]
[216.09367371 -48.36214828]
[207.32746887 -36.19031143]
[198.56126404 -24.01847458]
[189.79505920 -11.84663677]
[202.23280334 -0.60456103]
[213.27375793 12.01205158]
[222.76707458 25.83082199]
[230.58306885 40.66294861]
[236.61492920 56.30578232]
[240.78024292 72.54560089]
[243.02212524 89.16052246]
[243.30992126 105.92354584]
[258.24423218 107.32584381]
[273.17852783 108.72814941]
[288.11285400 110.13045502]
[303.04714966 111.53276062]
[310.88198853 98.43397522]
[323.62902832 90.03896332]
[338.75729370 88.01455688]
[353.26306152 92.76269531]
[364.26623535 103.34063721]
[369.58212280 117.64813232]
[368.15521240 132.84440613]
[360.26885986 145.91223145]
[347.48886108 154.25697327]
[332.35275269 156.22180176]
[317.86578369 151.41656494]
[306.90432739 140.79537964]
[301.64483643 126.46706390]
[286.71054077 125.06476593]
[271.77624512 123.66246033]
[256.84191895 122.26015472]
[241.90762329 120.85784912]
[239.70150757 132.50091553]
[236.54182434 143.92213440]
[232.45010376 155.04353333]
[227.45429993 165.78923035]
[221.58851624 176.08584595]
[214.89277649 185.86311340]
[207.41278076 195.05427551]
[199.19961548 203.59661865]
[190.30931091 211.43182373]
[180.80256653 218.50640869]
[170.74427795 224.77207947]
[160.20309448 230.18606567]
[149.25096130 234.71141052]
[137.96266174 238.31724548]
[126.41522217 240.97892761]
[114.68748474 242.67831421]
[102.85948181 243.40379333]
[91.01197052 243.15040588]
[79.22580719 241.91989136]
[67.58144379 239.72064209]
[56.15836334 236.56768799]
[45.03454590 232.48252869]
[34.28591537 227.49307251]
[23.98584175 221.63334656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 69]
[13 68]
[14 67]
[15 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[27 59]
[28 58]
[29 57]
[30 56]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
