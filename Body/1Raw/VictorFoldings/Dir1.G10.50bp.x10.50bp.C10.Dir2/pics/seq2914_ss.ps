%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACCUCCGGGGGGGGGGGAGCAGUACAUGCUAAGACUUCACCAGUCAAAGCGAACUACUAUACUCAAxxxxxxxxxxUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCCCCCCCCCCCAUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[88.83116913 417.44326782]
[74.98522949 411.42724609]
[63.27656555 401.89782715]
[54.57404327 389.56216431]
[49.52344131 375.33563232]
[48.49954987 360.27395630]
[51.57834625 345.49481201]
[58.53136826 332.09487915]
[68.84265137 321.06854248]
[81.74703217 313.23403931]
[96.28691864 309.17272949]
[96.28691864 294.17272949]
[96.28691864 279.17272949]
[96.28691864 264.17272949]
[96.28691864 249.17271423]
[96.28691864 234.17271423]
[96.28691864 219.17271423]
[96.28691864 204.17271423]
[96.28691864 189.17271423]
[96.28691864 174.17271423]
[96.28691864 159.17271423]
[96.28691864 144.17271423]
[95.50708008 129.19300842]
[93.94949341 114.27409363]
[84.08377075 102.97509003]
[69.51107025 99.42032623]
[54.93836594 95.86556244]
[40.36566544 92.31080627]
[25.62164116 101.66767883]
[8.99151421 97.57830811]
[0.60510886 83.03437042]
[-14.03839207 79.78353882]
[-28.68189430 76.53271484]
[-43.32539368 73.28189087]
[-56.55501175 81.50473022]
[-71.35929108 77.99932861]
[-79.11698151 65.33623505]
[-93.76048279 62.08541107]
[-108.40398407 58.83458328]
[-123.04748535 55.58375931]
[-137.29830933 62.95218658]
[-151.88500977 56.27331543]
[-155.61795044 40.67059708]
[-145.63351440 28.11310577]
[-129.59091187 28.23387337]
[-119.79666138 40.94025803]
[-105.15316010 44.19108200]
[-90.50965881 47.44190979]
[-75.86615753 50.69273376]
[-63.47891235 42.50177383]
[-48.58201218 45.58997345]
[-40.07456970 58.63838959]
[-25.43106842 61.88921738]
[-10.78756714 65.14003754]
[3.85593462 68.39086914]
[13.68440819 60.00052261]
[26.74754524 58.80520630]
[38.27322769 65.46753693]
[43.92042542 77.73809814]
[58.49312973 81.29286194]
[73.06583405 84.84762573]
[87.63853455 88.40238953]
[76.55403137 78.29626465]
[63.24835205 71.37102509]
[52.77603912 60.63180923]
[46.18777466 47.15610123]
[44.14456558 32.29590607]
[46.85140991 17.54216194]
[54.03672028 4.37510872]
[64.97959900 -5.88419819]
[78.58214569 -12.20644093]
[93.47961426 -13.95730686]
[108.17733002 -10.96113110]
[121.20067596 -3.51852179]
[131.24301147 7.62380362]
[137.29679871 21.34793282]
[138.75465393 36.27692032]
[135.47029114 50.91293716]
[127.77326202 63.78755188]
[116.43766022 73.60788727]
[108.45629883 86.30820465]
[121.54945374 78.98909760]
[134.64260864 71.66999054]
[147.73576355 64.35088348]
[160.82891846 57.03178024]
[172.22993469 47.28412628]
[181.49488831 35.48748779]
[190.75984192 23.69084740]
[200.02478027 11.89420795]
[201.81150818 -4.40731573]
[216.92930603 -10.76216316]
[229.82629395 -0.63301182]
[227.23515320 15.56013584]
[211.82142639 21.15915680]
[202.55647278 32.95579910]
[193.29153442 44.75243759]
[184.02658081 56.54907608]
[198.08930969 51.32991028]
[213.06072998 50.40439987]
[227.65921021 53.85177612]
[240.63504028 61.37692261]
[250.87741089 72.33564758]
[257.50955200 85.78982544]
[259.96368408 100.58769989]
[258.02972412 115.46250916]
[251.87324524 129.14086914]
[242.02125549 140.45185852]
[229.31715393 148.42718506]
[214.84848022 152.38412476]
[199.85382080 151.98393250]
[185.61680603 147.26087952]
[173.35618591 138.61926270]
[164.12155151 126.79888153]
[158.70343018 112.81159973]
[157.56565857 97.85481262]
[160.80560303 83.20890808]
[168.14802551 70.12493134]
[155.05487061 77.44403839]
[141.96171570 84.76314545]
[128.86856079 92.08225250]
[115.77540588 99.40135956]
[108.86840820 112.71651459]
[110.42598724 127.63542175]
[121.99797821 118.09136963]
[136.71737671 120.97914886]
[143.82550049 134.18803406]
[138.12687683 148.06340027]
[123.78674316 152.46347046]
[111.28691864 144.17271423]
[111.28691864 159.17271423]
[111.28691864 174.17271423]
[111.28691864 189.17271423]
[111.28691864 204.17271423]
[111.28691864 219.17271423]
[111.28691864 234.17271423]
[111.28691864 249.17271423]
[111.28691864 264.17272949]
[111.28691864 279.17272949]
[111.28691864 294.17272949]
[111.28691864 309.17272949]
[125.82680511 313.23403931]
[138.73118591 321.06854248]
[149.04248047 332.09487915]
[155.99549866 345.49481201]
[159.07429504 360.27395630]
[158.05039978 375.33563232]
[152.99980164 389.56216431]
[144.29727173 401.89782715]
[132.58860779 411.42724609]
[118.74267578 417.44326782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 123]
[24 122]
[25 62]
[26 61]
[27 60]
[28 59]
[31 55]
[32 54]
[33 53]
[34 52]
[37 49]
[38 48]
[39 47]
[40 46]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 97]
[87 96]
[88 95]
[89 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
