%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCACUUUGGGGGGGGGGCCACACAGACAUCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCxxxxxxxxxxUAAAAAGAGGCCUAACCCCUGUCUUUAGAUUUACAGUCCAAUGCUUCACUCCCCCCCCCCCAGCCAUUUU\
) } def
/len { sequence length } bind def

/coor [
[-27.57021904 207.42658997]
[-34.63494492 198.42796326]
[-41.06612778 188.96617126]
[-46.83350372 179.08573914]
[-51.90993500 168.83316040]
[-56.27153397 158.25668335]
[-59.89777374 147.40606689]
[-62.77159500 136.33236694]
[-64.87947083 125.08770752]
[-66.21148682 113.72499847]
[-66.76136780 102.29769897]
[-81.75406647 101.82965088]
[-96.74675751 101.36161041]
[-111.74351501 101.04955292]
[-126.74269867 100.89351654]
[-141.74188232 100.73748016]
[-156.74107361 100.58144379]
[-171.74026489 100.42540741]
[-186.73945618 100.26937103]
[-201.73864746 100.11333466]
[-204.43099976 114.90722656]
[-209.58497620 129.03324890]
[-217.05226135 142.08497620]
[-226.61802673 153.68688965]
[-238.00703430 163.50515747]
[-250.89161682 171.25729370]
[-264.90103149 176.72027588]
[-279.63223267 179.73689270]
[-294.66134644 180.22038269]
[-309.55596924 178.15679932]
[-323.88754272 173.60554504]
[-337.24371338 166.69755554]
[-349.24023438 157.63159180]
[-359.53189087 146.66850281]
[-367.82263184 134.12370300]
[-373.87387085 120.35814667]
[-377.51150513 105.76788330]
[-378.63085938 90.77272034]
[-377.19976807 75.80408478]
[-373.25939941 61.29266357]
[-366.92309570 47.65597153]
[-358.37319946 35.28636932]
[-347.85568237 24.53974915]
[-335.67315674 15.72531891]
[-322.17614746 9.09668350]
[-307.75299072 4.84456301]
[-292.81866455 3.09129977]
[-277.80285645 3.88733840]
[-263.13760376 7.20977497]
[-249.24487305 12.96301651]
[-236.52436829 20.98153114]
[-225.34207153 31.03461075]
[-216.01974487 42.83300781]
[-208.82559204 56.03725433]
[-203.96661377 70.26744843]
[-201.58261108 85.11415100]
[-186.58341980 85.27018738]
[-171.58422852 85.42622375]
[-156.58503723 85.58226013]
[-141.58584595 85.73829651]
[-126.58666229 85.89433289]
[-111.58747864 86.05036926]
[-104.82254791 82.95499420]
[-96.27871704 86.36891174]
[-81.28601837 86.83695984]
[-66.29332733 87.30500031]
[-63.39266205 66.57141113]
[-57.91730499 46.36458588]
[-49.95352936 27.00292969]
[-39.62682343 8.79154110]
[-27.09991837 -7.98260784]
[-12.57020664 -23.05519676]
[3.73335576 -36.18871689]
[21.55386162 -47.17620850]
[40.61050034 -55.84453964]
[60.60298538 -62.05711365]
[81.21627808 -65.71603394]
[102.12555695 -66.76364899]
[123.00134277 -65.18344879]
[143.51467896 -61.00032806]
[163.34231567 -54.28021240]
[182.17182922 -45.12898636]
[199.70649719 -33.69086075]
[215.67002869 -20.14606857]
[226.54885864 -30.47327232]
[237.42767334 -40.80047607]
[248.30650330 -51.12768173]
[259.18533325 -61.45488739]
[269.62515259 -72.22569275]
[279.60787964 -83.42146301]
[280.12966919 -99.45602417]
[293.07696533 -108.92954254]
[308.51766968 -104.57473755]
[314.60699463 -89.73224640]
[306.67376709 -75.78795624]
[290.80361938 -73.43873596]
[280.82089233 -62.24296951]
[280.88458252 -59.37883377]
[279.78024292 -56.31707001]
[277.42669678 -53.51659393]
[273.91543579 -51.45695877]
[269.51254272 -50.57606125]
[258.63369751 -40.24885941]
[247.75488281 -29.92165184]
[236.87605286 -19.59444809]
[225.99723816 -9.26724243]
[233.19184875 -0.37212956]
[239.75971985 8.99529839]
[245.66992188 18.79096222]
[250.89465332 28.96876526]
[255.40933228 39.48081589]
[259.19271851 50.27764511]
[262.22698975 61.30845261]
[264.49789429 72.52133179]
[265.99472046 83.86351013]
[266.71044922 95.28162384]
[266.64166260 106.72193909]
[265.78875732 118.13062286]
[264.15570068 129.45399475]
[261.75018311 140.63876343]
[258.58352661 151.63229370]
[254.67065430 162.38287354]
[250.02993774 172.83988953]
[244.68324280 182.95416260]
[238.65571594 192.67807007]
[231.97572327 201.96588135]
[224.67471313 210.77386475]
[216.78701782 219.06059265]
[208.34977722 226.78706360]
[199.40266418 233.91693115]
[189.98780823 240.41662598]
[180.14950562 246.25556946]
[169.93403625 251.40628052]
[159.38949585 255.84454346]
[148.56549072 259.54943848]
[137.51293945 262.50357056]
[126.28388214 264.69302368]
[114.93113708 266.10748291]
[103.50813293 266.74029541]
[92.06861115 266.58850098]
[80.66641998 265.65280151]
[69.35520935 263.93759155]
[58.18819427 261.45092773]
[47.21793365 258.20455933]
[36.49604416 254.21374512]
[26.07298279 249.49725342]
[15.99779415 244.07728577]
[6.31788969 237.97932434]
[-2.92118073 231.23210144]
[-11.67594147 223.86734009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 66]
[12 65]
[13 64]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 97]
[90 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
