%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCAAUUGGAGGGGGGGGGGCCAAUCUAUCACCCUAUAGAAGAACUAAUGUUAGUAUAAGUAACAUGAAAxxxxxxxxxxCCCUGGCCGUACGCCUAACCGCUAACAUUACUGCAGGCCACCUACUCAUGCCCCCCCCCCCACCUAAUUGGA\
) } def
/len { sequence length } bind def

/coor [
[88.47903442 414.47781372]
[74.31842804 409.32281494]
[61.72868347 401.04061890]
[51.38874435 390.07785034]
[43.85623550 377.02572632]
[39.53736877 362.58813477]
[38.66506195 347.54367065]
[41.28635025 332.70367432]
[47.25987625 318.86843872]
[56.26349640 306.78408813]
[67.81165314 297.10229492]
[81.28157043 290.34521484]
[95.94683075 286.87725830]
[95.94683075 271.87725830]
[95.94683075 256.87725830]
[95.94683075 241.87724304]
[95.94683075 226.87724304]
[95.94683075 211.87724304]
[95.94683075 196.87724304]
[95.94683075 181.87724304]
[95.94683075 166.87724304]
[95.94683075 151.87724304]
[95.94683075 136.87724304]
[82.64427948 131.03186035]
[73.13878632 120.86329651]
[68.62239838 108.34378052]
[69.38079071 95.66714478]
[54.60284805 98.23858643]
[39.82490158 100.81003571]
[25.04695702 103.38148499]
[10.26901245 105.95293427]
[1.38103807 119.02119446]
[-14.15977383 121.89499664]
[-27.13333702 112.86935425]
[-29.84266472 97.29902649]
[-20.68036270 84.42160797]
[-5.08226013 81.87705231]
[7.69756317 91.17498779]
[22.47550774 88.60354614]
[37.25345230 86.03209686]
[52.03139877 83.46064758]
[66.80934143 80.88919830]
[76.69476318 69.60742188]
[77.30265045 54.61974716]
[74.81613159 49.89641190]
[74.46617126 45.17013931]
[75.88626099 41.26863480]
[78.43048096 38.74783325]
[79.94800568 23.82479286]
[81.46553040 8.90175247]
[82.98305511 -6.02128696]
[84.50057983 -20.94432640]
[86.01810455 -35.86736679]
[87.53562927 -50.79040527]
[89.05315399 -65.71344757]
[90.57067871 -80.63648987]
[92.08820343 -95.55952454]
[74.93569183 -106.51714325]
[66.87418365 -126.11970520]
[71.72162628 -147.61723328]
[88.65953827 -162.99786377]
[86.23798370 -177.80111694]
[71.22329712 -179.29161072]
[57.10633087 -184.61830139]
[44.84960938 -193.41802979]
[35.28881454 -205.09080505]
[29.07581329 -218.84074402]
[26.63422203 -233.73037720]
[28.13051033 -248.74449158]
[33.46266174 -262.85940552]
[42.26712036 -275.11273193]
[53.94358063 -284.66900635]
[67.69592285 -290.87670898]
[82.58649445 -293.31253052]
[97.60002899 -291.81045532]
[111.71287537 -286.47283936]
[123.96279907 -277.66366577]
[133.51457214 -265.98352051]
[139.71696472 -252.22877502]
[142.14704895 -237.33726501]
[140.63916016 -222.32431030]
[135.29611206 -208.21353149]
[126.48220062 -195.96701050]
[114.79836273 -186.41973877]
[101.04122925 -180.22267151]
[103.46278381 -165.41941833]
[118.12438202 -162.25120544]
[126.44213104 -174.73379517]
[134.75987244 -187.21638489]
[133.03266907 -203.16618347]
[144.52680969 -214.35833740]
[160.42498779 -212.20716858]
[168.53147888 -198.36288452]
[162.62767029 -183.44561768]
[147.24246216 -178.89863586]
[138.92471313 -166.41604614]
[130.60697937 -153.93345642]
[137.62225342 -141.71734619]
[139.68229675 -128.12864685]
[136.75187683 -115.05216980]
[129.47126770 -104.21259308]
[119.03694153 -96.94713593]
[107.01124573 -94.04199982]
[105.49372101 -79.11896515]
[103.97619629 -64.19592285]
[102.45867157 -49.27288055]
[100.94114685 -34.34984207]
[99.42362213 -19.42680168]
[97.90609741 -4.50376225]
[96.38857269 10.41927719]
[94.87104797 25.34231758]
[93.35352325 40.26535797]
[92.29032898 55.22763062]
[91.68244171 70.21530914]
[111.91920471 69.24638367]
[129.70750427 81.41683960]
[136.97135925 103.07862091]
[151.69415283 105.94905090]
[166.41694641 108.81947327]
[183.12040710 105.91587067]
[190.53451538 121.16275787]
[177.93591309 132.50787354]
[163.54652405 123.54226685]
[148.82373047 120.67184448]
[134.10093689 117.80141449]
[128.31240845 122.57037354]
[142.36105347 127.82735443]
[144.83277893 142.62229919]
[133.25590515 152.16043091]
[119.20716858 146.90371704]
[116.73535919 132.10829163]
[110.94683075 136.87724304]
[110.94683075 151.87724304]
[110.94683075 166.87724304]
[110.94683075 181.87724304]
[110.94683075 196.87724304]
[110.94683075 211.87724304]
[110.94683075 226.87724304]
[110.94683075 241.87724304]
[110.94683075 256.87725830]
[110.94683075 271.87725830]
[110.94683075 286.87725830]
[125.61209106 290.34521484]
[139.08200073 297.10229492]
[150.63015747 306.78408813]
[159.63377380 318.86843872]
[165.60729980 332.70367432]
[168.22859192 347.54367065]
[167.35629272 362.58813477]
[163.03742981 377.02572632]
[155.50491333 390.07785034]
[145.16497803 401.04061890]
[132.57522583 409.32281494]
[118.41462708 414.47781372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[43 114]
[44 113]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[61 86]
[62 85]
[87 97]
[88 96]
[89 95]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
