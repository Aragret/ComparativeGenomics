%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCUCCUUAGGGGGGGGGGAUUAUAACAUUCACAGCCACAGAACUAAUCAUAUUUUAUAUCUUCUUCGAxxxxxxxxxxCCCACCCCAGUCUCAGCCCUACUCCACUCAAGCACUAUAGUUGUAGCAGGCCCCCCCCCCAAUCUUCUUA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 355.47406006]
[71.19830322 349.45803833]
[59.48964310 339.92861938]
[50.78712082 327.59295654]
[45.73651886 313.36642456]
[44.71262741 298.30474854]
[47.79142761 283.52557373]
[54.74444962 270.12564087]
[65.05573273 259.09933472]
[77.96011353 251.26481628]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.03195953 72.80380249]
[91.09632874 57.83301163]
[90.16069794 42.86222076]
[89.22507477 27.89142990]
[88.28944397 12.92063808]
[87.35381317 -2.05015326]
[72.34825134 -2.12717271]
[57.38211823 -3.21704268]
[42.52370453 -5.31479025]
[27.84081078 -8.41084385]
[13.40042782 -12.49107647]
[-0.73155355 -17.53687096]
[-14.49065304 -23.52520370]
[-27.81408882 -30.42875290]
[-40.64107132 -38.21601868]
[-52.91307068 -46.85146713]
[-64.57408905 -56.29569626]
[-75.57093048 -66.50561523]
[-85.85340881 -77.43463898]
[-95.37461090 -89.03290558]
[-104.09109497 -101.24748230]
[-111.96308136 -114.02264404]
[-118.95465851 -127.30009460]
[-125.03392792 -141.01925659]
[-130.17314148 -155.11753845]
[-134.34886169 -169.53059387]
[-137.54202271 -184.19267273]
[-139.73806763 -199.03688049]
[-140.92695618 -213.99546814]
[-141.10328674 -229.00019836]
[-140.26625061 -243.98260498]
[-138.41966248 -258.87429810]
[-135.57194519 -273.60739136]
[-131.73608398 -288.11459351]
[-126.92960358 -302.32974243]
[-121.17441559 -316.18798828]
[-114.49679565 -329.62606812]
[-106.92720032 -342.58270264]
[-98.50016785 -354.99874878]
[-89.25415802 -366.81756592]
[-79.23135376 -377.98519897]
[-68.47748566 -388.45074463]
[-57.04162598 -398.16638184]
[-44.97594833 -407.08786011]
[-32.33551407 -415.17440796]
[-19.17798996 -422.38916016]
[-5.56341791 -428.69915771]
[8.44608402 -434.07568359]
[22.78659248 -438.49414062]
[37.39267349 -441.93438721]
[52.19768524 -444.38073730]
[67.13407135 -445.82199097]
[82.13368225 -446.25161743]
[97.12808228 -445.66766357]
[112.04884338 -444.07275391]
[126.82789612 -441.47418213]
[141.39779663 -437.88378906]
[155.69207764 -433.31799316]
[169.64550781 -427.79760742]
[183.19442749 -421.34780884]
[196.27699280 -413.99801636]
[208.83354187 -405.78182983]
[220.80677795 -396.73666382]
[232.14204407 -386.90383911]
[242.78764343 -376.32818604]
[252.69497681 -365.05798340]
[261.81887817 -353.14465332]
[270.11767578 -340.64254761]
[277.55352783 -327.60870361]
[284.09252930 -314.10260010]
[289.70477295 -300.18588257]
[294.36471558 -285.92199707]
[298.05108643 -271.37609863]
[300.74700928 -256.61450195]
[302.44027710 -241.70455933]
[303.12307739 -226.71434021]
[302.79232788 -211.71221924]
[301.44955444 -196.76666260]
[299.10086060 -181.94584656]
[295.75698853 -167.31739807]
[291.43316650 -152.94807434]
[286.14913940 -138.90342712]
[279.92901611 -125.24755859]
[272.80114746 -112.04275513]
[264.79812622 -99.34928131]
[255.95639038 -87.22505951]
[246.31632996 -75.72539520]
[235.92192078 -64.90276337]
[224.82060242 -54.80655670]
[213.06300354 -45.48283005]
[200.70278931 -36.97413254]
[187.79634094 -29.31928444]
[174.40255737 -22.55321503]
[160.58256531 -16.70679474]
[146.39941406 -11.80670261]
[131.91780090 -7.87529373]
[117.20381927 -4.93050814]
[102.32460785 -2.98578167]
[103.26023865 11.98501015]
[104.19586182 26.95580101]
[105.13149261 41.92659378]
[106.06712341 56.89738464]
[107.00274658 71.86817932]
[109.45264435 74.48838806]
[110.72158813 78.44963074]
[110.18239594 83.16785431]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[122.03988647 251.26481628]
[134.94427490 259.09933472]
[145.25555420 270.12564087]
[152.20857239 283.52557373]
[155.28736877 298.30474854]
[154.26348877 313.36642456]
[149.21287537 327.59295654]
[140.51036072 339.92861938]
[128.80169678 349.45803833]
[114.95575714 355.47406006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 129]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
