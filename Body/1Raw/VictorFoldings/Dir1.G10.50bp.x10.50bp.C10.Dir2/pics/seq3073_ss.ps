%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUAAGGCGGGGGGGGGGCUACUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAxxxxxxxxxxCAGCUAAGCACCCUAAUCAACUGGCUUCAAUCUACUUCUCCCGCCGCCGGCCCCCCCCCCGAAAAAAGGC\
) } def
/len { sequence length } bind def

/coor [
[101.28258514 395.48239136]
[87.43664551 389.46636963]
[75.72798157 379.93695068]
[67.02545929 367.60128784]
[61.97485733 353.37475586]
[60.95096588 338.31307983]
[64.02976227 323.53393555]
[70.98278809 310.13400269]
[81.29406738 299.10766602]
[94.19844818 291.27316284]
[108.73834229 287.21185303]
[108.73834229 272.21185303]
[108.73834229 257.21185303]
[108.73834229 242.21185303]
[108.73834229 227.21185303]
[108.73834229 212.21185303]
[108.73834229 197.21185303]
[108.73834229 182.21185303]
[108.73834229 167.21185303]
[108.73834229 152.21185303]
[108.73834229 137.21185303]
[95.23918152 138.54080200]
[81.90997314 135.05041504]
[70.44339752 127.03060150]
[56.54084015 132.66255188]
[42.63828278 138.29450989]
[32.98609161 151.55224609]
[16.70923805 149.55322266]
[10.55195332 134.35388184]
[20.84832382 121.59000397]
[37.00632858 124.39196014]
[50.90888214 118.76000214]
[64.81143951 113.12804413]
[62.48033524 98.31028748]
[47.52008438 97.21897888]
[37.61350250 109.16213989]
[22.57059479 112.96879578]
[8.17567062 107.17519379]
[-0.03612805 94.00910187]
[1.09280181 78.53314972]
[11.12836456 66.69815063]
[26.21167946 63.05491257]
[40.54290771 69.00432587]
[48.61139679 82.25872803]
[63.57164383 83.35003662]
[68.11814117 78.02394867]
[73.37354279 73.74874878]
[79.11540985 70.60324097]
[85.11636353 68.62173462]
[91.15265656 67.79491425]
[90.52867889 52.80789566]
[89.90470123 37.82088089]
[89.28072357 22.83386421]
[76.57525635 19.65504837]
[65.14913177 13.28148651]
[55.78858948 4.15984631]
[49.13563919 -7.07438612]
[45.64400101 -19.64117622]
[45.54818726 -32.67010498]
[48.84774399 -45.26065063]
[55.30779266 -56.54443741]
[64.47573090 -65.74511719]
[75.71292114 -72.23179626]
[88.23919678 -75.56228638]
[88.55125427 -90.55903625]
[88.86331177 -105.55579376]
[89.17536926 -120.55254364]
[89.48741913 -135.54930115]
[89.79947662 -150.54605103]
[76.00113678 -156.99008179]
[66.02164459 -168.49354553]
[61.59002686 -183.06340027]
[63.47407150 -198.17532349]
[71.34736633 -211.21109009]
[83.84580994 -219.91217041]
[98.80397797 -222.77104187]
[113.63027191 -219.29240417]
[125.75594330 -210.07894897]
[133.08015442 -196.72694397]
[134.33393860 -181.54972839]
[129.30006409 -167.17683411]
[118.85069275 -156.09846497]
[104.79623413 -150.23399353]
[104.48417664 -135.23724365]
[104.17211914 -120.24048615]
[103.86006165 -105.24373627]
[103.54800415 -90.24697876]
[103.23595428 -75.25022888]
[119.26679993 -69.52622223]
[132.41526794 -58.67705536]
[141.10406494 -43.98260498]
[144.28355408 -27.18530083]
[141.55851746 -10.28350830]
[133.23724365 4.70620537]
[120.29664612 15.98967648]
[104.26774597 22.20988655]
[104.89172363 37.19690323]
[105.51569366 52.18391800]
[106.13967133 67.17093658]
[123.98840332 74.50418091]
[135.51499939 91.09062958]
[136.23196411 112.17888641]
[151.16625977 113.58119202]
[166.10057068 114.98349762]
[181.03488159 116.38580322]
[186.61410522 102.34838867]
[195.92321777 90.45229340]
[208.20756531 81.66187286]
[222.47131348 76.68972778]
[237.55816650 75.93892670]
[252.24508667 79.47034454]
[265.34149170 86.99768829]
[275.78570557 97.91075897]
[282.73104858 111.32489014]
[285.61450195 126.15264130]
[284.20236206 141.19200134]
[278.60900879 155.22380066]
[269.28796387 167.11054993]
[256.99478149 175.88862610]
[242.72605896 180.84643555]
[227.63845825 181.58207703]
[212.95509338 178.03590393]
[199.86625671 170.49540710]
[189.43301392 159.57185364]
[182.50114441 146.15075684]
[179.63258362 131.32011414]
[164.69827271 129.91780090]
[149.76396179 128.51550293]
[134.82965088 127.11319733]
[123.73834229 137.21185303]
[123.73834229 152.21185303]
[123.73834229 167.21185303]
[123.73834229 182.21185303]
[123.73834229 197.21185303]
[123.73834229 212.21185303]
[123.73834229 227.21185303]
[123.73834229 242.21185303]
[123.73834229 257.21185303]
[123.73834229 272.21185303]
[123.73834229 287.21185303]
[138.27822876 291.27316284]
[151.18260193 299.10766602]
[161.49389648 310.13400269]
[168.44691467 323.53393555]
[171.52571106 338.31307983]
[170.50181580 353.37475586]
[165.45121765 367.60128784]
[156.74868774 379.93695068]
[145.04003906 389.46636963]
[131.19409180 395.48239136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 33]
[25 32]
[26 31]
[34 45]
[35 44]
[50 99]
[51 98]
[52 97]
[53 96]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[102 129]
[103 128]
[104 127]
[105 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
