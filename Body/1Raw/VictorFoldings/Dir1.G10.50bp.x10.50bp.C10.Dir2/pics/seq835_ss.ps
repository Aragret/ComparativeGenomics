%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAGUUUAGGGGGGGGGGUGUAGCUUACCUCCUCAAAGCAAUACACUGAAAAUGUUUAGACGGGCUCAxxxxxxxxxxCUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCCCCCCCCCCCACAGCUUA\
) } def
/len { sequence length } bind def

/coor [
[85.26462555 355.44970703]
[72.04442596 348.17721558]
[61.15762329 337.73022461]
[53.34649277 324.82098389]
[49.14361191 310.32965088]
[48.83554077 295.24432373]
[52.44328308 280.59350586]
[59.72085571 267.37609863]
[70.17206573 256.49334717]
[83.08432770 248.68719482]
[97.57726288 244.48989868]
[97.26520538 229.49314880]
[96.95314789 214.49639893]
[96.64109039 199.49964905]
[96.32903290 184.50288391]
[96.01698303 169.50613403]
[95.70492554 154.50938416]
[95.39286804 139.51263428]
[95.08081055 124.51587677]
[83.57901001 114.88735199]
[68.76124573 117.21845245]
[53.94349289 119.54956055]
[39.12573242 121.88066101]
[24.30797577 124.21176910]
[9.54191971 126.85063171]
[-5.16604185 129.79611206]
[-19.87400436 132.74159241]
[-34.58196640 135.68707275]
[-40.11588287 150.08775330]
[-52.57040024 159.19206238]
[-67.97132874 160.09486389]
[-81.40428162 152.50808716]
[-88.58285522 138.85261536]
[-87.21639252 123.48589325]
[-77.74092865 111.31136322]
[-63.18004990 106.21388245]
[-48.18007660 109.82003784]
[-37.52744675 120.97911835]
[-22.81948662 118.03363037]
[-8.11152458 115.08815002]
[6.59643698 112.14266968]
[9.97266197 108.68194580]
[15.58044720 107.34626007]
[21.97687149 109.39400482]
[36.79462814 107.06290436]
[51.61238861 104.73179626]
[66.43014526 102.40069580]
[81.24790192 100.06959534]
[80.36775970 92.62141418]
[66.24636841 87.56314087]
[51.42791367 85.23645782]
[45.21728134 71.58258820]
[53.20127869 58.88393784]
[68.19713593 58.56325912]
[77.71331024 70.15818787]
[76.83317566 62.71001434]
[74.04084778 47.97220612]
[71.24851990 33.23440170]
[68.45619965 18.49659538]
[65.66387177 3.75878882]
[62.87155151 -10.97901726]
[47.84848785 -12.65202808]
[33.98664856 -18.68036461]
[22.51861954 -28.52798843]
[14.46413040 -41.31925964]
[10.53938007 -55.91678619]
[11.09335613 -71.02256012]
[16.07679749 -85.29339600]
[25.04658127 -97.46033478]
[37.20512009 -106.44150543]
[51.47128296 -111.43830109]
[66.57653809 -112.00640869]
[81.17772675 -108.09532166]
[93.97653198 -100.05281067]
[103.83488464 -88.59400177]
[109.87619019 -74.73780823]
[111.56326294 -59.71632004]
[108.74607849 -44.86522675]
[101.67515564 -31.50508690]
[90.97921753 -20.82386780]
[77.60935974 -13.77134132]
[80.40167999 0.96646446]
[83.19400787 15.70427036]
[85.98632812 30.44207573]
[88.77865601 45.17988205]
[91.57097626 59.91768646]
[98.33307648 63.16176987]
[100.32450104 48.29455185]
[115.07946014 45.59431458]
[122.20704651 58.79270554]
[111.85726166 69.64993286]
[118.61936188 72.89402008]
[131.86193848 65.84888458]
[145.10452271 58.80374908]
[158.34712219 51.75861359]
[171.58970642 44.71347809]
[172.04197693 29.36124611]
[180.12341309 16.30039787]
[193.66017151 9.04423237]
[209.01091003 9.54462528]
[222.04637146 17.66697121]
[229.26005554 31.22640038]
[228.71156311 46.57549667]
[220.54838562 59.58542633]
[206.96641541 66.75658417]
[191.61911011 66.15997314]
[178.63484192 57.95606613]
[165.39225769 65.00119781]
[152.14965820 72.04633331]
[138.90707397 79.09146881]
[125.66448975 86.13660431]
[126.91136932 101.08469391]
[141.13815308 105.83850861]
[155.36492920 110.59232330]
[169.59170532 115.34613800]
[181.50202942 110.28667450]
[193.28045654 114.58639526]
[198.76603699 125.41300964]
[212.89083862 130.46177673]
[228.91830444 126.99008942]
[239.73672485 139.31462097]
[234.21704102 154.75692749]
[218.03742981 157.43130493]
[207.84208679 144.58657837]
[193.71728516 139.53781128]
[176.68138123 143.63391113]
[164.83789062 129.57292175]
[150.61111450 124.81909943]
[136.38433838 120.06528473]
[122.15755463 115.31147003]
[110.07756805 124.20381927]
[110.38961792 139.20057678]
[110.70167542 154.19732666]
[111.01373291 169.19407654]
[111.32579041 184.19084167]
[111.63784790 199.18759155]
[111.94990540 214.18434143]
[112.26195526 229.18109131]
[112.57401276 244.17785645]
[127.22900391 247.76861572]
[140.45481873 255.03086853]
[151.34968567 265.46948242]
[159.17077637 278.37268066]
[163.38485718 292.86074829]
[163.70457458 307.94583130]
[160.10813904 322.59945679]
[152.84078979 335.82244873]
[142.39797974 346.71328735]
[129.49174500 354.52941895]
[115.00205994 358.73788452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 41]
[26 40]
[27 39]
[28 38]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[112 130]
[113 129]
[114 128]
[115 127]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
