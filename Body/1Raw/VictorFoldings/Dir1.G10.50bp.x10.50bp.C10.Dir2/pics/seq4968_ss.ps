%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUAAUAGGGGGGGGGGGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGxxxxxxxxxxUUAUCGUCACAGCCCAUGCAUUUGUAAUAAUCUUCUUCAUAGUAAUACCCCCCCCCCCCCAUCAUAAUCG\
) } def
/len { sequence length } bind def

/coor [
[82.53561401 384.63238525]
[71.22365570 374.64730835]
[62.88227844 362.07415771]
[58.08021927 347.77023315]
[57.14488602 332.71075439]
[60.14005280 317.92254639]
[66.86150360 304.41384888]
[76.85095215 293.10574341]
[89.42731476 284.76922607]
[103.73310852 279.97268677]
[102.79747772 265.00189209]
[101.86185455 250.03111267]
[100.92622375 235.06031799]
[99.99059296 220.08953857]
[99.05496216 205.11874390]
[98.11933899 190.14794922]
[97.18370819 175.17715454]
[96.24807739 160.20635986]
[95.31245422 145.23558044]
[94.37682343 130.26478577]
[84.70116425 126.71184540]
[76.74079895 120.16399384]
[63.35451126 126.93210602]
[49.96822739 133.70022583]
[41.45148849 147.71440125]
[25.06480026 147.07531738]
[17.66537857 132.44041443]
[26.86511803 118.86481476]
[43.20011139 120.31393433]
[56.58639908 113.54582214]
[69.97267914 106.77770996]
[70.93019104 89.87462616]
[80.68097687 76.03434753]
[96.27554321 69.44340515]
[98.14315796 54.56012344]
[100.01077271 39.67684555]
[101.87838745 24.79356384]
[95.91951752 10.13742352]
[105.18125153 -1.52746141]
[107.04886627 -16.41074181]
[108.91648102 -31.29402161]
[94.22972107 -34.38574982]
[79.84844971 -38.67974472]
[65.87088776 -44.14668274]
[52.39253235 -50.74921417]
[39.50544739 -58.44223785]
[27.29766846 -67.17320251]
[15.85258961 -76.88245392]
[5.24839211 -87.50368500]
[-4.44248581 -98.96433258]
[-13.15384388 -111.18611145]
[-20.82617378 -124.08552551]
[-27.40706444 -137.57446289]
[-32.85156250 -151.56077576]
[-37.12247467 -165.94892883]
[-40.19062805 -180.64062500]
[-42.03506088 -195.53550720]
[-42.64317322 -210.53182983]
[-42.01081467 -225.52714539]
[-40.14230347 -240.41903687]
[-37.05039978 -255.10575867]
[-32.75623322 -269.48696899]
[-27.28912735 -283.46447754]
[-20.68643570 -296.94274902]
[-12.99325943 -309.82974243]
[-4.26215267 -322.03741455]
[5.44724178 -333.48239136]
[16.06859779 -344.08645630]
[27.52935982 -353.77719116]
[39.75123978 -362.48840332]
[52.65074539 -370.16058350]
[66.13976288 -376.74130249]
[80.12613678 -382.18563843]
[94.51433563 -386.45639038]
[109.20606995 -389.52435303]
[124.10098267 -391.36862183]
[139.09730530 -391.97656250]
[154.09262085 -391.34402466]
[168.98448181 -389.47531128]
[183.67117310 -386.38323975]
[198.05233765 -382.08889771]
[212.02976990 -376.62164307]
[225.50796509 -370.01876831]
[238.39486694 -362.32543945]
[250.60243225 -353.59420776]
[262.04730225 -343.88467407]
[272.65124512 -333.26318359]
[282.34182739 -321.80230713]
[291.05291748 -309.58032227]
[298.72491455 -296.68072510]
[305.30548096 -283.19165039]
[310.74966431 -269.20520020]
[315.02023315 -254.81694031]
[318.08804321 -240.12516785]
[319.93209839 -225.23023987]
[320.53985596 -210.23390198]
[319.90713501 -195.23860168]
[318.03826904 -180.34675598]
[314.94604492 -165.66011047]
[310.65151978 -151.27899170]
[305.18408203 -137.30163574]
[298.58105469 -123.82350922]
[290.88757324 -110.93669891]
[282.15618896 -98.72923279]
[272.44653320 -87.28450012]
[261.82492065 -76.68067932]
[250.36392212 -66.99021149]
[238.14183044 -58.27929306]
[225.24214172 -50.60742188]
[211.75297546 -44.02701569]
[197.76646423 -38.58301544]
[183.37815857 -34.31261826]
[168.68635559 -31.24499130]
[153.79139709 -29.40109062]
[138.79505920 -28.79351234]
[123.79975891 -29.42640877]
[121.93214417 -14.54312801]
[120.06452942 0.34015173]
[126.15698242 13.93174076]
[116.76166534 26.66117668]
[114.89405060 41.54445648]
[113.02643585 56.42773819]
[111.15882874 71.31101990]
[123.39608002 79.99497986]
[130.07398987 93.43250275]
[129.60578918 108.43058014]
[122.10269928 121.42539978]
[109.34761810 129.32914734]
[110.28324127 144.29994202]
[111.21887207 159.27073669]
[112.15450287 174.24153137]
[113.09012604 189.21232605]
[114.02575684 204.18310547]
[114.96138763 219.15390015]
[115.89701080 234.12469482]
[116.83264160 249.09548950]
[117.76827240 264.06628418]
[118.70389557 279.03707886]
[133.49557495 282.01510620]
[147.01203918 288.72088623]
[158.33171082 298.69726562]
[166.68278503 311.26394653]
[171.49589539 325.56417847]
[172.44285583 340.62292480]
[169.45910645 355.41345215]
[162.74809265 368.92730713]
[152.76736450 380.24313354]
[140.19744873 388.58935547]
[125.89537048 393.39694214]
[110.83626556 394.33807373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[22 31]
[23 30]
[24 29]
[34 123]
[35 122]
[36 121]
[37 120]
[39 118]
[40 117]
[41 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
