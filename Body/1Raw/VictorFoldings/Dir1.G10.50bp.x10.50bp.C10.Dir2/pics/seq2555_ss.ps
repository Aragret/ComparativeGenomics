%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACUGACAAUGGGGGGGGGGUAACAGCCCAAUAUCUACAAUCAACCAACAAGUCAUUAUUACCCUCACUGxxxxxxxxxxCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUAUCUCCCCCCCCCCCGAACUGACACU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 360.48208618]
[71.01555634 354.92907715]
[58.81560135 346.06274414]
[49.20452881 334.44042969]
[42.78650284 320.79272461]
[39.96496582 305.97753906]
[40.91728210 290.92617798]
[45.58358765 276.58474731]
[53.67055511 263.85479736]
[64.66983032 253.53651428]
[77.88998413 246.27853394]
[92.50000000 242.53709412]
[92.50000000 227.53709412]
[92.50000000 212.53709412]
[92.50000000 197.53709412]
[92.50000000 182.53709412]
[92.50000000 167.53709412]
[92.50000000 152.53709412]
[92.50000000 137.53709412]
[92.50000000 122.53710175]
[92.50000000 107.53710175]
[91.42292786 92.57582092]
[89.27435303 77.73049927]
[87.12577057 62.88517380]
[84.97719574 48.03985214]
[70.01866150 49.22357559]
[55.01487350 49.43655014]
[40.02877045 48.67787933]
[25.12320328 46.95075226]
[10.36069298 44.26240921]
[-4.19684124 40.62412262]
[-18.48833847 36.05115891]
[-32.45385742 30.56269646]
[-46.03481674 24.18175316]
[-59.17425537 16.93509674]
[-71.81706238 8.85312271]
[-83.91020966 -0.03027286]
[-95.40297699 -9.67782784]
[-106.24714661 -20.04907799]
[-116.39724731 -31.10052109]
[-125.81069946 -42.78580475]
[-134.44801331 -55.05591202]
[-142.27297974 -67.85938263]
[-149.25276184 -81.14251709]
[-155.35809326 -94.84958649]
[-160.56335449 -108.92311859]
[-164.84672546 -123.30406189]
[-168.19023132 -137.93211365]
[-170.57984924 -152.74591064]
[-172.00555420 -167.68331909]
[-172.46136475 -182.68170166]
[-171.94538879 -197.67811584]
[-170.45976257 -212.60969543]
[-168.01074219 -227.41378784]
[-164.60858154 -242.02830505]
[-160.26756287 -256.39196777]
[-155.00588989 -270.44448853]
[-148.84561157 -284.12695312]
[-141.81260681 -297.38198853]
[-133.93634033 -310.15396118]
[-125.24987030 -322.38931274]
[-115.78961182 -334.03674316]
[-105.59526062 -345.04739380]
[-94.70957184 -355.37503052]
[-83.17819977 -364.97640991]
[-71.04951477 -373.81121826]
[-58.37438583 -381.84240723]
[-45.20598221 -389.03631592]
[-31.59953117 -395.36273193]
[-17.61211014 -400.79510498]
[-3.30238152 -405.31069946]
[11.26963043 -408.89056396]
[26.04280663 -411.51965332]
[40.95518112 -413.18698120]
[55.94421005 -413.88552856]
[70.94702148 -413.61236572]
[85.90068054 -412.36865234]
[100.74247742 -410.15957642]
[115.41015625 -406.99444580]
[129.84219360 -402.88650513]
[143.97805786 -397.85299683]
[157.75845337 -391.91500854]
[171.12559509 -385.09747314]
[184.02339172 -377.42898560]
[196.39776611 -368.94171143]
[208.19679260 -359.67123413]
[219.37101746 -349.65646362]
[229.87353516 -338.93939209]
[239.66030884 -327.56494141]
[248.69029236 -315.58084106]
[256.92562866 -303.03738403]
[264.33172607 -289.98715210]
[270.87756348 -276.48489380]
[276.53564453 -262.58724976]
[281.28228760 -248.35249329]
[285.09756470 -233.84033203]
[287.96545410 -219.11166382]
[289.87396240 -204.22822571]
[290.81503296 -189.25247192]
[290.78479004 -174.24720764]
[289.78329468 -159.27536011]
[287.81475830 -144.39974976]
[284.88745117 -129.68275452]
[281.01367188 -115.18611908]
[276.20962524 -100.97062683]
[270.49551392 -87.09591675]
[263.89526367 -73.62017822]
[256.43655396 -60.59993362]
[248.15069580 -48.08979797]
[239.07243347 -36.14224243]
[229.23985291 -24.80737877]
[218.69418335 -14.13275051]
[207.47964478 -4.16313219]
[195.64331055 5.05966139]
[183.23480225 13.49694633]
[170.30616760 21.11333275]
[156.91163635 27.87687492]
[143.10739136 33.75920486]
[128.95133972 38.73564911]
[114.50284576 42.78533173]
[99.82251740 45.89127350]
[101.97109222 60.73659515]
[104.11967468 75.58191681]
[106.26824951 90.42723846]
[115.54293060 78.63825226]
[130.18927002 75.40020752]
[143.56932068 82.18063354]
[149.61904907 95.90655518]
[145.59663391 110.35716248]
[133.32508850 118.98323822]
[118.36605835 117.87531281]
[107.50000000 107.53710175]
[107.50000000 122.53710175]
[107.50000000 137.53709412]
[107.50000000 152.53709412]
[107.50000000 167.53709412]
[107.50000000 182.53709412]
[107.50000000 197.53709412]
[107.50000000 212.53709412]
[107.50000000 227.53709412]
[107.50000000 242.53709412]
[122.11001587 246.27853394]
[135.33016968 253.53651428]
[146.32945251 263.85479736]
[154.41641235 276.58474731]
[159.08271790 290.92617798]
[160.03503418 305.97753906]
[157.21350098 320.79272461]
[150.79547119 334.44042969]
[141.18440247 346.06274414]
[128.98443604 354.92907715]
[114.96250153 360.48208618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 124]
[23 123]
[24 122]
[25 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
