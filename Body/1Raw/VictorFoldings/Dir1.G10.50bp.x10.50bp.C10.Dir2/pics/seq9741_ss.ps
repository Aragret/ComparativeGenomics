%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAAACUAAGGGGGGGGGGUCGUCCCAACAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACxxxxxxxxxxUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCCCCCCCCCCCUAAUACUAA\
) } def
/len { sequence length } bind def

/coor [
[73.64742279 307.92639160]
[67.89453125 294.02313232]
[64.87708282 279.28231812]
[64.70414734 264.23681641]
[67.38197327 249.43055725]
[72.81377411 235.39872742]
[80.80317688 222.64859009]
[91.06137085 211.64105225]
[103.21754456 202.77403259]
[116.83224487 196.36807251]
[113.12608337 181.83312988]
[109.41992188 167.29820251]
[105.71376038 152.76325989]
[102.00759888 138.22831726]
[98.30143738 123.69338989]
[94.59527588 109.15845490]
[89.84146118 94.93167114]
[84.06519318 81.08845520]
[78.28891754 67.24523926]
[72.51264191 53.40201950]
[66.73637390 39.55880356]
[60.96010208 25.71558380]
[55.18382645 11.87236595]
[40.95371628 16.63699913]
[26.41689491 20.36239243]
[11.64915085 23.02912521]
[-3.27252412 24.62329483]
[-18.27033424 25.13658714]
[-33.26608658 24.56632805]
[-48.18159866 22.91549110]
[-62.93910599 20.19268227]
[-77.46166992 16.41209602]
[-91.67358398 11.59344482]
[-105.50074005 5.76184988]
[-118.87105560 -1.05228496]
[-131.71481323 -8.81343365]
[-143.96507263 -17.48113251]
[-155.55795288 -27.01019096]
[-166.43301392 -37.35092926]
[-176.53355408 -48.44943619]
[-185.80691528 -60.24784851]
[-194.20474243 -72.68465424]
[-201.68327332 -85.69500732]
[-208.20350647 -99.21108246]
[-213.73144531 -113.16241455]
[-218.23828125 -127.47626495]
[-221.70050049 -142.07800293]
[-224.10005188 -156.89151001]
[-225.42445374 -171.83953857]
[-225.66676331 -186.84417725]
[-224.82574463 -201.82717896]
[-222.90576172 -216.71043396]
[-219.91685486 -231.41636658]
[-215.87457275 -245.86827087]
[-210.80000305 -259.99081421]
[-204.71961975 -273.71038818]
[-197.66510010 -286.95544434]
[-189.67323303 -299.65695190]
[-180.78567505 -311.74862671]
[-171.04878235 -323.16751099]
[-160.51330566 -333.85400391]
[-149.23416138 -343.75244141]
[-137.27018738 -352.81118774]
[-124.68372345 -360.98303223]
[-111.54041290 -368.22534180]
[-97.90877533 -374.50036621]
[-83.85987091 -379.77542114]
[-69.46695709 -384.02297974]
[-54.80506516 -387.22088623]
[-39.95063782 -389.35250854]
[-24.98111916 -390.40667725]
[-9.97455597 -390.37792969]
[4.99081421 -389.26641846]
[19.83696747 -387.07794189]
[34.48650360 -383.82388306]
[48.86304474 -379.52124023]
[62.89163971 -374.19241333]
[76.49914551 -367.86520386]
[89.61462402 -360.57260132]
[102.16968536 -352.35263062]
[114.09888458 -343.24813843]
[125.34001923 -333.30657959]
[135.83448792 -322.57977295]
[145.52758789 -311.12371826]
[154.36875916 -298.99804688]
[162.31190491 -286.26605225]
[169.31564331 -272.99407959]
[175.34344482 -259.25131226]
[180.36387634 -245.10942078]
[184.35076904 -230.64213562]
[187.28334045 -215.92486572]
[189.14630127 -201.03436279]
[189.92991638 -186.04824829]
[189.63014221 -171.04464722]
[188.24850464 -156.10180664]
[185.79222107 -141.29759216]
[182.27409363 -126.70922852]
[177.71247864 -112.41275024]
[172.13113403 -98.48268890]
[165.55918884 -84.99169159]
[158.03086853 -72.01007080]
[149.58546448 -59.60552597]
[140.26698303 -47.84272003]
[130.12400818 -36.78298569]
[119.20941925 -26.48397446]
[107.58012390 -16.99938965]
[95.29676056 -8.37867546]
[82.42336273 -0.66677904]
[69.02704620 6.09609413]
[74.80331421 19.93931198]
[80.57958984 33.78252792]
[86.35586548 47.62574768]
[92.13213348 61.46896362]
[97.90840912 75.31217957]
[103.68467712 89.15540314]
[109.75305176 75.43771362]
[123.14120483 68.67330170]
[137.78417969 71.92649841]
[147.04856873 83.72358704]
[146.73750305 98.72035980]
[136.99189758 110.12313843]
[122.22662354 112.76634979]
[109.13021088 105.45229340]
[112.83637238 119.98722839]
[116.54253387 134.52215576]
[120.24869537 149.05709839]
[123.95485687 163.59204102]
[127.66101837 178.12696838]
[131.36718750 192.66191101]
[146.38699341 191.76655579]
[161.30479431 193.73017883]
[175.58129883 198.48178101]
[188.70043945 205.84959412]
[200.18795776 215.56729126]
[209.62858582 227.28355408]
[216.68106079 240.57487488]
[221.09042358 254.96076965]
[222.69728088 269.92120361]
[221.44355774 284.91537476]
[217.37457275 299.40121460]
[210.63740540 312.85510254]
[201.47561646 324.79067993]
[190.22039795 334.77648926]
[177.27859497 342.45153809]
[163.11807251 347.53839111]
[148.25071716 349.85314941]
[133.21397400 349.31216431]
[118.55139923 345.93493652]
[104.79305267 339.84359741]
[92.43627930 331.25836182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 123]
[17 115]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
