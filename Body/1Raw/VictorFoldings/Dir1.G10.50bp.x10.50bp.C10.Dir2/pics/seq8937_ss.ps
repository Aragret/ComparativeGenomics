%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAACCAUAUGGGGGGGGGGACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUACCAAGGCCACCACxxxxxxxxxxAUACUAAUCUCCCUACAAAUCUCCUUAAUUAUAACAUUCACAGCCACAGACCCCCCCCCCACUAAUCAUAU\
) } def
/len { sequence length } bind def

/coor [
[83.22987366 416.75207520]
[69.20792389 411.19906616]
[57.00796890 402.33273315]
[47.39690018 390.71041870]
[40.97887421 377.06271362]
[38.15733719 362.24752808]
[39.10965347 347.19616699]
[43.77595901 332.85473633]
[51.86292267 320.12478638]
[62.86219788 309.80651855]
[76.08235931 302.54852295]
[90.69236755 298.80709839]
[90.69236755 283.80709839]
[90.69236755 268.80709839]
[90.69236755 253.80709839]
[90.69236755 238.80709839]
[90.69236755 223.80709839]
[90.69236755 208.80709839]
[90.69236755 193.80709839]
[90.69236755 178.80709839]
[90.69236755 163.80709839]
[82.95507050 151.07981873]
[90.69236755 137.27964783]
[88.41349792 134.51307678]
[87.39476013 130.48420715]
[88.22409058 125.81324768]
[91.18274689 121.36334991]
[92.10616302 106.39179993]
[89.40679932 98.73965454]
[93.20534515 91.12332153]
[94.43595886 76.17388916]
[95.66657257 61.22445297]
[96.89718628 46.27501678]
[97.97425079 31.31373596]
[86.15863037 18.45378876]
[87.24700165 1.36148024]
[100.08331299 -9.46128654]
[100.69914246 -24.44864082]
[101.31496429 -39.43599319]
[101.93079376 -54.42334747]
[87.03685760 -56.27543640]
[72.34674072 -59.35114288]
[57.96078491 -63.62945175]
[43.97727203 -69.08113861]
[30.49172020 -75.66896057]
[17.59625244 -83.34792328]
[5.37895775 -92.06555939]
[-6.07670546 -101.76232910]
[-16.69248199 -112.37198639]
[-26.39585686 -123.82205963]
[-35.12054062 -136.03431702]
[-42.80693817 -148.92535400]
[-49.40253830 -162.40710449]
[-54.86228943 -176.38748169]
[-59.14889526 -190.77095032]
[-62.23307037 -205.45930481]
[-64.09375000 -220.35215759]
[-64.71822357 -235.34780884]
[-64.10221863 -250.34381104]
[-62.24995041 -265.23773193]
[-59.17407227 -279.92782593]
[-54.89559174 -294.31372070]
[-49.44373703 -308.29714966]
[-42.85575104 -321.78262329]
[-35.17663956 -334.67800903]
[-26.45885277 -346.89520264]
[-16.76194763 -358.35073853]
[-6.15216541 -368.96640015]
[5.29801941 -378.66964722]
[17.51038742 -387.39416504]
[30.40151787 -395.08041382]
[43.88334656 -401.67587280]
[57.86377716 -407.13543701]
[72.24730682 -411.42187500]
[86.93569183 -414.50588989]
[101.82857513 -416.36639404]
[116.82423401 -416.99066162]
[131.82023621 -416.37448120]
[146.71412659 -414.52203369]
[161.40415955 -411.44598389]
[175.79000854 -407.16732788]
[189.77339172 -401.71533203]
[203.25878906 -395.12716675]
[216.15408325 -387.44790649]
[228.37117004 -378.72998047]
[239.82659912 -369.03292847]
[250.44212341 -358.42303467]
[260.14523315 -346.97271729]
[268.86962891 -334.76025391]
[276.55569458 -321.86901855]
[283.15097046 -308.38711548]
[288.61041260 -294.40661621]
[292.89666748 -280.02304077]
[295.98049927 -265.33462524]
[297.84082031 -250.44171143]
[298.46493530 -235.44604492]
[297.84857178 -220.45005798]
[295.99594116 -205.55619812]
[292.91970825 -190.86618042]
[288.64089966 -176.48039246]
[283.18872070 -162.49707031]
[276.60040283 -149.01174927]
[268.92098999 -136.11656189]
[260.20291138 -123.89957428]
[250.50572205 -112.44425964]
[239.89569092 -101.82886505]
[228.44526672 -92.12590027]
[216.23269653 -83.40164948]
[203.34138489 -75.71571350]
[189.85940552 -69.12059784]
[175.87882996 -63.66134644]
[161.49519348 -59.37525558]
[146.80674744 -56.29160309]
[131.91381836 -54.43145752]
[116.91814423 -53.80752182]
[116.30231476 -38.82016754]
[115.68649292 -23.83281517]
[115.07067108 -8.84546185]
[125.06260681 -0.65318495]
[128.54513550 11.99200249]
[124.02395630 24.51159286]
[112.94580078 32.23714828]
[115.69003296 39.14955902]
[111.84661865 47.50563049]
[110.61600494 62.45506287]
[109.38539124 77.40449524]
[108.15477753 92.35393524]
[107.07771301 107.31521606]
[106.15429688 122.28676605]
[105.69236755 137.27964783]
[113.42967224 151.07981873]
[105.69236755 163.80709839]
[105.69236755 178.80709839]
[105.69236755 193.80709839]
[105.69236755 208.80709839]
[105.69236755 223.80709839]
[105.69236755 238.80709839]
[105.69236755 253.80709839]
[105.69236755 268.80709839]
[105.69236755 283.80709839]
[105.69236755 298.80709839]
[120.30238342 302.54852295]
[133.52253723 309.80651855]
[144.52182007 320.12478638]
[152.60877991 332.85473633]
[157.27508545 347.19616699]
[158.22740173 362.24752808]
[155.40586853 377.06271362]
[148.98783875 390.71041870]
[139.37677002 402.33273315]
[127.17681122 411.19906616]
[113.15486908 416.75207520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 130]
[27 129]
[28 128]
[30 127]
[31 126]
[32 125]
[33 124]
[34 122]
[37 118]
[38 117]
[39 116]
[40 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
