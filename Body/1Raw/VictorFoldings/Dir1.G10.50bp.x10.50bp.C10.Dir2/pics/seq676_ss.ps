%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCCCGCCCGGGGGGGGGGAUCCUACCCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACxxxxxxxxxxAACGGCUACAUAGAAAAAUCCACCCCUUACGAGUGCGGCUUCGACCCUAUCCCCCCCCCCAUCCCCCGCCC\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 427.56884766]
[71.01555634 422.01583862]
[58.81560135 413.14950562]
[49.20452881 401.52719116]
[42.78650284 387.87951660]
[39.96496582 373.06430054]
[40.91728210 358.01293945]
[45.58358765 343.67150879]
[53.67055511 330.94155884]
[64.66983032 320.62329102]
[77.88998413 313.36529541]
[92.50000000 309.62387085]
[92.50000000 294.62387085]
[92.50000000 279.62387085]
[92.50000000 264.62387085]
[92.50000000 249.62387085]
[92.50000000 234.62387085]
[92.50000000 219.62387085]
[92.50000000 204.62387085]
[92.50000000 189.62387085]
[92.50000000 174.62387085]
[92.50000000 159.62387085]
[92.50000000 144.62387085]
[77.71218109 139.38011169]
[65.60403442 129.40165710]
[57.63132858 115.88822937]
[54.75263214 100.46455383]
[57.31404495 84.98502350]
[65.00761414 71.31075287]
[76.90833282 61.08580017]
[91.58537292 55.53952026]
[91.27738953 40.54268265]
[90.96941376 25.54584503]
[81.06690979 10.05484772]
[90.04737854 -4.99160194]
[89.43155670 -19.97895432]
[88.81573486 -34.96630859]
[73.81920624 -35.55846405]
[58.91896439 -37.35542297]
[44.21163559 -40.34553909]
[29.79260445 -44.50941467]
[15.75538540 -49.82004166]
[2.19101620 -56.24298859]
[-10.81253147 -63.73658752]
[-23.17092323 -72.25225067]
[-34.80400848 -81.73474121]
[-45.63634491 -92.12256622]
[-55.59767151 -103.34835052]
[-64.62339020 -115.33928680]
[-72.65496826 -128.01762390]
[-79.64031219 -141.30111694]
[-85.53411865 -155.10363770]
[-90.29816437 -169.33564758]
[-93.90155029 -183.90486145]
[-96.32090759 -198.71678162]
[-97.54055023 -213.67535400]
[-97.55256653 -228.68354797]
[-96.35687256 -243.64405823]
[-93.96122742 -258.45983887]
[-90.38117218 -273.03479004]
[-85.63991547 -287.27441406]
[-79.76821899 -301.08633423]
[-72.80414581 -314.38101196]
[-64.79288483 -327.07217407]
[-55.78636932 -339.07754517]
[-45.84302521 -350.31927490]
[-35.02733612 -360.72442627]
[-23.40944481 -370.22552490]
[-11.06470203 -378.76095581]
[1.92683208 -386.27539062]
[15.48090076 -392.72003174]
[29.50959969 -398.05313110]
[43.92194748 -402.24008179]
[58.62446976 -405.25372314]
[73.52182007 -407.07455444]
[88.51737213 -407.69070435]
[103.51388550 -407.09823608]
[118.41408539 -405.30093384]
[133.12135315 -402.31048584]
[147.54028320 -398.14630127]
[161.57739258 -392.83535767]
[175.14161682 -386.41210938]
[188.14500427 -378.91824341]
[200.50320435 -370.40231323]
[212.13607788 -360.91955566]
[222.96818542 -350.53149414]
[232.92927551 -339.30548096]
[241.95472717 -327.31436157]
[249.98602295 -314.63583374]
[256.97106934 -301.35217285]
[262.86456299 -287.54953003]
[267.62829590 -273.31741333]
[271.23138428 -258.74813843]
[273.65042114 -243.93615723]
[274.86972046 -228.97756958]
[274.88140869 -213.96936035]
[273.68539429 -199.00888062]
[271.28939819 -184.19316101]
[267.70901489 -169.61827087]
[262.96746826 -155.37875366]
[257.09545898 -141.56695557]
[250.13108826 -128.27244568]
[242.11955261 -115.58145142]
[233.11277771 -103.57627106]
[223.16917419 -92.33477783]
[212.35325623 -81.92986298]
[200.73515320 -72.42901611]
[188.39022827 -63.89385223]
[175.39852905 -56.37972641]
[161.84431458 -49.93537521]
[147.81550598 -44.60258865]
[133.40306091 -40.41595078]
[118.70046997 -37.40261841]
[103.80308533 -35.58213425]
[104.41890717 -20.59477997]
[105.03473663 -5.60742712]
[113.73696899 2.85031414]
[114.33776855 15.37270927]
[105.96625519 25.23786736]
[106.27423096 40.23470688]
[106.58220673 55.23154449]
[120.10175323 59.46039200]
[131.65130615 67.66217041]
[140.09898376 79.03309631]
[144.61692810 92.45879364]
[144.76235962 106.62354279]
[140.52102661 120.13918304]
[132.30859375 131.68115234]
[120.92987061 140.11833191]
[107.50000000 144.62387085]
[107.50000000 159.62387085]
[107.50000000 174.62387085]
[107.50000000 189.62387085]
[107.50000000 204.62387085]
[107.50000000 219.62387085]
[107.50000000 234.62387085]
[107.50000000 249.62387085]
[107.50000000 264.62387085]
[107.50000000 279.62387085]
[107.50000000 294.62387085]
[107.50000000 309.62387085]
[122.11001587 313.36529541]
[135.33016968 320.62329102]
[146.32945251 330.94155884]
[154.41641235 343.67150879]
[159.08271790 358.01293945]
[160.03503418 373.06430054]
[157.21350098 387.87951660]
[150.79547119 401.52719116]
[141.18440247 413.14950562]
[128.98443604 422.01583862]
[114.96250153 427.56884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[31 121]
[32 120]
[33 119]
[35 116]
[36 115]
[37 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
