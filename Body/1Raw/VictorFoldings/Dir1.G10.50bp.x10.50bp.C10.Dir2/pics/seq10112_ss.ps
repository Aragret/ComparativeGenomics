%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUACUACUCGGGGGGGGGGACUCUCACUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGxxxxxxxxxxACCACAUCAUCGAAACCGCAAACAUAUCAUACACAAACGCCUGAGCCCUACCCCCCCCCCUCUAUUACUC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 370.06347656]
[71.19830322 364.04745483]
[59.48964310 354.51803589]
[50.78712082 342.18237305]
[45.73651886 327.95584106]
[44.71262741 312.89416504]
[47.79142761 298.11499023]
[54.74444962 284.71505737]
[65.05573273 273.68875122]
[77.96011353 265.85421753]
[92.50000000 261.79290771]
[92.50000000 246.79290771]
[92.50000000 231.79290771]
[92.50000000 216.79290771]
[92.50000000 201.79290771]
[92.50000000 186.79290771]
[92.50000000 171.79290771]
[92.50000000 156.79290771]
[92.50000000 141.79290771]
[92.50000000 126.79291534]
[78.00877380 117.04394531]
[72.18318176 100.57881927]
[77.31880951 83.88560486]
[91.39194489 73.54226685]
[90.76796722 58.55525208]
[90.14398956 43.56823349]
[89.52001190 28.58121872]
[80.55094147 19.25332832]
[80.37449646 6.71587181]
[88.53797913 -2.26549339]
[88.22592163 -17.26224709]
[73.23821259 -18.00892067]
[58.34050751 -19.81095505]
[43.60702896 -22.65937424]
[29.11117554 -26.53998756]
[14.92516708 -31.43346214]
[1.11967874 -37.31541824]
[-12.23651123 -44.15655136]
[-25.07686234 -51.92277908]
[-37.33740616 -60.57540894]
[-48.95705414 -70.07133484]
[-59.87792587 -80.36325073]
[-70.04560852 -91.39987946]
[-79.40944672 -103.12624359]
[-87.92279053 -115.48390198]
[-95.54322815 -128.41131592]
[-102.23278809 -141.84405518]
[-107.95815277 -155.71522522]
[-112.69078827 -169.95568848]
[-116.40712738 -184.49453735]
[-119.08865356 -199.25929260]
[-120.72199249 -214.17643738]
[-121.29902649 -229.17163086]
[-120.81687164 -244.17018127]
[-119.27793121 -259.09735107]
[-116.68986511 -273.87878418]
[-113.06558228 -288.44085693]
[-108.42312622 -302.71096802]
[-102.78562927 -316.61807251]
[-96.18118286 -330.09289551]
[-88.64267731 -343.06823730]
[-80.20768738 -355.47952271]
[-70.91822052 -367.26489258]
[-60.82056427 -378.36560059]
[-49.96502304 -388.72640991]
[-38.40567780 -398.29565430]
[-26.20012093 -407.02566528]
[-13.40915775 -414.87298584]
[-0.09651344 -421.79846191]
[13.67148781 -427.76763916]
[27.82625580 -432.75076294]
[42.29726791 -436.72302246]
[57.01243210 -439.66458130]
[71.89843750 -441.56082153]
[86.88112640 -442.40231323]
[101.88584137 -442.18481445]
[116.83784485 -440.90945435]
[131.66264343 -438.58255005]
[146.28636169 -435.21572876]
[160.63616943 -430.82574463]
[174.64056396 -425.43444824]
[188.22976685 -419.06872559]
[201.33610535 -411.76031494]
[213.89424133 -403.54556274]
[225.84165955 -394.46545410]
[237.11878967 -384.56521606]
[247.66947937 -373.89413452]
[257.44116211 -362.50540161]
[266.38513184 -350.45574951]
[274.45687866 -337.80520630]
[281.61614990 -324.61682129]
[287.82727051 -310.95626831]
[293.05932617 -296.89160156]
[297.28622437 -282.49291992]
[300.48693848 -267.83193970]
[302.64550781 -252.98168945]
[303.75115967 -238.01618958]
[303.79840088 -223.00996399]
[302.78698730 -208.03779602]
[300.72198486 -193.17425537]
[297.61364746 -178.49340820]
[293.47750854 -164.06838989]
[288.33410645 -149.97106934]
[282.20910645 -136.27168274]
[275.13302612 -123.03845978]
[267.14111328 -110.33734894]
[258.27319336 -98.23162079]
[248.57342529 -86.78158569]
[238.09013367 -76.04428864]
[226.87554932 -66.07321930]
[214.98556519 -56.91806030]
[202.47938538 -48.62441254]
[189.41934204 -41.23360443]
[175.87048340 -34.78245163]
[161.90031433 -29.30309868]
[147.57843018 -24.82283783]
[132.97619629 -21.36399269]
[118.16635132 -18.94379616]
[103.22267151 -17.57430267]
[103.53472900 -2.57754946]
[113.42881012 11.88298607]
[104.50703430 27.95724106]
[105.13101196 42.94425583]
[105.75498962 57.93127441]
[106.37895966 72.91828918]
[117.29683685 78.20711517]
[124.92627716 87.63914490]
[127.81681824 99.42118073]
[125.41889954 111.31326294]
[118.18841553 121.05449677]
[107.50000000 126.79291534]
[107.50000000 141.79290771]
[107.50000000 156.79290771]
[107.50000000 171.79290771]
[107.50000000 186.79290771]
[107.50000000 201.79290771]
[107.50000000 216.79290771]
[107.50000000 231.79290771]
[107.50000000 246.79290771]
[107.50000000 261.79290771]
[122.03988647 265.85421753]
[134.94427490 273.68875122]
[145.25555420 284.71505737]
[152.20857239 298.11499023]
[155.28736877 312.89416504]
[154.26348877 327.95584106]
[149.21287537 342.18237305]
[140.51036072 354.51803589]
[128.80169678 364.04745483]
[114.95575714 370.06347656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 125]
[25 124]
[26 123]
[27 122]
[30 120]
[31 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
