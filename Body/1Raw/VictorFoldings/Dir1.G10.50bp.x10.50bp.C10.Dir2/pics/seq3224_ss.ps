%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCUUCUUAAGGGGGGGGGGCAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGxxxxxxxxxxCUACCAUGAGCCCUACAAACAACUAACCUGCCACUAAUAGUUAUGUCAUCCCCCCCCCCCCCUCUUAUUAA\
) } def
/len { sequence length } bind def

/coor [
[97.41228485 488.12667847]
[83.92340088 481.39514160]
[72.43790436 471.63058472]
[63.62353134 459.40069580]
[57.99275208 445.41650391]
[55.87292099 430.49102783]
[57.38729095 415.49203491]
[62.44781494 401.29150391]
[70.76027679 388.71508789]
[81.84140778 378.49392700]
[95.04696655 371.22229004]
[109.60919189 367.32293701]
[109.30120850 352.32608032]
[108.99323273 337.32925415]
[108.68525696 322.33242798]
[108.37728119 307.33557129]
[108.06929779 292.33874512]
[107.76132202 277.34191895]
[107.45334625 262.34506226]
[107.14537048 247.34822083]
[106.83738708 232.35139465]
[94.22599792 221.26734924]
[93.48879242 204.15629578]
[105.56595612 191.54165649]
[104.95013428 176.55430603]
[104.33431244 161.56695557]
[103.71848297 146.57960510]
[103.10266113 131.59223938]
[81.91273499 123.48387909]
[72.81349945 104.39552307]
[78.91863251 85.76528168]
[69.51477814 74.07907867]
[60.11091995 62.39286804]
[50.70706177 50.70665741]
[41.30320740 39.02045059]
[28.53413582 46.92807007]
[14.89007473 53.20654297]
[0.57786363 57.76068497]
[-14.18552780 60.52146530]
[-29.17629051 61.44702148]
[-44.16716766 60.52333069]
[-58.93090057 57.76438904]
[-73.24368286 53.21202469]
[-86.88851929 46.93524933]
[-99.65857697 39.02921677]
[-111.36025238 29.61378288]
[-121.81615448 18.83168030]
[-130.86778259 6.84636593]
[-138.37789917 -6.16046810]
[-144.23266602 -19.99164009]
[-148.34332275 -34.43747330]
[-150.64755249 -49.27897644]
[-151.11041260 -64.29115295]
[-149.72491455 -79.24641418]
[-146.51203918 -93.91806030]
[-141.52049255 -108.08365631]
[-134.82595825 -121.52845764]
[-126.52991486 -134.04866028]
[-116.75813293 -145.45443726]
[-105.65874481 -155.57289124]
[-93.40001678 -164.25064087]
[-80.16779327 -171.35612488]
[-66.16266632 -176.78161621]
[-51.59694290 -180.44487000]
[-36.69144821 -182.29035950]
[-21.67214012 -182.29010010]
[-6.76670790 -180.44409180]
[7.79888582 -176.78034973]
[21.80382919 -171.35437012]
[35.03581238 -164.24844360]
[47.29424286 -155.57028198]
[58.39328384 -145.45144653]
[68.16468048 -134.04533386]
[76.46028900 -121.52484894]
[83.15436554 -108.07981110]
[88.14542389 -93.91404724]
[91.35779572 -79.24229431]
[92.74279022 -64.28697968]
[92.27940369 -49.27482224]
[89.97467041 -34.43339920]
[85.86351776 -19.98770523]
[80.00828552 -6.15673304]
[72.49771881 6.84984398]
[63.44568634 18.83484840]
[52.98941422 29.61659241]
[62.39327240 41.30280304]
[71.79712677 52.98900986]
[81.20098877 64.67521667]
[90.60484314 76.36142731]
[104.41712189 74.94924927]
[116.91342926 81.00034332]
[129.74708557 73.23520660]
[126.28088379 58.50969315]
[127.53678894 43.43395615]
[133.39175415 29.48495674]
[143.27217102 18.02927780]
[156.21005249 10.18922901]
[170.93788147 6.73289919]
[186.01277161 7.99890423]
[199.95783997 13.86321354]
[211.40690613 23.75130272]
[219.23828125 36.69443512]
[222.68473816 51.42457962]
[221.40863037 66.49861908]
[215.53498840 80.43975830]
[205.63922119 91.88218689]
[192.69084167 99.70489502]
[177.95838928 103.14147949]
[162.88520813 101.85527802]
[148.94801331 95.97228241]
[137.51222229 86.06885529]
[124.67856598 93.83399200]
[128.58007812 99.22035980]
[131.17120361 106.00438690]
[146.03779602 108.00044250]
[160.90440369 109.99649811]
[177.40725708 106.11165619]
[185.70872498 120.89414215]
[173.80201721 132.96339417]
[158.90834045 124.86309814]
[144.04174805 122.86704254]
[129.17514038 120.87098694]
[118.09001160 130.97642517]
[118.70583344 145.96377563]
[119.32166290 160.95112610]
[119.93748474 175.93847656]
[120.55331421 190.92582703]
[131.47050476 198.87721252]
[135.73368835 211.48699951]
[131.99226379 224.05801392]
[121.83422852 232.04341125]
[122.14220428 247.04025269]
[122.45018768 262.03707886]
[122.75816345 277.03393555]
[123.06613922 292.03076172]
[123.37411499 307.02758789]
[123.68209839 322.02444458]
[123.99007416 337.02127075]
[124.29804993 352.01812744]
[124.60602570 367.01495361]
[139.31607056 370.31317139]
[152.80902100 377.03652954]
[164.30044556 386.79412842]
[173.12222290 399.01867676]
[178.76147461 412.99945068]
[180.89035034 427.92364502]
[179.38508606 442.92355347]
[174.33317566 457.12713623]
[166.02833557 469.70861816]
[154.95339966 479.93646240]
[141.75225830 487.21612549]
[127.19239807 491.12429810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[91 112]
[92 111]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
