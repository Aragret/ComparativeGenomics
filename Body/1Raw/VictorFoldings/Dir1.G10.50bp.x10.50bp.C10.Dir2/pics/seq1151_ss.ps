%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAGCUAUAGGGGGGGGGGCUAACCCCAGGGUUGGUCAAUUUCGUGCCAGCCACCGCGGUCACACGAUUxxxxxxxxxxUACCCAUUCUAAUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCCCCCCCCCCCUAGGCUAUA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 356.48315430]
[71.19830322 350.46713257]
[59.48964310 340.93771362]
[50.78712082 328.60205078]
[45.73651886 314.37551880]
[44.71262741 299.31384277]
[47.79142761 284.53469849]
[54.74444962 271.13476562]
[65.05573273 260.10842896]
[77.96011353 252.27391052]
[92.50000000 248.21260071]
[92.50000000 233.21260071]
[92.50000000 218.21260071]
[92.50000000 203.21260071]
[92.50000000 188.21260071]
[92.50000000 173.21260071]
[92.50000000 158.21260071]
[92.50000000 143.21260071]
[92.50000000 128.21260071]
[92.50000000 113.21260834]
[80.06056213 104.83045959]
[66.15800476 110.46241760]
[52.25544739 116.09437561]
[38.35289001 121.72633362]
[24.45033646 127.35829163]
[10.54778004 132.99024963]
[0.89558929 146.24797058]
[-15.38126469 144.24896240]
[-21.53855133 129.04962158]
[-11.24218082 116.28572845]
[4.91582298 119.08769226]
[18.81837845 113.45573425]
[32.72093582 107.82377625]
[46.62348938 102.19181824]
[60.52604675 96.55986023]
[74.42860413 90.92790222]
[82.78011322 88.46459961]
[90.43692017 89.34105682]
[96.33193207 92.98777008]
[101.81896973 79.02737427]
[107.30599976 65.06698608]
[112.79302979 51.10659790]
[118.28005981 37.14620590]
[108.29159546 23.26333618]
[110.73516083 4.45697403]
[97.64200592 -2.86213183]
[84.54885864 -10.18123722]
[68.78228760 -7.21561384]
[56.72797012 -17.80206680]
[57.63294220 -33.81957626]
[70.80298615 -42.98087692]
[86.13517761 -38.25820541]
[91.86795807 -23.27439117]
[104.96111298 -15.95528603]
[118.05426788 -8.63618088]
[132.62696838 -12.19094276]
[140.87925720 -24.71690369]
[148.86917114 -37.41183472]
[156.59326172 -50.27023697]
[164.31735229 -63.12863922]
[172.04142761 -75.98703766]
[177.67338562 -89.88959503]
[181.07637024 -104.49848938]
[171.56661987 -119.14437866]
[175.48278809 -135.81614685]
[189.93869019 -144.35339355]
[193.03701782 -159.02992249]
[196.13533020 -173.70643616]
[199.23365784 -188.38296509]
[202.33198547 -203.05949402]
[189.02340698 -210.20501709]
[178.26800537 -220.81153870]
[170.93769836 -234.01922607]
[167.62669373 -248.75740051]
[168.60340881 -263.83132935]
[173.78868103 -278.01898193]
[182.76213074 -290.17025757]
[194.79635620 -299.30010986]
[208.91575623 -304.66842651]
[223.97578430 -305.84002686]
[238.75555420 -302.71990967]
[252.05694580 -295.56100464]
[262.80166626 -284.94369507]
[270.11871338 -271.72863770]
[273.41491699 -256.98715210]
[272.42303467 -241.91423035]
[267.22354126 -227.73178101]
[258.23788452 -215.58952332]
[246.19448853 -206.47175598]
[232.06968689 -201.11763000]
[217.00849915 -199.96116638]
[213.91018677 -185.28465271]
[210.81185913 -170.60812378]
[207.71354675 -155.93159485]
[204.61521912 -141.25506592]
[213.10734558 -131.51440430]
[214.43849182 -118.46440887]
[207.89642334 -106.87004852]
[195.68525696 -101.09551239]
[192.28228760 -86.48661804]
[203.05308533 -76.04680634]
[217.54869080 -79.90396881]
[232.04428101 -83.76112366]
[246.53988647 -87.61828613]
[261.03549194 -91.47544098]
[274.78720093 -101.39140320]
[288.12249756 -90.92210388]
[281.75393677 -75.20976257]
[264.89263916 -76.97985077]
[250.39703369 -73.12268829]
[235.90144348 -69.26552582]
[221.40585327 -65.40837097]
[206.91024780 -61.55120850]
[197.85502625 -61.24800491]
[190.26583862 -63.76026154]
[184.89984131 -68.26295471]
[177.17575073 -55.40455246]
[169.45166016 -42.54615021]
[161.72758484 -29.68774986]
[162.01348877 -24.86138725]
[159.22572327 -19.81563377]
[153.40522766 -16.46461487]
[145.15293884 -3.93865323]
[157.96365356 15.31833839]
[151.17422485 35.84566498]
[132.24044800 42.63323975]
[126.75341797 56.59362793]
[121.26638794 70.55401611]
[115.77935791 84.51441193]
[110.29232788 98.47480011]
[107.50000000 113.21260834]
[107.50000000 128.21260071]
[107.50000000 143.21260071]
[107.50000000 158.21260071]
[107.50000000 173.21260071]
[107.50000000 188.21260071]
[107.50000000 203.21260071]
[107.50000000 218.21260071]
[107.50000000 233.21260071]
[107.50000000 248.21260071]
[122.03988647 252.27391052]
[134.94427490 260.10842896]
[145.25555420 271.13476562]
[152.20857239 284.53469849]
[155.28736877 299.31384277]
[154.26348877 314.37551880]
[149.21287537 328.60205078]
[140.51036072 340.93771362]
[128.80169678 350.46713257]
[114.95575714 356.48315430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[45 55]
[46 54]
[47 53]
[56 123]
[57 122]
[58 119]
[59 118]
[60 117]
[61 116]
[62 100]
[63 99]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
