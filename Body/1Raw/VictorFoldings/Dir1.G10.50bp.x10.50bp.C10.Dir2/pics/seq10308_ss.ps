%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAUCCUCGGGGGGGGGGAUUACUAUUCUGCCUAGCAAACUCAAACUACGAACGCACUCACAGUCGCAxxxxxxxxxxAACACAGCAGCCAUUCAAGCAAUCCUAUACAACCGUAUCGGCGAUAUCGGCCCCCCCCCCUUUCAUCCUC\
) } def
/len { sequence length } bind def

/coor [
[69.38815308 338.75183105]
[56.82992935 330.40069580]
[46.74370575 319.18823242]
[39.76351166 305.81933594]
[36.32812881 291.13433838]
[36.65350723 276.05636597]
[40.71919250 261.53326416]
[48.26961136 248.47792053]
[58.83013916 237.71101379]
[71.73693085 229.90939331]
[86.17866516 225.56343079]
[85.55468750 210.57641602]
[84.93070984 195.58940125]
[84.30673218 180.60238647]
[83.68275452 165.61537170]
[83.05877686 150.62835693]
[82.43479919 135.64134216]
[81.81082153 120.65431976]
[83.68222046 90.92236328]
[75.69229889 78.22743225]
[67.70238495 65.53250885]
[59.71246719 52.83757782]
[51.72255325 40.14264679]
[37.82343674 32.58452606]
[37.59241486 17.69171143]
[29.60249901 4.99678087]
[21.22035599 -7.44265938]
[12.45414829 -19.61449623]
[-4.49079943 -26.74531746]
[-5.64141321 -44.22891235]
[-14.65894318 -56.21574402]
[-23.67647362 -68.20257568]
[-32.69400406 -80.18940735]
[-45.64446259 -72.58787537]
[-59.37702942 -66.51215363]
[-73.71267700 -62.04147339]
[-88.46450806 -59.23410416]
[-103.44019318 -58.12664795]
[-118.44451141 -58.73355103]
[-133.28182983 -61.04689026]
[-147.75874329 -65.03651428]
[-161.68647766 -70.65040588]
[-174.88348389 -77.81537628]
[-187.17770386 -86.43801880]
[-198.40885925 -96.40591431]
[-208.43051147 -107.58911896]
[-217.11204529 -119.84182739]
[-224.34024048 -133.00431824]
[-230.02088928 -146.90495300]
[-234.07991028 -161.36254883]
[-236.46440125 -176.18861389]
[-237.14328003 -191.18984985]
[-236.10768127 -206.17066956]
[-233.37110901 -220.93580627]
[-228.96925354 -235.29272461]
[-222.95948792 -249.05429077]
[-215.42016602 -262.04107666]
[-206.44956970 -274.08374023]
[-196.16467285 -285.02536011]
[-184.69953918 -294.72320557]
[-172.20364380 -303.05090332]
[-158.83990479 -309.89984131]
[-144.78253174 -315.18078613]
[-130.21481323 -318.82482910]
[-115.32664490 -320.78451538]
[-100.31214142 -321.03424072]
[-85.36704254 -319.57080078]
[-70.68618011 -316.41323853]
[-56.46096039 -311.60272217]
[-42.87683487 -305.20199585]
[-30.11090279 -297.29449463]
[-18.32958984 -287.98330688]
[-7.68649149 -277.38980103]
[1.67963719 -265.65209961]
[9.64668941 -252.92324829]
[16.11079979 -239.36917114]
[20.98769379 -225.16658020]
[24.21379089 -210.50062561]
[25.74703217 -195.56253052]
[25.56743050 -180.54701233]
[23.67732620 -165.64985657]
[20.10136032 -151.06527710]
[14.88615417 -136.98338318]
[8.09969807 -123.58779907]
[-0.16953364 -111.05314636]
[-9.81373310 -99.54283905]
[-20.70717049 -89.20693970]
[-11.68964005 -77.22010803]
[-2.67211032 -65.23327637]
[6.34541941 -53.24644089]
[18.31298828 -51.22539520]
[25.91815567 -41.25642395]
[24.62598419 -28.38070297]
[33.39219284 -16.20886612]
[36.86128998 -15.29626751]
[40.04523849 -12.61967373]
[42.10211563 -8.33929634]
[42.29742813 -2.99313521]
[50.28734589 9.70179462]
[63.61496735 16.35189056]
[64.41748047 32.15272903]
[72.40739441 44.84766006]
[80.39731598 57.54259109]
[88.38722992 70.23751831]
[96.37714386 82.93244934]
[95.49738312 67.95826721]
[103.96782684 55.57878876]
[118.24372864 50.97461319]
[132.35087585 56.07251740]
[140.38563538 68.73911285]
[138.98559570 83.67363739]
[128.73664856 94.62622833]
[113.92658234 97.01319122]
[128.05139160 102.06195068]
[142.17619324 107.11070251]
[156.35275269 112.01225281]
[170.57952881 116.76606750]
[184.80630493 121.51988220]
[199.03308105 126.27369690]
[215.97195435 125.55879211]
[221.34806824 141.63777161]
[207.38571167 151.25489807]
[194.27926636 140.50047302]
[180.05249023 135.74665833]
[165.82571411 130.99284363]
[151.59893799 126.23903656]
[144.21037292 127.10780334]
[137.12742615 121.23550415]
[123.00263214 116.18675232]
[108.87782288 111.13799286]
[96.79783630 120.03034210]
[97.42181396 135.01736450]
[98.04579163 150.00437927]
[98.66976929 164.99139404]
[99.29374695 179.97840881]
[99.91772461 194.96542358]
[100.54170227 209.95243835]
[101.16567993 224.93945312]
[115.91868591 228.06990051]
[129.42932129 234.77165222]
[140.84829712 244.62344360]
[149.45780945 257.00598145]
[154.71665955 271.14086914]
[156.29426575 286.13961792]
[154.09146118 301.05932617]
[148.24671936 314.96221924]
[139.12742615 326.97427368]
[127.30686188 336.34042358]
[113.52805328 342.47192383]
[98.65715027 344.98330688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[25 99]
[26 98]
[27 94]
[28 93]
[30 90]
[31 89]
[32 88]
[33 87]
[113 130]
[114 129]
[115 128]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
