%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUAACAAAGGGGGGGGGGAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACxxxxxxxxxxAAACACAAACUACCACCUACCUCCCUCACCAAAGCCCAUAAAAAUAAAAACCCCCCCCCCAUUAUAACAAA\
) } def
/len { sequence length } bind def

/coor [
[229.02008057 166.25199890]
[221.63888550 160.33976746]
[214.55781555 154.07107544]
[207.79408264 147.46113586]
[201.36410522 140.52601624]
[195.28350830 133.28251648]
[189.56703186 125.74823761]
[184.22860718 117.94146729]
[179.28115845 109.88114929]
[174.73672485 101.58685303]
[170.60633850 93.07871246]
[166.90003967 84.37737274]
[152.75271606 89.36270142]
[138.60539246 94.34802246]
[124.45808411 99.33334351]
[110.31076813 104.31866455]
[96.21537781 109.44896698]
[82.17340088 114.72370911]
[68.13142395 119.99845123]
[54.08944702 125.27319336]
[40.04747391 130.54792786]
[35.91162109 143.40501404]
[25.26914406 151.39993286]
[12.15868378 151.78013611]
[1.39566433 144.63102722]
[-12.75165176 149.61636353]
[-26.89896774 154.60168457]
[-35.09693146 168.39199829]
[-51.00900269 170.43786621]
[-62.42879868 159.16987610]
[-60.59603500 143.23184204]
[-46.91664505 134.85008240]
[-31.88429070 140.45436096]
[-17.73697472 135.46903992]
[-3.58965755 130.48371887]
[2.99137759 115.03726196]
[19.01241493 108.98268127]
[34.77273178 116.50595856]
[48.81470871 111.23121643]
[62.85668182 105.95647430]
[76.89865875 100.68173218]
[90.94063568 95.40699005]
[96.82182312 89.81650543]
[105.32544708 90.17134857]
[119.47276306 85.18602753]
[133.62007141 80.20070648]
[147.76739502 75.21537781]
[161.91471863 70.23005676]
[154.15507507 30.70964813]
[154.81338501 -9.55380726]
[163.85806274 -48.78743744]
[180.88835144 -85.26424408]
[205.15203857 -117.37915039]
[194.60002136 -128.04005432]
[184.04800415 -138.70097351]
[168.09552002 -142.50236511]
[163.67134094 -158.29344177]
[175.32666016 -169.82971191]
[191.07148743 -165.24363708]
[194.70890808 -149.25297546]
[205.26092529 -138.59207153]
[215.81294250 -127.93115997]
[222.93873596 -134.13902283]
[230.36174011 -139.98840332]
[238.06391907 -145.46505737]
[246.02656555 -150.55572510]
[254.23037720 -155.24800110]
[262.65542603 -159.53051758]
[271.28125000 -163.39286804]
[280.08691406 -166.82565308]
[289.05105591 -169.82054138]
[298.15191650 -172.37025452]
[307.36740112 -174.46859741]
[316.67510986 -176.11047363]
[326.05245972 -177.29187012]
[335.47671509 -178.00993347]
[344.92492676 -178.26289368]
[354.37423706 -178.05015564]
[363.80166626 -177.37220764]
[373.18432617 -176.23069763]
[382.49942017 -174.62838745]
[391.72436523 -172.56915283]
[400.83673096 -170.05799866]
[409.81439209 -167.10102844]
[418.63558960 -163.70538330]
[427.27886963 -159.87930298]
[435.72326660 -155.63209534]
[443.94824219 -150.97406006]
[451.93386841 -145.91647339]
[459.66073608 -140.47164917]
[467.11004639 -134.65277100]
[474.26376343 -128.47396851]
[481.10446167 -121.95023346]
[487.61557007 -115.09741211]
[493.78128052 -107.93212891]
[499.58657837 -100.47177887]
[505.01739502 -92.73446655]
[510.06051636 -84.73896790]
[514.70373535 -76.50470734]
[518.93572998 -68.05165863]
[522.74621582 -59.40035248]
[526.12597656 -50.57178116]
[529.06677246 -41.58737946]
[531.56140137 -32.46895981]
[533.60394287 -23.23865509]
[535.18927002 -13.91887569]
[536.31365967 -4.53224897]
[536.97430420 4.89843845]
[537.16961670 14.35029030]
[536.89910889 23.80035973]
[536.16345215 33.22570038]
[534.96435547 42.60343170]
[533.30480957 51.91078568]
[531.18878174 61.12516022]
[528.62139893 70.22418213]
[525.60894775 79.18576813]
[522.15863037 87.98814392]
[518.27893066 96.60994720]
[513.97924805 105.03023529]
[509.26992798 113.22856903]
[504.16247559 121.18503571]
[498.66925049 128.88032532]
[492.80358887 136.29573059]
[486.57974243 143.41325378]
[480.01278687 150.21562195]
[473.11868286 156.68629456]
[465.91418457 162.80957031]
[458.41671753 168.57057190]
[450.64456177 173.95530701]
[442.61651611 178.95069885]
[434.35208130 183.54461670]
[425.87133789 187.72589111]
[417.19485474 191.48437500]
[408.34368896 194.81092834]
[399.33938599 197.69747925]
[390.20370483 200.13699341]
[380.95892334 202.12356567]
[371.62741089 203.65235901]
[362.23187256 204.71963501]
[352.79507446 205.32281494]
[343.33996582 205.46043396]
[333.88949585 205.13214111]
[324.46658325 204.33871460]
[315.09411621 203.08209229]
[305.79486084 201.36531067]
[296.59140015 199.19253540]
[287.50607300 196.56903076]
[278.56094360 193.50114441]
[269.77770996 189.99635315]
[261.17773438 186.06314087]
[252.78186035 181.71104431]
[244.61048889 176.95062256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 48]
[13 47]
[14 46]
[15 45]
[16 44]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[25 35]
[26 34]
[27 33]
[53 62]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
