%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACACUUAUCGGGGGGGGGGAUCUUCACAAUUCUAAUUCUACUGACUAUCCUAGAAAUCGCUGUCGCCUUxxxxxxxxxxUAUAACAUUCACAGCCACAGAACUAAUCAUAUUUUAUAUCUUCUUCGAAACCCCCCCCCCCCACACUUAUC\
) } def
/len { sequence length } bind def

/coor [
[124.44669342 476.68051147]
[110.42475128 471.12750244]
[98.22479248 462.26116943]
[88.61372375 450.63885498]
[82.19569397 436.99114990]
[79.37416077 422.17596436]
[80.32647705 407.12460327]
[84.99278259 392.78317261]
[93.07975006 380.05322266]
[104.07902527 369.73495483]
[117.29917908 362.47695923]
[131.90919495 358.73553467]
[131.90919495 343.73553467]
[131.90919495 328.73553467]
[131.90919495 313.73553467]
[131.90919495 298.73553467]
[131.90919495 283.73553467]
[131.90919495 268.73553467]
[131.90919495 253.73553467]
[131.90919495 238.73553467]
[131.90919495 223.73553467]
[122.31855774 209.07046509]
[131.57673645 193.18597412]
[131.26875305 178.18913269]
[127.31214905 163.72036743]
[119.94590759 150.65367126]
[112.57966614 137.58697510]
[97.26537323 139.54176331]
[82.36596680 135.49746704]
[70.14190674 126.06766510]
[62.44776535 112.68300629]
[60.45086670 97.37414551]
[45.94224167 93.56629181]
[31.43361664 89.75843048]
[16.92499161 85.95056915]
[2.41636610 82.14271545]
[-6.19383097 94.61830139]
[-18.55347061 103.39412689]
[-33.17006302 107.41046906]
[-48.27858734 106.18233490]
[-62.05461121 99.85802460]
[-72.83461761 89.20122528]
[-79.31686401 75.49880981]
[-80.71859741 60.40540314]
[-76.87053680 45.74360657]
[-68.23736572 33.28390503]
[-55.86157227 24.53087044]
[-41.23760223 20.54147339]
[-26.13136673 21.79745102]
[-12.36701965 28.14713860]
[-1.60667050 38.82378006]
[4.85031509 52.53812027]
[6.22422504 67.63408661]
[20.73285103 71.44194794]
[35.24147415 75.24980164]
[49.75010300 79.05766296]
[64.25872803 82.86552429]
[69.70796204 74.43788910]
[77.09923553 67.64904785]
[85.95868683 62.93424225]
[95.71832275 60.59573364]
[96.94893646 45.64629745]
[98.17955017 30.69686508]
[99.41016388 15.74742985]
[100.64077759 0.79799539]
[86.27618408 -3.74141073]
[73.28211975 -11.36387730]
[62.31035233 -21.68706322]
[53.91123581 -34.19316483]
[48.50605392 -48.25487518]
[46.36593628 -63.16687393]
[47.59822464 -78.18117523]
[52.14111328 -92.54466248]
[59.76672745 -105.53688049]
[70.09257507 -116.50614166]
[82.60070801 -124.90222931]
[96.66372681 -130.30400085]
[111.57624054 -132.44050598]
[126.59024811 -131.20458984]
[140.95263672 -126.65821838]
[153.94300842 -119.02945709]
[164.90975952 -108.70095062]
[173.30282593 -96.19078064]
[178.70118713 -82.12644958]
[180.83407593 -67.21341705]
[179.59451294 -52.19971848]
[175.04466248 -37.83842850]
[167.41275024 -24.84990883]
[157.08160400 -13.88565350]
[144.56939697 -5.49562740]
[130.50375366 -0.10067081]
[115.59020996 2.02860785]
[114.35959625 16.97804260]
[113.12898254 31.92747688]
[111.89836884 46.87691116]
[110.66776276 61.82634735]
[125.70310211 69.82750702]
[135.99253845 83.39981079]
[139.63618469 100.03723907]
[135.96128845 116.66778564]
[125.64636230 130.22073364]
[133.01260376 143.28742981]
[140.37884521 156.35412598]
[140.80770874 141.36026001]
[144.74740601 126.88687897]
[151.97737122 113.74429321]
[162.09284973 102.66831970]
[174.52748108 94.27904510]
[188.58509827 89.04615784]
[203.47869873 87.26263428]
[218.37440491 89.02832031]
[232.43829346 94.24436188]
[244.88296509 102.61874390]
[255.01168823 113.68260193]
[262.25738525 126.81651306]
[266.21441650 141.28517151]
[266.66125488 156.27850342]
[263.57284546 170.95712280]
[257.12210083 184.49920654]
[247.67018127 196.14659119]
[235.74629211 205.24716187]
[222.01797485 211.29144287]
[207.25382996 213.94102478]
[192.28047180 213.04757690]
[177.93617249 208.66108704]
[165.02403259 201.02717590]
[154.26695251 190.57321167]
[146.26559448 177.88116455]
[146.57357788 192.87799072]
[155.34304810 202.39114380]
[155.25685120 214.92764282]
[146.90919495 223.73553467]
[146.90919495 238.73553467]
[146.90919495 253.73553467]
[146.90919495 268.73553467]
[146.90919495 283.73553467]
[146.90919495 298.73553467]
[146.90919495 313.73553467]
[146.90919495 328.73553467]
[146.90919495 343.73553467]
[146.90919495 358.73553467]
[161.51921082 362.47695923]
[174.73936462 369.73495483]
[185.73864746 380.05322266]
[193.82560730 392.78317261]
[198.49191284 407.12460327]
[199.44422913 422.17596436]
[196.62269592 436.99114990]
[190.20466614 450.63885498]
[180.59359741 462.26116943]
[168.39363098 471.12750244]
[154.37168884 476.68051147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 129]
[24 128]
[25 103]
[26 102]
[27 101]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
