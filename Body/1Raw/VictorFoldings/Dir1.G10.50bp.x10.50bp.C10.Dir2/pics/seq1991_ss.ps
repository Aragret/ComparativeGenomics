%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAAUAAAGGGGGGGGGGGUAUAGGCGAUAGAAAUUGAAACCUGGCGCAAUAGAUAUAGUACCGCAAGxxxxxxxxxxUUGUAUUUCAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCCCCCCCCCCCUAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[86.57479858 486.09085083]
[73.35460663 478.81838989]
[62.46780014 468.37136841]
[54.65666962 455.46212769]
[50.45378876 440.97082520]
[50.14571762 425.88546753]
[53.75345612 411.23464966]
[61.03103256 398.01727295]
[71.48223877 387.13449097]
[84.39450073 379.32833862]
[98.88743591 375.13107300]
[98.57537842 360.13430786]
[98.26332092 345.13757324]
[97.95127106 330.14080811]
[97.63921356 315.14404297]
[97.32715607 300.14730835]
[97.01509857 285.15054321]
[96.70304108 270.15377808]
[96.39098358 255.15704346]
[96.07893372 240.16027832]
[95.76687622 225.16352844]
[95.45481873 210.16677856]
[92.14986420 203.50172424]
[95.29553223 194.85552979]
[95.29553223 179.85552979]
[95.29553223 164.85552979]
[94.67155457 149.86851501]
[93.42468262 134.92042542]
[92.17781067 119.97234344]
[80.49968719 106.32534027]
[83.54143524 89.44635010]
[75.81735229 76.58795166]
[68.09326172 63.72954941]
[63.41037369 61.14302063]
[60.51856232 57.37608337]
[59.56653976 53.32696915]
[60.31740570 49.81930542]
[53.41040802 36.50415039]
[46.50340652 23.18899536]
[39.59640884 9.87384033]
[32.68941116 -3.44131541]
[25.50690079 -16.60989761]
[18.05199051 -29.62620735]
[9.03446102 -41.61304092]
[-1.40535104 -52.38385010]
[-16.56589699 -56.90805054]
[-19.86812019 -71.43198395]
[-30.30793381 -82.20278931]
[-40.74774551 -92.97360229]
[-54.71478271 -87.03337097]
[-69.88463593 -86.54365540]
[-84.20571899 -91.57067871]
[-95.74121857 -101.43459320]
[-102.93105316 -114.80136871]
[-104.80285645 -129.86326599]
[-101.10347748 -144.58328247]
[-92.33323669 -156.97067261]
[-79.67823029 -165.35012817]
[-64.84993744 -168.58839417]
[-49.85378265 -166.24752808]
[-36.71785736 -158.64411926]
[-27.21868896 -146.80645752]
[-22.64096642 -132.33547974]
[-23.60378647 -117.18829346]
[-29.97693634 -103.41341400]
[-19.53712463 -92.64260101]
[-9.09731197 -81.87179565]
[5.31650877 -78.11799622]
[9.36545753 -62.82366180]
[19.80526924 -52.05285263]
[17.59313202 -66.88883972]
[21.92210197 -81.25059509]
[31.96465302 -92.39273071]
[45.80105209 -98.18531036]
[60.78633499 -97.52104187]
[74.05592346 -90.52688599]
[83.07318878 -78.53985596]
[86.11441040 -63.85139465]
[82.59821320 -49.26933670]
[73.19676208 -37.58119202]
[59.70723724 -31.02126503]
[44.70829010 -30.84354782]
[31.06830025 -37.08111954]
[38.52321243 -24.06480789]
[42.87553787 -21.95939827]
[45.91959381 -17.06398964]
[46.00456619 -10.34831429]
[52.91156387 2.96684170]
[59.81856155 16.28199768]
[66.72556305 29.59715271]
[73.63256073 42.91230774]
[80.95166779 56.00546265]
[88.67575073 68.86386871]
[96.39983368 81.72226715]
[110.85452271 85.73001099]
[124.09710693 78.68487549]
[124.54938507 63.33264160]
[132.63082886 50.27179337]
[146.16758728 43.01562881]
[161.51832581 43.51601791]
[174.55377197 51.63836670]
[181.76747131 65.19779205]
[181.21896362 80.54689026]
[173.05580139 93.55682373]
[159.47383118 100.72798157]
[144.12652588 100.13136292]
[131.14224243 91.92745972]
[117.89965820 98.97259521]
[131.81195068 93.36473846]
[146.61550903 95.78443146]
[158.01821899 105.53010559]
[162.71401978 119.77613068]
[159.34144592 134.39207458]
[148.87831116 145.14022827]
[134.35826111 148.90429688]
[119.99120331 144.59295654]
[109.94266510 133.45622253]
[107.12589264 118.72546387]
[108.37277222 133.67355347]
[109.61964417 148.62164307]
[112.31964874 152.20932007]
[113.56967926 156.08340454]
[113.46257782 159.73995972]
[112.24919891 162.76017761]
[110.29553223 164.85552979]
[110.29553223 179.85552979]
[110.29553223 194.85552979]
[110.45156860 209.85472107]
[110.76362610 224.85147095]
[111.07568359 239.84822083]
[111.38774109 254.84498596]
[111.69979858 269.84173584]
[112.01185608 284.83850098]
[112.32390594 299.83523560]
[112.63596344 314.83200073]
[112.94802094 329.82873535]
[113.26007843 344.82550049]
[113.57213593 359.82226562]
[113.88419342 374.81900024]
[128.53918457 378.40979004]
[141.76498413 385.67202759]
[152.65986633 396.11062622]
[160.48095703 409.01385498]
[164.69502258 423.50192261]
[165.01475525 438.58700562]
[161.41831970 453.24060059]
[154.15095520 466.46362305]
[143.70816040 477.35446167]
[130.80192566 485.17056274]
[116.31224060 489.37902832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[24 127]
[25 126]
[26 125]
[27 120]
[28 119]
[29 118]
[31 94]
[32 93]
[33 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 84]
[43 83]
[44 70]
[45 69]
[47 67]
[48 66]
[49 65]
[95 108]
[96 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
