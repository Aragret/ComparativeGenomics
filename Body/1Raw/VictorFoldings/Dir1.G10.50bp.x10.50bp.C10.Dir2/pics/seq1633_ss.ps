%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUCUACCGGGGGGGGGGCCAGAAAACUACGAUAGCCCUUAUGAAACUUAAGGGUCGAAGGUGGAUUUxxxxxxxxxxUACUCUACCAUCUUUGCAGGCACACUCAUCACAGCGCUAAGCUCGCACUGCCCCCCCCCCAUUUUUUACC\
) } def
/len { sequence length } bind def

/coor [
[87.68666840 406.44531250]
[73.84073639 400.42929077]
[62.13207245 390.89987183]
[53.42954636 378.56420898]
[48.37894440 364.33767700]
[47.35505295 349.27600098]
[50.43385315 334.49685669]
[57.38687515 321.09692383]
[67.69815826 310.07058716]
[80.60253906 302.23608398]
[95.14242554 298.17477417]
[95.14242554 283.17477417]
[95.14242554 268.17477417]
[95.14242554 253.17477417]
[95.14242554 238.17477417]
[95.14242554 223.17477417]
[95.14242554 208.17477417]
[95.14242554 193.17477417]
[95.14242554 178.17477417]
[95.14242554 163.17477417]
[95.14242554 148.17477417]
[91.97684479 141.44239807]
[95.30171204 132.86352539]
[95.61376190 117.86676788]
[88.15008545 130.87805176]
[80.43726349 143.74320984]
[66.18696594 148.42605591]
[52.34630966 142.64363098]
[45.66272736 129.21495056]
[49.39451218 114.68656921]
[61.72256470 106.14115143]
[76.48683929 103.49233246]
[62.26005936 98.73851776]
[48.03328323 93.98470306]
[42.79312897 95.06191254]
[38.14723587 94.07801056]
[34.79234314 91.61907196]
[33.08362198 88.46506500]
[19.18106461 82.83311462]
[5.27850866 77.20115662]
[-8.62404728 71.56919861]
[-22.52660370 65.93724060]
[-36.42916107 60.30528259]
[-50.15739059 67.79325867]
[-65.47670746 64.65438080]
[-75.15379333 52.37073135]
[-74.61943054 36.74228287]
[-64.12593079 25.14830208]
[-48.62799454 23.06311607]
[-35.44327927 31.47128487]
[-30.79720306 46.40272903]
[-16.89464760 52.03468323]
[-2.99209094 57.66664124]
[10.91046524 63.29859924]
[24.81302071 68.93055725]
[38.71557617 74.56251526]
[52.78709793 79.75792694]
[67.01387787 84.51174164]
[81.24065399 89.26555634]
[93.68009186 80.88341522]
[94.61572266 65.91262054]
[95.55135345 50.94182968]
[96.48698425 35.97103882]
[97.42260742 21.00024796]
[98.35823822 6.02945614]
[99.29386902 -8.94133568]
[85.03561401 -13.90166950]
[72.64504242 -22.52583694]
[63.04160690 -34.17386627]
[56.93794632 -47.98139572]
[54.78699875 -62.92382050]
[56.74837112 -77.89230347]
[62.67652130 -91.77610016]
[72.13153839 -103.54492188]
[84.41180420 -112.32545471]
[98.60603333 -117.46611786]
[113.66091919 -118.58544922]
[128.45928955 -115.60037994]
[141.90301514 -108.73242950]
[152.99449158 -98.49123383]
[160.91062927 -85.63676453]
[165.06401062 -71.12290955]
[165.14642334 -56.02669525]
[161.15177917 -41.46835327]
[153.37646484 -28.52821541]
[142.39749146 -18.16652298]
[129.02955627 -11.15218353]
[114.26465607 -8.00570679]
[113.32902527 6.96508455]
[112.39340210 21.93587685]
[111.45777130 36.90666580]
[110.52214050 51.87746048]
[109.58651733 66.84825134]
[108.65088654 81.81903839]
[119.42169189 92.25885773]
[134.35600281 90.85655212]
[149.29031372 89.45424652]
[157.60455322 85.51404572]
[164.54939270 88.18143463]
[151.61006165 80.59370422]
[142.78381348 68.46533203]
[139.54307556 53.81959152]
[142.42849731 39.09972763]
[150.95867920 26.76133919]
[163.71063232 18.86274910]
[178.55703735 16.72161865]
[193.02116394 20.69513702]
[204.69009399 30.12043190]
[211.61717224 43.42515182]
[212.64682007 58.38977051]
[207.60725403 72.51785278]
[197.33918762 83.45252228]
[183.55697632 89.36934662]
[198.26493835 92.31482697]
[212.97290039 95.26031494]
[227.06733704 87.59700775]
[241.78984070 93.97097778]
[245.84655762 109.49266052]
[236.12553406 122.25514221]
[220.08389282 122.46814728]
[210.02742004 109.96827698]
[195.31945801 107.02278900]
[180.61149597 104.07730865]
[165.64070129 103.14167786]
[150.69261169 104.38855743]
[135.75830078 105.79085541]
[120.82399750 107.19316101]
[110.61051941 118.17882538]
[110.29846191 133.17558289]
[110.14242554 148.17477417]
[110.14242554 163.17477417]
[110.14242554 178.17477417]
[110.14242554 193.17477417]
[110.14242554 208.17477417]
[110.14242554 223.17477417]
[110.14242554 238.17477417]
[110.14242554 253.17477417]
[110.14242554 268.17477417]
[110.14242554 283.17477417]
[110.14242554 298.17477417]
[124.68231201 302.23608398]
[137.58670044 310.07058716]
[147.89797974 321.09692383]
[154.85099792 334.49685669]
[157.92979431 349.27600098]
[156.90591431 364.33767700]
[151.85530090 378.56420898]
[143.15278625 390.89987183]
[131.44412231 400.42929077]
[117.59818268 406.44531250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[24 128]
[32 59]
[33 58]
[34 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[95 127]
[96 126]
[97 125]
[99 124]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
