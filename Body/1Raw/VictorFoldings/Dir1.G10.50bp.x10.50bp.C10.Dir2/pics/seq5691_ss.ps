%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUCCACCUGGGGGGGGGGCAAUCACACUACUCCCCAUAUCUAACAACGUAAAAAUAAAAUGACAGUUUxxxxxxxxxxCACACCGCACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCCCCCCCCCCCUACUCCUCCU\
) } def
/len { sequence length } bind def

/coor [
[67.99060822 158.68273926]
[55.73589325 150.08944702]
[45.70041656 138.98486328]
[38.38732910 125.92572021]
[34.16327286 111.56674957]
[33.24003601 96.62786865]
[35.66389847 81.85805511]
[41.31333923 67.99781036]
[49.90511703 55.74204254]
[61.00846863 45.70520401]
[74.06671906 38.39051056]
[88.42516327 34.16469574]
[87.50175476 19.19314575]
[86.57833862 4.22159481]
[85.65492249 -10.74995518]
[84.73151398 -25.72150421]
[83.80809784 -40.69305420]
[82.88468170 -55.66460419]
[81.96127319 -70.63615417]
[81.03785706 -85.60770416]
[80.11444092 -100.57925415]
[79.19103241 -115.55080414]
[78.26761627 -130.52235413]
[63.26312256 -130.49581909]
[48.28389740 -131.36665344]
[33.38356400 -133.13175964]
[18.61546326 -135.78480530]
[4.03245783 -139.31629944]
[-10.31324673 -143.71360779]
[-24.37029648 -148.96098328]
[-38.08837128 -155.03962708]
[-51.41836166 -161.92779541]
[-64.31255341 -169.60081482]
[-76.72478485 -178.03125000]
[-88.61061859 -187.18888855]
[-99.92752075 -197.04095459]
[-110.63496399 -207.55220032]
[-120.69462585 -218.68498230]
[-130.07049561 -230.39942932]
[-138.72900391 -242.65364075]
[-146.63916016 -255.40374756]
[-153.77265930 -268.60406494]
[-160.10394287 -282.20739746]
[-165.61035156 -296.16500854]
[-170.27218628 -310.42694092]
[-174.07275391 -324.94213867]
[-176.99844360 -339.65866089]
[-179.03878784 -354.52380371]
[-180.18646240 -369.48437500]
[-180.43739319 -384.48678589]
[-179.79066467 -399.47735596]
[-178.24859619 -414.40243530]
[-175.81669617 -429.20855713]
[-172.50369263 -443.84274292]
[-168.32141113 -458.25259399]
[-163.28485107 -472.38656616]
[-157.41203308 -486.19400024]
[-150.72399902 -499.62551880]
[-143.24465942 -512.63299561]
[-135.00079346 -525.16992188]
[-126.02192688 -537.19140625]
[-116.34020233 -548.65435791]
[-105.99026489 -559.51782227]
[-95.00917816 -569.74285889]
[-83.43624115 -579.29284668]
[-71.31288910 -588.13366699]
[-58.68251801 -596.23358154]
[-45.59033966 -603.56372070]
[-32.08322144 -610.09771729]
[-18.20952034 -615.81225586]
[-4.01889610 -620.68682861]
[10.43785000 -624.70404053]
[25.10896683 -627.84948730]
[39.94193649 -630.11193848]
[54.88365936 -631.48321533]
[69.88064575 -631.95849609]
[84.87921143 -631.53601074]
[99.82566833 -630.21728516]
[114.66651154 -628.00708008]
[129.34860229 -624.91333008]
[143.81941223 -620.94702148]
[158.02709961 -616.12237549]
[171.92082214 -610.45672607]
[185.45085144 -603.97027588]
[198.56875610 -596.68634033]
[211.22755432 -588.63085938]
[223.38195801 -579.83276367]
[234.98843384 -570.32354736]
[246.00543213 -560.13726807]
[256.39355469 -549.31030273]
[266.11557007 -537.88146973]
[275.13668823 -525.89172363]
[283.42462158 -513.38385010]
[290.94967651 -500.40277100]
[297.68496704 -486.99490356]
[303.60635376 -473.20819092]
[308.69262695 -459.09207153]
[312.92556763 -444.69702148]
[316.29006958 -430.07458496]
[318.77407837 -415.27709961]
[320.36865234 -400.35754395]
[321.06814575 -385.36935425]
[320.87002563 -370.36614990]
[319.77499390 -355.40164185]
[317.78698730 -340.52941895]
[314.91311646 -325.80267334]
[311.16366577 -311.27420044]
[306.55206299 -296.99594116]
[301.09481812 -283.01904297]
[294.81143188 -269.39349365]
[287.72445679 -256.16815186]
[279.85922241 -243.39028931]
[271.24389648 -231.10568237]
[261.90930176 -219.35829163]
[251.88890076 -208.19017029]
[241.21852112 -197.64131165]
[229.93635559 -187.74946594]
[218.08282471 -178.55004883]
[205.70034790 -170.07600403]
[192.83325195 -162.35763550]
[179.52758789 -155.42259216]
[165.83097839 -149.29570007]
[151.79249573 -143.99888611]
[137.46235657 -139.55111694]
[122.89186859 -135.96832275]
[108.13319397 -133.26330566]
[93.23916626 -131.44577026]
[94.16258240 -116.47422028]
[95.08599091 -101.50267029]
[96.00940704 -86.53112030]
[96.93282318 -71.55957031]
[97.85623169 -56.58801651]
[98.77964783 -41.61646652]
[99.70306396 -26.64491844]
[100.62647247 -11.67336845]
[101.54988861 3.29818153]
[102.47330475 18.26973152]
[103.39671326 33.24127960]
[118.16563416 35.67058182]
[132.02380371 41.32513046]
[144.27639771 49.92142105]
[154.30915833 61.02846909]
[161.61903381 74.08940887]
[165.83956909 88.44940948]
[166.75914001 103.38851929]
[164.33164978 118.15773773]
[158.67880249 132.01660156]
[150.08401489 144.27026367]
[138.97819519 154.30436707]
[125.91815186 161.61585999]
[111.55867004 165.83815002]
[96.61967468 166.75955200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
