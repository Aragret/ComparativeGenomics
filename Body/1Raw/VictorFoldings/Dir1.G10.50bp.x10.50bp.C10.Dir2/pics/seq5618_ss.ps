%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCAUCACGGGGGGGGGGCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCAxxxxxxxxxxGACUCCUACCCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCCCCCCCCCCCACUAUCAC\
) } def
/len { sequence length } bind def

/coor [
[62.65958786 361.12216187]
[49.43938828 353.84970093]
[38.55258560 343.40270996]
[30.74145508 330.49346924]
[26.53857422 316.00213623]
[26.23050117 300.91680908]
[29.83824348 286.26596069]
[37.11581421 273.04858398]
[47.56702423 262.16583252]
[60.47928619 254.35968018]
[74.97222137 250.16238403]
[74.66016388 235.16563416]
[74.34810638 220.16888428]
[74.03605652 205.17211914]
[73.72399902 190.17536926]
[73.41194153 175.17861938]
[73.09988403 160.18186951]
[72.78782654 145.18510437]
[72.47576904 130.18835449]
[68.31788635 115.77613831]
[60.59379959 102.91773987]
[52.86971664 90.05933380]
[39.45125580 96.78002930]
[25.55770302 102.45381927]
[11.27058887 107.04741669]
[-3.32624149 110.53386688]
[-18.14712715 112.89269257]
[-33.10509491 114.11006927]
[-48.11235809 114.17884064]
[-63.08085632 113.09861755]
[-77.92273712 110.87572479]
[-92.55091095 107.52320862]
[-106.87952423 103.06075287]
[-120.82449341 97.51453400]
[-134.30398560 90.91710663]
[-147.23890686 83.30718994]
[-159.55331421 74.72943878]
[-171.17497253 65.23419189]
[-182.03567505 54.87716675]
[-192.07168579 43.71915054]
[-201.22410583 31.82562256]
[-209.43922424 19.26637650]
[-216.66882324 6.11511850]
[-222.87048340 -7.55097485]
[-228.00781250 -21.65170479]
[-232.05065918 -36.10432053]
[-234.97531128 -50.82400894]
[-236.76458740 -65.72438812]
[-237.40798950 -80.71800995]
[-236.90174866 -95.71689606]
[-235.24884033 -110.63301086]
[-232.45893860 -125.37883759]
[-228.54844666 -139.86782837]
[-223.54029846 -154.01495361]
[-217.46389771 -167.73719788]
[-210.35488892 -180.95402527]
[-202.25498962 -193.58789062]
[-193.21173096 -205.56463623]
[-183.27819824 -216.81396484]
[-172.51268005 -227.26989746]
[-160.97834778 -236.87104797]
[-148.74290466 -245.56106567]
[-135.87814331 -253.28897095]
[-122.45955658 -260.00942993]
[-108.56589508 -265.68295288]
[-94.27869415 -270.27627563]
[-79.68179321 -273.76245117]
[-64.86086273 -276.12100220]
[-49.90287781 -277.33807373]
[-34.89561081 -277.40655518]
[-19.92713356 -276.32604980]
[-5.08529329 -274.10287476]
[9.54281521 -270.75009155]
[23.87134552 -266.28735352]
[37.81621170 -260.74087524]
[51.29558182 -254.14320374]
[64.23034668 -246.53303528]
[76.54460144 -237.95504761]
[88.16608429 -228.45957947]
[99.02658844 -218.10235596]
[109.06238556 -206.94415283]
[118.21457672 -195.05044556]
[126.42945099 -182.49104309]
[133.65879822 -169.33964539]
[139.86021423 -155.67343140]
[144.99726868 -141.57261658]
[149.03984070 -127.11991882]
[151.96421814 -112.40017700]
[153.75320435 -97.49976349]
[154.39633179 -82.50612640]
[153.88980103 -67.50725555]
[152.23660278 -52.59116745]
[149.44642639 -37.84539795]
[145.53565979 -23.35648155]
[140.52725220 -9.20944977]
[134.45057678 4.51267958]
[127.34131622 17.72937775]
[119.24118042 30.36308289]
[110.19770050 42.33965302]
[100.26395416 53.58880997]
[89.49823761 64.04453278]
[77.96372986 73.64546204]
[65.72811890 82.33525085]
[73.45220184 95.19365692]
[81.17628479 108.05205536]
[76.62955475 89.22972107]
[90.75518036 70.41897583]
[118.42430115 68.77989960]
[133.38455200 67.68859100]
[146.64112854 58.03483582]
[161.51800537 64.93489838]
[162.71110535 81.29058838]
[148.99308777 90.27657318]
[134.47586060 82.64884186]
[119.51560974 83.74015045]
[117.33877563 98.58135986]
[131.35548401 103.92286682]
[145.37220764 109.26438141]
[159.38891602 114.60589600]
[174.55819702 109.38358307]
[188.02122498 118.10861206]
[189.45033264 134.08789062]
[177.74922180 145.06347656]
[161.89398193 142.61584473]
[154.04739380 128.62260437]
[140.03068542 123.28109741]
[126.01397705 117.93958282]
[111.99726105 112.59806824]
[105.86608124 116.91762543]
[93.60370636 125.55674744]
[87.47252655 129.87629700]
[87.78458405 144.87306213]
[88.09664154 159.86981201]
[88.40869141 174.86656189]
[88.72074890 189.86331177]
[89.03280640 204.86007690]
[89.34486389 219.85682678]
[89.65692139 234.85357666]
[89.96897888 249.85032654]
[104.62397003 253.44110107]
[117.84977722 260.70336914]
[128.74464417 271.14193726]
[136.56573486 284.04516602]
[140.77981567 298.53323364]
[141.09953308 313.61831665]
[137.50311279 328.27194214]
[130.23574829 341.49493408]
[119.79294586 352.38577271]
[106.88671112 360.20187378]
[92.39702606 364.41036987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 105]
[21 104]
[22 103]
[108 115]
[109 114]
[116 128]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
