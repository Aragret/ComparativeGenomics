%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUCUUCAGGGGGGGGGGACAAUAUACUCUCCGGACAAUGAACCAUAACCAAUACUACCAAUCAAUACxxxxxxxxxxGUAACGACCACAUCUACAACGUUAUCGUCACAGCCCAUGCAUUUGUAAUACCCCCCCCCCAUCUUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 354.01312256]
[71.19830322 347.99710083]
[59.48964310 338.46768188]
[50.78712082 326.13201904]
[45.73651886 311.90548706]
[44.71262741 296.84381104]
[47.79142761 282.06463623]
[54.74444962 268.66473389]
[65.05573273 257.63839722]
[77.96011353 249.80387878]
[92.50000000 245.74256897]
[92.50000000 230.74256897]
[92.50000000 215.74256897]
[92.50000000 200.74256897]
[92.50000000 185.74256897]
[92.50000000 170.74256897]
[92.50000000 155.74256897]
[92.50000000 140.74256897]
[92.50000000 125.74256897]
[92.50000000 110.74256897]
[91.87602234 95.75555420]
[90.62915039 80.80746460]
[89.38227081 65.85937500]
[88.13539886 50.91128922]
[73.13353729 51.21736145]
[58.14206314 50.58085251]
[43.22013855 49.00427246]
[28.42665291 46.49384308]
[13.81998920 43.05947495]
[-0.54220355 38.71472168]
[-14.60324574 33.47672653]
[-28.30764389 27.36616898]
[-41.60131454 20.40715599]
[-54.43178940 12.62715816]
[-66.74843597 4.05687761]
[-78.50263977 -5.26986313]
[-89.64801788 -15.31625462]
[-100.14058685 -26.04264832]
[-109.93893433 -37.40671158]
[-119.00437927 -49.36359406]
[-127.30116272 -61.86611176]
[-134.79652405 -74.86491394]
[-141.46090698 -88.30870819]
[-147.26797485 -102.14443970]
[-152.19483948 -116.31749725]
[-156.22204590 -130.77194214]
[-159.33369446 -145.45074463]
[-161.51751709 -160.29595947]
[-162.76487732 -175.24900818]
[-163.07087708 -190.25086975]
[-162.43428040 -205.24234009]
[-160.85762024 -220.16426086]
[-158.34712219 -234.95773315]
[-154.91267395 -249.56437683]
[-150.56784058 -263.92654419]
[-145.32977295 -277.98754883]
[-139.21914673 -291.69192505]
[-132.26007080 -304.98556519]
[-124.48000336 -317.81597900]
[-115.90965271 -330.13259888]
[-106.58285522 -341.88674927]
[-96.53640747 -353.03207397]
[-85.80995941 -363.52459717]
[-74.44583893 -373.32287598]
[-62.48891068 -382.38827515]
[-49.98635101 -390.68496704]
[-36.98750687 -398.18026733]
[-23.54367638 -404.84457397]
[-9.70791912 -410.65158081]
[4.46516228 -415.57836914]
[18.91963387 -419.60549927]
[33.59844589 -422.71707153]
[48.44367218 -424.90081787]
[63.39672470 -426.14810181]
[78.39859009 -426.45401001]
[93.39006042 -425.81735229]
[108.31196594 -424.24060059]
[123.10542297 -421.73004150]
[137.71205139 -418.29550171]
[152.07420349 -413.95059204]
[166.13519287 -408.71246338]
[179.83952332 -402.60177612]
[193.13311768 -395.64260864]
[205.96351624 -387.86248779]
[218.28007507 -379.29208374]
[230.03417969 -369.96520996]
[241.17945862 -359.91870117]
[251.67190552 -349.19219971]
[261.47012329 -337.82803345]
[270.53546143 -325.87106323]
[278.83212280 -313.36843872]
[286.32733154 -300.36956787]
[292.99157715 -286.92568970]
[298.79849243 -273.08990479]
[303.72521973 -258.91680908]
[307.75225830 -244.46231079]
[310.86376953 -229.78347778]
[313.04742432 -214.93824768]
[314.29464722 -199.98518372]
[314.60046387 -184.98332214]
[313.96374512 -169.99185181]
[312.38693237 -155.06996155]
[309.87625122 -140.27650452]
[306.44165039 -125.66989899]
[302.09667969 -111.30777740]
[296.85845947 -97.24681854]
[290.74771118 -83.54251099]
[283.78848267 -70.24895477]
[276.00827026 -57.41859818]
[267.43780518 -45.10208893]
[258.11087036 -33.34802628]
[248.06431580 -22.20280457]
[237.33775330 -11.71040535]
[225.97354126 -1.91223919]
[214.01651001 7.15302467]
[201.51387024 15.44960976]
[188.51493835 22.94477272]
[175.07104492 29.60893440]
[161.23522949 35.41579437]
[147.06208801 40.34243393]
[132.60757446 44.36941147]
[117.92873383 47.48083115]
[103.08348846 49.66441727]
[104.33036041 64.61250305]
[105.57723236 79.56059265]
[106.82411194 94.50867462]
[109.04457092 96.70036316]
[110.49360657 99.76873779]
[110.83758545 103.42081451]
[109.85923004 107.24191284]
[107.50000000 110.74256897]
[107.50000000 125.74256897]
[107.50000000 140.74256897]
[107.50000000 155.74256897]
[107.50000000 170.74256897]
[107.50000000 185.74256897]
[107.50000000 200.74256897]
[107.50000000 215.74256897]
[107.50000000 230.74256897]
[107.50000000 245.74256897]
[122.03988647 249.80387878]
[134.94427490 257.63839722]
[145.25555420 268.66473389]
[152.20857239 282.06463623]
[155.28736877 296.84381104]
[154.26348877 311.90548706]
[149.21287537 326.13201904]
[140.51036072 338.46768188]
[128.80169678 347.99710083]
[114.95575714 354.01312256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 126]
[22 125]
[23 124]
[24 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
