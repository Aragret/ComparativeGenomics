%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGCAGUGGGGGGGGGGACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCCAAAUAUCUCAxxxxxxxxxxCAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCAAACCCCCUGAAGCUUCACCCCCCCCCCCCGGCGCAGU\
) } def
/len { sequence length } bind def

/coor [
[85.11870575 349.13986206]
[71.27276611 343.12384033]
[59.56410217 333.59442139]
[50.86157990 321.25872803]
[45.81097794 307.03222656]
[44.78708649 291.97055054]
[47.86588669 277.19137573]
[54.81890488 263.79144287]
[65.13018799 252.76512146]
[78.03456879 244.93060303]
[92.57445526 240.86929321]
[92.57445526 225.86929321]
[92.57445526 210.86929321]
[92.57445526 195.86929321]
[92.57445526 180.86929321]
[92.57445526 165.86929321]
[92.57445526 150.86929321]
[92.57445526 135.86929321]
[92.57445526 120.86929321]
[92.57445526 105.86929321]
[89.75909424 101.36080933]
[89.70751190 95.59175110]
[92.89949799 90.24856567]
[93.52347565 75.26154327]
[94.14745331 60.27453232]
[94.14745331 45.27453232]
[93.52347565 30.28751564]
[92.89949799 15.30049896]
[77.89862823 14.92210293]
[62.95653152 13.54259968]
[48.13994598 11.16815186]
[33.51504135 7.80936337]
[19.14714050 3.48123598]
[5.10041380 -1.79689991]
[-8.56240273 -8.00147057]
[-21.78028870 -15.10476494]
[-34.49420547 -23.07505798]
[-46.64737320 -31.87675095]
[-58.18550873 -41.47053528]
[-69.05708313 -51.81355667]
[-79.21353912 -62.85963058]
[-88.60951233 -74.55941010]
[-97.20304108 -86.86064911]
[-104.95574951 -99.70840454]
[-111.83300018 -113.04529572]
[-117.80408478 -126.81175995]
[-122.84233856 -140.94630432]
[-126.92524719 -155.38580322]
[-130.03457642 -170.06576538]
[-132.15646362 -184.92062378]
[-133.28140259 -199.88403320]
[-133.40437317 -214.88917542]
[-132.52484131 -229.86901855]
[-130.64672852 -244.75666809]
[-127.77841187 -259.48562622]
[-123.93271637 -273.99008179]
[-119.12680817 -288.20532227]
[-113.38215637 -302.06777954]
[-106.72442627 -315.51562500]
[-99.18334198 -328.48870850]
[-90.79257965 -340.92913818]
[-81.58963013 -352.78137207]
[-71.61558533 -363.99240112]
[-60.91499710 -374.51223755]
[-49.53565216 -384.29385376]
[-37.52838135 -393.29354858]
[-24.94680595 -401.47116089]
[-11.84712029 -408.79013062]
[1.71216726 -415.21780396]
[15.67049789 -420.72546387]
[29.96553040 -425.28851318]
[44.53341675 -428.88653564]
[59.30909729 -431.50350952]
[74.22657776 -433.12774658]
[89.21923065 -433.75195312]
[104.22009277 -433.37335205]
[119.16217041 -431.99368286]
[133.97872925 -429.61904907]
[148.60359192 -426.26007080]
[162.97143555 -421.93176270]
[177.01809692 -416.65344238]
[190.68083191 -410.44869995]
[203.89863586 -403.34524536]
[216.61245728 -395.37478638]
[228.76550293 -386.57293701]
[240.30352783 -376.97900391]
[251.17497253 -366.63586426]
[261.33126831 -355.58966064]
[270.72711182 -343.88977051]
[279.32049561 -331.58840942]
[287.07302856 -318.74057007]
[293.95010376 -305.40356445]
[299.92102051 -291.63705444]
[304.95910645 -277.50244141]
[309.04183960 -263.06289673]
[312.15097046 -248.38288879]
[314.27267456 -233.52799988]
[315.39743042 -218.56457520]
[315.52020264 -203.55943298]
[314.64047241 -188.57960510]
[312.76217651 -173.69198608]
[309.89367676 -158.96305847]
[306.04779053 -144.45863342]
[301.24172974 -130.24346924]
[295.49688721 -116.38106537]
[288.83898926 -102.93332672]
[281.29776001 -89.96032715]
[272.90682983 -77.51999664]
[263.70373535 -65.66790009]
[253.72955322 -54.45697021]
[243.02882385 -43.93728256]
[231.64935303 -34.15581894]
[219.64196777 -25.15626717]
[207.06030273 -16.97882080]
[193.96052551 -9.66000175]
[180.40115356 -3.23249888]
[166.44274902 2.27498078]
[152.14765930 6.83783960]
[137.57972717 10.43569851]
[122.80401611 13.05248833]
[107.88651276 14.67652130]
[108.51049042 29.66353798]
[109.13446808 44.65055466]
[111.17360687 46.66283035]
[112.51157379 49.62995529]
[112.77069092 53.27889252]
[111.68289185 57.20161438]
[109.13446808 60.89850998]
[108.51049042 75.88552094]
[107.88651276 90.87254333]
[107.57445526 105.86929321]
[107.57445526 120.86929321]
[107.57445526 135.86929321]
[107.57445526 150.86929321]
[107.57445526 165.86929321]
[107.57445526 180.86929321]
[107.57445526 195.86929321]
[107.57445526 210.86929321]
[107.57445526 225.86929321]
[107.57445526 240.86929321]
[122.11434937 244.93060303]
[135.01872253 252.76512146]
[145.33001709 263.79144287]
[152.28303528 277.19137573]
[155.36183167 291.97055054]
[154.33793640 307.03222656]
[149.28733826 321.25872803]
[140.58480835 333.59442139]
[128.87615967 343.12384033]
[115.03021240 349.13986206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 130]
[24 129]
[25 128]
[26 123]
[27 122]
[28 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
