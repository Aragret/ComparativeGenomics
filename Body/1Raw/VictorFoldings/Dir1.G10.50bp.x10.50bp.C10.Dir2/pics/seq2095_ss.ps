%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCUAUACGGGGGGGGGGCUUCUGCAUAAUGAAUUAACUAGAAAUAACUUUGCAAGGAGAGCCAAAGCxxxxxxxxxxUUUACAGUGAAAUGCCCCAACUAAAUACUACCGUAUGGCCCACCAUAAUUCCCCCCCCCCACCCCCAUAC\
) } def
/len { sequence length } bind def

/coor [
[100.42080688 381.56863403]
[86.57486725 375.55258179]
[74.86621094 366.02316284]
[66.16368103 353.68750000]
[61.11308289 339.46099854]
[60.08919144 324.39929199]
[63.16799164 309.62014771]
[70.12100983 296.22021484]
[80.43229675 285.19387817]
[93.33667755 277.35937500]
[107.87656403 273.29806519]
[107.87656403 258.29806519]
[107.87656403 243.29806519]
[107.87656403 228.29806519]
[107.87656403 213.29806519]
[107.87656403 198.29806519]
[107.87656403 183.29806519]
[107.87656403 168.29806519]
[107.87656403 153.29806519]
[107.87656403 138.29806519]
[91.87919617 137.41651917]
[77.91284943 130.27510071]
[68.25485229 118.34309387]
[64.35488892 103.84285736]
[66.62164307 89.33869171]
[74.39707947 77.28384399]
[65.63087463 65.11200714]
[56.86466599 52.94017029]
[48.09846115 40.76833344]
[38.95672607 28.87595177]
[24.22472191 23.10718727]
[22.14122963 8.35902405]
[12.63287067 -3.24231768]
[-2.09913230 -9.01108360]
[-4.18262577 -23.75924683]
[-17.13422585 -16.93186378]
[-31.16817093 -12.77738762]
[-45.73928070 -11.45517063]
[-60.28190613 -13.01458073]
[-74.23188782 -17.39315796]
[-87.04845428 -24.41911697]
[-98.23515320 -33.81808090]
[-107.35910797 -45.22380829]
[-114.06777954 -58.19244385]
[-118.10253906 -72.21981049]
[-119.30869293 -86.76099396]
[-117.64137268 -101.25152588]
[-113.16722870 -115.12928772]
[-106.06175232 -127.85630798]
[-96.60239410 -138.93963623]
[-105.86734772 -150.73628235]
[-115.13229370 -162.53292847]
[-124.39723969 -174.32955933]
[-133.66218567 -186.12620544]
[-148.85455322 -183.87059021]
[-163.13342285 -189.52827454]
[-172.65786743 -201.57737732]
[-174.86584473 -216.77671814]
[-169.16342163 -231.03779602]
[-157.08453369 -240.52441406]
[-141.87834167 -242.68473816]
[-127.63521576 -236.93765259]
[-118.18650055 -224.82908630]
[-116.07384491 -209.61619568]
[-121.86555481 -195.39115906]
[-112.60060120 -183.59451294]
[-103.33565521 -171.79786682]
[-94.07070160 -160.00123596]
[-84.80575562 -148.20458984]
[-71.02739716 -155.06045532]
[-56.12311172 -158.91815186]
[-40.73751068 -159.60841370]
[-25.53652954 -157.09902954]
[-11.17858887 -151.49635315]
[1.71391535 -143.04072571]
[12.58159161 -132.09623718]
[20.95232773 -119.13502502]
[26.46179962 -104.71691132]
[28.86932373 -89.46522522]
[28.06837654 -74.03983307]
[24.09130096 -59.10860825]
[17.10800552 -45.31852722]
[7.41871548 -33.26760483]
[21.47061729 -28.32864571]
[24.23421288 -12.75067616]
[33.74256897 -1.14933491]
[47.79447174 3.78962517]
[50.55806732 19.36759377]
[54.07733536 20.06202888]
[57.42203522 22.53481293]
[59.74189758 26.67855644]
[60.27029800 32.00212479]
[69.03650665 44.17396164]
[77.80271149 56.34579849]
[86.56891632 68.51763916]
[95.00947571 65.59101868]
[104.05812073 64.92364502]
[113.11128235 66.63181305]
[121.54668427 70.67100525]
[128.76606750 76.83413696]
[134.23747253 84.76126099]
[137.53411865 93.96009827]
[138.36697388 103.83647919]
[136.60868835 113.73265076]
[151.42645264 116.06375885]
[166.24420166 118.39485931]
[157.73794556 106.03996277]
[158.98893738 91.09222412]
[169.43049622 80.32310486]
[184.33248901 78.61112976]
[196.94415283 86.73184204]
[201.55229187 101.00646973]
[196.06936646 114.96847534]
[182.97880554 122.29299927]
[197.30140686 126.74981689]
[211.62400818 131.20663452]
[225.94659424 135.66345215]
[240.26919556 140.12025452]
[256.13836670 135.98486328]
[267.46011353 147.84869385]
[262.58758545 163.50724792]
[246.53321838 166.85235596]
[235.81237793 154.44285583]
[221.48979187 149.98603821]
[207.16719055 145.52922058]
[192.84458923 141.07241821]
[178.52198792 136.61560059]
[163.91310120 133.21261597]
[149.09533691 130.88151550]
[134.27758789 128.55041504]
[122.87656403 138.29806519]
[122.87656403 153.29806519]
[122.87656403 168.29806519]
[122.87656403 183.29806519]
[122.87656403 198.29806519]
[122.87656403 213.29806519]
[122.87656403 228.29806519]
[122.87656403 243.29806519]
[122.87656403 258.29806519]
[122.87656403 273.29806519]
[137.41645813 277.35937500]
[150.32083130 285.19387817]
[160.63211060 296.22021484]
[167.58514404 309.62014771]
[170.66394043 324.39929199]
[169.64004517 339.46099854]
[164.58944702 353.68750000]
[155.88691711 366.02316284]
[144.17825317 375.55258179]
[130.33232117 381.56863403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 95]
[27 94]
[28 93]
[29 92]
[30 88]
[32 86]
[33 85]
[35 83]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[104 130]
[105 129]
[106 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
