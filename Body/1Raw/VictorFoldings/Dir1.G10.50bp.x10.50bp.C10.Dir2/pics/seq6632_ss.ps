%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAACCCCGGGGGGGGGGCUGCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCxxxxxxxxxxACACCGCUAACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGACCCCCCCCCCAGAAAACCCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 351.56054688]
[71.19830322 345.54452515]
[59.48964310 336.01510620]
[50.78712082 323.67944336]
[45.73651886 309.45291138]
[44.71262741 294.39123535]
[47.79142761 279.61206055]
[54.74444962 266.21212769]
[65.05573273 255.18580627]
[77.96011353 247.35130310]
[92.50000000 243.28999329]
[92.50000000 228.28999329]
[92.50000000 213.28999329]
[92.50000000 198.28999329]
[92.50000000 183.28999329]
[92.50000000 168.28999329]
[92.50000000 153.28999329]
[92.50000000 138.28999329]
[92.50000000 123.28998566]
[92.50000000 108.28998566]
[92.34396362 93.29080200]
[92.03190613 78.29404449]
[91.40792847 63.30702972]
[90.47229767 48.33623886]
[89.53667450 33.36544418]
[74.53160095 33.34983826]
[59.55772400 32.38257599]
[44.67534256 30.46755600]
[29.94438553 27.61249161]
[15.42416573 23.82887650]
[1.17315233 19.13194466]
[-12.75126934 13.54061317]
[-26.29303169 7.07739401]
[-39.39760590 -0.23168688]
[-52.01222229 -8.35719872]
[-64.08609009 -17.26642227]
[-75.57058716 -26.92348289]
[-86.41947174 -37.28949356]
[-96.58906555 -48.32271957]
[-106.03839874 -59.97872543]
[-114.72944641 -72.21057892]
[-122.62719727 -84.96903229]
[-129.69984436 -98.20270538]
[-135.91893005 -111.85830688]
[-141.25939941 -125.88085938]
[-145.69973755 -140.21389771]
[-149.22209167 -154.79969788]
[-151.81225586 -169.57952881]
[-153.45979309 -184.49389648]
[-154.15809631 -199.48271179]
[-153.90434265 -214.48565674]
[-152.69953918 -229.44229126]
[-150.54856873 -244.29240417]
[-147.46005249 -258.97619629]
[-143.44645691 -273.43453979]
[-138.52394104 -287.60919189]
[-132.71231079 -301.44311523]
[-126.03498077 -314.88061523]
[-118.51882935 -327.86752319]
[-110.19412994 -340.35159302]
[-101.09440613 -352.28253174]
[-91.25628662 -363.61230469]
[-80.71939087 -374.29531860]
[-69.52615356 -384.28851318]
[-57.72163773 -393.55166626]
[-45.35338211 -402.04745483]
[-32.47119141 -409.74172974]
[-19.12693405 -416.60345459]
[-5.37434292 -422.60501099]
[8.73120308 -427.72225952]
[23.13290596 -431.93457031]
[37.77277374 -435.22497559]
[52.59185791 -437.58023071]
[67.53048706 -438.99084473]
[82.52851105 -439.45117188]
[97.52552795 -438.95932007]
[112.46115875 -437.51730347]
[127.27526093 -435.13088989]
[141.90818787 -431.80972290]
[156.30099487 -427.56716919]
[170.39575195 -422.42028809]
[184.13569641 -416.38983154]
[197.46551514 -409.50006104]
[210.33149719 -401.77874756]
[222.68186951 -393.25695801]
[234.46688843 -383.96902466]
[245.63909912 -373.95230103]
[256.15350342 -363.24719238]
[265.96780396 -351.89675903]
[275.04241943 -339.94671631]
[283.34085083 -327.44515991]
[290.82968140 -314.44247437]
[297.47875977 -300.99099731]
[303.26129150 -287.14489746]
[308.15402222 -272.95989990]
[312.13720703 -258.49316406]
[315.19485474 -243.80291748]
[317.31460571 -228.94831848]
[318.48797607 -213.98918152]
[318.71020508 -198.98573303]
[317.98037720 -183.99841309]
[316.30148315 -169.08755493]
[313.68026733 -154.31318665]
[310.12725830 -139.73483276]
[305.65679932 -125.41115570]
[300.28686523 -111.39986420]
[294.03909302 -97.75736237]
[286.93865967 -84.53858185]
[279.01409912 -71.79676056]
[270.29736328 -59.58320236]
[260.82354736 -47.94708252]
[250.63078308 -36.93526077]
[239.76013184 -26.59207344]
[228.25537109 -16.95917511]
[216.16279602 -8.07534981]
[203.53112793 0.02362826]
[190.41122437 7.30514765]
[176.85589600 13.73988819]
[162.91975403 19.30193901]
[148.65890503 23.96890450]
[134.13076782 27.72199059]
[119.39383698 30.54608536]
[104.50746155 32.42981720]
[105.44309235 47.40060806]
[106.37872314 62.37139893]
[109.35266113 66.18338013]
[109.92008972 71.92004395]
[107.02866364 77.98198700]
[107.34071350 92.97874451]
[110.66161346 100.38520813]
[107.50000000 108.28998566]
[107.50000000 123.28998566]
[107.50000000 138.28999329]
[107.50000000 153.28999329]
[107.50000000 168.28999329]
[107.50000000 183.28999329]
[107.50000000 198.28999329]
[107.50000000 213.28999329]
[107.50000000 228.28999329]
[107.50000000 243.28999329]
[122.03988647 247.35130310]
[134.94427490 255.18580627]
[145.25555420 266.21212769]
[152.20857239 279.61206055]
[155.28736877 294.39123535]
[154.26348877 309.45291138]
[149.21287537 323.67944336]
[140.51036072 336.01510620]
[128.80169678 345.54452515]
[114.95575714 351.56054688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 129]
[22 128]
[23 125]
[24 124]
[25 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
