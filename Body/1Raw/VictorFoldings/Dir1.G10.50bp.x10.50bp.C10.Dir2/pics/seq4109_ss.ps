%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUAAACACCCUCGGGGGGGGGGACCACUACAAUCUUCCUAGGAACAACAUAUGACGCACUCUCCCCUGAACUxxxxxxxxxxCUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCUUAAUUUUACCCCCCCCCCAUAAUCAACACCCUC\
) } def
/len { sequence length } bind def

/coor [
[94.16484833 423.28747559]
[79.72797394 419.04800415]
[66.35443878 412.15270996]
[54.52768707 402.85086060]
[44.67525482 391.47869873]
[37.15329742 378.44732666]
[32.23373032 364.22781372]
[30.09438896 349.33422852]
[30.81261253 334.30490112]
[34.36243820 319.68313599]
[40.61553955 305.99755859]
[49.34587479 293.74285889]
[60.23784256 283.36203003]
[72.89770508 275.23034668]
[86.86782074 269.64175415]
[101.64318085 266.79827881]
[101.64318085 251.79829407]
[101.64318085 236.79829407]
[101.64318085 221.79829407]
[101.64318085 206.79829407]
[101.64318085 191.79829407]
[101.64318085 176.79829407]
[101.64318085 161.79829407]
[101.64318085 146.79829407]
[101.64318085 131.79829407]
[88.61414337 128.60427856]
[78.47940063 120.51676941]
[72.87775421 109.32254028]
[72.51026154 97.25905609]
[77.07088470 86.57066345]
[85.37039948 79.09116364]
[80.76299286 64.81629944]
[76.15557861 50.54143143]
[71.45757294 45.77400208]
[70.11361694 40.18659210]
[71.65868378 35.61893082]
[67.61173248 21.17516899]
[63.56478119 6.73141050]
[59.51782990 -7.71234894]
[45.56444550 -12.72329330]
[38.38730240 -28.30785179]
[29.85706902 -40.64620972]
[21.32683563 -52.98456955]
[12.79660225 -65.32292938]
[-0.67586255 -58.66631317]
[-14.97399616 -54.04232788]
[-29.79303169 -51.54953384]
[-44.81710434 -51.24106979]
[-59.72597122 -53.12350464]
[-74.20185089 -57.15671921]
[-87.93618774 -63.25474167]
[-100.63623047 -71.28759003]
[-112.03128052 -81.08405304]
[-121.87845612 -92.43531036]
[-129.96786499 -105.09941101]
[-136.12705994 -118.80641174]
[-140.22477722 -133.26416016]
[-142.17367554 -148.16448975]
[-141.93220520 -163.18978882]
[-139.50552368 -178.01979065]
[-134.94534302 -192.33839417]
[-128.34886169 -205.84040833]
[-119.85669708 -218.23803711]
[-109.64985657 -229.26701355]
[-97.94589233 -238.69224548]
[-84.99428558 -246.31285095]
[-71.07109070 -251.96640015]
[-56.47308731 -255.53236389]
[-41.51143265 -256.93475342]
[-26.50503159 -256.14367676]
[-11.77375031 -253.17597961]
[2.36841536 -248.09494019]
[15.62002277 -241.00885010]
[27.69861412 -232.06874084]
[38.34673309 -221.46517944]
[47.33741379 -209.42419434]
[54.47902298 -196.20242310]
[59.61933136 -182.08168030]
[62.64877701 -167.36297607]
[63.50278091 -152.36003113]
[62.16315079 -137.39262390]
[58.65843201 -122.77979279]
[53.06332779 -108.83300781]
[45.49710464 -95.84955597]
[36.12103271 -84.10617065]
[25.13496208 -73.85316467]
[33.66519547 -61.51480484]
[42.19543076 -49.17644501]
[50.72566223 -36.83808517]
[65.70781708 -36.10663605]
[75.39936829 -47.55538559]
[85.09091949 -59.00413513]
[94.78246307 -70.45288849]
[104.47401428 -81.90163422]
[114.16556549 -93.35038757]
[112.60680389 -109.07761383]
[122.68990326 -121.24752808]
[138.43273926 -122.63991547]
[150.49536133 -112.42871857]
[151.72123718 -96.67204285]
[141.38307190 -84.71805573]
[125.61431122 -83.65883636]
[115.92276764 -72.21008301]
[106.23121643 -60.76133728]
[96.53966522 -49.31258774]
[86.84811401 -37.86383820]
[77.15657043 -26.41508865]
[73.96158600 -11.75930023]
[78.00853729 2.68445897]
[82.05548859 17.12821770]
[86.10243988 31.57197762]
[90.43045044 45.93402481]
[95.03785706 60.20888901]
[99.64526367 74.48375702]
[122.41109467 82.10394287]
[130.95063782 107.47588348]
[145.69364929 110.24059296]
[160.43667603 113.00529480]
[175.17968750 115.77000427]
[190.16950989 110.70881653]
[201.25263977 120.65937042]
[215.99565125 123.42407227]
[228.89611816 114.29425049]
[244.45956421 117.04280090]
[253.45248413 130.03906250]
[250.53953552 145.57258606]
[237.44892883 154.42759705]
[221.94706726 151.35058594]
[213.23095703 138.16708374]
[198.48794556 135.40238953]
[184.55262756 140.66131592]
[172.41497803 130.51301575]
[157.67196655 127.74830627]
[142.92895508 124.98360443]
[128.18594360 122.21890259]
[116.64318085 131.79829407]
[116.64318085 146.79829407]
[116.64318085 161.79829407]
[116.64318085 176.79829407]
[116.64318085 191.79829407]
[116.64318085 206.79829407]
[116.64318085 221.79829407]
[116.64318085 236.79829407]
[116.64318085 251.79829407]
[116.64318085 266.79827881]
[131.41853333 269.64175415]
[145.38865662 275.23034668]
[158.04852295 283.36203003]
[168.94049072 293.74285889]
[177.67082214 305.99755859]
[183.92391968 319.68313599]
[187.47375488 334.30490112]
[188.19197083 349.33422852]
[186.05262756 364.22781372]
[181.13307190 378.44732666]
[173.61109924 391.47869873]
[163.75866699 402.85086060]
[151.93193054 412.15270996]
[138.55839539 419.04800415]
[124.12151337 423.28747559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[31 114]
[32 113]
[33 112]
[36 111]
[37 110]
[38 109]
[39 108]
[41 89]
[42 88]
[43 87]
[44 86]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[116 135]
[117 134]
[118 133]
[119 132]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
