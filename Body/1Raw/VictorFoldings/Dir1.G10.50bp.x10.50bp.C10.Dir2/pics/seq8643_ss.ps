%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCUAACAGGGGGGGGGGUUACUGCAGGCCACCUACUCAUGCACCUAAUUGGAAGCGCCACCCUAGCAxxxxxxxxxxAUAAUGACCCACCAAUCACAUGCCUAUCAUAUAGUAAAACCCAGCCCAUGCCCCCCCCCCACCCCUAACA\
) } def
/len { sequence length } bind def

/coor [
[101.17762756 379.05984497]
[87.33168793 373.04382324]
[75.62302399 363.51440430]
[66.92050171 351.17874146]
[61.86989594 336.95220947]
[60.84600449 321.89053345]
[63.92480469 307.11138916]
[70.87782288 293.71145630]
[81.18910980 282.68511963]
[94.09349060 274.85061646]
[108.63337708 270.78930664]
[108.63337708 255.78929138]
[108.63337708 240.78929138]
[108.63337708 225.78929138]
[108.63337708 210.78929138]
[108.63337708 195.78929138]
[108.63337708 180.78929138]
[108.63337708 165.78929138]
[108.63337708 150.78929138]
[108.63337708 135.78929138]
[98.05011749 135.77966309]
[88.19456482 132.78915405]
[79.86371613 127.22996521]
[73.68156433 119.71440887]
[70.05302429 110.99120331]
[55.15112686 112.70389557]
[40.24922180 114.41658783]
[25.34732056 116.12927246]
[12.52083874 125.39167023]
[-1.00663829 119.15815735]
[-7.71846056 133.04898071]
[-20.88667107 141.08650208]
[-36.30934143 140.70599365]
[-49.06515121 132.02883911]
[-55.08377457 117.82392120]
[-52.44468307 102.62396240]
[-41.99000549 91.27922058]
[-27.05578995 87.40975189]
[-12.40749168 92.25029755]
[-2.71932793 104.25625610]
[9.04127026 95.11636353]
[23.63463020 101.22737122]
[38.53653336 99.51467896]
[53.43843460 97.80199432]
[68.34033966 96.08930206]
[69.97090149 89.23519897]
[73.06621552 82.90617371]
[77.47529602 77.41094208]
[82.98307800 73.01755524]
[89.32090759 69.94031525]
[87.76332855 55.02140045]
[86.20574951 40.10248947]
[84.64817047 25.18357658]
[83.09058380 10.26466370]
[68.08175659 9.40955639]
[53.40448761 6.15780354]
[39.43895340 0.59363228]
[26.54689407 -7.13883162]
[15.06224728 -16.83929825]
[5.28249168 -28.25650406]
[-2.53905201 -41.09471130]
[-8.19978809 -55.02138519]
[-11.55309010 -69.67578888]
[-12.51209831 -84.67833710]
[-11.05197334 -99.64043427]
[-7.21053600 -114.17451477]
[-1.08728755 -127.90411377]
[7.15916443 -140.47361755]
[17.31521606 -151.55741882]
[29.11780357 -160.86843872]
[42.26121140 -168.16549683]
[56.40498734 -173.25958252]
[71.18278503 -176.01873779]
[86.21181488 -176.37150574]
[101.10279083 -174.30874634]
[115.47000122 -169.88388062]
[128.94129944 -163.21153259]
[141.16775513 -154.46452332]
[151.83265686 -143.86943054]
[160.65977478 -131.70069885]
[167.42045593 -118.27350616]
[171.93959045 -103.93566895]
[174.10011292 -89.05856323]
[173.84605408 -74.02754211]
[171.18400574 -59.23194122]
[166.18293762 -45.05501175]
[158.97235107 -31.86396217]
[149.73905945 -20.00047684]
[138.72218323 -9.77184772]
[126.20713043 -1.44301903]
[112.51803589 4.77027082]
[98.00949860 8.70708275]
[99.56707764 23.62599564]
[101.12466431 38.54490662]
[102.68224335 53.46382141]
[104.23982239 68.38272858]
[121.82882690 74.53720093]
[133.74163818 90.05274963]
[135.29205322 110.48237610]
[150.27175903 111.26222229]
[165.25148010 112.04206848]
[180.23118591 112.82191467]
[184.58695984 98.38963318]
[192.27064514 85.41949463]
[202.83551025 74.66555786]
[215.66732788 66.75305176]
[230.02008057 62.14199066]
[245.05932617 61.10046005]
[259.91067505 63.68901443]
[273.71072388 69.75715637]
[285.65713501 78.95208740]
[295.05535889 90.73923492]
[301.35897827 104.43330383]
[304.20156860 119.23813629]
[303.41781616 134.29301453]
[299.05328369 148.72264099]
[291.36175537 161.68812561]
[280.79037476 172.43565369]
[267.95373535 180.34037781]
[253.59820557 184.94273376]
[238.55833435 185.97514343]
[223.70854187 183.37759399]
[209.91218567 177.30108643]
[197.97135925 168.09890747]
[188.58027649 156.30607605]
[182.28494263 142.60818481]
[179.45133972 127.80162811]
[164.47163391 127.02178192]
[149.49191284 126.24193573]
[134.51220703 125.46208954]
[123.63337708 135.78929138]
[123.63337708 150.78929138]
[123.63337708 165.78929138]
[123.63337708 180.78929138]
[123.63337708 195.78929138]
[123.63337708 210.78929138]
[123.63337708 225.78929138]
[123.63337708 240.78929138]
[123.63337708 255.78929138]
[123.63337708 270.78930664]
[138.17326355 274.85061646]
[151.07765198 282.68511963]
[161.38893127 293.71145630]
[168.34194946 307.11138916]
[171.42074585 321.89053345]
[170.39686584 336.95220947]
[165.34625244 351.17874146]
[156.64373779 363.51440430]
[144.93507385 373.04382324]
[131.08912659 379.05984497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[25 45]
[26 44]
[27 43]
[28 42]
[30 40]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[99 130]
[100 129]
[101 128]
[102 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
