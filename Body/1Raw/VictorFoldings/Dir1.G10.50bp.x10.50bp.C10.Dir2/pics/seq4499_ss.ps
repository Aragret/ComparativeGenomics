%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAAACCCCCGGGGGGGGGGUUAUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCxxxxxxxxxxUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCCCCCCCCCCCUUAAACACCC\
) } def
/len { sequence length } bind def

/coor [
[83.95493317 421.26187134]
[71.62182617 412.61074829]
[61.52337646 401.43179321]
[54.16612244 388.28573608]
[49.91910172 373.83200073]
[48.99534225 358.79556274]
[51.44118118 343.93066406]
[57.13393402 329.98287964]
[65.78805542 317.65185547]
[76.96945953 307.55612183]
[90.11728668 300.20205688]
[104.57205963 295.95855713]
[103.64864349 280.98699951]
[102.72522736 266.01544189]
[101.80181885 251.04389954]
[100.87840271 236.07234192]
[99.95498657 221.10079956]
[99.03157806 206.12924194]
[98.10816193 191.15769958]
[97.18474579 176.18614197]
[96.26133728 161.21459961]
[95.33792114 146.24304199]
[94.41450500 131.27149963]
[85.21511078 128.11602783]
[77.40154266 122.32518005]
[71.70617676 114.44173431]
[68.66286469 105.20463562]
[68.55686188 95.47969055]
[71.39810181 86.17843628]
[76.92026520 78.17272186]
[68.76360321 65.58428192]
[60.60693741 52.99584198]
[46.60934067 45.62170792]
[46.18190384 30.73323441]
[38.02523804 18.14479637]
[21.45099640 10.18708229]
[21.16541481 -7.33327675]
[12.75200462 -19.75159073]
[4.33859444 -32.16990662]
[-4.07481575 -44.58821869]
[-12.48822594 -57.00653458]
[-20.90163612 -69.42485046]
[-34.48487854 -62.99087524]
[-48.89110184 -58.70588684]
[-63.78260803 -56.67032623]
[-78.81031799 -56.93191147]
[-93.62195587 -59.48451233]
[-107.87032318 -64.26828766]
[-121.22140503 -71.17110443]
[-133.36225891 -80.03114319]
[-144.00825500 -90.64072418]
[-152.90985107 -102.75112915]
[-159.85838318 -116.07848358]
[-164.69096375 -130.31036377]
[-167.29431152 -145.11317444]
[-167.60739136 -160.13989258]
[-165.62287903 -175.03829956]
[-161.38728333 -189.45912170]
[-154.99990845 -203.06433105]
[-146.61045837 -215.53500366]
[-136.41561890 -226.57879639]
[-124.65435028 -235.93684387]
[-111.60236359 -243.38978577]
[-97.56562042 -248.76289368]
[-82.87315369 -251.93020630]
[-67.86938477 -252.81750488]
[-52.90601730 -251.40399170]
[-38.33381653 -247.72276306]
[-24.49437332 -241.86015320]
[-11.71210384 -233.95356750]
[-0.28664589 -224.18836975]
[9.51417351 -212.79344177]
[17.46060753 -200.03590393]
[23.36638260 -186.21482849]
[27.09305763 -171.65417480]
[28.55327415 -156.69529724]
[27.71280289 -141.68882751]
[24.59134483 -126.98655701]
[19.26207161 -112.93311310]
[11.84990978 -99.85793304]
[2.52861023 -88.06752014]
[-8.48332214 -77.83825684]
[-0.06991162 -65.41994476]
[8.34349823 -53.00162888]
[16.75690842 -40.58331680]
[25.17031860 -28.16500092]
[33.58372879 -15.74668694]
[45.43494034 -13.13690376]
[52.53794861 -2.80643272]
[50.61367798 9.98813057]
[58.77034378 22.57657051]
[72.18451691 29.05029678]
[73.19537354 44.83917618]
[81.35204315 57.42761612]
[89.50870514 70.01605988]
[112.68177795 70.87480927]
[129.09701538 87.25371552]
[143.86912537 84.64898682]
[158.64125061 82.04426575]
[173.41336060 79.43954468]
[188.18548584 76.83482361]
[190.27281189 61.85155487]
[196.88989258 48.24753189]
[207.38844299 37.35553741]
[220.73992920 30.24265099]
[235.63629150 27.60572624]
[250.61816406 29.70310020]
[264.21774292 36.32929611]
[275.10269165 46.83514023]
[282.20663452 60.19138718]
[284.83358765 75.08951569]
[282.72616577 90.06996918]
[276.09088135 103.66511536]
[265.57772827 114.54303741]
[252.21672058 121.63802338]
[237.31683350 124.25498199]
[222.33779907 122.13752747]
[208.74710083 115.49311829]
[197.87623596 104.97268677]
[190.79020691 91.60693359]
[176.01808167 94.21166229]
[161.24597168 96.81638336]
[146.47384644 99.42110443]
[131.70173645 102.02582550]
[128.37695312 114.27770233]
[120.52012634 124.24929810]
[109.38605499 130.34808350]
[110.30947113 145.31962585]
[111.23288727 160.29118347]
[112.15629578 175.26272583]
[113.07971191 190.23428345]
[114.00312805 205.20582581]
[114.92653656 220.17738342]
[115.84995270 235.14892578]
[116.77336884 250.12048340]
[117.69677734 265.09204102]
[118.62019348 280.06356812]
[119.54360962 295.03512573]
[134.41029358 297.47015381]
[148.36219788 303.15277100]
[160.69949341 311.79794312]
[170.80335999 322.97198486]
[178.16699219 336.11447144]
[182.42100525 350.56616211]
[183.35205078 365.60214233]
[180.91342163 380.46823120]
[175.22743225 394.41876221]
[166.57928467 406.75396729]
[155.40277100 416.85513306]
[142.25851440 424.21557617]
[127.80580139 428.46609497]
[112.76959229 429.39349365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[30 95]
[31 94]
[32 93]
[34 91]
[35 90]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
