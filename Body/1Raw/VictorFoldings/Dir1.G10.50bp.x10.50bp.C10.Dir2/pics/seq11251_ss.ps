%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGCUAUUAGGGGGGGGGGCCUAAAACAAUUUCACAGCACCAAAUCUCCACCUCCAUCAUCACCUCAACxxxxxxxxxxAUCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAACCCCCCCCCCAAAAACUAUUA\
) } def
/len { sequence length } bind def

/coor [
[83.57575989 438.56152344]
[69.55381012 433.00851440]
[57.35385513 424.14218140]
[47.74278641 412.51986694]
[41.32476044 398.87216187]
[38.50322342 384.05697632]
[39.45553970 369.00561523]
[44.12184525 354.66418457]
[52.20880890 341.93423462]
[63.20808411 331.61596680]
[76.42824554 324.35797119]
[91.03825378 320.61654663]
[91.03825378 305.61654663]
[91.03825378 290.61654663]
[91.03825378 275.61654663]
[91.03825378 260.61654663]
[91.03825378 245.61654663]
[91.03825378 230.61654663]
[91.03825378 215.61654663]
[91.03825378 200.61654663]
[91.03825378 185.61654663]
[82.69059753 176.80865479]
[82.60440063 164.27215576]
[91.37387848 154.75900269]
[91.68185425 139.76217651]
[91.98983002 124.76533508]
[80.82205200 117.59803772]
[74.63893890 105.85671997]
[75.04758453 92.59313965]
[81.94178009 81.25473022]
[93.52960205 74.78852844]
[94.14543152 59.80117035]
[94.76125336 44.81381989]
[95.37707520 29.82646561]
[91.56922150 15.31783962]
[83.54222107 2.64632368]
[75.38555908 -9.94211578]
[67.22888947 -22.53055573]
[59.07222748 -35.11899567]
[50.91556168 -47.70743179]
[37.31283951 -41.32936478]
[22.96831322 -36.86301041]
[8.14921379 -34.39156723]
[-6.86839104 -33.96108246]
[-21.80473137 -35.57957458]
[-36.38154984 -39.21689224]
[-50.32729340 -44.80527496]
[-63.38216019 -52.24061203]
[-75.30294037 -61.38439178]
[-85.86756897 -72.06626892]
[-94.87921906 -84.08724213]
[-102.17002106 -97.22337341]
[-107.60414886 -111.22994995]
[-111.08036041 -125.84602356]
[-112.53390503 -140.79931641]
[-111.93769836 -155.81124878]
[-109.30285645 -170.60217285]
[-104.67845154 -184.89653015]
[-98.15064240 -198.42802429]
[-89.84103394 -210.94459534]
[-79.90443420 -222.21302795]
[-68.52594757 -232.02342224]
[-55.91756058 -240.19302368]
[-42.31414795 -246.56961060]
[-27.96914101 -251.03440857]
[-13.14977264 -253.50425720]
[1.86787772 -253.93310547]
[16.80404282 -252.31300354]
[31.38046837 -248.67410278]
[45.32560730 -243.08421326]
[58.37966537 -235.64746094]
[70.29946136 -226.50239563]
[80.86293030 -215.81938171]
[89.87328339 -203.79742432]
[97.16265869 -190.66050720]
[102.59526825 -176.65335083]
[106.06990051 -162.03689575]
[107.52182770 -147.08345032]
[106.92399597 -132.07156372]
[104.28755188 -117.28093719]
[99.66159821 -102.98707581]
[93.13232422 -89.45628357]
[84.82136536 -76.94062805]
[74.88354492 -65.67326355]
[63.50399780 -55.86409760]
[71.66066742 -43.27566147]
[79.81732941 -30.68722153]
[87.97399902 -18.09878159]
[96.13066101 -5.51034212]
[102.44627380 -1.58284497]
[104.32247925 7.42135715]
[104.33711243 -7.57863569]
[107.31526184 -22.28001785]
[113.13950348 -36.10312271]
[121.58018494 -48.50291443]
[132.30450439 -58.99047852]
[144.88960266 -67.15229797]
[158.83926392 -72.66654968]
[173.60345459 -75.31582642]
[188.60003662 -74.99565887]
[203.23770142 -71.71866608]
[216.93930054 -65.61406708]
[229.16459656 -56.92255783]
[239.43153381 -45.98683929]
[247.33531189 -33.23810196]
[252.56428528 -19.17901611]
[254.91226196 -4.36392307]
[254.28669739 10.62302685]
[250.71221924 25.19090843]
[244.32980347 38.76531982]
[235.39106750 50.81103134]
[224.24848938 60.85308838]
[211.34140015 68.49554443]
[197.17872620 73.43704987]
[182.31887817 75.48278046]
[167.34777832 74.55206299]
[152.85572815 70.68159485]
[139.41413879 64.02399445]
[127.55300903 54.84175873]
[117.73999786 43.49694061]
[110.36443329 30.44229126]
[109.74860382 45.42964554]
[109.13278198 60.41699600]
[108.51695251 75.40435028]
[121.43335724 85.23194122]
[126.01618958 100.80155182]
[120.48357391 116.05950928]
[106.98667145 125.07331085]
[106.67869568 140.07014465]
[106.37071991 155.06698608]
[115.62889099 170.95147705]
[106.03825378 185.61654663]
[106.03825378 200.61654663]
[106.03825378 215.61654663]
[106.03825378 230.61654663]
[106.03825378 245.61654663]
[106.03825378 260.61654663]
[106.03825378 275.61654663]
[106.03825378 290.61654663]
[106.03825378 305.61654663]
[106.03825378 320.61654663]
[120.64826965 324.35797119]
[133.86842346 331.61596680]
[144.86770630 341.93423462]
[152.95466614 354.66418457]
[157.62097168 369.00561523]
[158.57328796 384.05697632]
[155.75175476 398.87216187]
[149.33372498 412.51986694]
[139.72265625 424.14218140]
[127.52269745 433.00851440]
[113.50075531 438.56152344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[24 130]
[25 129]
[26 128]
[31 124]
[32 123]
[33 122]
[34 121]
[35 91]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
