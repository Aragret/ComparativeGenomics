%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACCCCCGGGGGGGGGGACUGAUGUUCGCCGACCGUUGACUAUUCUCUACAAACCACAAAGACAUUGxxxxxxxxxxCAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCACCCCCCCCCCCCCCUCACCCAC\
) } def
/len { sequence length } bind def

/coor [
[82.45414734 375.34109497]
[69.89591980 366.98992920]
[59.80969620 355.77749634]
[52.82950592 342.40856934]
[49.39411926 327.72360229]
[49.71949768 312.64562988]
[53.78518295 298.12249756]
[61.33560181 285.06716919]
[71.89613342 274.30026245]
[84.80292511 266.49862671]
[99.24465179 262.15267944]
[98.62067413 247.16566467]
[97.99669647 232.17864990]
[97.37271881 217.19163513]
[96.74874115 202.20462036]
[96.12476349 187.21760559]
[95.50078583 172.23059082]
[94.87680817 157.24357605]
[94.25283051 142.25656128]
[93.62886047 127.26953888]
[76.66508484 115.48227692]
[72.39830017 95.27081299]
[83.15013123 77.63258362]
[77.66310120 63.67219543]
[72.17607117 49.71180725]
[66.68904114 35.75141525]
[61.20200729 21.79102707]
[55.71497726 7.83063650]
[50.71216583 3.34963059]
[49.02673721 -2.16313887]
[50.30339050 -6.82636356]
[39.03339005 -13.18568134]
[35.26397324 -25.14437866]
[40.50439835 -36.09176636]
[35.89883423 -50.36722565]
[22.11222839 -57.61755371]
[17.64488983 -72.16050720]
[24.64193153 -85.25924683]
[20.03636742 -99.53470612]
[15.43080235 -113.81017303]
[10.82523823 -128.08563232]
[6.21967363 -142.36108398]
[-8.51764107 -139.47181702]
[-23.49324417 -138.34590149]
[-38.49689865 -138.99913025]
[-53.31797791 -141.42234802]
[-67.74841309 -145.58152771]
[-81.58563232 -151.41828918]
[-94.63537598 -158.85067749]
[-106.71444702 -167.77438354]
[-117.65328217 -178.06410217]
[-127.29830170 -189.57539368]
[-135.51411438 -202.14666748]
[-142.18537903 -215.60142517]
[-147.21844482 -229.75079346]
[-150.54266357 -244.39613342]
[-152.11134338 -259.33184814]
[-151.90249634 -274.34826660]
[-149.91902161 -289.23455811]
[-146.18878174 -303.78179932]
[-140.76414490 -317.78570557]
[-133.72126770 -331.04971313]
[-125.15900421 -343.38763428]
[-115.19756317 -354.62622070]
[-103.97679138 -364.60775757]
[-91.65420532 -373.19204712]
[-78.40280914 -380.25863647]
[-64.40860748 -385.70831299]
[-49.86808014 -389.46453857]
[-34.98534012 -391.47460938]
[-19.96932220 -391.71032715]
[-5.03082609 -390.16833496]
[9.62043285 -386.87033081]
[23.77877617 -381.86254883]
[37.24544144 -375.21536255]
[49.83137512 -367.02203369]
[61.35989761 -357.39761353]
[71.66915894 -346.47717285]
[80.61443329 -334.41409302]
[88.07015228 -321.37765503]
[93.93164062 -307.55090332]
[98.11661530 -293.12789917]
[100.56632233 -278.31118774]
[101.24637604 -263.30871582]
[100.14722443 -248.33113098]
[97.28430939 -233.58866882]
[92.69780731 -219.28831482]
[86.45211029 -205.63079834]
[78.63490295 -192.80786133]
[69.35592651 -180.99952698]
[58.74543381 -170.37155151]
[46.95238876 -161.07313538]
[34.14234543 -153.23483276]
[20.49513435 -146.96665955]
[25.10069847 -132.69119263]
[29.70626259 -118.41573334]
[34.31182861 -104.14027405]
[38.91739273 -89.86481476]
[52.25026703 -83.32493591]
[57.12432480 -68.91319275]
[50.17429352 -54.97278976]
[54.77985764 -40.69733047]
[68.40985870 -29.68719292]
[64.47994995 -11.72791481]
[69.67536926 2.34360480]
[75.16239929 16.30399513]
[80.64942932 30.26438522]
[86.13645935 44.22477341]
[91.62348938 58.18516541]
[97.11052704 72.14555359]
[108.74555206 73.39672089]
[118.85344696 79.29331970]
[125.66917419 88.80568695]
[128.00257874 100.27279663]
[142.41479492 104.43068695]
[153.95816040 94.19572449]
[169.20597839 91.84892273]
[183.29273987 98.13913727]
[191.72340393 111.05917358]
[191.80778503 126.48630524]
[183.51893616 139.49778748]
[169.50181580 145.94171143]
[154.22924805 143.76182556]
[142.57463074 133.65373230]
[138.25691223 118.84290314]
[123.84469604 114.68501282]
[119.76302338 119.84041595]
[114.59170532 123.90190887]
[108.61587524 126.64556122]
[109.23985291 141.63258362]
[109.86383057 156.61959839]
[110.48780823 171.60661316]
[111.11178589 186.59362793]
[111.73576355 201.58064270]
[112.35973358 216.56765747]
[112.98371124 231.55467224]
[113.60768890 246.54168701]
[114.23166656 261.52871704]
[128.98468018 264.65914917]
[142.49531555 271.36090088]
[153.91429138 281.21270752]
[162.52380371 293.59521484]
[167.78265381 307.73013306]
[169.36026001 322.72885132]
[167.15745544 337.64859009]
[161.31269836 351.55145264]
[152.19342041 363.56350708]
[140.37284851 372.92968750]
[126.59403992 379.06115723]
[111.72314453 381.57257080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[31 104]
[34 102]
[35 101]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[114 126]
[115 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
