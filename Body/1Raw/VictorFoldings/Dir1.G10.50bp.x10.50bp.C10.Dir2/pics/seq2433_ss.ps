%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCAAACAUGGGGGGGGGGAUAACUGAACUCCUCACACCCAAUUGGACCAAUCUAUCACCCUAUAGAAGxxxxxxxxxxGCCAAAUAUCAUUCUGAGGGGCCACAGUAAUUACAAACUUACUAUCCGCCCCCCCCCCCCAUCCCAUACAU\
) } def
/len { sequence length } bind def

/coor [
[174.85363770 626.36505127]
[163.68635559 616.26623535]
[154.86308289 604.06610107]
[148.76954651 590.29797363]
[145.67210388 575.56365967]
[145.70617676 560.50732422]
[148.87026978 545.78723145]
[155.02607727 532.04675293]
[163.90447998 519.88665771]
[175.11735535 509.83853149]
[188.17453003 502.34161377]
[202.50518799 497.72360229]
[200.96789551 482.80258179]
[199.43060303 467.88159180]
[197.89331055 452.96057129]
[196.35601807 438.03955078]
[194.81872559 423.11853027]
[193.28143311 408.19750977]
[184.28050232 396.33023071]
[190.56272888 381.80975342]
[189.02543640 366.88873291]
[187.48814392 351.96771240]
[185.95085144 337.04669189]
[184.41355896 322.12567139]
[180.75485229 307.57873535]
[175.05020142 293.70584106]
[169.34553528 279.83297729]
[163.64086914 265.96008301]
[147.87707520 260.18029785]
[141.00842285 244.49102783]
[147.71311951 228.36544800]
[141.72482300 214.61260986]
[135.73652649 200.85978699]
[129.74822998 187.10696411]
[123.75993347 173.35412598]
[117.77163696 159.60130310]
[111.78334045 145.84846497]
[95.45174408 147.11944580]
[79.66476440 142.74818420]
[66.31280518 133.25811768]
[56.99465942 119.78559875]
[52.82611847 103.94388580]
[54.30633926 87.62992096]
[61.25807571 72.79719543]
[72.84889984 61.22182083]
[66.30103302 47.72643661]
[59.75316238 34.23105240]
[53.20529175 20.73566818]
[46.60284805 14.33226681]
[46.66471863 6.89530754]
[39.03174973 -6.01739073]
[26.37768364 -8.71521950]
[19.20476913 -18.99727440]
[20.92914200 -31.00930023]
[12.26253414 -43.25225449]
[3.59592652 -55.49520874]
[-5.07068062 -67.73815918]
[-13.73728848 -79.98111725]
[-29.35565186 -82.39818573]
[-38.62282562 -95.20034027]
[-36.04076004 -110.79227448]
[-23.14134979 -119.92357635]
[-7.57758379 -117.17681122]
[1.41682982 -104.18157959]
[-1.49433458 -88.64772034]
[7.17227268 -76.40476990]
[15.83888054 -64.16181183]
[24.50548744 -51.91886139]
[33.17209625 -39.67590714]
[49.47303391 -33.24753952]
[51.09418106 -14.93354130]
[51.61941528 -29.92434311]
[59.45418549 -42.71560287]
[72.56955719 -49.99482727]
[87.56909180 -49.87694168]
[100.56842804 -42.39247513]
[108.20117950 -29.47964668]
[108.49073029 -14.48244190]
[101.36209106 -1.28462088]
[88.66133118 6.69603205]
[73.67752838 7.39280081]
[60.29169846 0.62590212]
[66.70067596 14.18779850]
[73.24854279 27.68318176]
[79.79641724 41.17856598]
[86.34428406 54.67395020]
[99.70729828 52.66244888]
[113.09416962 54.50854874]
[125.41397095 60.06180573]
[135.66276550 68.86968231]
[143.00534058 80.21440125]
[146.84336853 93.17147827]
[146.86405945 106.68502808]
[143.06573486 119.65379333]
[135.75793457 131.02095032]
[125.53617096 139.86016846]
[131.52445984 153.61300659]
[137.51275635 167.36582947]
[143.50105286 181.11866760]
[149.48934937 194.87149048]
[155.47764587 208.62431335]
[161.46594238 222.37715149]
[174.51829529 225.84783936]
[183.04876709 236.06608582]
[184.10118103 249.13975525]
[177.51374817 260.25543213]
[183.21841431 274.12829590]
[188.92308044 288.00119019]
[194.62773132 301.87405396]
[197.54222107 287.15994263]
[205.77772522 274.62292480]
[218.12445068 266.10479736]
[232.76858521 262.85687256]
[247.55888367 265.35629272]
[260.32260132 273.23587036]
[269.18466187 285.33810425]
[272.84323120 299.88510132]
[270.76086426 314.73983765]
[263.24343872 327.72015381]
[251.39529419 336.91912842]
[236.95697021 340.98547363]
[222.04951477 339.32177734]
[208.86288452 332.17245483]
[199.33457947 320.58837891]
[200.87187195 335.50939941]
[202.40916443 350.43041992]
[203.94645691 365.35144043]
[205.48374939 380.27246094]
[214.59463501 393.20700073]
[208.20243835 406.66021729]
[209.73973083 421.58123779]
[211.27702332 436.50225830]
[212.81431580 451.42327881]
[214.35160828 466.34429932]
[215.88890076 481.26528931]
[217.42619324 496.18630981]
[232.39739990 497.78536987]
[246.70884705 502.46255493]
[259.73492432 510.01339722]
[270.90615845 520.10778809]
[279.73425293 532.30444336]
[285.83319092 546.07025146]
[288.93643188 560.80334473]
[288.90829468 575.85961914]
[285.74996948 590.58099365]
[279.59957886 604.32385254]
[270.72598267 616.48742676]
[259.51705933 626.53997803]
[246.46282959 634.04205322]
[232.13398743 638.66571045]
[217.15692139 640.20880127]
[202.18635559 638.60382080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 109]
[26 108]
[27 107]
[28 106]
[31 102]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 96]
[45 86]
[46 85]
[47 84]
[48 83]
[50 82]
[51 71]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
