%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGCCUAGAAGGGGGGGGGGAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGxxxxxxxxxxCUCACUUCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACCCCCCCCCCCUAUGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[97.98062897 391.14654541]
[84.49174500 384.41500854]
[73.00624847 374.65045166]
[64.19187927 362.42056274]
[58.56109619 348.43637085]
[56.44126892 333.51089478]
[57.95563889 318.51187134]
[63.01615906 304.31137085]
[71.32862854 291.73495483]
[82.40975952 281.51379395]
[95.61531067 274.24215698]
[110.17753601 270.34280396]
[109.86956024 255.34594727]
[109.56158447 240.34912109]
[109.25360107 225.35227966]
[108.94562531 210.35543823]
[108.63764954 195.35859680]
[108.32967377 180.36177063]
[108.02169037 165.36492920]
[107.71371460 150.36808777]
[107.40573883 135.37124634]
[103.44912720 120.90248108]
[96.08288574 107.83578491]
[93.15433502 106.76962280]
[90.56086731 104.58756256]
[88.72644043 101.41637421]
[88.02025604 97.54121399]
[88.69902802 93.38085175]
[82.42962646 79.75387573]
[76.16021729 66.12689972]
[69.89081573 52.49991608]
[63.62140656 38.87293625]
[57.35200119 25.24595833]
[51.08259583 11.61897945]
[47.32711029 9.17030907]
[44.83357239 5.96004152]
[43.68632889 2.49153042]
[43.79306412 -0.75775230]
[44.90952301 -3.39300394]
[39.77922058 -17.48839378]
[34.64891815 -31.58378220]
[29.51861763 -45.67917252]
[24.38831520 -59.77456284]
[19.25801277 -73.86994934]
[4.60215902 -70.57840729]
[-10.35428905 -69.18808746]
[-25.36573219 -69.72182465]
[-40.18567276 -72.17085266]
[-54.57074738 -76.49496460]
[-68.28474426 -82.62314606]
[-81.10247040 -90.45476532]
[-92.81343842 -99.86122894]
[-103.22534943 -110.68806458]
[-112.16722870 -122.75749207]
[-119.49224091 -135.87132263]
[-125.08010864 -149.81420898]
[-128.83906555 -164.35719299]
[-130.70739746 -179.26148987]
[-130.65441895 -194.28231812]
[-128.68099976 -209.17304993]
[-124.81953430 -223.68916321]
[-119.13345337 -237.59228516]
[-111.71611023 -250.65411377]
[-102.68930817 -262.66015625]
[-92.20127869 -273.41326904]
[-80.42424774 -282.73690796]
[-67.55159760 -290.47790527]
[-53.79470825 -296.50918579]
[-39.37948608 -300.73171997]
[-24.54264069 -303.07614136]
[-9.52780437 -303.50396729]
[5.41846323 -302.00817871]
[20.05073357 -298.61331177]
[34.12872696 -293.37515259]
[47.42127609 -286.37969971]
[59.71010208 -277.74179077]
[70.79341125 -267.60333252]
[80.48920441 -256.13076782]
[88.63826752 -243.51248169]
[95.10678864 -229.95568848]
[99.78855133 -215.68299866]
[102.60666656 -200.92880249]
[103.51486969 -185.93534851]
[102.49824524 -170.94886780]
[99.57347870 -156.21543884]
[94.78859711 -141.97698975]
[88.22219086 -128.46734619]
[79.98206329 -115.90833282]
[70.20353699 -104.50619507]
[59.04718781 -94.44815826]
[46.69620132 -85.89938354]
[33.35340118 -79.00025177]
[38.48370361 -64.90486145]
[43.61400604 -50.80947495]
[48.74430847 -36.71408463]
[53.87461090 -22.61869621]
[59.00491333 -8.52330589]
[64.70957947 5.34957457]
[70.97898102 18.97655296]
[77.24839020 32.60353088]
[83.51779175 46.23051071]
[89.78719330 59.85749054]
[96.05660248 73.48446655]
[102.32600403 87.11145020]
[109.14958191 100.46955109]
[116.51582336 113.53623962]
[116.94467926 98.54237366]
[120.88438416 84.06899261]
[128.11434937 70.92641449]
[138.22982788 59.85042953]
[150.66445923 51.46115494]
[164.72207642 46.22827148]
[179.61567688 44.44474411]
[194.51138306 46.21043396]
[208.57527161 51.42647934]
[221.01994324 59.80085373]
[231.14866638 70.86471558]
[238.39437866 83.99862671]
[242.35140991 98.46727753]
[242.79823303 113.46062469]
[239.70980835 128.13923645]
[233.25907898 141.68132019]
[223.80717468 153.32870483]
[211.88327026 162.42929077]
[198.15495300 168.47357178]
[183.39082336 171.12313843]
[168.41744995 170.22969055]
[154.07315063 165.84320068]
[141.16101074 158.20928955]
[130.40393066 147.75532532]
[122.40257263 135.06327820]
[122.71055603 150.06010437]
[123.01853180 165.05694580]
[123.32650757 180.05378723]
[123.63448334 195.05062866]
[123.94246674 210.04747009]
[124.25044250 225.04429626]
[124.55841827 240.04113770]
[124.86639404 255.03797913]
[125.17437744 270.03482056]
[139.88441467 273.33303833]
[153.37736511 280.05639648]
[164.86878967 289.81399536]
[173.69056702 302.03854370]
[179.32983398 316.01931763]
[181.45870972 330.94351196]
[179.95343018 345.94342041]
[174.90151978 360.14700317]
[166.59667969 372.72845459]
[155.52174377 382.95632935]
[142.32060242 390.23599243]
[127.76074219 394.14416504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 106]
[23 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[39 97]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
