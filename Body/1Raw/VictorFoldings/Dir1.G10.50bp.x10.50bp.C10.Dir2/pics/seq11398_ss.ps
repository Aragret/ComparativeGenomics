%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAAAGACAAGGGGGGGGGGCCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCAUAUAACCUxxxxxxxxxxGUAGUAUAAACUAAUACACCAGUCUUGUAAACCGGAGAUGAAAACCUUUUCCCCCCCCCCUCCAAGGACAA\
) } def
/len { sequence length } bind def

/coor [
[76.05862427 375.43045044]
[62.03667831 369.87744141]
[49.83671951 361.01110840]
[40.22565079 349.38879395]
[33.80762482 335.74108887]
[30.98608589 320.92590332]
[31.93840218 305.87451172]
[36.60470963 291.53311157]
[44.69167328 278.80316162]
[55.69094849 268.48486328]
[68.91110992 261.22689819]
[83.52111816 257.48547363]
[83.52111816 242.48545837]
[83.52111816 227.48545837]
[83.52111816 212.48545837]
[83.52111816 197.48545837]
[83.52111816 182.48545837]
[83.52111816 167.48545837]
[83.52111816 152.48545837]
[83.52111816 137.48545837]
[83.52111816 122.48545837]
[78.73693848 109.79016876]
[81.11384583 98.57401276]
[87.91301727 92.04263306]
[95.36580658 91.13587189]
[93.52247620 76.24956512]
[91.67915344 61.36325455]
[89.83583069 46.47694778]
[87.83977509 31.61034966]
[85.69119263 16.76502609]
[83.54261780 1.91970325]
[68.57228088 2.96678090]
[53.56550217 2.90539622]
[38.60423660 1.73588443]
[23.77020073 -0.53536677]
[9.14441204 -3.89595246]
[-5.19324636 -8.32751846]
[-19.16446686 -13.80586052]
[-32.69294357 -20.30105591]
[-45.70478439 -27.77763367]
[-58.12892532 -36.19475555]
[-69.89750671 -45.50645065]
[-80.94625854 -55.66186142]
[-91.21482849 -66.60552216]
[-100.64713287 -78.27765656]
[-109.19165802 -90.61452484]
[-116.80174255 -103.54874420]
[-123.43580627 -117.00965881]
[-129.05763245 -130.92376709]
[-133.63650513 -145.21505737]
[-137.14741516 -159.80549622]
[-139.57119751 -174.61537170]
[-140.89460754 -189.56381226]
[-141.11041260 -204.56916809]
[-140.21743774 -219.54948425]
[-138.22056580 -234.42294312]
[-135.13070679 -249.10830688]
[-130.96472168 -263.52536011]
[-125.74536896 -277.59539795]
[-119.50115204 -291.24151611]
[-112.26618958 -304.38925171]
[-104.07998657 -316.96673584]
[-94.98725128 -328.90530396]
[-85.03764343 -340.13973999]
[-74.28551483 -350.60870361]
[-62.78958893 -360.25497437]
[-50.61265182 -369.02590942]
[-37.82120514 -376.87359619]
[-24.48511314 -383.75515747]
[-10.67722034 -389.63302612]
[3.52706432 -394.47509766]
[18.05015945 -398.25491333]
[32.81274414 -400.95181274]
[47.73418808 -402.55111694]
[62.73299408 -403.04403687]
[77.72724915 -402.42791748]
[92.63504791 -400.70608521]
[107.37498474 -397.88800049]
[121.86653900 -393.98901367]
[136.03056335 -389.03042603]
[149.78970337 -383.03933716]
[163.06881714 -376.04846191]
[175.79536438 -368.09594727]
[187.89984131 -359.22528076]
[199.31613159 -349.48489380]
[209.98190308 -338.92794800]
[219.83888245 -327.61215210]
[228.83323669 -315.59930420]
[236.91584778 -302.95498657]
[244.04255676 -289.74829102]
[250.17445374 -276.05130005]
[255.27804565 -261.93887329]
[259.32546997 -247.48808289]
[262.29458618 -232.77783203]
[264.16921997 -217.88847351]
[264.93908691 -202.90132141]
[264.60003662 -187.89825439]
[263.15386963 -172.96118164]
[260.60848999 -158.17172241]
[256.97784424 -143.61062622]
[252.28172302 -129.35742188]
[246.54579163 -115.48996735]
[239.80137634 -102.08399963]
[232.08529663 -89.21273804]
[223.43971252 -76.94647980]
[213.91183472 -65.35221863]
[203.55371094 -54.49328232]
[192.42192078 -44.42897797]
[180.57723999 -35.21427536]
[168.08436584 -26.89949799]
[155.01155090 -19.53006363]
[141.43017578 -13.14622116]
[127.41442108 -7.78283501]
[113.04084015 -3.46919990]
[98.38793945 -0.22887586]
[100.53651428 14.61644650]
[102.68509674 29.46176910]
[106.78107452 35.66944122]
[104.72213745 44.63362122]
[106.56546021 59.51993179]
[108.40878296 74.40623474]
[110.25211334 89.29254913]
[118.66551971 101.71086121]
[131.80715942 108.94256592]
[144.94879150 116.17426300]
[161.74061584 118.51327515]
[164.14144897 135.29637146]
[148.67886353 142.24940491]
[137.71708679 129.31590271]
[124.57544708 122.08419800]
[111.43381500 114.85249329]
[98.52111816 122.48545837]
[98.52111816 137.48545837]
[98.52111816 152.48545837]
[98.52111816 167.48545837]
[98.52111816 182.48545837]
[98.52111816 197.48545837]
[98.52111816 212.48545837]
[98.52111816 227.48545837]
[98.52111816 242.48545837]
[98.52111816 257.48547363]
[113.13113403 261.22689819]
[126.35129547 268.48486328]
[137.35057068 278.80316162]
[145.43753052 291.53311157]
[150.10383606 305.87451172]
[151.05615234 320.92590332]
[148.23461914 335.74108887]
[141.81658936 349.38879395]
[132.20552063 361.01110840]
[120.00556183 369.87744141]
[105.98361969 375.43045044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[25 122]
[26 121]
[27 120]
[28 119]
[29 117]
[30 116]
[31 115]
[123 131]
[124 130]
[125 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
