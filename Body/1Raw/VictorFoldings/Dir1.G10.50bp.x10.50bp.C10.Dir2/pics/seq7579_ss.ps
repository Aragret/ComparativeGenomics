%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAACAAAAGGGGGGGGGGCUAACUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACxxxxxxxxxxACAGGACUCAACAUACUAGUCACAGCCCUAUACUCCCUCUACAUAUUUACCCCCCCCCCCCACAACACAA\
) } def
/len { sequence length } bind def

/coor [
[121.07974243 394.64489746]
[109.86431122 384.57955933]
[101.27291107 372.19876099]
[95.76886749 358.17013550]
[93.64900970 343.25024414]
[95.02764893 328.24371338]
[99.83045197 313.95980835]
[107.79839325 301.16885376]
[118.50178528 290.56063843]
[131.36340332 282.70727539]
[145.68963623 278.03225708]
[144.44276428 263.08416748]
[143.19589233 248.13607788]
[141.94902039 233.18798828]
[140.70213318 218.23991394]
[139.45526123 203.29182434]
[138.20838928 188.34373474]
[133.75157166 174.02113342]
[126.29666138 161.00482178]
[118.84175110 147.98851013]
[111.38684082 134.97221375]
[103.93193054 121.95589447]
[84.66905212 118.99707031]
[73.49876404 100.94336700]
[80.48493958 79.05911255]
[68.98313141 69.43058777]
[56.36574554 79.14468384]
[41.92311859 85.83492279]
[26.36736870 89.17468262]
[10.46477699 89.00246429]
[-5.00195360 85.32971191]
[-19.27222633 78.34007263]
[-31.64495087 68.38023376]
[-41.51298904 55.94272232]
[-48.39294815 41.64156342]
[-51.94885635 26.18194580]
[-52.00856781 10.32546329]
[-48.57210922 -5.14740849]
[-41.81150055 -19.47572708]
[-53.70388031 -28.61746216]
[-65.59626007 -37.75919724]
[-77.48863983 -46.90092850]
[-89.38101959 -56.04266357]
[-101.27339935 -65.18439484]
[-113.16577911 -74.32613373]
[-125.94392395 -66.17169189]
[-140.74110413 -62.88244247]
[-155.77049255 -64.85556793]
[-169.21722412 -71.85281372]
[-179.45751953 -83.02921295]
[-185.25483704 -97.03517914]
[-185.90911865 -112.17940521]
[-181.34133911 -126.63317108]
[-172.10308838 -138.65109253]
[-159.30993652 -146.78196716]
[-144.50671387 -150.04394531]
[-129.48098755 -148.04312134]
[-116.04718018 -141.02111816]
[-105.82749176 -129.82586670]
[-100.05599976 -115.80924225]
[-99.42964172 -100.66383362]
[-104.02404785 -86.21851349]
[-92.13166809 -77.07677460]
[-80.23928833 -67.93504333]
[-68.34690857 -58.79330826]
[-56.45452499 -49.65157700]
[-44.56214523 -40.50984192]
[-32.66976547 -31.36810684]
[-21.97979546 -40.61093521]
[-9.67449379 -47.57020187]
[3.76523185 -51.97158432]
[17.81367683 -53.64077377]
[31.92090607 -52.51037598]
[45.53427124 -48.62261963]
[58.12007904 -42.12779999]
[69.18449402 -33.27846146]
[78.29292297 -22.41957283]
[85.08708954 -9.97509193]
[89.29912567 3.56860018]
[90.76213074 17.68169785]
[89.41676331 31.81170082]
[85.31369781 45.40504456]
[78.61165619 57.92878342]
[90.11346436 67.55731201]
[105.07371521 66.46600342]
[115.05643463 55.27023315]
[125.03916168 44.07446671]
[135.02189636 32.87870407]
[130.78694153 18.04398918]
[135.26638794 3.28126431]
[147.03086853 -6.69874048]
[162.32638550 -8.71144199]
[176.27217102 -2.11459494]
[184.41819763 10.98677158]
[184.16508484 26.41205788]
[175.59361267 39.23911285]
[161.43890381 45.37487030]
[146.21765137 42.86142731]
[136.23492432 54.05719376]
[126.25220490 65.25296021]
[116.26947784 76.44872284]
[124.33855438 89.47192383]
[124.13844299 103.64169312]
[116.94824219 114.50098419]
[124.40315247 127.51729584]
[131.85806274 140.53359985]
[139.31297302 153.54991150]
[146.76788330 166.56622314]
[147.14463806 151.57095337]
[151.47990417 137.21110535]
[159.46397400 124.51248932]
[170.52647400 114.38228607]
[183.87713623 107.54417419]
[198.56221008 104.48664856]
[213.53263855 105.42813110]
[227.71896362 110.30136108]
[240.10772705 118.75821686]
[249.81391907 130.19454956]
[256.14416504 143.79338074]
[258.64620972 158.58323669]
[257.14132690 173.50755310]
[251.73706055 187.50018311]
[242.81942749 199.56152344]
[231.02549744 208.82992554]
[217.19781494 214.64329529]
[202.32418823 216.58631897]
[187.46716309 214.52020264]
[173.68809509 208.59252930]
[161.97132874 199.22679138]
[153.15647888 187.09686279]
[154.40335083 202.04495239]
[155.65022278 216.99302673]
[156.89709473 231.94111633]
[158.14398193 246.88920593]
[159.39085388 261.83728027]
[160.63772583 276.78536987]
[175.54051208 279.02230835]
[189.52548218 284.63632202]
[201.83847046 293.32464600]
[211.81544495 304.61874390]
[218.91835022 317.90954590]
[222.76414490 332.48028564]
[223.14541626 347.54519653]
[220.04162598 362.29183960]
[213.62014771 375.92492676]
[204.22726440 387.70925903]
[192.36955261 397.00933838]
[178.68647766 403.32357788]
[163.91592407 406.31152344]
[148.85447693 405.81198120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 108]
[19 107]
[20 106]
[21 105]
[22 104]
[25 84]
[26 83]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[85 101]
[86 100]
[87 99]
[88 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
