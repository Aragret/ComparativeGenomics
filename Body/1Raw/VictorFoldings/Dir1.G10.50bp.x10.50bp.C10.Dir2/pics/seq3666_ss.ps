%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCAACCUGGGGGGGGGGAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCxxxxxxxxxxAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUACCUCUCCCCCCCCCCCACUUCAACCU\
) } def
/len { sequence length } bind def

/coor [
[84.09388733 398.77697754]
[70.87368774 391.50451660]
[59.98688889 381.05749512]
[52.17575836 368.14825439]
[47.97287750 353.65692139]
[47.66480255 338.57159424]
[51.27254486 323.92077637]
[58.55011749 310.70336914]
[69.00132751 299.82061768]
[81.91358948 292.01446533]
[96.40652466 287.81716919]
[96.09446716 272.82043457]
[95.78240967 257.82366943]
[95.47035217 242.82691956]
[95.15830231 227.83016968]
[94.84624481 212.83341980]
[94.53418732 197.83665466]
[94.22212982 182.83990479]
[93.91007233 167.84315491]
[93.59801483 152.84640503]
[93.28596497 137.84963989]
[92.97390747 122.85289001]
[92.66184998 107.85614014]
[89.56352997 93.17961121]
[83.78725433 79.33639526]
[78.01097870 65.49317932]
[72.23471069 51.64995956]
[66.45843506 37.80674362]
[60.68216324 23.96352577]
[54.90589142 10.12030792]
[49.12961960 -3.72290993]
[43.35334778 -17.56612778]
[37.57707596 -31.40934563]
[31.34448051 -38.17740250]
[31.82794571 -45.60114288]
[26.34091568 -59.56153107]
[20.85388374 -73.52191925]
[6.38319349 -69.51982117]
[-8.42656231 -67.05226135]
[-23.41312027 -66.14628601]
[-38.41228104 -66.81182098]
[-53.25970078 -69.04157257]
[-67.79270935 -72.81111908]
[-81.85206604 -78.07913971]
[-95.28373718 -84.78793335]
[-107.94055939 -92.86398315]
[-119.68385315 -102.21881104]
[-130.38494873 -112.74991608]
[-139.92660522 -124.34191895]
[-148.20428467 -136.86781311]
[-155.12727356 -150.19033813]
[-160.61973572 -164.16354370]
[-164.62149048 -178.63433838]
[-167.08868408 -193.44415283]
[-167.99429321 -208.43074036]
[-167.32839966 -223.42987061]
[-165.09828186 -238.27723694]
[-161.32838440 -252.81016541]
[-156.06002808 -266.86938477]
[-149.35090637 -280.30090332]
[-141.27453613 -292.95751953]
[-131.91943359 -304.70059204]
[-121.38806152 -315.40142822]
[-109.79582977 -324.94281006]
[-97.26974487 -333.22018433]
[-83.94704437 -340.14285278]
[-69.97370148 -345.63497925]
[-55.50281525 -349.63635254]
[-40.69293976 -352.10321045]
[-25.70633698 -353.00845337]
[-10.70720959 -352.34219360]
[4.14010286 -350.11172485]
[18.67292595 -346.34146118]
[32.73203278 -341.07275391]
[46.16337585 -334.36331177]
[58.81980515 -326.28665161]
[70.56264496 -316.93124390]
[81.26322937 -306.39962769]
[90.80432129 -294.80715942]
[99.08138275 -282.28085327]
[106.00373077 -268.95800781]
[111.49551392 -254.98452759]
[115.49656677 -240.51353455]
[117.96304321 -225.70359802]
[118.86792755 -210.71697998]
[118.20129395 -195.71786499]
[115.97045898 -180.87060547]
[112.19985962 -166.33787537]
[106.93080902 -152.27890015]
[100.22103882 -138.84771729]
[92.14406586 -126.19149017]
[82.78838348 -114.44887543]
[72.25650024 -103.74855042]
[60.66379929 -94.20773315]
[48.13731003 -85.93097687]
[34.81427383 -79.00895691]
[40.30130386 -65.04856110]
[45.78833771 -51.08817291]
[51.42029190 -37.18561935]
[57.19656372 -23.34239960]
[62.97283936 -9.49918270]
[68.74910736 4.34403563]
[74.52538300 18.18725395]
[80.30165863 32.03047180]
[86.07792664 45.87368774]
[91.85420227 59.71690750]
[97.63047028 73.56012726]
[103.40674591 87.40334320]
[105.77349854 72.59123230]
[112.52381134 59.19596863]
[123.02098083 48.48104477]
[136.27484131 41.45715332]
[151.03523254 38.78681946]
[165.90989685 40.72192001]
[179.49575806 47.07992935]
[190.51135254 57.26113129]
[197.91761780 70.30518341]
[201.01596069 84.98169708]
[199.51414490 99.90632629]
[193.55381775 113.67130280]
[183.69718933 124.97824097]
[170.87397766 132.76062012]
[156.29374695 136.28436279]
[141.33177185 135.21710205]
[127.39932251 129.65950012]
[115.81059265 120.13577271]
[107.65859985 107.54408264]
[107.97065735 122.54084015]
[108.28271484 137.53759766]
[108.59477234 152.53434753]
[108.90682983 167.53109741]
[109.21888733 182.52784729]
[109.53093719 197.52461243]
[109.84299469 212.52136230]
[110.15505219 227.51811218]
[110.46710968 242.51486206]
[110.77916718 257.51162720]
[111.09122467 272.50836182]
[111.40327454 287.50512695]
[126.05827332 291.09588623]
[139.28407288 298.35815430]
[150.17893982 308.79675293]
[158.00004578 321.69995117]
[162.21411133 336.18801880]
[162.53382874 351.27313232]
[158.93740845 365.92672729]
[151.67004395 379.14971924]
[141.22724915 390.04055786]
[128.32101440 397.85668945]
[113.83132172 402.06515503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[24 108]
[25 107]
[26 106]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[35 98]
[36 97]
[37 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
