%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUACCACUCAGGGGGGGGGGCCCUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCxxxxxxxxxxAGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCCCCCCCCCCCUACCACACA\
) } def
/len { sequence length } bind def

/coor [
[87.64643860 484.58258057]
[74.15756226 477.85104370]
[62.67205811 468.08648682]
[53.85768890 455.85659790]
[48.22690964 441.87240601]
[46.10707855 426.94692993]
[47.62144852 411.94790649]
[52.68197250 397.74740601]
[60.99443817 385.17098999]
[72.07556915 374.94982910]
[85.28112030 367.67819214]
[99.84334564 363.77880859]
[99.53536987 348.78198242]
[99.22739410 333.78515625]
[98.91941071 318.78829956]
[98.61143494 303.79147339]
[98.30345917 288.79464722]
[97.99548340 273.79779053]
[97.68750000 258.80096436]
[97.37952423 243.80412292]
[97.07154846 228.80728149]
[82.43330383 222.46961975]
[71.97512054 210.34832764]
[67.82060242 194.82730103]
[70.84695435 178.98835754]
[80.50038910 165.99919128]
[94.89659119 158.47996521]
[94.28076935 143.49261475]
[93.66493988 128.50526428]
[93.04911804 113.51791382]
[89.05837250 127.97730255]
[76.40184784 136.02792358]
[61.61413956 133.51321411]
[52.33017731 121.73152924]
[53.34328461 106.76578522]
[64.13039398 96.34281921]
[79.12403870 95.84470367]
[64.69665527 91.73976135]
[50.26927185 87.63481903]
[35.84188461 83.52986908]
[24.33618164 93.80714417]
[9.09707832 96.20991516]
[-5.01268005 89.97146606]
[-13.49072170 77.08245850]
[-13.63173485 61.65574265]
[-5.39072227 48.61391449]
[8.60263920 42.11857986]
[23.88311768 44.24237442]
[35.57476807 54.30760193]
[39.94683075 69.10248566]
[54.37421417 73.20743561]
[68.80159760 77.31237793]
[83.22898102 81.41732025]
[91.81251526 85.27216339]
[97.59947968 91.66931915]
[104.14735413 78.17393494]
[110.69522095 64.67855072]
[117.24309540 51.18316650]
[106.50179291 39.25817871]
[101.15985107 24.16473961]
[102.00424194 8.21465397]
[108.87676239 -6.16101122]
[120.70267487 -16.78245735]
[135.65866089 -22.05167198]
[151.45393372 -21.19280052]
[157.72332764 -34.81977844]
[163.99273682 -48.44675827]
[170.26214600 -62.07373810]
[176.53155518 -75.70071411]
[182.80094910 -89.32769775]
[170.47659302 -97.95034027]
[159.89007568 -108.63515472]
[151.38171387 -121.03868103]
[145.22500610 -134.76219177]
[141.61787415 -149.36453247]
[140.67626953 -164.37631226]
[142.43046570 -179.31492615]
[146.82408142 -193.70021057]
[153.71585083 -207.06968689]
[162.88424683 -218.99362183]
[174.03456116 -229.08869934]
[186.80833435 -237.03039551]
[200.79495239 -242.56341553]
[215.54478455 -245.50990295]
[230.58372498 -245.77514648]
[245.42829895 -243.35061646]
[259.60131836 -238.31423950]
[272.64721680 -230.82792664]
[284.14654541 -221.13233948]
[293.72973633 -209.53912354]
[301.08868408 -196.42097473]
[305.98681641 -182.19958496]
[308.26669312 -167.33210754]
[307.85504150 -152.29647827]
[304.76507568 -137.57601929]
[299.09616089 -123.64393616]
[291.03045654 -110.94808960]
[280.82730103 -99.89659882]
[268.81466675 -90.84472656]
[255.37872314 -84.08345032]
[240.95135498 -79.83010864]
[225.99635315 -78.22144318]
[210.99446106 -79.30915833]
[196.42793274 -83.05828857]
[190.15852356 -69.43131256]
[183.88912964 -55.80433273]
[177.61972046 -42.17735291]
[171.35031128 -28.55037498]
[165.08090210 -14.92339516]
[175.01881409 -4.97053576]
[180.96603394 7.80813980]
[182.18672180 21.88003731]
[178.51327515 35.54972076]
[170.36895752 47.16318893]
[158.71929932 55.30799866]
[144.95764160 58.98503494]
[130.73847961 57.73103714]
[124.19060516 71.22642517]
[117.64273834 84.72180939]
[111.09486389 98.21718597]
[108.03646851 112.90208435]
[108.65229797 127.88944244]
[109.26811981 142.87680054]
[109.88394928 157.86415100]
[123.09160614 162.98510742]
[133.31092834 172.73214722]
[139.01547241 185.60357666]
[139.37071228 199.63458252]
[134.35592651 212.69715881]
[124.76231384 222.82284546]
[112.06838989 228.49929810]
[112.37636566 243.49613953]
[112.68434143 258.49298096]
[112.99231720 273.48980713]
[113.30030060 288.48666382]
[113.60827637 303.48348999]
[113.91625214 318.48034668]
[114.22422791 333.47717285]
[114.53221130 348.47399902]
[114.84018707 363.47085571]
[129.55021667 366.76907349]
[143.04318237 373.49243164]
[154.53459167 383.25003052]
[163.35638428 395.47457886]
[168.99563599 409.45535278]
[171.12451172 424.37954712]
[169.61923218 439.37945557]
[164.56732178 453.58303833]
[156.26248169 466.16448975]
[145.18756104 476.39236450]
[131.98640442 483.67199707]
[117.42655182 487.58020020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[27 124]
[28 123]
[29 122]
[30 121]
[37 53]
[38 52]
[39 51]
[40 50]
[55 120]
[56 119]
[57 118]
[58 117]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
