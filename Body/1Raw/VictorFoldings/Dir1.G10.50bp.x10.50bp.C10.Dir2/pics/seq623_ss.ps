%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUACUAAUGGGGGGGGGGCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCxxxxxxxxxxAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCUCCUAGCCUUACCCCCCCCCCCUACUAAUAAU\
) } def
/len { sequence length } bind def

/coor [
[-8.19268703 245.68406677]
[-15.73314190 239.76889038]
[-22.95079231 233.46388245]
[-29.82550430 226.78660583]
[-36.33810425 219.75569153]
[-42.47042847 212.39074707]
[-48.20537186 204.71232605]
[-53.52693558 196.74185181]
[-58.42027664 188.50152588]
[-71.80656433 195.26963806]
[-85.19284821 202.03775024]
[-98.57913208 208.80586243]
[-111.96541595 215.57398987]
[-120.78982544 228.70564270]
[-135.63900757 227.54336548]
[-149.02529907 234.31147766]
[-162.41157532 241.07960510]
[-175.79786682 247.84771729]
[-189.18415833 254.61582947]
[-188.00390625 269.77087402]
[-192.71784973 284.22241211]
[-202.60711670 295.76672363]
[-216.16368103 302.64334106]
[-231.32026672 303.80364990]
[-245.76560974 299.07070923]
[-257.29687500 289.16625977]
[-264.15567017 275.60064697]
[-265.29602051 260.44253540]
[-260.54409790 246.00344849]
[-250.62448120 234.48521423]
[-237.04986572 227.64428711]
[-221.89027405 226.52386475]
[-207.45744324 231.29478455]
[-195.95227051 241.22953796]
[-182.56597900 234.46142578]
[-169.17970276 227.69331360]
[-155.79341125 220.92520142]
[-142.40711975 214.15708923]
[-134.54019165 201.50952148]
[-118.73352814 202.18769836]
[-105.34724426 195.41958618]
[-91.96096039 188.65147400]
[-78.57467651 181.88336182]
[-65.18839264 175.11523438]
[-76.28733826 143.03810120]
[-81.21839142 109.45514679]
[-79.80901337 75.54138184]
[-72.10851288 42.48337173]
[-58.38632965 11.43773651]
[-39.12255859 -16.50930214]
[-14.99120235 -40.37994003]
[-24.00873184 -52.36677170]
[-33.02626038 -64.35360718]
[-42.04379272 -76.34043884]
[-57.13938904 -73.81427002]
[-71.67622375 -78.60375977]
[-82.31382751 -89.60829926]
[-86.60776520 -104.29913330]
[-83.57131195 -119.30042267]
[-73.90223694 -131.16496277]
[-59.82241440 -137.16639709]
[-44.56727982 -135.92561340]
[-31.64236069 -127.72774506]
[-24.01770210 -114.45660400]
[-23.44539833 -99.16180420]
[-30.05695915 -85.35796356]
[-21.03942871 -73.37113190]
[-12.02190018 -61.38430023]
[-3.00436997 -49.39746857]
[5.02667093 -54.62720108]
[13.32261372 -59.42564011]
[21.86031914 -63.77940750]
[30.61597252 -67.67636108]
[39.56515503 -71.10562134]
[48.68289948 -74.05763245]
[57.94378281 -76.52416229]
[67.32196808 -78.49832153]
[76.79130554 -79.97460938]
[86.32537079 -80.94891357]
[95.89757538 -81.41850281]
[105.48123169 -81.38208008]
[115.04959106 -80.83974457]
[124.57598114 -79.79300690]
[134.03381348 -78.24478149]
[143.39672852 -76.19940186]
[152.63859558 -73.66255188]
[161.73364258 -70.64132690]
[170.65649414 -67.14414215]
[179.38227844 -63.18075180]
[187.88664246 -58.76221848]
[196.14587402 -53.90085983]
[204.13693237 -48.61023712]
[211.83753967 -42.90510941]
[219.22619629 -36.80138779]
[226.28230286 -30.31609535]
[232.98617554 -23.46732330]
[239.31913757 -16.27417374]
[245.26348877 -8.75670815]
[250.80268860 -0.93589699]
[255.92124939 7.16644669]
[260.60491943 15.52772427]
[264.84060669 24.12461281]
[268.61654663 32.93313599]
[271.92218018 41.92872238]
[274.74826050 51.08628464]
[277.08694458 60.38027573]
[278.93167114 69.78477478]
[280.27734375 79.27355194]
[281.12017822 88.82013702]
[281.45782471 98.39791107]
[281.28933716 107.98014832]
[280.61520386 117.54013062]
[279.43728638 127.05118561]
[277.75888062 136.48678589]
[275.58465576 145.82063293]
[272.92071533 155.02665710]
[269.77444458 164.07920837]
[266.15463257 172.95303345]
[262.07138062 181.62336731]
[257.53607178 190.06604004]
[252.56135559 198.25749207]
[247.16111755 206.17489624]
[241.35041809 213.79614258]
[235.14546204 221.09999084]
[228.56355286 228.06605530]
[221.62304688 234.67492676]
[214.34332275 240.90815735]
[206.74465942 246.74836731]
[198.84825134 252.17926025]
[190.67614746 257.18569946]
[182.25112915 261.75369263]
[173.59667969 265.87051392]
[164.73696899 269.52471924]
[155.69668579 272.70605469]
[146.50105286 275.40570068]
[137.17570496 277.61608887]
[127.74668121 279.33105469]
[118.24026489 280.54583740]
[108.68296814 281.25701904]
[99.10145569 281.46264648]
[89.52244568 281.16213989]
[79.97266388 280.35635376]
[70.47874451 279.04748535]
[61.06715775 277.23919678]
[51.76417160 274.93658447]
[42.59572220 272.14602661]
[33.58738708 268.87530518]
[24.76428986 265.13354492]
[16.15104294 260.93121338]
[7.77166939 256.27999878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[51 69]
[52 68]
[53 67]
[54 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
