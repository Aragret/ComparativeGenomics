%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUCCCACAAGGGGGGGGGGCACUUUCUCGGCCUAUCCGGAAUGCCCCGACGUUACUCGGACUACCCCGAxxxxxxxxxxGCACAGUGAUUAUAGGCUUUCGCUCUAAGAUUAAAAAUGCCCUAGCCCACCCCCCCCCCCUUCUUACCACAA\
) } def
/len { sequence length } bind def

/coor [
[132.36883545 422.44241333]
[118.66667938 416.18151855]
[106.70156860 407.02816772]
[97.07365417 395.44149780]
[90.26587677 382.00265503]
[86.61970520 367.38577271]
[86.31803894 352.32403564]
[89.37600708 337.57287598]
[95.64021301 323.87222290]
[104.79646301 311.90933228]
[116.38546753 302.28424072]
[129.82594299 295.47970581]
[144.44369507 291.83706665]
[144.13969421 276.84014893]
[143.83569336 261.84323120]
[143.53169250 246.84632874]
[143.22767639 231.84941101]
[142.92367554 216.85247803]
[142.61967468 201.85556030]
[142.31567383 186.85864258]
[142.01167297 171.86172485]
[141.70765686 156.86480713]
[135.37603760 143.26663208]
[124.09426880 133.38119507]
[112.81250000 123.49577332]
[101.53072357 113.61035156]
[87.17386627 109.26517487]
[72.30384827 111.23562622]
[57.43383789 113.20607758]
[49.28141785 117.45804596]
[42.24284363 115.06261444]
[27.33594894 116.73129272]
[12.42905331 118.39997101]
[1.33406544 129.98793030]
[-14.62971497 128.39505005]
[-23.21624184 114.84326172]
[-17.83866692 99.72832489]
[-2.62220502 94.64513397]
[10.76037693 103.49307251]
[25.66727066 101.82439423]
[40.57416534 100.15572357]
[55.46338654 98.33606720]
[70.33339691 96.36560822]
[85.20341492 94.39515686]
[91.94546509 80.99572754]
[84.66593170 67.88053131]
[77.38640594 54.76533127]
[63.33439255 58.46735001]
[48.81403351 58.68591309]
[34.67543411 55.41277313]
[21.74525642 48.84398270]
[10.77838898 39.36813736]
[2.41386986 27.54341888]
[-2.86234665 14.06468391]
[-4.74562359 -0.27734530]
[-3.13022351 -14.64247608]
[1.88476193 -28.19026375]
[10.00148106 -40.12918091]
[20.74100685 -49.76287460]
[13.72877693 -63.02291489]
[6.71654797 -76.28295135]
[-0.29568130 -89.54299164]
[-15.47087193 -93.95764160]
[-23.00638962 -107.84978485]
[-18.43154335 -122.97744751]
[-4.46051073 -130.36567688]
[10.61794376 -125.63114166]
[17.85803986 -111.58277893]
[12.96435833 -96.55522156]
[19.97658730 -83.29518127]
[26.98881721 -70.03514099]
[34.00104523 -56.77510452]
[49.09748459 -60.35064697]
[64.61645508 -59.91056061]
[79.50731659 -55.47890091]
[92.76047516 -47.35015106]
[103.47583771 -36.06964874]
[110.92391968 -22.39702606]
[114.59552765 -7.25502586]
[114.23657227 8.33274269]
[109.86560059 23.31101799]
[101.77297974 36.66432190]
[90.50160217 47.48580170]
[97.78113556 60.60099792]
[105.06066132 73.71620178]
[115.96479797 89.31793213]
[111.41615295 102.32858276]
[122.69792175 112.21400452]
[133.97969055 122.09942627]
[145.26145935 131.98484802]
[140.25518799 117.84494019]
[146.02305603 103.99821472]
[159.58709717 97.59377289]
[173.94416809 101.93824768]
[181.68168640 114.78856659]
[178.80474854 129.51008606]
[166.79675293 138.50262451]
[181.66677856 136.53216553]
[196.53678894 134.56172180]
[211.40679932 132.59126282]
[218.86119080 119.11022949]
[232.66294861 112.67869568]
[247.43069458 115.57315063]
[257.54129028 126.47789764]
[272.41131592 124.50744629]
[275.95895386 109.75012207]
[284.60122681 97.27310944]
[297.16928101 88.76382446]
[311.96347046 85.37307739]
[326.98291016 87.55944061]
[340.19641113 95.02722168]
[349.81695557 106.76647186]
[354.54339600 121.18954468]
[353.73657227 136.34584045]
[347.50555420 150.18560791]
[336.69308472 160.83711243]
[322.76141357 166.85983276]
[307.59472656 167.43925476]
[293.24414062 162.49700928]
[281.65051270 152.70149231]
[274.38177490 139.37745667]
[259.51174927 141.34791565]
[252.59024048 154.50962830]
[239.08602905 161.15043640]
[224.08551025 158.53555298]
[213.37725830 147.46127319]
[198.50723267 149.43173218]
[183.63722229 151.40217590]
[168.76721191 153.37263489]
[164.67872620 156.10086060]
[160.46139526 157.10775757]
[156.70457458 156.56080627]
[157.00859070 171.55772400]
[157.31259155 186.55464172]
[157.61659241 201.55155945]
[157.92059326 216.54847717]
[158.22460938 231.54539490]
[158.52861023 246.54231262]
[158.83261108 261.53924561]
[159.13661194 276.53616333]
[159.44061279 291.53308105]
[174.19400024 294.58032227]
[187.89918518 300.83456421]
[199.86872864 309.98211670]
[209.50225830 321.56411743]
[216.31654358 334.99963379]
[219.96980286 349.61474609]
[220.27876282 364.67636108]
[217.22795105 379.42901611]
[210.97038269 393.13265991]
[201.81993103 405.10000610]
[190.23559570 414.73071289]
[176.79841614 421.54174805]
[162.18241882 425.19146729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 90]
[24 89]
[25 88]
[26 87]
[27 44]
[28 43]
[29 42]
[31 41]
[32 40]
[33 39]
[45 85]
[46 84]
[47 83]
[59 72]
[60 71]
[61 70]
[62 69]
[97 129]
[98 128]
[99 127]
[100 126]
[104 122]
[105 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
