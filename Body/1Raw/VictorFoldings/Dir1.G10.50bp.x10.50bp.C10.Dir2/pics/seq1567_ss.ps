%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACCACCGGGGGGGGGGUCUUGCUCAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUAxxxxxxxxxxAUGCACACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCCCCCCCCCCCUUACCACC\
) } def
/len { sequence length } bind def

/coor [
[101.07149506 375.38467407]
[87.22555542 369.36865234]
[75.51689148 359.83923340]
[66.81436920 347.50357056]
[61.76376343 333.27703857]
[60.73987579 318.21536255]
[63.81867218 303.43621826]
[70.77169800 290.03628540]
[81.08297729 279.00994873]
[93.98735809 271.17544556]
[108.52724457 267.11413574]
[108.52724457 252.11413574]
[108.52724457 237.11413574]
[108.52724457 222.11413574]
[108.52724457 207.11413574]
[108.52724457 192.11413574]
[108.52724457 177.11413574]
[108.52724457 162.11413574]
[108.52724457 147.11413574]
[108.52724457 132.11413574]
[90.41315460 130.47581482]
[76.57669830 119.79785156]
[70.88652802 104.02557373]
[74.41141510 88.36005402]
[62.90961456 78.73152924]
[51.40781021 69.10300446]
[39.67195511 78.51902771]
[26.32880592 85.46221924]
[11.89205742 89.66737366]
[-3.08291101 90.97467804]
[-18.02039337 89.33575439]
[-32.34649277 84.81546021]
[-45.51116180 77.58929443]
[-57.00934601 67.93664551]
[-66.40032196 56.22992325]
[-73.32462311 42.92023849]
[-77.51779175 28.51999474]
[-78.82046509 13.58316803]
[-77.18443298 -1.31600046]
[-72.67444611 -15.60508537]
[-65.46561432 -28.73546791]
[-76.96742249 -38.36399460]
[-88.46922302 -47.99251938]
[-104.01760101 -50.91801453]
[-108.81011963 -65.02053070]
[-120.31192780 -74.64906311]
[-135.86030579 -77.57455444]
[-140.65281677 -91.67707062]
[-152.15461731 -101.30559540]
[-163.65643311 -110.93412781]
[-175.15823364 -120.56265259]
[-190.87666321 -118.91754150]
[-203.10176086 -128.93365479]
[-204.58059692 -144.66859436]
[-194.43580627 -156.78712463]
[-178.68609619 -158.09951782]
[-166.67550659 -147.82714844]
[-165.52970886 -132.06445312]
[-154.02790833 -122.43592834]
[-142.52609253 -112.80740356]
[-131.02429199 -103.17887878]
[-116.29860687 -100.94207764]
[-110.68339539 -86.15086365]
[-99.18159485 -76.52233887]
[-84.45590210 -74.28553772]
[-78.84069824 -59.49432373]
[-67.33889771 -49.86579895]
[-55.83709335 -40.23727036]
[-44.17970276 -49.64361954]
[-30.90689087 -56.59706497]
[-16.52791214 -60.82870483]
[-1.59487343 -62.17410278]
[13.31846046 -60.57968903]
[27.63871574 -56.10487366]
[40.81495667 -48.91985703]
[52.33987045 -39.29914093]
[61.76931763 -27.61104584]
[68.73942566 -14.30361271]
[72.98065186 0.11257364]
[74.32820129 15.08397484]
[72.72840118 30.03535271]
[68.24088287 44.39187241]
[61.03633499 57.60120010]
[72.53813934 67.22972870]
[84.03993988 76.85825348]
[91.26766968 72.60713196]
[99.60507965 70.61219025]
[108.34860992 71.15395355]
[116.72741699 74.29398346]
[123.97129822 79.86017609]
[129.38124084 87.45305634]
[132.39614868 96.47321320]
[132.64941406 106.16821289]
[147.60966492 105.07690430]
[149.13351440 90.11531830]
[153.23243713 75.64569855]
[159.78187561 62.10775757]
[168.58282471 49.91289902]
[179.36779785 39.43171310]
[191.80908203 30.98270607]
[205.52857971 24.82263565]
[220.10937500 21.13870239]
[235.10838318 20.04285431]
[250.06980896 21.56839371]
[264.53897095 25.66896057]
[278.07614136 32.21994400]
[290.27001953 41.02226639]
[300.74996948 51.80843735]
[309.19757080 64.25067139]
[315.35607910 77.97087097]
[319.03836060 92.55209351]
[320.13250732 107.55122375]
[318.60528564 122.51245880]
[314.50308228 136.98115540]
[307.95056152 150.51760864]
[299.14685059 162.71046448]
[288.35949707 173.18920898]
[275.91629028 181.63539124]
[262.19540405 187.79235840]
[247.61376953 191.47297668]
[232.61450195 192.56542969]
[217.65344238 191.03649902]
[203.18521118 186.93264771]
[189.64950562 180.37858582]
[177.45764160 171.57350159]
[166.98011780 160.78495789]
[158.53535461 148.34080505]
[152.37994385 134.61920166]
[148.70097351 120.03715515]
[133.74072266 121.12846375]
[123.52724457 132.11413574]
[123.52724457 147.11413574]
[123.52724457 162.11413574]
[123.52724457 177.11413574]
[123.52724457 192.11413574]
[123.52724457 207.11413574]
[123.52724457 222.11413574]
[123.52724457 237.11413574]
[123.52724457 252.11413574]
[123.52724457 267.11413574]
[138.06713867 271.17544556]
[150.97151184 279.00994873]
[161.28280640 290.03628540]
[168.23582458 303.43621826]
[171.31462097 318.21536255]
[170.29072571 333.27703857]
[165.24012756 347.50357056]
[156.53759766 359.83923340]
[144.82893372 369.36865234]
[130.98300171 375.38467407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 85]
[25 84]
[26 83]
[41 68]
[42 67]
[43 66]
[45 64]
[46 63]
[48 61]
[49 60]
[50 59]
[51 58]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
