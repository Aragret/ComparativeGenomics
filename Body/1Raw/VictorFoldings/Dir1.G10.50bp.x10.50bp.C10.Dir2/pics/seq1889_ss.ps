%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCCACUCGGGGGGGGGGCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUxxxxxxxxxxGCCCUCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGGACUGCAACCCCCCCCCCAACCCCACUC\
) } def
/len { sequence length } bind def

/coor [
[83.81565857 379.82470703]
[69.96971893 373.80868530]
[58.26105499 364.27926636]
[49.55852890 351.94360352]
[44.50792694 337.71707153]
[43.48403549 322.65539551]
[46.56283569 307.87622070]
[53.51585770 294.47631836]
[63.82714081 283.44998169]
[76.73152161 275.61547852]
[91.27140808 271.55413818]
[91.27140808 256.55413818]
[91.27140808 241.55415344]
[91.27140808 226.55415344]
[91.27140808 211.55415344]
[91.27140808 196.55415344]
[91.27140808 181.55415344]
[91.27140808 166.55415344]
[91.27140808 151.55415344]
[91.27140808 136.55415344]
[85.27799225 132.04537964]
[78.08660889 145.20912170]
[71.48757172 158.67956543]
[56.51296997 157.80699158]
[51.52311325 143.66128540]
[62.63665009 133.58633423]
[73.29116058 123.02785492]
[67.29774475 118.51908875]
[52.88552856 122.67697906]
[39.34306335 132.87687683]
[25.79285049 122.68727112]
[31.83317566 106.84584045]
[48.72764206 108.26476288]
[63.13985825 104.10687256]
[76.19106293 79.73642731]
[98.73908997 74.59020996]
[102.44525146 60.05527115]
[97.03607941 42.48482132]
[109.70368958 30.37979698]
[113.10666656 15.77090454]
[116.50965118 1.16201174]
[119.91262817 -13.44688129]
[123.31560516 -28.05577278]
[126.71858215 -42.66466522]
[130.12156677 -57.27355957]
[117.18054199 -49.68870163]
[102.36342621 -52.02390289]
[92.38251495 -63.22128677]
[91.75926208 -78.20833588]
[100.77599335 -90.19576263]
[115.34806061 -93.75315094]
[128.87416077 -87.26896667]
[135.22688293 -73.68020630]
[140.56838989 -87.69692230]
[145.76380920 -101.76844025]
[150.95922852 -115.83995819]
[156.15463257 -129.91148376]
[149.79052734 -144.12892151]
[155.25987244 -158.32543945]
[168.85325623 -164.30503845]
[174.04866028 -178.37655640]
[179.24407959 -192.44807434]
[184.43949890 -206.51959229]
[181.96096802 -222.14544678]
[193.62756348 -231.40501404]
[198.82298279 -245.47653198]
[204.01840210 -259.54806519]
[209.21382141 -273.61956787]
[214.40924072 -287.69110107]
[219.60464478 -301.76260376]
[206.92488098 -309.88897705]
[196.28880310 -320.55142212]
[188.19389343 -333.25128174]
[183.01873779 -347.39453125]
[181.00543213 -362.31970215]
[182.24809265 -377.32870483]
[186.68864441 -391.71951294]
[194.11935425 -404.81909180]
[204.19270325 -416.01467896]
[216.43753052 -424.78271484]
[230.28112793 -430.71307373]
[245.07600403 -433.52835083]
[260.13015747 -433.09689331]
[274.73950195 -429.43890381]
[288.22073364 -422.72543335]
[299.94329834 -413.27050781]
[309.35891724 -401.51635742]
[316.02719116 -388.01272583]
[319.63626099 -373.39120483]
[320.01730347 -358.33569336]
[317.15249634 -343.55032349]
[311.17581177 -329.72665405]
[302.36685181 -317.51126099]
[291.13754272 -307.47546387]
[278.01318359 -300.08865356]
[263.60757446 -295.69631958]
[248.59451294 -294.50390625]
[233.67616272 -296.56719971]
[228.48075867 -282.49566650]
[223.28533936 -268.42416382]
[218.08992004 -254.35264587]
[212.89450073 -240.28112793]
[207.69909668 -226.20960999]
[210.54922485 -211.59024048]
[198.51101685 -201.32417297]
[193.31559753 -187.25265503]
[188.12019348 -173.18113708]
[182.92477417 -159.10961914]
[189.37086487 -145.73114014]
[184.30242920 -131.38661194]
[170.22615051 -124.71606445]
[165.03074646 -110.64454651]
[159.83532715 -96.57302856]
[154.63990784 -82.50150299]
[155.27770996 -75.08943176]
[149.18727112 -68.19317627]
[144.73045349 -53.87057877]
[141.32746887 -39.26168823]
[137.92449951 -24.65279579]
[134.52151489 -10.04390335]
[131.11854553 4.56498957]
[127.71556091 19.17388153]
[124.31258392 33.78277588]
[130.44487000 44.25666428]
[127.68257141 56.48730469]
[116.98018646 63.76143265]
[113.27402496 78.29637146]
[125.93247986 88.53742981]
[130.70497131 105.88921356]
[123.92855072 124.40190887]
[106.27140808 136.55415344]
[106.27140808 151.55415344]
[106.27140808 166.55415344]
[106.27140808 181.55415344]
[106.27140808 196.55415344]
[106.27140808 211.55415344]
[106.27140808 226.55415344]
[106.27140808 241.55415344]
[106.27140808 256.55413818]
[106.27140808 271.55413818]
[120.81129456 275.61547852]
[133.71568298 283.44998169]
[144.02696228 294.47631836]
[150.97998047 307.87622070]
[154.05877686 322.65539551]
[153.03489685 337.71707153]
[147.98428345 351.94360352]
[139.28176880 364.27926636]
[127.57310486 373.80868530]
[113.72716522 379.82470703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[28 34]
[29 33]
[36 127]
[37 126]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[53 116]
[54 114]
[55 113]
[56 112]
[57 111]
[60 108]
[61 107]
[62 106]
[63 105]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
