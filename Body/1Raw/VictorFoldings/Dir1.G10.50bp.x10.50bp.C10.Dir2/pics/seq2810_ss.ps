%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACACAGCGGGGGGGGGGAAGACGAGAAGACCCUAUGGAGCUUUAAUUUAUUAAUGCAAACAGUACCUxxxxxxxxxxAAAUUAAAAAAACUAUUAAACCCAUAUAACCUCCCCCAAAAUUCAGAAUACCCCCCCCCCAUAACACACC\
) } def
/len { sequence length } bind def

/coor [
[111.00126648 590.71777344]
[97.15532684 584.70178223]
[85.44666290 575.17236328]
[76.74414062 562.83666992]
[71.69354248 548.61016846]
[70.66964722 533.54846191]
[73.74844360 518.76934814]
[80.70146942 505.36938477]
[91.01275635 494.34307861]
[103.91713715 486.50854492]
[118.45702362 482.44723511]
[118.45702362 467.44723511]
[118.45702362 452.44723511]
[118.45702362 437.44723511]
[118.45702362 422.44723511]
[118.45702362 407.44723511]
[118.45702362 392.44723511]
[118.45702362 377.44723511]
[118.45702362 362.44723511]
[118.45702362 347.44723511]
[105.26753998 342.55831909]
[94.52302551 333.43353271]
[87.53286743 321.15798950]
[85.15809631 307.20242310]
[87.70537567 293.24688721]
[94.88755798 280.97854614]
[105.85588837 271.88772583]
[119.30030823 267.08682251]
[119.61235809 252.09007263]
[118.36548615 237.14199829]
[115.57316589 222.40419006]
[101.46817780 217.61723328]
[91.58734894 206.33781433]
[88.65963745 191.52920532]
[93.56956482 177.14903259]
[105.09326935 167.09161377]
[102.30094910 152.35382080]
[99.50862122 137.61601257]
[96.71629333 122.87820435]
[93.92397308 108.14039612]
[89.42190552 101.38647461]
[91.23020935 93.06713867]
[86.69555664 85.06159210]
[88.85060120 77.94109344]
[86.67376709 63.09989166]
[84.49693298 48.25868607]
[82.32009125 33.41748047]
[80.14325714 18.57627487]
[77.35092926 3.83846831]
[73.94795227 -10.77042389]
[70.54497528 -25.37931633]
[59.87863922 -37.06434250]
[64.52682495 -51.21508789]
[61.12384415 -65.82398224]
[57.72086716 -80.43287659]
[54.31788635 -95.04176331]
[50.91490936 -109.65065765]
[35.84526443 -109.70117188]
[21.19361687 -113.22621155]
[7.75010729 -120.03567505]
[-3.76027107 -129.76232910]
[-12.71677780 -141.88163757]
[-18.63640022 -155.74002075]
[-21.19990158 -170.59011841]
[-20.26903343 -185.63107300]
[-15.89399624 -200.05174255]
[-8.31073189 -213.07444763]
[2.07180452 -223.99688721]
[14.69369602 -232.23002625]
[28.87425995 -237.32986450]
[43.84875488 -239.02136230]
[58.80962753 -237.21331787]
[72.95005798 -232.00323486]
[85.50746155 -223.67207336]
[95.80464935 -212.66912842]
[103.28629303 -199.58778381]
[107.54891968 -185.13348389]
[108.36265564 -170.08573914]
[105.68361664 -155.25605774]
[99.65627289 -141.44418335]
[90.60568237 -129.39497375]
[79.01992035 -119.75822449]
[65.52380371 -113.05363464]
[68.92678070 -98.44474792]
[72.32975769 -83.83585358]
[75.73273468 -69.22695923]
[79.13571167 -54.61806488]
[89.55864716 -43.97796631]
[85.15386963 -28.78229523]
[88.55684662 -14.17340183]
[91.95982361 0.43549043]
[94.33791351 2.03299785]
[96.20483398 4.69919014]
[97.13869476 8.23610878]
[96.80014801 12.29276276]
[94.98445892 16.39943695]
[97.16130066 31.24064255]
[99.33813477 46.08184814]
[101.51497650 60.92305374]
[103.69181061 75.76425934]
[106.02291107 90.58201599]
[108.66178131 105.34807587]
[111.45410156 120.08587646]
[114.24642944 134.82368469]
[117.03874969 149.56149292]
[119.83107758 164.29930115]
[134.23512268 169.44425964]
[144.06504822 181.03172302]
[146.75727844 195.88494873]
[141.68730164 209.99703979]
[130.31097412 219.61186218]
[133.10328674 234.34967041]
[140.11308289 221.08833313]
[152.74064636 212.99238586]
[167.71739197 212.15740967]
[181.16662598 218.79956055]
[189.60705566 231.19952393]
[190.85389709 246.14761353]
[184.58442688 259.77456665]
[172.42146301 268.55307007]
[157.51335144 270.21084595]
[143.71900940 264.31878662]
[134.60911560 252.40213013]
[134.29705811 267.39889526]
[149.03645325 273.74603271]
[160.19445801 285.22656250]
[166.09075928 300.06933594]
[165.85362244 316.00015259]
[159.54864502 330.59024048]
[148.16430664 341.62652588]
[133.45701599 347.44723511]
[133.45701599 362.44723511]
[133.45701599 377.44723511]
[133.45701599 392.44723511]
[133.45701599 407.44723511]
[133.45701599 422.44723511]
[133.45701599 437.44723511]
[133.45701599 452.44723511]
[133.45701599 467.44723511]
[133.45701599 482.44723511]
[147.99690247 486.50854492]
[160.90129089 494.34307861]
[171.21257019 505.36938477]
[178.16558838 518.76934814]
[181.24440002 533.54846191]
[180.22050476 548.61016846]
[175.16990662 562.83666992]
[166.46737671 575.17236328]
[154.75871277 584.70178223]
[140.91278076 590.71777344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[28 124]
[29 123]
[30 112]
[31 111]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[42 101]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[49 91]
[50 90]
[51 89]
[53 87]
[54 86]
[55 85]
[56 84]
[57 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
