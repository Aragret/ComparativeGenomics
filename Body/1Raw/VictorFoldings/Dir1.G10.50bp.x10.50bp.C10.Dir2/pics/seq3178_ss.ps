%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCCAAGAAGGGGGGGGGGCAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAACUxxxxxxxxxxCCCUCUAUUGAUCCCCACCUCCAAAUAUCUCAUCAACAACCGACUAAUCACCCCCCCCCCCCACCCAACAA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 370.66525269]
[71.01555634 365.11224365]
[58.81560135 356.24591064]
[49.20452881 344.62359619]
[42.78650284 330.97589111]
[39.96496582 316.16070557]
[40.91728210 301.10934448]
[45.58358765 286.76791382]
[53.67055511 274.03796387]
[64.66983032 263.71969604]
[77.88998413 256.46170044]
[92.50000000 252.72027588]
[92.50000000 237.72027588]
[92.50000000 222.72027588]
[92.50000000 207.72027588]
[92.50000000 192.72027588]
[92.50000000 177.72027588]
[92.50000000 162.72027588]
[92.50000000 147.72027588]
[92.50000000 132.72027588]
[92.50000000 117.72026825]
[81.20491028 108.05654907]
[79.73600006 92.36112976]
[90.16160583 79.36216736]
[107.58544159 77.15660095]
[105.74211121 62.27029037]
[103.89878845 47.38398361]
[102.05546570 32.49767685]
[97.87223053 24.30644035]
[100.33036041 17.28719521]
[98.79306793 2.36617947]
[97.25577545 -12.55483723]
[93.64239502 -18.21046066]
[93.49710846 -23.96952248]
[95.97462463 -28.11815071]
[95.05121613 -43.08969879]
[94.12779999 -58.06124878]
[93.20438385 -73.03279877]
[89.82624817 -78.83200073]
[89.91752625 -84.59217072]
[92.56327057 -88.63558960]
[92.25529480 -103.63243103]
[91.94731903 -118.62926483]
[76.97638702 -119.72727966]
[62.17405701 -122.22238159]
[47.67041779 -126.09264374]
[33.59293365 -131.30406189]
[20.06531525 -137.81083679]
[7.20645094 -145.55577087]
[-4.87065554 -154.47080994]
[-16.05986595 -164.47761536]
[-26.26284981 -175.48822021]
[-35.38993835 -187.40588379]
[-43.36091995 -200.12586975]
[-50.10574341 -213.53637695]
[-55.56513596 -227.51956177]
[-59.69112015 -241.95254517]
[-62.44743347 -256.70846558]
[-63.80985641 -271.65765381]
[-63.76640701 -286.66873169]
[-62.31747818 -301.60980225]
[-59.47579575 -316.34951782]
[-55.26633453 -330.75836182]
[-49.72608948 -344.70971680]
[-42.90375137 -358.08096313]
[-34.85927200 -370.75457764]
[-25.66335297 -382.61920166]
[-15.39680672 -393.57058716]
[-4.14985800 -403.51245117]
[7.97865057 -412.35742188]
[20.88213158 -420.02780151]
[34.44718933 -426.45614624]
[48.55460358 -431.58599854]
[63.08040237 -435.37225342]
[77.89692688 -437.78161621]
[92.87396240 -438.79296875]
[107.87989807 -438.39736938]
[122.78284454 -436.59829712]
[137.45184326 -433.41162109]
[151.75796509 -428.86526489]
[165.57550049 -422.99923706]
[178.78300476 -415.86508179]
[191.26441956 -407.52551270]
[202.91004944 -398.05377197]
[213.61755371 -387.53311157]
[223.29283142 -376.05603027]
[231.85083008 -363.72335815]
[239.21638489 -350.64349365]
[245.32472229 -336.93133545]
[250.12219238 -322.70745850]
[253.56661987 -308.09683228]
[255.62773132 -293.22787476]
[256.28741455 -278.23123169]
[255.53988647 -263.23870850]
[253.39170837 -248.38206482]
[249.86175537 -233.79187012]
[244.98103333 -219.59632874]
[238.79246521 -205.92022705]
[231.35043335 -192.88371277]
[222.72030640 -180.60137939]
[212.97798157 -169.18116760]
[202.20903015 -158.72343445]
[190.50811768 -149.32008362]
[177.97805786 -141.05375671]
[164.72897339 -133.99710083]
[150.87731934 -128.21212769]
[136.54479980 -123.74967194]
[121.85739136 -120.64896393]
[106.94416046 -118.93724060]
[107.25213623 -103.94040680]
[107.56011200 -88.94356537]
[108.17593384 -73.95621490]
[109.09934998 -58.98466492]
[110.02276611 -44.01311493]
[110.94617462 -29.04156303]
[112.17678833 -14.09212971]
[113.71408081 0.82888710]
[115.25137329 15.74990368]
[116.94177246 30.65435028]
[118.78509521 45.54065704]
[120.62842560 60.42696762]
[122.47174835 75.31327057]
[131.01220703 87.64455414]
[144.29954529 94.60491180]
[160.65373230 93.39138794]
[169.65684509 107.09817505]
[162.04724121 121.62490845]
[145.65304565 122.02773285]
[137.33918762 107.89225769]
[124.05184937 100.93190002]
[117.81739044 112.30944824]
[107.50000000 117.72026825]
[107.50000000 132.72027588]
[107.50000000 147.72027588]
[107.50000000 162.72027588]
[107.50000000 177.72027588]
[107.50000000 192.72027588]
[107.50000000 207.72027588]
[107.50000000 222.72027588]
[107.50000000 237.72027588]
[107.50000000 252.72027588]
[122.11001587 256.46170044]
[135.33016968 263.71969604]
[146.32945251 274.03796387]
[154.41641235 286.76791382]
[159.08271790 301.10934448]
[160.03503418 316.16070557]
[157.21350098 330.97589111]
[150.79547119 344.62359619]
[141.18440247 356.24591064]
[128.98443604 365.11224365]
[114.96250153 370.66525269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[25 122]
[26 121]
[27 120]
[28 119]
[30 118]
[31 117]
[32 116]
[35 115]
[36 114]
[37 113]
[38 112]
[41 111]
[42 110]
[43 109]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
