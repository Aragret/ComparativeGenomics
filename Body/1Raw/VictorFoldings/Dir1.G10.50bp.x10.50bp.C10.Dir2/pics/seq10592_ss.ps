%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACCAUGCACGGGGGGGGGGACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACxxxxxxxxxxCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCACAGGACUAUUCCCCCCCCCCCCUAGCCAUGCAC\
) } def
/len { sequence length } bind def

/coor [
[78.67511749 441.78295898]
[65.75595856 434.02459717]
[54.97466278 423.49557495]
[46.91264725 410.76370239]
[42.00468826 396.51559448]
[40.51546478 381.51962280]
[42.52528763 366.58450317]
[47.92577362 352.51568604]
[56.42567444 340.07189941]
[67.56661224 329.92416382]
[80.74775696 322.61978149]
[95.25827789 318.55264282]
[94.64244843 303.56530762]
[94.02662659 288.57794189]
[93.41079712 273.59057617]
[92.79497528 258.60324097]
[92.17914581 243.61587524]
[91.56332397 228.62852478]
[90.94749451 213.64117432]
[90.33167267 198.65382385]
[89.71584320 183.66647339]
[89.10002136 168.67910767]
[76.96051788 177.49003601]
[62.44833755 173.69575500]
[56.17484283 160.07066345]
[62.72724152 146.57748413]
[77.31439209 143.08247375]
[89.26982117 152.14067078]
[90.19323730 137.16911316]
[91.11664581 122.19756317]
[76.87410736 106.06950378]
[81.36075592 85.02587128]
[73.20409393 72.43743134]
[65.04742432 59.84899139]
[51.63793564 66.60419464]
[37.57667160 71.86994934]
[23.02850342 75.58451843]
[8.16399765 77.70435333]
[-6.84256697 78.20459747]
[-21.81524658 77.07938385]
[-36.57849503 74.34190369]
[-50.95921707 70.02426147]
[-64.78881073 64.17707825]
[-77.90512848 56.86890030]
[-90.15438843 48.18541718]
[-101.39297485 38.22843933]
[-111.48912048 27.11470604]
[-120.32445526 14.97451878]
[-127.79538727 1.95021772]
[-133.81431580 -11.80549526]
[-138.31068420 -26.13134193]
[-141.23178101 -40.85935974]
[-142.54333496 -55.81686783]
[-142.22999573 -70.82849884]
[-140.29541016 -85.71824646]
[-136.76228333 -100.31153870]
[-131.67202759 -114.43727875]
[-125.08431244 -127.92984772]
[-117.07640076 -140.63104248]
[-107.74216461 -152.39196777]
[-97.19104767 -163.07472229]
[-85.54675293 -172.55404663]
[-72.94580841 -180.71881104]
[-59.53594971 -187.47329712]
[-45.47440720 -192.73829651]
[-30.92603874 -196.45208740]
[-16.06141663 -198.57112122]
[-1.05482554 -199.07055664]
[13.91779327 -197.94453430]
[28.68089294 -195.20626831]
[43.06138611 -190.88784790]
[56.89066315 -185.03991699]
[70.00658417 -177.73103333]
[82.25537872 -169.04689026]
[93.49343109 -159.08930969]
[103.58898163 -147.97503662]
[112.42366028 -135.83436584]
[119.89389038 -122.80966187]
[125.91208649 -109.05362701]
[130.40768433 -94.72753906]
[133.32798767 -79.99936676]
[134.63873291 -65.04178619]
[134.32458496 -50.03017426]
[132.38920593 -35.14052963]
[128.85528564 -20.54742432]
[123.76425934 -6.42196035]
[117.17582703 7.07025194]
[109.16722870 19.77102280]
[99.83235931 31.53144264]
[89.28067017 42.21362305]
[77.63586426 51.69232559]
[85.79253387 64.28076935]
[93.94919586 76.86920929]
[104.15811920 76.45523834]
[113.60768890 80.34098816]
[120.57223511 87.81685638]
[135.22496033 84.60786438]
[149.87768555 81.39886475]
[164.53041077 78.18987274]
[173.66593933 63.30600739]
[190.40361023 59.67530441]
[204.32604980 69.05980682]
[218.90979004 65.55063629]
[233.49354553 62.04146957]
[248.07728577 58.53230286]
[254.88513184 44.45440292]
[269.17044067 38.09328842]
[284.18814087 42.45248795]
[292.84735107 55.47372055]
[291.05941772 71.00875854]
[279.66857910 81.72242737]
[264.05322266 82.55606842]
[251.58645630 73.11605072]
[237.00271606 76.62522125]
[222.41896057 80.13438416]
[207.83520508 83.64355469]
[202.69009399 95.49597931]
[191.48066711 102.30607605]
[178.20172119 101.38364410]
[167.73941040 92.84259033]
[153.08668518 96.05158997]
[138.43395996 99.26058960]
[123.78123474 102.46958160]
[120.90428925 111.60415649]
[114.67337036 118.87691498]
[106.08819580 123.12097931]
[105.16478729 138.09252930]
[104.24137115 153.06407166]
[104.08737183 168.06329346]
[104.70320129 183.05064392]
[105.31902313 198.03799438]
[105.93485260 213.02534485]
[106.55067444 228.01269531]
[107.16650391 243.00006104]
[107.78232574 257.98739624]
[108.39815521 272.97476196]
[109.01397705 287.96212769]
[109.62980652 302.94946289]
[110.24562836 317.93682861]
[125.04090118 320.79977417]
[138.77687073 326.99816895]
[150.71278381 336.19766235]
[160.20492554 347.90219116]
[166.74142456 361.48049927]
[169.96975708 376.20037842]
[169.71583557 391.26797485]
[165.99334717 405.87069702]
[159.00305176 419.22106934]
[149.12190247 430.59912109]
[136.88279724 439.39120483]
[122.94577789 445.12322998]
[108.06243896 447.48605347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[28 128]
[29 127]
[30 126]
[32 93]
[33 92]
[34 91]
[96 123]
[97 122]
[98 121]
[99 120]
[102 116]
[103 115]
[104 114]
[105 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
