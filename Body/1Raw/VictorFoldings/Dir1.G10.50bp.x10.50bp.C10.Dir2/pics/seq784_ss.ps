%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAACCCCGGGGGGGGGGAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUxxxxxxxxxxCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUCCCCCCCCCCACCAAACGCC\
) } def
/len { sequence length } bind def

/coor [
[33.86071777 266.79583740]
[24.99168396 263.00003052]
[16.33947754 258.73303223]
[7.92911196 254.00718689]
[-0.21510126 248.83613586]
[-8.06961918 243.23483276]
[-15.61173630 237.21948242]
[-22.81965065 230.80746460]
[-29.67252541 224.01731873]
[-36.15055084 216.86866760]
[-42.23500443 209.38218689]
[-49.06029510 223.65545654]
[-63.92095566 224.66043091]
[-76.18332672 233.29954529]
[-88.44569397 241.93867493]
[-100.70806122 250.57778931]
[-112.97042847 259.21688843]
[-125.23279572 267.85601807]
[-132.05809021 282.12927246]
[-146.91874695 283.13427734]
[-151.06465149 298.63235474]
[-165.82354736 304.92156982]
[-179.87370300 297.17736816]
[-182.43701172 281.34042358]
[-171.54714966 269.55947876]
[-155.55786133 270.87188721]
[-149.60966492 257.21655273]
[-133.87191772 255.59364319]
[-121.60954285 246.95452881]
[-109.34717560 238.31541443]
[-97.08480835 229.67630005]
[-84.82244110 221.03718567]
[-72.56007385 212.39807129]
[-66.61186981 198.74273682]
[-50.87411880 197.11982727]
[-65.70528412 168.82600403]
[-75.28403473 138.35058594]
[-79.30674744 106.65956879]
[-77.64591980 74.75744629]
[-70.35419464 43.65545273]
[-57.66270065 14.33942890]
[-39.97371674 -12.26138496]
[-51.27272034 -22.12710762]
[-62.57172775 -31.99283218]
[-73.87072754 -41.85855484]
[-85.37253571 -51.48707962]
[-97.07215881 -60.87424088]
[-108.77178192 -70.26140594]
[-120.47140503 -79.64856720]
[-135.06588745 -74.64808655]
[-150.04153442 -78.35397339]
[-160.61967468 -89.58368683]
[-163.42485046 -104.75387573]
[-157.56196594 -119.02377319]
[-144.90182495 -127.83992004]
[-129.48423767 -128.38911438]
[-116.22890472 -120.49610138]
[-109.36554718 -106.67951965]
[-111.08424377 -91.34819031]
[-99.38462067 -81.96102905]
[-87.68499756 -72.57386780]
[-75.98537445 -63.18670273]
[-71.16452789 -62.81930542]
[-66.54069519 -59.37670517]
[-64.00500488 -53.15755844]
[-52.70600510 -43.29183578]
[-41.40699768 -33.42611313]
[-30.10799408 -23.56039047]
[-21.87557793 -31.68752098]
[-13.13657475 -39.26728058]
[-3.92730713 -46.26816177]
[5.71394539 -52.66106033]
[15.74710751 -58.41941071]
[26.13047600 -63.51927567]
[36.82088852 -67.93945312]
[47.77391434 -71.66157532]
[58.94402313 -74.67016602]
[70.28478241 -76.95272064]
[81.74906158 -78.49975586]
[93.28919983 -79.30484009]
[104.85723114 -79.36462402]
[116.40506744 -78.67885590]
[127.88471985 -77.25039673]
[139.24847412 -75.08517456]
[150.44908142 -72.19219208]
[161.43998718 -68.58347321]
[172.17552185 -64.27402496]
[182.61103821 -59.28174973]
[192.70318604 -53.62740707]
[202.40998840 -47.33449554]
[211.69113159 -40.42917252]
[220.50801086 -32.94013977]
[228.82397461 -24.89852905]
[236.60447693 -16.33776474]
[243.81716919 -7.29343033]
[250.43208313 2.19688034]
[256.42169189 12.09372044]
[261.76113892 22.35595131]
[275.54351807 16.43598747]
[289.32589722 10.51602554]
[303.10827637 4.59606218]
[312.48257446 -8.85959530]
[328.79748535 -7.19963360]
[335.26962280 7.86831999]
[325.24102783 20.84364700]
[309.02822876 18.37844276]
[295.24584961 24.29840660]
[281.46347046 30.21837044]
[267.68109131 36.13833237]
[270.87103271 45.24284363]
[273.56704712 54.50564575]
[275.76132202 63.89995956]
[277.44754028 73.39862823]
[278.62078857 82.97419739]
[279.27767944 92.59897614]
[279.41632080 102.24515533]
[279.03634644 111.88484192]
[278.13879395 121.49017334]
[276.72631836 131.03338623]
[274.80294800 140.48689270]
[272.37429810 149.82334900]
[269.44732666 159.01579285]
[266.03054810 168.03762817]
[262.13381958 176.86277771]
[257.76840210 185.46575928]
[252.94689941 193.82165527]
[247.68328857 201.90635681]
[241.99276733 209.69647217]
[235.89176941 217.16947937]
[229.39794922 224.30378723]
[222.53007507 231.07876587]
[215.30799866 237.47482300]
[207.75259399 243.47348022]
[199.88571167 249.05738831]
[191.73008728 254.21041870]
[183.30928040 258.91766357]
[174.64765930 263.16552734]
[165.77024841 266.94171143]
[156.70272827 270.23532104]
[147.47128296 273.03680420]
[138.10260010 275.33810425]
[128.62379456 277.13253784]
[119.06223297 278.41494751]
[109.44556427 279.18157959]
[99.80159760 279.43026733]
[90.15820312 279.16024780]
[80.54325867 278.37234497]
[70.98455811 277.06881714]
[61.50973129 275.25341797]
[52.14617157 272.93139648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 35]
[13 33]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[20 26]
[42 68]
[43 67]
[44 66]
[45 65]
[46 62]
[47 61]
[48 60]
[49 59]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
