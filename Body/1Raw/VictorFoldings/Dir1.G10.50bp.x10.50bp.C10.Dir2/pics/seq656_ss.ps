%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAUCAAUGGGGGGGGGGACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCCCAUxxxxxxxxxxCACAGGACUAUUCCUAGCCAUGCACUACUCACCAGACGCCUCAACCGCCUCCCCCCCCCCUUUCAUCAAU\
) } def
/len { sequence length } bind def

/coor [
[12.69858456 276.60726929]
[3.58872652 271.80377197]
[-5.25766230 266.53076172]
[-13.81640625 260.80267334]
[-22.06411743 254.63511658]
[-29.97825432 248.04499817]
[-37.53719330 241.05030823]
[-44.72027206 233.67016602]
[-51.50786591 225.92472839]
[-63.40024567 235.06645203]
[-75.29262543 244.20819092]
[-87.18500519 253.34992981]
[-99.07738495 262.49166870]
[-105.30302429 277.03649902]
[-120.10901642 278.65878296]
[-132.00138855 287.80050659]
[-143.89376831 296.94226074]
[-155.78614807 306.08398438]
[-167.67852783 315.22570801]
[-171.17614746 330.88287354]
[-185.66064453 337.78057861]
[-200.02078247 330.62753296]
[-203.24067688 314.91091919]
[-192.85029602 302.68719482]
[-176.82026672 303.33334351]
[-164.92788696 294.19161987]
[-153.03550720 285.04986572]
[-141.14312744 275.90814209]
[-129.25074768 266.76641846]
[-123.87573242 252.87545776]
[-108.21911621 250.59927368]
[-96.32673645 241.45755005]
[-84.43435669 232.31581116]
[-72.54197693 223.17407227]
[-60.64960098 214.03234863]
[-76.89595032 186.71501160]
[-88.53809357 157.14068604]
[-95.27301025 126.07911682]
[-96.92541504 94.33876801]
[-93.45230103 62.74576187]
[-84.94405365 32.12240601]
[-71.62212372 3.26574779]
[-84.39948273 -4.59167814]
[-97.17684174 -12.44910336]
[-109.95420074 -20.30653000]
[-123.07948303 -12.43344593]
[-138.36080933 -11.57337952]
[-152.28663635 -17.92396736]
[-161.65690613 -30.02589035]
[-164.31840515 -45.09821701]
[-159.65954590 -59.67743301]
[-148.75088501 -70.41334534]
[-134.09916687 -74.83892059]
[-119.07125092 -71.93718719]
[-107.12042236 -62.37495041]
[-100.99291229 -48.34953690]
[-102.09677124 -33.08388519]
[-89.31941223 -25.22646141]
[-76.54206085 -17.36903572]
[-63.76470184 -9.51160908]
[-56.47612000 -19.69500351]
[-48.55527115 -29.39475060]
[-40.03415680 -38.57165527]
[-30.94721603 -47.18864059]
[-21.33116150 -55.21088409]
[-11.22484684 -62.60597610]
[-0.66910994 -69.34402466]
[10.29339695 -75.39781952]
[21.61837769 -80.74288940]
[33.26007080 -85.35763550]
[45.17144012 -89.22341156]
[57.30435181 -92.32460022]
[69.60978699 -94.64866638]
[82.03800964 -96.18622589]
[94.53881836 -96.93106842]
[107.06169128 -96.88017273]
[119.55603027 -96.03375244]
[131.97134399 -94.39522552]
[144.25747681 -91.97120667]
[156.36479187 -88.77149963]
[168.24433899 -84.80903625]
[179.84814453 -80.09981537]
[191.12930298 -74.66287231]
[202.04223633 -68.52017975]
[210.29452515 -81.04614258]
[218.54681396 -93.57210541]
[226.79910278 -106.09806061]
[227.22457886 -122.49169159]
[241.76181030 -130.08120728]
[255.45616150 -121.05918121]
[254.22003174 -104.70668793]
[239.32507324 -97.84577179]
[231.07278442 -85.31981659]
[222.82049561 -72.79385376]
[214.56820679 -60.26788712]
[222.78694153 -54.06179428]
[230.67013550 -47.43468475]
[238.19622803 -40.40467072]
[245.34466553 -32.99096680]
[252.09591675 -25.21382523]
[258.43151855 -17.09450531]
[264.33416748 -8.65519333]
[269.78771973 0.08104851]
[274.77731323 9.09034538]
[279.28924561 18.34807777]
[283.31121826 27.82894516]
[286.83227539 37.50703812]
[289.84274292 47.35591125]
[292.33441162 57.34864807]
[294.30050659 67.45793915]
[295.73559570 77.65616608]
[296.63580322 87.91544342]
[296.99862671 98.20775604]
[296.82312012 108.50495911]
[296.10971069 118.77892303]
[294.86041260 129.00157166]
[293.07858276 139.14495850]
[290.76913452 149.18138123]
[287.93835449 159.08338928]
[284.59396362 168.82394409]
[280.74514771 178.37641907]
[276.40237427 187.71470642]
[271.57754517 196.81329346]
[266.28384399 205.64730835]
[260.53570557 214.19261169]
[254.34887695 222.42585754]
[247.74024963 230.32455444]
[240.72787476 237.86708069]
[233.33093262 245.03286743]
[225.56962585 251.80230713]
[217.46514893 258.15689087]
[209.03968811 264.07928467]
[200.31623840 269.55331421]
[191.31864929 274.56396484]
[182.07150269 279.09756470]
[172.60008240 283.14175415]
[162.93026733 286.68542480]
[153.08847046 289.71896362]
[143.10159302 292.23403931]
[132.99693298 294.22375488]
[122.80209351 295.68273926]
[112.54494476 296.60696411]
[102.25351715 296.99389648]
[91.95593262 296.84246826]
[81.68032837 296.15313721]
[71.45478058 294.92779541]
[61.30724716 293.16970825]
[51.26545334 290.88375854]
[41.35683441 288.07617188]
[31.60847855 284.75460815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 35]
[10 34]
[11 33]
[12 32]
[13 31]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[42 60]
[43 59]
[44 58]
[45 57]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
