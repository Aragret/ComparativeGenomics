%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCACUCAGGGGGGGGGGGCCAUUUUACCUCACCCCCACUGAUGUUCGCCGACCGUUGACUAUUCUCUxxxxxxxxxxCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAUUUGCCAUCAUAGGAGCCCCCCCCCCGCUUCAUUCA\
) } def
/len { sequence length } bind def

/coor [
[81.18843842 381.86273193]
[66.69874573 377.65423584]
[53.79251480 369.83813477]
[43.34971619 358.94729614]
[36.08235168 345.72427368]
[32.48592377 331.07067871]
[32.80564499 315.98559570]
[37.01971436 301.49752808]
[44.84081268 288.59429932]
[55.73567963 278.15570068]
[68.96148682 270.89346313]
[83.61648560 267.30267334]
[83.92853546 252.30593872]
[84.24059296 237.30917358]
[84.55265045 222.31242371]
[84.86470795 207.31567383]
[85.17676544 192.31892395]
[85.48882294 177.32215881]
[85.80087280 162.32540894]
[86.11293030 147.32865906]
[86.42498779 132.33190918]
[86.73704529 117.33515167]
[86.21036530 95.72437286]
[76.46271515 84.32334900]
[66.71505737 72.92233276]
[54.45471954 81.58308411]
[41.44755554 89.07563782]
[27.80454826 95.33606720]
[13.64209461 100.31095886]
[-0.91897357 103.95787048]
[-15.75442314 106.24568176]
[-30.73768044 107.15487671]
[-45.74091339 106.67770386]
[-60.63611221 104.81822205]
[-75.29619598 101.59230042]
[-89.59609222 97.02746582]
[-103.41378784 91.16266632]
[-116.63139343 84.04793549]
[-129.13615417 75.74397278]
[-140.82136536 66.32162476]
[-151.58732605 55.86129379]
[-161.34219360 44.45221329]
[-170.00274658 32.19172668]
[-177.49508667 19.18443871]
[-183.75529480 5.54132748]
[-188.72994995 -8.62120914]
[-192.37661743 -23.18233681]
[-194.66416931 -38.01782608]
[-195.57312012 -53.00109863]
[-195.09568787 -68.00431824]
[-193.23596191 -82.89949036]
[-190.00979614 -97.55952454]
[-185.44473267 -111.85933685]
[-179.57969666 -125.67694092]
[-172.46475220 -138.89442444]
[-164.16056824 -151.39904785]
[-154.73803711 -163.08409119]
[-144.27752686 -173.84988403]
[-132.86828613 -183.60456848]
[-120.60765076 -192.26490784]
[-107.60023499 -199.75703430]
[-93.95702362 -206.01701355]
[-79.79440308 -210.99143982]
[-65.23321533 -214.63786316]
[-50.39768600 -216.92517090]
[-35.41439819 -217.83387756]
[-20.41118431 -217.35618591]
[-5.51604605 -215.49621582]
[9.14393139 -212.26980591]
[23.44367218 -207.70449829]
[37.26117325 -201.83923340]
[50.47854614 -194.72406006]
[62.98302460 -186.41967773]
[74.66791534 -176.99694824]
[85.43353271 -166.53625488]
[95.18802643 -155.12684631]
[103.84816742 -142.86607361]
[111.34007263 -129.85853577]
[117.59982300 -116.21522522]
[122.57400513 -102.05252075]
[126.22019196 -87.49127197]
[128.50726318 -72.65570831]
[129.41571045 -57.67240143]
[128.93777466 -42.66919708]
[127.07755280 -27.77408791]
[123.85089874 -13.11416435]
[119.28535461 1.18550014]
[113.41986084 15.00290394]
[106.30446625 28.22015762]
[97.99987793 40.72449875]
[88.57695007 52.40923309]
[78.11608124 63.17467880]
[87.86373138 74.57569885]
[97.61138153 85.97672272]
[111.39376831 91.89668274]
[126.37348175 91.11683655]
[141.35319519 90.33699036]
[156.33291626 89.55714417]
[171.31262207 88.77730560]
[186.29234314 87.99745941]
[201.21124268 86.43988037]
[216.02900696 84.10877228]
[230.84677124 81.77767181]
[235.20228577 67.14919281]
[245.47987366 55.86496353]
[259.63891602 50.16546249]
[274.86813354 51.18233871]
[288.14370728 58.71368408]
[296.82983398 71.26415253]
[299.20181274 86.34182739]
[294.78872681 100.95304108]
[284.46679688 112.19670868]
[270.28543091 117.84040833]
[255.06033325 116.76356506]
[241.81449890 109.18000031]
[233.17787170 96.59542847]
[218.36010742 98.92652893]
[203.54235840 101.25763702]
[213.67512512 112.31777954]
[211.55651855 127.16741180]
[198.73503113 134.95263672]
[184.58216858 129.98310852]
[179.44250488 115.89112854]
[187.07218933 102.97717285]
[172.09246826 103.75701904]
[157.11274719 104.53686523]
[142.13304138 105.31670380]
[127.15332794 106.09654999]
[112.17361450 106.87639618]
[101.73379517 117.64720917]
[101.42174530 132.64396667]
[101.10968781 147.64071655]
[100.79763031 162.63746643]
[100.48557281 177.63421631]
[100.17351532 192.63098145]
[99.86145782 207.62773132]
[99.54940796 222.62448120]
[99.23735046 237.62123108]
[98.92529297 252.61799622]
[98.61323547 267.61474609]
[113.10617065 271.81204224]
[126.01843262 279.61816406]
[136.46963501 290.50094604]
[143.74722290 303.71832275]
[147.35494995 318.36914062]
[147.04689026 333.45449829]
[142.84400940 347.94580078]
[135.03286743 360.85504150]
[124.14606476 371.30206299]
[110.92587280 378.57452393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 94]
[24 93]
[25 92]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[101 118]
[102 117]
[103 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
