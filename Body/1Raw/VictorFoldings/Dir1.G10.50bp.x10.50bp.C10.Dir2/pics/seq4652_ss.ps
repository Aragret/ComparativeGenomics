%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUAAUUAAGGGGGGGGGGUCCCCUGGCCCAACCCGUCAUCUACUCUACCAUCUUUGCAGGCACACUCAxxxxxxxxxxAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACCCCCCCCCCCUACUAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[83.86694336 387.87048340]
[70.64674377 380.59799194]
[59.75994110 370.15100098]
[51.94881058 357.24176025]
[47.74592972 342.75042725]
[47.43785858 327.66510010]
[51.04560089 313.01428223]
[58.32317352 299.79687500]
[68.77438354 288.91412354]
[81.68664551 281.10797119]
[96.17958069 276.91067505]
[95.86752319 261.91394043]
[95.55546570 246.91717529]
[95.24340820 231.92042542]
[94.93135071 216.92366028]
[94.61930084 201.92691040]
[94.30724335 186.93016052]
[93.99518585 171.93341064]
[93.68312836 156.93664551]
[93.37107086 141.93989563]
[93.05901337 126.94314575]
[78.36811066 117.49775696]
[72.20124817 101.15738678]
[76.98847198 84.36094666]
[90.84339142 73.72707367]
[89.90776062 58.75627899]
[88.97212982 43.78548813]
[88.03650665 28.81469727]
[73.03093719 28.73767853]
[58.06480408 27.64780807]
[43.20639420 25.55006027]
[28.52349854 22.45400620]
[14.08311653 18.37377357]
[-0.04886450 13.32798004]
[-13.80796337 7.33964634]
[-27.13139915 0.43609741]
[-39.95838165 -7.35116720]
[-52.23038101 -15.98661613]
[-63.89140320 -25.43084717]
[-74.88824463 -35.64076614]
[-85.17072296 -46.56978989]
[-94.69192505 -58.16805267]
[-103.40840149 -70.38262939]
[-111.28039551 -83.15779114]
[-118.27197266 -96.43524170]
[-124.35123444 -110.15441132]
[-129.49044800 -124.25268555]
[-133.66616821 -138.66574097]
[-136.85932922 -153.32783508]
[-139.05537415 -168.17202759]
[-140.24427795 -183.13063049]
[-140.42060852 -198.13534546]
[-139.58355713 -213.11775208]
[-137.73696899 -228.00946045]
[-134.88925171 -242.74253845]
[-131.05339050 -257.24975586]
[-126.24691010 -271.46490479]
[-120.49172974 -285.32315063]
[-113.81410217 -298.76123047]
[-106.24450684 -311.71786499]
[-97.81748199 -324.13391113]
[-88.57147217 -335.95269775]
[-78.54866028 -347.12036133]
[-67.79479980 -357.58587646]
[-56.35893631 -367.30154419]
[-44.29325867 -376.22299194]
[-31.65282249 -384.30953979]
[-18.49530029 -391.52429199]
[-4.88072872 -397.83432007]
[9.12877274 -403.21081543]
[23.46928024 -407.62927246]
[38.07536316 -411.06951904]
[52.88037491 -413.51586914]
[67.81676483 -414.95715332]
[82.81637573 -415.38677979]
[97.81076813 -414.80279541]
[112.73153687 -413.20788574]
[127.51058197 -410.60931396]
[142.08049011 -407.01895142]
[156.37477112 -402.45312500]
[170.32820129 -396.93273926]
[183.87710571 -390.48294067]
[196.95968628 -383.13317871]
[209.51623535 -374.91696167]
[221.48945618 -365.87182617]
[232.82473755 -356.03897095]
[243.47032166 -345.46334839]
[253.37767029 -334.19314575]
[262.50155640 -322.27981567]
[270.80038452 -309.77767944]
[278.23623657 -296.74386597]
[284.77520752 -283.23776245]
[290.38748169 -269.32101440]
[295.04739380 -255.05715942]
[298.73376465 -240.51123047]
[301.42971802 -225.74963379]
[303.12295532 -210.83970642]
[303.80575562 -195.84948730]
[303.47503662 -180.84736633]
[302.13226318 -165.90180969]
[299.78356934 -151.08099365]
[296.43966675 -136.45254517]
[292.11584473 -122.08322144]
[286.83181763 -108.03858185]
[280.61169434 -94.38270569]
[273.48385620 -81.17790985]
[265.48080444 -68.48443604]
[256.63906860 -56.36020660]
[246.99902344 -44.86054230]
[236.60461426 -34.03791428]
[225.50328064 -23.94170570]
[213.74569702 -14.61798000]
[201.38546753 -6.10928202]
[188.47903442 1.54556596]
[175.08525085 8.31163597]
[161.26525879 14.15805531]
[147.08209229 19.05814934]
[132.60049438 22.98955727]
[117.88651276 25.93434334]
[103.00729370 27.87906837]
[103.94292450 42.84986115]
[104.87855530 57.82065201]
[105.81417847 72.79144287]
[116.83971405 77.85199738]
[124.66373444 87.12326050]
[127.79875183 98.84261322]
[125.64875793 110.78200531]
[118.62248993 120.67155457]
[108.05577087 126.63108826]
[108.36782837 141.62783813]
[108.67988586 156.62458801]
[108.99193573 171.62135315]
[109.30399323 186.61810303]
[109.61605072 201.61485291]
[109.92810822 216.61160278]
[110.24016571 231.60836792]
[110.55222321 246.60511780]
[110.86427307 261.60186768]
[111.17633057 276.59863281]
[125.83132172 280.18939209]
[139.05712891 287.45166016]
[149.95199585 297.89025879]
[157.77310181 310.79345703]
[161.98716736 325.28152466]
[162.30688477 340.36660767]
[158.71046448 355.02023315]
[151.44309998 368.24322510]
[141.00030518 379.13406372]
[128.09407043 386.95016479]
[113.60437775 391.15866089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[25 123]
[26 122]
[27 121]
[28 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
