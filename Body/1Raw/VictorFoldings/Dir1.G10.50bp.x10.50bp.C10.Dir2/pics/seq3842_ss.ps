%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUACUAUCGGGGGGGGGGAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAACACxxxxxxxxxxCCUCACACUCAUUCUCAACCCCCUGACAAAACACAUAGCCUACCCCUUCCCCCCCCCCCCUUGUACUAUC\
) } def
/len { sequence length } bind def

/coor [
[94.80697632 408.76043701]
[82.24875641 400.40927124]
[72.16252899 389.19680786]
[65.18233490 375.82791138]
[61.74695206 361.14291382]
[62.07233047 346.06497192]
[66.13801575 331.54183960]
[73.68843079 318.48651123]
[84.24896240 307.71960449]
[97.15575409 299.91796875]
[111.59748840 295.57202148]
[110.97351074 280.58499146]
[110.34953308 265.59799194]
[109.72555542 250.61097717]
[109.10157776 235.62394714]
[108.47760010 220.63693237]
[107.85362244 205.64991760]
[107.22964478 190.66290283]
[106.60566711 175.67588806]
[105.98168945 160.68887329]
[105.35771179 145.70185852]
[104.73373413 130.71484375]
[98.69374084 126.26866913]
[89.80119324 138.34851074]
[77.72149658 129.45574951]
[86.61375427 117.37631989]
[80.57376099 112.93013763]
[66.07816315 116.78730011]
[51.58256531 120.64446259]
[40.35479355 132.59724426]
[24.45348930 128.58720398]
[20.23654747 112.73950958]
[32.04199600 101.35691833]
[47.72540665 106.14886475]
[62.22100067 102.29170227]
[76.71659851 98.43454742]
[86.58232117 87.13553619]
[88.44993591 72.25225830]
[90.31755066 57.36898041]
[92.18515778 42.48569870]
[77.49232483 39.42517853]
[63.09339905 35.19229126]
[49.08177567 29.81448746]
[35.54832458 23.32664871]
[22.58082008 15.77085114]
[10.26335621 7.19609690]
[-1.32417929 -2.34200287]
[-12.10663605 -12.78158855]
[-22.01408386 -24.05495644]
[-30.98226929 -36.08898926]
[-38.95302963 -48.80564499]
[-45.87466812 -62.12244797]
[-51.70229721 -75.95303345]
[-56.39812469 -90.20769501]
[-59.93169022 -104.79399872]
[-62.28007889 -119.61734009]
[-63.42806244 -134.58157349]
[-63.36819077 -149.58967590]
[-62.10085678 -164.54426575]
[-59.63428116 -179.34840393]
[-55.98445511 -193.90605164]
[-51.17505264 -208.12280273]
[-45.23726273 -221.90644836]
[-38.20960236 -235.16760254]
[-30.13763809 -247.82026672]
[-21.07372856 -259.78237915]
[-11.07665443 -270.97631836]
[-0.21125256 -281.32955933]
[11.45201111 -290.77490234]
[23.83749390 -299.25112915]
[36.86486816 -306.70321655]
[50.44964981 -313.08288574]
[64.50373077 -318.34872437]
[78.93596649 -322.46658325]
[93.65275574 -325.40979004]
[108.55865479 -327.15924072]
[123.55698395 -327.70358276]
[138.55049133 -327.03927612]
[153.44190979 -325.17062378]
[168.13468933 -322.10977173]
[182.53350830 -317.87658691]
[196.54501343 -312.49847412]
[210.07832336 -306.01034546]
[223.04566956 -298.45425415]
[235.36294556 -289.87921143]
[246.95025635 -280.34088135]
[257.73248291 -269.90103149]
[267.63967896 -258.62747192]
[276.60760498 -246.59323120]
[284.57809448 -233.87640381]
[291.49945068 -220.55944824]
[297.32675171 -206.72872925]
[302.02227783 -192.47395325]
[305.55551147 -177.88757324]
[307.90356445 -163.06419373]
[309.05123901 -148.09992981]
[308.99102783 -133.09184265]
[307.72335815 -118.13726044]
[305.25646973 -103.33318329]
[301.60632324 -88.77561188]
[296.79660034 -74.55896759]
[290.85852051 -60.77545166]
[283.83056641 -47.51445007]
[275.75830078 -34.86196899]
[266.69415283 -22.90007019]
[256.69680786 -11.70632553]
[245.83119202 -1.35333622]
[234.16770935 8.09175491]
[221.78204346 16.56769371]
[208.75450134 24.01950645]
[195.16958618 30.39886665]
[181.11538696 35.66439819]
[166.68305969 39.78195572]
[151.96620178 42.72483444]
[137.06027222 44.47394562]
[122.06192780 45.01794815]
[107.06844330 44.35331345]
[105.20082855 59.23659134]
[103.33321381 74.11987305]
[101.46559906 89.00315094]
[106.75786591 87.00309753]
[113.38967896 87.66765594]
[120.06336975 91.58061981]
[125.28102875 98.72658539]
[127.60678101 108.43902588]
[125.93498230 119.45764923]
[119.72074890 130.09086609]
[120.34472656 145.07788086]
[120.96870422 160.06489563]
[121.59268188 175.05191040]
[122.21665955 190.03892517]
[122.84063721 205.02593994]
[123.46461487 220.01295471]
[124.08859253 234.99996948]
[124.71257019 249.98699951]
[125.33654785 264.97399902]
[125.96052551 279.96102905]
[126.58450317 294.94802856]
[141.33750916 298.07849121]
[154.84814453 304.78024292]
[166.26712036 314.63201904]
[174.87663269 327.01455688]
[180.13548279 341.14944458]
[181.71308899 356.14819336]
[179.51028442 371.06793213]
[173.66554260 384.97079468]
[164.54624939 396.98284912]
[152.72567749 406.34899902]
[138.94686890 412.48049927]
[124.07597351 414.99191284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[27 36]
[28 35]
[29 34]
[37 120]
[38 119]
[39 118]
[40 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
