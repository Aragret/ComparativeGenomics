%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCCCACAGGGGGGGGGGACACUUUCUCGGCCUAUCCGGAAUGCCCCGACGUUACUCGGACUACCCCGxxxxxxxxxxAAUCAUCCGCUACCUUCACGCCAAUGGCGCCUCAAUAUUCUUUAUCUGCCCCCCCCCCCCUCUUCCUACA\
) } def
/len { sequence length } bind def

/coor [
[67.79672241 415.43334961]
[55.23850250 407.08218384]
[45.15227890 395.86972046]
[38.17208481 382.50082397]
[34.73670197 367.81582642]
[35.06208038 352.73788452]
[39.12776184 338.21475220]
[46.67818451 325.15939331]
[57.23871231 314.39251709]
[70.14550781 306.59088135]
[84.58723450 302.24493408]
[83.96325684 287.25790405]
[83.33927917 272.27090454]
[82.71530151 257.28387451]
[82.09132385 242.29685974]
[81.46734619 227.30984497]
[80.84336853 212.32283020]
[80.21939087 197.33581543]
[79.59541321 182.34880066]
[78.97143555 167.36178589]
[75.52854156 160.76692200]
[78.49365997 152.05715942]
[78.18160248 137.06040955]
[66.78057861 127.31275940]
[54.14956665 136.83998108]
[40.49533844 130.88925171]
[25.63229179 132.91159058]
[10.76924419 134.93391418]
[2.62610149 139.21656799]
[-4.42367983 136.84039307]
[-19.32558250 138.55308533]
[-34.22748566 140.26576233]
[-45.28820419 151.88644409]
[-61.25661850 150.34071350]
[-69.88312531 136.81433105]
[-64.55020905 121.68358612]
[-49.34882736 116.55548096]
[-35.94017410 125.36386871]
[-21.03827286 123.65117645]
[-6.13636971 121.93848419]
[8.74691010 120.07087708]
[23.60995674 118.04853821]
[38.47300339 116.02620697]
[50.04091263 106.64363098]
[64.75824738 112.44971466]
[63.63419342 100.76097870]
[66.18484497 89.62356567]
[71.95598602 80.13137054]
[80.18771362 73.15217590]
[89.90891266 69.24915314]
[88.66204071 54.30106354]
[79.80437469 41.19181442]
[86.45694733 27.86542702]
[77.59928131 14.75617790]
[84.25185394 1.42979026]
[83.00497437 -13.51829720]
[73.65563965 -22.46501160]
[72.95780945 -34.98427582]
[80.74061584 -44.29745483]
[79.80498505 -59.26824951]
[78.86935425 -74.23903656]
[77.93373108 -89.20983124]
[63.11879349 -92.03267670]
[49.47165680 -98.45191193]
[37.85019684 -108.06401062]
[28.98494339 -120.26475525]
[23.43317413 -134.28718567]
[21.54388046 -149.24984741]
[23.43582153 -164.21218872]
[28.99007225 -178.23364258]
[37.85748291 -190.43281555]
[49.48064423 -200.04284668]
[63.12891388 -206.45967102]
[77.94435120 -209.27989197]
[92.99564362 -208.32624817]
[107.33665466 -203.65867615]
[120.06589508 -195.57058716]
[130.38319397 -184.57038879]
[137.63999939 -171.34959412]
[141.38014221 -156.73925781]
[141.36851501 -141.65779114]
[137.60585022 -127.05322266]
[130.32865906 -113.84362793]
[119.99440765 -102.85936737]
[107.25270844 -94.79090881]
[92.90451813 -90.14546204]
[93.84014893 -75.17466736]
[94.77577972 -60.20387650]
[95.71140289 -45.23308563]
[106.19846344 -31.19664574]
[97.95306396 -14.76517105]
[99.19993591 0.18291566]
[107.96841431 12.22297764]
[101.40502930 26.61855125]
[110.17350769 38.65861511]
[103.61012268 53.05418777]
[104.85700226 68.00227356]
[117.12427521 66.11159515]
[130.80360413 69.18029022]
[144.70616150 63.54833603]
[158.60871887 57.91637802]
[172.51127625 52.28442383]
[184.92138672 40.73342896]
[199.45642090 49.46091843]
[195.09370422 65.84393311]
[178.14323425 66.18698120]
[164.24067688 71.81893158]
[150.33811951 77.45088959]
[136.43556213 83.08284760]
[136.82548523 90.57270813]
[150.83111572 85.20221710]
[160.26658630 96.86291504]
[152.09217834 109.43983459]
[137.60533142 105.55242157]
[137.99525452 113.04227448]
[152.40747070 117.20016479]
[166.81968689 121.35805511]
[181.50236511 114.89286804]
[195.64407349 122.46858978]
[198.39651489 138.27375793]
[187.64823914 150.18402100]
[171.64440918 149.06283569]
[162.66178894 135.77026367]
[148.24957275 131.61238098]
[133.83735657 127.45449066]
[113.98566437 137.98214722]
[93.17835999 136.74835205]
[93.49040985 151.74511719]
[93.95845795 166.73780823]
[94.58243561 181.72482300]
[95.20640564 196.71183777]
[95.83038330 211.69885254]
[96.45436096 226.68586731]
[97.07833862 241.67288208]
[97.70231628 256.65991211]
[98.32629395 271.64691162]
[98.95027161 286.63394165]
[99.57424927 301.62094116]
[114.32725525 304.75140381]
[127.83789062 311.45315552]
[139.25686646 321.30493164]
[147.86637878 333.68746948]
[153.12522888 347.82235718]
[154.70283508 362.82110596]
[152.50003052 377.74084473]
[146.65528870 391.64370728]
[137.53601074 403.65576172]
[125.71543121 413.02191162]
[111.93662262 419.15341187]
[97.06571960 421.66482544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[22 128]
[23 127]
[24 45]
[26 43]
[27 42]
[28 41]
[30 40]
[31 39]
[32 38]
[50 97]
[51 96]
[53 94]
[55 92]
[56 91]
[59 89]
[60 88]
[61 87]
[62 86]
[99 109]
[100 108]
[101 107]
[102 106]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
