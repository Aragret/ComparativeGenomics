%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUACACCUGGGGGGGGGGCCUAUGAAAAAACUUCCUACCACUCACCCUAGCAUUACUUAUAUGAUAUGxxxxxxxxxxCCACAUUAACAACAUAAAACCCUCAUUCACACGAGAAAACACCCUCAUGUCCCCCCCCCCUCAUACACCU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 357.70864868]
[71.19830322 351.69262695]
[59.48964310 342.16320801]
[50.78712082 329.82754517]
[45.73651886 315.60101318]
[44.71262741 300.53933716]
[47.79142761 285.76016235]
[54.74444962 272.36026001]
[65.05573273 261.33392334]
[77.96011353 253.49940491]
[92.50000000 249.43809509]
[92.50000000 234.43809509]
[92.50000000 219.43809509]
[92.50000000 204.43809509]
[92.50000000 189.43809509]
[92.50000000 174.43809509]
[92.50000000 159.43809509]
[92.50000000 144.43809509]
[92.50000000 129.43809509]
[92.50000000 114.43809509]
[84.75576782 105.68522644]
[84.87733459 93.99886322]
[92.80198669 85.40900421]
[93.11404419 70.41224670]
[93.42610168 55.41549683]
[93.73815918 40.41874313]
[94.05021667 25.42198944]
[79.09836578 24.15913773]
[64.25672150 21.95052147]
[49.58502960 18.80503273]
[35.14238358 14.73533726]
[20.98692703 9.75782394]
[7.17566776 3.89253402]
[-6.23578453 -2.83691430]
[-19.19342613 -10.40342331]
[-31.64507866 -18.77652550]
[-43.54060745 -27.92250633]
[-54.83210754 -37.80453491]
[-65.47412109 -48.38282394]
[-75.42378235 -59.61477280]
[-84.64103699 -71.45516205]
[-93.08876801 -83.85630035]
[-100.73296356 -96.76826477]
[-107.54283142 -110.13906097]
[-113.49095917 -123.91484833]
[-118.55339813 -138.04016113]
[-122.70975494 -152.45809937]
[-125.94330597 -167.11064148]
[-128.24101257 -181.93875122]
[-129.59364319 -196.88275146]
[-129.99572754 -211.88244629]
[-129.44566345 -226.87744141]
[-127.94567108 -241.80735779]
[-125.50177002 -256.61209106]
[-122.12381744 -271.23199463]
[-117.82540894 -285.60824585]
[-112.62385559 -299.68292236]
[-106.54010010 -313.39935303]
[-99.59864044 -326.70230103]
[-91.82743073 -339.53820801]
[-83.25775909 -351.85540771]
[-73.92413330 -363.60427856]
[-63.86413574 -374.73751831]
[-53.11827469 -385.21029663]
[-41.72982407 -394.98043823]
[-29.74464035 -404.00860596]
[-17.21098328 -412.25845337]
[-4.17931986 -419.69674683]
[9.29787445 -426.29354858]
[23.16633034 -432.02227783]
[37.37020493 -436.85989380]
[51.85230255 -440.78689575]
[66.55431366 -443.78747559]
[81.41703033 -445.84954834]
[96.38060760 -446.96484375]
[111.38479614 -447.12881470]
[126.36917114 -446.34082031]
[141.27340698 -444.60406494]
[156.03747559 -441.92550659]
[170.60194397 -438.31591797]
[184.90814209 -433.78988647]
[198.89848328 -428.36560059]
[212.51663208 -422.06491089]
[225.70774841 -414.91320801]
[238.41870117 -406.93923950]
[250.59832764 -398.17517090]
[262.19757080 -388.65625000]
[273.16976929 -378.42080688]
[283.47067261 -367.51007080]
[293.05883789 -355.96801758]
[301.89562988 -343.84103394]
[309.94552612 -331.17800903]
[317.17605591 -318.02993774]
[323.55810547 -304.44973755]
[329.06600952 -290.49212646]
[333.67758179 -276.21325684]
[337.37423706 -261.67065430]
[340.14111328 -246.92286682]
[341.96704102 -232.02929688]
[342.84466553 -217.04989624]
[342.77047729 -202.04499817]
[341.74478149 -187.07501221]
[339.77166748 -172.20022583]
[336.85913086 -157.48052979]
[333.01885986 -142.97518921]
[328.26632690 -128.74261475]
[322.62069702 -114.84012604]
[316.10464478 -101.32369995]
[308.74447632 -88.24775696]
[300.56976318 -75.66495514]
[291.61349487 -63.62596130]
[281.91168213 -52.17924881]
[271.50338745 -41.37091064]
[260.43054199 -31.24447060]
[248.73774719 -21.84070396]
[236.47204590 -13.19747734]
[223.68286133 -5.34959269]
[210.42169189 1.67134905]
[196.74191284 7.83707619]
[182.69862366 13.12276173]
[168.34835815 17.50712204]
[153.74891663 20.97250175]
[138.95907593 23.50494766]
[124.03840637 25.09426117]
[109.04696655 25.73404503]
[108.73490906 40.73080063]
[108.42285919 55.72755432]
[108.11080170 70.72430420]
[107.79874420 85.72106171]
[116.26898193 100.16924286]
[107.50000000 114.43809509]
[107.50000000 129.43809509]
[107.50000000 144.43809509]
[107.50000000 159.43809509]
[107.50000000 174.43809509]
[107.50000000 189.43809509]
[107.50000000 204.43809509]
[107.50000000 219.43809509]
[107.50000000 234.43809509]
[107.50000000 249.43809509]
[122.03988647 253.49940491]
[134.94427490 261.33392334]
[145.25555420 272.36026001]
[152.20857239 285.76016235]
[155.28736877 300.53933716]
[154.26348877 315.60101318]
[149.21287537 329.82754517]
[140.51036072 342.16320801]
[128.80169678 351.69262695]
[114.95575714 357.70864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
