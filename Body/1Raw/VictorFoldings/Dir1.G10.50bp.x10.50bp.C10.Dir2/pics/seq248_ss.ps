%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUAACAAAGGGGGGGGGGAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACxxxxxxxxxxUCAUCAACAACCGACUAAUCACCACCCAACAAUGACUAAUCAAACUAACCCCCCCCCCCCUCAAAACAAA\
) } def
/len { sequence length } bind def

/coor [
[8.58391666 254.03843689]
[-0.92122567 247.98529053]
[-10.02693176 241.34643555]
[-18.69716263 234.14814758]
[-26.89760017 226.41891479]
[-34.59579086 218.18931580]
[-41.76126480 209.49194336]
[-48.36565781 200.36120605]
[-54.38283539 190.83326721]
[-59.78898239 180.94580078]
[-64.56269836 170.73796082]
[-78.57941437 176.07946777]
[-92.59612274 181.42098999]
[-106.61283875 186.76249695]
[-120.62955475 192.10401917]
[-134.58993530 197.59104919]
[-148.49249268 203.22300720]
[-162.39505005 208.85496521]
[-176.29760742 214.48690796]
[-190.20016479 220.11886597]
[-194.00685120 233.07907104]
[-204.44366455 241.34350586]
[-217.54197693 242.05659485]
[-228.48402405 235.18141174]
[-242.50074768 240.52291870]
[-256.51745605 245.86444092]
[-264.36404419 259.85766602]
[-280.21926880 262.30529785]
[-291.92037964 251.32971191]
[-290.49127197 235.35043335]
[-277.02825928 226.62541199]
[-261.85897827 231.84771729]
[-247.84225464 226.50621033]
[-233.82554626 221.16470337]
[-227.63856506 205.55766296]
[-211.77795410 199.09817505]
[-195.83212280 206.21630859]
[-181.92956543 200.58436584]
[-168.02700806 194.95240784]
[-154.12445068 189.32044983]
[-140.22189331 183.68849182]
[-135.17065430 178.22674561]
[-125.97106171 178.08729553]
[-111.95435333 172.74578857]
[-97.93763733 167.40428162]
[-83.92092896 162.06275940]
[-69.90421295 156.72125244]
[-78.03749084 119.68228149]
[-78.19115448 81.76116180]
[-70.35829926 44.65750122]
[-54.88999939 10.03428841]
[-32.47954941 -20.55667114]
[-43.14117432 -31.10796165]
[-53.80279922 -41.65925217]
[-69.79370880 -45.29557800]
[-74.38085938 -61.04010773]
[-62.84537888 -72.69621277]
[-47.05398560 -68.27309418]
[-43.25151062 -52.32087708]
[-32.58988571 -41.76958847]
[-21.92825890 -31.21829605]
[-15.60106564 -36.82519913]
[-9.01636410 -42.12731552]
[-2.18882298 -47.11283493]
[4.86635065 -51.77064896]
[12.13344002 -56.09038925]
[19.59625816 -60.06242371]
[27.23817825 -63.67791367]
[35.04218292 -66.92879486]
[42.99088287 -69.80783844]
[51.06657410 -72.30862427]
[59.25127029 -74.42557526]
[67.52673340 -76.15399170]
[75.87453461 -77.49001312]
[84.27607727 -78.43065643]
[92.71264648 -78.97383881]
[101.16544342 -79.11834717]
[109.61564636 -78.86386108]
[118.04443359 -78.21094513]
[126.43302155 -77.16104889]
[134.76272583 -75.71651459]
[143.01499939 -73.88056183]
[151.17146301 -71.65728760]
[159.21392822 -69.05162811]
[167.12449646 -66.06939697]
[174.88552856 -62.71723557]
[182.47975159 -59.00261307]
[189.89025879 -54.93380356]
[197.10052490 -50.51986694]
[204.09448242 -45.77064133]
[210.85658264 -40.69670105]
[217.37171936 -35.30934906]
[223.62542725 -29.62058830]
[229.60372925 -23.64308929]
[235.29335022 -17.39016724]
[240.68159485 -10.87575245]
[245.75645447 -4.11435556]
[250.50663757 2.87896323]
[254.92155457 10.08862495]
[258.99136353 17.49856949]
[262.70703125 25.09229088]
[266.06024170 32.85287476]
[269.04354858 40.76303101]
[271.65029907 48.80514145]
[273.87469482 56.96129227]
[275.71176147 65.21331787]
[277.15744019 73.54283142]
[278.20849609 81.93127441]
[278.86254883 90.35997009]
[279.11819458 98.81014252]
[278.97482300 107.26296234]
[278.43280029 115.69960022]
[277.49328613 124.10127258]
[292.25933838 126.74013519]
[307.02542114 129.37899780]
[322.25619507 123.29995728]
[334.96697998 133.66181946]
[332.08197021 149.80520630]
[316.56903076 155.12316895]
[304.38653564 144.14505005]
[289.62048340 141.50619507]
[274.85443115 138.86732483]
[272.06439209 149.78538513]
[268.59335327 160.50639343]
[264.45501709 170.98793030]
[259.66580200 181.18850708]
[254.24464417 191.06773376]
[248.21298218 200.58653259]
[241.59472656 209.70722961]
[234.41604614 218.39369202]
[226.70535278 226.61158752]
[218.49317932 234.32835388]
[209.81202698 241.51345825]
[200.69624329 248.13847351]
[191.18191528 254.17716980]
[181.30670166 259.60565186]
[171.10968018 264.40240479]
[160.63121033 268.54849243]
[149.91276550 272.02749634]
[138.99678040 274.82562256]
[127.92643738 276.93179321]
[116.74557495 278.33767700]
[105.49842834 279.03771973]
[94.22952271 279.02917480]
[82.98345947 278.31201172]
[71.80474091 276.88912964]
[60.73762131 274.76614380]
[49.82589340 271.95144653]
[39.11275482 268.45617676]
[28.64059830 264.29418945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 47]
[12 46]
[13 45]
[14 44]
[15 43]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[24 34]
[25 33]
[26 32]
[52 61]
[53 60]
[54 59]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
