%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACCCCCUGGGGGGGGGGGGUCAACCUCAACCUAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUAGCxxxxxxxxxxCAGUACUCUUAAAACUAGGCGGCUAUGGUAUAAUACGCCUCACACUCAUUCCCCCCCCCCCUCAACCCCCUG\
) } def
/len { sequence length } bind def

/coor [
[76.14112091 392.26141357]
[62.65402985 385.52630615]
[51.17111588 375.75869751]
[42.35998535 363.52648926]
[36.73291016 349.54080200]
[34.61703491 334.61474609]
[36.13537979 319.61614990]
[41.19966507 305.41699219]
[49.51546097 292.84277344]
[60.59930038 282.62454224]
[73.80677795 275.35641479]
[88.37004089 271.46090698]
[88.06603241 256.46398926]
[87.76203156 241.46705627]
[87.45802307 226.47013855]
[87.15402222 211.47322083]
[86.85001373 196.47630310]
[86.54601288 181.47938538]
[86.24200439 166.48246765]
[85.93800354 151.48554993]
[85.63400269 136.48863220]
[72.98539734 128.42556763]
[59.26168442 134.48030090]
[45.53797150 140.53501892]
[42.39228439 155.72990417]
[30.89341736 166.14891052]
[15.46291161 167.78572083]
[2.03411555 160.01094055]
[-4.22932577 145.81414795]
[-0.91899133 130.65429688]
[10.69222736 120.36064148]
[26.13958168 118.89131927]
[39.48324585 126.81130981]
[53.20695877 120.75658417]
[66.93067169 114.70185852]
[70.74099731 84.34966278]
[94.89151001 70.26240540]
[96.10627747 55.31167603]
[97.32104492 40.36094666]
[98.53581238 25.41021538]
[85.04500580 21.22294998]
[72.73744965 14.30341721]
[62.15890121 4.96150827]
[53.77781677 -6.38553905]
[47.96459961 -19.23177147]
[44.97522354 -33.00508118]
[44.93996048 -47.09268188]
[47.85772705 -60.86838150]
[53.59622955 -73.72039795]
[61.89795685 -85.07854462]
[72.39176178 -94.43952942]
[84.60942078 -101.38923645]
[98.00654602 -105.62106323]
[111.98684692 -106.94944763]
[113.80650330 -121.83866882]
[115.62615967 -136.72789001]
[117.44581604 -151.61709595]
[119.26547241 -166.50631714]
[107.23681641 -157.54466248]
[92.25299835 -158.24116516]
[81.10755920 -168.28004456]
[78.85376740 -183.10975647]
[86.51345825 -196.00662231]
[100.61380005 -201.12329102]
[114.76180267 -196.13990784]
[122.54280853 -183.31620789]
[126.44956207 -197.79852295]
[130.35630798 -212.28082275]
[134.26306152 -226.76313782]
[138.16981506 -241.24545288]
[142.07656860 -255.72775269]
[128.82067871 -262.89559937]
[117.57553101 -272.92773438]
[108.94755554 -285.28308105]
[103.40204620 -299.29534912]
[101.23806763 -314.20892334]
[102.57232666 -329.21945190]
[107.33286285 -343.51748657]
[115.26294708 -356.33197021]
[125.93491364 -366.97177124]
[138.77325439 -374.86315918]
[153.08558655 -379.58053589]
[168.10009766 -380.86947632]
[183.00704956 -378.66052246]
[197.00253296 -373.07275391]
[209.33178711 -364.40753174]
[219.32992554 -353.13217163]
[226.45774841 -339.85470581]
[230.33087158 -325.29119873]
[230.74040222 -310.22705078]
[227.66427612 -295.47460938]
[221.26837158 -281.82949829]
[211.89761353 -270.02755737]
[200.05737305 -260.70526123]
[186.38615417 -254.36535645]
[171.62123108 -251.34971619]
[156.55888367 -251.82099915]
[152.65213013 -237.33869934]
[148.74537659 -222.85638428]
[144.83862305 -208.37408447]
[140.93186951 -193.89176941]
[137.02511597 -179.40945435]
[134.15469360 -164.68666077]
[132.33503723 -149.79743958]
[130.51538086 -134.90823364]
[128.69572449 -120.01900482]
[126.87606049 -105.12979126]
[141.82556152 -99.63684845]
[155.05078125 -90.74747467]
[165.79342651 -78.96654510]
[173.43641663 -64.96488190]
[177.53933716 -49.54100418]
[177.86378479 -33.57565308]
[174.38720703 -17.98144913]
[167.30448914 -3.65075183]
[157.01695251 8.59541893]
[144.10968018 18.05441284]
[129.31817627 24.18226624]
[113.48654175 26.62498283]
[112.27177429 41.57571411]
[111.05700684 56.52644348]
[109.84223938 71.47717285]
[116.99131012 74.40654755]
[123.28054047 79.12770844]
[128.26147461 85.39075470]
[131.55775452 92.83387756]
[132.89283752 101.00402832]
[132.11198425 109.38442230]
[129.19656372 117.42717743]
[124.26963043 124.58918762]
[117.59216309 130.36865234]
[109.54980469 134.33998108]
[100.63092041 136.18463135]
[100.93492126 151.18154907]
[101.23892975 166.17846680]
[101.54293060 181.17538452]
[101.84693909 196.17230225]
[102.15093994 211.16921997]
[102.45494080 226.16613770]
[102.75894928 241.16305542]
[103.06295013 256.15997314]
[103.36695862 271.15689087]
[118.07611847 274.45901489]
[131.56729126 281.18594360]
[143.05612183 290.94659424]
[151.87466431 303.17349243]
[157.51022339 317.15576172]
[159.63514709 332.08050537]
[158.12590027 347.08001709]
[153.07022095 361.28225708]
[144.76205444 373.86151123]
[133.68440247 384.08645630]
[120.48133850 391.36260986]
[105.92044067 395.26693726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 35]
[23 34]
[24 33]
[37 122]
[38 121]
[39 120]
[40 119]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
