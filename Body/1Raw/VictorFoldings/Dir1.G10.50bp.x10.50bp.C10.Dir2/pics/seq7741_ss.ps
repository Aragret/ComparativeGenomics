%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGACUACGGGGGGGGGGGGCGGACUAAUCUUCAACUCCUACAUACUUCCCCCAUUAUUCCUAGAACCxxxxxxxxxxCAUUACUAAACCCACACUCAACAGAAACAAAGCAUACAUCAUUAUUCUCGCCCCCCCCCCCACGGACUAC\
) } def
/len { sequence length } bind def

/coor [
[87.80641937 392.87185669]
[72.93551636 390.36047363]
[59.15670776 384.22897339]
[47.33613586 374.86282349]
[38.21685410 362.85073853]
[32.37210846 348.94787598]
[30.16930389 334.02813721]
[31.74691010 319.02941895]
[37.00575638 304.89453125]
[45.61526871 292.51199341]
[57.03424835 282.66018677]
[70.54488373 275.95843506]
[85.29788971 272.82800293]
[85.92186737 257.84097290]
[86.54584503 242.85397339]
[87.16982269 227.86695862]
[87.79380035 212.87992859]
[88.41777802 197.89291382]
[89.04175568 182.90589905]
[89.66573334 167.91888428]
[90.28971100 152.93186951]
[90.91368866 137.94485474]
[91.53766632 122.95783997]
[92.16164398 107.97082520]
[92.62968445 92.97812653]
[92.94174194 77.98136902]
[85.49320984 64.02322388]
[93.49360657 51.45967102]
[93.80566406 36.46291733]
[94.11772156 21.46616173]
[94.42977905 6.46940851]
[79.48426819 5.12311506]
[64.66725922 2.74891710]
[50.04935074 -0.64187080]
[35.70021057 -5.03309011]
[21.68821526 -10.40381432]
[8.08014202 -16.72844887]
[-5.05916119 -23.97685432]
[-17.66707802 -32.11448669]
[-29.68352699 -41.10256958]
[-41.05124283 -50.89826965]
[-51.71605301 -61.45490265]
[-61.62713623 -72.72216034]
[-70.73725891 -84.64635468]
[-79.00300598 -97.17065430]
[-86.38498688 -110.23537445]
[-92.84802246 -123.77826691]
[-98.36132050 -137.73477173]
[-102.89859772 -152.03840637]
[-106.43823242 -166.62098694]
[-108.96336365 -181.41302490]
[-110.46195221 -196.34402466]
[-110.92686462 -211.34284973]
[-110.35587311 -226.33799744]
[-108.75170898 -241.25802612]
[-106.12200928 -256.03182983]
[-102.47930908 -270.58901978]
[-97.84097290 -284.86019897]
[-92.22909546 -298.77734375]
[-85.67041779 -312.27420044]
[-78.19621277 -325.28637695]
[-69.84207916 -337.75189209]
[-60.64784241 -349.61135864]
[-50.65731430 -360.80822754]
[-39.91809845 -371.28915405]
[-28.48137665 -381.00418091]
[-16.40165138 -389.90704346]
[-3.73648858 -397.95529175]
[9.45375729 -405.11059570]
[23.10622597 -411.33880615]
[37.15586090 -416.61029053]
[51.53570557 -420.89990234]
[66.17723083 -424.18719482]
[81.01066589 -426.45654297]
[95.96532440 -427.69708252]
[110.96993256 -427.90292358]
[125.95298767 -427.07308960]
[140.84309387 -425.21151733]
[155.56929016 -422.32711792]
[170.06140137 -418.43359375]
[184.25035095 -413.54949951]
[198.06854248 -407.69815063]
[211.45010376 -400.90740967]
[224.33128357 -393.20962524]
[236.65069580 -384.64147949]
[248.34960938 -375.24383545]
[259.37231445 -365.06143188]
[269.66622925 -354.14285278]
[279.18234253 -342.54006958]
[287.87527466 -330.30841064]
[295.70364380 -317.50616455]
[302.63009644 -304.19433594]
[308.62164307 -290.43634033]
[313.64971924 -276.29779053]
[317.69039917 -261.84600830]
[320.72436523 -247.14990234]
[322.73724365 -232.27949524]
[323.71936035 -217.30564880]
[323.66607666 -202.29972839]
[322.57763672 -187.33323669]
[320.45925903 -172.47749329]
[317.32098389 -157.80329895]
[313.17779541 -143.38058472]
[308.04943848 -129.27807617]
[301.96032715 -115.56299591]
[294.93951416 -102.30068207]
[287.02044678 -89.55434418]
[278.24087524 -77.38472748]
[268.64260864 -65.84982300]
[258.27142334 -55.00460434]
[247.17669678 -44.90074921]
[235.41133118 -35.58641052]
[223.03138733 -27.10597420]
[210.09587097 -19.49985313]
[196.66642761 -12.80429745]
[182.80703735 -7.05121326]
[168.58375549 -2.26801586]
[154.06436157 1.52249968]
[139.31805420 4.30226946]
[124.41510773 6.05804682]
[109.42652893 6.78146458]
[109.11447906 21.77821922]
[108.80242157 36.77497101]
[108.49036407 51.77172470]
[115.96121216 64.65721130]
[107.93849182 78.29342651]
[107.62643433 93.29018402]
[110.63636017 100.82837677]
[107.14865875 108.59480286]
[106.52468109 123.58181763]
[105.90070343 138.56883240]
[105.27672577 153.55584717]
[104.65274811 168.54286194]
[104.02877045 183.52987671]
[103.40479279 198.51689148]
[102.78081512 213.50390625]
[102.15683746 228.49093628]
[101.53285980 243.47795105]
[100.90888214 258.46496582]
[100.28490448 273.45196533]
[114.72663116 277.79794312]
[127.63343048 285.59954834]
[138.19395447 296.36645508]
[145.74438477 309.42181396]
[149.81005859 323.94491577]
[150.13543701 339.02288818]
[146.70005798 353.70788574]
[139.71986389 367.07678223]
[129.63363647 378.28921509]
[117.07541656 386.64038086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[25 127]
[26 126]
[28 124]
[29 123]
[30 122]
[31 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
