%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUACCCUGGGGGGGGGGCCUACAAGCCUCAGAGUACUUCGAGUCUCCCUUCACCAUUUCCGACGGCAxxxxxxxxxxCUUAAUGACAUUAACACUAUUCUCACCAGACCUCCUAGGCGACCCAGACACCCCCCCCCCAUUAUACCCU\
) } def
/len { sequence length } bind def

/coor [
[92.02041626 503.59844971]
[78.17447662 497.58242798]
[66.46582031 488.05300903]
[57.76329422 475.71734619]
[52.71269226 461.49081421]
[51.68880081 446.42913818]
[54.76760101 431.64996338]
[61.72062302 418.25003052]
[72.03190613 407.22372437]
[84.93628693 399.38919067]
[99.47617340 395.32788086]
[99.47617340 380.32788086]
[99.47617340 365.32788086]
[99.47617340 350.32788086]
[99.47617340 335.32788086]
[99.47617340 320.32788086]
[99.47617340 305.32788086]
[99.47617340 290.32788086]
[99.47617340 275.32788086]
[99.47617340 260.32788086]
[83.32971191 254.93862915]
[69.95838165 244.36534119]
[60.96577072 229.85482788]
[57.43752289 213.12730408]
[59.81034470 196.17248535]
[67.81798553 181.01289368]
[80.52103424 169.46266174]
[96.41706848 162.91033936]
[95.48143768 147.93954468]
[94.54581451 132.96875000]
[93.61018372 117.99795532]
[82.81514740 108.33289337]
[81.91136169 93.87158966]
[91.41902161 82.93766785]
[90.48339844 67.96688080]
[89.54776764 52.99608612]
[77.97999573 42.56418991]
[77.24440002 27.36835098]
[87.26091003 16.40453911]
[86.32527924 1.43374681]
[73.01020050 -9.86430931]
[71.97373962 -26.95845413]
[83.36908722 -39.28743744]
[82.12221527 -54.23552704]
[80.87534332 -69.18360901]
[65.86515808 -69.55981445]
[50.98363495 -71.55672455]
[36.40526581 -75.15093231]
[22.30096436 -80.30029297]
[8.83609962 -86.94443512]
[-3.83145976 -95.00547028]
[-15.55319309 -104.38887024]
[-26.19166946 -114.98462677]
[-35.62215805 -126.66850281]
[-43.73409271 -139.30352783]
[-50.43236542 -152.74154663]
[-55.63843536 -166.82501221]
[-59.29127502 -181.38880920]
[-61.34804916 -196.26217651]
[-61.78464508 -211.27072144]
[-60.59594345 -226.23849487]
[-57.79587936 -240.99000549]
[-53.41728973 -255.35227966]
[-47.51150131 -269.15695190]
[-40.14776230 -282.24215698]
[-31.41240883 -294.45446777]
[-21.40785789 -305.65072632]
[-10.25140572 -315.69964600]
[1.92614198 -324.48342896]
[14.98201084 -331.89904785]
[28.76312637 -337.85958862]
[43.10791397 -342.29516602]
[57.84818649 -345.15377808]
[72.81111908 -346.40188599]
[87.82128906 -346.02487183]
[102.70269775 -344.02716064]
[117.28087616 -340.43218994]
[131.38490295 -335.28204346]
[144.84941101 -328.63717651]
[157.51654053 -320.57546997]
[169.23776245 -311.19143677]
[179.87567139 -300.59512329]
[189.30552673 -288.91073608]
[197.41677856 -276.27526855]
[204.11433411 -262.83688354]
[209.31964111 -248.75314331]
[212.97169495 -234.18914795]
[215.02767944 -219.31567383]
[215.46345520 -204.30709839]
[214.27395630 -189.33940125]
[211.47309875 -174.58804321]
[207.09373474 -160.22599792]
[201.18721008 -146.42164612]
[193.82276917 -133.33683777]
[185.08674622 -121.12497711]
[175.08160400 -109.92926025]
[163.92460632 -99.88093567]
[151.74658203 -91.09782410]
[138.69032288 -83.68289948]
[124.90888214 -77.72309875]
[110.56385803 -73.28829956]
[95.82342529 -70.43048859]
[97.07030487 -55.48239899]
[98.31717682 -40.53431320]
[109.24886322 -33.64264297]
[114.27153015 -21.52459335]
[111.33459473 -8.53989506]
[101.29607391 0.49811840]
[102.23169708 15.46891022]
[113.53533936 25.10027885]
[114.69746399 40.26946259]
[104.51856232 52.06045914]
[105.45418549 67.03125000]
[106.38981628 82.00204468]
[117.18485260 91.66710663]
[118.08863831 106.12841034]
[108.58097839 117.06233215]
[109.51660156 132.03312683]
[110.45223236 147.00390625]
[111.38786316 161.97470093]
[124.15670776 164.88850403]
[135.71296692 171.02299500]
[145.26124573 179.94792175]
[152.14646912 191.04132080]
[155.89878845 203.53274536]
[156.26562500 216.55685425]
[153.22871399 229.21331787]
[147.00480652 240.62905884]
[138.03025818 250.01847839]
[126.93045044 256.73751831]
[114.47617340 260.32788086]
[114.47617340 275.32788086]
[114.47617340 290.32788086]
[114.47617340 305.32788086]
[114.47617340 320.32788086]
[114.47617340 335.32788086]
[114.47617340 350.32788086]
[114.47617340 365.32788086]
[114.47617340 380.32788086]
[114.47617340 395.32788086]
[129.01606750 399.38919067]
[141.92044067 407.22372437]
[152.23171997 418.25003052]
[159.18475342 431.64996338]
[162.26354980 446.42913818]
[161.23965454 461.49081421]
[156.18905640 475.71734619]
[147.48652649 488.05300903]
[135.77786255 497.58242798]
[121.93193054 503.59844971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[28 120]
[29 119]
[30 118]
[31 117]
[34 114]
[35 113]
[36 112]
[39 109]
[40 108]
[43 104]
[44 103]
[45 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
