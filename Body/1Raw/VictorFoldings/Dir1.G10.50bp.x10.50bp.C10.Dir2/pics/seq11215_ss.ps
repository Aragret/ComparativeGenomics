%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAAUCCCGGGGGGGGGGCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAUUCUACCCUAGCAUCxxxxxxxxxxGCCACCAUGAAUAUUGUACGGUACCAUAAAUACUUGACCACCUGUAGUACCCCCCCCCCCAUAAAAACCC\
) } def
/len { sequence length } bind def

/coor [
[83.25137329 358.28744507]
[70.03117371 351.01498413]
[59.14437103 340.56799316]
[51.33324051 327.65872192]
[47.13035965 313.16741943]
[46.82228851 298.08209229]
[50.43002701 283.43124390]
[57.70760345 270.21386719]
[68.15880585 259.33111572]
[81.07106781 251.52494812]
[95.56401062 247.32766724]
[95.25195312 232.33091736]
[94.93989563 217.33416748]
[94.62783813 202.33740234]
[94.31578064 187.34065247]
[94.00372314 172.34390259]
[93.69167328 157.34715271]
[93.37961578 142.35038757]
[93.06755829 127.35363770]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[91.62363434 57.96166229]
[91.31157684 42.96490860]
[76.31954956 42.34396362]
[61.39512253 40.79217148]
[46.59604263 38.31552887]
[31.97956276 34.92362213]
[17.60223007 30.62957191]
[3.51967192 25.44999313]
[-10.21363163 19.40492249]
[-23.54454803 12.51774693]
[-36.42150497 4.81511450]
[-48.79467773 -3.67317605]
[-60.61620331 -12.91428471]
[-71.84033966 -22.87245941]
[-82.42366791 -33.50917435]
[-92.32524109 -44.78327942]
[-101.50674438 -56.65114975]
[-109.93267059 -69.06687927]
[-117.57041168 -81.98242950]
[-124.39041901 -95.34783173]
[-130.36631775 -109.11138153]
[-135.47497559 -123.21982574]
[-139.69662476 -137.61857605]
[-143.01493835 -152.25193787]
[-145.41708374 -167.06329346]
[-146.89376831 -181.99533081]
[-147.43925476 -196.99029541]
[-147.05146790 -211.99017334]
[-145.73188782 -226.93692017]
[-143.48562622 -241.77272034]
[-140.32136536 -256.44015503]
[-136.25135803 -270.88250732]
[-131.29135132 -285.04388428]
[-125.46051025 -298.86953735]
[-118.78142548 -312.30590820]
[-111.27991486 -325.30105591]
[-102.98501587 -337.80468750]
[-93.92881012 -349.76846313]
[-84.14633942 -361.14605713]
[-73.67544556 -371.89346313]
[-62.55664444 -381.96911621]
[-50.83295059 -391.33404541]
[-38.54971695 -399.95196533]
[-25.75447083 -407.78958130]
[-12.49671268 -414.81655884]
[1.17226517 -421.00570679]
[15.19958019 -426.33306885]
[29.53096199 -430.77807617]
[44.11096573 -434.32348633]
[58.88318634 -436.95562744]
[73.79046631 -438.66427612]
[88.77513885 -439.44281006]
[103.77922821 -439.28826904]
[118.74468231 -438.20123291]
[133.61360168 -436.18588257]
[148.32847595 -433.25003052]
[162.83235168 -429.40505981]
[177.06913757 -424.66580200]
[190.98374939 -419.05062866]
[204.52233887 -412.58123779]
[217.63253784 -405.28265381]
[230.26364136 -397.18316650]
[242.36674500 -388.31405640]
[253.89506531 -378.70965576]
[264.80395508 -368.40710449]
[275.05126953 -357.44628906]
[284.59729004 -345.86959839]
[293.40515137 -333.72183228]
[301.44073486 -321.04998779]
[308.67297363 -307.90307617]
[315.07388306 -294.33197021]
[320.61871338 -280.38919067]
[325.28598022 -266.12863159]
[329.05764771 -251.60551453]
[331.91909790 -236.87600708]
[333.85931396 -221.99708557]
[334.87072754 -207.02633667]
[334.94946289 -192.02165222]
[334.09521484 -177.04110718]
[332.31127930 -162.14265442]
[329.60455322 -147.38391113]
[325.98553467 -132.82200623]
[321.46820068 -118.51326752]
[316.07000732 -104.51304626]
[309.81188965 -90.87550354]
[302.71801758 -77.65341949]
[294.81588745 -64.89793396]
[286.13598633 -52.65839386]
[276.71197510 -40.98215866]
[266.58029175 -29.91440201]
[255.78010559 -19.49794006]
[244.35324097 -9.77307129]
[232.34387207 -0.77742285]
[219.79847717 7.45420456]
[206.76559448 14.88996315]
[193.29565430 21.50108528]
[179.44073486 27.26199532]
[165.25448608 32.15040588]
[150.79174805 36.14739990]
[136.10850525 39.23751450]
[121.26155090 41.40880203]
[106.30832672 42.65285110]
[106.62038422 57.64960480]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[108.06430817 127.04158020]
[108.37636566 142.03833008]
[108.68842316 157.03509521]
[109.00048065 172.03184509]
[109.31253815 187.02859497]
[109.62459564 202.02534485]
[109.93664551 217.02210999]
[110.24870300 232.01885986]
[110.56076050 247.01560974]
[125.21575165 250.60638428]
[138.44155884 257.86865234]
[149.33642578 268.30722046]
[157.15753174 281.21044922]
[161.37159729 295.69851685]
[161.69131470 310.78359985]
[158.09489441 325.43722534]
[150.82752991 338.66021729]
[140.38473511 349.55105591]
[127.47850037 357.36715698]
[112.98880768 361.57565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[24 126]
[25 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
