%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUAGUAGGGGGGGGGGCCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAxxxxxxxxxxAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCCCCCCCCCCCAUAAAUAGGA\
) } def
/len { sequence length } bind def

/coor [
[80.41699219 370.53302002]
[69.85348511 359.79244995]
[61.94528580 346.97027588]
[57.08905029 332.70968628]
[55.52837372 317.72595215]
[57.34153366 302.77069092]
[62.43758774 288.59402466]
[70.56092072 275.90704346]
[81.30406189 265.34613037]
[94.12815094 257.44104004]
[108.38992310 252.58827209]
[106.83234406 237.66935730]
[105.27476501 222.75044250]
[103.71718597 207.83152771]
[102.15959930 192.91261292]
[100.60202026 177.99369812]
[99.04444122 163.07479858]
[97.48686218 148.15588379]
[95.92927551 133.23696899]
[94.37169647 118.31805420]
[85.64631653 115.16141510]
[78.79860687 107.80689240]
[75.83134460 97.40106964]
[61.41912842 101.55895996]
[47.00691223 105.71685028]
[32.59469986 109.87473297]
[18.18248177 114.03262329]
[12.01106071 128.40090942]
[-1.97547293 135.39453125]
[-17.17310524 131.71133423]
[-26.40598106 119.09040070]
[-25.31461716 103.49095154]
[-14.41432095 92.27856445]
[1.14811862 90.74739075]
[14.02459431 99.62040710]
[28.43681145 95.46251678]
[42.84902573 91.30463409]
[57.26124191 87.14674377]
[71.67346191 82.98885345]
[82.11327362 72.21804810]
[85.81943512 57.68310928]
[89.52559662 43.14817429]
[93.23175812 28.61323929]
[89.14405823 13.32921791]
[99.78608704 2.90825820]
[103.49224854 -11.62667751]
[107.19841003 -26.16161346]
[110.90457153 -40.69654846]
[96.76324463 -45.73118591]
[83.14678955 -52.04916000]
[70.17137146 -59.59655762]
[57.94770432 -68.30899811]
[46.58007050 -78.11213684]
[36.16545868 -88.92234039]
[26.79272652 -100.64737701]
[18.54183960 -113.18721008]
[11.48319149 -126.43486023]
[5.67700624 -140.27728271]
[1.17282164 -154.59640503]
[-1.99093354 -169.27003479]
[-3.78726673 -184.17297363]
[-4.20085192 -199.17810059]
[-3.22816014 -214.15736389]
[-0.87749088 -228.98298645]
[2.83110094 -243.52845764]
[7.86597395 -257.66970825]
[14.18417168 -271.28604126]
[21.73178673 -284.26135254]
[30.44442749 -296.48486328]
[40.24775696 -307.85232544]
[51.05813599 -318.26678467]
[62.78332901 -327.63931274]
[75.32330322 -335.88998413]
[88.57106781 -342.94842529]
[102.41358948 -348.75436401]
[116.73278046 -353.25830078]
[131.40646362 -356.42181396]
[146.30943298 -358.21789551]
[161.31455994 -358.63125610]
[176.29380798 -357.65829468]
[191.11940002 -355.30737305]
[205.66481018 -351.59854126]
[219.80596924 -346.56344604]
[233.42221069 -340.24502563]
[246.39738464 -332.69717407]
[258.62075806 -323.98434448]
[269.98806763 -314.18081665]
[280.40231323 -303.37026978]
[289.77465820 -291.64492798]
[298.02511597 -279.10482788]
[305.08334351 -265.85693359]
[310.88906860 -252.01431274]
[315.39276123 -237.69505310]
[318.55603027 -223.02131653]
[320.35186768 -208.11830139]
[320.76495361 -193.11317444]
[319.79177856 -178.13394165]
[317.44061279 -163.30839539]
[313.73153687 -148.76304626]
[308.69616699 -134.62196350]
[302.37753296 -121.00582886]
[294.82946777 -108.03079224]
[286.11642456 -95.80755615]
[276.31271362 -84.44041443]
[265.50201416 -74.02633667]
[253.77648926 -64.65419006]
[241.23625183 -56.40393066]
[227.98825073 -49.34594727]
[214.14552307 -43.54045105]
[199.82618713 -39.03698349]
[185.15240479 -35.87396240]
[170.24937439 -34.07837296]
[155.24423218 -33.66553879]
[140.26501465 -34.63897705]
[125.43950653 -36.99039078]
[121.73334503 -22.45545197]
[118.02718353 -7.92051697]
[114.32102203 6.61441946]
[118.67381287 20.85880470]
[107.76669312 32.31940079]
[104.06053162 46.85433578]
[100.35437012 61.38927078]
[96.64820862 75.92420959]
[115.98948669 84.03807831]
[120.67370605 102.91453552]
[109.29061127 116.76047516]
[110.84819031 131.67938232]
[112.40576935 146.59829712]
[113.96335602 161.51721191]
[115.52093506 176.43612671]
[117.07851410 191.35504150]
[118.63609314 206.27394104]
[120.19367981 221.19285583]
[121.75125885 236.11177063]
[123.30883789 251.03068542]
[138.26542664 252.83297729]
[152.44580078 257.91873169]
[165.13867188 266.03283691]
[175.70736694 276.76828003]
[183.62179565 289.58663940]
[188.48493958 303.84487915]
[190.05287170 318.82785034]
[188.24696350 333.78399658]
[183.15777588 347.96313477]
[175.04058838 360.65402222]
[164.30256653 371.22015381]
[151.48231506 379.13143921]
[137.22290039 383.99114990]
[122.23954773 385.55545044]
[107.28383636 383.74591064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[40 123]
[41 122]
[42 121]
[43 120]
[45 118]
[46 117]
[47 116]
[48 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
