%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUAUCAGGGGGGGGGGUCUCAACUUAGUAUUAUACCCACACCCACCCAAGAACAGGGUUUGUUAAGxxxxxxxxxxACAGAAACAAAGCAUACAUCAUUAUUCUCGCACGGACUACAACCACGACCCCCCCCCCCCAAUGAUAUGA\
) } def
/len { sequence length } bind def

/coor [
[57.06900406 668.40679932]
[44.51078033 660.05566406]
[34.42455673 648.84320068]
[27.44436264 635.47430420]
[24.00897980 620.78930664]
[24.33435631 605.71136475]
[28.40004158 591.18823242]
[35.95046234 578.13287354]
[46.51099014 567.36602783]
[59.41778564 559.56439209]
[73.85951233 555.21844482]
[73.23553467 540.23138428]
[72.61155701 525.24438477]
[71.98757935 510.25738525]
[71.36360168 495.27035522]
[70.73962402 480.28332520]
[70.11564636 465.29632568]
[69.49166870 450.30929565]
[68.86769104 435.32229614]
[68.24371338 420.33526611]
[67.61973572 405.34826660]
[66.99575806 390.36123657]
[52.05908203 385.15734863]
[40.22549438 374.60421753]
[33.31905365 360.28903198]
[32.41942215 344.38186646]
[37.69317627 329.30667114]
[48.36395264 317.37191772]
[62.82656097 310.41711426]
[61.89093018 295.44631958]
[60.95530319 280.47552490]
[60.01967621 265.50476074]
[52.29776001 278.36444092]
[40.07822418 287.06405640]
[25.39956856 290.15225220]
[10.71051502 287.11389160]
[-1.53847063 278.45581055]
[-9.30398178 265.62237549]
[-11.29055786 250.75450134]
[-7.16679287 236.33248901]
[2.37937617 224.76223755]
[15.75543404 217.97393799]
[30.72995567 217.10002136]
[44.80485153 222.28628540]
[55.63211823 232.66752625]
[61.40525055 246.51054382]
[64.50357056 231.83403015]
[52.62857437 222.80906677]
[45.82164001 209.46833801]
[45.48060226 194.43354797]
[51.72665024 180.68556213]
[63.36968231 170.97337341]
[78.13468170 167.26445007]
[81.23300171 152.58792114]
[84.33132935 137.91139221]
[87.42964935 123.23487091]
[74.67434692 112.52489471]
[70.27710724 95.31557465]
[77.12260437 77.73130798]
[93.84658051 66.80323792]
[86.69004059 52.69315338]
[94.95008087 40.29875946]
[95.57405853 25.31174278]
[96.19803619 10.32472706]
[96.82201385 -4.66228962]
[97.44599152 -19.64930534]
[98.06996918 -34.63632202]
[83.88299561 -39.88846588]
[72.01464081 -49.26915741]
[63.62764740 -61.85937119]
[59.54368210 -76.42564392]
[60.16285324 -91.54093170]
[65.42449951 -105.72438049]
[74.81314087 -117.58644867]
[87.40897369 -125.96500397]
[101.97798920 -130.03919983]
[117.09284973 -129.40991211]
[131.27276611 -124.13875580]
[143.12854004 -114.74216461]
[151.49865723 -102.14072418]
[155.56309509 -87.56898499]
[154.92367554 -72.45454407]
[149.64302063 -58.27816010]
[140.23849487 -46.42868805]
[127.63143921 -38.06702042]
[113.05698395 -34.01234436]
[112.43300629 -19.02532768]
[111.80902863 -4.03831196]
[111.18505096 10.94870377]
[110.56107330 25.93572044]
[109.93709564 40.92273712]
[117.13826752 53.96084976]
[108.83359528 67.42721558]
[122.07617950 74.47235107]
[134.15617371 65.58000183]
[137.97874451 49.99900818]
[152.60362244 43.40411377]
[166.81184387 50.85435867]
[169.70407104 66.63455200]
[159.06164551 78.63948059]
[143.04852295 77.65998840]
[130.96853638 86.55234528]
[130.53240967 106.95223236]
[118.88907623 121.82717896]
[102.10617065 126.33319092]
[99.00785065 141.00971985]
[95.90953064 155.68623352]
[92.81121063 170.36276245]
[104.81716156 179.72323608]
[111.54102325 193.31282043]
[111.69714355 208.41235352]
[105.30813599 222.02636719]
[93.68970490 231.47737122]
[79.18009949 234.93234253]
[76.08177948 249.60887146]
[74.99046326 264.56912231]
[75.92609406 279.53991699]
[76.86172485 294.51071167]
[77.79734802 309.48150635]
[91.42984009 313.71896362]
[102.76684570 322.34564209]
[110.45314789 334.30459595]
[113.57875061 348.14208984]
[111.78656769 362.18435669]
[105.31311035 374.74005127]
[94.95746613 384.30392456]
[81.98278046 389.73727417]
[82.60675812 404.72427368]
[83.23073578 419.71130371]
[83.85471344 434.69830322]
[84.47868347 449.68533325]
[85.10266113 464.67233276]
[85.72663879 479.65936279]
[86.35061646 494.64636230]
[86.97459412 509.63339233]
[87.59857178 524.62042236]
[88.22254944 539.60742188]
[88.84652710 554.59442139]
[103.59953308 557.72491455]
[117.11016846 564.42663574]
[128.52914429 574.27844238]
[137.13865662 586.66094971]
[142.39750671 600.79583740]
[143.97511292 615.79461670]
[141.77230835 630.71435547]
[135.92756653 644.61718750]
[126.80828094 656.62927246]
[114.98770905 665.99542236]
[101.20890045 672.12689209]
[86.33799744 674.63830566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[29 119]
[30 118]
[31 117]
[32 116]
[46 115]
[47 114]
[53 108]
[54 107]
[55 106]
[56 105]
[60 93]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[94 102]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
