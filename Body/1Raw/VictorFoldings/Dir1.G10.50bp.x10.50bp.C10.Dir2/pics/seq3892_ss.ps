%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACCCUUAGGGGGGGGGGUCACAACACAAGAACACCUCUGAUUACUCCUGCCAUCAUGACCCUUGGCCxxxxxxxxxxGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUCCCCCCCCCCUCCACCCUUA\
) } def
/len { sequence length } bind def

/coor [
[83.60044098 371.53698730]
[71.71617126 362.26187134]
[62.39746094 350.41177368]
[56.18609619 336.67559814]
[53.44319153 321.85198975]
[54.32822418 306.80273438]
[58.78973007 292.40277100]
[66.56832886 279.48934937]
[77.21177673 268.81317139]
[90.10128784 260.99499512]
[104.48747253 256.48931885]
[103.55184937 241.51853943]
[102.61621857 226.54774475]
[101.68058777 211.57695007]
[100.74496460 196.60615540]
[99.80933380 181.63537598]
[98.87370300 166.66458130]
[88.66022491 155.67890930]
[73.79718018 153.65658569]
[58.93413162 151.63424683]
[44.07108307 149.61190796]
[29.20803642 147.58956909]
[14.34498978 145.56724548]
[25.86973000 155.16830444]
[33.73064423 167.94351196]
[37.10673904 182.55863953]
[35.64542389 197.48728943]
[29.49931335 211.17031860]
[19.31030464 222.17868042]
[6.14253044 229.36267090]
[-8.62877274 231.97200012]
[-23.46090126 229.73414612]
[-36.80479431 222.88284302]
[-47.26682281 212.13360596]
[-53.75434494 198.60910034]
[-55.58980179 183.72183228]
[-52.58149719 169.02658081]
[-45.04362488 156.05815125]
[-33.76343155 146.17091370]
[-19.91901016 140.39752197]
[-4.95327091 139.34121704]
[-18.19585609 132.29608154]
[-31.43844223 125.25094604]
[-44.68102646 118.20581055]
[-57.66530609 126.40971375]
[-73.01260376 127.00633240]
[-86.59458160 119.83517456]
[-94.75775146 106.82524109]
[-95.30625153 91.47614288]
[-88.09255981 77.91671753]
[-75.05710602 69.79437256]
[-59.70636368 69.29397583]
[-46.16961288 76.55014038]
[-38.08816528 89.61099243]
[-37.63589478 104.96322632]
[-24.39330673 112.00836182]
[-11.15072155 119.05349731]
[2.09186387 126.09863281]
[16.36732483 130.70419312]
[31.23037148 132.72653198]
[46.09341812 134.74885559]
[60.95646667 136.77119446]
[75.81951141 138.79353333]
[90.68255615 140.81587219]
[65.42587280 113.61238098]
[73.14955139 81.77971649]
[99.90835571 72.25986481]
[103.91609192 57.80517578]
[92.23883057 67.22014618]
[77.66085815 70.75320435]
[62.96887970 67.72898865]
[50.97142792 58.72558975]
[43.96192932 45.46411133]
[43.28031540 30.47960472]
[49.05688477 16.63651085]
[60.18739319 6.58107519]
[74.54412842 2.23549128]
[89.38266754 4.43046093]
[101.86646271 12.74639416]
[109.60913086 25.59361839]
[111.13074493 40.51478577]
[118.58565521 27.49847794]
[126.04056549 14.48216820]
[118.83275604 0.84211510]
[120.16629791 -14.52750492]
[129.61566162 -26.72230148]
[144.16558838 -31.85095978]
[159.17324829 -28.27694321]
[169.84976196 -17.14070702]
[172.78828430 -1.99578583]
[167.05113220 12.32513332]
[154.46903992 21.25229645]
[139.05686951 21.93707848]
[131.60195923 34.95338821]
[124.14705658 47.96969604]
[118.37078094 61.81291580]
[114.36303711 76.26760101]
[125.82603455 80.35462189]
[135.77073669 89.94408417]
[141.64738464 104.27149200]
[156.35533142 101.32600403]
[171.06329346 98.38052368]
[185.77125549 95.43504333]
[200.47921753 92.48955536]
[206.83465576 78.33370972]
[220.31361389 70.64624023]
[235.73318481 72.38314819]
[247.16419983 82.87654114]
[250.21121216 98.09151459]
[243.70259094 112.17758942]
[230.14102173 119.71838379]
[214.74121094 117.81430817]
[203.42471313 107.19751740]
[188.71675110 110.14300537]
[174.00878906 113.08848572]
[159.30082703 116.03396606]
[144.59286499 118.97944641]
[143.34597778 133.92753601]
[157.36270142 139.26904297]
[171.37940979 144.61056519]
[188.33335876 144.60090637]
[193.03594971 160.88960266]
[178.68562317 169.91758728]
[166.03790283 158.62727356]
[152.02117920 153.28576660]
[138.00447083 147.94424438]
[131.96447754 152.39042664]
[140.85664368 164.47055054]
[128.77638245 173.36253357]
[119.88449097 161.28277588]
[113.84449768 165.72894287]
[114.78012085 180.69973755]
[115.71575165 195.67053223]
[116.65138245 210.64132690]
[117.58701324 225.61212158]
[118.52263641 240.58290100]
[119.45826721 255.55369568]
[134.29350281 258.23312378]
[148.05613708 264.38562012]
[159.94602966 273.65353394]
[169.27191162 285.49798584]
[175.49160767 299.23037720]
[178.24349976 314.05233765]
[177.36759949 329.10214233]
[172.91481018 343.50479126]
[165.14404297 356.42294312]
[154.50708008 367.10552979]
[141.62229919 374.93154907]
[127.23885345 379.44592285]
[112.19294739 380.38626099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[41 58]
[42 57]
[43 56]
[44 55]
[67 97]
[68 96]
[81 95]
[82 94]
[83 93]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
