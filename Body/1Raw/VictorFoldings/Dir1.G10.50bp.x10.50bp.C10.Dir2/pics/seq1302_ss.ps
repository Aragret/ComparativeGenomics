%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAAAAUAGGGGGGGGGGGACUACGAAAGUGGCUUUAACAUAUCUGAACACACAAUAGCUAAGACCCAAxxxxxxxxxxAACUCCAGUUGACACAAAAUAGACUACGAAAGUGGCUUUAACAUAUCUGACCCCCCCCCCACACACAAUAG\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 386.70895386]
[71.01555634 381.15594482]
[58.81560135 372.28961182]
[49.20452881 360.66729736]
[42.78650284 347.01962280]
[39.96496582 332.20443726]
[40.91728210 317.15304565]
[45.58358765 302.81161499]
[53.67055511 290.08166504]
[64.66983032 279.76339722]
[77.88998413 272.50543213]
[92.50000000 268.76397705]
[92.50000000 253.76397705]
[92.50000000 238.76397705]
[92.50000000 223.76397705]
[92.50000000 208.76397705]
[92.50000000 193.76397705]
[92.50000000 178.76397705]
[92.50000000 163.76397705]
[92.50000000 148.76397705]
[92.50000000 133.76397705]
[80.74964905 128.73466492]
[71.62819672 119.78123474]
[66.38128662 108.12641144]
[65.72546387 95.36183167]
[69.75028992 83.23064423]
[77.90611267 73.38954163]
[89.07914734 67.18244934]
[87.54185486 52.26143646]
[86.00456238 37.34041977]
[84.46726990 22.41940117]
[82.92997742 7.49838543]
[70.95180511 -2.45957613]
[69.60532379 -17.61350822]
[79.17253876 -28.97150230]
[77.63524628 -43.89252090]
[76.09795380 -58.81353378]
[74.56066132 -73.73455048]
[59.55335617 -73.48508453]
[44.58015823 -74.52664948]
[29.75193214 -76.85153961]
[15.17845726 -80.44254303]
[0.96763372 -85.27306366]
[-12.77532387 -91.30734253]
[-25.94866753 -98.50070953]
[-38.45486069 -106.79989624]
[-50.20131683 -116.14346313]
[-61.10106277 -126.46223450]
[-71.07340240 -137.67980957]
[-80.04449463 -149.71313477]
[-87.94792938 -162.47311401]
[-94.72518921 -175.86528015]
[-100.32609558 -189.79048157]
[-104.70917511 -204.14562988]
[-107.84198761 -218.82441711]
[-109.70133209 -233.71818542]
[-110.27344513 -248.71665955]
[-109.55408478 -263.70877075]
[-107.54857635 -278.58358765]
[-104.27178192 -293.23089600]
[-99.74794769 -307.54229736]
[-94.01057434 -321.41183472]
[-87.10213470 -334.73681641]
[-79.07378387 -347.41857910]
[-69.98496246 -359.36322021]
[-59.90295410 -370.48233032]
[-48.90240860 -380.69357300]
[-37.06477356 -389.92135620]
[-24.47768593 -398.09732056]
[-11.23434353 -405.16098022]
[2.56720543 -411.06002808]
[16.82477760 -415.75076294]
[31.43280983 -419.19848633]
[46.28315353 -421.37768555]
[61.26585388 -422.27215576]
[76.26998901 -421.87533569]
[91.18446350 -420.19015503]
[105.89885712 -417.22906494]
[120.30422974 -413.01400757]
[134.29393005 -407.57620239]
[147.76437378 -400.95590210]
[160.61582947 -393.20208740]
[172.75315857 -384.37222290]
[184.08648682 -374.53161621]
[194.53190613 -363.75320435]
[204.01208496 -352.11672974]
[212.45684814 -339.70834351]
[219.80363464 -326.61996460]
[225.99809265 -312.94845581]
[230.99432373 -298.79504395]
[234.75537109 -284.26452637]
[237.25335693 -269.46447754]
[238.46981812 -254.50445557]
[238.39572144 -239.49526978]
[237.03161621 -224.54800415]
[234.38761902 -209.77333069]
[230.48330688 -195.28065491]
[225.34756470 -181.17726135]
[219.01843262 -167.56758118]
[211.54277039 -154.55236816]
[202.97592163 -142.22798157]
[193.38130188 -130.68566895]
[182.82997131 -120.01089478]
[171.40003967 -110.28268433]
[159.17611694 -101.57307434]
[146.24873352 -93.94653320]
[132.71357727 -87.45954132]
[118.67087555 -82.16011810]
[104.22458649 -78.08750153]
[89.48167419 -75.27184296]
[91.01896667 -60.35082626]
[92.55625916 -45.42981339]
[94.09355164 -30.50879478]
[105.77560425 -21.34008408]
[107.54719543 -6.22995043]
[97.85099792 5.96109295]
[99.38829041 20.88210869]
[100.92558289 35.80312729]
[102.46287537 50.72414398]
[104.00016785 65.64515686]
[121.98542023 73.29985809]
[132.94891357 89.48212433]
[133.38908386 109.02362061]
[146.67642212 115.98397827]
[163.03060913 114.77044678]
[172.03372192 128.47723389]
[164.42411804 143.00396729]
[148.02992249 143.40679932]
[139.71606445 129.27131653]
[126.42872620 122.31095886]
[117.90481567 129.59178162]
[107.50000000 133.76397705]
[107.50000000 148.76397705]
[107.50000000 163.76397705]
[107.50000000 178.76397705]
[107.50000000 193.76397705]
[107.50000000 208.76397705]
[107.50000000 223.76397705]
[107.50000000 238.76397705]
[107.50000000 253.76397705]
[107.50000000 268.76397705]
[122.11001587 272.50543213]
[135.33016968 279.76339722]
[146.32945251 290.08166504]
[154.41641235 302.81161499]
[159.08271790 317.15304565]
[160.03503418 332.20443726]
[157.21350098 347.01962280]
[150.79547119 360.66729736]
[141.18440247 372.28961182]
[128.98443604 381.15594482]
[114.96250153 386.70895386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[35 113]
[36 112]
[37 111]
[38 110]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
