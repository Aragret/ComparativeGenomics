%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAAUUCCUGGGGGGGGGGCCCUGUACGAAAGGACAAGAGAAAUAAGGCCUACUUCACAAAGCGCCUUCxxxxxxxxxxUUAACAGUACAUAGUACAUAAAGCCAUUUACCGUACAUAGCACAUUACAGCCCCCCCCCCUCAAAUCCCU\
) } def
/len { sequence length } bind def

/coor [
[100.64630127 388.30810547]
[86.80036163 382.29205322]
[75.09169769 372.76263428]
[66.38917542 360.42697144]
[61.33857346 346.20046997]
[60.31468201 331.13876343]
[63.39347839 316.35961914]
[70.34650421 302.95968628]
[80.65778351 291.93334961]
[93.56216431 284.09884644]
[108.10205078 280.03753662]
[108.10205078 265.03753662]
[108.10205078 250.03753662]
[108.10205078 235.03753662]
[108.10205078 220.03753662]
[108.10205078 205.03753662]
[108.10205078 190.03753662]
[108.10205078 175.03753662]
[108.10205078 160.03753662]
[108.10205078 145.03753662]
[108.10205078 130.03753662]
[85.84181213 124.98204041]
[74.67790985 107.17560577]
[79.03907776 88.46919250]
[68.82559967 77.48352814]
[58.61211777 66.49786377]
[48.39863586 55.51219559]
[38.18515778 44.52653122]
[27.85795212 33.64770508]
[10.05754566 29.05146599]
[6.38185072 11.91993904]
[-4.27977562 1.36864924]
[-16.17178535 9.00260448]
[-29.39445305 13.97040462]
[-43.35866928 16.05356216]
[-57.44287872 15.16204166]
[-71.02075958 11.33815861]
[-83.48904419 4.75456619]
[-94.29438019 -4.29352903]
[-102.95780945 -15.40160847]
[-109.09606171 -28.07392311]
[-112.43850708 -41.74562073]
[-112.83902740 -55.80792236]
[-110.28247833 -69.63523102]
[-104.88520050 -82.61296082]
[-96.88971710 -94.16484833]
[-107.10320282 -105.15051270]
[-117.31668091 -116.13617706]
[-127.53015900 -127.12184143]
[-137.74363708 -138.10749817]
[-148.07084656 -148.98632812]
[-158.51065063 -159.75714111]
[-173.61416626 -156.61268616]
[-188.01187134 -162.15432739]
[-197.10951233 -174.61370850]
[-198.00407410 -190.01512146]
[-190.41009521 -203.44401550]
[-176.75079346 -210.61526489]
[-161.38479614 -209.24058533]
[-149.21534729 -199.75860596]
[-144.12565613 -185.19499207]
[-147.73985291 -170.19694519]
[-137.30003357 -159.42614746]
[-130.34133911 -156.79513550]
[-126.75797272 -148.32098389]
[-116.54449463 -137.33532715]
[-106.33101654 -126.34965515]
[-96.11753845 -115.36399078]
[-85.90405273 -104.37832642]
[-72.07543945 -112.26906586]
[-56.76130295 -116.65524292]
[-40.83537292 -117.28245544]
[-25.20728111 -114.11090851]
[-10.77058506 -107.31787872]
[1.64831042 -97.28781891]
[11.33746529 -84.59060669]
[17.74021339 -69.94917297]
[20.48714828 -54.19832230]
[19.41742897 -38.23715973]
[14.58819008 -22.97774124]
[6.27151489 -9.29297733]
[16.93314171 1.25831318]
[29.06731606 1.52120197]
[38.03869629 10.28095818]
[38.62876129 23.20789528]
[45.58745956 25.83889389]
[49.17082214 34.31305313]
[59.38430023 45.29871750]
[69.59777832 56.28438187]
[79.81126404 67.27005005]
[90.02474213 78.25571442]
[105.49294281 74.26042938]
[121.58466339 81.06169891]
[131.01197815 97.51918030]
[145.13677979 92.47042084]
[159.26158142 87.42166901]
[173.38638306 82.37290955]
[184.93478394 68.06857300]
[202.05221558 71.80936432]
[216.06893921 66.46785736]
[230.08564758 61.12634277]
[244.10235596 55.78482819]
[254.02827454 42.73077774]
[270.26000977 45.06797791]
[276.09976196 60.39212036]
[265.54010010 72.93904114]
[249.44387817 69.80154419]
[235.42715454 75.14305878]
[221.41044617 80.48456573]
[207.39373779 85.82608032]
[202.13456726 96.76447296]
[190.44813538 101.30830383]
[178.43513489 96.49771118]
[164.31033325 101.54647064]
[150.18553162 106.59523010]
[136.06072998 111.64398193]
[150.87690735 113.98507690]
[165.57292175 110.98056030]
[180.17039490 114.43219757]
[191.96447754 123.70040894]
[198.76976013 137.06782532]
[199.32527161 152.05754089]
[193.52806091 165.89199829]
[182.45234680 176.00775146]
[168.15039062 180.53038025]
[153.27229309 178.62185669]
[140.57492065 170.63583374]
[132.41102600 158.05207825]
[130.29344177 143.20127869]
[123.10205078 130.03753662]
[123.10205078 145.03753662]
[123.10205078 160.03753662]
[123.10205078 175.03753662]
[123.10205078 190.03753662]
[123.10205078 205.03753662]
[123.10205078 220.03753662]
[123.10205078 235.03753662]
[123.10205078 250.03753662]
[123.10205078 265.03753662]
[123.10205078 280.03753662]
[137.64193726 284.09884644]
[150.54632568 291.93334961]
[160.85760498 302.95968628]
[167.81062317 316.35961914]
[170.88941956 331.13876343]
[169.86553955 346.20046997]
[164.81492615 360.42697144]
[156.11241150 372.76263428]
[144.40374756 382.29205322]
[130.55781555 388.30810547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 85]
[31 82]
[32 81]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 63]
[52 62]
[94 116]
[95 115]
[96 114]
[97 113]
[99 110]
[100 109]
[101 108]
[102 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
