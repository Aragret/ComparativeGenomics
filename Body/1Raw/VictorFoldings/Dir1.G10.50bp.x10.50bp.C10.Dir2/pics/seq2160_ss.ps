%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCUAAGAAGGGGGGGGGGCAGCUAAAAGAGCACACCCGUCUAUGUAGCAAAAUAGUGGGAAGAUUUAUxxxxxxxxxxUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACCCCCCCCCCCUACCUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 391.61569214]
[71.01555634 386.06268311]
[58.81560135 377.19635010]
[49.20452881 365.57406616]
[42.78650284 351.92636108]
[39.96496582 337.11117554]
[40.91728210 322.05978394]
[45.58358765 307.71835327]
[53.67055511 294.98840332]
[64.66983032 284.67013550]
[77.88998413 277.41217041]
[92.50000000 273.67071533]
[92.50000000 258.67071533]
[92.50000000 243.67073059]
[92.50000000 228.67073059]
[92.50000000 213.67073059]
[92.50000000 198.67073059]
[92.50000000 183.67073059]
[92.50000000 168.67073059]
[92.50000000 153.67073059]
[92.50000000 138.67073059]
[83.20007324 137.76754761]
[73.96244049 134.57138062]
[65.36149597 129.07539368]
[51.43078232 134.63732910]
[37.50006485 140.19926453]
[29.87517548 154.31452942]
[14.06051445 157.01194763]
[2.18773723 146.22229004]
[3.36462235 130.22245789]
[16.68836403 121.28616333]
[31.93812943 126.26855469]
[45.86884689 120.70661163]
[59.79956055 115.14467621]
[57.04331970 100.40008545]
[42.04410934 100.24608612]
[28.03209496 108.76638031]
[13.77917862 100.65550232]
[13.94753933 84.25721741]
[28.36398315 76.44068146]
[42.19810486 85.24687195]
[57.19731522 85.40087128]
[66.35761261 72.00655365]
[79.29117584 63.10718918]
[94.04912567 59.58631897]
[108.56170654 61.55039597]
[114.55000305 47.79756546]
[120.53829956 34.04473877]
[126.24295807 20.17185593]
[131.66159058 6.18477297]
[137.08021545 -7.80231047]
[126.88598633 -25.63187027]
[132.03248596 -45.24123764]
[149.21403503 -55.49533844]
[151.05735779 -70.38164520]
[152.90068054 -85.26795197]
[145.31919861 -102.01763153]
[156.36230469 -115.62257385]
[157.89959717 -130.54359436]
[159.43688965 -145.46461487]
[160.97418213 -160.38562012]
[151.30850220 -169.81877136]
[148.89549255 -182.90917969]
[154.39898682 -194.81465149]
[165.59609985 -201.26268005]
[159.61332703 -215.90907288]
[168.85600281 -227.58906555]
[170.69934082 -242.47537231]
[172.54266357 -257.36166382]
[158.67637634 -263.35357666]
[147.06076050 -273.01040649]
[138.63746643 -285.54931641]
[134.08929443 -299.95385742]
[133.78497314 -315.05633545]
[137.74916077 -329.63238525]
[145.66049194 -342.50045776]
[156.87765503 -352.61740112]
[170.49128723 -359.16302490]
[185.39782715 -361.60675049]
[200.38885498 -359.75045776]
[214.24911499 -353.74462891]
[225.85501099 -344.07614136]
[234.26571655 -331.52877808]
[238.79942322 -317.11965942]
[239.08856201 -302.01690674]
[235.10974121 -287.44482422]
[227.18547058 -274.58471680]
[215.95816040 -264.47906494]
[202.33795166 -257.94711304]
[187.42897034 -255.51835632]
[185.58564758 -240.63204956]
[183.74230957 -225.74574280]
[189.85693359 -212.16410828]
[180.48240662 -199.41935730]
[191.37608337 -186.64317322]
[189.65473938 -169.60298157]
[175.89520264 -158.84832764]
[174.35791016 -143.92732239]
[172.82061768 -129.00630188]
[171.28332520 -114.08528137]
[178.68434143 -104.46826172]
[177.48526001 -91.98893738]
[167.78698730 -83.42462921]
[165.94366455 -68.53832245]
[164.10034180 -53.65201569]
[169.90597534 -50.15546036]
[174.62384033 -45.28998947]
[177.93995667 -39.37944031]
[192.87596130 -40.76346588]
[207.81198120 -42.14749146]
[220.87699890 -52.05896378]
[235.88612366 -45.45151520]
[237.39924622 -29.12232399]
[223.85980225 -19.86946106]
[209.19599915 -27.21148109]
[194.25999451 -25.82745552]
[179.32397461 -24.44342995]
[174.16911316 -12.73650074]
[163.98838806 -4.71570349]
[151.06729126 -2.38368535]
[145.64866638 11.60339832]
[140.23004150 25.59048080]
[141.33331299 30.29495049]
[139.44898987 35.73895645]
[134.29112244 40.03303528]
[128.30282593 53.78586197]
[122.31452942 67.53868866]
[134.58789062 81.14920807]
[139.37422180 98.84023285]
[135.63746643 116.78231049]
[124.18648529 131.09162903]
[107.50000000 138.67073059]
[107.50000000 153.67073059]
[107.50000000 168.67073059]
[107.50000000 183.67073059]
[107.50000000 198.67073059]
[107.50000000 213.67073059]
[107.50000000 228.67073059]
[107.50000000 243.67073059]
[107.50000000 258.67071533]
[107.50000000 273.67071533]
[122.11001587 277.41217041]
[135.33016968 284.67013550]
[146.32945251 294.98840332]
[154.41641235 307.71835327]
[159.08271790 322.05978394]
[160.03503418 337.11117554]
[157.21350098 351.92636108]
[150.79547119 365.57406616]
[141.18440247 377.19635010]
[128.98443604 386.06268311]
[114.96250153 391.61569214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[24 34]
[25 33]
[26 32]
[35 42]
[36 41]
[46 127]
[47 126]
[48 125]
[49 122]
[50 121]
[51 120]
[54 105]
[55 104]
[56 103]
[58 100]
[59 99]
[60 98]
[61 97]
[65 94]
[67 92]
[68 91]
[69 90]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
