%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCAAUGAGGGGGGGGGGUGGCGCGAUGUAACACGAGAAAGCACAUACCAAGGCCACCACACACCACCxxxxxxxxxxCAACCACGACCAAUGAUAUGAAAAACCAUCGUUGUAUUUCAACUACAAGACCCCCCCCCCACACCAAUGA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 377.36648560]
[71.19830322 371.35046387]
[59.48964310 361.82104492]
[50.78712082 349.48538208]
[45.73651886 335.25885010]
[44.71262741 320.19717407]
[47.79142761 305.41802979]
[54.74444962 292.01809692]
[65.05573273 280.99176025]
[77.96011353 273.15725708]
[92.50000000 269.09594727]
[92.50000000 254.09593201]
[92.50000000 239.09593201]
[92.50000000 224.09593201]
[92.50000000 209.09593201]
[92.50000000 194.09593201]
[92.50000000 179.09593201]
[92.50000000 164.09593201]
[92.50000000 149.09593201]
[92.50000000 134.09593201]
[92.50000000 119.09593964]
[82.42728424 112.31529236]
[77.60655975 100.58232117]
[80.21313477 87.61450958]
[89.95891571 77.88690948]
[103.99536133 75.08980560]
[99.68778229 60.72161865]
[95.38019562 46.35343552]
[91.07260895 31.98525047]
[86.76502991 17.61706734]
[72.08885956 20.75655746]
[57.20765305 22.70491600]
[42.21792603 23.44951057]
[27.21689415 22.98551178]
[12.30184078 21.31592560]
[-2.43049979 18.45158195]
[-16.88458252 14.41105747]
[-30.96666336 9.22055721]
[-44.58541489 2.91374373]
[-57.65251541 -4.46848059]
[-70.08321381 -12.87823868]
[-81.79689789 -22.26098824]
[-92.71759033 -32.55587769]
[-102.77446747 -43.69614029]
[-111.90231323 -55.60952759]
[-120.04192352 -68.21877289]
[-127.14051056 -81.44210815]
[-133.15202332 -95.19375610]
[-138.03750610 -109.38454437]
[-141.76524353 -123.92243958]
[-144.31106567 -138.71315002]
[-145.65847778 -153.66075134]
[-145.79872131 -168.66830444]
[-144.73089600 -183.63847351]
[-142.46192932 -198.47418213]
[-139.00653076 -213.07919312]
[-134.38711548 -227.35881042]
[-128.63363647 -241.22039795]
[-121.78341675 -254.57408142]
[-113.88087463 -267.33325195]
[-104.97726440 -279.41513062]
[-95.13033295 -290.74139404]
[-84.40394592 -301.23858643]
[-72.86765289 -310.83859253]
[-60.59629059 -319.47921753]
[-47.66943741 -327.10433960]
[-34.17092514 -333.66455078]
[-20.18830490 -339.11734009]
[-5.81225872 -343.42727661]
[8.86397934 -346.56643677]
[23.74522591 -348.51446533]
[38.73496628 -349.25872803]
[53.73599243 -348.79440308]
[68.65100861 -347.12448120]
[83.38328552 -344.25982666]
[97.83728027 -340.21899414]
[111.91924286 -335.02816772]
[125.53785706 -328.72106934]
[138.60479736 -321.33853149]
[151.03530884 -312.92849731]
[162.74877930 -303.54550171]
[173.66925049 -293.25036621]
[183.72589111 -282.10989380]
[192.85346985 -270.19628906]
[200.99279785 -257.58688354]
[208.09109497 -244.36338806]
[214.10231018 -230.61160278]
[218.98747253 -216.42070007]
[222.71488953 -201.88273621]
[225.26039124 -187.09196472]
[226.60746765 -172.14433289]
[226.74737549 -157.13677979]
[225.67922974 -142.16662598]
[223.40992737 -127.33097839]
[219.95420837 -112.72603607]
[215.33447266 -98.44652557]
[209.58070374 -84.58505249]
[202.73017883 -71.23152161]
[194.82736206 -58.47253799]
[185.92349243 -46.39084244]
[176.07630920 -35.06479645]
[165.34968567 -24.56785011]
[153.81318665 -14.96808338]
[141.54162598 -6.32775497]
[128.61460876 1.29709792]
[115.11595154 7.85702515]
[101.13320923 13.30948162]
[105.44079590 27.67766571]
[109.74838257 42.04584885]
[114.05596161 56.41403580]
[118.36354828 70.78221893]
[129.02517700 81.33351135]
[143.43739319 85.49139404]
[157.84960938 89.64928436]
[172.26182556 93.80716705]
[186.67404175 97.96505737]
[199.55052185 89.09204102]
[215.11296082 90.62321472]
[226.01324463 101.83560181]
[227.10461426 117.43505096]
[217.87173462 130.05598450]
[202.67410278 133.73919678]
[188.68757629 126.74555969]
[182.51615906 112.37727356]
[168.10394287 108.21938324]
[153.69172668 104.06150055]
[139.27951050 99.90361023]
[124.86728668 95.74572754]
[119.92180634 111.23664856]
[107.50000000 119.09593964]
[107.50000000 134.09593201]
[107.50000000 149.09593201]
[107.50000000 164.09593201]
[107.50000000 179.09593201]
[107.50000000 194.09593201]
[107.50000000 209.09593201]
[107.50000000 224.09593201]
[107.50000000 239.09593201]
[107.50000000 254.09593201]
[107.50000000 269.09594727]
[122.03988647 273.15725708]
[134.94427490 280.99176025]
[145.25555420 292.01809692]
[152.20857239 305.41802979]
[155.28736877 320.19717407]
[154.26348877 335.25885010]
[149.21287537 349.48538208]
[140.51036072 361.82104492]
[128.80169678 371.35046387]
[114.95575714 377.36648560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
