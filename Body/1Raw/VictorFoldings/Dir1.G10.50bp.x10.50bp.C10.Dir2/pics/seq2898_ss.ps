%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCGGAGCAGGGGGGGGGGGAACCCAACCUCCGAGCAGUACAUGCUAAGACUUCACCAGUCAAAGCGAACxxxxxxxxxxCCGGCAGGUUUGAAGCUGCUUCUUCGAAUUUGCAAUUCAAUAUGAAAAUCCCCCCCCCCCACCUCGGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[84.26923370 460.10647583]
[70.78214264 453.37136841]
[59.29922867 443.60375977]
[50.48809814 431.37152100]
[44.86102295 417.38583374]
[42.74514771 402.45980835]
[44.26349258 387.46121216]
[49.32777786 373.26202393]
[57.64357376 360.68780518]
[68.72740936 350.46960449]
[81.93489075 343.20144653]
[96.49815369 339.30596924]
[96.19414520 324.30902100]
[95.89014435 309.31210327]
[95.58613586 294.31518555]
[95.28213501 279.31826782]
[94.97812653 264.32135010]
[94.67412567 249.32443237]
[94.37011719 234.32751465]
[94.06611633 219.33059692]
[93.76210785 204.33367920]
[93.45810699 189.33676147]
[93.15410614 174.33984375]
[79.40289307 165.42367554]
[73.59778595 149.92022705]
[78.20237732 133.84626770]
[91.59878540 123.56602478]
[90.99089813 108.57834625]
[85.49730682 94.62053680]
[75.72672272 83.23916626]
[65.95613861 71.85779572]
[56.18554688 60.47642136]
[46.30012512 49.19464874]
[36.30087662 38.01363373]
[26.30163193 26.83262062]
[10.55025101 34.79779816]
[-6.77721500 38.09463120]
[-24.32829285 36.47280502]
[-40.73499298 30.06565475]
[-54.72043610 19.37922478]
[-65.19823456 5.25231647]
[-71.35686493 -11.20935726]
[-72.72254944 -28.71970749]
[-69.19565582 -45.91275406]
[-61.05796432 -61.44917297]
[-72.13706970 -71.56121826]
[-83.21617889 -81.67325592]
[-94.29528809 -91.78529358]
[-109.86270142 -91.24374390]
[-120.95444489 -101.65661621]
[-121.37479401 -116.50110626]
[-132.45390320 -126.61314392]
[-143.53300476 -136.72518921]
[-154.61212158 -146.83723450]
[-170.63954163 -147.54518127]
[-179.96209717 -160.60157776]
[-175.42831421 -175.99067688]
[-160.51611328 -181.90727234]
[-146.66488647 -173.81266785]
[-144.50007629 -157.91633606]
[-133.42097473 -147.80429077]
[-122.34186554 -137.69226074]
[-111.26275635 -127.58021545]
[-96.44168091 -128.51365662]
[-85.06183624 -118.41644287]
[-84.18324280 -102.86440277]
[-73.10414124 -92.75236511]
[-62.02502823 -82.64031982]
[-50.94592285 -72.52828217]
[-40.67875671 -79.75742340]
[-29.17313957 -84.80177307]
[-16.88813210 -87.45748138]
[-4.31440163 -87.61605835]
[8.04536629 -85.26879883]
[19.69657135 -80.50721741]
[30.17248917 -73.51949310]
[39.05296707 -64.58304596]
[45.98126602 -54.05349350]
[50.67841721 -42.35050964]
[52.95441818 -29.94112396]
[52.71594238 -17.32104492]
[49.97015762 -4.99488688]
[44.82453918 6.54402113]
[37.48264694 16.83337402]
[47.48189163 28.01438904]
[57.48113632 39.19540405]
[64.32453156 42.10187531]
[67.56691742 50.70583344]
[77.33750916 62.08720779]
[87.10809326 73.46857452]
[96.87868500 84.84995270]
[111.43719482 88.46238708]
[125.39500427 82.96879578]
[139.35281372 77.47521210]
[153.31062317 71.98162079]
[167.26843262 66.48802948]
[173.14556885 54.96353149]
[184.93049622 50.69262695]
[196.08741760 55.46139908]
[210.15370178 50.25181961]
[224.21998596 45.04224014]
[238.12141418 39.40748596]
[251.84512329 33.35276031]
[265.56884766 27.29803467]
[277.61968994 15.37271309]
[292.41497803 23.65135574]
[288.55560303 40.16019058]
[271.62356567 41.02174759]
[257.89984131 47.07647324]
[244.17613220 53.13119888]
[242.56491089 56.32986450]
[239.29319763 58.88608170]
[234.69009399 60.01375198]
[229.42956543 59.10852051]
[215.36328125 64.31809998]
[201.29699707 69.52767944]
[190.87384033 83.61476135]
[172.76202393 80.44583893]
[158.80421448 85.93943024]
[144.84640503 91.43302155]
[130.88859558 96.92660522]
[116.93078613 102.42019653]
[113.53936005 105.78405762]
[109.70944977 107.62126923]
[105.97857666 107.97046661]
[106.58646393 122.95814514]
[118.61984253 129.74822998]
[125.65778351 141.51217651]
[125.94634247 155.10916138]
[119.51716614 166.97041321]
[108.15102386 174.03584290]
[108.45502472 189.03276062]
[108.75903320 204.02967834]
[109.06303406 219.02659607]
[109.36704254 234.02351379]
[109.67104340 249.02043152]
[109.97504425 264.01736450]
[110.27905273 279.01428223]
[110.58305359 294.01119995]
[110.88706207 309.00811768]
[111.19106293 324.00503540]
[111.49507141 339.00195312]
[126.20423126 342.30407715]
[139.69540405 349.03100586]
[151.18423462 358.79165649]
[160.00277710 371.01852417]
[165.63833618 385.00079346]
[167.76325989 399.92556763]
[166.25401306 414.92507935]
[161.19833374 429.12731934]
[152.89016724 441.70657349]
[141.81251526 451.93151855]
[128.60945129 459.20764160]
[114.04855347 463.11199951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[27 126]
[28 125]
[29 91]
[30 90]
[31 89]
[32 88]
[33 86]
[34 85]
[35 84]
[45 69]
[46 68]
[47 67]
[48 66]
[51 63]
[52 62]
[53 61]
[54 60]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[99 116]
[100 115]
[101 114]
[102 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
