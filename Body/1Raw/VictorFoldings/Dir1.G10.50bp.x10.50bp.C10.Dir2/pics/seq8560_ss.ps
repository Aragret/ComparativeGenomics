%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUAUCCCCGGGGGGGGGGAUACUAGUUAUUAUCGAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUxxxxxxxxxxACUCCCACUAAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCCCCCCCCCCCUUACCCCC\
) } def
/len { sequence length } bind def

/coor [
[89.12483978 382.30068970]
[75.27890015 376.28463745]
[63.57023621 366.75521851]
[54.86771393 354.41955566]
[49.81711197 340.19305420]
[48.79322052 325.13134766]
[51.87202072 310.35220337]
[58.82503891 296.95227051]
[69.13632202 285.92593384]
[82.04070282 278.09143066]
[96.58058929 274.03012085]
[96.58058929 259.03012085]
[96.58058929 244.03012085]
[96.58058929 229.03012085]
[96.58058929 214.03012085]
[96.58058929 199.03012085]
[96.58058929 184.03012085]
[96.58058929 169.03012085]
[96.58058929 154.03012085]
[96.58058929 139.03012085]
[76.28414917 127.78546143]
[67.13132477 108.22132111]
[70.92755127 88.58791351]
[84.39374542 76.05364990]
[79.78818512 61.77819061]
[75.18261719 47.50273132]
[70.57705688 33.22727203]
[55.97762299 28.31170464]
[47.17491913 15.88730145]
[47.37371063 0.83989394]
[56.28820038 -11.06262016]
[51.68263626 -25.33808136]
[47.07707214 -39.61354065]
[42.47150803 -53.88900375]
[37.86594391 -68.16445923]
[33.26037979 -82.43992615]
[28.65481567 -96.71538544]
[24.04924965 -110.99084473]
[19.44368553 -125.26630402]
[10.09261703 -113.53781128]
[-4.90584469 -113.32295990]
[-14.58903599 -124.77877808]
[-11.87932777 -139.53199768]
[1.24270153 -146.79920959]
[15.18546200 -141.26914978]
[12.08714008 -155.94566345]
[8.98881817 -170.62219238]
[-5.98820734 -169.46299744]
[-20.98840332 -170.26867676]
[-35.75510025 -173.02545166]
[-50.03561401 -177.68612671]
[-63.58559036 -184.17095947]
[-76.17317200 -192.36898804]
[-87.58296967 -202.13995361]
[-97.61974335 -213.31663513]
[-106.11175537 -225.70779419]
[-112.91368866 -239.10139465]
[-117.90915680 -253.26826477]
[-121.01268768 -267.96600342]
[-122.17116547 -282.94308472]
[-121.36477661 -297.94323730]
[-118.60730743 -312.70980835]
[-113.94595337 -326.99008179]
[-107.46047211 -340.53976440]
[-99.26183319 -353.12695312]
[-89.49034119 -364.53628540]
[-78.31317902 -374.57250977]
[-65.92161560 -383.06393433]
[-52.52768707 -389.86523438]
[-38.36057663 -394.86004639]
[-23.66270447 -397.96286011]
[-8.68556881 -399.12063599]
[6.31455088 -398.31353760]
[21.08098412 -395.55535889]
[35.36105347 -390.89331055]
[48.91041565 -384.40719604]
[61.49721527 -376.20794678]
[72.90608215 -366.43591309]
[82.94179535 -355.25827026]
[91.43262482 -342.86630249]
[98.23328400 -329.47207642]
[103.22740173 -315.30471802]
[106.32953644 -300.60668945]
[107.48658752 -285.62951660]
[106.67876434 -270.62942505]
[103.91989899 -255.86311340]
[99.25717926 -241.58326721]
[92.77040863 -228.03422546]
[84.57057190 -215.44779968]
[74.79798889 -204.03941345]
[63.61987686 -194.00422668]
[51.22750854 -185.51399231]
[37.83293152 -178.71395874]
[23.66534424 -173.72052002]
[26.76366615 -159.04399109]
[29.86198807 -144.36746216]
[33.71914673 -129.87187195]
[38.32471085 -115.59641266]
[42.93027496 -101.32094574]
[47.53583908 -87.04548645]
[52.14140320 -72.77002716]
[56.74696732 -58.49456787]
[61.35253525 -44.21910477]
[65.95809937 -29.94364548]
[70.56365967 -15.66818428]
[84.75337219 -11.21957207]
[93.70859528 0.87455666]
[93.82658386 16.10083199]
[84.85251617 28.62170601]
[89.45807648 42.89716721]
[94.06364441 57.17262650]
[98.66920471 71.44808960]
[116.59886932 72.50708771]
[132.28422546 84.88494873]
[138.72863770 105.92752075]
[153.30133057 109.48227692]
[167.87403870 113.03704071]
[184.69485474 110.91656494]
[191.38893127 126.49301147]
[178.27432251 137.23747253]
[164.31927490 127.60974884]
[149.74658203 124.05498505]
[135.17387390 120.50022125]
[129.27555847 125.13269806]
[140.36006165 135.23881531]
[151.50569153 145.27748108]
[146.72851562 159.49642944]
[131.78259277 160.76904297]
[124.67029572 147.56138611]
[117.47891235 134.39764404]
[111.58058929 139.03012085]
[111.58058929 154.03012085]
[111.58058929 169.03012085]
[111.58058929 184.03012085]
[111.58058929 199.03012085]
[111.58058929 214.03012085]
[111.58058929 229.03012085]
[111.58058929 244.03012085]
[111.58058929 259.03012085]
[111.58058929 274.03012085]
[126.12048340 278.09143066]
[139.02485657 285.92593384]
[149.33615112 296.95227051]
[156.28916931 310.35220337]
[159.36796570 325.13134766]
[158.34407043 340.19305420]
[153.29347229 354.41955566]
[144.59094238 366.75521851]
[132.88229370 376.28463745]
[119.03634644 382.30068970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 112]
[25 111]
[26 110]
[27 109]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[45 96]
[46 95]
[47 94]
[115 123]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
