%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAACACCCACUACCUGGGGGGGGGGAAAAAAUCCCAAACAUAUAACUGAACUCCUCACACCCAAUUGGACCAAUCxxxxxxxxxxGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCCCCCCCCCCCUCAACACCCACUCCCU\
) } def
/len { sequence length } bind def

/coor [
[85.03088379 639.55328369]
[70.47925568 635.76409912]
[56.77738571 629.57000732]
[44.31951141 621.14923096]
[33.46406937 610.74407959]
[24.52338600 598.65386963]
[17.75470734 585.22656250]
[13.35278130 570.84838867]
[11.44425964 555.93316650]
[12.08405399 540.90985107]
[15.25375652 526.21087646]
[20.86216927 512.25903320]
[28.74792480 499.45578003]
[38.68413544 488.16952515]
[50.38491821 478.72494507]
[63.51361847 471.39382935]
[77.69249725 466.38708496]
[92.51358795 463.84878540]
[92.51358795 448.84878540]
[92.51358795 433.84878540]
[92.51358795 418.84878540]
[92.51358795 403.84878540]
[92.51358795 388.84878540]
[92.51358795 373.84878540]
[92.51358795 358.84878540]
[92.51358795 343.84878540]
[92.51358795 328.84878540]
[77.78378296 326.11511230]
[63.80340958 320.71984863]
[51.04912949 312.84536743]
[39.95608139 302.75857544]
[30.90305328 290.80194092]
[24.19952583 277.38177490]
[20.07511330 262.95446777]
[18.67168999 248.01098633]
[20.03851318 233.06010437]
[24.13048935 218.61112976]
[30.80966949 205.15657043]
[39.84989548 193.15528870]
[50.94445419 183.01689148]
[63.71649170 175.08773804]
[77.73179626 169.63912964]
[92.51358795 166.85797119]
[92.51358795 151.85797119]
[92.51358795 136.85797119]
[92.51358795 121.85797882]
[92.51358795 106.85797882]
[89.35253906 99.40017700]
[92.65911102 91.57307434]
[92.94468689 76.57579803]
[93.23027039 61.57851410]
[93.51585388 46.58123398]
[93.80143738 31.58395004]
[92.09156799 16.68172455]
[88.41657257 2.13887763]
[84.74156952 -12.40396976]
[81.06657410 -26.94681740]
[66.08972168 -25.64685440]
[51.09828949 -26.76631927]
[36.48060226 -30.27621651]
[22.61528969 -36.08562851]
[9.86149693 -44.04407883]
[-1.45042109 -53.94542694]
[-11.02745914 -65.53320312]
[-18.62154961 -78.50724792]
[-24.03598595 -92.53151703]
[-27.13052177 -107.24273682]
[-27.82500076 -122.25985718]
[-26.10143471 -137.19389343]
[-22.00446892 -151.65802002]
[-15.64022350 -165.27758789]
[-7.17354774 -177.69981384]
[3.17625070 -188.60292053]
[15.14108753 -197.70451355]
[28.41104317 -204.76881409]
[42.64239502 -209.61285400]
[57.46651840 -212.11117554]
[72.49942780 -212.19903564]
[87.35174561 -209.87417603]
[101.63874817 -205.19682312]
[114.99037170 -198.28811646]
[127.06078339 -189.32701111]
[137.53732300 -178.54562378]
[146.14862061 -166.22322083]
[152.67164612 -152.67897034]
[156.93739319 -138.26371765]
[158.83541870 -123.35085297]
[158.31652832 -108.32664490]
[155.39416504 -93.58025360]
[150.14402771 -79.49365234]
[142.70211792 -66.43172455]
[133.26118469 -54.73279190]
[122.06577301 -44.69989395]
[109.40588379 -36.59290314]
[95.60942078 -30.62181282]
[99.28442383 -16.07896614]
[102.95941925 -1.53611827]
[106.63441467 13.00672913]
[111.41247559 -1.21192527]
[121.19404602 -12.58385754]
[134.53845215 -19.43416214]
[149.48028564 -20.75389671]
[163.81884766 -16.34868431]
[175.44227600 -6.86734629]
[182.63864136 6.29366875]
[184.34803772 21.19594955]
[180.31867981 35.64462662]
[171.14402771 47.51163864]
[158.17538452 55.04916000]
[143.32281494 57.14703751]
[128.77386475 53.49628067]
[116.67136383 44.63459396]
[108.79871368 31.86953354]
[108.51313782 46.86681366]
[108.22755432 61.86409378]
[107.94197083 76.86137390]
[107.65638733 91.85865784]
[107.51358795 106.85797882]
[107.51358795 121.85797882]
[107.51358795 136.85797119]
[107.51358795 151.85797119]
[107.51358795 166.85797119]
[122.29538727 169.63912964]
[136.31069946 175.08773804]
[149.08273315 183.01689148]
[160.17729187 193.15528870]
[169.21751404 205.15657043]
[175.89669800 218.61112976]
[179.98867798 233.06010437]
[181.35549927 248.01098633]
[179.95207214 262.95446777]
[175.82765198 277.38177490]
[169.12413025 290.80194092]
[160.07110596 302.75857544]
[148.97805786 312.84536743]
[136.22377014 320.71984863]
[122.24340057 326.11511230]
[107.51358795 328.84878540]
[107.51358795 343.84878540]
[107.51358795 358.84878540]
[107.51358795 373.84878540]
[107.51358795 388.84878540]
[107.51358795 403.84878540]
[107.51358795 418.84878540]
[107.51358795 433.84878540]
[107.51358795 448.84878540]
[107.51358795 463.84878540]
[122.33468628 466.38708496]
[136.51356506 471.39382935]
[149.64225769 478.72494507]
[161.34304810 488.16952515]
[171.27925110 499.45578003]
[179.16500854 512.25903320]
[184.77342224 526.21087646]
[187.94313049 540.90985107]
[188.58293152 555.93316650]
[186.67440796 570.84838867]
[182.27247620 585.22656250]
[175.50379944 598.65386963]
[166.56311035 610.74407959]
[155.70767212 621.14923096]
[143.24980164 629.57000732]
[129.54792786 635.76409912]
[114.99629974 639.55328369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
[54 98]
[55 97]
[56 96]
[57 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
