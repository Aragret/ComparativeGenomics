%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAACACAAGGGGGGGGGGAGCACCCAACUUACACUUAGGAGAUUUCAACUUAACUUGACCGCUCUGAGxxxxxxxxxxUCAUUCUACUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCCCCCCCCCCCUUAUCACAA\
) } def
/len { sequence length } bind def

/coor [
[79.02653503 376.57742310]
[66.46831512 368.22628784]
[56.38208771 357.01382446]
[49.40189362 343.64492798]
[45.96651077 328.95993042]
[46.29188919 313.88195801]
[50.35757065 299.35885620]
[57.90799332 286.30349731]
[68.46852112 275.53662109]
[81.37531281 267.73498535]
[95.81704712 263.38903809]
[95.19306946 248.40200806]
[94.56909180 233.41499329]
[93.94511414 218.42797852]
[93.32113647 203.44096375]
[92.69715881 188.45394897]
[92.07318115 173.46693420]
[91.44920349 158.47991943]
[90.82522583 143.49290466]
[90.20124817 128.50588989]
[77.67528534 120.25359344]
[63.65857315 125.59510803]
[62.86677933 140.80342102]
[55.95187759 154.37191772]
[44.11191177 163.94976807]
[29.39822769 167.87753296]
[14.36006260 165.47473145]
[1.60286772 157.15765381]
[-6.66309547 144.36727905]
[-9.00569820 129.31961060]
[-5.01907158 114.62176514]
[4.60607815 102.82022858]
[18.20213509 95.95967865]
[33.41350174 95.22875214]
[47.60471344 100.75408936]
[58.31705856 111.57839203]
[72.33377075 106.23688507]
[75.94492340 90.90614319]
[86.47779846 81.30504608]
[99.12110901 79.59007263]
[104.02265930 65.41351318]
[108.92420959 51.23695374]
[113.82575989 37.06039810]
[118.72731018 22.88383865]
[114.61236572 17.05256271]
[112.64112854 10.50264931]
[112.83986664 3.96218419]
[115.00359344 -1.89828134]
[118.73484039 -6.53440619]
[123.50125122 -9.57837963]
[125.98636627 -24.37108612]
[128.47148132 -39.16379547]
[130.95660400 -53.95650101]
[133.44172668 -68.74920654]
[119.03830719 -73.00349426]
[105.25272369 -78.96294403]
[92.28600311 -86.54064941]
[80.32724762 -95.62610626]
[69.55084229 -106.08681488]
[60.11394119 -117.77023315]
[52.15416718 -130.50598145]
[45.78759003 -144.10833740]
[41.10705566 -158.37893677]
[38.18082047 -173.10966492]
[37.05155945 -188.08572388]
[37.73573685 -203.08869934]
[40.22337723 -217.89981079]
[44.47820282 -232.30305481]
[50.43816757 -246.08842468]
[58.01635742 -259.05487061]
[67.10225677 -271.01327515]
[77.56336975 -281.78927612]
[89.24713898 -291.22573853]
[101.98319244 -299.18505859]
[115.58578491 -305.55111694]
[129.85655212 -310.23110962]
[144.58740234 -313.15679932]
[159.56349182 -314.28552246]
[174.56643677 -313.60076904]
[189.37745667 -311.11257935]
[203.78056335 -306.85720825]
[217.56568909 -300.89672852]
[230.53184509 -293.31805420]
[242.48992920 -284.23171997]
[253.26554871 -273.77020264]
[262.70156860 -262.08605957]
[270.66040039 -249.34971619]
[277.02597046 -235.74688721]
[281.70541382 -221.47595215]
[284.63055420 -206.74499512]
[285.75869751 -191.76885986]
[285.07339478 -176.76593018]
[282.58465576 -161.95500183]
[278.32873535 -147.55206299]
[272.36776733 -133.76715088]
[264.78860474 -120.80128479]
[255.70179749 -108.84354401]
[245.23988342 -98.06831360]
[233.55540466 -88.63272858]
[220.81875610 -80.67437744]
[207.21569824 -74.30932617]
[192.94456482 -69.63039398]
[178.21350098 -66.70581055]
[163.23733521 -65.57823181]
[148.23443604 -66.26409149]
[145.74931335 -51.47138214]
[143.26419067 -36.67867661]
[140.77906799 -21.88596916]
[138.29396057 -7.09326124]
[147.31149292 4.89357138]
[162.21339417 6.60626125]
[171.90155029 -5.39969683]
[186.54985046 -10.24024296]
[201.48406982 -6.37077713]
[211.93873596 4.97396898]
[214.57783508 20.17392731]
[208.55921936 34.37884903]
[195.80340576 43.05599213]
[180.38073730 43.43651199]
[167.21252441 35.39898682]
[160.50070190 21.50816345]
[145.59880066 19.79547310]
[132.90386963 27.78539085]
[128.00231934 41.96194839]
[123.10076141 56.13850784]
[118.19921112 70.31506348]
[113.29766083 84.49162292]
[123.55956268 106.32828522]
[105.18826294 127.88190460]
[105.81224060 142.86892700]
[106.43621826 157.85594177]
[107.06019592 172.84295654]
[107.68417358 187.82997131]
[108.30815125 202.81698608]
[108.93212891 217.80400085]
[109.55610657 232.79101562]
[110.18008423 247.77803040]
[110.80406189 262.76504517]
[125.55706787 265.89550781]
[139.06770325 272.59725952]
[150.48667908 282.44903564]
[159.09619141 294.83157349]
[164.35504150 308.96646118]
[165.93264771 323.96520996]
[163.72984314 338.88494873]
[157.88510132 352.78781128]
[148.76580811 364.79986572]
[136.94523621 374.16601562]
[123.16643524 380.29751587]
[108.29553223 382.80889893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 37]
[22 36]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[110 122]
[111 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
