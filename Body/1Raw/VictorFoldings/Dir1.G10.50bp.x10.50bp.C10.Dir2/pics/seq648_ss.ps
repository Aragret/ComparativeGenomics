%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAUCUCAUGGGGGGGGGGCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCxxxxxxxxxxAUCCUCCCUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCCCCCCCCCCCUACUCUCAU\
) } def
/len { sequence length } bind def

/coor [
[38.43541336 248.77819824]
[28.18547440 244.11045837]
[18.28691673 238.73760986]
[8.78817177 232.68591309]
[-0.26428267 225.98501587]
[-8.82615471 218.66767883]
[-16.85555267 210.76971436]
[-24.31318665 202.32977295]
[-31.16257095 193.38912964]
[-43.77370071 201.51068115]
[-56.38482666 209.63221741]
[-68.99595642 217.75376892]
[-81.60708618 225.87530518]
[-89.02021027 239.85229492]
[-103.90982056 240.23822021]
[-116.52094269 248.35975647]
[-129.13208008 256.48129272]
[-141.74319458 264.60284424]
[-154.35432434 272.72439575]
[-154.23690796 288.15130615]
[-162.49786377 301.18051147]
[-176.50114441 307.65444946]
[-191.77835083 305.50726318]
[-203.45460510 295.42416382]
[-207.80403137 280.62261963]
[-203.43875122 265.82574463]
[-191.75170898 255.75514221]
[-176.47221375 253.62434387]
[-162.47587585 260.11325073]
[-149.86474609 251.99171448]
[-137.25361633 243.87017822]
[-124.64248657 235.74864197]
[-112.03135681 227.62709045]
[-105.52026367 214.23101807]
[-89.72862244 213.26417542]
[-77.11750031 205.14263916]
[-64.50637054 197.02108765]
[-51.89524078 188.89955139]
[-39.28411484 180.77799988]
[-50.99634171 155.90397644]
[-58.30600739 129.39997864]
[-60.99998093 102.03876495]
[-58.99971771 74.61810303]
[-52.36353683 47.93750381]
[-41.28492737 22.77487373]
[-26.08690643 -0.13612041]
[-37.38591003 -10.00184345]
[-48.68491745 -19.86756706]
[-59.98392105 -29.73328972]
[-74.23219299 -24.14353371]
[-89.44482422 -25.82707977]
[-102.12607574 -34.39706039]
[-109.36187744 -47.88415909]
[-109.48949432 -63.18913269]
[-102.47960663 -76.79502106]
[-89.94303894 -85.57527924]
[-74.76059723 -87.51227570]
[-60.42108917 -82.16089630]
[-50.21963882 -70.75086212]
[-46.50046158 -55.90409851]
[-50.11819839 -41.03229523]
[-38.81919479 -31.16657066]
[-27.52018738 -21.30084801]
[-16.22118378 -11.43512535]
[-8.23563099 -19.20653915]
[0.26829666 -26.40703201]
[9.24987125 -33.00212479]
[18.66607857 -38.96022415]
[28.47181892 -44.25279999]
[38.62013245 -48.85449982]
[49.06241226 -52.74328995]
[59.74864960 -55.90054321]
[70.62766266 -58.31113815]
[81.64735413 -59.96353149]
[92.75493622 -60.84980392]
[103.89721680 -60.96571732]
[115.02083588 -60.31071472]
[126.07251740 -58.88793182]
[136.99932861 -56.70418167]
[147.74893188 -53.76992798]
[158.26985168 -50.09921646]
[168.51170349 -45.70963287]
[178.42543030 -40.62220001]
[187.96354675 -34.86128235]
[197.08038330 -28.45446968]
[205.73226929 -21.43244553]
[213.87776184 -13.82884407]
[224.96907043 -23.92749405]
[236.06039429 -34.02614212]
[241.05545044 -49.03813934]
[255.67533875 -51.88556671]
[266.76666260 -61.98421860]
[277.85797119 -72.08287048]
[282.32073975 -87.86309814]
[298.28247070 -91.62548828]
[309.32308960 -79.49961090]
[304.08496094 -63.95953369]
[287.95663452 -60.99155045]
[276.86529541 -50.89290237]
[265.77398682 -40.79425430]
[261.57226562 -26.50457954]
[246.15904236 -22.93482780]
[235.06773376 -12.83617878]
[223.97640991 -2.73752904]
[232.16407776 8.03366184]
[239.41853333 19.45422363]
[245.68856812 31.44351387]
[250.92990112 43.91688156]
[255.10551453 56.78624725]
[258.18594360 69.96074677]
[260.14944458 83.34734344]
[260.98211670 96.85153198]
[260.67810059 110.37795258]
[259.23953247 123.83109283]
[256.67660522 137.11596680]
[253.00737000 150.13876343]
[248.25776672 162.80752563]
[261.78195190 169.29568481]
[275.30615234 175.78385925]
[288.83032227 182.27201843]
[302.35452271 188.76017761]
[317.90542603 184.81689453]
[330.59658813 194.63084412]
[330.69247437 210.67359924]
[318.11950684 220.63854980]
[302.52261353 216.88142395]
[295.86636353 202.28437805]
[282.34216309 195.79620361]
[268.81799316 189.30804443]
[255.29379272 182.81988525]
[241.76960754 176.33171082]
[236.08668518 186.05557251]
[229.73793030 195.35838318]
[222.75436401 204.19461060]
[215.17018127 212.52102661]
[207.02247620 220.29689026]
[198.35112000 227.48414612]
[189.19854736 234.04763794]
[179.60954285 239.95524597]
[169.63101196 245.17807007]
[159.31178284 249.69056702]
[148.70233154 253.47062683]
[137.85461426 256.49978638]
[126.82165527 258.76318359]
[115.65747070 260.24978638]
[104.41667175 260.95230103]
[93.15426636 260.86730957]
[81.92535400 259.99517822]
[70.78488159 258.34024048]
[59.78735352 255.91053772]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[46 64]
[47 63]
[48 62]
[49 61]
[87 104]
[88 103]
[89 102]
[91 100]
[92 99]
[93 98]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
