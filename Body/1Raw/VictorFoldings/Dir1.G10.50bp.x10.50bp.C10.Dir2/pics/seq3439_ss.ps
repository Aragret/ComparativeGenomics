%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAAACUCUGGGGGGGGGGUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUCxxxxxxxxxxUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACCCCCCCCCCCAUAAAACCCU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 397.87014771]
[71.01555634 392.31713867]
[58.81560135 383.45080566]
[49.20452881 371.82849121]
[42.78650284 358.18078613]
[39.96496582 343.36560059]
[40.91728210 328.31420898]
[45.58358765 313.97280884]
[53.67055511 301.24285889]
[64.66983032 290.92456055]
[77.88998413 283.66659546]
[92.50000000 279.92517090]
[92.50000000 264.92517090]
[92.50000000 249.92515564]
[92.50000000 234.92515564]
[92.50000000 219.92515564]
[92.50000000 204.92515564]
[92.50000000 189.92515564]
[92.50000000 174.92515564]
[92.50000000 159.92515564]
[92.50000000 144.92515564]
[92.50000000 129.92515564]
[80.34497070 123.77908325]
[72.02111816 112.99797058]
[69.15093231 99.68327332]
[72.29388428 86.43031311]
[80.83734131 75.82237244]
[93.11599731 69.92716217]
[93.42398071 54.93032074]
[91.58065033 40.04401398]
[87.62404633 25.57524681]
[83.66743469 11.10647964]
[79.71082306 -3.36228800]
[75.75421143 -17.83105469]
[71.79759979 -32.29982376]
[67.84098816 -46.76858902]
[53.06211472 -44.14179230]
[38.10560226 -42.86980820]
[23.09538841 -42.96317291]
[8.15585518 -44.42111969]
[-6.58920050 -47.23156357]
[-21.01759338 -51.37121582]
[-35.00976181 -56.80577469]
[-48.44976425 -63.49020386]
[-61.22622681 -71.36911774]
[-73.23327637 -80.37722015]
[-84.37142181 -90.43987274]
[-94.54836273 -101.47368622]
[-103.67977142 -113.38723755]
[-111.68997955 -126.08179474]
[-118.51260376 -139.45217896]
[-124.09111786 -153.38757324]
[-128.37928772 -167.77252197]
[-131.34159851 -182.48782349]
[-132.95347595 -197.41152954]
[-133.20156860 -212.41999817]
[-132.08384705 -227.38882446]
[-129.60954285 -242.19398499]
[-125.79916382 -256.71282959]
[-120.68430328 -270.82498169]
[-114.30732727 -284.41357422]
[-106.72108459 -297.36593628]
[-97.98844147 -309.57479858]
[-88.18176270 -320.93896484]
[-77.38230133 -331.36425781]
[-65.67955017 -340.76431274]
[-53.17048645 -349.06121826]
[-39.95876312 -356.18621826]
[-26.15386581 -362.08029175]
[-11.87018299 -366.69458008]
[2.77392364 -369.99084473]
[17.65710449 -371.94177246]
[32.65603256 -372.53121948]
[47.64641571 -371.75427246]
[62.50403976 -369.61740112]
[77.10578156 -366.13827515]
[91.33065796 -361.34576416]
[105.06077576 -355.27954102]
[118.18237305 -347.98989868]
[130.58671570 -339.53723145]
[142.17102051 -329.99160767]
[152.83927917 -319.43206787]
[162.50309753 -307.94619751]
[171.08241272 -295.62908936]
[178.50610352 -282.58285522]
[184.71267700 -268.91561890]
[189.65068054 -254.74058533]
[193.27920532 -240.17526245]
[195.56820679 -225.34030151]
[196.49868774 -210.35867310]
[196.06294250 -195.35449219]
[194.26458740 -180.45210266]
[191.11851501 -165.77499390]
[186.65081787 -151.44477844]
[180.89848328 -137.58023071]
[173.90921021 -124.29619598]
[165.74090576 -111.70278931]
[156.46124268 -99.90435028]
[146.14714050 -88.99864197]
[134.88404846 -79.07604980]
[122.76529694 -70.21878052]
[109.89131927 -62.50023651]
[96.36878967 -55.98437881]
[82.30976105 -50.72520065]
[86.26637268 -36.25643158]
[90.22297668 -21.78766632]
[94.17958832 -7.31889820]
[98.13619995 7.14986944]
[102.09281158 21.61863708]
[106.04942322 36.08740616]
[110.75000763 21.84294891]
[120.46374512 10.41302109]
[133.76365662 3.47671723]
[148.69593811 2.05300593]
[163.06698608 6.35103512]
[174.76564026 15.73940945]
[182.07331848 28.83894157]
[183.91650391 43.72526550]
[180.02442932 58.21152878]
[170.96885681 70.16963959]
[158.08007812 77.84291840]
[143.25149536 80.10413361]
[128.66148376 76.62109375]
[116.45336151 67.90547943]
[108.42081451 55.23830032]
[108.11283875 70.23513794]
[121.96012115 78.33163452]
[129.87069702 92.28596497]
[129.70602417 108.32570648]
[121.51060486 122.11467743]
[107.50000000 129.92515564]
[107.50000000 144.92515564]
[107.50000000 159.92515564]
[107.50000000 174.92515564]
[107.50000000 189.92515564]
[107.50000000 204.92515564]
[107.50000000 219.92515564]
[107.50000000 234.92515564]
[107.50000000 249.92515564]
[107.50000000 264.92517090]
[107.50000000 279.92517090]
[122.11001587 283.66659546]
[135.33016968 290.92456055]
[146.32945251 301.24285889]
[154.41641235 313.97280884]
[159.08271790 328.31420898]
[160.03503418 343.36560059]
[157.21350098 358.18078613]
[150.79547119 371.82849121]
[141.18440247 383.45080566]
[128.98443604 392.31713867]
[114.96250153 397.87014771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[28 126]
[29 125]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
