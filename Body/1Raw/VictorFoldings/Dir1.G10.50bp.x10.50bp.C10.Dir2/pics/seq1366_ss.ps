%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACUAUGGGGGGGGGGGCUUAGCCCUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACAxxxxxxxxxxUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCCCCCCCCCCCAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[79.18392944 148.21990967]
[66.44388580 140.40367126]
[56.42148590 129.31521606]
[49.92840958 115.85260010]
[47.49051666 101.10610962]
[49.30525208 86.27003479]
[55.22564316 72.54592896]
[64.77220917 61.04525757]
[77.17179108 52.69944763]
[91.42018127 48.18440247]
[91.10813141 33.18764877]
[90.79607391 18.19089699]
[90.48401642 3.19414306]
[90.17195892 -11.80261040]
[89.85990143 -26.79936409]
[89.54784393 -41.79611969]
[89.23579407 -56.79287338]
[88.92373657 -71.78962708]
[88.61167908 -86.78637695]
[88.29962158 -101.78313446]
[73.30519104 -102.32005310]
[58.36515427 -103.70442200]
[43.52736664 -105.93180847]
[28.83935928 -108.99507904]
[14.34818172 -112.88442230]
[0.10025475 -117.58737946]
[-13.85878181 -123.08888245]
[-27.48421288 -129.37130737]
[-40.73239136 -136.41452026]
[-53.56087494 -144.19598389]
[-65.92858124 -152.69076538]
[-77.79588318 -161.87162781]
[-89.12476349 -171.70918274]
[-99.87893677 -182.17192078]
[-110.02396393 -193.22633362]
[-119.52732849 -204.83697510]
[-128.35859680 -216.96669006]
[-136.48948669 -229.57659912]
[-143.89393616 -242.62632751]
[-150.54824829 -256.07406616]
[-156.43109131 -269.87670898]
[-161.52362061 -283.99008179]
[-165.80952454 -298.36895752]
[-169.27507019 -312.96728516]
[-171.90917969 -327.73831177]
[-173.70338440 -342.63467407]
[-174.65194702 -357.60870361]
[-174.75184631 -372.61242676]
[-174.00273132 -387.59774780]
[-172.40702820 -402.51669312]
[-169.96984863 -417.32147217]
[-166.69897461 -431.96463013]
[-162.60490417 -446.39932251]
[-157.70074463 -460.57925415]
[-152.00221252 -474.45901489]
[-145.52755737 -487.99414062]
[-138.29751587 -501.14129639]
[-130.33525085 -513.85833740]
[-121.66626740 -526.10455322]
[-112.31833649 -537.84075928]
[-102.32140350 -549.02923584]
[-91.70749664 -559.63421631]
[-80.51060486 -569.62176514]
[-68.76659393 -578.95983887]
[-56.51309967 -587.61853027]
[-43.78936005 -595.57012939]
[-30.63613701 -602.78912354]
[-17.09556389 -609.25244141]
[-3.21101785 -614.93927002]
[10.97302628 -619.83154297]
[25.41113281 -623.91351318]
[40.05704880 -627.17205811]
[54.86386490 -629.59680176]
[69.78414917 -631.17999268]
[84.77009583 -631.91650391]
[99.77371216 -631.80401611]
[114.74694061 -630.84289551]
[129.64179993 -629.03613281]
[144.41059875 -626.38964844]
[159.00601196 -622.91186523]
[173.38128662 -618.61389160]
[187.49037170 -613.50946045]
[201.28808594 -607.61505127]
[214.73022461 -600.94946289]
[227.77372742 -593.53405762]
[240.37680054 -585.39257812]
[252.49909973 -576.55114746]
[264.10177612 -567.03802490]
[275.14764404 -556.88372803]
[285.60134888 -546.12072754]
[295.42938232 -534.78363037]
[304.60028076 -522.90863037]
[313.08468628 -510.53378296]
[320.85534668 -497.69876099]
[327.88745117 -484.44467163]
[334.15844727 -470.81396484]
[339.64822388 -456.85031128]
[344.33920288 -442.59844971]
[348.21636963 -428.10400391]
[351.26730347 -413.41342163]
[353.48223877 -398.57379150]
[354.85406494 -383.63259888]
[355.37838745 -368.63769531]
[355.05352783 -353.63717651]
[353.88055420 -338.67907715]
[351.86318970 -323.81127930]
[349.00790405 -309.08142090]
[345.32382202 -294.53668213]
[340.82281494 -280.22369385]
[335.51922607 -266.18826294]
[329.43008423 -252.47537231]
[322.57489014 -239.12892151]
[314.97558594 -226.19169617]
[306.65655518 -213.70512390]
[297.64437866 -201.70919800]
[287.96798706 -190.24234009]
[277.65835571 -179.34130859]
[266.74850464 -169.04100037]
[255.27339172 -159.37440491]
[243.26977539 -150.37251282]
[230.77609253 -142.06414795]
[217.83236694 -134.47590637]
[204.48007202 -127.63212585]
[190.76196289 -121.55471802]
[176.72200012 -116.26313782]
[162.40516663 -111.77435303]
[147.85729980 -108.10273743]
[133.12501526 -105.26004028]
[118.25549316 -103.25538635]
[103.29637909 -102.09519196]
[103.60842896 -87.09843445]
[103.92048645 -72.10168457]
[104.23254395 -57.10492706]
[104.54460144 -42.10817337]
[104.85665894 -27.11142159]
[105.16871643 -12.11466694]
[105.48076630 2.88208675]
[105.79282379 17.87883949]
[106.10488129 32.87559509]
[106.41693878 47.87234879]
[120.84081268 51.79077148]
[133.57684326 59.61355591]
[143.59355164 70.70714569]
[150.07972717 84.17309570]
[152.51004028 98.92083740]
[150.68769836 113.75597382]
[144.76026917 127.47704315]
[135.20779419 138.97280884]
[122.80393219 147.31225586]
[108.55322266 151.81999207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
