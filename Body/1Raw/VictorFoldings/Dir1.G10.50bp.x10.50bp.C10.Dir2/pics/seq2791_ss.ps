%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACUUUUAAGGGGGGGGGGCCAGUGAAAUUGACCUGCCCGUGAAGAGGCGGGCAUAACACAGCAAGACGxxxxxxxxxxUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCCCCCCCCCCCUUAAUUUUAA\
) } def
/len { sequence length } bind def

/coor [
[83.92159271 397.08200073]
[70.43270874 390.35046387]
[58.94721222 380.58590698]
[50.13284302 368.35601807]
[44.50205994 354.37182617]
[42.38223267 339.44635010]
[43.89659882 324.44735718]
[48.95712280 310.24682617]
[57.26958847 297.67041016]
[68.35072327 287.44924927]
[81.55627441 280.17761230]
[96.11849976 276.27825928]
[95.81052399 261.28140259]
[95.50254059 246.28457642]
[95.19456482 231.28773499]
[94.88658905 216.29089355]
[94.57861328 201.29406738]
[94.27062988 186.29722595]
[93.96265411 171.30038452]
[93.65467834 156.30354309]
[93.34670258 141.30670166]
[93.03871918 126.30986786]
[74.72482300 110.09129333]
[76.83261108 85.71921539]
[66.72718048 74.63407898]
[56.62174606 63.54894638]
[43.75782013 62.16218948]
[35.56890869 52.66939926]
[36.05313110 40.54389954]
[26.17742729 29.25361824]
[16.30171967 17.96333885]
[6.42601395 6.67305851]
[-3.44969225 -4.61722183]
[-16.03813171 -12.77388763]
[-22.65487099 -11.65078926]
[-28.01505089 -13.76179600]
[-30.86984444 -17.66043282]
[-45.01716232 -22.64575386]
[-59.16447830 -27.63107681]
[-73.31179810 -32.61639786]
[-87.45911407 -37.60171890]
[-101.60643005 -42.58704376]
[-115.75374603 -47.57236481]
[-129.89793396 -40.52128983]
[-144.85852051 -45.61603546]
[-151.75965881 -59.83397293]
[-146.50701904 -74.73986053]
[-132.21691895 -81.49029541]
[-117.36739349 -76.08036041]
[-110.76842499 -61.71968079]
[-96.62110901 -56.73435974]
[-82.47379303 -51.74903870]
[-68.32646942 -46.76371384]
[-54.17915726 -41.77839279]
[-40.03184128 -36.79307175]
[-25.88452339 -31.80774879]
[-11.63783169 -27.11394882]
[-21.58060837 -38.34520721]
[-28.92945099 -51.42169571]
[-33.35338974 -65.75447845]
[-34.65317917 -80.69805908]
[-32.77028275 -95.57941437]
[-27.78949738 -109.72833252]
[-19.93515015 -122.50757599]
[-9.56097412 -133.34161377]
[2.86580634 -141.74252319]
[16.78552437 -147.33192444]
[31.57127380 -149.85810852]
[46.55714798 -149.20729065]
[61.06822586 -145.40878296]
[74.45096588 -138.63366699]
[86.10265350 -129.18707275]
[95.49852753 -117.49443817]
[102.21541595 -104.08238220]
[105.95082092 -89.55493164]
[106.53650665 -74.56637573]
[103.94609833 -59.79174042]
[98.29624939 -45.89644623]
[89.84142303 -33.50629044]
[78.96239471 -23.17929649]
[66.14913177 -15.38055992]
[51.97870636 -10.46131325]
[37.08930969 -8.64310741]
[22.15152168 -10.00782681]
[7.84058809 -14.49292755]
[17.71629333 -3.20264769]
[27.59200096 8.08763218]
[37.46770477 19.37791252]
[47.34341431 30.66819382]
[64.21733856 35.39208984]
[67.70687866 53.44350815]
[77.81231689 64.52864075]
[87.91774750 75.61377716]
[97.60810852 68.68077850]
[110.77894592 66.06513977]
[125.37576294 69.33771515]
[139.06639099 63.20853806]
[152.75700378 57.07936478]
[166.44763184 50.95019150]
[180.13825989 44.82101822]
[193.82888794 38.69184494]
[199.22744751 23.83818817]
[213.58306885 17.22822762]
[228.37882996 22.78353119]
[234.83663940 37.20823669]
[229.12521362 51.94442368]
[214.63304138 58.24937439]
[199.95806885 52.38246918]
[186.26744080 58.51164246]
[172.57681274 64.64081573]
[158.88618469 70.76998901]
[145.19555664 76.89916229]
[131.50492859 83.02833557]
[131.96664429 90.51411438]
[145.39422607 97.19991302]
[132.89006042 105.48566437]
[133.35176086 112.97143555]
[147.69181824 117.37173462]
[162.03189087 121.77204132]
[176.82148743 115.55533600]
[190.83345032 123.36842346]
[193.31900024 139.21775818]
[182.37144470 150.94509888]
[166.38879395 149.55422974]
[157.63157654 136.11210632]
[143.29151917 131.71179199]
[128.95146179 127.31150055]
[121.34722900 128.49659729]
[114.26261139 127.98558044]
[108.03556061 126.00189209]
[108.34353638 140.99873352]
[108.65151215 155.99557495]
[108.95949554 170.99240112]
[109.26747131 185.98924255]
[109.57544708 200.98608398]
[109.88342285 215.98292542]
[110.19140625 230.97975159]
[110.49938202 245.97659302]
[110.80735779 260.97344971]
[111.11533356 275.97027588]
[125.82537079 279.26849365]
[139.31832886 285.99185181]
[150.80975342 295.74945068]
[159.63153076 307.97399902]
[165.27078247 321.95477295]
[167.39967346 336.87896729]
[165.89439392 351.87887573]
[160.84248352 366.08245850]
[152.53764343 378.66390991]
[141.46270752 388.89178467]
[128.26156616 396.17144775]
[113.70170593 400.07962036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[24 93]
[25 92]
[26 91]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[34 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
