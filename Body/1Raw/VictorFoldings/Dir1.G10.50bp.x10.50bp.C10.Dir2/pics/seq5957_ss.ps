%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUCUUAUGGGGGGGGGGAGAAAUUUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGUAAGUxxxxxxxxxxCCCCAUUCUAUACCAACACCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUCCCCCCCCCCAUAUUCUUAU\
) } def
/len { sequence length } bind def

/coor [
[66.63626862 387.61474609]
[52.79032898 381.59869385]
[41.08166885 372.06927490]
[32.37914276 359.73361206]
[27.32854271 345.50711060]
[26.30465126 330.44540405]
[29.38344955 315.66625977]
[36.33647156 302.26632690]
[46.64775467 291.23999023]
[59.55213547 283.40548706]
[74.09202576 279.34417725]
[74.09202576 264.34417725]
[74.09202576 249.34417725]
[74.09202576 234.34417725]
[74.09202576 219.34417725]
[74.09202576 204.34417725]
[74.09202576 189.34417725]
[74.09202576 174.34417725]
[74.09202576 159.34417725]
[74.09202576 144.34417725]
[74.09202576 129.34417725]
[74.23818207 101.15365601]
[90.97277832 91.45426178]
[85.77736664 77.38274384]
[80.58194733 63.31122208]
[75.38653564 49.23970413]
[70.19111633 35.16818619]
[64.41484833 21.32496643]
[58.06771469 7.73401642]
[51.72058487 -5.85693455]
[45.37345886 -19.44788551]
[39.02632904 -33.03883743]
[24.89041710 -27.98804665]
[10.34365082 -24.28317070]
[-4.48612785 -21.95677185]
[-19.46859360 -21.02929306]
[-34.47207642 -21.50888634]
[-49.36471939 -23.39133644]
[-64.01564789 -26.66009903]
[-78.29609680 -31.28644753]
[-92.08058167 -37.22972488]
[-105.24794769 -44.43770218]
[-117.68247986 -52.84703064]
[-129.27490234 -62.38380814]
[-139.92333984 -72.96422577]
[-149.53422546 -84.49530029]
[-158.02305603 -96.87568665]
[-165.31527710 -109.99658966]
[-171.34675598 -123.74270630]
[-176.06452942 -137.99320984]
[-179.42710876 -152.62289429]
[-181.40496826 -167.50317383]
[-181.98069763 -182.50326538]
[-181.14924622 -197.49137878]
[-178.91793823 -212.33575439]
[-175.30635071 -226.90596008]
[-170.34625244 -241.07395935]
[-164.08122253 -254.71520996]
[-156.56632996 -267.70983887]
[-147.86759949 -279.94366455]
[-138.06147766 -291.30917358]
[-127.23416138 -301.70648193]
[-115.48078918 -311.04415894]
[-102.90465546 -319.24023438]
[-89.61627960 -326.22262573]
[-75.73245239 -331.92996216]
[-61.37518311 -336.31210327]
[-46.67064285 -339.33053589]
[-31.74806404 -340.95877075]
[-16.73858452 -341.18243408]
[-1.77411473 -339.99957275]
[13.01383495 -337.42062378]
[27.49530602 -333.46823120]
[41.54302979 -328.17709351]
[55.03355026 -321.59378052]
[67.84831238 -313.77609253]
[79.87470245 -304.79272461]
[91.00701904 -294.72268677]
[101.14743805 -283.65441895]
[110.20683289 -271.68521118]
[118.10559845 -258.92025757]
[124.77430725 -245.47174072]
[130.15435791 -231.45783997]
[134.19848633 -217.00170898]
[136.87112427 -202.23040771]
[138.14878845 -187.27374268]
[138.02027893 -172.26313782]
[136.48669434 -157.33053589]
[133.56150818 -142.60716248]
[129.27046204 -128.22239685]
[123.65123749 -114.30268097]
[116.75321960 -100.97031403]
[108.63704681 -88.34248352]
[99.37403107 -76.53015900]
[89.04557800 -65.63715363]
[77.74246979 -55.75918961]
[65.56402588 -46.98308563]
[52.61727905 -39.38596725]
[58.96440887 -25.79501534]
[65.31153870 -12.20406437]
[71.65866852 1.38688684]
[78.00579834 14.97783756]
[80.66257477 16.04969025]
[83.03994751 18.27276421]
[84.68423462 21.54051590]
[85.19091034 25.57961655]
[84.26263428 29.97276878]
[89.45805359 44.04428864]
[94.65346527 58.11580658]
[99.84888458 72.18732452]
[105.04429626 86.25885010]
[116.24006653 96.24157715]
[130.81277466 99.79633331]
[145.38546753 103.35109711]
[159.99436951 106.75407410]
[174.63786316 110.00489807]
[190.10835266 104.56469727]
[202.37709045 115.44634247]
[198.82304382 131.45573425]
[183.10231018 136.12379456]
[171.38703918 124.64839935]
[156.74353027 121.39757538]
[149.48512268 123.02886963]
[141.83070374 117.92379761]
[127.25800323 114.36904144]
[112.68530273 110.81427765]
[106.78697968 115.44675446]
[108.91237640 130.29541016]
[94.99034119 124.71170044]
[89.09202576 129.34417725]
[89.09202576 144.34417725]
[89.09202576 159.34417725]
[89.09202576 174.34417725]
[89.09202576 189.34417725]
[89.09202576 204.34417725]
[89.09202576 219.34417725]
[89.09202576 234.34417725]
[89.09202576 249.34417725]
[89.09202576 264.34417725]
[89.09202576 279.34417725]
[103.63191223 283.40548706]
[116.53629303 291.23999023]
[126.84757233 302.26632690]
[133.80059814 315.66625977]
[136.87939453 330.44540405]
[135.85549927 345.50711060]
[130.80490112 359.73361206]
[122.10237885 372.06927490]
[110.39371490 381.59869385]
[96.54777527 387.61474609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 102]
[29 101]
[30 100]
[31 99]
[32 98]
[112 126]
[113 125]
[114 124]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
