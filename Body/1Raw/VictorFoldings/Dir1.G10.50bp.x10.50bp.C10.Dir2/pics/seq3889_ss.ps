%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCACCCUUAGGGGGGGGGGUCACAACACAAGAACACCUCUGAUUACUCCUGCCAUCAUGACCCUUGGCCxxxxxxxxxxCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCUCGCUCCCCCCCCCCUCCCCACCCUUA\
) } def
/len { sequence length } bind def

/coor [
[81.95876312 341.33532715]
[69.26328278 333.24096680]
[58.52841187 322.68368530]
[50.22343826 310.12500000]
[44.71141434 296.11389160]
[42.23330688 281.26284790]
[42.89744568 266.22116089]
[46.67480087 251.64634705]
[53.40023804 238.17555237]
[62.77975082 226.39767456]
[74.40330505 216.82759094]
[87.76277924 209.88365173]
[102.27414703 205.86943054]
[101.36263275 190.89715576]
[100.45111847 175.92488098]
[99.53960419 160.95259094]
[98.62808990 145.98031616]
[97.71657562 131.00804138]
[96.80506134 116.03575897]
[86.80581665 104.85474396]
[72.02787018 102.28329468]
[57.24992752 99.71184540]
[42.47198105 97.14039612]
[27.69403839 94.56895447]
[12.91609287 91.99750519]
[24.13596535 101.95312500]
[31.59285736 114.96829987]
[34.50724792 129.68244934]
[32.57447433 144.55741882]
[25.99658585 158.03819275]
[15.46121311 168.71554565]
[2.06969452 175.47329712]
[-12.77805901 177.60501099]
[-27.52990723 174.88784790]
[-40.64373398 167.60585022]
[-50.74865723 156.52024841]
[-56.78833771 142.78990173]
[-58.13140488 127.85015869]
[-54.63745880 113.26275635]
[-46.67174530 100.55261993]
[-35.06697845 91.04844666]
[-21.03628540 85.74375916]
[-6.04287672 85.19355011]
[-19.08363152 77.78148651]
[-32.12438583 70.36941528]
[-45.16514206 62.95735550]
[-58.37337875 70.79560089]
[-73.73135376 70.96355438]
[-87.10784912 63.41603470]
[-94.90464783 50.18329620]
[-95.02445984 34.82487106]
[-87.43505859 21.47209930]
[-74.17794037 13.71681213]
[-58.81921387 13.64514160]
[-45.49029922 21.27636528]
[-37.77660370 34.55772400]
[-37.75307846 49.91659927]
[-24.71232224 57.32866287]
[-11.67156696 64.74073029]
[1.36918843 72.15279388]
[15.48754215 77.21955872]
[30.26548767 79.79100800]
[45.04343033 82.36245728]
[59.82137680 84.93390656]
[74.59931946 87.50535583]
[89.37726593 90.07679749]
[85.12223816 83.89238739]
[81.74756622 77.05691528]
[79.32379913 69.66837311]
[79.32379913 54.66837311]
[79.32379913 39.66837311]
[65.54993439 33.09240723]
[56.00000381 21.18603897]
[52.57016373 6.31327915]
[55.94141006 -8.57287121]
[65.44437408 -20.51675606]
[79.19223785 -27.14690971]
[94.45536041 -27.14690971]
[108.20322418 -20.51675606]
[117.70619202 -8.57287121]
[121.07743835 6.31327915]
[117.64759827 21.18603897]
[108.09767151 33.09240723]
[94.32379913 39.66837311]
[94.32379913 54.66837311]
[94.32379913 69.66837311]
[100.16036224 74.37842560]
[114.15495300 68.97923279]
[111.83347321 83.79853058]
[117.67003632 88.50857544]
[132.33163452 85.34035492]
[146.99322510 82.17213440]
[146.21366882 67.15919495]
[147.85258484 52.21562958]
[151.86752319 37.72851562]
[158.15449524 24.07310867]
[166.55064392 11.60311317]
[176.83850098 0.64153123]
[188.75157166 -8.52770424]
[201.98129272 -15.66708946]
[216.18496704 -20.59169579]
[230.99468994 -23.17396355]
[246.02687073 -23.34700775]
[260.89212036 -21.10634422]
[275.20538330 -16.51001358]
[288.59594727 -9.67707062]
[300.71694946 -0.78450483]
[311.25439453 9.93734455]
[319.93539429 22.21075630]
[326.53503418 35.71781921]
[330.88241577 50.10866547]
[332.86489868 65.01054382]
[332.43115234 80.03745270]
[329.59237671 94.80016327]
[324.42214966 108.91628265]
[317.05438232 122.02017975]
[307.67990112 133.77241516]
[296.54150391 143.86859131]
[283.92776489 152.04718018]
[270.16534424 158.09635925]
[255.61077881 161.85940552]
[240.64103699 163.23887634]
[225.64387512 162.19903564]
[211.00775146 158.76681519]
[197.11178589 153.03109741]
[184.31591797 145.14048767]
[172.95158386 135.29934692]
[163.31315613 123.76258850]
[155.65026855 110.82904816]
[150.16143799 96.83373260]
[135.49984741 100.00195312]
[120.83825684 103.17017365]
[111.77734375 115.12424469]
[112.68885803 130.09652710]
[113.60037231 145.06880188]
[114.51187897 160.04107666]
[115.42339325 175.01336670]
[116.33490753 189.98564148]
[117.24642181 204.95791626]
[132.13758850 207.18211365]
[146.24075317 212.45411682]
[158.93942261 220.54347229]
[169.67845154 231.09652710]
[177.98835754 243.65196228]
[183.50590515 257.66091919]
[185.98985291 272.51095581]
[185.33161926 287.55291748]
[181.56001282 302.12921143]
[174.83987427 315.60263062]
[165.46499634 327.38421631]
[153.84519958 336.95886230]
[140.48846436 343.90805054]
[125.97867584 347.92797852]
[110.95014954 348.84292603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[43 60]
[44 59]
[45 58]
[46 57]
[69 86]
[70 85]
[71 84]
[90 132]
[91 131]
[92 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
