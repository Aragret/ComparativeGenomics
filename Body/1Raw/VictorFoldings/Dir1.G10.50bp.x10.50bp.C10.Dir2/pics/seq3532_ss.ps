%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACCGCCCGGGGGGGGGGCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUAxxxxxxxxxxAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUACCCCCCCCCCAUCAACGCCC\
) } def
/len { sequence length } bind def

/coor [
[-20.17177582 229.83026123]
[-30.31618690 219.64465332]
[-39.60012054 208.66902161]
[-47.96226883 196.97586060]
[-55.34741974 184.64236450]
[-61.70681000 171.74996948]
[-66.99845123 158.38381958]
[-71.18739319 144.63214111]
[-74.24597931 130.58576965]
[-76.15402222 116.33743286]
[-76.89891815 101.98122406]
[-91.89160919 101.51317596]
[-106.88430786 101.04513550]
[-121.88105774 100.73307800]
[-136.88024902 100.57704163]
[-151.87944031 100.42100525]
[-166.87863159 100.26496887]
[-181.87780762 100.10893250]
[-196.87699890 99.95289612]
[-218.34289551 138.06280518]
[-232.75511169 142.22068787]
[-247.16732788 146.37857056]
[-261.57955933 150.53646851]
[-262.89526367 165.65708923]
[-269.58782959 179.27964783]
[-280.75216675 189.56178284]
[-294.87832642 195.11293030]
[-310.05593872 195.18234253]
[-324.23229980 189.76063538]
[-335.49020386 179.58103943]
[-342.30709839 166.02027893]
[-343.76107788 150.91232300]
[-339.65545654 136.30039978]
[-330.54553223 124.16064453]
[-317.66329956 116.13488007]
[-302.75103760 113.30850220]
[-287.82543945 116.06377411]
[-274.90512085 124.02805328]
[-265.73742676 136.12425232]
[-251.32522583 131.96635437]
[-236.91300964 127.80847168]
[-222.50079346 123.65058899]
[-221.56698608 116.20894623]
[-219.69937134 101.32566833]
[-218.76556396 93.88402557]
[-231.70361328 86.29412079]
[-244.64167786 78.70420837]
[-259.87033081 82.93073273]
[-273.58590698 75.07842255]
[-277.65118408 59.80593109]
[-269.65429688 46.17414856]
[-254.33969116 42.27056885]
[-240.79321289 50.41111755]
[-237.05177307 65.76615143]
[-224.11370850 73.35606384]
[-211.17565918 80.94596863]
[-196.72096252 84.95371246]
[-181.72177124 85.10974884]
[-166.72259521 85.26578522]
[-151.72340393 85.42182159]
[-136.72421265 85.57785797]
[-121.72502136 85.73389435]
[-114.96009064 82.63851929]
[-106.41626740 86.05244446]
[-91.42356873 86.52048492]
[-76.43087006 86.98852539]
[-74.79196167 72.70673370]
[-71.99889374 58.60515594]
[-68.07010651 44.77691269]
[-63.03155899 31.31330872]
[-56.91650772 18.30324173]
[-49.76533508 5.83262157]
[-41.62525940 -6.01621008]
[-32.55002975 -17.16501427]
[-22.59956932 -27.54017639]
[-11.83958149 -37.07318878]
[-0.34111533 -45.70110321]
[11.81990528 -53.36695099]
[24.56318092 -60.02011490]
[37.80456543 -65.61666107]
[51.45663071 -70.11964417]
[65.42922974 -73.49931335]
[79.63009644 -75.73337555]
[93.96546936 -76.80706024]
[108.34068298 -76.71327972]
[122.66082764 -75.45266724]
[136.83134460 -73.03353119]
[150.75865173 -69.47185516]
[164.35081482 -64.79115295]
[177.51805115 -59.02233124]
[190.17344666 -52.20348358]
[202.23342896 -44.37963486]
[213.61834717 -35.60243988]
[224.25305176 -25.92986298]
[234.06730652 -15.42576885]
[242.99632263 -4.15951538]
[250.98112488 7.79450512]
[257.96899414 20.35736084]
[263.91378784 33.44609833]
[278.03857422 28.39734077]
[292.16339111 23.34858513]
[306.28820801 18.29982758]
[314.42419434 4.47285891]
[330.32693481 2.35560679]
[341.79718018 13.57224655]
[340.03594971 29.51833153]
[326.39431763 37.96139145]
[311.33694458 32.42462921]
[297.21215820 37.47338867]
[283.08734131 42.52214432]
[268.96255493 47.57089996]
[273.72024536 66.55706024]
[276.35140991 85.95259857]
[276.82385254 105.52008820]
[275.13180542 125.02001190]
[271.29595947 144.21365356]
[265.36325073 162.86608887]
[279.14562988 168.78605652]
[292.92800903 174.70600891]
[306.71038818 180.62597656]
[322.08380127 176.03919983]
[335.17224121 185.31672668]
[335.93539429 201.34161377]
[323.78784180 211.82095337]
[308.04812622 208.71588135]
[300.79043579 194.40835571]
[287.00805664 188.48838806]
[273.22567749 182.56843567]
[259.44329834 176.64846802]
[252.69366455 189.34091187]
[244.93579102 201.44343567]
[236.22090149 212.87611389]
[226.60653687 223.56349182]
[216.15620422 233.43496704]
[204.93887329 242.42536926]
[193.02864075 250.47532654]
[180.50413513 257.53170776]
[167.44805908 263.54788208]
[153.94662476 268.48416138]
[140.08897400 272.30795288]
[125.96661377 274.99395752]
[111.67279816 276.52450562]
[97.30191040 276.88943481]
[82.94883728 276.08636475]
[68.70835114 274.12060547]
[54.67448425 271.00512695]
[40.93990326 266.76046753]
[27.59529877 261.41470337]
[14.72878170 255.00312805]
[2.42531347 247.56805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 66]
[12 65]
[13 64]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 42]
[21 41]
[22 40]
[23 39]
[45 56]
[46 55]
[47 54]
[99 111]
[100 110]
[101 109]
[102 108]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
