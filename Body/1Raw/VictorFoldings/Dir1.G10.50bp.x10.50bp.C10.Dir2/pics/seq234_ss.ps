%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACAUCAUAACGGGGGGGGGGAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAxxxxxxxxxxCACCCUCAUGUUCAUACACCUAUCCCCCAUUCUCCUCCUAUCCCUCAACCCCCCCCCCCCCCGACAUCAUUAC\
) } def
/len { sequence length } bind def

/coor [
[0.68637770 228.92794800]
[-6.02688742 223.46623230]
[-12.44032097 217.65536499]
[-18.53578568 211.51177979]
[-24.29604530 205.05285645]
[-29.70480919 198.29685974]
[-34.74678421 191.26289368]
[-39.40771103 183.97084045]
[-43.67440414 176.44132996]
[-47.53480911 168.69564819]
[-50.97799683 160.75570679]
[-53.99423981 152.64395142]
[-56.57500458 144.38331604]
[-71.17960358 147.80468750]
[-85.78419495 151.22605896]
[-100.38879395 154.64741516]
[-114.99339294 158.06878662]
[-129.59799194 161.49015808]
[-144.16761780 165.05746460]
[-158.70083618 168.77037048]
[-173.23405457 172.48327637]
[-187.76727295 176.19616699]
[-202.30049133 179.90907288]
[-203.02616882 195.00758362]
[-208.17153931 209.22082520]
[-217.27906799 221.28500366]
[-229.53894043 230.12734985]
[-243.86099243 234.96162415]
[-258.97174072 235.35797119]
[-273.52749634 231.28112793]
[-286.23403931 223.09361267]
[-295.96148682 211.52346802]
[-301.84484863 197.59948730]
[-303.36102295 182.55978394]
[-300.37518311 167.74168396]
[-293.15283203 154.46279907]
[-282.33615112 143.90386963]
[-268.88696289 137.00381470]
[-254.00115967 134.37615967]
[-239.00239563 136.25454712]
[-225.22433472 142.47198486]
[-213.89212036 152.47558594]
[-206.01338196 165.37585449]
[-191.48017883 161.66296387]
[-176.94696045 157.95005798]
[-162.41374207 154.23715210]
[-147.88052368 150.52424622]
[-142.14617920 145.79507446]
[-133.01934814 146.88555908]
[-118.41475677 143.46418762]
[-103.81015778 140.04281616]
[-89.20556641 136.62145996]
[-74.60096741 133.20008850]
[-59.99637222 129.77871704]
[-62.18266296 86.49462891]
[-52.86736679 44.16830063]
[-32.71110535 5.80141401]
[-3.14330482 -25.88514519]
[-12.10514164 -37.91367340]
[-21.06697845 -49.94219971]
[-36.33327484 -55.93154526]
[-38.51161194 -72.18537140]
[-25.36110687 -81.98313904]
[-10.40986824 -75.24574280]
[-9.03845024 -58.90403748]
[-0.07661384 -46.87550735]
[8.88522339 -34.84698105]
[15.84162045 -39.29457092]
[23.01463699 -43.38362885]
[30.38580894 -47.10362244]
[37.93616486 -50.44497681]
[45.64627075 -53.39909744]
[53.49627686 -55.95837402]
[61.46598434 -58.11622620]
[69.53487396 -59.86709213]
[77.68218231 -61.20647049]
[85.88693237 -62.13090897]
[94.12800598 -62.63803482]
[102.38420105 -62.72653961]
[110.63425446 -62.39619446]
[118.85694122 -61.64784622]
[127.03108215 -60.48342896]
[135.13565063 -58.90593719]
[143.14978027 -56.91942978]
[151.05285645 -54.52901840]
[158.82450867 -51.74085617]
[166.44476318 -48.56212234]
[173.89398193 -45.00099945]
[181.15301514 -41.06665039]
[188.20315552 -36.76920319]
[195.02626038 -32.11972046]
[201.60478210 -27.13016891]
[211.49966431 -38.40364075]
[221.39456177 -49.67711639]
[224.06819153 -65.85684967]
[239.51023865 -71.37724304]
[251.83526611 -60.55939865]
[248.36433411 -44.53177643]
[232.66802979 -39.78222656]
[222.77314758 -28.50875473]
[212.87825012 -17.23528099]
[218.95075989 -11.06901455]
[224.68690491 -4.58865786]
[230.07043457 2.18746352]
[235.08615112 9.24018764]
[239.71984863 16.54957008]
[243.95843506 24.09494019]
[247.78993225 31.85496140]
[251.20349121 39.80768967]
[254.18946838 47.93063354]
[256.73941040 56.20082474]
[258.84609985 64.59487152]
[260.50363159 73.08905029]
[261.70724487 81.65931702]
[262.45355225 90.28145599]
[262.74050903 98.93107605]
[262.56719971 107.58372498]
[261.93420410 116.21492004]
[260.84326172 124.80026245]
[259.29748535 133.31547546]
[257.30123901 141.73648071]
[254.86013794 150.03944397]
[251.98112488 158.20091248]
[248.67233276 166.19779968]
[244.94309998 174.00747681]
[240.80400085 181.60787964]
[236.26670837 188.97749329]
[231.34407043 196.09550476]
[226.05001831 202.94175720]
[220.39950562 209.49690247]
[214.40850830 215.74240112]
[208.09397888 221.66059875]
[201.47378540 227.23475647]
[194.56661987 232.44909668]
[187.39204407 237.28889465]
[179.97032166 241.74046326]
[172.32246399 245.79119873]
[164.47007751 249.42964172]
[156.43537903 252.64553833]
[148.24108887 255.42974854]
[139.91038513 257.77444458]
[131.46681213 259.67294312]
[122.93424988 261.11993408]
[114.33683777 262.11126709]
[105.69888306 262.64419556]
[97.04481506 262.71716309]
[88.39910126 262.33001709]
[79.78619385 261.48379517]
[71.23044586 260.18090820]
[62.75605774 258.42504883]
[54.38698959 256.22119141]
[46.14691162 253.57557678]
[38.05912018 250.49563599]
[30.14649582 246.99012756]
[22.43140602 243.06895447]
[14.93567181 238.74317932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 54]
[14 53]
[15 52]
[16 51]
[17 50]
[18 49]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[58 67]
[59 66]
[60 65]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
