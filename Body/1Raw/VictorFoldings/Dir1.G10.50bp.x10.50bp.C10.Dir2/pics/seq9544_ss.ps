%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUUUACCGGGGGGGGGGAAAUGCCCCUCAUUUACAUAAAUAUUAUACUAGCAUUUACCAUCUCACUUxxxxxxxxxxGUUUAACCAAAACAUCAGAUUGUGAAUCUGACAACAGAGGCUUACGACCCCCCCCCCCCCCUUAUUUACC\
) } def
/len { sequence length } bind def

/coor [
[81.02900696 365.94583130]
[69.14472961 356.67071533]
[59.82602310 344.82061768]
[53.61465836 331.08444214]
[50.87175751 316.26083374]
[51.75678635 301.21157837]
[56.21829224 286.81161499]
[63.99689102 273.89819336]
[74.64034271 263.22201538]
[87.52985382 255.40383911]
[101.91603851 250.89817810]
[100.98040771 235.92738342]
[100.04478455 220.95658875]
[99.10915375 205.98579407]
[98.17352295 191.01499939]
[97.23789978 176.04421997]
[96.30226898 161.07342529]
[95.36663818 146.10263062]
[94.43101501 131.13183594]
[93.49538422 116.16104889]
[82.94409180 105.49942017]
[67.98384094 104.40811157]
[53.02359390 103.31680298]
[38.06334686 102.22548676]
[23.10309792 101.13417816]
[8.14284897 100.04286957]
[3.73744082 114.44911957]
[-3.76365972 127.51362610]
[-13.98420048 138.58106995]
[-26.41152382 147.09631348]
[-40.42227936 152.63223267]
[-55.31369400 154.91116333]
[-70.33882141 153.81877136]
[-84.74400330 149.40988159]
[-97.80669403 141.90560913]
[-108.87165833 131.68238831]
[-117.38388824 119.25300598]
[-122.91641998 105.24090576]
[-125.19173431 90.34893799]
[-124.09571075 75.32408142]
[-119.68332672 60.91996384]
[-112.17589569 47.85909653]
[-101.94998932 36.79660797]
[-89.51853943 28.28738785]
[-75.50510406 22.75825310]
[-60.61258698 20.48654366]
[-45.58798981 21.58620834]
[-31.18494415 26.00208855]
[-18.12589836 33.51268387]
[-7.06588840 43.74126434]
[1.44032037 56.17477417]
[6.96605921 70.18955231]
[9.23415947 85.08261871]
[24.19440842 86.17392731]
[39.15465546 87.26524353]
[54.11490631 88.35655212]
[69.07515717 89.44786072]
[84.03540039 90.53916931]
[92.71627045 84.81928253]
[102.12621307 85.03229523]
[110.63730621 72.68072510]
[112.95294189 63.77624893]
[119.45615387 60.16323853]
[128.22236633 47.99140167]
[136.98857117 35.81956482]
[131.31330872 29.24513435]
[126.82682037 21.81528282]
[123.65510559 13.74242496]
[121.88659668 5.25697660]
[121.56971741 -3.39921999]
[122.71153259 -11.97978973]
[125.27762604 -20.24083710]
[129.19313049 -27.94787979]
[134.34489441 -34.88250351]
[140.58476257 -40.84854507]
[147.73384094 -45.67766190]
[155.58764648 -49.23405075]
[163.92185974 -51.41828918]
[172.49888611 -52.17011642]
[181.07447815 -51.47007370]
[189.40478516 -49.34001923]
[196.31178284 -62.65517807]
[203.21878052 -75.97032928]
[210.12577820 -89.28548431]
[206.66964722 -104.95184326]
[216.87481689 -117.33061981]
[232.91276550 -116.92587280]
[242.48054504 -104.04810333]
[238.23857117 -88.57601929]
[223.44093323 -82.37848663]
[216.53393555 -69.06333160]
[209.62693787 -55.74817657]
[202.71994019 -42.43302155]
[209.81059265 -36.22878647]
[215.63780212 -28.82517052]
[229.29403687 -35.03057861]
[242.95027161 -41.23598480]
[256.60650635 -47.44139099]
[270.26275635 -53.64680099]
[283.91900635 -59.85220718]
[297.57525635 -66.05761719]
[309.49411011 -78.11485291]
[324.37960815 -69.99954987]
[320.70217896 -53.44923782]
[303.78063965 -52.40137100]
[290.12442017 -46.19596481]
[276.46817017 -39.99055862]
[262.81192017 -33.78515244]
[249.15568542 -27.57974434]
[235.49945068 -21.37433624]
[221.84320068 -15.16893005]
[223.03266907 8.33425522]
[213.52462769 29.91661453]
[195.30108643 44.96637726]
[172.21165466 50.24538803]
[149.16040039 44.58576965]
[140.39419556 56.75760651]
[131.62799072 68.92944336]
[122.98887634 81.19181061]
[114.47778320 93.54338837]
[127.88922882 86.82526398]
[142.60679626 89.72238159]
[152.47142029 101.02234650]
[153.35491943 115.99630737]
[144.88755798 128.37789917]
[130.61279297 132.98562622]
[116.50438690 127.89124298]
[108.46617126 115.22541809]
[109.40180206 130.19621277]
[110.33743286 145.16700745]
[111.27306366 160.13778687]
[112.20868683 175.10858154]
[113.14431763 190.07937622]
[114.07994843 205.05017090]
[115.01557159 220.02096558]
[115.95120239 234.99174500]
[116.88683319 249.96253967]
[131.72206116 252.64196777]
[145.48469543 258.79446411]
[157.37458801 268.06237793]
[166.70048523 279.90682983]
[172.92018127 293.63922119]
[175.67205811 308.46118164]
[174.79615784 323.51098633]
[170.34338379 337.91363525]
[162.57261658 350.83178711]
[151.93563843 361.51437378]
[139.05087280 369.34039307]
[124.66741943 373.85476685]
[109.62151337 374.79510498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[60 120]
[61 119]
[63 118]
[64 117]
[65 116]
[81 93]
[82 92]
[83 91]
[84 90]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
