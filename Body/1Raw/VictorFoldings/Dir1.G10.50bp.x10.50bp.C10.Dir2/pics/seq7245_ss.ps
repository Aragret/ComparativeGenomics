%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAUUCAUUUGGGGGGGGGGCUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCGCUxxxxxxxxxxAGUAUCCUUAAUCAUUUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCCCCCCCCCCCUCACUCAUUU\
) } def
/len { sequence length } bind def

/coor [
[84.65629578 432.85812378]
[71.16741180 426.12658691]
[59.68191528 416.36199951]
[50.86754608 404.13211060]
[45.23676300 390.14791870]
[43.11693573 375.22244263]
[44.63130569 360.22344971]
[49.69182968 346.02291870]
[58.00429153 333.44650269]
[69.08542633 323.22537231]
[82.29097748 315.95370483]
[96.85320282 312.05435181]
[96.54522705 297.05752563]
[96.23725128 282.06066895]
[95.92926788 267.06384277]
[95.62129211 252.06700134]
[95.31331635 237.07015991]
[95.00534058 222.07331848]
[94.69735718 207.07649231]
[94.38938141 192.07965088]
[94.08140564 177.08280945]
[93.77342987 162.08596802]
[74.61954498 157.00238037]
[58.02567291 146.16918945]
[45.66557693 130.67912292]
[38.78595352 112.09458923]
[38.08073044 92.29011536]
[43.62103271 73.26331329]
[54.84803772 56.93332291]
[70.62932587 44.94728088]
[65.21070099 30.96019554]
[59.79207611 16.97311211]
[54.37345123 2.98602962]
[48.95482635 -11.00105381]
[43.53620148 -24.98813820]
[38.11757660 -38.97521973]
[34.51995468 -41.65043640]
[32.22877502 -45.00812149]
[31.29722977 -48.54067993]
[31.60379601 -51.77722931]
[32.88036346 -54.33875275]
[28.62751770 -68.72323608]
[21.89780235 -55.31760025]
[8.64722252 -48.28751755]
[-6.22626400 -50.23158646]
[-17.22480011 -60.43120575]
[-20.28287315 -75.11616516]
[-14.27009296 -88.85831451]
[-1.40903103 -96.57796478]
[13.54633236 -95.42163086]
[25.06729507 -85.81764984]
[23.22397041 -100.70395660]
[21.38064575 -115.59027100]
[19.53732109 -130.47657776]
[17.69399834 -145.36288452]
[15.85067272 -160.24919128]
[4.41269588 -174.64375305]
[11.80382919 -190.53134155]
[7.45329380 -198.63496399]
[9.76678753 -205.70320129]
[7.92346287 -220.58950806]
[3.96685243 -235.05827332]
[-2.02144408 -248.81109619]
[-8.00974083 -262.56393433]
[-21.51175880 -271.87130737]
[-19.93279457 -288.19427490]
[-4.89715052 -294.74114990]
[8.12779236 -284.77706909]
[5.74308825 -268.55221558]
[11.73138523 -254.79939270]
[17.71968079 -241.04656982]
[20.33143806 -255.81744385]
[28.30780411 -268.52090454]
[40.47702408 -277.29074097]
[55.05139542 -280.83865356]
[69.88989258 -278.64343262]
[82.81269073 -271.02755737]
[91.92137909 -259.10983276]
[95.87785339 -244.64103699]
[94.10090637 -229.74665833]
[86.85157776 -216.61474609]
[75.19480896 -207.17442322]
[60.84302521 -202.81250000]
[45.90455627 -204.16976929]
[32.57391739 -211.04684448]
[22.80977058 -222.43283081]
[24.65309525 -207.54652405]
[26.64915085 -192.67993164]
[36.17235947 -185.15856934]
[38.05337524 -172.76368713]
[30.73698044 -162.09251404]
[32.58030701 -147.20620728]
[34.42362976 -132.31990051]
[36.26695251 -117.43359375]
[38.11027908 -102.54728699]
[39.95360184 -87.66098022]
[43.01199722 -72.97608185]
[47.26484299 -58.59159851]
[52.10466003 -44.39384460]
[57.52328491 -30.40676308]
[62.94190979 -16.41967964]
[68.36053467 -2.43259549]
[73.77915955 11.55448818]
[79.19778442 25.54157066]
[84.61640930 39.52865601]
[96.15155792 37.72137070]
[107.82145691 38.09472275]
[119.21749878 40.63565063]
[129.94064331 45.25517273]
[139.61544800 51.79154968]
[147.90313721 60.01591110]
[154.51353455 69.64028168]
[159.21517944 80.32768250]
[161.84346008 91.70389557]
[162.30632019 103.37058258]
[177.07843018 105.97531128]
[190.99197388 97.98825836]
[205.85787964 104.02021790]
[210.27229309 119.44397736]
[200.84886169 132.42776489]
[184.81643677 133.01150513]
[174.47370911 120.74742126]
[159.70159912 118.14270020]
[155.99066162 127.54058838]
[150.81158447 136.21632385]
[144.30014038 143.94241333]
[136.62710571 150.51626587]
[127.99364471 155.76553345]
[118.62615967 159.55253601]
[108.77026367 161.77799988]
[109.07823944 176.77484131]
[109.38622284 191.77166748]
[109.69419861 206.76850891]
[110.00217438 221.76535034]
[110.31015015 236.76219177]
[110.61813354 251.75901794]
[110.92610931 266.75585938]
[111.23408508 281.75268555]
[111.54206085 296.74954224]
[111.85004425 311.74636841]
[126.56007385 315.04458618]
[140.05303955 321.76794434]
[151.54444885 331.52554321]
[160.36624146 343.75009155]
[166.00549316 357.73089600]
[168.13436890 372.65505981]
[166.62908936 387.65499878]
[161.57717896 401.85858154]
[153.27233887 414.44003296]
[142.19741821 424.66790771]
[128.99626160 431.94754028]
[114.43640900 435.85574341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[41 98]
[42 97]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[58 88]
[60 87]
[61 86]
[62 71]
[63 70]
[64 69]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
