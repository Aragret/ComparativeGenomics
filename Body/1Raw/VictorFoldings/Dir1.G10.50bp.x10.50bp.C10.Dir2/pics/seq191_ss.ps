%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAUAACAGGGGGGGGGGAUUGAAUGUCUGCACAGCCACUUUCCACACAGACAUCAUAACAAAAAAUUxxxxxxxxxxUGCUUCCUAGUCCUGUAUGCCCUUUUCCUAACACUCACAACAAAACUAACCCCCCCCCCCUAAUACUAACA\
) } def
/len { sequence length } bind def

/coor [
[83.56578827 379.75637817]
[70.07691193 373.02484131]
[58.59140778 363.26028442]
[49.77703857 351.03036499]
[44.14625931 337.04617310]
[42.02642822 322.12069702]
[43.54079819 307.12170410]
[48.60132217 292.92120361]
[56.91378784 280.34475708]
[67.99491882 270.12362671]
[81.20046997 262.85198975]
[95.76269531 258.95260620]
[95.45471954 243.95578003]
[95.14674377 228.95893860]
[94.83876038 213.96209717]
[94.53078461 198.96525574]
[94.22280884 183.96841431]
[93.91483307 168.97158813]
[93.60684967 153.97474670]
[93.29887390 138.97790527]
[92.99089813 123.98107147]
[83.67691803 118.91497040]
[77.30255890 110.44248199]
[75.01577759 100.08940125]
[77.22840881 89.72022247]
[66.04011536 79.72912598]
[54.85181427 69.73802948]
[41.28991699 63.32905579]
[26.46743584 61.02817917]
[11.64495468 58.72730637]
[-3.17752743 56.42642975]
[-18.00000954 54.12555695]
[-32.82249069 51.82468033]
[-39.85892487 65.23241425]
[-50.86930084 75.62714386]
[-64.65929413 81.88131714]
[-79.73307800 83.31653595]
[-94.45555115 79.77712250]
[-107.22973633 71.64699554]
[-116.66998291 59.80805206]
[-121.75228119 45.54450226]
[-121.92534637 30.40353775]
[-117.17040253 16.02754211]
[-108.00322723 3.97591615]
[-95.41822052 -4.44407082]
[-80.78049469 -8.31908226]
[-65.67784119 -7.22878456]
[-51.74849701 -1.29144585]
[-40.50339890 8.84889603]
[-33.16233826 22.09229279]
[-30.52161598 37.00219727]
[-15.69913483 39.30307388]
[-0.87665254 41.60394669]
[13.94582939 43.90482330]
[28.76831245 46.20569611]
[43.59079361 48.50657272]
[32.17323685 38.77829361]
[22.98134995 26.92463684]
[16.40203857 13.44455242]
[12.71224308 -1.09454727]
[12.06727791 -16.08067513]
[14.49429131 -30.88302612]
[19.89112282 -44.87853241]
[28.03060913 -57.47808838]
[38.57013321 -68.15134430]
[51.06606293 -76.44903564]
[64.99241638 -82.02189636]
[79.76299286 -84.63534546]
[94.75605774 -84.17937469]
[109.34052277 -80.67318726]
[122.90248871 -74.26435089]
[134.87109375 -65.22264862]
[144.74255371 -53.92865372]
[152.10134888 -40.85776520]
[156.63774109 -26.56017113]
[158.16076660 -11.63769245]
[156.60630798 3.28154707]
[152.03982544 17.56955719]
[144.65353394 30.62491989]
[134.75830078 41.89810181]
[122.77069092 50.91458511]
[109.19525909 57.29484177]
[94.60343933 60.77031708]
[79.60944366 61.19470978]
[64.84291077 58.54973221]
[76.03121185 68.54083252]
[87.21950531 78.53192902]
[106.09403229 75.77022552]
[121.41617584 87.13273621]
[135.99992371 83.62356567]
[150.58367920 80.11440277]
[165.16741943 76.60523224]
[173.44288635 63.40847397]
[188.28286743 60.05743027]
[200.81297302 68.02814484]
[215.39671326 64.51897430]
[229.98046875 61.00980759]
[237.64810181 55.93012238]
[244.89964294 57.58157349]
[259.55236816 54.37257767]
[261.02279663 39.31624985]
[267.07580566 25.45203209]
[277.11831665 14.13819981]
[290.16653442 6.48316574]
[304.94207764 3.23689318]
[319.99740601 4.71741819]
[333.85757446 10.77969456]
[345.16467285 20.82980156]
[352.81097412 33.88313293]
[356.04733276 48.66085434]
[354.55673218 63.71519852]
[348.48516846 77.57128906]
[338.42749023 88.87165833]
[325.36901855 96.50919342]
[310.58914185 99.73566437]
[295.53579712 98.23496246]
[281.68377686 92.15412140]
[270.39016724 82.08886719]
[262.76135254 69.02529907]
[248.10864258 72.23429871]
[233.48963928 75.59355927]
[218.90588379 79.10272217]
[204.32212830 82.61189270]
[196.78950500 95.41013336]
[182.04949951 99.17668152]
[168.67658997 91.18898010]
[154.09284973 94.69815063]
[139.50909424 98.20732117]
[124.92534637 101.71648407]
[119.78234100 115.26035309]
[107.98773956 123.67308807]
[108.29571533 138.66992188]
[108.60369110 153.66676331]
[108.91166687 168.66360474]
[109.21965027 183.66044617]
[109.52762604 198.65728760]
[109.83560181 213.65411377]
[110.14357758 228.65095520]
[110.45155334 243.64779663]
[110.75953674 258.64462280]
[125.46957397 261.94287109]
[138.96252441 268.66619873]
[150.45394897 278.42382812]
[159.27572632 290.64837646]
[164.91499329 304.62915039]
[167.04386902 319.55331421]
[165.53858948 334.55325317]
[160.48667908 348.75683594]
[152.18183899 361.33828735]
[141.10690308 371.56616211]
[127.90576172 378.84579468]
[113.34590149 382.75399780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[25 87]
[26 86]
[27 85]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[89 129]
[90 128]
[91 127]
[92 126]
[95 123]
[96 122]
[97 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
