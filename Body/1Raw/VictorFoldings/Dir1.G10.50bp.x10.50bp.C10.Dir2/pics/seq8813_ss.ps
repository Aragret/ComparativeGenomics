%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCAUGACGGGGGGGGGGCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGxxxxxxxxxxGCUUUUAUAGUAAAGAUACCUCUUUACGGACUCCACUUAUGACUCCCUAACCCCCCCCCCAGCCCAUGUC\
) } def
/len { sequence length } bind def

/coor [
[248.03932190 176.84698486]
[240.36305237 166.02223206]
[233.44148254 154.69981384]
[227.30674744 142.93225098]
[221.98735046 130.77413940]
[217.50799561 118.28191376]
[213.88948059 105.51351929]
[211.14865112 92.52820587]
[199.58074951 101.91078186]
[184.86341858 96.10469818]
[170.00036621 98.12702942]
[155.13731384 100.14936829]
[140.27427673 102.17169952]
[125.41122437 104.19403076]
[110.54817963 106.21636963]
[98.37660217 147.31655884]
[85.13401794 154.36169434]
[71.89143372 161.40682983]
[58.64884949 168.45196533]
[50.09954071 181.76435852]
[35.22938538 180.91125488]
[21.98679924 187.95639038]
[8.74421406 195.00152588]
[-4.49837160 202.04666138]
[-15.64195728 214.82386780]
[-31.00467110 207.65284729]
[-28.36672974 190.90538025]
[-11.54350662 188.80407715]
[1.69907916 181.75894165]
[14.94166470 174.71380615]
[28.18424988 167.66867065]
[35.78636169 154.86018372]
[51.60371399 155.20938110]
[64.84629822 148.16424561]
[78.08888245 141.11911011]
[91.33147430 134.07397461]
[90.70803070 126.59992981]
[88.83772278 104.17779541]
[74.61093903 99.42398071]
[60.38416290 94.67016602]
[48.93849945 104.91186523]
[33.90213394 108.04289246]
[19.31977844 103.22102356]
[9.11400890 91.74330902]
[6.03012753 76.69720459]
[10.89768314 62.13003540]
[22.40732765 51.96029282]
[37.46302414 48.92358780]
[52.01486588 53.83678055]
[62.14848328 65.37825012]
[65.13797760 80.44338989]
[79.36475372 85.19720459]
[93.59153748 89.95101929]
[108.52584076 91.35332489]
[123.38889313 89.33098602]
[138.25193787 87.30865479]
[153.11499023 85.28631592]
[167.97802734 83.26398468]
[182.84107971 81.24164581]
[195.47209167 71.71442413]
[209.12632751 77.66516113]
[208.22619629 60.32193756]
[208.87414551 42.96790695]
[211.06492615 25.74097633]
[214.78106689 8.77802658]
[219.99293518 -7.78615952]
[226.65905762 -23.81997490]
[234.72639465 -39.19603729]
[244.13073730 -53.79219437]
[254.79731750 -67.49250031]
[266.64129639 -80.18812561]
[279.56851196 -91.77824402]
[293.47613525 -102.17080688]
[308.25366211 -111.28330231]
[323.78359985 -119.04337311]
[339.94247437 -125.38942719]
[356.60186768 -130.27110291]
[373.62936401 -133.64968872]
[390.88964844 -135.49841309]
[408.24557495 -135.80267334]
[425.55917358 -134.56011963]
[442.69287109 -131.78070068]
[459.51055908 -127.48658752]
[475.87860107 -121.71198273]
[491.66693115 -114.50284576]
[506.75012207 -105.91653442]
[521.00836182 -96.02136230]
[534.32843018 -84.89601135]
[546.60443115 -72.62895966]
[557.73895264 -59.31774521]
[570.00134277 -67.95686340]
[582.26367188 -76.59597778]
[594.52606201 -85.23509216]
[606.78845215 -93.87421417]
[619.05078125 -102.51332855]
[631.31317139 -111.15244293]
[637.70599365 -126.25423431]
[654.01190186 -127.99999237]
[663.45684814 -114.59383392]
[656.32464600 -99.82686615]
[639.95227051 -98.89007568]
[627.68994141 -90.25096130]
[615.42755127 -81.61183929]
[603.16516113 -72.97272491]
[590.90283203 -64.33361053]
[578.64044189 -55.69449615]
[566.37805176 -47.05537796]
[573.21191406 -35.68992996]
[579.25616455 -23.88541985]
[584.48278809 -11.69661236]
[588.86743164 0.81993675]
[592.38983154 13.60614967]
[595.03363037 26.60269547]
[596.78637695 39.74926758]
[597.64007568 52.98485947]
[597.59063721 66.24804688]
[596.63830566 79.47728729]
[594.78741455 92.61117554]
[592.04663086 105.58876038]
[588.42858887 118.34981537]
[583.95007324 130.83511353]
[578.63183594 142.98669434]
[572.49853516 154.74816895]
[565.57861328 166.06494141]
[557.90417480 176.88447571]
[549.51074219 187.15655518]
[540.43731689 196.83348083]
[530.72595215 205.87033081]
[520.42175293 214.22514343]
[509.57247925 221.85914612]
[498.22845459 228.73687744]
[486.44232178 234.82640076]
[474.26879883 240.09942627]
[461.76431274 244.53146362]
[448.98690796 248.10192871]
[435.99588013 250.79421997]
[422.85153198 252.59580994]
[409.61480713 253.49833679]
[396.34719849 253.49755859]
[383.11019897 252.59346008]
[369.96530151 250.79022217]
[356.97348022 248.09619141]
[344.19503784 244.52383423]
[331.68930054 240.08969116]
[319.51428223 234.81434631]
[307.72653198 228.72222900]
[296.38073730 221.84159851]
[285.52954102 214.20437622]
[275.22335815 205.84596252]
[265.51004028 196.80514526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 61]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[15 54]
[16 36]
[17 35]
[18 34]
[19 33]
[21 31]
[22 30]
[23 29]
[24 28]
[38 53]
[39 52]
[40 51]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
