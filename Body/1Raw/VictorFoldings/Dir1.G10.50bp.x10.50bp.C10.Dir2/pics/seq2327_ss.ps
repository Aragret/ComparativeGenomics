%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAGUAGGCGGGGGGGGGGCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCxxxxxxxxxxAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCCCCCCCCCCCUAGUAGGC\
) } def
/len { sequence length } bind def

/coor [
[70.52790070 368.51715088]
[59.95482635 357.72888184]
[52.85066605 344.39816284]
[49.79131317 329.60571289]
[51.02478027 314.55062866]
[56.45107651 300.45339966]
[65.63031006 288.45681763]
[77.81837463 279.53335571]
[92.02722168 274.40646362]
[91.10381317 259.43490601]
[87.53092194 252.91212463]
[90.31835175 244.14707947]
[89.70252228 229.15971375]
[89.08670044 214.17236328]
[88.47087097 199.18501282]
[87.85504913 184.19766235]
[87.23921967 169.21031189]
[86.62339783 154.22294617]
[86.00756836 139.23559570]
[73.01718903 131.73559570]
[59.72984695 138.69595337]
[46.44250488 145.65631104]
[33.15516281 152.61666870]
[28.68124390 167.77449036]
[14.75976276 175.25566101]
[-0.34991169 170.62173462]
[-7.68347692 156.62193298]
[-2.89005923 141.56210327]
[11.18649197 134.37695312]
[26.19480896 139.32933044]
[39.48215103 132.36897278]
[52.76949310 125.40861511]
[66.05683136 118.44825745]
[63.22519302 109.57544708]
[62.63311768 100.43371582]
[64.24233246 91.57054901]
[67.88488770 83.49913788]
[73.27735901 76.66871643]
[80.04153442 71.43960571]
[87.73033905 68.06448364]
[95.85692596 66.67672729]
[103.92543030 67.28643036]
[109.05573273 53.19104004]
[114.18603516 39.09564972]
[119.31633759 25.00026131]
[111.54251862 1.27064121]
[134.25622559 -15.70452595]
[134.87203979 -30.69187927]
[135.48786926 -45.67923355]
[136.10369873 -60.66658783]
[136.71952820 -75.65393829]
[137.33534241 -90.64129639]
[137.95117188 -105.62864685]
[129.52565002 -93.21854401]
[118.81416321 -82.71788025]
[106.23904419 -74.54068756]
[92.29614258 -69.00938416]
[77.53519440 -66.34206390]
[62.53823471 -66.64389801]
[47.89657211 -69.90299225]
[34.18751907 -75.99084473]
[21.95161438 -84.66740417]
[11.67131424 -95.59056091]
[3.75196123 -108.32962799]
[-1.49418843 -122.38230896]
[-3.86028314 -137.19451904]
[-3.25302935 -152.18222046]
[0.30362955 -166.75447083]
[6.66945648 -180.33666992]
[15.59345150 -192.39329529]
[26.72374725 -202.44897461]
[39.62148285 -210.10719299]
[53.77811432 -215.06600952]
[68.63544464 -217.12989807]
[83.60767365 -216.21748352]
[98.10443878 -212.36473083]
[111.55416107 -205.72357178]
[123.42651367 -196.55584717]
[133.25337219 -185.22302246]
[140.64729309 -172.17196655]
[145.31672668 -157.91728210]
[147.07754517 -143.02098083]
[145.86141968 -128.07629395]
[154.77757263 -140.13871765]
[163.69371033 -152.20115662]
[156.15115356 -165.43103027]
[154.64820862 -180.58560181]
[159.44528198 -195.03924561]
[169.71124268 -206.28779602]
[183.66746521 -212.38235474]
[198.89595032 -212.26701355]
[212.75825500 -205.96174622]
[222.85266113 -194.55899048]
[227.43025208 -180.03434753]
[225.69793701 -164.90428162]
[217.95584106 -151.79017639]
[205.54533386 -142.96412659]
[190.61659241 -139.95530701]
[175.75614929 -143.28500366]
[166.83999634 -131.22256470]
[157.92384338 -119.16013336]
[152.93852234 -105.01281738]
[152.32269287 -90.02546692]
[151.70687866 -75.03811646]
[151.09104919 -60.05076218]
[150.47521973 -45.06340790]
[149.85940552 -30.07605362]
[149.24357605 -15.08870125]
[159.34901428 -4.00356722]
[174.32925415 -3.23390698]
[189.30949402 -2.46424699]
[198.22135925 -15.05718994]
[212.53529358 -20.81173515]
[227.68377686 -17.89162827]
[238.83297729 -7.22866344]
[242.42523193 7.77464485]
[237.31425476 22.33079529]
[225.13095093 31.79497337]
[209.76296997 33.14719772]
[196.11416626 25.95597076]
[188.53982544 12.51599407]
[173.55958557 11.74633408]
[158.57934570 10.97667408]
[148.95538330 26.33862495]
[133.41172791 30.13056183]
[128.28143311 44.22595215]
[123.15112305 58.32134247]
[118.02082062 72.41673279]
[132.19264221 87.96318054]
[134.43121338 109.76961517]
[122.81612396 129.39591980]
[100.99492645 138.61978149]
[101.61074829 153.60713196]
[102.22657776 168.59448242]
[102.84239960 183.58183289]
[103.45822144 198.56918335]
[104.07405090 213.55653381]
[104.68987274 228.54389954]
[105.30570221 243.53125000]
[106.07536316 258.51147461]
[106.99877167 273.48303223]
[121.72996521 276.82498169]
[134.92224121 284.18301392]
[145.50613403 294.96066284]
[152.62368774 308.28424072]
[155.69790649 323.07360840]
[154.47955322 338.12991333]
[149.06742859 352.23260498]
[139.90025330 364.23840332]
[127.72116089 373.17410278]
[113.51746368 378.31527710]
[98.44059753 379.24517822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 141]
[10 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 33]
[21 32]
[22 31]
[23 30]
[42 128]
[43 127]
[44 126]
[45 125]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[53 102]
[83 101]
[84 100]
[85 99]
[109 123]
[110 122]
[111 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
