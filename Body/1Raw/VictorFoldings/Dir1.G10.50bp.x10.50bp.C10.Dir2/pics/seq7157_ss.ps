%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUCAUAUUCAGGGGGGGGGGUCGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUCCGGAxxxxxxxxxxAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUCUACACUCCCCCCCCCCUAUCAUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[78.27973938 329.24838257]
[65.94662476 320.59722900]
[55.84817505 309.41827393]
[48.49092484 296.27224731]
[44.24390411 281.81848145]
[43.32014465 266.78207397]
[45.76598358 251.91714478]
[51.45873642 237.96937561]
[60.11285782 225.63836670]
[71.29425812 215.54261780]
[84.44209290 208.18855286]
[98.89685822 203.94503784]
[97.97344208 188.97348022]
[97.05003357 174.00193787]
[96.12661743 159.03038025]
[95.20320129 144.05883789]
[94.27979279 129.08728027]
[93.35637665 114.11573792]
[87.36808014 100.36290741]
[77.03717804 89.48759460]
[66.70627594 78.61228180]
[56.37537384 67.73696899]
[48.14242172 63.63644409]
[45.94684601 56.53069687]
[35.84141159 45.44556427]
[25.73597527 34.36042786]
[15.63054085 23.27529526]
[10.11013317 30.86292267]
[0.29441610 35.84273529]
[-14.52806568 38.14360809]
[-29.35054779 40.44448471]
[-38.47592926 53.34808731]
[-54.06667709 55.93731308]
[-66.87307739 46.67601776]
[-69.29732513 31.05876541]
[-59.90115356 18.35099411]
[-44.25914383 16.09199905]
[-31.65142250 25.62200165]
[-16.82894135 23.32112694]
[-2.00645876 21.02025223]
[4.81711674 7.66215181]
[-2.00645876 -5.69594765]
[-8.83003426 -19.05404663]
[-15.65360928 -32.41214752]
[-22.47718430 -45.77024460]
[-37.75664902 -41.56147003]
[-53.56990433 -40.58975983]
[-69.23894501 -42.89453506]
[-84.09240723 -48.37477493]
[-97.49433136 -56.79345322]
[-108.87142181 -67.78778839]
[-117.73752594 -80.88486481]
[-123.71443939 -95.52198792]
[-126.54801941 -111.07086945]
[-126.11901093 -126.86456299]
[-122.44803619 -142.22608948]
[-115.69465637 -156.49748230]
[-106.15039062 -169.06790161]
[-94.22615051 -179.39987183]
[-101.59239197 -192.46656799]
[-108.95863342 -205.53326416]
[-123.96300507 -211.21200562]
[-128.74089050 -226.52708435]
[-119.62711334 -239.73005676]
[-103.61296844 -240.69273376]
[-92.98314667 -228.67665100]
[-95.89193726 -212.89949036]
[-88.52569580 -199.83280945]
[-81.15946198 -186.76611328]
[-67.69344330 -191.27407837]
[-53.62057877 -193.20585632]
[-39.42935944 -192.49279785]
[-25.61268425 -189.15806580]
[-12.65073109 -183.31591797]
[-0.99428147 -175.16778564]
[8.95096111 -164.99531555]
[16.83849335 -153.15066528]
[22.39307976 -140.04426575]
[25.42036438 -126.13064575]
[25.81366158 -111.89264679]
[23.55772400 -97.82466125]
[18.72932243 -84.41547394]
[11.49463177 -72.13127899]
[2.10352111 -61.39949036]
[-9.11908531 -52.59382248]
[-2.29551005 -39.23572159]
[4.52806520 -25.87762260]
[11.35164070 -12.51952267]
[18.17521667 0.83857661]
[26.71567535 13.16986084]
[36.82110977 24.25499344]
[46.92654419 35.34012985]
[57.03197861 46.42526245]
[67.25068665 57.40606308]
[77.58158875 68.28137970]
[87.91249084 79.15669250]
[98.24339294 90.03200531]
[106.41266632 84.90031433]
[118.81282806 87.31780243]
[133.81204224 87.47179413]
[136.98843384 72.75801849]
[143.06199646 58.98497391]
[151.78401184 46.71666336]
[162.79731750 36.45547104]
[175.65090942 28.62157822]
[189.81846619 23.53578377]
[204.71981812 21.40634727]
[219.74478149 22.32046509]
[234.27807617 26.24070549]
[247.72457886 33.00653839]
[259.53366089 42.34090805]
[269.22174072 53.86157608]
[276.39212036 67.09677887]
[280.75115967 81.50453949]
[282.12036133 96.49487305]
[280.44366455 111.45394135]
[275.78973389 125.76916504]
[268.34912109 138.85435486]
[258.42654419 150.17367554]
[246.42828369 159.26361084]
[232.84570312 165.75193787]
[218.23498535 169.37295532]
[203.19442749 169.97839355]
[188.33993530 167.54345703]
[174.27980042 162.16784668]
[161.58975220 154.07170105]
[150.78944397 143.58654785]
[142.32116699 131.14173889]
[136.53167725 117.24690247]
[133.65803528 102.47100830]
[118.65882874 102.31700897]
[108.32792664 113.19232178]
[109.25134277 128.16387939]
[110.17475128 143.13542175]
[111.09816742 158.10697937]
[112.02158356 173.07852173]
[112.94499207 188.05007935]
[113.86840820 203.02162170]
[128.73509216 205.45664978]
[142.68699646 211.13926697]
[155.02430725 219.78442383]
[165.12817383 230.95848083]
[172.49179077 244.10096741]
[176.74581909 258.55264282]
[177.67686462 273.58862305]
[175.23822021 288.45474243]
[169.55223083 302.40524292]
[160.90408325 314.74044800]
[149.72756958 324.84161377]
[136.58331299 332.20205688]
[122.13059998 336.45257568]
[107.09439087 337.37997437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 97]
[20 96]
[21 95]
[22 94]
[24 93]
[25 92]
[26 91]
[27 90]
[29 40]
[30 39]
[31 38]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[59 69]
[60 68]
[61 67]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
