%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUCUUCAUAGGGGGGGGGGGCCGAAUACACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCxxxxxxxxxxUAACGACCACAUCUACAACGUUAUCGUCACAGCCCAUGCAUUUGUAAUAACCCCCCCCCCUCUUCUUCAUAG\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 384.13967896]
[70.87159729 378.98468018]
[58.28185654 370.70248413]
[47.94191742 359.73971558]
[40.40940475 346.68756104]
[36.09054184 332.24996948]
[35.21823120 317.20553589]
[37.83952332 302.36550903]
[43.81304932 288.53030396]
[52.81666565 276.44592285]
[64.36482239 266.76416016]
[77.83473969 260.00708008]
[92.50000000 256.53912354]
[92.50000000 241.53910828]
[92.50000000 226.53910828]
[92.50000000 211.53910828]
[92.50000000 196.53910828]
[92.50000000 181.53910828]
[92.50000000 166.53910828]
[92.50000000 151.53910828]
[92.50000000 136.53910828]
[92.50000000 121.53910828]
[83.05509949 115.26609039]
[77.79792023 105.22025299]
[78.02771759 93.88428497]
[83.68769073 84.05974579]
[93.37904358 78.17464447]
[93.98693085 63.18696594]
[85.81529999 53.15804672]
[86.66474915 40.65191269]
[95.53124237 32.36918259]
[96.44275665 17.39690590]
[97.35427094 2.42462587]
[98.26578522 -12.54765320]
[99.17729950 -27.51993179]
[84.30033875 -29.48591423]
[69.59912109 -32.49640656]
[55.14688110 -36.53641510]
[41.01561737 -41.58581161]
[27.27573967 -47.61943817]
[13.99569511 -54.60723495]
[1.24164462 -62.51439285]
[-10.92286968 -71.30151367]
[-22.43724632 -80.92482758]
[-33.24411774 -91.33638000]
[-43.28964615 -102.48430634]
[-52.52378464 -114.31306458]
[-60.90052795 -126.76373291]
[-68.37814331 -139.77427673]
[-74.91938019 -153.27987671]
[-80.49164581 -167.21324158]
[-85.06717682 -181.50495911]
[-88.62318420 -196.08384705]
[-91.14195251 -210.87724304]
[-92.61093140 -225.81147766]
[-93.02279663 -240.81211853]
[-92.37550354 -255.80444336]
[-90.67227936 -270.71377563]
[-87.92160034 -285.46582031]
[-84.13716888 -299.98706055]
[-79.33785248 -314.20520020]
[-73.54755402 -328.04937744]
[-66.79512024 -341.45065308]
[-59.11418915 -354.34219360]
[-50.54302979 -366.65982056]
[-41.12434769 -378.34219360]
[-30.90505791 -389.33105469]
[-19.93608093 -399.57168579]
[-8.27206039 -409.01306152]
[4.02889299 -417.60812378]
[16.90549660 -425.31411743]
[30.29359627 -432.09259033]
[44.12649536 -437.90975952]
[58.33528137 -442.73672485]
[72.84915924 -446.54937744]
[87.59582520 -449.32870483]
[102.50180817 -451.06091309]
[117.49285126 -451.73733521]
[132.49426270 -451.35464478]
[147.43132019 -449.91470337]
[162.22958374 -447.42468262]
[176.81535339 -443.89703369]
[191.11593628 -439.34927368]
[205.06011963 -433.80410767]
[218.57839966 -427.28912354]
[231.60345459 -419.83682251]
[244.07037354 -411.48428345]
[255.91706848 -402.27316284]
[267.08450317 -392.24932861]
[277.51702881 -381.46270752]
[287.16271973 -369.96707153]
[295.97344971 -357.81964111]
[303.90539551 -345.08099365]
[310.91900635 -331.81454468]
[316.97930908 -318.08642578]
[322.05615234 -303.96499634]
[326.12426758 -289.52066040]
[329.16333008 -274.82531738]
[331.15820312 -259.95220947]
[332.09899902 -244.97541809]
[331.98098755 -229.96958923]
[330.80477905 -215.00946045]
[328.57623291 -200.16957092]
[325.30642700 -185.52384949]
[321.01165771 -171.14524841]
[315.71334839 -157.10542297]
[309.43786621 -143.47430420]
[302.21649170 -130.31980896]
[294.08517456 -117.70748138]
[285.08447266 -105.70014191]
[275.25921631 -94.35761261]
[264.65829468 -83.73641205]
[253.33460999 -73.88944244]
[241.34451294 -64.86576843]
[228.74777222 -56.71035004]
[215.60713196 -49.46380615]
[201.98805237 -43.16225052]
[187.95838928 -37.83706665]
[173.58804321 -33.51479340]
[158.94860840 -30.21696091]
[144.11300659 -27.95999718]
[129.15515137 -26.75514984]
[114.14957428 -26.60841942]
[113.23806000 -11.63613987]
[112.32654572 3.33613944]
[111.41503143 18.30841827]
[110.50352478 33.28069687]
[119.18470001 48.50321579]
[108.97460938 63.79484940]
[108.36672211 78.78252411]
[121.13897705 91.43689728]
[120.77458954 109.41273499]
[107.50000000 121.53910828]
[107.50000000 136.53910828]
[107.50000000 151.53910828]
[107.50000000 166.53910828]
[107.50000000 181.53910828]
[107.50000000 196.53910828]
[107.50000000 211.53910828]
[107.50000000 226.53910828]
[107.50000000 241.53910828]
[107.50000000 256.53912354]
[122.16526031 260.00708008]
[135.63517761 266.76416016]
[147.18333435 276.44592285]
[156.18695068 288.53030396]
[162.16047668 302.36550903]
[164.78176880 317.20553589]
[163.90945435 332.24996948]
[159.59059143 346.68756104]
[152.05809021 359.73971558]
[141.71813965 370.70248413]
[129.12840271 378.98468018]
[114.96779633 384.13967896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[27 130]
[28 129]
[31 127]
[32 126]
[33 125]
[34 124]
[35 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
