%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGAACCAAGGGGGGGGGGCCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGxxxxxxxxxxAAUGUUCAACCAGUAACUACUACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCCCCCCCCCCCGCACCAA\
) } def
/len { sequence length } bind def

/coor [
[83.84166718 393.19006348]
[70.35278320 386.45852661]
[58.86728668 376.69396973]
[50.05291748 364.46408081]
[44.42213440 350.47988892]
[42.30230713 335.55441284]
[43.81667328 320.55538940]
[48.87719727 306.35488892]
[57.18966293 293.77847290]
[68.27079773 283.55731201]
[81.47634888 276.28567505]
[96.03857422 272.38632202]
[95.73059845 257.38946533]
[95.42261505 242.39263916]
[95.11463928 227.39579773]
[94.80666351 212.39895630]
[94.49868774 197.40213013]
[94.19070435 182.40528870]
[93.88272858 167.40844727]
[93.57475281 152.41160583]
[93.26677704 137.41476440]
[92.95879364 122.41793060]
[83.99225616 117.20157623]
[78.14552307 108.63273621]
[63.16528320 109.40239716]
[48.18504333 110.17205811]
[33.20480347 110.94171906]
[29.51165581 125.59955597]
[21.66069031 138.51673889]
[10.35000896 148.54469299]
[-3.41465068 154.79174805]
[-18.40934372 156.70239258]
[-33.30075455 154.10675049]
[-46.76474380 147.23562622]
[-57.60410690 136.69999695]
[-64.85501862 123.43666840]
[-67.87272644 108.62502289]
[-66.38889313 93.58209991]
[-60.53547287 79.64549255]
[-50.83294296 68.05445099]
[-38.14404297 59.83963394]
[-23.59706116 55.73149872]
[-8.48550892 56.09534073]
[5.84690714 60.89880371]
[18.12575912 69.71476746]
[27.25921631 81.75932312]
[32.43514252 95.96147919]
[47.41538239 95.19181824]
[62.39562607 94.42215729]
[77.37586212 93.65249634]
[87.83580780 79.89590454]
[104.87537384 77.01363373]
[112.50834656 64.10093689]
[120.14131165 51.18824005]
[127.77428436 38.27553940]
[115.58924103 29.51021576]
[104.23897552 19.68790817]
[93.81487274 8.88770390]
[84.40087891 -2.80343962]
[76.07276917 -15.29138947]
[68.89761353 -28.47559929]
[62.93317795 -42.24991226]
[58.22748566 -56.50342941]
[54.81842422 -71.12138367]
[52.73344421 -85.98607635]
[51.98933029 -100.97782135]
[52.59207535 -115.97592163]
[54.53682709 -130.85960388]
[57.80792618 -145.50904846]
[62.37903214 -159.80630493]
[68.21334839 -173.63623047]
[75.26389313 -186.88749695]
[83.47389221 -199.45339966]
[92.77725983 -211.23277283]
[103.09907532 -222.13078308]
[114.35623932 -232.05964661]
[126.45810699 -240.93946838]
[139.30723572 -248.69871521]
[152.80018616 -255.27491760]
[166.82830811 -260.61514282]
[181.27865601 -264.67639160]
[196.03488159 -267.42596436]
[210.97817993 -268.84170532]
[225.98820496 -268.91223145]
[240.94415283 -267.63696289]
[255.72555542 -265.02618408]
[270.21343994 -261.10092163]
[284.29110718 -255.89274597]
[297.84527588 -249.44361877]
[310.76675415 -241.80545044]
[322.95150757 -233.03976440]
[334.30148315 -223.21710205]
[344.72525024 -212.41658020]
[354.13888550 -200.72514343]
[362.46661377 -188.23693848]
[369.64138794 -175.05252075]
[375.60540771 -161.27801514]
[380.31063843 -147.02436829]
[383.71926880 -132.40631104]
[385.80380249 -117.54154968]
[386.54745483 -102.54977417]
[385.94424438 -87.55169678]
[383.99902344 -72.66806793]
[380.72747803 -58.01872635]
[376.15594482 -43.72161865]
[370.32119751 -29.89186478]
[363.27026367 -16.64081383]
[355.05987549 -4.07515574]
[345.75616455 7.70393467]
[335.43399048 18.60161781]
[324.17654419 28.53014946]
[312.07440186 37.40959167]
[299.22503662 45.16844559]
[285.73187256 51.74424744]
[271.70358276 57.08404541]
[257.25311279 61.14485168]
[242.49681091 63.89396286]
[227.55348206 65.30924988]
[212.54344177 65.37931824]
[197.58753967 64.10360718]
[182.80621338 61.49237442]
[168.31846619 57.56665421]
[154.24093628 52.35805511]
[140.68698120 45.90851212]
[133.05401611 58.82120895]
[125.42104340 71.73390961]
[117.78807068 84.64660645]
[123.44616699 98.44453430]
[119.66040039 112.86898804]
[107.95563507 122.10995483]
[108.26361084 137.10679626]
[108.57159424 152.10363770]
[108.87957001 167.10046387]
[109.18754578 182.09730530]
[109.49552155 197.09414673]
[109.80349731 212.09098816]
[110.11148071 227.08781433]
[110.41945648 242.08465576]
[110.72743225 257.08148193]
[111.03540802 272.07833862]
[125.74544525 275.37655640]
[139.23840332 282.09991455]
[150.72982788 291.85751343]
[159.55160522 304.08206177]
[165.19087219 318.06283569]
[167.31974792 332.98703003]
[165.81446838 347.98693848]
[160.76255798 362.19052124]
[152.45771790 374.77197266]
[141.38278198 384.99984741]
[128.18164062 392.27951050]
[113.62178040 396.18768311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[24 50]
[25 49]
[26 48]
[27 47]
[52 127]
[53 126]
[54 125]
[55 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
