%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUUCUACUAGGGGGGGGGGUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAACxxxxxxxxxxUUCCCCUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGCUCACUACCCCCCCCCCAACAUUCUACUA\
) } def
/len { sequence length } bind def

/coor [
[84.75475311 387.19937134]
[70.59415436 382.04437256]
[58.00440598 373.76217651]
[47.66446686 362.79937744]
[40.13195801 349.74725342]
[35.81309128 335.30966187]
[34.94078445 320.26519775]
[37.56207275 305.42520142]
[43.53559875 291.58996582]
[52.53921890 279.50561523]
[64.08737183 269.82385254]
[77.55728912 263.06677246]
[92.22254944 259.59878540]
[92.22254944 244.59880066]
[92.22254944 229.59880066]
[92.22254944 214.59880066]
[92.22254944 199.59880066]
[92.22254944 184.59880066]
[92.22254944 169.59880066]
[92.22254944 154.59880066]
[92.22254944 139.59880066]
[92.22254944 124.59879303]
[92.22254944 109.59879303]
[83.96212006 122.11938477]
[71.59771729 130.61183167]
[56.94655991 133.82798767]
[42.16194534 131.29516602]
[29.41678429 123.38562012]
[20.58424759 111.26183319]
[16.96246147 96.70564270]
[19.08372498 81.85639191]
[26.63627243 68.89649200]
[38.51010132 59.73067093]
[52.96009445 55.70604706]
[67.86252594 57.41411591]
[81.02716827 64.60384369]
[90.51920319 76.21855164]
[94.94343567 90.55004883]
[99.14289856 76.14989471]
[103.34236145 61.74973679]
[107.54182434 47.34957886]
[111.59513855 32.90760422]
[115.50189209 18.42529488]
[101.34960175 13.43229580]
[87.61545563 7.38326883]
[74.37813568 0.31286454]
[61.71344757 -7.73841810]
[49.69394684 -16.72446251]
[38.38847733 -26.59379578]
[27.86179733 -37.28988647]
[18.17420006 -48.75146866]
[9.38117790 -60.91288757]
[1.53309798 -73.70449066]
[-5.32508707 -87.05299377]
[-11.15409374 -100.88195801]
[-15.92053318 -115.11215210]
[-19.59710312 -129.66206360]
[-22.16274452 -144.44837952]
[-23.60276222 -159.38636780]
[-23.90890694 -174.39048767]
[-23.07942581 -189.37480164]
[-21.11907005 -204.25344849]
[-18.03906822 -218.94123840]
[-13.85706139 -233.35401917]
[-8.59700584 -247.40924072]
[-2.28902936 -261.02639771]
[5.03073454 -274.12747192]
[13.32035923 -286.63745117]
[22.53236198 -298.48464966]
[32.61397552 -309.60125732]
[43.50745773 -319.92352295]
[55.15040207 -329.39236450]
[67.47612762 -337.95355225]
[80.41402435 -345.55804443]
[93.88998413 -352.16226196]
[107.82682800 -357.72839355]
[122.14471436 -362.22457886]
[136.76164246 -365.62500000]
[151.59387207 -367.91021729]
[166.55645752 -369.06716919]
[181.56369019 -369.08917236]
[196.52960205 -367.97613525]
[211.36846924 -365.73443604]
[225.99530029 -362.37689209]
[240.32632446 -357.92276001]
[254.27943420 -352.39752197]
[267.77471924 -345.83285522]
[280.73486328 -338.26635742]
[293.08563232 -329.74136353]
[304.75631714 -320.30670166]
[315.68002319 -310.01641846]
[325.79421997 -298.92947388]
[335.04092407 -287.10931396]
[343.36721802 -274.62371826]
[350.72537231 -261.54415894]
[357.07327271 -247.94557190]
[362.37454224 -233.90583801]
[366.59878540 -219.50540161]
[369.72186279 -204.82670593]
[371.72586060 -189.95387268]
[372.59930420 -174.97206116]
[372.33715820 -159.96710205]
[370.94097900 -145.02494812]
[368.41873169 -130.23118591]
[364.78485107 -115.67053986]
[360.06018066 -101.42642212]
[354.27175903 -87.58042908]
[347.45275879 -74.21185303]
[339.64224243 -61.39728928]
[330.88491821 -49.21012878]
[321.23098755 -37.72017670]
[310.73574829 -26.99325371]
[299.45925903 -17.09079933]
[287.46618652 -8.06953526]
[274.82516479 0.01886409]
[261.60864258 7.12806892]
[247.89230347 13.21735764]
[233.75471497 18.25185204]
[219.27687073 22.20271301]
[204.54168701 25.04730988]
[189.63356018 26.76935196]
[174.63790894 27.35897255]
[159.64060974 26.81279564]
[144.72756958 25.13394737]
[129.98420715 22.33204842]
[126.07744598 36.81435776]
[127.37942505 44.13449860]
[121.94197845 51.54904175]
[117.74251556 65.94919586]
[113.54305267 80.34935760]
[109.34359741 94.74951172]
[107.22254944 109.59879303]
[107.22254944 124.59879303]
[107.22254944 139.59880066]
[107.22254944 154.59880066]
[107.22254944 169.59880066]
[107.22254944 184.59880066]
[107.22254944 199.59880066]
[107.22254944 214.59880066]
[107.22254944 229.59880066]
[107.22254944 244.59880066]
[107.22254944 259.59878540]
[121.88780975 263.06677246]
[135.35772705 269.82385254]
[146.90588379 279.50561523]
[155.90950012 291.58996582]
[161.88302612 305.42520142]
[164.50431824 320.26519775]
[163.63200378 335.30966187]
[159.31314087 349.74725342]
[151.78063965 362.79937744]
[141.44068909 373.76217651]
[128.85095215 382.04437256]
[114.69034576 387.19937134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[38 131]
[39 130]
[40 129]
[41 128]
[42 126]
[43 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
