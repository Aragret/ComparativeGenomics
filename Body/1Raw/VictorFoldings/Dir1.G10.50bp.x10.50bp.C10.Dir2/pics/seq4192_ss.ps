%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUACACAACGGGGGGGGGGAUAUUUUGUCACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCxxxxxxxxxxAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAACCCCCCCCCCUCAACACAAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 393.25329590]
[71.19830322 387.23727417]
[59.48964310 377.70785522]
[50.78712082 365.37219238]
[45.73651886 351.14566040]
[44.71262741 336.08398438]
[47.79142761 321.30480957]
[54.74444962 307.90490723]
[65.05573273 296.87857056]
[77.96011353 289.04406738]
[92.50000000 284.98272705]
[92.50000000 269.98272705]
[92.50000000 254.98274231]
[92.50000000 239.98274231]
[92.50000000 224.98274231]
[92.50000000 209.98274231]
[92.50000000 194.98274231]
[92.50000000 179.98274231]
[92.50000000 164.98274231]
[92.50000000 149.98274231]
[76.22252655 144.59996033]
[62.68095779 134.08538818]
[53.43341446 119.64885712]
[49.54394913 102.95147705]
[51.46008682 85.91449738]
[58.96136093 70.49822998]
[71.18464661 58.47651291]
[64.55615234 45.02054596]
[57.92765045 31.56458282]
[51.29915237 18.10861778]
[44.67065430 4.65265131]
[30.65055847 10.01563168]
[16.19543266 14.06210995]
[1.42860544 16.75756073]
[-13.52393532 18.07898712]
[-28.53461647 18.01511574]
[-43.47537231 16.56649208]
[-58.21872711 13.74547482]
[-72.63889313 9.57613087]
[-86.61283875 4.09403467]
[-100.02134705 -2.65404248]
[-112.75001526 -10.61052704]
[-124.69024658 -19.70753670]
[-135.74017334 -29.86745453]
[-145.80549622 -41.00360107]
[-154.80036926 -53.02096176]
[-162.64802551 -65.81700897]
[-169.28153992 -79.28256989]
[-174.64428711 -93.30275726]
[-178.69052124 -107.75794983]
[-181.38572693 -122.52481842]
[-182.70689392 -137.47738647]
[-182.64277649 -152.48806763]
[-181.19390869 -167.42878723]
[-178.37263489 -182.17210388]
[-174.20306396 -196.59219360]
[-168.72073364 -210.56605530]
[-161.97242737 -223.97445679]
[-154.01573181 -236.70298767]
[-144.91851807 -248.64306641]
[-134.75842285 -259.69281006]
[-123.62210846 -269.75796509]
[-111.60459900 -278.75262451]
[-98.80841827 -286.60006714]
[-85.34275055 -293.23336792]
[-71.32247162 -298.59588623]
[-56.86721420 -302.64187622]
[-42.10029602 -305.33682251]
[-27.14771271 -306.65774536]
[-12.13703251 -306.59338379]
[2.80367351 -305.14425659]
[17.54693413 -302.32275391]
[31.96696281 -298.15292358]
[45.94072723 -292.67037964]
[59.34901428 -285.92184448]
[72.07741547 -277.96493530]
[84.01734161 -268.86752319]
[95.06692505 -258.70724487]
[105.13188171 -247.57075500]
[114.12635040 -235.55310059]
[121.97358704 -222.75679016]
[128.60664368 -209.29101562]
[133.96891785 -195.27064514]
[138.01467896 -180.81532288]
[140.70939636 -166.04835510]
[142.03007507 -151.09574890]
[141.96545410 -136.08506775]
[140.51608276 -121.14438629]
[137.69432068 -106.40117645]
[133.52426147 -91.98121643]
[128.04145813 -78.00753784]
[121.29271698 -64.59937286]
[113.33559418 -51.87109756]
[104.23799133 -39.93132401]
[94.07752228 -28.88191414]
[82.94087219 -18.81713867]
[70.92305756 -9.82287121]
[58.12662125 -1.97584713]
[64.75511932 11.48011875]
[71.38361359 24.93608284]
[78.01211548 38.39204788]
[84.64061737 51.84801483]
[95.57884216 49.65143585]
[106.73248291 49.90810394]
[117.55809021 52.60550690]
[127.52817535 57.61221695]
[136.15693665 64.68428040]
[143.02395630 73.47711182]
[147.79461670 83.56227112]
[150.23648071 94.44836426]
[150.23056030 105.60496521]
[164.72615051 109.46212006]
[179.22175598 113.31928253]
[193.71734619 117.17643738]
[204.50189209 106.24076080]
[219.31367493 102.17793274]
[234.16841125 106.08083344]
[245.07023621 116.89961243]
[249.08660889 131.72406006]
[245.13716125 146.56648254]
[234.28427124 157.43434143]
[219.44731140 161.40422058]
[204.61734009 157.40827942]
[193.78355408 146.52137756]
[189.86018372 131.67204285]
[175.36459351 127.81488037]
[160.86898804 123.95771790]
[146.37339783 120.10055542]
[137.09738159 134.32650757]
[123.63284302 144.67675781]
[107.50000000 149.98274231]
[107.50000000 164.98274231]
[107.50000000 179.98274231]
[107.50000000 194.98274231]
[107.50000000 209.98274231]
[107.50000000 224.98274231]
[107.50000000 239.98274231]
[107.50000000 254.98274231]
[107.50000000 269.98272705]
[107.50000000 284.98272705]
[122.03988647 289.04406738]
[134.94427490 296.87857056]
[145.25555420 307.90490723]
[152.20857239 321.30480957]
[155.28736877 336.08398438]
[154.26348877 351.14566040]
[149.21287537 365.37219238]
[140.51036072 377.70785522]
[128.80169678 387.23727417]
[114.95575714 393.25329590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[27 102]
[28 101]
[29 100]
[30 99]
[31 98]
[111 128]
[112 127]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
