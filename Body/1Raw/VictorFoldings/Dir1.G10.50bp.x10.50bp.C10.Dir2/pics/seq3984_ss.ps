%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUCUCCACGGGGGGGGGGACUAGCAGAGACCAACCGAACCCCCUUCGACCUUGCCGAAGGGGAGUCCGxxxxxxxxxxGUAAACCGGAGAUGAAAACCUUUUUCCAAGGACAAAUCAGAGAAAAAGUCCCCCCCCCCCUUUAACUCCAC\
) } def
/len { sequence length } bind def

/coor [
[96.31619263 605.41577148]
[82.82730865 598.68420410]
[71.34181213 588.91967773]
[62.52744293 576.68975830]
[56.89665985 562.70556641]
[54.77683258 547.78009033]
[56.29120255 532.78106689]
[61.35172272 518.58056641]
[69.66419220 506.00415039]
[80.74532318 495.78298950]
[93.95087433 488.51135254]
[108.51309967 484.61199951]
[108.20512390 469.61514282]
[107.89714050 454.61831665]
[107.58916473 439.62149048]
[107.28118896 424.62463379]
[106.97321320 409.62780762]
[106.66523743 394.63098145]
[106.35725403 379.63412476]
[106.04927826 364.63729858]
[105.74130249 349.64044189]
[105.43332672 334.64361572]
[105.12534332 319.64678955]
[104.81736755 304.64993286]
[88.87369537 301.57583618]
[73.98730469 295.07531738]
[60.88503265 285.46270752]
[50.20729065 273.20431519]
[42.47675323 258.89584351]
[38.07278442 243.23352051]
[37.21281433 226.98004150]
[39.94160461 210.92764282]
[46.12893295 195.85934448]
[55.47579956 182.51077271]
[67.52887726 171.53431702]
[81.70250702 163.46717834]
[97.30713654 158.70507812]
[96.07652283 143.75564575]
[79.68428040 138.95153809]
[66.36353302 128.25842285]
[58.12820816 113.29298401]
[56.22338486 96.31780243]
[60.93705750 79.89933014]
[48.96680069 70.85980988]
[36.99654007 61.82028961]
[25.02628326 52.78076935]
[13.05602360 43.74124908]
[1.08576560 34.70173264]
[-10.88449287 25.66221046]
[-22.85475159 16.62269211]
[-38.05360794 20.30083847]
[-52.03781509 13.30255795]
[-58.20446014 -1.06777608]
[-53.64184189 -16.02493095]
[-40.50428391 -24.50659752]
[-24.99494553 -22.50798988]
[-14.43686008 -10.97278976]
[-13.81523132 4.65243340]
[-1.84497333 13.69195271]
[10.12528515 22.73147202]
[22.09554291 31.77099228]
[34.06580353 40.81051254]
[46.03606033 49.85003281]
[58.00631714 58.88954926]
[69.97657776 67.92906952]
[78.25749207 61.82652664]
[87.73050690 57.81694794]
[97.87622070 56.12016296]
[99.71954346 41.23385620]
[101.56286621 26.34754944]
[103.40619659 11.46124077]
[89.89579010 4.58774996]
[79.55331421 -6.49416542]
[73.62764740 -20.44631195]
[72.83436584 -35.58389664]
[77.26924896 -50.07898712]
[86.39676666 -62.18122482]
[99.11473083 -70.42921448]
[113.88737488 -73.82695770]
[128.93084717 -71.96417236]
[142.42855835 -65.06579590]
[152.75059509 -53.96483994]
[158.65052795 -40.00180054]
[159.41592407 -24.86277771]
[154.95433044 -10.37588596]
[145.80451965 1.70951259]
[133.07138062 9.93404675]
[118.29250336 13.30456543]
[116.44918060 28.19087219]
[114.60585022 43.07717896]
[112.76252747 57.96348953]
[118.30219269 60.06279755]
[123.50904083 62.88834000]
[128.28839111 66.38873291]
[132.55334473 70.50032806]
[145.22485352 62.47333145]
[157.89637756 54.44633484]
[170.56788635 46.41933823]
[183.23939514 38.39234161]
[193.38420105 24.80854225]
[209.24548340 30.79650307]
[207.88238525 47.69556427]
[191.26640320 51.06385803]
[178.59487915 59.09085464]
[165.92337036 67.11785126]
[153.25184631 75.14484406]
[140.58033752 83.17184448]
[143.90513611 101.51303101]
[139.32559204 119.58182526]
[127.66618347 134.12525940]
[111.02595520 142.52503967]
[112.25656891 157.47447205]
[125.99755859 159.06120300]
[139.19784546 163.17965698]
[151.39540100 169.68389893]
[162.16362000 178.34458923]
[171.12623596 188.85697937]
[177.97050476 200.85162354]
[182.45803833 213.90744019]
[184.43316650 227.56643677]
[183.82833862 241.34976196]
[180.66641235 254.77455139]
[175.05978394 267.37078857]
[167.20643616 278.69781494]
[157.38290405 288.35971069]
[145.93455505 296.01907349]
[133.26344299 301.40893555]
[119.81420898 304.34194946]
[120.12218475 319.33880615]
[120.43016052 334.33563232]
[120.73813629 349.33248901]
[121.04611969 364.32931519]
[121.35409546 379.32614136]
[121.66207123 394.32299805]
[121.97004700 409.31982422]
[122.27803040 424.31665039]
[122.58600616 439.31350708]
[122.89398193 454.31033325]
[123.20195770 469.30718994]
[123.50994110 484.30401611]
[138.21997070 487.60223389]
[151.71293640 494.32559204]
[163.20434570 504.08319092]
[172.02613831 516.30773926]
[177.66539001 530.28851318]
[179.79426575 545.21270752]
[178.28898621 560.21264648]
[173.23707581 574.41619873]
[164.93223572 586.99768066]
[153.85731506 597.22552490]
[140.65615845 604.50518799]
[126.09630585 608.41339111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[24 128]
[37 112]
[38 111]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[68 91]
[69 90]
[70 89]
[71 88]
[95 107]
[96 106]
[97 105]
[98 104]
[99 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
