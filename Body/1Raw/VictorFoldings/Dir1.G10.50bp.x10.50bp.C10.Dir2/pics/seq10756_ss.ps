%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUCAUCUUGGGGGGGGGGCCUAAUUACCAUACUAAUCUUAGUUACCGCUAACAACCUAUUCCAACUGUxxxxxxxxxxCCCAAACAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUUCCUAAUUACCACCCCCCCCCCUACUAAUCUU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 363.07766724]
[71.19830322 357.06164551]
[59.48964310 347.53222656]
[50.78712082 335.19653320]
[45.73651886 320.97003174]
[44.71262741 305.90835571]
[47.79142761 291.12918091]
[54.74444962 277.72924805]
[65.05573273 266.70291138]
[77.96011353 258.86840820]
[92.50000000 254.80709839]
[92.50000000 239.80709839]
[92.50000000 224.80709839]
[92.50000000 209.80709839]
[92.50000000 194.80709839]
[92.50000000 179.80709839]
[92.50000000 164.80709839]
[92.50000000 149.80709839]
[92.50000000 134.80709839]
[92.50000000 119.80709839]
[80.57480621 108.43997192]
[80.40342712 91.96597290]
[92.08956146 80.35321808]
[91.77750397 65.35646057]
[91.46544647 50.35970688]
[91.15338898 35.36295319]
[90.84133911 20.36619949]
[90.52928162 5.36944628]
[75.53916931 4.68960476]
[60.62675858 3.02054000]
[45.85726166 0.36955085]
[31.29526711 -3.25177050]
[17.00444412 -7.82758856]
[3.04728794 -13.33789444]
[-10.51517200 -19.75859261]
[-23.62363052 -27.06160927]
[-36.22076797 -35.21500397]
[-48.25149536 -44.18313217]
[-59.66320801 -53.92676926]
[-70.40600586 -64.40331268]
[-80.43291473 -75.56695557]
[-89.70008087 -87.36887360]
[-98.16699219 -99.75746155]
[-105.79661560 -112.67855072]
[-112.55559540 -126.07563782]
[-118.41436768 -139.89013672]
[-123.34732056 -154.06164551]
[-127.33288574 -168.52819824]
[-130.35362244 -183.22651672]
[-132.39633179 -198.09236145]
[-133.45208740 -213.06069946]
[-133.51626587 -228.06608582]
[-132.58857727 -243.04289246]
[-130.67308044 -257.92565918]
[-127.77816772 -272.64929199]
[-123.91648865 -287.14938354]
[-119.10491943 -301.36257935]
[-113.36451721 -315.22668457]
[-106.72037506 -328.68109131]
[-99.20154572 -341.66696167]
[-90.84090424 -354.12750244]
[-81.67501831 -366.00827026]
[-71.74395752 -377.25726318]
[-61.09115982 -387.82531738]
[-49.76320267 -397.66619873]
[-37.80961609 -406.73687744]
[-25.28267860 -414.99774170]
[-12.23716259 -422.41259766]
[1.26988494 -428.94906616]
[15.17940140 -434.57855225]
[29.43056297 -439.27642822]
[43.96105576 -443.02215576]
[58.70733261 -445.79937744]
[73.60491943 -447.59591675]
[88.58866882 -448.40396118]
[103.59306335 -448.21990967]
[118.55249023 -447.04464722]
[133.40153503 -444.88327026]
[148.07527161 -441.74520874]
[162.50952148 -437.64422607]
[176.64117432 -432.59823608]
[190.40843201 -426.62930298]
[203.75109863 -419.76351929]
[216.61083984 -412.03094482]
[228.93139648 -403.46533203]
[240.65892029 -394.10418701]
[251.74211121 -383.98843384]
[262.13250732 -373.16229248]
[271.78469849 -361.67312622]
[280.65643311 -349.57113647]
[288.70895386 -336.90927124]
[295.90701294 -323.74291992]
[302.21917725 -310.12960815]
[307.61782837 -296.12887573]
[312.07934570 -281.80194092]
[315.58425903 -267.21148682]
[318.11718750 -252.42129517]
[319.66708374 -237.49603271]
[320.22717285 -222.50096130]
[319.79498291 -207.50166321]
[318.37243652 -192.56372070]
[315.96572876 -177.75247192]
[312.58541870 -163.13264465]
[308.24624634 -148.76820374]
[302.96719360 -134.72193909]
[296.77136230 -121.05529022]
[289.68585205 -107.82800293]
[281.74160767 -95.09792328]
[272.97341919 -82.92072296]
[263.41958618 -71.34963989]
[253.12188721 -60.43527985]
[242.12536621 -50.22536469]
[230.47811890 -40.76454163]
[218.23104858 -32.09418106]
[205.43772888 -24.25219536]
[192.15409851 -17.27287674]
[178.43824768 -11.18674374]
[164.35014343 -6.02041006]
[149.95140076 -1.79646611]
[135.30496216 1.46661699]
[120.47489166 3.75457072]
[105.52603149 5.05739021]
[105.83808899 20.05414391]
[106.15014648 35.05089951]
[106.46220398 50.04764938]
[106.77426147 65.04440308]
[107.08631134 80.04116058]
[117.23731995 87.69365692]
[121.17835236 99.77967834]
[117.48960876 111.94507599]
[107.50000000 119.80709839]
[107.50000000 134.80709839]
[107.50000000 149.80709839]
[107.50000000 164.80709839]
[107.50000000 179.80709839]
[107.50000000 194.80709839]
[107.50000000 209.80709839]
[107.50000000 224.80709839]
[107.50000000 239.80709839]
[107.50000000 254.80709839]
[122.03988647 258.86840820]
[134.94427490 266.70291138]
[145.25555420 277.72924805]
[152.20857239 291.12918091]
[155.28736877 305.90835571]
[154.26348877 320.97003174]
[149.21287537 335.19653320]
[140.51036072 347.53222656]
[128.80169678 357.06164551]
[114.95575714 363.07766724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
