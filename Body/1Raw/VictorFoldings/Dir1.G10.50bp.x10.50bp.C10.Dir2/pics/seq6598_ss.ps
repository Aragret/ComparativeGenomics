%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCAUCACGGGGGGGGGGAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCxxxxxxxxxxAGCCAACCCCAUGGCCUCCAUGACUUUUUCAAAAAGGUAUUAGAAAAACCCCCCCCCCCCAUUUCAUAAC\
) } def
/len { sequence length } bind def

/coor [
[90.56246185 378.20376587]
[78.00424194 369.85260010]
[67.91802216 358.64016724]
[60.93782425 345.27124023]
[57.50244141 330.58627319]
[57.82781982 315.50830078]
[61.89350128 300.98516846]
[69.44392395 287.92984009]
[80.00444794 277.16293335]
[92.91124725 269.36129761]
[107.35297394 265.01535034]
[106.72899628 250.02833557]
[106.10501862 235.04132080]
[105.48104095 220.05430603]
[104.85706329 205.06729126]
[104.23308563 190.08027649]
[103.60910797 175.09326172]
[102.98513031 160.10624695]
[102.36115265 145.11923218]
[101.73717499 130.13221741]
[81.57851410 121.00448608]
[74.37487030 101.88053894]
[82.12976837 84.81598663]
[74.40568542 71.95758057]
[49.03853226 70.87654114]
[32.00251770 48.55345154]
[17.50691986 52.41061020]
[3.01132393 56.26776886]
[-11.48427296 60.12492752]
[-22.71204185 72.07772064]
[-38.61334991 68.06767273]
[-42.83029175 52.21997452]
[-31.02483940 40.83738708]
[-15.34143162 45.62933350]
[-0.84583551 41.77217484]
[13.64976120 37.91501236]
[28.14535713 34.05785370]
[13.57505417 30.49327087]
[-1.35796654 29.07732773]
[-12.12239170 18.63093376]
[-13.98540211 3.74707747]
[-6.12788439 -9.03022289]
[7.99542952 -14.08314323]
[22.17491150 -9.19005489]
[30.17616272 3.49737000]
[39.93149567 14.89181805]
[36.83317566 0.21529266]
[33.73485184 -14.46123314]
[30.63653183 -29.13775826]
[27.53820992 -43.81428528]
[12.53543377 -42.93428802]
[-2.43091989 -44.30026627]
[-17.02649879 -47.88171005]
[-30.92523193 -53.59860229]
[-43.81661606 -61.32323074]
[-55.41265488 -70.88301849]
[-65.45428467 -82.06439972]
[-73.71717834 -94.61757660]
[-80.01673126 -108.26210785]
[-84.21221924 -122.69317627]
[-86.20989990 -137.58836365]
[-85.96515656 -152.61494446]
[-83.48345947 -167.43717957]
[-78.82023621 -181.72395325]
[-72.07966614 -195.15609741]
[-63.41235352 -207.43353271]
[-53.01191330 -218.28196716]
[-41.11069870 -227.45904541]
[-27.97459221 -234.75975037]
[-13.89705372 -240.02098083]
[0.80741763 -243.12519836]
[15.81031799 -244.00306702]
[30.77647781 -242.63494873]
[45.37154770 -239.05142212]
[59.26946640 -233.33255005]
[72.15975189 -225.60609436]
[83.75442505 -216.04464722]
[93.79446411 -204.86184692]
[102.05557251 -192.30749512]
[108.35317993 -178.66206360]
[112.54660797 -164.23039246]
[114.54217529 -149.33491516]
[114.29528809 -134.30838013]
[111.81147766 -119.48649597]
[107.14621735 -105.20038605]
[100.40373993 -91.76920319]
[91.73467255 -79.49300385]
[81.33268738 -68.64605713]
[69.43016815 -59.47066879]
[56.29302216 -52.17183304]
[42.21473312 -46.91260529]
[45.31305695 -32.23608017]
[48.41137695 -17.55955505]
[51.50970078 -2.88302898]
[54.60802078 11.79349613]
[69.88819885 10.86216545]
[83.61037445 16.49060822]
[93.19693756 27.17512894]
[97.04369354 40.50945282]
[94.77973938 53.71831512]
[87.26408386 64.23349762]
[94.98817444 77.09190369]
[110.72071838 76.64941406]
[124.59017944 86.73867035]
[129.83784485 104.54653931]
[144.70089722 106.56887054]
[159.56393433 108.59120941]
[174.42698669 110.61354065]
[189.29003906 112.63587189]
[204.15307617 114.65821075]
[214.91336060 107.47001648]
[227.28633118 109.50197601]
[234.69145203 119.11817169]
[249.50921631 121.44927979]
[263.27267456 113.20629883]
[278.24758911 118.96231842]
[282.94647217 134.30180359]
[273.76473999 147.45762634]
[257.74584961 148.33775330]
[247.17811584 136.26702881]
[232.36035156 133.93592834]
[216.38473511 141.13174438]
[202.13073730 129.52125549]
[187.26770020 127.49892426]
[172.40464783 125.47658539]
[157.54161072 123.45425415]
[142.67855835 121.43191528]
[127.81550598 119.40958405]
[116.72419739 129.50823975]
[117.34817505 144.49525452]
[117.97215271 159.48226929]
[118.59612274 174.46928406]
[119.22010040 189.45629883]
[119.84407806 204.44331360]
[120.46805573 219.43032837]
[121.09203339 234.41734314]
[121.71601105 249.40435791]
[122.33998871 264.39138794]
[137.09300232 267.52182007]
[150.60363770 274.22357178]
[162.02261353 284.07537842]
[170.63212585 296.45788574]
[175.89097595 310.59280396]
[177.46858215 325.59152222]
[175.26577759 340.51126099]
[169.42102051 354.41412354]
[160.30174255 366.42617798]
[148.48117065 375.79235840]
[134.70236206 381.92382812]
[119.83146667 384.43524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[23 102]
[24 101]
[26 37]
[27 36]
[28 35]
[29 34]
[46 95]
[47 94]
[48 93]
[49 92]
[50 91]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[113 121]
[114 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
