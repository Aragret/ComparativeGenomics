%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGGCCUCCUAGGGGGGGGGGUUUAUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGGxxxxxxxxxxCCUCCGGCCUAGCCAUGUGAUUUCACUUCCACUCCAUAACGCUCCUCAUACCCCCCCCCCCUAGGCCUACUA\
) } def
/len { sequence length } bind def

/coor [
[102.94248962 473.05438232]
[88.78188324 467.89938354]
[76.19213867 459.61718750]
[65.85220337 448.65438843]
[58.31969070 435.60226440]
[54.00082397 421.16467285]
[53.12851715 406.12020874]
[55.74980545 391.28021240]
[61.72333527 377.44497681]
[70.72695160 365.36062622]
[82.27510834 355.67886353]
[95.74502563 348.92178345]
[110.41028595 345.45379639]
[110.41028595 330.45379639]
[110.41028595 315.45379639]
[110.41028595 300.45379639]
[110.41028595 285.45379639]
[110.41028595 270.45379639]
[110.41028595 255.45381165]
[110.41028595 240.45381165]
[110.41028595 225.45381165]
[110.41028595 210.45381165]
[110.41028595 195.45381165]
[108.89276123 180.53077698]
[105.87328339 165.83781433]
[102.85380554 151.14486694]
[99.83432770 136.45191956]
[78.87383270 129.70614624]
[65.62195587 112.12105560]
[50.75193787 114.09150696]
[35.88192368 116.06195831]
[21.01190948 118.03240967]
[11.60163879 130.72975159]
[-4.04286909 132.97137451]
[-16.64000511 123.42739105]
[-18.71611023 107.76005554]
[-9.03946972 95.26453400]
[6.64893818 93.35418701]
[19.04145813 103.16239929]
[33.91147232 101.19194794]
[48.78148651 99.22149658]
[63.65150070 97.25104523]
[68.87114716 81.03253174]
[80.89125061 68.95767975]
[75.82448578 54.83932495]
[70.75772095 40.72097015]
[65.69095612 26.60261726]
[60.48138046 12.53633499]
[55.12952042 -1.47643054]
[49.77766037 -15.48919678]
[35.04140472 -12.50713921]
[20.01529884 -11.99141312]
[5.10926342 -13.95608807]
[-9.27005482 -18.34756660]
[-22.73037529 -25.04604340]
[-34.90449142 -33.86878204]
[-45.46028900 -44.57509232]
[-54.10979080 -56.87289810]
[-60.61703491 -70.42670441]
[-64.80449677 -84.86675262]
[-66.55794525 -99.79911041]
[-65.82954407 -114.81640625]
[-62.63915634 -129.50897217]
[-57.07382584 -143.47596741]
[-49.28537750 -156.33636475]
[-39.48628616 -167.73933411]
[-27.94387627 -177.37377930]
[-14.97303486 -184.97688293]
[-0.92761511 -190.34121704]
[13.80921364 -193.32043457]
[28.83541870 -193.83326721]
[43.74107742 -191.86570740]
[58.11954880 -187.47146606]
[71.57858276 -180.77040100]
[83.75099945 -171.94531250]
[94.30472565 -161.23696899]
[102.95185852 -148.93750000]
[109.45648956 -135.38243103]
[113.64117432 -120.94158173]
[115.39174652 -106.00888824]
[114.66044617 -90.99172974]
[111.46723175 -76.29978943]
[105.89921570 -62.33386230]
[98.10828400 -49.47496033]
[88.30699921 -38.07388306]
[76.76273346 -28.44165611]
[63.79042816 -20.84105492]
[69.14228821 -6.82828951]
[74.49414825 7.18447638]
[79.85013580 12.34131527]
[79.80931091 21.53585434]
[84.87607574 35.65420532]
[89.94284058 49.77256012]
[95.00960541 63.89091492]
[103.05113983 63.67561722]
[110.94408417 65.22936249]
[118.30403900 68.47647858]
[124.77256775 73.25882721]
[130.03463745 79.34350586]
[143.87825012 73.56816101]
[157.72184753 67.79281616]
[159.60839844 52.55023193]
[168.87629700 40.30271149]
[183.03251648 34.34478378]
[198.26911926 36.27910233]
[210.48751831 45.58534241]
[216.40104675 59.76016998]
[214.41897583 74.99063110]
[205.07449341 87.17980957]
[190.88119507 93.04887390]
[175.65701294 91.01908112]
[163.49719238 81.63642883]
[149.65357971 87.41176605]
[135.80998230 93.18711090]
[136.04722595 105.41917419]
[132.22392273 117.04079437]
[124.77075958 126.74284363]
[114.52727509 133.43244934]
[117.54675293 148.12539673]
[120.56623077 162.81834412]
[123.58570862 177.51129150]
[130.33850098 164.11726379]
[142.80960083 155.78231812]
[157.76800537 154.66587830]
[171.33822632 161.05720520]
[180.00447083 173.30039978]
[181.52148438 188.22349548]
[175.49621582 201.96017456]
[163.48971558 210.95149231]
[148.61265564 212.86798096]
[134.71940613 207.21310425]
[125.41028595 195.45381165]
[125.41028595 210.45381165]
[125.41028595 225.45381165]
[125.41028595 240.45381165]
[125.41028595 255.45381165]
[125.41028595 270.45379639]
[125.41028595 285.45379639]
[125.41028595 300.45379639]
[125.41028595 315.45379639]
[125.41028595 330.45379639]
[125.41028595 345.45379639]
[140.07554626 348.92178345]
[153.54545593 355.67886353]
[165.09361267 365.36062622]
[174.09722900 377.44497681]
[180.07077026 391.28021240]
[182.69204712 406.12020874]
[181.81974792 421.16467285]
[177.50088501 435.60226440]
[169.96836853 448.65438843]
[159.62843323 459.61718750]
[147.03868103 467.89938354]
[132.87808228 473.05438232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 121]
[25 120]
[26 119]
[27 118]
[29 42]
[30 41]
[31 40]
[32 39]
[44 94]
[45 93]
[46 92]
[47 91]
[48 89]
[49 88]
[50 87]
[99 114]
[100 113]
[101 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
