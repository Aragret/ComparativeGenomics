%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUCUCAGGGGGGGGGGUAUGAAGUCACCCUAGCCAUCAUUCUACUAUCAACAUUACUAAUAAGUGGxxxxxxxxxxCCUGCCCCUACUCCUCCUAGACCUAACCUGACUAGAAAAGCUAUUACCUACCCCCCCCCCAAACAAUUUCA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 429.94729614]
[71.01555634 424.39428711]
[58.81560135 415.52795410]
[49.20452881 403.90563965]
[42.78650284 390.25793457]
[39.96496582 375.44274902]
[40.91728210 360.39138794]
[45.58358765 346.04995728]
[53.67055511 333.32000732]
[64.66983032 323.00173950]
[77.88998413 315.74374390]
[92.50000000 312.00231934]
[92.50000000 297.00231934]
[92.50000000 282.00231934]
[92.50000000 267.00231934]
[92.50000000 252.00231934]
[92.50000000 237.00231934]
[92.50000000 222.00231934]
[92.50000000 207.00231934]
[92.50000000 192.00231934]
[92.50000000 177.00231934]
[92.50000000 162.00231934]
[92.50000000 147.00231934]
[84.76270294 134.27505493]
[92.50000000 120.47487640]
[78.35998535 102.67961121]
[87.73242188 81.97287750]
[84.07371521 67.42592621]
[80.41500854 52.87897110]
[76.75630188 38.33201599]
[73.09759521 23.78506470]
[58.30078506 26.29274750]
[43.35283661 27.63175011]
[28.34591103 27.79381371]
[13.37253189 26.77794075]
[-1.47498441 24.59039497]
[-16.10509491 21.24466133]
[-30.42760277 16.76136780]
[-44.35419846 11.16815853]
[-57.79902267 4.49951601]
[-70.67918396 -3.20344496]
[-82.91526031 -11.89323235]
[-94.43182373 -21.51626968]
[-105.15786743 -32.01322556]
[-115.02725983 -43.31938553]
[-123.97914886 -55.36503983]
[-131.95834351 -68.07592010]
[-138.91564941 -81.37366486]
[-144.80816650 -95.17628479]
[-149.59957886 -109.39867401]
[-153.26034546 -123.95315552]
[-155.76786804 -138.75000000]
[-157.10671997 -153.69795227]
[-157.26863098 -168.70487976]
[-156.25260925 -183.67825317]
[-154.06491089 -198.52574158]
[-150.71902466 -213.15582275]
[-146.23559570 -227.47828674]
[-140.64224243 -241.40483093]
[-133.97344971 -254.84957886]
[-126.27036285 -267.72967529]
[-117.58045197 -279.96566772]
[-107.95729828 -291.48211670]
[-97.46022797 -302.20806885]
[-86.15396881 -312.07733154]
[-74.10822296 -321.02908325]
[-61.39726257 -329.00814819]
[-48.09944534 -335.96533203]
[-34.29676819 -341.85772705]
[-20.07432747 -346.64898682]
[-5.51980782 -350.30960083]
[9.27705479 -352.81695557]
[24.22503090 -354.15567017]
[39.23196030 -354.31741333]
[54.20531845 -353.30123901]
[69.05278778 -351.11340332]
[83.68283081 -347.76736450]
[98.00524902 -343.28378296]
[111.93173218 -337.69027710]
[125.37641907 -331.02136230]
[138.25642395 -323.31814575]
[150.49232483 -314.62811279]
[162.00869751 -305.00482178]
[172.73451233 -294.50765991]
[182.60368347 -283.20129395]
[191.55531311 -271.15545654]
[199.53425598 -258.44442749]
[206.49128723 -245.14653015]
[212.38352966 -231.34379578]
[217.17465210 -217.12129211]
[220.83511353 -202.56674194]
[223.34234619 -187.76985168]
[224.68089294 -172.82186890]
[224.84249878 -157.81494141]
[223.82615662 -142.84158325]
[221.63815308 -127.99414062]
[218.29197693 -113.36412811]
[213.80824280 -99.04175568]
[208.21461487 -85.11533356]
[201.54554749 -71.67071533]
[193.84219360 -58.79079056]
[185.15203857 -46.55497742]
[175.52864075 -35.03870773]
[165.03135681 -24.31298637]
[153.72489929 -14.44394302]
[141.67897034 -5.49242401]
[128.96784973 2.48638201]
[115.66989136 9.44328117]
[101.86708832 15.33538246]
[87.64455414 20.12635803]
[91.30325317 34.67331314]
[94.96195984 49.22026443]
[98.62066650 63.76721954]
[102.27937317 78.31417084]
[109.63925934 80.44097900]
[115.80928802 84.98210907]
[120.02785492 91.37702942]
[121.77421570 98.83634186]
[136.11427307 103.23664093]
[150.90386963 97.01994324]
[164.91584778 104.83303070]
[167.40139771 120.68236542]
[156.45384216 132.40969849]
[140.47119141 131.01882935]
[131.71397400 117.57670593]
[117.37391663 113.17640686]
[112.96128082 117.53498840]
[107.50000000 120.47487640]
[115.23729706 134.27505493]
[107.50000000 147.00231934]
[107.50000000 162.00231934]
[107.50000000 177.00231934]
[107.50000000 192.00231934]
[107.50000000 207.00231934]
[107.50000000 222.00231934]
[107.50000000 237.00231934]
[107.50000000 252.00231934]
[107.50000000 267.00231934]
[107.50000000 282.00231934]
[107.50000000 297.00231934]
[107.50000000 312.00231934]
[122.11001587 315.74374390]
[135.33016968 323.00173950]
[146.32945251 333.32000732]
[154.41641235 346.04995728]
[159.08271790 360.39138794]
[160.03503418 375.44274902]
[157.21350098 390.25793457]
[150.79547119 403.90563965]
[141.18440247 415.52795410]
[128.98443604 424.39428711]
[114.96250153 429.94729614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[25 128]
[27 114]
[28 113]
[29 112]
[30 111]
[31 110]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
