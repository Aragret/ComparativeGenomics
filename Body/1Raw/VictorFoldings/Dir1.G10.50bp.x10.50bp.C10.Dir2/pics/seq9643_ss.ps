%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCAACAGGGGGGGGGGCCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUAGUCUUUGCCxxxxxxxxxxAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACUAAACCCCCCCCCCCCCACACUCAACA\
) } def
/len { sequence length } bind def

/coor [
[67.17142487 379.86337280]
[55.28715134 370.58828735]
[45.96844482 358.73815918]
[39.75708008 345.00198364]
[37.01417923 330.17837524]
[37.89920807 315.12911987]
[42.36071396 300.72915649]
[50.13931274 287.81573486]
[60.78276443 277.13955688]
[73.67227173 269.32138062]
[88.05845642 264.81570435]
[87.12283325 249.84492493]
[86.18720245 234.87413025]
[85.25157166 219.90333557]
[84.31594849 204.93254089]
[83.38031769 189.96176147]
[82.44468689 174.99096680]
[81.50906372 160.02017212]
[80.57343292 145.04937744]
[79.63780212 130.07859802]
[66.00779724 136.34141541]
[51.03252411 135.48048401]
[38.21004486 127.69690704]
[30.53554726 114.80884552]
[29.80171394 99.82680511]
[36.17995834 86.25042725]
[48.18038940 77.25100708]
[62.99984360 74.93070221]
[77.17665863 79.83152008]
[87.40018463 90.81030273]
[80.77168274 77.35433960]
[74.14318085 63.89837646]
[61.10403442 54.93784332]
[62.42070770 40.10155106]
[55.79220963 26.64558601]
[49.16371155 13.18962002]
[42.53521347 -0.26634577]
[38.70995712 -2.61770844]
[36.12941742 -5.76601934]
[34.89152145 -9.20832920]
[34.91600037 -12.46307659]
[35.96777725 -15.12786674]
[30.48074532 -29.08825684]
[18.23156357 -39.10165405]
[20.77694893 -53.77715302]
[14.68650341 -60.67340851]
[15.32430744 -68.08547974]
[10.12889194 -82.15700531]
[4.93347645 -96.22852325]
[-0.26193911 -110.30004120]
[-5.45735455 -124.37155914]
[-10.65277004 -138.44308472]
[-17.55976868 -151.75823975]
[-26.07085800 -164.10980225]
[-41.03358841 -161.27491760]
[-55.85428619 -164.77731323]
[-67.96517181 -174.01020813]
[-75.26796722 -187.37393188]
[-76.49742126 -202.55313110]
[-71.44051361 -216.91793823]
[-60.97339249 -227.97955322]
[-46.90954590 -233.82148743]
[-31.68562126 -233.43157959]
[-17.93925667 -226.87739563]
[-8.05209160 -215.29447937]
[-3.73713779 -200.68965149]
[-5.74198675 -185.59327698]
[-13.71928596 -172.62089539]
[-5.20819616 -160.26933289]
[-4.93181753 -175.26678467]
[1.71670532 -188.71286011]
[13.46644115 -198.03721619]
[28.07131195 -201.45741272]
[42.73945236 -198.31964111]
[54.66690445 -189.22370911]
[61.57361603 -175.90840149]
[62.13930130 -160.91908264]
[56.25582123 -147.12107849]
[45.04786682 -137.15203857]
[30.65794563 -132.91764832]
[15.83683395 -135.22732544]
[3.41874909 -143.63848877]
[8.61416435 -129.56697083]
[13.80957985 -115.49545288]
[19.00499535 -101.42393494]
[24.20041084 -87.35241699]
[29.39582634 -73.28089905]
[34.73733902 -59.26418686]
[46.59405136 -50.24932861]
[44.44113541 -34.57528687]
[49.92816544 -20.61489868]
[55.99118042 -6.89484453]
[62.61967850 6.56112099]
[69.24817657 20.01708603]
[75.87667847 33.47305298]
[88.44171143 41.47112274]
[87.59915161 57.26987839]
[94.22764587 70.72584534]
[100.85614777 84.18180847]
[113.79420471 91.77171326]
[128.77391052 90.99187469]
[142.15316772 82.54756927]
[155.26548767 89.61271667]
[170.24519348 88.83287048]
[174.95693970 74.40498352]
[184.56550598 62.65594101]
[197.77139282 55.17469025]
[212.78860474 52.97302246]
[227.58622742 56.34868622]
[240.16296387 64.84515381]
[248.81793213 77.31335449]
[252.38063049 92.06705475]
[250.36920166 107.11093903]
[243.05569458 120.41046143]
[231.42921448 130.16694641]
[217.06211853 135.06092834]
[201.89744568 134.43052673]
[187.98611450 128.36100769]
[177.20948792 117.67321777]
[171.02503967 103.81258392]
[156.04533386 104.59243011]
[143.73753357 112.98095703]
[129.55375671 105.97158813]
[114.57405090 106.75142670]
[109.58268738 112.34931183]
[114.28717041 126.59248352]
[99.59996033 123.54508209]
[94.60859680 129.14295959]
[95.54421997 144.11375427]
[96.47985077 159.08454895]
[97.41548157 174.05534363]
[98.35111237 189.02612305]
[99.28673553 203.99691772]
[100.22236633 218.96771240]
[101.15799713 233.93850708]
[102.09362030 248.90930176]
[103.02925110 263.88009644]
[117.86448669 266.55950928]
[131.62712097 272.71200562]
[143.51701355 281.97991943]
[152.84289551 293.82437134]
[159.06259155 307.55676270]
[161.81448364 322.37872314]
[160.93858337 337.42852783]
[156.48580933 351.83117676]
[148.71502686 364.74932861]
[138.07806396 375.43191528]
[125.19329071 383.25793457]
[110.80983734 387.77230835]
[95.76393127 388.71264648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[30 99]
[31 98]
[32 97]
[34 95]
[35 94]
[36 93]
[37 92]
[42 91]
[43 90]
[45 88]
[47 87]
[48 86]
[49 85]
[50 84]
[51 83]
[52 82]
[53 69]
[54 68]
[100 124]
[101 123]
[103 121]
[104 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
