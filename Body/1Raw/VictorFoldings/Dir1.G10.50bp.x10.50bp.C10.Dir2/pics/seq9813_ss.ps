%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAAUCAACGGGGGGGGGGAACAACCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACxxxxxxxxxxACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCCCCCCCCCCCGAAUCAAC\
) } def
/len { sequence length } bind def

/coor [
[83.88475037 388.72607422]
[70.66455078 381.45361328]
[59.77774429 371.00662231]
[51.96661758 358.09735107]
[47.76373291 343.60604858]
[47.45566177 328.52072144]
[51.06340408 313.86987305]
[58.34097672 300.65249634]
[68.79218292 289.76974487]
[81.70444489 281.96359253]
[96.19738007 277.76629639]
[95.88532257 262.76953125]
[95.57327271 247.77279663]
[95.26121521 232.77603149]
[94.94915771 217.77928162]
[94.63710022 202.78253174]
[94.32504272 187.78578186]
[94.01298523 172.78901672]
[93.70093536 157.79226685]
[93.38887787 142.79551697]
[93.07682037 127.79875946]
[80.13043213 120.63739014]
[72.48357391 107.97170258]
[72.17578125 93.17984009]
[79.28914642 80.20701599]
[91.92642975 72.51329803]
[91.61437225 57.51654053]
[91.30231476 42.51978683]
[90.99025726 27.52303314]
[90.67819977 12.52627945]
[90.36614227 -2.47047424]
[77.53257751 -14.31263733]
[77.20809937 -31.43510246]
[89.10645294 -43.27938461]
[88.48247528 -58.26639938]
[73.48490143 -58.82020569]
[58.57700348 -60.54900360]
[43.85070419 -63.44214249]
[29.39679909 -67.48178101]
[15.30439854 -72.64301300]
[1.66038907 -78.89402008]
[-11.45110798 -86.19626617]
[-23.94925690 -94.50471497]
[-35.75699615 -103.76815796]
[-46.80153275 -113.92947388]
[-57.01477051 -124.92601013]
[-66.33374023 -136.68998718]
[-74.70098114 -149.14884949]
[-82.06491089 -162.22579956]
[-88.38013458 -175.84020996]
[-93.60770416 -189.90812683]
[-97.71539307 -204.34284973]
[-100.67787933 -219.05534363]
[-102.47689819 -233.95494080]
[-103.10134888 -248.94973755]
[-102.54739380 -263.94732666]
[-100.81844330 -278.85519409]
[-97.92515564 -293.58145142]
[-93.88536835 -308.03530884]
[-88.72399139 -322.12768555]
[-82.47283936 -335.77160645]
[-75.17046356 -348.88302612]
[-66.86188507 -361.38110352]
[-57.59832382 -373.18875122]
[-47.43689728 -384.23318481]
[-36.44025040 -394.44631958]
[-24.67618752 -403.76516724]
[-12.21723747 -412.13226318]
[0.85978657 -419.49606323]
[14.47425842 -425.81115723]
[28.54224014 -431.03857422]
[42.97699738 -435.14611816]
[57.68952942 -438.10845947]
[72.58913422 -439.90731812]
[87.58394623 -440.53161621]
[102.58151245 -439.97750854]
[117.48937225 -438.24841309]
[132.21560669 -435.35498047]
[146.66943359 -431.31503296]
[160.76173401 -426.15350342]
[174.40560913 -419.90222168]
[187.51695251 -412.59970093]
[200.01493835 -404.29101562]
[211.82249451 -395.02731323]
[222.86682129 -384.86578369]
[233.07983398 -373.86904907]
[242.39855957 -362.10488892]
[250.76554871 -349.64584351]
[258.12921143 -336.56875610]
[264.44415283 -322.95419312]
[269.67144775 -308.88616943]
[273.77883911 -294.45138550]
[276.74102783 -279.73880005]
[278.53973389 -264.83917236]
[279.16387939 -249.84437561]
[278.60961914 -234.84680176]
[276.88037109 -219.93896484]
[273.98675537 -205.21275330]
[269.94668579 -190.75897217]
[264.78503418 -176.66673279]
[258.53359985 -163.02291870]
[251.23095703 -149.91163635]
[242.92211914 -137.41374207]
[233.65830994 -125.60628510]
[223.49665833 -114.56206512]
[212.49980164 -104.34916687]
[200.73554993 -95.03055573]
[188.27642822 -86.66369629]
[175.19926453 -79.30016327]
[161.58465576 -72.98535919]
[147.51657104 -67.75822449]
[133.08172607 -63.65097427]
[118.36913300 -60.68893814]
[103.46949768 -58.89037704]
[104.09346771 -43.90336227]
[114.72901154 -36.56291580]
[119.24323273 -24.24641991]
[115.76869965 -11.39513302]
[105.36289978 -2.78253031]
[105.67495728 12.21422291]
[105.98701477 27.21097755]
[106.29906464 42.20772934]
[106.61112213 57.20448303]
[106.92317963 72.20124054]
[119.86956787 79.36260986]
[127.51642609 92.02829742]
[127.82421875 106.82015991]
[120.71085358 119.79298401]
[108.07357025 127.48670197]
[108.38562775 142.48345947]
[108.69768524 157.48020935]
[109.00974274 172.47695923]
[109.32180023 187.47372437]
[109.63385773 202.47047424]
[109.94590759 217.46722412]
[110.25796509 232.46397400]
[110.57002258 247.46073914]
[110.88208008 262.45748901]
[111.19413757 277.45425415]
[125.84912872 281.04501343]
[139.07493591 288.30728149]
[149.96980286 298.74584961]
[157.79090881 311.64907837]
[162.00497437 326.13714600]
[162.32469177 341.22222900]
[158.72827148 355.87585449]
[151.46090698 369.09884644]
[141.01809692 379.98968506]
[128.11187744 387.80578613]
[113.62218475 392.01428223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[31 119]
[34 115]
[35 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
