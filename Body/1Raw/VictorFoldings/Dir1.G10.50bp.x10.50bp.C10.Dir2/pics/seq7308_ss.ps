%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCAUAAAGGGGGGGGGGCCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACACAUUCGAAGAACxxxxxxxxxxAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCCCCCCCCCCCAUAAA\
) } def
/len { sequence length } bind def

/coor [
[10.53782558 209.30650330]
[4.01864576 203.62901306]
[-2.14100862 197.56335449]
[-7.91806459 191.13223267]
[-13.29088306 184.35975647]
[-18.23933792 177.27128601]
[-22.74489403 169.89337158]
[-26.79067421 162.25366211]
[-30.36152267 154.38075256]
[-33.44406509 146.30415344]
[-47.85628128 150.46203613]
[-62.26849747 154.61991882]
[-76.68071747 158.77781677]
[-87.79539490 170.03723145]
[-102.16866302 166.13102722]
[-116.58087921 170.28890991]
[-130.99310303 174.44679260]
[-145.40531921 178.60467529]
[-159.81753540 182.76257324]
[-174.22975159 186.92045593]
[-188.64196777 191.07833862]
[-188.90318298 206.19201660]
[-193.60922241 220.55671692]
[-202.34161377 232.89515686]
[-214.32386780 242.11018372]
[-228.49055481 247.38241577]
[-243.58197021 248.24305725]
[-258.25619507 244.61558533]
[-271.20840454 236.82252502]
[-281.28689575 225.55685425]
[-287.59552002 211.82031250]
[-289.57327271 196.83432007]
[-287.04434204 181.93144226]
[-280.23355103 168.43681335]
[-269.74658203 157.55038452]
[-256.51583862 150.24017334]
[-241.71784973 147.15617371]
[-226.66844177 148.57263184]
[-212.70576477 154.36360168]
[-201.07139587 164.01412964]
[-192.79985046 176.66612244]
[-178.38763428 172.50823975]
[-163.97541809 168.35035706]
[-149.56320190 164.19245911]
[-135.15098572 160.03457642]
[-120.73876953 155.87669373]
[-106.32655334 151.71881104]
[-96.24272919 140.75679016]
[-80.83860016 144.36560059]
[-66.42638397 140.20770264]
[-52.01417160 136.04981995]
[-37.60195541 131.89193726]
[-41.23893738 101.71913147]
[-38.33743668 71.46675110]
[-29.03177452 42.53527451]
[-13.75274086 16.26406288]
[6.79233742 -6.13069677]
[31.65235138 -23.61226463]
[59.67643738 -35.37135315]
[89.56725311 -40.86359024]
[89.25519562 -55.86034393]
[88.94313812 -70.85709381]
[88.63108063 -85.85385132]
[88.16304016 -100.84654999]
[87.53906250 -115.83356476]
[86.91508484 -130.82057190]
[72.46006012 -135.38433838]
[60.43956375 -144.61924744]
[52.30514145 -157.41014099]
[49.03905487 -172.21246338]
[51.03570557 -187.23873901]
[58.05398941 -200.67449951]
[69.24640656 -210.89729309]
[83.26142883 -216.67268372]
[98.40666199 -217.30323792]
[112.85325623 -212.71284485]
[124.85671234 -203.45579529]
[132.96754456 -190.64993286]
[136.20634460 -175.84162903]
[134.18200684 -160.81904602]
[127.13897705 -147.39625549]
[115.92774200 -137.19410706]
[101.90209961 -131.44454956]
[102.52607727 -116.45754242]
[103.15005493 -101.47052765]
[106.59294891 -94.87567139]
[103.62783813 -86.16590881]
[103.93989563 -71.16915131]
[104.25194550 -56.17240143]
[104.56400299 -41.17564774]
[113.19175720 -40.63204193]
[121.77009583 -39.56165695]
[130.26689148 -37.96850586]
[138.65031433 -35.85855484]
[146.88894653 -33.23970795]
[154.95196533 -30.12177086]
[162.80912781 -26.51642799]
[170.43103027 -22.43717957]
[177.78910828 -17.89931107]
[184.85580444 -12.91981506]
[191.60466003 -7.51734638]
[198.01037598 -1.71214068]
[204.04896545 4.47405672]
[209.69781494 11.01807308]
[214.93576050 17.89539719]
[219.74316406 25.08026695]
[224.10205078 32.54577255]
[227.99607849 40.26394272]
[231.41065979 48.20587540]
[234.33300781 56.34181595]
[236.75216675 64.64128876]
[238.65908813 73.07321167]
[240.04661560 81.60599518]
[240.90956116 90.20767212]
[241.24468994 98.84603882]
[241.05075073 107.48872375]
[240.32846069 116.10335541]
[239.08052063 124.65766907]
[237.31163025 133.11962891]
[235.02839661 141.45751953]
[232.23937988 149.64012146]
[228.95501709 157.63677979]
[225.18760681 165.41754150]
[220.95129395 172.95326233]
[216.26190186 180.21572876]
[211.13702393 187.17771912]
[205.59585571 193.81315613]
[199.65914917 200.09718323]
[193.34913635 206.00628662]
[186.68945312 211.51829529]
[179.70506287 216.61259460]
[172.42210388 221.27008057]
[164.86787415 225.47331238]
[157.07066345 229.20654297]
[149.05967712 232.45581055]
[140.86491394 235.20892334]
[132.51708984 237.45556641]
[124.04746246 239.18733215]
[115.48776245 240.39773560]
[106.87004089 241.08222961]
[98.22658539 241.23826599]
[89.58977509 240.86524963]
[80.99196625 239.96459961]
[72.46534729 238.53965759]
[64.04187012 236.59577942]
[55.75308609 234.14024353]
[47.63004303 231.18223572]
[39.70316315 227.73286438]
[32.00214386 223.80502319]
[24.55582809 219.41343689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 52]
[11 51]
[12 50]
[13 49]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[60 90]
[61 89]
[62 88]
[63 87]
[64 85]
[65 84]
[66 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
