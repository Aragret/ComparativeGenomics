%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUACCCGCCGGGGGGGGGGGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCCAAAUAxxxxxxxxxxUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCCCCCCCCCCCUACCCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.79406738 384.36828613]
[70.57387543 377.09582520]
[59.68706894 366.64883423]
[51.87593842 353.73959351]
[47.67305756 339.24826050]
[47.36498260 324.16293335]
[50.97272491 309.51208496]
[58.25029755 296.29470825]
[68.70150757 285.41195679]
[81.61376953 277.60580444]
[96.10670471 273.40850830]
[95.79464722 258.41174316]
[95.48258972 243.41500854]
[95.17053223 228.41824341]
[94.85848236 213.42149353]
[94.54642487 198.42474365]
[94.23436737 183.42799377]
[93.92230988 168.43122864]
[93.61025238 153.43447876]
[93.29819489 138.43772888]
[92.98614502 123.44097137]
[92.67408752 108.44422150]
[92.20604706 93.45152283]
[91.58206940 78.46450806]
[82.61299133 69.13661957]
[82.43654633 56.59916306]
[90.60002899 47.61779785]
[90.28797150 32.62104416]
[89.97591400 17.62429047]
[74.98654175 16.92312813]
[60.07870102 15.21163273]
[45.32041550 12.49761391]
[30.77902031 8.79345417]
[16.52087021 4.11605501]
[2.61101770 -1.51324093]
[-10.88706589 -8.06874847]
[-23.91179276 -15.52055645]
[-36.40373230 -23.83466339]
[-48.30588913 -32.97313309]
[-59.56394958 -42.89427185]
[-70.12655640 -53.55280685]
[-79.94550323 -64.90010834]
[-88.97599030 -76.88439178]
[-97.17681885 -89.45098877]
[-104.51056671 -102.54255676]
[-110.94377136 -116.09935760]
[-116.44708252 -130.05953979]
[-120.99537659 -144.35939026]
[-124.56791687 -158.93368530]
[-127.14839935 -173.71589661]
[-128.72503662 -188.63861084]
[-129.29064941 -203.63371277]
[-128.84266663 -218.63278198]
[-127.38310242 -233.56739807]
[-124.91863251 -248.36940002]
[-121.46050262 -262.97125244]
[-117.02449036 -277.30633545]
[-111.63084412 -291.30926514]
[-105.30415344 -304.91610718]
[-98.07331085 -318.06475830]
[-89.97129059 -330.69531250]
[-81.03506470 -342.75003052]
[-71.30541229 -354.17401123]
[-60.82672501 -364.91503906]
[-49.64681625 -374.92416382]
[-37.81669617 -384.15570068]
[-25.39034653 -392.56753540]
[-12.42446327 -400.12124634]
[1.02179253 -406.78240967]
[14.88706779 -412.52062988]
[29.10809708 -417.30972290]
[43.61999512 -421.12780762]
[58.35654068 -423.95748901]
[73.25050354 -425.78585815]
[88.23391724 -426.60455322]
[103.23841858 -426.40985107]
[118.19554138 -425.20263672]
[133.03704834 -422.98840332]
[147.69520569 -419.77731323]
[162.10314941 -415.58395386]
[176.19511414 -410.42745972]
[189.90682983 -404.33142090]
[203.17572021 -397.32357788]
[215.94122314 -389.43597412]
[228.14512634 -380.70452881]
[239.73171997 -371.16912842]
[250.64814758 -360.87329102]
[260.84460449 -349.86395264]
[270.27453613 -338.19137573]
[278.89495850 -325.90881348]
[286.66650391 -313.07232666]
[293.55374146 -299.74044800]
[299.52523804 -285.97402954]
[304.55371094 -271.83587646]
[308.61627197 -257.39050293]
[311.69433594 -242.70382690]
[313.77389526 -227.84286499]
[314.84545898 -212.87541199]
[314.90408325 -197.86975098]
[313.94958496 -182.89437866]
[311.98626709 -168.01760864]
[309.02307129 -153.30732727]
[305.07357788 -138.83064270]
[300.15573120 -124.65361786]
[294.29205322 -110.84094238]
[287.50924683 -97.45563507]
[279.83825684 -84.55877686]
[271.31411743 -72.20920563]
[261.97570801 -60.46327209]
[251.86561584 -49.37457657]
[241.02999878 -38.99370956]
[229.51829529 -29.36803627]
[217.38302612 -20.54148102]
[204.67955017 -12.55431366]
[191.46585083 -5.44297981]
[177.80221558 0.76007235]
[163.75097656 6.02654028]
[149.37625122 10.33239365]
[134.74363708 13.65798664]
[119.91989899 15.98814392]
[104.97267151 17.31223297]
[105.28472900 32.30898666]
[105.59678650 47.30574036]
[115.49086761 61.76627731]
[106.56908417 77.84053040]
[107.19306183 92.82754517]
[110.66732025 100.16332245]
[107.67083740 108.13216400]
[107.98289490 123.12892151]
[108.29495239 138.12567139]
[108.60700989 153.12242126]
[108.91906738 168.11918640]
[109.23111725 183.11593628]
[109.54317474 198.11268616]
[109.85523224 213.10943604]
[110.16728973 228.10620117]
[110.47934723 243.10295105]
[110.79140472 258.09970093]
[111.10345459 273.09646606]
[125.75845337 276.68722534]
[138.98425293 283.94949341]
[149.87911987 294.38806152]
[157.70022583 307.29129028]
[161.91429138 321.77935791]
[162.23402405 336.86444092]
[158.63758850 351.51806641]
[151.37022400 364.74105835]
[140.92742920 375.63189697]
[128.02119446 383.44799805]
[113.53150177 387.65649414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 126]
[24 125]
[27 123]
[28 122]
[29 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
