%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCACCCUCGGGGGGGGGGUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACxxxxxxxxxxCUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCCCCCCCCCCCAUAACCCUC\
) } def
/len { sequence length } bind def

/coor [
[37.91985321 251.72994995]
[28.52532578 247.53742981]
[19.41226006 242.76393127]
[10.61653900 237.42823792]
[2.17279959 231.55136108]
[-5.88570738 225.15646362]
[-13.52724838 218.26870728]
[-20.72173119 210.91522217]
[-27.44082642 203.12496948]
[-39.52081680 212.01731873]
[-51.60080338 220.90966797]
[-63.68078995 229.80201721]
[-75.76078033 238.69436646]
[-87.84076691 247.58671570]
[-94.36764526 261.99887085]
[-109.20418549 263.31280518]
[-121.28417206 272.20513916]
[-127.81105042 286.61730957]
[-142.64758301 287.93124390]
[-154.72756958 296.82357788]
[-160.80482483 312.05511475]
[-177.07093811 314.13970947]
[-186.79272461 300.93295288]
[-179.96925354 286.02078247]
[-163.61991882 284.74359131]
[-151.53993225 275.85125732]
[-145.87710571 262.07513428]
[-130.17651367 260.12515259]
[-118.09653473 251.23281860]
[-112.43370056 237.45669556]
[-96.73311615 235.50672913]
[-84.65312958 226.61437988]
[-72.57314301 217.72203064]
[-60.49315262 208.82968140]
[-48.41316605 199.93733215]
[-36.33317566 191.04498291]
[-51.58312988 162.43778992]
[-60.90571213 131.38908386]
[-63.93637848 99.11297607]
[-60.55662155 66.87155151]
[-50.89860153 35.92554855]
[-64.42279053 29.43738365]
[-77.94698334 22.94921875]
[-90.57875061 31.68614960]
[-105.88794708 32.92067337]
[-119.75647736 26.32071114]
[-128.45376587 13.66161728]
[-129.64030457 -1.65137422]
[-122.99690247 -15.49914646]
[-110.31060791 -24.15671730]
[-94.99397278 -25.29524422]
[-81.16709137 -18.60846901]
[-72.54932404 -5.89509964]
[-71.45881653 9.42502975]
[-57.93462753 15.91319466]
[-44.41043472 22.40135956]
[-39.43761444 13.78472042]
[-33.95129013 5.48558426]
[-27.97166634 -2.46548533]
[-21.52076340 -10.03920746]
[-14.62233734 -17.20769119]
[-7.30179501 -23.94453430]
[0.41390553 -30.22493172]
[8.49635029 -36.02575302]
[16.91577339 -41.32563019]
[25.64116859 -46.10505676]
[34.64040375 -50.34642029]
[43.88033676 -54.03410721]
[53.32694244 -57.15453720]
[62.94543076 -59.69621658]
[72.70037842 -61.64978790]
[82.55585480 -63.00805283]
[92.47557831 -63.76601028]
[102.42301178 -63.92087173]
[112.36152649 -63.47206497]
[122.25451660 -62.42124176]
[132.06553650 -60.77227402]
[141.75848389 -58.53123093]
[151.29765320 -55.70637131]
[160.64788818 -52.30809402]
[169.77479553 -48.34891510]
[178.64474487 -43.84341431]
[187.22505188 -38.80818558]
[195.48416138 -33.26176834]
[203.39161682 -27.22459221]
[213.37434387 -38.42036057]
[223.35707092 -49.61612320]
[226.76629639 -65.06565094]
[241.01147461 -69.41579437]
[250.99420166 -80.61155701]
[260.97692871 -91.80732727]
[267.00521851 -107.65333557]
[283.90075684 -106.24725342]
[287.22677612 -89.62274933]
[272.17269897 -81.82460022]
[262.18997192 -70.62883759]
[252.20724487 -59.43306732]
[249.51205444 -44.78433990]
[234.55282593 -39.63339996]
[224.57011414 -28.43763161]
[214.58738708 -17.24186707]
[225.80281067 -5.11697054]
[235.74128723 8.07489491]
[244.30195618 22.19982910]
[251.39791870 37.11445618]
[256.95715332 52.66739273]
[260.92321777 68.70076752]
[263.25585938 85.05184174]
[263.93139648 101.55464172]
[262.94299316 118.04166412]
[277.76077271 120.37277222]
[292.57852173 122.70387268]
[307.39627075 125.03498077]
[322.21401978 127.36608124]
[335.97747803 119.12310028]
[350.95239258 124.87911987]
[355.65127563 140.21861267]
[346.46957397 153.37443542]
[330.45068359 154.25456238]
[319.88293457 142.18383789]
[305.06518555 139.85273743]
[290.24740601 137.52163696]
[275.42965698 135.19053650]
[260.61190796 132.85942078]
[258.23464966 142.86857605]
[255.23431396 152.70890808]
[251.62268066 162.34169006]
[247.41397095 171.72897339]
[242.62475586 180.83380127]
[237.27391052 189.62030029]
[231.38247681 198.05389404]
[224.97369385 206.10136414]
[218.07276917 213.73101807]
[210.70689392 220.91281128]
[202.90505981 227.61845398]
[194.69799805 233.82156372]
[186.11804199 239.49769592]
[177.19894409 244.62449646]
[167.97584534 249.18179321]
[158.48507690 253.15162659]
[148.76399231 256.51834106]
[138.85089111 259.26873779]
[128.78479004 261.39193726]
[118.60533905 262.87960815]
[108.35262299 263.72586060]
[98.06701660 263.92736816]
[87.78902435 263.48336792]
[77.55911255 262.39559937]
[67.41757202 260.66830444]
[57.40433884 258.30834961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[16 29]
[17 28]
[19 26]
[20 25]
[41 56]
[42 55]
[43 54]
[85 101]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
