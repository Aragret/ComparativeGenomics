%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCCCCGGGGGGGGGGGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAxxxxxxxxxxUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCACCCCCCCCCCCCCCUCACCC\
) } def
/len { sequence length } bind def

/coor [
[85.95470428 413.04702759]
[72.73451233 405.77456665]
[61.84770584 395.32754517]
[54.03657532 382.41830444]
[49.83369446 367.92700195]
[49.52561951 352.84164429]
[53.13336182 338.19082642]
[60.41093445 324.97344971]
[70.86214447 314.09066772]
[83.77440643 306.28451538]
[98.26734161 302.08724976]
[97.95528412 287.09048462]
[97.64322662 272.09375000]
[97.33116913 257.09698486]
[97.01911926 242.10023499]
[96.70706177 227.10346985]
[96.39500427 212.10671997]
[96.08294678 197.10997009]
[95.77088928 182.11322021]
[95.30284882 167.12051392]
[94.67887115 152.13349915]
[94.05489349 137.14648438]
[93.43091583 122.15946960]
[92.80693817 107.17245483]
[89.33267975 99.83667755]
[92.32916260 91.86783600]
[92.01710510 76.87107849]
[91.70504761 61.87432861]
[79.08586884 55.75859070]
[70.38536072 44.84564972]
[67.26426697 31.31037140]
[70.27861786 17.81884193]
[78.78166199 7.00323486]
[91.06160736 0.94828713]
[91.06160736 -14.05171299]
[91.06160736 -29.05171204]
[76.10004425 -30.22891426]
[61.27696991 -32.57636261]
[46.68376923 -36.07958984]
[32.41041565 -40.71699142]
[18.54491425 -46.45998001]
[5.17274761 -53.27314758]
[-7.62363815 -61.11448669]
[-19.76534843 -69.93565369]
[-31.17752457 -79.68225861]
[-41.78980637 -90.29421234]
[-51.53676224 -101.70609283]
[-60.35829926 -113.84753418]
[-68.20002747 -126.64367676]
[-75.01360321 -140.01564026]
[-80.75701904 -153.88096619]
[-85.39485931 -168.15417480]
[-88.89853668 -182.74726868]
[-91.24643707 -197.57026672]
[-92.42409515 -212.53179932]
[-92.42424774 -227.53959656]
[-91.24689484 -242.50114441]
[-88.89929199 -257.32418823]
[-85.39591980 -271.91735840]
[-80.75836945 -286.19067383]
[-75.01524353 -300.05612183]
[-68.20193481 -313.42819214]
[-60.36046600 -326.22451782]
[-51.53917694 -338.36611938]
[-41.79245377 -349.77819824]
[-31.18039131 -360.39038086]
[-19.76841354 -370.13720703]
[-7.62688398 -378.95861816]
[5.16934204 -386.80023193]
[18.54137039 -393.61367798]
[32.40675354 -399.35693359]
[46.68001175 -403.99462891]
[61.27313995 -407.49816895]
[76.09616852 -409.84591675]
[91.05770874 -411.02343750]
[106.06550598 -411.02343750]
[121.02704620 -409.84591675]
[135.85006714 -407.49816895]
[150.44320679 -403.99462891]
[164.71646118 -399.35693359]
[178.58184814 -393.61367798]
[191.95387268 -386.80023193]
[204.75009155 -378.95861816]
[216.89163208 -370.13720703]
[228.30360413 -360.39038086]
[238.91566467 -349.77819824]
[248.66238403 -338.36611938]
[257.48367310 -326.22451782]
[265.32513428 -313.42819214]
[272.13845825 -300.05612183]
[277.88159180 -286.19067383]
[282.51913452 -271.91735840]
[286.02252197 -257.32418823]
[288.37011719 -242.50114441]
[289.54745483 -227.53959656]
[289.54730225 -212.53179932]
[288.36965942 -197.57026672]
[286.02175903 -182.74726868]
[282.51806641 -168.15417480]
[277.88021851 -153.88096619]
[272.13681030 -140.01564026]
[265.32324219 -126.64367676]
[257.48150635 -113.84753418]
[248.65997314 -101.70609283]
[238.91300964 -90.29421234]
[228.30073547 -79.68225861]
[216.88856506 -69.93565369]
[204.74685669 -61.11448669]
[191.95046997 -53.27314758]
[178.57829285 -46.45998001]
[164.71279907 -40.71699142]
[150.43943787 -36.07958984]
[135.84623718 -32.57636261]
[121.02316284 -30.22891426]
[106.06160736 -29.05171204]
[106.06160736 -14.05171299]
[106.06160736 0.94828713]
[120.22805023 8.65953922]
[128.63694763 22.53298378]
[128.92236328 38.84704590]
[120.91244507 53.16964340]
[106.70180511 61.56227112]
[107.01385498 76.55902863]
[107.32591248 91.55577850]
[107.79395294 106.54847717]
[108.41793060 121.53549194]
[109.04190826 136.52250671]
[109.66588593 151.50952148]
[110.28986359 166.49653625]
[113.79248047 175.00439453]
[110.76764679 181.80116272]
[111.07970428 196.79791260]
[111.39175415 211.79466248]
[111.70381165 226.79141235]
[112.01586914 241.78817749]
[112.32792664 256.78491211]
[112.63998413 271.78167725]
[112.95204163 286.77844238]
[113.26409149 301.77517700]
[127.91909027 305.36596680]
[141.14489746 312.62820435]
[152.03976440 323.06680298]
[159.86085510 335.97003174]
[164.07493591 350.45806885]
[164.39465332 365.54318237]
[160.79823303 380.19677734]
[153.53086853 393.41979980]
[143.08805847 404.31063843]
[130.18183899 412.12673950]
[115.69213867 416.33520508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[26 124]
[27 123]
[28 122]
[34 117]
[35 116]
[36 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
