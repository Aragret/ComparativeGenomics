%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCAUCGCUGGGGGGGGGGCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAAxxxxxxxxxxAUACCUCUUUACGGACUCCACUUAUGACUCCCUAAAGCCCAUGUCGAAGCCCCCCCCCCCCCCCAUCGCU\
) } def
/len { sequence length } bind def

/coor [
[84.49959564 418.27447510]
[71.27940369 411.00201416]
[60.39259720 400.55499268]
[52.58146667 387.64575195]
[48.37858582 373.15444946]
[48.07051086 358.06909180]
[51.67825317 343.41827393]
[58.95582581 330.20089722]
[69.40703583 319.31811523]
[82.31929779 311.51196289]
[96.81223297 307.31469727]
[96.50017548 292.31793213]
[96.18811798 277.32116699]
[95.87606049 262.32443237]
[95.56401062 247.32766724]
[95.25195312 232.33091736]
[94.93989563 217.33416748]
[94.62783813 202.33740234]
[94.31578064 187.34065247]
[94.00372314 172.34390259]
[93.69167328 157.34715271]
[93.37961578 142.35038757]
[93.06755829 127.35363770]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[88.61082458 64.37953949]
[91.77640533 57.64717102]
[91.77640533 42.64717102]
[91.77640533 27.64717102]
[76.80678558 26.60060501]
[61.94664383 24.51235390]
[47.26836395 21.39259529]
[32.84346771 17.25652695]
[18.74222755 12.12429905]
[5.03334665 6.02091503]
[-8.21638775 -1.02388811]
[-20.94242477 -8.97579002]
[-33.08275986 -17.79604721]
[-44.57825089 -27.44169044]
[-55.37289047 -37.86572647]
[-65.41408539 -49.01736832]
[-74.65291595 -60.84228516]
[-83.04438019 -73.28286743]
[-90.54757690 -86.27851105]
[-97.12596893 -99.76589203]
[-102.74749756 -113.67931366]
[-107.38478088 -127.95097351]
[-111.01521301 -142.51135254]
[-113.62112427 -157.28950500]
[-115.18981171 -172.21345520]
[-115.71363068 -187.21046448]
[-115.19002533 -202.20747375]
[-113.62155151 -217.13143921]
[-111.01585388 -231.90963745]
[-107.38562775 -246.47006226]
[-102.74855042 -260.74179077]
[-97.12722015 -274.65530396]
[-90.54902649 -288.14276123]
[-83.04600525 -301.13851929]
[-74.65472412 -313.57922363]
[-65.41606140 -325.40426636]
[-55.37503052 -336.55606079]
[-44.58053970 -346.98025513]
[-33.08518600 -356.62606812]
[-20.94497681 -365.44650269]
[-8.21905518 -373.39859009]
[5.03057814 -380.44357300]
[18.73937225 -386.54714966]
[32.84053802 -391.67956543]
[47.26537704 -395.81585693]
[61.94361115 -398.93582153]
[76.80372620 -401.02429199]
[91.77333069 -402.07107544]
[106.77947998 -402.07107544]
[121.74908447 -401.02429199]
[136.60920715 -398.93582153]
[151.28742981 -395.81585693]
[165.71226501 -391.67956543]
[179.81344604 -386.54714966]
[193.52223206 -380.44357300]
[206.77186584 -373.39859009]
[219.49778748 -365.44650269]
[231.63800049 -356.62606812]
[243.13334656 -346.98025513]
[253.92784119 -336.55606079]
[263.96887207 -325.40426636]
[273.20755005 -313.57922363]
[281.59881592 -301.13851929]
[289.10183716 -288.14276123]
[295.68002319 -274.65530396]
[301.30136108 -260.74179077]
[305.93844604 -246.47006226]
[309.56866455 -231.90963745]
[312.17437744 -217.13143921]
[313.74282837 -202.20747375]
[314.26644897 -187.21046448]
[313.74261475 -172.21345520]
[312.17395020 -157.28950500]
[309.56802368 -142.51135254]
[305.93759155 -127.95097351]
[301.30032349 -113.67931366]
[295.67877197 -99.76589203]
[289.10040283 -86.27851105]
[281.59719849 -73.28286743]
[273.20571899 -60.84228516]
[263.96688843 -49.01736832]
[253.92570496 -37.86572647]
[243.13105774 -27.44169044]
[231.63557434 -17.79604721]
[219.49523926 -8.97579002]
[206.76919556 -1.02388811]
[193.51947021 6.02091503]
[179.81057739 12.12429905]
[165.70935059 17.25652695]
[151.28443909 21.39259529]
[136.60617065 24.51235390]
[121.74602509 26.60060501]
[106.77640533 27.64717102]
[106.77640533 42.64717102]
[106.77640533 57.64717102]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[108.06430817 127.04158020]
[108.37636566 142.03833008]
[108.68842316 157.03509521]
[109.00048065 172.03184509]
[109.31253815 187.02859497]
[109.62459564 202.02534485]
[109.93664551 217.02210999]
[110.24870300 232.01885986]
[110.56076050 247.01560974]
[110.87281799 262.01235962]
[111.18487549 277.00912476]
[111.49693298 292.00585938]
[111.80898285 307.00262451]
[126.46398163 310.59338379]
[139.68978882 317.85565186]
[150.58465576 328.29425049]
[158.40574646 341.19744873]
[162.61982727 355.68551636]
[162.93954468 370.77062988]
[159.34312439 385.42422485]
[152.07575989 398.64721680]
[141.63294983 409.53805542]
[128.72673035 417.35418701]
[114.23703003 421.56265259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[24 126]
[26 124]
[27 123]
[29 122]
[30 121]
[31 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
