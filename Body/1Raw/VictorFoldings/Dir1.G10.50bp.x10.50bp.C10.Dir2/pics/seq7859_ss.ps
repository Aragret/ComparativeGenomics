%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGCCCAUCGGGGGGGGGGGUCCUAGAAUUAAUUCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACxxxxxxxxxxCUCCUGCCUCACUCAUUUACACCAACCACCCAACUAUCUAUAAACCUAGCCCCCCCCCCCCAUGGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[85.11870575 364.13986206]
[71.27276611 358.12384033]
[59.56410217 348.59442139]
[50.86157990 336.25872803]
[45.81097794 322.03222656]
[44.78708649 306.97055054]
[47.86588669 292.19137573]
[54.81890488 278.79144287]
[65.13018799 267.76510620]
[78.03456879 259.93060303]
[92.57445526 255.86929321]
[92.57445526 240.86929321]
[92.57445526 225.86929321]
[92.57445526 210.86929321]
[92.57445526 195.86929321]
[92.57445526 180.86929321]
[92.57445526 165.86929321]
[92.57445526 150.86929321]
[92.57445526 135.86929321]
[92.57445526 120.86929321]
[92.57445526 105.86929321]
[89.75909424 101.36080933]
[89.70751190 95.59175110]
[92.89949799 90.24856567]
[93.52347565 75.26154327]
[94.14745331 60.27453232]
[94.77143097 45.28751373]
[84.34942627 33.71083069]
[85.19572449 18.52075386]
[96.29655457 8.65631008]
[96.92053223 -6.33070564]
[97.54450989 -21.31772232]
[82.63138580 -22.98609543]
[67.87097168 -25.69069862]
[53.33517456 -29.41835022]
[39.09481812 -34.15089417]
[25.21927834 -39.86526871]
[11.77615356 -46.53363800]
[-1.16905904 -54.12351227]
[-13.55329227 -62.59791565]
[-25.31621170 -71.91555786]
[-36.40050507 -82.03105164]
[-46.75217819 -92.89510345]
[-56.32078934 -104.45478821]
[-65.05972290 -116.65379333]
[-72.92641449 -129.43267822]
[-79.88252258 -142.72920227]
[-85.89416504 -156.47856140]
[-90.93204498 -170.61376953]
[-94.97163391 -185.06599426]
[-97.99324036 -199.76478577]
[-99.98214722 -214.63854980]
[-100.92865753 -229.61482239]
[-100.82817078 -244.62065125]
[-99.68116760 -259.58291626]
[-97.49324036 -274.42871094]
[-94.27504730 -289.08572388]
[-90.04226685 -303.48251343]
[-84.81552124 -317.54901123]
[-78.62027740 -331.21661377]
[-71.48671722 -344.41879272]
[-63.44959259 -357.09115601]
[-54.54806137 -369.17202759]
[-44.82548904 -380.60253906]
[-34.32924652 -391.32699585]
[-23.11047173 -401.29312134]
[-11.22381783 -410.45239258]
[1.27280009 -418.76016235]
[14.31850147 -426.17599487]
[27.84972763 -432.66372681]
[41.80055618 -438.19174194]
[56.10301590 -442.73315430]
[70.68743134 -446.26577759]
[85.48274231 -448.77246094]
[100.41687775 -450.24096680]
[115.41706085 -450.66412354]
[130.41023254 -450.03988647]
[145.32333374 -448.37130737]
[160.08370972 -445.66650391]
[174.61944580 -441.93862915]
[188.85974121 -437.20587158]
[202.73519897 -431.49130249]
[216.17822266 -424.82275391]
[229.12332153 -417.23269653]
[241.50744629 -408.75811768]
[253.27023315 -399.44030762]
[264.35437012 -389.32464600]
[274.70590210 -378.46044922]
[284.27435303 -366.90063477]
[293.01309204 -354.70150757]
[300.87960815 -341.92248535]
[307.83551025 -328.62588501]
[313.84695435 -314.87643433]
[318.88464355 -300.74114990]
[322.92404175 -286.28887939]
[325.94543457 -271.59002686]
[327.93411255 -256.71624756]
[328.88040161 -241.73994446]
[328.77972412 -226.73413086]
[327.63250732 -211.77188110]
[325.44436646 -196.92611694]
[322.22595215 -182.26914978]
[317.99295044 -167.87240601]
[312.76602173 -153.80599976]
[306.57058716 -140.13847351]
[299.43682861 -126.93640900]
[291.39953613 -114.26414490]
[282.49780273 -102.18339539]
[272.77508545 -90.75303650]
[262.27868652 -80.02874756]
[251.05976868 -70.06277466]
[239.17298889 -60.90367508]
[226.67623901 -52.59607315]
[213.63043213 -45.18043900]
[200.09912109 -38.69290161]
[186.14820862 -33.16506958]
[171.84568787 -28.62387466]
[157.26121521 -25.09143829]
[142.46586609 -22.58497429]
[127.53172302 -21.11669159]
[112.53152466 -20.69374466]
[111.90754700 -5.70672846]
[111.28356934 9.28028774]
[121.52600098 20.03334618]
[121.10668945 35.24119949]
[109.75844574 45.91149139]
[109.13446808 60.89850998]
[108.51049042 75.88552094]
[107.88651276 90.87254333]
[107.57445526 105.86929321]
[107.57445526 120.86929321]
[107.57445526 135.86929321]
[107.57445526 150.86929321]
[107.57445526 165.86929321]
[107.57445526 180.86929321]
[107.57445526 195.86929321]
[107.57445526 210.86929321]
[107.57445526 225.86929321]
[107.57445526 240.86929321]
[107.57445526 255.86929321]
[122.11434937 259.93060303]
[135.01872253 267.76510620]
[145.33001709 278.79144287]
[152.28303528 292.19137573]
[155.36183167 306.97055054]
[154.33793640 322.03222656]
[149.28733826 336.25872803]
[140.58480835 348.59442139]
[128.87615967 358.12384033]
[115.03021240 364.13986206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 129]
[25 128]
[26 127]
[27 126]
[30 123]
[31 122]
[32 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
