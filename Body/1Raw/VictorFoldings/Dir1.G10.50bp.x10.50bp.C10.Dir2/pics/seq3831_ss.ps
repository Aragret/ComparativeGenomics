%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCAUUCUAGGGGGGGGGGCUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACxxxxxxxxxxAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCUCCCCCCCCCCCCUCAUUCUA\
) } def
/len { sequence length } bind def

/coor [
[116.84954834 470.04754639]
[104.29132843 461.69638062]
[94.20510864 450.48394775]
[87.22491455 437.11502075]
[83.78952789 422.43002319]
[84.11490631 407.35208130]
[88.18058777 392.82894897]
[95.73101044 379.77362061]
[106.29154205 369.00671387]
[119.19833374 361.20507812]
[133.64006042 356.85913086]
[133.01608276 341.87210083]
[132.39210510 326.88510132]
[131.76812744 311.89807129]
[131.14414978 296.91107178]
[130.52017212 281.92404175]
[129.89619446 266.93704224]
[129.27221680 251.95001221]
[127.40460968 237.06674194]
[124.30628204 222.39021301]
[121.20796204 207.71368408]
[118.10964203 193.03715515]
[115.01132202 178.36064148]
[111.30516052 163.82569885]
[106.99757385 149.45751953]
[102.68998718 135.08932495]
[98.38240814 120.72114563]
[83.02851105 117.03506470]
[72.78254700 102.22713470]
[58.07458496 105.17262268]
[43.36662292 108.11810303]
[29.02315903 117.15698242]
[16.36685562 105.87628174]
[23.70309258 90.59178162]
[40.42114258 93.41014099]
[55.12910461 90.46466064]
[69.83706665 87.51918030]
[78.60327148 75.34734344]
[76.73565674 60.46406174]
[74.86804199 45.58078003]
[72.38292694 30.78807259]
[69.28460693 16.11154747]
[66.18628693 1.43502200]
[63.08796310 -13.24150372]
[59.98963928 -27.91802979]
[45.02825928 -26.60866356]
[30.01813889 -27.11228371]
[15.17816925 -29.42154503]
[0.72476286 -33.50276947]
[-13.13130760 -39.29644394]
[-26.18798065 -46.71807861]
[-38.25484848 -55.65944672]
[-49.15594864 -65.99015045]
[-58.73229980 -77.55953979]
[-66.84426117 -90.19890594]
[-73.37352753 -103.72391510]
[-78.22488403 -117.93734741]
[-81.32759094 -132.63192749]
[-82.63639832 -147.59335327]
[-82.13221741 -162.60345459]
[-79.82240295 -177.44334412]
[-75.74063873 -191.89659119]
[-69.94644165 -205.75245667]
[-62.52431870 -218.80883789]
[-53.58250427 -230.87538147]
[-43.25139236 -241.77609253]
[-31.68164253 -251.35200500]
[-19.04197502 -259.46350098]
[-5.51671696 -265.99224854]
[8.69689751 -270.84307861]
[23.39159012 -273.94525146]
[38.35306931 -275.25347900]
[53.36315155 -274.74874878]
[68.20294952 -272.43838501]
[82.65605164 -268.35607910]
[96.51168823 -262.56137085]
[109.56780243 -255.13874817]
[121.63400269 -246.19648743]
[132.53433228 -235.86495972]
[142.10981750 -224.29486084]
[150.22082520 -211.65489197]
[156.74908447 -198.12937927]
[161.59938049 -183.91558838]
[164.70098877 -169.22077942]
[166.00868225 -154.25924683]
[165.50337219 -139.24919128]
[163.19244385 -124.40947723]
[159.10960388 -109.95652771]
[153.31437683 -96.10110474]
[145.89126587 -83.04526520]
[136.94854736 -70.97940063]
[126.61663055 -60.07946396]
[115.04615784 -50.50440598]
[102.40589142 -42.39386749]
[88.88014221 -35.86611557]
[74.66616821 -31.01635170]
[77.76448822 -16.33982468]
[80.86280823 -1.66329980]
[83.96112823 13.01322556]
[87.05945587 27.68975067]
[89.40379333 29.33638573]
[91.21484375 32.04084015]
[92.07491302 35.59642029]
[91.65205383 39.64515305]
[89.75132751 43.71316528]
[91.61894226 58.59644699]
[93.48654938 73.47972870]
[115.53839874 80.24500275]
[122.95883179 100.06928253]
[112.75058746 116.41355896]
[117.05817413 130.78175354]
[121.36576080 145.14993286]
[125.67333984 159.51811218]
[129.05616760 162.47073364]
[131.07945251 166.00306702]
[131.72994995 169.60289001]
[131.16656494 172.80859375]
[129.68785095 175.26231384]
[132.78616333 189.93884277]
[135.88449097 204.61537170]
[138.98280334 219.29188538]
[142.08113098 233.96841431]
[149.87414551 221.15167236]
[163.64958191 215.21557617]
[178.31771851 218.35342407]
[188.45893860 229.40582275]
[190.32629395 244.28912354]
[183.22981262 257.50427246]
[169.79151917 264.16851807]
[154.97657776 261.81954956]
[144.25923157 251.32603455]
[144.88320923 266.31304932]
[145.50718689 281.30007935]
[146.13116455 296.28707886]
[146.75514221 311.27410889]
[147.37911987 326.26110840]
[148.00309753 341.24813843]
[148.62707520 356.23513794]
[163.38008118 359.36560059]
[176.89071655 366.06735229]
[188.30969238 375.91912842]
[196.91920471 388.30166626]
[202.17805481 402.43655396]
[203.75566101 417.43530273]
[201.55285645 432.35504150]
[195.70811462 446.25790405]
[186.58883667 458.26995850]
[174.76826477 467.63610840]
[160.98945618 473.76760864]
[146.11854553 476.27902222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 122]
[20 121]
[21 120]
[22 119]
[23 118]
[24 113]
[25 112]
[26 111]
[27 110]
[29 37]
[30 36]
[31 35]
[38 107]
[39 106]
[40 105]
[41 100]
[42 99]
[43 98]
[44 97]
[45 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
