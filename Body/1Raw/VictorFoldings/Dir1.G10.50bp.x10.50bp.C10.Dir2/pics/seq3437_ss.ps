%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAAACUCGGGGGGGGGGUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUxxxxxxxxxxUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGGGUGAGCCCCCCCCCCCAUCAAACUC\
) } def
/len { sequence length } bind def

/coor [
[85.18793488 152.87287903]
[71.47409821 146.91706848]
[59.87530518 137.48262024]
[51.25152969 125.26905060]
[46.24217987 111.18192291]
[45.21867371 96.26571655]
[48.25689697 81.62638092]
[55.13158417 68.34934998]
[65.33300781 57.41903687]
[78.10480499 49.64586639]
[92.50000000 45.60617065]
[92.50000000 30.60617256]
[92.50000000 15.60617256]
[92.50000000 0.60617250]
[92.50000000 -14.39382744]
[92.50000000 -29.39382744]
[92.50000000 -44.39382935]
[92.50000000 -59.39382935]
[92.50000000 -74.39382935]
[92.50000000 -89.39382935]
[92.50000000 -104.39382935]
[92.50000000 -119.39382935]
[92.50000000 -134.39382935]
[92.50000000 -149.39382935]
[92.50000000 -164.39382935]
[92.50000000 -179.39382935]
[77.52462006 -180.33584595]
[62.63793564 -182.21632385]
[47.89870453 -185.02783203]
[33.36509705 -188.75927734]
[19.09446907 -193.39593506]
[5.14313841 -198.91950989]
[-8.43383217 -205.30819702]
[-21.58286095 -212.53678894]
[-34.25205612 -220.57675171]
[-46.39141464 -229.39636230]
[-57.95302963 -238.96080017]
[-68.89127350 -249.23233032]
[-79.16297150 -260.17041016]
[-88.72759247 -271.73187256]
[-97.54739380 -283.87109375]
[-105.58755493 -296.54016113]
[-112.81634521 -309.68908691]
[-119.20524597 -323.26596069]
[-124.72904205 -337.21719360]
[-129.36592102 -351.48776245]
[-133.09759521 -366.02130127]
[-135.90933228 -380.76049805]
[-137.79003906 -395.64712524]
[-138.73229980 -410.62249756]
[-138.73237610 -425.62750244]
[-137.79028320 -440.60287476]
[-135.90972900 -455.48953247]
[-133.09814453 -470.22875977]
[-129.36662292 -484.76232910]
[-124.72988129 -499.03295898]
[-119.20623779 -512.98425293]
[-112.81748199 -526.56115723]
[-105.58882141 -539.71020508]
[-97.54878998 -552.37933350]
[-88.72911835 -564.51861572]
[-79.16461945 -576.08020020]
[-68.89303589 -587.01837158]
[-57.95489883 -597.29003906]
[-46.39338303 -606.85461426]
[-34.25411606 -615.67431641]
[-21.58500671 -623.71441650]
[-8.43605232 -630.94317627]
[5.14085150 -637.33197021]
[19.09212303 -642.85571289]
[33.36270523 -647.49249268]
[47.89627457 -651.22412109]
[62.63547516 -654.03576660]
[77.52213287 -655.91638184]
[92.49751282 -656.85858154]
[107.50248718 -656.85858154]
[122.47786713 -655.91638184]
[137.36453247 -654.03576660]
[152.10372925 -651.22412109]
[166.63729858 -647.49249268]
[180.90788269 -642.85571289]
[194.85914612 -637.33197021]
[208.43605042 -630.94317627]
[221.58500671 -623.71441650]
[234.25411987 -615.67431641]
[246.39338684 -606.85461426]
[257.95489502 -597.29003906]
[268.89303589 -587.01837158]
[279.16461182 -576.08020020]
[288.72912598 -564.51861572]
[297.54879761 -552.37933350]
[305.58880615 -539.71020508]
[312.81747437 -526.56115723]
[319.20623779 -512.98425293]
[324.72988892 -499.03295898]
[329.36660767 -484.76232910]
[333.09814453 -470.22875977]
[335.90972900 -455.48953247]
[337.79028320 -440.60287476]
[338.73236084 -425.62750244]
[338.73229980 -410.62249756]
[337.79003906 -395.64712524]
[335.90933228 -380.76049805]
[333.09759521 -366.02130127]
[329.36593628 -351.48776245]
[324.72903442 -337.21719360]
[319.20526123 -323.26596069]
[312.81634521 -309.68908691]
[305.58755493 -296.54016113]
[297.54739380 -283.87109375]
[288.72760010 -271.73187256]
[279.16296387 -260.17041016]
[268.89126587 -249.23233032]
[257.95303345 -238.96080017]
[246.39141846 -229.39636230]
[234.25205994 -220.57675171]
[221.58285522 -212.53678894]
[208.43383789 -205.30819702]
[194.85685730 -198.91950989]
[180.90553284 -193.39593506]
[166.63490295 -188.75927734]
[152.10128784 -185.02783203]
[137.36206055 -182.21632385]
[122.47537994 -180.33584595]
[107.50000000 -179.39382935]
[107.50000000 -164.39382935]
[107.50000000 -149.39382935]
[107.50000000 -134.39382935]
[107.50000000 -119.39382935]
[107.50000000 -104.39382935]
[107.50000000 -89.39382935]
[107.50000000 -74.39382935]
[107.50000000 -59.39382935]
[107.50000000 -44.39382935]
[107.50000000 -29.39382744]
[107.50000000 -14.39382744]
[107.50000000 0.60617250]
[107.50000000 15.60617256]
[107.50000000 30.60617256]
[107.50000000 45.60617065]
[121.89519501 49.64586639]
[134.66699219 57.41903687]
[144.86842346 68.34934998]
[151.74310303 81.62638092]
[154.78132629 96.26571655]
[153.75781250 111.18192291]
[148.74847412 125.26905060]
[140.12469482 137.48262024]
[128.52589417 146.91706848]
[114.81206512 152.87287903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
