%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGUCCCGGGGGGGGGGUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCUUCUUAUUAUUUGAUCxxxxxxxxxxUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACAACAUUUCCCCCCCCCCCCCCCGCAUCCC\
) } def
/len { sequence length } bind def

/coor [
[22.22798347 565.82958984]
[9.66976070 557.47839355]
[-0.41646245 546.26599121]
[-7.39665604 532.89709473]
[-10.83203983 518.21209717]
[-10.50666332 503.13412476]
[-6.44097853 488.61099243]
[1.10944092 475.55566406]
[11.66996956 464.78875732]
[24.57676506 456.98712158]
[39.01849365 452.64117432]
[38.39451599 437.65414429]
[37.77053833 422.66714478]
[37.14656067 407.68011475]
[36.52258301 392.69311523]
[35.89860535 377.70608521]
[35.27462769 362.71908569]
[34.65065002 347.73205566]
[34.02667236 332.74502563]
[33.40269852 317.75802612]
[24.54260063 329.86169434]
[10.87380695 336.03939819]
[-4.06556082 334.69207764]
[-16.40849113 326.16845703]
[-22.96005440 312.67486572]
[-22.02439880 297.70407104]
[-13.84371662 285.13122559]
[-0.53555089 278.21075439]
[14.45531940 278.73403931]
[27.24855232 286.56558228]
[34.53263474 299.67813110]
[37.01775360 284.88543701]
[39.50287247 270.09271240]
[41.98799133 255.30001831]
[35.21432877 245.22901917]
[37.20836639 232.84989929]
[47.43618011 224.92237854]
[50.22850418 210.18457031]
[44.99569702 196.23942566]
[55.16672134 184.12080383]
[57.95904541 169.38301086]
[60.75136948 154.64520264]
[63.54369354 139.90739441]
[66.33602142 125.16958618]
[69.12834167 110.43177795]
[67.72604370 95.49747467]
[62.23900986 81.53708649]
[56.75197601 67.57669067]
[42.04523087 70.70102692]
[27.02480888 71.36194611]
[12.10048199 69.54141998]
[-2.32060456 65.28910828]
[-15.84503269 58.72102737]
[-28.10384750 50.01635361]
[-38.76261520 39.41255569]
[-47.53056335 27.19891739]
[-54.16849136 13.70863342]
[-58.49531174 -0.69027257]
[-60.39298630 -15.60498619]
[-59.80974579 -30.62862396]
[-56.76150513 -45.35132980]
[-51.33141327 -59.37145996]
[-43.66761398 -72.30652618]
[-33.97917938 -83.80366516]
[-22.53042030 -93.54920959]
[-9.63366222 -101.27731323]
[4.35926008 -106.77713013]
[19.06660843 -109.89862823]
[34.08715820 -110.55664825]
[49.01113129 -108.73324585]
[63.43140030 -104.47816467]
[76.95455933 -97.90747833]
[89.21170044 -89.20043945]
[99.86842346 -78.59458923]
[108.63401794 -66.37926483]
[115.26934814 -52.88769913]
[119.59339142 -38.48796082]
[121.48819733 -23.57287979]
[120.90206146 -8.54935551]
[117.85098267 6.17276287]
[112.41819000 20.19184494]
[104.75189972 33.12543869]
[95.06124878 44.62070465]
[83.61061096 54.36404800]
[70.71236420 62.08966446]
[76.19940186 76.05004883]
[81.68643188 90.01044464]
[95.08378601 81.56403351]
[109.04568481 85.25390625]
[121.65681458 77.13236237]
[134.26794434 69.01081848]
[146.87907410 60.88927841]
[154.29219055 46.91229248]
[169.18180847 46.52635956]
[181.79293823 38.40481949]
[194.40405273 30.28327560]
[197.50352478 14.78589249]
[210.69963074 6.08887577]
[226.16337585 9.35201168]
[234.72039795 22.63933945]
[231.29394531 38.06772232]
[217.91690063 46.48377609]
[202.52560425 42.89440536]
[189.91447449 51.01594543]
[177.30334473 59.13748932]
[170.79225159 72.53356934]
[155.00061035 73.50040436]
[142.38948059 81.62194824]
[129.77835083 89.74349213]
[117.16722870 97.86502838]
[116.64541626 106.88141632]
[111.52493286 114.75689697]
[102.85256958 119.22587585]
[92.74314880 118.79642487]
[83.86614990 113.22410583]
[81.07382202 127.96191406]
[78.28150177 142.69972229]
[75.48917389 157.43753052]
[72.69685364 172.17532349]
[69.90452576 186.91313171]
[74.93761444 201.91242981]
[64.96630859 212.97689819]
[62.17398834 227.71469116]
[68.66858673 244.91352844]
[56.78069687 257.78512573]
[54.29557800 272.57785034]
[51.81045914 287.37054443]
[49.32534027 302.16326904]
[48.38971329 317.13403320]
[49.01369095 332.12106323]
[49.63766861 347.10809326]
[50.26164627 362.09509277]
[50.88562393 377.08212280]
[51.50959778 392.06912231]
[52.13357544 407.05615234]
[52.75755310 422.04315186]
[53.38153076 437.03018188]
[54.00550842 452.01718140]
[68.75851440 455.14764404]
[82.26914978 461.84939575]
[93.68812561 471.70117188]
[102.29764557 484.08370972]
[107.55648804 498.21859741]
[109.13409424 513.21734619]
[106.93128967 528.13708496]
[101.08654785 542.03991699]
[91.96726227 554.05200195]
[80.14669037 563.41815186]
[66.36788177 569.54968262]
[51.49698257 572.06103516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[31 128]
[32 127]
[33 126]
[34 125]
[37 123]
[38 122]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 87]
[47 86]
[48 85]
[89 110]
[90 109]
[91 108]
[92 107]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
