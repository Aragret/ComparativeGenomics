%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAUACCUAUGGGGGGGGGGUAUUCGGCGCAUGAGCUGGAGUCCUAGGCACAGCUCUAAGCCUCCUUAUUxxxxxxxxxxACACUCAUUCUCAACCCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUCCCCCCCCCCACUAUCCCUAU\
) } def
/len { sequence length } bind def

/coor [
[74.25606537 301.00531006]
[62.51047516 291.57901001]
[53.06621933 279.84786987]
[46.36502075 266.36053467]
[42.72031021 251.74786377]
[42.30255508 236.69331360]
[45.13129425 221.90100098]
[51.07422638 208.06280518]
[59.85338211 195.82595825]
[71.05815125 185.76280212]
[84.16446686 178.34399414]
[98.55931854 173.91654968]
[97.32870483 158.96711731]
[96.09809113 144.01766968]
[94.86747742 129.06823730]
[93.63687134 114.11880493]
[87.64857483 100.36597443]
[77.54313660 89.28084564]
[67.43770599 78.19570923]
[57.33226776 67.11057281]
[47.22683334 56.02544403]
[37.12139893 44.94030762]
[24.61736298 36.65483475]
[10.47004604 31.66951180]
[-3.65106678 38.24460983]
[-17.92744064 32.98725128]
[-24.10876846 19.48440933]
[-38.25608444 14.49908638]
[-56.23991013 18.32173729]
[-67.16738892 4.62375498]
[-81.41408539 -0.07004546]
[-96.85224152 8.09392738]
[-113.10834503 2.70219803]
[-120.31798553 -12.46105289]
[-134.65805054 -16.86135292]
[-148.99810791 -21.26165390]
[-163.33816528 -25.66195488]
[-177.67822266 -30.06225395]
[-192.01829529 -34.46255493]
[-203.79782104 -29.11034203]
[-215.67776489 -33.11512756]
[-221.43116760 -43.79972839]
[-235.67785645 -48.49353027]
[-250.59197998 -42.58179474]
[-264.44058228 -50.68092346]
[-266.60018921 -66.57795715]
[-255.41415405 -78.07804871]
[-239.46343994 -76.35931396]
[-230.98405457 -62.74022293]
[-216.73736572 -58.04642105]
[-199.80767822 -62.56641388]
[-187.61799622 -48.80261612]
[-173.27792358 -44.40231705]
[-158.93786621 -40.00201416]
[-144.59780884 -35.60171509]
[-130.25775146 -31.20141411]
[-115.91768646 -26.80111504]
[-105.45724487 -34.38607025]
[-92.34223175 -34.54443359]
[-81.38049316 -26.99317741]
[-76.72028351 -14.31673717]
[-62.47359085 -9.62293720]
[-51.49589539 -14.79521084]
[-39.56201172 -10.95415211]
[-33.27076340 0.35176995]
[-19.12344551 5.33709192]
[-5.84243965 -1.30748916]
[8.57596874 3.54680228]
[15.45536804 17.52219582]
[29.60268402 22.50751877]
[20.05381203 10.93949986]
[13.49017715 -2.54822373]
[10.27925301 -17.20052528]
[10.60080814 -32.19707870]
[14.43683910 -46.69828033]
[21.57258034 -59.89226532]
[31.60853004 -71.04034424]
[43.98281097 -79.51838684]
[58.00263214 -84.85173035]
[72.88307953 -86.74179077]
[87.79104614 -85.08274078]
[101.89189911 -79.96746826]
[114.39617920 -71.68235779]
[124.60381317 -60.69126129]
[131.94331360 -47.60953140]
[136.00378418 -33.16956711]
[136.55787659 -18.17980385]
[133.57458496 -3.47946572]
[127.22091675 10.10843086]
[117.85260010 21.82314873]
[105.99413300 31.00882721]
[92.30941772 37.15119171]
[77.56462097 39.90635300]
[62.58524323 39.12006378]
[48.20653152 34.83487320]
[58.31196594 45.92000961]
[68.41740417 57.00514221]
[78.52283478 68.09027863]
[88.62827301 79.17540741]
[98.73370361 90.26054382]
[107.34175873 84.66936493]
[120.63124084 87.40016937]
[135.56724548 88.78419495]
[150.50326538 90.16822052]
[165.43927002 91.55224609]
[180.37528992 92.93627167]
[185.76084900 78.83313751]
[194.75260925 66.70668030]
[206.68330383 57.45676422]
[220.66761780 51.76979065]
[235.66780090 50.06777573]
[250.57075500 52.47701645]
[264.27059937 58.81872940]
[275.75067139 68.62232208]
[284.15908813 81.16030121]
[288.87191772 95.50226593]
[289.53939819 110.58394623]
[286.11203003 125.28617859]
[278.84411621 138.51795959]
[268.27502441 149.29740906]
[255.18901062 156.82461548]
[240.55715942 160.54101562]
[225.46525574 160.17082214]
[211.03321838 155.74151611]
[198.33198547 147.58175659]
[188.30410767 136.29708862]
[181.69367981 122.72487640]
[178.99125671 107.87228394]
[164.05525208 106.48825836]
[149.11923218 105.10423279]
[134.18322754 103.72020721]
[119.24721527 102.33618164]
[108.58630371 112.88819122]
[109.81691742 127.83763123]
[111.04753113 142.78706360]
[112.27813721 157.73649597]
[113.50875092 172.68592834]
[128.43383789 174.69981384]
[142.57691956 179.87548828]
[155.27645874 187.97088623]
[165.93852234 198.60737610]
[174.06439209 211.28744507]
[179.27401733 225.41804504]
[181.32373047 240.33825684]
[180.11767578 255.35023499]
[175.71224976 269.75183105]
[168.31349182 282.86947632]
[158.26748657 294.08963013]
[146.04408264 302.88751221]
[132.21499634 308.85159302]
[117.42703247 311.70297241]
[102.37185669 311.30822754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 100]
[18 99]
[19 98]
[20 97]
[21 96]
[22 95]
[23 70]
[24 69]
[27 66]
[28 65]
[30 62]
[31 61]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[42 50]
[43 49]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
