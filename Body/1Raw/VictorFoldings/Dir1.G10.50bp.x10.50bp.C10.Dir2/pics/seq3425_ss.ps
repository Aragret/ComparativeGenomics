%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUUCGCUGGGGGGGGGGGACGCCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACxxxxxxxxxxCUCAUUCAUUUCUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGCCCCCCCCCCAAGCCUUCGCU\
) } def
/len { sequence length } bind def

/coor [
[87.84680176 471.17538452]
[73.28694153 467.26718140]
[60.08580017 459.98754883]
[49.01086807 449.75967407]
[40.70602798 437.17822266]
[35.65411758 422.97463989]
[34.14884186 407.97470093]
[36.27771759 393.05053711]
[41.91697693 379.06973267]
[50.73875809 366.84518433]
[62.23017502 357.08758545]
[75.72313690 350.36425781]
[90.43316650 347.06600952]
[90.74114990 332.06918335]
[91.04912567 317.07232666]
[91.35710144 302.07550049]
[91.66507721 287.07867432]
[91.97306061 272.08181763]
[92.28103638 257.08499146]
[92.58901215 242.08815002]
[92.89698792 227.09130859]
[93.20497131 212.09448242]
[90.17926025 205.30056763]
[93.67637634 196.79374695]
[86.46812439 183.75955200]
[94.76546478 170.28866577]
[94.76546478 155.28866577]
[94.14963531 140.30131531]
[93.53381348 125.31395721]
[87.96794891 123.19132996]
[83.02754974 119.86312866]
[78.96944427 115.50237274]
[76.00457764 110.33574677]
[74.28708649 104.63183594]
[59.38263702 102.94143677]
[44.47818756 101.25103760]
[29.57374001 99.56064606]
[14.66929340 97.87024689]
[1.27383256 106.69867706]
[-13.93520641 101.59331512]
[-19.29075050 86.47056580]
[-10.68448448 72.93129730]
[5.28160048 71.36168671]
[16.35968971 82.96579742]
[31.26413727 84.65619659]
[46.16858673 86.34659576]
[61.07303238 88.03698730]
[75.97747803 89.72738647]
[78.76459503 84.77943420]
[82.55500031 80.55058289]
[87.16960144 77.24063110]
[92.39038086 75.00596619]
[97.97068787 73.95216370]
[103.64686584 74.12900543]
[109.91626740 60.50202560]
[116.18567657 46.87504578]
[122.45507812 33.24806976]
[109.53302765 25.60447502]
[97.46539307 16.67271805]
[86.38011169 6.54747725]
[76.39468384 -4.66391373]
[67.61496735 -16.84260750]
[60.13402557 -29.85950279]
[54.03116608 -43.57661438]
[49.37108231 -57.84853363]
[46.20317459 -72.52397156]
[44.56101990 -87.44734955]
[44.46202850 -102.46048737]
[45.90725327 -117.40422821]
[48.88136673 -132.12016296]
[53.35284805 -146.45228577]
[59.27429581 -160.24868774]
[66.58293915 -173.36309814]
[75.20129395 -185.65650940]
[85.03801727 -196.99859619]
[95.98881531 -207.26913452]
[107.93762207 -216.35923767]
[120.75775909 -224.17256165]
[134.31333923 -230.62628174]
[148.46064758 -235.65196228]
[163.04972839 -239.19636536]
[177.92593384 -241.22187805]
[192.93154907 -241.70704651]
[207.90753174 -240.64672852]
[222.69509888 -238.05216980]
[237.13751221 -233.95086670]
[251.08166504 -228.38629150]
[264.37976074 -221.41744995]
[276.89080811 -213.11819458]
[288.48220825 -203.57650757]
[299.03103638 -192.89353943]
[308.42553711 -181.18252563]
[316.56607056 -168.56762695]
[323.36636353 -155.18257141]
[328.75433350 -141.16921997]
[332.67285156 -126.67614746]
[335.08041382 -111.85697937]
[335.95144653 -96.86880493]
[335.27673340 -81.87051392]
[333.06344604 -67.02108765]
[329.33502197 -52.47794724]
[324.13101196 -38.39525604]
[317.50656128 -24.92229271]
[309.53192139 -12.20188332]
[300.29156494 -0.36887017]
[289.88351440 10.45131016]
[278.41806030 20.14395714]
[266.01675415 28.60632324]
[252.81105042 35.74870300]
[238.94094849 41.49538422]
[224.55348206 45.78544998]
[209.80114746 48.57341766]
[194.84034729 49.82973862]
[179.82965088 49.54109192]
[164.92820740 47.71053696]
[150.29396057 44.35748291]
[136.08206177 39.51747131]
[129.81265259 53.14445114]
[123.54325104 66.77143097]
[117.27384186 80.39840698]
[125.63127136 105.06419373]
[108.52116394 124.69813538]
[109.13699341 139.68548584]
[109.75281525 154.67283630]
[112.29485321 158.36576843]
[113.38012695 162.28312683]
[113.12205505 165.92732239]
[111.78759766 168.89186096]
[109.75281525 170.90449524]
[116.91703033 185.01068115]
[108.66373444 197.40956116]
[108.20180511 212.40245056]
[107.89382935 227.39929199]
[107.58585358 242.39613342]
[107.27787018 257.39297485]
[106.96989441 272.38980103]
[106.66191864 287.38665771]
[106.35394287 302.38348389]
[106.04596710 317.38031006]
[105.73798370 332.37716675]
[105.43000793 347.37399292]
[119.99223328 351.27334595]
[133.19778442 358.54501343]
[144.27891541 368.76614380]
[152.59138489 381.34259033]
[157.65190125 395.54309082]
[159.16627502 410.54208374]
[157.04644775 425.46755981]
[151.41566467 439.45175171]
[142.60130310 451.68167114]
[131.11579895 461.44622803]
[117.62691498 468.17776489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[24 131]
[26 129]
[27 124]
[28 123]
[29 122]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[54 120]
[55 119]
[56 118]
[57 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
