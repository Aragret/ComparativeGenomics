%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCCCUACGGGGGGGGGGAAAUCUCCUUAAUUAUAACAUUCACAGCCACAGAACUAAUCAUAUUUUAUxxxxxxxxxxCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCCCCCCCCCCCAUCUGCCUAC\
) } def
/len { sequence length } bind def

/coor [
[89.87354279 557.14190674]
[77.31532288 548.79071045]
[67.22909546 537.57830811]
[60.24890137 524.20935059]
[56.81351852 509.52438354]
[57.13889694 494.44641113]
[61.20457840 479.92330933]
[68.75499725 466.86795044]
[79.31552887 456.10104370]
[92.22232056 448.29943848]
[106.66405487 443.95346069]
[106.04007721 428.96646118]
[105.41609955 413.97943115]
[104.79212189 398.99243164]
[104.16814423 384.00540161]
[103.54416656 369.01840210]
[102.92018890 354.03137207]
[102.29621124 339.04437256]
[101.67223358 324.05734253]
[101.04825592 309.07034302]
[100.42427826 294.08331299]
[86.00979614 290.11044312]
[73.51211548 281.86557007]
[64.16210938 270.14559937]
[58.88528061 256.09048462]
[58.21018982 241.07228088]
[62.21552277 226.56115723]
[70.52115631 213.98162842]
[82.32419586 204.57254028]
[96.47657013 199.26521301]
[95.85259247 184.27819824]
[95.22861481 169.29118347]
[94.60463715 154.30416870]
[93.98065948 139.31715393]
[93.35668182 124.33013916]
[92.73270416 109.34312439]
[83.87261200 121.44678497]
[70.20381927 127.62449646]
[55.26445007 126.27716064]
[42.92152023 117.75354767]
[36.36995697 104.25995636]
[37.30561066 89.28916168]
[45.48629379 76.71631622]
[58.79446030 69.79586029]
[73.78533173 70.31912994]
[86.57855988 78.15068054]
[93.86264801 91.26323700]
[96.34776306 76.47052765]
[98.83287811 61.67782211]
[93.48884583 46.78648758]
[103.22780609 35.51697540]
[105.71292114 20.72426605]
[91.27586365 16.59494972]
[77.39192200 10.87513065]
[64.23571777 3.63673997]
[51.97270203 -5.02919054]
[40.75708771 -15.01367855]
[30.72992325 -26.19115829]
[22.01731873 -38.42105865]
[14.72883701 -51.54957962]
[8.95614243 -65.41161346]
[4.77183199 -79.83283234]
[2.22852707 -94.63187408]
[1.35821283 -109.62262726]
[2.17183447 -124.61655426]
[4.65915966 -139.42510986]
[8.78890800 -153.86204529]
[14.50914288 -167.74581909]
[21.74792671 -180.90179443]
[30.41422462 -193.16456604]
[40.39904785 -204.37988281]
[51.57682419 -214.40670776]
[63.80698776 -223.11894226]
[76.93572998 -230.40702820]
[90.79793549 -236.17932129]
[105.21927643 -240.36318970]
[120.01839447 -242.90605164]
[135.00917053 -243.77592468]
[150.00308228 -242.96185303]
[164.81155396 -240.47409058]
[179.24836731 -236.34390259]
[193.13197327 -230.62326050]
[206.28773499 -223.38407898]
[218.55024719 -214.71740723]
[229.76525879 -204.73225403]
[239.79174805 -193.55416870]
[248.50363159 -181.32374573]
[255.79132080 -168.19479370]
[261.56317139 -154.33241272]
[265.74664307 -139.91094971]
[268.28906250 -125.11175537]
[269.15847778 -110.12094879]
[268.34396362 -95.12706757]
[265.85574341 -80.31866455]
[261.72512817 -65.88197327]
[256.00405884 -51.99855042]
[248.76449585 -38.84299469]
[240.09745789 -26.58075333]
[230.11196899 -15.36603355]
[218.93359375 -5.33987427]
[206.70291138 3.37163448]
[193.57373047 10.65893745]
[179.71118164 16.43038750]
[165.28958130 20.61340523]
[150.49031067 23.15538216]
[135.49949646 24.02435112]
[120.50563049 23.20938492]
[118.02050781 38.00209045]
[123.54229736 51.83535385]
[113.62558746 64.16294098]
[111.14047241 78.95565033]
[108.65534973 93.74835205]
[107.71972656 108.71914673]
[108.34370422 123.70616150]
[108.96767426 138.69317627]
[109.59165192 153.68019104]
[110.21562958 168.66720581]
[110.83960724 183.65422058]
[111.46358490 198.64123535]
[126.00815582 202.75378418]
[138.55247498 211.14916992]
[147.87503052 222.99476624]
[153.07273865 237.12271118]
[153.64837646 252.14508057]
[149.55815125 266.59017944]
[141.21472168 279.04678345]
[129.44564819 288.30200195]
[115.41129303 293.45935059]
[116.03527069 308.44635010]
[116.65924835 323.43338013]
[117.28322601 338.42037964]
[117.90720367 353.40740967]
[118.53118134 368.39440918]
[119.15515900 383.38143921]
[119.77913666 398.36843872]
[120.40311432 413.35546875]
[121.02709198 428.34246826]
[121.65106964 443.32949829]
[136.40406799 446.45993042]
[149.91470337 453.16168213]
[161.33369446 463.01348877]
[169.94320679 475.39602661]
[175.20204163 489.53091431]
[176.77964783 504.52963257]
[174.57684326 519.44940186]
[168.73210144 533.35223389]
[159.61282349 545.36431885]
[147.79225159 554.73046875]
[134.01344299 560.86193848]
[119.14253998 563.37335205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[47 112]
[48 111]
[49 110]
[51 108]
[52 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
