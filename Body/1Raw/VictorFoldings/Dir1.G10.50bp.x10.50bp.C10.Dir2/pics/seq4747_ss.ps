%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAAUAAAGGGGGGGGGGCAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGUUCCAxxxxxxxxxxCAUAACCAAUACUACCAAUCAAUACUCAUCAUUAAUAAUCAUAAUAGCUACCCCCCCCCCUAGCAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[85.00264740 351.56961060]
[71.15670776 345.55358887]
[59.44804764 336.02416992]
[50.74552155 323.68850708]
[45.69491959 309.46197510]
[44.67102814 294.40029907]
[47.74982834 279.62112427]
[54.70285034 266.22119141]
[65.01413727 255.19487000]
[77.91851807 247.36036682]
[92.45840454 243.29904175]
[92.45840454 228.29904175]
[92.45840454 213.29904175]
[92.45840454 198.29904175]
[92.45840454 183.29904175]
[92.45840454 168.29904175]
[92.45840454 153.29904175]
[92.45840454 138.29904175]
[92.45840454 123.29904938]
[92.45840454 108.29904938]
[79.95792389 116.58988953]
[65.61795807 112.18927765]
[59.91986084 98.31370544]
[67.02847290 85.10508728]
[81.74798584 82.21785736]
[93.31933594 91.76174927]
[94.87691498 76.84284210]
[96.43449402 61.92392731]
[97.99208069 47.00501633]
[99.54965973 32.08610535]
[93.28717804 17.55710220]
[102.30423737 5.70206356]
[103.86181641 -9.21684837]
[105.41939545 -24.13576126]
[106.97697449 -39.05467224]
[92.20281982 -41.68563461]
[77.65701294 -45.37581635]
[63.41540909 -50.10597229]
[49.55224609 -55.85144806]
[36.13980484 -62.58228683]
[23.24801254 -70.26338959]
[10.94407940 -78.85472870]
[-0.70784539 -88.31149292]
[-11.64701366 -98.58438110]
[-21.81639290 -109.61985016]
[-31.16296387 -121.36035156]
[-39.63799667 -133.74467468]
[-47.19731140 -146.70826721]
[-53.80148697 -160.18351746]
[-59.41610336 -174.10020447]
[-64.01187897 -188.38574219]
[-67.56485748 -202.96565247]
[-70.05651093 -217.76394653]
[-71.47385406 -232.70346069]
[-71.80950165 -247.70629883]
[-71.06169128 -262.69424438]
[-69.23432922 -277.58914185]
[-66.33694458 -292.31338501]
[-62.38463593 -306.79016113]
[-57.39801788 -320.94400024]
[-51.40307999 -334.70114136]
[-44.43108368 -347.98980713]
[-36.51837540 -360.74075317]
[-27.70620728 -372.88751221]
[-18.04052734 -384.36672974]
[-7.57172298 -395.11856079]
[3.64562273 -405.08694458]
[15.55302811 -414.21994019]
[28.08841133 -422.46990967]
[41.18642044 -429.79382324]
[54.77876663 -436.15353394]
[68.79458618 -441.51586914]
[83.16080475 -445.85287476]
[97.80252075 -449.14193726]
[112.64340210 -451.36587524]
[127.60607147 -452.51315308]
[142.61251831 -452.57775879]
[157.58451843 -451.55935669]
[172.44400024 -449.46325684]
[187.11349487 -446.30038452]
[201.51651001 -442.08724976]
[215.57798767 -436.84579468]
[229.22457886 -430.60336304]
[242.38516235 -423.39248657]
[254.99111938 -415.25073242]
[266.97671509 -406.22061157]
[278.27947998 -396.34918213]
[288.84045410 -385.68786621]
[298.60461426 -374.29232788]
[307.52105713 -362.22189331]
[315.54324341 -349.53955078]
[322.62939453 -336.31137085]
[328.74258423 -322.60638428]
[333.85086060 -308.49600220]
[337.92767334 -294.05377197]
[340.95172119 -279.35504150]
[342.90725708 -264.47640991]
[343.78408813 -249.49546814]
[343.57763672 -234.49029541]
[342.28897095 -219.53913879]
[339.92483521 -204.71994019]
[336.49752808 -190.10997009]
[332.02490234 -175.78540039]
[326.53033447 -161.82089233]
[320.04241943 -148.28927612]
[312.59500122 -135.26107788]
[304.22692871 -122.80423737]
[294.98178101 -110.98370361]
[284.90780640 -99.86108398]
[274.05746460 -89.49438477]
[262.48739624 -79.93764496]
[250.25790405 -71.24069214]
[237.43272400 -63.44887161]
[224.07873535 -56.60280228]
[210.26554871 -50.73817825]
[196.06520081 -45.88557434]
[181.55171204 -42.07029343]
[166.80075073 -39.31222153]
[151.88922119 -37.62574005]
[136.89488220 -37.01964569]
[121.89588928 -37.49709320]
[120.33831024 -22.57818031]
[118.78072357 -7.65926790]
[117.22314453 7.25964451]
[123.59703827 20.72154617]
[114.46856689 33.64368439]
[112.91098785 48.56259918]
[111.35340881 63.48151016]
[109.79582977 78.40042114]
[108.23824310 93.31933594]
[107.45840454 108.29904938]
[107.45840454 123.29904938]
[107.45840454 138.29904175]
[107.45840454 153.29904175]
[107.45840454 168.29904175]
[107.45840454 183.29904175]
[107.45840454 198.29904175]
[107.45840454 213.29904175]
[107.45840454 228.29904175]
[107.45840454 243.29904175]
[121.99829102 247.36036682]
[134.90266418 255.19487000]
[145.21395874 266.22119141]
[152.16697693 279.62112427]
[155.24577332 294.40029907]
[154.22187805 309.46197510]
[149.17127991 323.68850708]
[140.46875000 336.02416992]
[128.76010132 345.55358887]
[114.91415405 351.56961060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 130]
[27 129]
[28 128]
[29 127]
[30 126]
[32 124]
[33 123]
[34 122]
[35 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
