%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAACCCCCUGGGGGGGGGGGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAxxxxxxxxxxCUCCAAAUCACCACAGGACUAUUCCUAGCCAUGCACUACUCACCAGACGCCCCCCCCCCCCUCAACCGCCU\
) } def
/len { sequence length } bind def

/coor [
[70.81800079 401.69869995]
[56.79605484 396.14569092]
[44.59609604 387.27935791]
[34.98502731 375.65704346]
[28.56700134 362.00933838]
[25.74546432 347.19415283]
[26.69778061 332.14279175]
[31.36408615 317.80136108]
[39.45105362 305.07141113]
[50.45032501 294.75314331]
[63.67048645 287.49514771]
[78.28049469 283.75372314]
[78.28049469 268.75372314]
[78.28049469 253.75372314]
[78.28049469 238.75372314]
[78.28049469 223.75372314]
[78.28049469 208.75372314]
[78.28049469 193.75372314]
[78.28049469 178.75372314]
[78.28049469 163.75372314]
[78.28049469 148.75372314]
[78.28049469 133.75372314]
[67.40518188 123.42282104]
[52.42494202 124.19247437]
[37.44470215 124.96213531]
[22.46446037 125.73179626]
[19.15454865 140.46092224]
[11.99249268 153.75028992]
[1.50976396 164.61376953]
[-11.51574802 172.24519348]
[-26.11746597 176.07826233]
[-41.21184158 175.82853699]
[-55.67877579 171.51457214]
[-68.44472504 163.45645142]
[-78.56237030 152.25218201]
[-85.28091431 138.73316956]
[-88.10179901 123.90261841]
[-86.81569672 108.86106110]
[-81.51803589 94.72467041]
[-72.60195160 82.54247284]
[-60.72906876 73.21846008]
[-46.78043365 67.44454193]
[-31.79113007 65.64916992]
[-16.87346268 67.96558380]
[-3.13442159 74.22189331]
[8.40646458 83.95381927]
[16.89278603 96.43920898]
[21.69480133 110.75155640]
[36.67504120 109.98189545]
[51.65528488 109.21223450]
[66.63552094 108.44257355]
[66.26529694 98.93341064]
[68.50070953 89.87338257]
[73.06773376 81.94798279]
[79.52013397 75.72760010]
[87.28125763 71.62672424]
[95.69463348 69.87705994]
[104.07914734 70.51628876]
[111.78408813 73.39270020]
[121.18794250 61.70648956]
[123.55960083 43.47448730]
[140.11071777 37.72077560]
[149.27264404 25.84395218]
[158.43458557 13.96712875]
[167.59652710 2.09030485]
[176.26312256 -10.15264893]
[184.41979980 -22.74108887]
[192.57646179 -35.32952881]
[200.73312378 -47.91796875]
[187.20964050 -41.42832947]
[172.62123108 -37.93857193]
[157.62492371 -37.60586929]
[142.89610291 -40.44520569]
[129.09811401 -46.32869720]
[116.85237885 -54.99137878]
[106.71041870 -66.04309845]
[99.12898254 -78.98612213]
[94.44953156 -93.23753357]
[92.88281250 -108.15548706]
[94.49938202 -123.06812286]
[99.22643280 -137.30381775]
[106.85107422 -150.22143555]
[117.02991486 -161.23919678]
[129.30453491 -169.86091614]
[143.12210083 -175.69825745]
[157.86033630 -178.48835754]
[172.85545349 -178.10554504]
[187.43211365 -174.56704712]
[200.93383789 -168.03225708]
[212.75253296 -158.79545593]
[222.35592651 -147.27265930]
[229.31150818 -133.98281860]
[233.30601501 -119.52447510]
[234.15954590 -104.54877472]
[231.83366394 -89.73019409]
[226.43312073 -75.73612213]
[218.20286560 -63.19890213]
[231.76477051 -69.60787964]
[238.23561096 -76.14423370]
[245.67155457 -76.00601196]
[259.36218262 -82.13518524]
[273.05279541 -88.26435852]
[282.22106934 -101.86122131]
[298.55938721 -100.44992065]
[305.26025391 -85.48228455]
[295.43041992 -72.35572815]
[279.18197632 -74.57373810]
[265.49133301 -68.44456482]
[251.80072021 -62.31538773]
[238.17373657 -56.04598236]
[224.61184692 -49.63700867]
[213.32156372 -39.76130295]
[205.16490173 -27.17286110]
[197.00823975 -14.58442211]
[188.85156250 -1.99598324]
[189.34950256 0.82236558]
[188.72584534 4.01302242]
[186.83096313 7.13650894]
[183.68182373 9.70680809]
[179.47334290 11.25224018]
[170.31141663 23.12906456]
[161.14947510 35.00588608]
[151.98753357 46.88270950]
[153.21730042 58.95540237]
[145.62831116 68.93430328]
[132.87414551 71.11034393]
[123.47029114 82.79655457]
[130.41291809 99.00917053]
[126.78179932 117.06778717]
[112.98980713 130.43055725]
[93.28049469 133.75372314]
[93.28049469 148.75372314]
[93.28049469 163.75372314]
[93.28049469 178.75372314]
[93.28049469 193.75372314]
[93.28049469 208.75372314]
[93.28049469 223.75372314]
[93.28049469 238.75372314]
[93.28049469 253.75372314]
[93.28049469 268.75372314]
[93.28049469 283.75372314]
[107.89051056 287.49514771]
[121.11067200 294.75314331]
[132.10993958 305.07141113]
[140.19691467 317.80136108]
[144.86322021 332.14279175]
[145.81553650 347.19415283]
[142.99398804 362.00933838]
[136.57597351 375.65704346]
[126.96489716 387.27935791]
[114.76493835 396.14569092]
[100.74299622 401.69869995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 51]
[24 50]
[25 49]
[26 48]
[59 127]
[60 126]
[62 123]
[63 122]
[64 121]
[65 120]
[66 115]
[67 114]
[68 113]
[69 112]
[97 111]
[98 110]
[100 109]
[101 108]
[102 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
