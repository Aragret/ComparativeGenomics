%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAUUCUCAGGGGGGGGGGGGCUACACCCUAGACCAAACCUACGCCAAAAUCCAUUUCACUAUCAUAUUCAxxxxxxxxxxGAAAAUAACCCCACCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCCCCCCCCCCCUAUUCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[81.36901093 355.85717773]
[68.81976318 347.49255371]
[58.74558640 336.26928711]
[51.77975464 322.89288330]
[48.36014175 308.20422363]
[48.70170975 293.12661743]
[52.78298569 278.60787964]
[60.34741974 265.56063843]
[70.91950226 254.80508423]
[83.83467102 247.01731873]
[98.28105927 242.68687439]
[97.67317200 227.69920349]
[97.06529236 212.71151733]
[96.45740509 197.72384644]
[95.84951782 182.73617554]
[95.24163818 167.74848938]
[94.63375092 152.76081848]
[94.02587128 137.77313232]
[93.41798401 122.78546143]
[92.81010437 107.79778290]
[91.44388580 92.86013031]
[89.32284546 78.01084900]
[87.20179749 63.16156387]
[85.08075714 48.31228256]
[79.26306915 62.13814545]
[69.84632111 73.81396484]
[57.56609726 82.42768860]
[43.38167953 87.30644226]
[28.40108109 88.06912994]
[13.79451847 84.65616608]
[0.70298433 77.33416748]
[-9.85087109 66.67507935]
[-17.04263115 53.51154327]
[-20.31051064 38.87184143]
[-19.39923668 23.89954567]
[-14.37999535 9.76422787]
[-5.64486456 -2.42992997]
[6.12380791 -11.73037910]
[20.00671005 -17.41061211]
[34.91937256 -19.02691460]
[49.69689560 -16.45303154]
[63.18492126 -9.89002037]
[74.32983398 0.14944720]
[82.26104736 12.88113499]
[86.35924530 27.31220818]
[90.26599884 12.82989883]
[94.17274475 -1.65241051]
[98.07949829 -16.13471985]
[83.97769928 -21.27482224]
[70.36997223 -27.60816383]
[57.35707092 -35.08785629]
[45.03533554 -43.65852356]
[33.49599457 -53.25670242]
[22.82448769 -63.81134033]
[13.09981728 -75.24428558]
[4.39398718 -87.47089386]
[-3.22854853 -100.40064240]
[-9.71135330 -113.93780518]
[-15.00643063 -127.98214722]
[-19.07457733 -142.42968750]
[-21.88567162 -157.17347717]
[-23.41890335 -172.10433960]
[-23.66292000 -187.11174011]
[-22.61591339 -202.08454895]
[-20.28563690 -216.91192627]
[-16.68934441 -231.48410034]
[-11.85365868 -245.69317627]
[-5.81438494 -259.43392944]
[1.38376415 -272.60467529]
[9.68749523 -285.10784912]
[19.03532982 -296.85089111]
[29.35805702 -307.74688721]
[40.57925034 -317.71514893]
[52.61583328 -326.68188477]
[65.37868500 -334.58068848]
[78.77331543 -341.35308838]
[92.70055389 -346.94891357]
[107.05728149 -351.32678223]
[121.73721313 -354.45425415]
[136.63165283 -356.30819702]
[151.63032532 -356.87487793]
[166.62220764 -356.15005493]
[181.49626160 -354.13916016]
[196.14239502 -350.85702515]
[210.45214844 -346.32800293]
[224.31961060 -340.58560181]
[237.64207458 -333.67230225]
[250.32090759 -325.63934326]
[262.26226807 -316.54620361]
[273.37771606 -306.46014404]
[283.58496094 -295.45590210]
[292.80841064 -283.61489868]
[300.97982788 -271.02484131]
[308.03866577 -257.77893066]
[313.93270874 -243.97525024]
[318.61828613 -229.71597290]
[322.06069946 -215.10668945]
[324.23446655 -200.25555420]
[325.12350464 -185.27252197]
[324.72125244 -170.26853943]
[323.03063965 -155.35467529]
[320.06420898 -140.64135742]
[315.84393311 -126.23751831]
[310.40103149 -112.24980164]
[303.77581787 -98.78176117]
[296.01736450 -85.93312073]
[287.18307495 -73.79900360]
[277.33834839 -62.46924591]
[266.55612183 -52.02774048]
[254.91621399 -42.55178833]
[242.50477600 -34.11154556]
[229.41372681 -26.76950073]
[215.73995972 -20.58001900]
[201.58473206 -15.58892059]
[187.05284119 -11.83316040]
[172.25189209 -9.34054470]
[157.29144287 -8.12952900]
[142.28227234 -8.20907879]
[127.33551025 -9.57860470]
[112.56180573 -12.22796726]
[108.65505981 2.25434184]
[104.74830627 16.73665047]
[100.84155273 31.21895981]
[99.93003845 46.19123840]
[102.05107880 61.04052353]
[104.17212677 75.88980103]
[106.29316711 90.73908234]
[117.47316742 80.73870850]
[132.29568481 83.03935242]
[139.91833496 95.95814514]
[134.76530457 110.04523468]
[120.60591888 114.99619293]
[107.79778290 107.18989563]
[108.40566254 122.17757416]
[109.01354980 137.16525269]
[109.62142944 152.15292358]
[110.22931671 167.14060974]
[110.83719635 182.12828064]
[111.44508362 197.11596680]
[112.05296326 212.10363770]
[112.66085052 227.09132385]
[113.26873016 242.07899475]
[128.01837158 245.22528076]
[141.52180481 251.94154358]
[152.93019104 261.80557251]
[161.52639771 274.19735718]
[166.77006531 288.33789062]
[168.33157349 303.33831787]
[166.11274719 318.25567627]
[160.25306702 332.15225220]
[151.12089539 344.15451050]
[139.29028320 353.50796509]
[125.50489044 359.62466431]
[110.63130188 362.12008667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 142]
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 127]
[22 126]
[23 125]
[24 124]
[45 123]
[46 122]
[47 121]
[48 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
