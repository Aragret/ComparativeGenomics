%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUAGUAUAAAGGGGGGGGGGUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGxxxxxxxxxxAAUACCAACUAUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCCCCCCCCCCCUUGUAGUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[86.13014221 454.55523682]
[72.25601196 448.70697021]
[59.90120697 440.10159302]
[49.60583115 429.11529541]
[41.81995392 416.22833252]
[36.88394165 402.00405884]
[35.01357269 387.06433105]
[36.29061127 372.06225586]
[40.65923691 357.65362549]
[47.92846298 344.46832275]
[57.78051758 333.08276367]
[69.78470612 323.99468994]
[83.41625977 317.60137939]
[98.07926941 314.18231201]
[97.77913666 299.18533325]
[97.47900391 284.18832397]
[97.17887115 269.19134521]
[96.87873840 254.19433594]
[96.57860565 239.19734192]
[96.27847290 224.20034790]
[95.97834015 209.20333862]
[95.67820740 194.20634460]
[95.37807465 179.20935059]
[85.49677277 164.73558044]
[94.44282532 148.67019653]
[93.84268188 133.68220520]
[85.87936401 133.47892761]
[77.75041962 131.33351135]
[69.93801117 127.17510223]
[62.94441605 121.05335999]
[57.26190567 113.14312744]
[42.26265717 113.29320526]
[27.26340866 113.44327545]
[12.26415920 113.59335327]
[-2.73509026 113.74342346]
[-12.52595901 125.93656921]
[-27.87379456 128.93289185]
[-41.53181839 121.31761932]
[-47.05112839 106.68644714]
[-41.82567596 91.94776917]
[-28.32275963 84.06073761]
[-12.91804314 86.74936676]
[-2.88516378 98.74417114]
[12.11408520 98.59410095]
[27.11333466 98.44403076]
[42.11258316 98.29395294]
[57.11183167 98.14388275]
[60.03387070 91.23651886]
[50.99175644 79.26821899]
[65.87795258 77.42178345]
[68.79998779 70.51441956]
[58.46197891 59.64586639]
[48.12396622 48.77730942]
[37.78595352 37.90875244]
[27.44794083 27.04019737]
[17.10992813 16.17164230]
[1.30630219 16.02697945]
[-9.70648766 4.69146013]
[-9.39474869 -11.10975361]
[2.05657148 -22.00208282]
[17.85360718 -21.52330017]
[28.62425613 -9.95746040]
[27.97848511 5.83362961]
[38.31649780 16.70218468]
[48.65451050 27.57074165]
[58.99251938 38.43929672]
[69.33053589 49.30785370]
[79.66854858 60.17641068]
[95.34138489 58.06326294]
[109.84584045 61.56504059]
[112.82736969 46.86434555]
[115.80890656 32.16365051]
[102.29682922 25.44902039]
[90.98368073 15.46527672]
[82.64081573 2.89312649]
[77.83705902 -11.41024113]
[76.89993286 -26.46959686]
[79.89334106 -41.25817108]
[86.61318970 -54.76765060]
[96.60130310 -66.07694244]
[109.17667389 -74.41495514]
[123.48189545 -79.21318817]
[138.54161072 -80.14450073]
[153.32902527 -77.14537811]
[166.83590698 -70.42031860]
[178.14134216 -60.42784119]
[186.47450256 -47.84925079]
[191.26721191 -33.54217911]
[192.19270325 -18.48210335]
[189.18788147 -3.69584513]
[182.45759583 9.80844307]
[172.46075439 21.11001587]
[159.87895203 29.43831635]
[145.57003784 34.22550201]
[130.50959778 35.14517975]
[127.52806854 49.84587860]
[124.54653931 64.54657745]
[135.20606995 75.09998322]
[149.87619019 71.97151947]
[164.54632568 68.84306335]
[170.54559326 56.74652481]
[182.25427246 50.42211914]
[195.27273560 51.99068069]
[204.85481262 60.65385818]
[219.58460999 57.81955338]
[234.31439209 54.98525238]
[249.04418945 52.15094757]
[253.40701294 37.48042297]
[264.09616089 26.52592468]
[278.65530396 21.80471230]
[293.73886108 24.40169144]
[305.88079834 33.72008896]
[312.29092407 47.61861038]
[311.49624634 62.90347672]
[303.67941284 76.06233215]
[290.63662720 84.07138062]
[275.36508179 85.09018707]
[261.37402344 78.88464355]
[251.87849426 66.88073730]
[237.14869690 69.71504211]
[222.41891479 72.54934692]
[207.68911743 75.38364410]
[198.88943481 89.68593597]
[182.14460754 93.29619598]
[167.67478943 83.51319122]
[153.00465393 86.64165497]
[138.33453369 89.77011108]
[131.98855591 118.51057434]
[108.83067322 133.08206177]
[109.43081665 148.07005310]
[118.38197327 157.40728760]
[118.54316711 169.93939209]
[110.37507629 178.90922546]
[110.67520905 193.90621948]
[110.97534180 208.90321350]
[111.27546692 223.90020752]
[111.57559967 238.89720154]
[111.87573242 253.89421082]
[112.17586517 268.89120483]
[112.47599792 283.88818359]
[112.77613068 298.88519287]
[113.07626343 313.88220215]
[127.86432648 316.71185303]
[141.74075317 322.55465698]
[154.09893799 331.15515137]
[164.39863586 342.13742065]
[172.18959045 355.02133179]
[177.13119507 369.24362183]
[179.00744629 384.18261719]
[177.73629761 399.18521118]
[173.37335205 413.59558105]
[166.10931396 426.78372192]
[156.26173401 438.17315674]
[144.26112366 447.26596069]
[130.63208008 453.66461182]
[115.97042084 457.08944702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[25 130]
[26 129]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[70 97]
[71 96]
[72 95]
[98 127]
[99 126]
[100 125]
[104 122]
[105 121]
[106 120]
[107 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
