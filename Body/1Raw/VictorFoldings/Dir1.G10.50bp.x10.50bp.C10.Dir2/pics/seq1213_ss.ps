%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCCCCUCGGGGGGGGGGCCCAAUAAAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAxxxxxxxxxxCAUAUCCCUCUAGAGGAGCCUGUUCUGUAAUCGAUAAACCCCGAUCAACCCCCCCCCCCCUCACCACCUC\
) } def
/len { sequence length } bind def

/coor [
[82.21067047 369.49313354]
[69.65244293 361.14199829]
[59.56621933 349.92953491]
[52.58602905 336.56063843]
[49.15064240 321.87564087]
[49.47602081 306.79766846]
[53.54170609 292.27456665]
[61.09212494 279.21920776]
[71.65265656 268.45233154]
[84.55944824 260.65069580]
[99.00117493 256.30471802]
[98.37719727 241.31771851]
[97.75321960 226.33070374]
[97.12924194 211.34368896]
[96.50526428 196.35667419]
[95.88128662 181.36965942]
[95.25730896 166.38262939]
[94.63333130 151.39561462]
[94.00936127 136.40859985]
[93.38538361 121.42158508]
[83.49084473 116.28160858]
[77.01577759 106.74920654]
[75.80670166 94.91349792]
[80.50547791 83.57770538]
[90.31221008 75.59522247]
[103.09986115 73.15351105]
[98.19831085 58.97695541]
[86.37627411 48.46267700]
[89.52993774 33.90576553]
[84.62838745 19.72920799]
[59.03372955 11.67540359]
[47.29793167 -12.09166145]
[32.48017502 -14.42276573]
[17.64523697 -8.92411137]
[6.27502346 -18.54531479]
[-8.54273415 -20.87641716]
[-23.36049271 -23.20752144]
[-38.17824936 -25.53862572]
[-52.99600983 -27.86973000]
[-68.09704590 -21.47514153]
[-81.02062988 -31.57033730]
[-78.47209167 -47.77024460]
[-63.07314301 -53.40978622]
[-50.66490555 -42.68748856]
[-35.84714508 -40.35638428]
[-21.02938843 -38.02528000]
[-6.21163034 -35.69417572]
[8.60612774 -33.36307144]
[22.38120079 -39.02846146]
[34.81127930 -29.24052429]
[49.62903595 -26.90942001]
[52.26989365 -32.12372208]
[55.77587891 -36.80038071]
[60.04051590 -40.79737091]
[64.93429565 -43.99330139]
[70.30860138 -46.29111862]
[76.00020599 -47.62104034]
[77.24707794 -62.56912613]
[78.49394989 -77.51721191]
[79.74082947 -92.46530151]
[65.19783020 -96.29576111]
[51.54101181 -102.59356689]
[39.18537903 -111.16733551]
[28.50640869 -121.75651550]
[19.82862282 -134.03930664]
[13.41572666 -147.64247131]
[9.46260452 -162.15260315]
[8.08938694 -177.12876892]
[9.33780193 -192.11584473]
[13.16991425 -206.65840149]
[19.46926880 -220.31451416]
[28.04443550 -232.66917419]
[38.63482666 -243.34693909]
[50.91860580 -252.02333069]
[64.52249146 -258.43469238]
[79.03307343 -262.38616943]
[94.00939178 -263.75769043]
[108.99633026 -262.50756836]
[123.53845215 -258.67379761]
[137.19384766 -252.37290955]
[149.54753113 -243.79634094]
[160.22410583 -233.20474243]
[168.89910889 -220.91996765]
[175.30891418 -207.31535339]
[179.25874329 -192.80432129]
[180.62857056 -177.82785034]
[179.37675476 -162.84106445]
[175.54133606 -148.29936218]
[169.23889160 -134.64469910]
[160.66091919 -122.29197693]
[150.06809998 -111.61660767]
[137.78236389 -102.94300079]
[124.17701721 -96.53473663]
[109.66554260 -92.58654785]
[94.68891144 -91.21842957]
[93.44203949 -76.27033997]
[92.19516754 -61.32225418]
[90.94828796 -46.37416458]
[100.70728302 -41.52837753]
[108.42942810 -33.78720856]
[113.28515625 -23.94750595]
[114.74173737 -13.03330898]
[112.62162781 -2.18928313]
[107.12372589 7.43932962]
[98.80494690 14.82765675]
[103.70649719 29.00421524]
[115.17794037 38.50448990]
[112.37487030 54.07540512]
[117.27642059 68.25196075]
[128.67744446 77.99961853]
[143.44349670 80.63848114]
[158.20954895 83.27734375]
[172.97560120 85.91620636]
[184.06880188 75.06629181]
[199.42565918 72.84225464]
[213.14117432 80.09928894]
[219.94143677 94.04690552]
[217.21159363 109.32197571]
[206.00135803 120.05091095]
[190.62127686 122.10822296]
[176.98529053 114.70283508]
[170.33674622 100.68226624]
[155.57069397 98.04339600]
[140.80462646 95.40453339]
[126.03857422 92.76567078]
[125.75986481 102.42267609]
[122.16838837 110.94306946]
[116.02341461 117.28691864]
[108.37239838 120.79760742]
[108.99637604 135.78462219]
[109.62035370 150.77163696]
[110.24433136 165.75865173]
[110.86830902 180.74568176]
[111.49228668 195.73269653]
[112.11626434 210.71971130]
[112.74023438 225.70672607]
[113.36421204 240.69374084]
[113.98818970 255.68075562]
[128.74119568 258.81118774]
[142.25183105 265.51293945]
[153.67080688 275.36474609]
[162.28031921 287.74728394]
[167.53916931 301.88217163]
[169.11677551 316.88088989]
[166.91397095 331.80062866]
[161.06922913 345.70352173]
[151.94995117 357.71557617]
[140.12937927 367.08172607]
[126.35056305 373.21322632]
[111.47966766 375.72460938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[26 109]
[27 108]
[29 106]
[30 105]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[57 98]
[58 97]
[59 96]
[60 95]
[110 125]
[111 124]
[112 123]
[113 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
