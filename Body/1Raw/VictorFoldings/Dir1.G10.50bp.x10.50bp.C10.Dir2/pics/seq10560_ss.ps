%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUGCCCCCGGGGGGGGGGAUGUCUAACAACAUGGCUUUCUCAACUUUUAAAGGAUAACAGCUAUCCAUxxxxxxxxxxCUCAGGAUACUCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAAGACAACCACCCCCCCCCCUCAUUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 375.71545410]
[71.19830322 369.69943237]
[59.48964310 360.17001343]
[50.78712082 347.83435059]
[45.73651886 333.60781860]
[44.71262741 318.54614258]
[47.79142761 303.76699829]
[54.74444962 290.36706543]
[65.05573273 279.34072876]
[77.96011353 271.50622559]
[92.50000000 267.44491577]
[92.50000000 252.44490051]
[92.50000000 237.44490051]
[92.50000000 222.44490051]
[92.50000000 207.44490051]
[92.50000000 192.44490051]
[92.50000000 177.44490051]
[92.50000000 162.44490051]
[92.50000000 147.44490051]
[92.50000000 132.44490051]
[82.85228729 128.54606628]
[74.87893677 121.85987854]
[61.63635254 128.90501404]
[48.39376450 135.95014954]
[37.25017929 148.72734070]
[21.88746643 141.55633545]
[24.52540779 124.80886841]
[41.34863281 122.70755768]
[54.59121704 115.66242218]
[67.83380127 108.61728668]
[67.27638245 93.82855225]
[73.18203735 80.25869751]
[84.38437653 70.58785248]
[98.67087555 66.72605896]
[101.46320343 51.98825073]
[96.43011475 36.98896027]
[106.40142059 25.92449379]
[109.19374084 11.18668842]
[111.98606873 -3.55111742]
[114.77838898 -18.28892326]
[104.11854553 -7.73583460]
[90.12839508 -2.32513142]
[75.14181519 -2.95943999]
[61.65889740 -9.53294373]
[51.92889786 -20.94903564]
[47.57500076 -35.30325317]
[49.32353210 -50.20099258]
[56.88279724 -63.15697479]
[68.99173737 -72.00985718]
[83.63031769 -75.28276825]
[98.35649109 -72.42972565]
[110.71360016 -63.92667389]
[118.64019775 -51.19211578]
[120.81404877 -36.35187531]
[127.44254303 -49.80784225]
[134.07104492 -63.26380920]
[140.69953918 -76.71977234]
[147.32803345 -90.17573547]
[153.39105225 -103.89579010]
[158.87808228 -117.85617828]
[164.36511230 -131.81657410]
[169.85214233 -145.77696228]
[175.33917236 -159.73735046]
[178.43750000 -174.41387939]
[179.06147766 -189.40089417]
[179.68545532 -204.38790894]
[180.30943298 -219.37492371]
[180.93341064 -234.36193848]
[166.90777588 -240.11148071]
[155.69653320 -250.31364441]
[148.65350342 -263.73645020]
[146.62916565 -278.75900269]
[149.86796570 -293.56732178]
[157.97880554 -306.37319946]
[169.98225403 -315.63021851]
[184.42884827 -320.22064209]
[199.57408142 -319.59005737]
[213.58911133 -313.81469727]
[224.78152466 -303.59188843]
[231.79980469 -290.15612793]
[233.79646301 -275.12985229]
[230.53036499 -260.32754517]
[222.39595032 -247.53663635]
[210.37545776 -238.30172729]
[195.92042542 -233.73796082]
[195.29644775 -218.75094604]
[194.67247009 -203.76393127]
[194.04849243 -188.77691650]
[193.42451477 -173.78990173]
[201.99736023 -186.09869385]
[214.20744324 -194.81153870]
[228.63514709 -198.91539001]
[243.60295105 -197.93309021]
[257.37057495 -191.97886658]
[268.33724976 -181.74499512]
[275.22787476 -168.42137146]
[277.24133301 -153.55711365]
[274.14349365 -138.88049316]
[266.29455566 -126.09793091]
[254.60708618 -116.69564819]
[240.43997192 -111.76684570]
[225.44042969 -111.88458252]
[211.35244751 -117.03517914]
[199.81401062 -126.61977386]
[192.16668701 -139.52397156]
[189.29957581 -154.25032043]
[183.81253052 -140.28993225]
[178.32550049 -126.32954407]
[172.83847046 -112.36914825]
[167.35144043 -98.40876007]
[168.40321350 -95.74397278]
[168.42770386 -92.48921967]
[167.18980408 -89.04691315]
[164.60926819 -85.89860535]
[160.78401184 -83.54724121]
[154.15550232 -70.09127808]
[147.52700806 -56.63530731]
[140.89851379 -43.17934418]
[134.27000427 -29.72337723]
[129.51618958 -15.49659920]
[126.72386932 -0.75879306]
[123.93154907 13.97901249]
[121.13922119 28.71681976]
[126.37203217 42.66196060]
[116.20101166 54.78057480]
[113.40868378 69.51837921]
[126.38090515 79.67834473]
[132.89414978 94.81377411]
[131.35372925 111.21897888]
[122.13680267 124.87737274]
[107.50000000 132.44490051]
[107.50000000 147.44490051]
[107.50000000 162.44490051]
[107.50000000 177.44490051]
[107.50000000 192.44490051]
[107.50000000 207.44490051]
[107.50000000 222.44490051]
[107.50000000 237.44490051]
[107.50000000 252.44490051]
[107.50000000 267.44491577]
[122.03988647 271.50622559]
[134.94427490 279.34072876]
[145.25555420 290.36706543]
[152.20857239 303.76699829]
[155.28736877 318.54614258]
[154.26348877 333.60781860]
[149.21287537 347.83435059]
[140.51036072 360.17001343]
[128.80169678 369.69943237]
[114.95575714 375.71545410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 30]
[23 29]
[24 28]
[34 126]
[35 125]
[37 123]
[38 122]
[39 121]
[40 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
