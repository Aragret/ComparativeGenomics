%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCUUAAAGGGGGGGGGGACUCAAAGGACCUGGCGGUGCUUCAUAUCCCUCUAGAGGAGCCUGUUCUGxxxxxxxxxxGCAAGGAGAGCCAAAGCUAAGACCCCCGAAACCAGACGAGCUACCUAAGACCCCCCCCCCACAGCUAAAA\
) } def
/len { sequence length } bind def

/coor [
[103.09924316 372.20974731]
[89.25330353 366.19372559]
[77.54463959 356.66430664]
[68.84211731 344.32864380]
[63.79151535 330.10211182]
[62.76762390 315.04043579]
[65.84642029 300.26126099]
[72.79944611 286.86132812]
[83.11072540 275.83499146]
[96.01510620 268.00048828]
[110.55499268 263.93917847]
[110.55499268 248.93917847]
[110.55499268 233.93917847]
[110.55499268 218.93917847]
[110.55499268 203.93917847]
[110.55499268 188.93917847]
[110.55499268 173.93917847]
[110.55499268 158.93917847]
[110.55499268 143.93917847]
[110.55499268 128.93917847]
[104.90549469 124.00631714]
[99.01404572 137.80091858]
[84.07406616 136.46038818]
[80.73245239 121.83734131]
[93.60649109 114.14059448]
[87.95698547 109.20773315]
[73.09394073 111.23007202]
[58.23089218 113.25240326]
[45.59988022 122.77963257]
[31.94564819 116.82889557]
[17.08260155 118.85122681]
[2.21955490 120.87356567]
[-10.40906048 131.33540344]
[-25.68735123 125.37672424]
[-27.89832306 109.12730408]
[-14.76751614 99.30315399]
[0.19722044 106.01052094]
[15.06026745 103.98818207]
[29.92331505 101.96585083]
[41.49122238 92.58327484]
[56.20855713 98.38935852]
[71.07160187 96.36701965]
[85.93465424 94.34468842]
[71.31069946 91.00701904]
[61.08895874 80.02903748]
[58.80178070 65.20443726]
[65.23955536 51.65618896]
[78.17755890 44.06618881]
[93.14477539 45.05733871]
[104.96894836 54.28712082]
[109.56397247 68.56597900]
[105.34173584 82.95982361]
[114.35926819 70.97299194]
[123.37679291 58.98616028]
[122.35276794 46.08634567]
[130.16368103 36.27774811]
[142.17070007 34.50610733]
[151.43565369 22.70946884]
[160.70060730 10.91282845]
[169.84233093 -0.97955114]
[178.85986328 -12.96638393]
[187.87739563 -24.95321655]
[196.38848877 -37.30479050]
[204.37840271 -49.99971771]
[212.36831665 -62.69464874]
[201.33947754 -72.92209625]
[192.38017273 -84.99882507]
[185.79438782 -98.51265717]
[181.80508423 -113.00271606]
[180.54669189 -127.97512817]
[182.06063843 -142.91984558]
[186.29388428 -157.32806396]
[193.10086060 -170.70947266]
[202.24842834 -182.60902405]
[213.42388916 -192.62234497]
[226.24568176 -200.40951538]
[240.27635193 -205.70655823]
[255.03755188 -208.33445740]
[270.02630615 -208.20515442]
[284.73214722 -205.32452393]
[298.65451050 -199.79209900]
[306.64443970 -212.48703003]
[302.44256592 -229.43641663]
[311.59158325 -243.91328430]
[328.04364014 -247.25811768]
[335.76773071 -260.11651611]
[335.51086426 -276.51364136]
[349.71981812 -284.70132446]
[363.77758789 -276.25677490]
[363.22277832 -259.86700439]
[348.62612915 -252.39242554]
[340.90203857 -239.53402710]
[345.74502563 -227.55311584]
[342.73873901 -214.78453064]
[332.76712036 -205.96441650]
[319.33935547 -204.49711609]
[311.34945679 -191.80218506]
[322.35958862 -181.64260864]
[331.31771851 -169.62963867]
[337.91760254 -156.17152405]
[341.93313599 -141.72596741]
[343.22613525 -126.78452301]
[341.75112915 -111.85594940]
[337.55688477 -97.44879150]
[330.78482056 -84.05414581]
[321.66427612 -72.12883759]
[310.50473022 -62.07989502]
[297.68521118 -54.25065231]
[283.64160156 -48.90899658]
[268.85162354 -46.23821640]
[253.81872559 -46.33071518]
[239.05491638 -49.18481064]
[225.06324768 -54.70473099]
[217.07333374 -42.00980377]
[209.08341980 -29.31487274]
[209.62074280 -26.50086975]
[209.03890991 -23.29845619]
[207.18183899 -20.14675713]
[204.06033325 -17.53385735]
[199.86422729 -15.93568611]
[190.84669495 -3.94885397]
[181.82916260 8.03797913]
[180.31156921 15.32100868]
[172.49723816 20.17777824]
[163.23229980 31.97441864]
[153.96734619 43.77105713]
[152.45326233 61.22692871]
[135.36363220 68.00369263]
[126.34609985 79.99052429]
[117.32856750 91.97735596]
[125.55499268 128.93917847]
[125.55499268 143.93917847]
[125.55499268 158.93917847]
[125.55499268 173.93917847]
[125.55499268 188.93917847]
[125.55499268 203.93917847]
[125.55499268 218.93917847]
[125.55499268 233.93917847]
[125.55499268 248.93917847]
[125.55499268 263.93917847]
[140.09487915 268.00048828]
[152.99926758 275.83499146]
[163.31054688 286.86132812]
[170.26356506 300.26126099]
[173.34236145 315.04043579]
[172.31848145 330.10211182]
[167.26786804 344.32864380]
[158.56535339 356.66430664]
[146.85668945 366.19372559]
[133.01075745 372.20974731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 43]
[27 42]
[28 41]
[30 39]
[31 38]
[32 37]
[52 130]
[53 129]
[54 128]
[57 126]
[58 125]
[59 124]
[60 122]
[61 121]
[62 120]
[63 115]
[64 114]
[65 113]
[81 97]
[82 96]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
