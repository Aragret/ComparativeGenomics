%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAAUGCUGGGGGGGGGGUCACUCAGCCAUUUUACCUCACCCCCACUGAUGUUCGCCGACCGUUGACUxxxxxxxxxxGUCUCAAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUCCCCCCCCCCACUCCAAUGCU\
) } def
/len { sequence length } bind def

/coor [
[110.54915619 410.12500000]
[97.06027222 403.39349365]
[85.57477570 393.62890625]
[76.76040649 381.39901733]
[71.12962341 367.41482544]
[69.00979614 352.48934937]
[70.52416229 337.49035645]
[75.58468628 323.28982544]
[83.89715576 310.71340942]
[94.97828674 300.49224854]
[108.18383789 293.22061157]
[122.74606323 289.32125854]
[122.43808746 274.32440186]
[122.13011169 259.32757568]
[121.82212830 244.33073425]
[121.51415253 229.33390808]
[121.20617676 214.33706665]
[120.89820099 199.34022522]
[120.59021759 184.34338379]
[120.28224182 169.34655762]
[116.92298126 154.72753906]
[110.65357971 141.10057068]
[104.38417053 127.47358704]
[92.27899170 126.72835541]
[81.64106750 120.90379333]
[74.49198914 111.10677338]
[72.19033813 99.19907379]
[75.17350006 87.44358063]
[82.87457275 78.07424927]
[77.16990662 64.20137024]
[71.46524811 50.32848740]
[65.76058197 36.45560837]
[60.05591965 22.58272743]
[57.65873337 37.38993835]
[50.87987518 50.77078629]
[40.35907745 61.46250153]
[27.08919907 68.45609283]
[12.32253742 71.09156799]
[-2.54735661 69.12020874]
[-16.11719131 62.72806168]
[-27.10636330 52.51835632]
[-34.47780991 39.45459747]
[-37.53587723 24.76963043]
[-35.99197006 9.84929657]
[-29.99178886 -3.89835191]
[-20.10158157 -15.17593193]
[-7.25469971 -22.91916084]
[7.33648062 -26.39730263]
[22.29496765 -25.28211784]
[36.20911026 -19.67884827]
[47.76581192 -10.11628437]
[55.87356567 2.50114417]
[55.56558609 -12.49569416]
[55.25761032 -27.49253273]
[54.94963074 -42.48936844]
[45.43671036 -30.89177132]
[31.20944595 -26.13940811]
[16.63607025 -29.69141006]
[6.19108057 -40.45719910]
[3.08142686 -55.13132477]
[8.26187325 -69.20836639]
[20.14185524 -78.36620331]
[35.07383347 -79.79309082]
[48.47320938 -73.05093384]
[56.22546005 -60.21155548]
[58.67839050 -75.00963593]
[61.13131714 -89.80771637]
[63.58424377 -104.60579681]
[49.73072433 -110.55081940]
[37.70292282 -119.63902283]
[28.20012093 -131.34202576]
[21.77480125 -144.97943115]
[18.80052376 -159.75836182]
[19.45020676 -174.81962585]
[23.68607903 -189.28753662]
[31.26187515 -202.32098389]
[41.73714447 -213.16221619]
[54.50287247 -221.18092346]
[68.81687164 -225.91091919]
[83.84694672 -227.07719421]
[98.71927643 -224.61196899]
[112.56919098 -218.65853882]
[124.59147644 -209.56304932]
[134.08718872 -197.85427856]
[140.50422668 -184.21298218]
[143.46955872 -169.43225098]
[142.81072998 -154.37138367]
[138.56608582 -139.90603638]
[130.98239136 -126.87718201]
[120.50055695 -116.04231262]
[107.72997284 -108.03134918]
[93.41310883 -103.31003571]
[78.38232422 -102.15286255]
[75.92939758 -87.35478973]
[73.47647095 -72.55670929]
[71.02353668 -57.75862885]
[69.94647217 -42.79734802]
[70.25444794 -27.80051041]
[70.56242371 -12.80367184]
[70.87040710 2.19316649]
[73.92880249 16.87806320]
[79.63346100 30.75094414]
[85.33812714 44.62382507]
[91.04278564 58.49670410]
[96.74745178 72.36958313]
[113.85943604 75.87667847]
[125.50801086 88.89322662]
[127.10126495 106.28809357]
[118.01115417 121.20417786]
[124.28055573 134.83116150]
[130.54995728 148.45814514]
[132.23063660 133.55259705]
[137.96983337 119.69396210]
[147.31944275 107.96430969]
[159.54946899 99.27946472]
[173.70500183 94.31752014]
[188.68081665 93.46591187]
[203.30760193 96.79111481]
[216.44334412 104.03350830]
[227.06242371 114.62762451]
[234.33570862 127.74628448]
[237.69532776 142.36521912]
[236.87895203 157.34298706]
[231.95033264 171.51014709]
[223.29429626 183.76057434]
[211.58666992 193.13777161]
[197.74159241 198.90956116]
[182.84004211 200.62530518]
[168.04551697 198.15104675]
[154.51313782 191.67996216]
[143.29951477 181.71731567]
[135.27908325 169.03857422]
[135.58705139 184.03541565]
[135.89503479 199.03224182]
[136.20301819 214.02908325]
[136.51098633 229.02592468]
[136.81896973 244.02276611]
[137.12695312 259.01959229]
[137.43492126 274.01644897]
[137.74290466 289.01327515]
[152.45294189 292.31149292]
[165.94589233 299.03485107]
[177.43731689 308.79244995]
[186.25909424 321.01699829]
[191.89836121 334.99777222]
[194.02723694 349.92196655]
[192.52195740 364.92187500]
[187.47004700 379.12545776]
[179.16520691 391.70693970]
[168.09027100 401.93478394]
[154.88912964 409.21444702]
[140.32926941 413.12261963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 111]
[22 110]
[23 109]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[52 100]
[53 99]
[54 98]
[55 97]
[65 96]
[66 95]
[67 94]
[68 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
