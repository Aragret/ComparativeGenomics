%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUAGUACGGGGGGGGGGCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAxxxxxxxxxxAGCCACCCCUCACCCACUAGGAUACCAACAAACCUACCCACCCUUAACAGCCCCCCCCCCUACAUAGUAC\
) } def
/len { sequence length } bind def

/coor [
[91.24253845 460.19149780]
[77.39659882 454.17547607]
[65.68793488 444.64605713]
[56.98541260 432.31039429]
[51.93481064 418.08386230]
[50.91091919 403.02218628]
[53.98971939 388.24304199]
[60.94274139 374.84310913]
[71.25402832 363.81677246]
[84.15840912 355.98226929]
[98.69829559 351.92095947]
[98.69829559 336.92095947]
[98.69829559 321.92095947]
[98.69829559 306.92095947]
[98.69829559 291.92095947]
[98.69829559 276.92095947]
[98.69829559 261.92095947]
[98.69829559 246.92094421]
[98.69829559 231.92094421]
[98.69829559 216.92094421]
[98.69829559 201.92094421]
[98.54225922 186.92175293]
[98.23020172 171.92500305]
[97.91814423 156.92825317]
[97.60608673 141.93150330]
[97.29402924 126.93474579]
[79.38828278 102.85761261]
[64.97606659 98.69972992]
[50.56384659 94.54183960]
[59.85683441 106.31640625]
[63.23806000 120.93035126]
[60.06117249 135.59007263]
[50.93346024 147.49320984]
[37.59978104 154.36437988]
[22.60899544 154.89009094]
[8.82674217 148.96981812]
[-1.11236572 137.73532104]
[-5.30836964 123.33415222]
[-2.95916152 108.51925659]
[5.48618412 96.12263489]
[18.41325569 88.51403046]
[33.34944534 87.14772034]
[20.41139030 79.55780792]
[7.47333336 71.96790314]
[-5.46472263 64.37799072]
[-18.40277863 56.78808212]
[-31.34083366 49.19817352]
[-46.56949234 53.42469406]
[-60.28506470 45.57239151]
[-64.35034180 30.29989815]
[-56.35346985 16.66811371]
[-41.03884888 12.76453304]
[-27.49237251 20.90508270]
[-23.75092697 36.26012039]
[-10.81287003 43.85002899]
[2.12518573 51.43993759]
[15.06324196 59.02984238]
[28.00129700 66.61975098]
[40.93935394 74.20966339]
[54.72173691 80.12962341]
[69.13394928 84.28751373]
[83.54616547 88.44539642]
[96.40457153 80.72131348]
[99.50289154 66.04478455]
[102.60121155 51.36826324]
[88.76387787 45.45096588]
[76.34700775 36.94758606]
[65.82786560 26.18496895]
[57.61077881 13.57680607]
[52.01160049 -0.39228109]
[49.24553680 -15.18535805]
[49.41891861 -30.23381996]
[52.52507019 -44.95923996]
[58.44461060 -58.79561615]
[66.94999695 -71.21111298]
[77.71431732 -81.72851562]
[90.32380676 -89.94355774]
[104.29380035 -95.54047394]
[119.08732605 -98.30414581]
[134.13575745 -98.12832642]
[148.86067200 -95.01979065]
[162.69609070 -89.09801483]
[175.11021423 -80.59061432]
[185.62586975 -69.82459259]
[193.83888245 -57.21377182]
[199.43353271 -43.24287033]
[202.19480896 -28.44890022]
[202.01655579 -13.40049648]
[198.90563965 1.32391894]
[192.98161316 15.15837765]
[184.47221375 27.57112122]
[173.70448303 38.08503723]
[161.09233093 46.29599762]
[147.12052917 51.88839340]
[132.32611084 54.64727020]
[117.27774048 54.46658325]
[114.17942047 69.14311218]
[111.08109283 83.81963348]
[121.95992279 94.14684296]
[136.45552063 90.28968048]
[150.95111084 86.43251801]
[154.27761841 71.49288177]
[164.17474365 59.81788254]
[178.36819458 54.09036255]
[193.59642029 55.62646103]
[206.36009216 64.07318878]
[213.72621155 77.48956299]
[214.00209045 92.79257965]
[207.12434387 106.46573639]
[194.67341614 115.36702728]
[179.51045227 117.45101166]
[165.11978149 112.23880005]
[154.80827332 100.92811584]
[140.31268311 104.78527832]
[125.81707764 108.64244080]
[140.59854126 106.09124756]
[154.25944519 112.28637695]
[162.07896423 125.08696747]
[161.35488892 140.06948853]
[152.33744812 152.05638123]
[138.14280701 156.90531921]
[123.67624664 152.94062805]
[113.93701172 141.53240967]
[112.29078674 126.62268829]
[112.60284424 141.61944580]
[112.91489410 156.61619568]
[113.22695160 171.61294556]
[113.53900909 186.60969543]
[116.86386871 195.18858337]
[113.69829559 201.92094421]
[113.69829559 216.92094421]
[113.69829559 231.92094421]
[113.69829559 246.92094421]
[113.69829559 261.92095947]
[113.69829559 276.92095947]
[113.69829559 291.92095947]
[113.69829559 306.92095947]
[113.69829559 321.92095947]
[113.69829559 336.92095947]
[113.69829559 351.92095947]
[128.23817444 355.98226929]
[141.14256287 363.81677246]
[151.45384216 374.84310913]
[158.40686035 388.24304199]
[161.48567200 403.02218628]
[160.46177673 418.08386230]
[155.41117859 432.31039429]
[146.70864868 444.64605713]
[134.99998474 454.17547607]
[121.15404510 460.19149780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 62]
[28 61]
[29 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[63 98]
[64 97]
[65 96]
[99 115]
[100 114]
[101 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
