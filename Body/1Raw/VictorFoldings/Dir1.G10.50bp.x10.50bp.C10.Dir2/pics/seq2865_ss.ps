%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAACUACGGGGGGGGGGCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAAxxxxxxxxxxGAAGCAGCGGUGGGCCUAGCCCUACUAGUCUCAAUCUCCAACACAUAUGGCCCCCCCCCCCCUAGACUAC\
) } def
/len { sequence length } bind def

/coor [
[90.41765594 445.33599854]
[76.57172394 439.31997681]
[64.86306000 429.79055786]
[56.16053391 417.45489502]
[51.10993195 403.22836304]
[50.08604050 388.16668701]
[53.16484070 373.38751221]
[60.11786270 359.98760986]
[70.42914581 348.96127319]
[83.33352661 341.12673950]
[97.87341309 337.06542969]
[97.87341309 322.06542969]
[97.87341309 307.06542969]
[97.87341309 292.06542969]
[97.87341309 277.06542969]
[97.87341309 262.06542969]
[97.87341309 247.06544495]
[97.87341309 232.06544495]
[97.87341309 217.06544495]
[97.87341309 202.06544495]
[97.87341309 187.06544495]
[77.86204529 175.20549011]
[72.92550659 154.03788757]
[83.97382355 137.11495972]
[78.48679352 123.15456390]
[70.23450470 110.62860107]
[59.57287598 100.07731628]
[48.91125107 89.52602386]
[38.24962234 78.97473145]
[26.07698441 87.11008453]
[12.55030060 92.69937134]
[-1.80474162 95.52748871]
[-16.43067932 95.48659515]
[-30.75991821 92.58023071]
[-44.23676300 86.92311096]
[-56.33896255 78.73657227]
[-66.59795380 68.33992004]
[-74.61700439 56.13801193]
[-80.08654022 42.60544205]
[-82.79610443 28.26811028]
[-82.64247894 13.68277740]
[-79.63357544 -0.58455104]
[-73.88806915 -13.98059845]
[-65.63072205 -25.98626328]
[-76.07053375 -36.75707245]
[-86.51034546 -47.52788162]
[-96.95016479 -58.29869080]
[-107.38997650 -69.06949615]
[-118.26879883 -79.39670563]
[-129.56781006 -89.26242828]
[-144.35766602 -84.87338257]
[-159.16618347 -89.19902802]
[-169.26802063 -100.85905457]
[-171.43972778 -116.13279724]
[-164.98831177 -130.14646912]
[-151.97239685 -138.42832947]
[-136.54530334 -138.33569336]
[-123.62978363 -129.89811707]
[-117.34711456 -115.80799103]
[-119.70207977 -100.56143188]
[-108.40307617 -90.69570923]
[-105.53975677 -90.78919220]
[-102.46667480 -89.71674347]
[-99.64186859 -87.39244843]
[-97.54581451 -83.90280914]
[-96.61916351 -79.50930786]
[-86.17935181 -68.73850250]
[-75.73954010 -57.96769333]
[-65.29972839 -47.19688416]
[-54.85991669 -36.42607498]
[-41.86794662 -44.67560196]
[-27.44480705 -50.06008148]
[-12.21405602 -52.34423828]
[3.16532183 -51.42687988]
[18.02742195 -47.34539413]
[31.72825241 -40.27421188]
[43.67364120 -30.51737404]
[53.34500122 -18.49543762]
[60.32184982 -4.72736740]
[64.30007172 10.19187927]
[65.10520935 25.61705589]
[62.70007324 40.88053513]
[57.18647385 55.32120895]
[48.80091476 68.31311035]
[59.46253967 78.86439514]
[70.12416840 89.41568756]
[80.78578949 99.96697998]
[85.74476624 88.76273346]
[95.98107910 83.38992310]
[106.65853119 85.42171478]
[118.55091095 76.27998352]
[130.34754944 67.01502991]
[142.04718018 57.62786865]
[153.74679565 48.24070740]
[165.44642639 38.85354614]
[174.01667786 24.22525215]
[190.44578552 28.41106987]
[190.97157288 45.35686111]
[174.83358765 50.55316925]
[163.13395691 59.94033051]
[151.43434143 69.32749176]
[139.73471069 78.71465302]
[136.46469116 85.39691162]
[127.69264221 88.17236328]
[115.80026245 97.31409454]
[114.60466766 108.87413025]
[105.54433441 117.28433228]
[92.44718170 117.66753387]
[97.93421173 131.62792969]
[113.84685516 133.70310974]
[126.28411102 145.65930176]
[129.41021729 163.85049438]
[143.73281860 168.30731201]
[153.43305969 156.60372925]
[166.87602234 149.50758362]
[182.01173401 148.10096741]
[196.53211975 152.59838867]
[208.22293091 162.31402588]
[215.30139160 175.76629639]
[216.68809509 190.90385437]
[212.17156982 205.41830444]
[202.44056702 217.09632874]
[188.97898865 224.15708923]
[173.83963013 225.52388000]
[159.33111572 220.98826599]
[147.66592407 211.24191284]
[140.62287903 197.77105713]
[139.27600098 182.62991333]
[124.95339966 178.17309570]
[112.87341309 187.06544495]
[112.87341309 202.06544495]
[112.87341309 217.06544495]
[112.87341309 232.06544495]
[112.87341309 247.06544495]
[112.87341309 262.06542969]
[112.87341309 277.06542969]
[112.87341309 292.06542969]
[112.87341309 307.06542969]
[112.87341309 322.06542969]
[112.87341309 337.06542969]
[127.41329956 341.12673950]
[140.31768799 348.96127319]
[150.62896729 359.98760986]
[157.58198547 373.38751221]
[160.66078186 388.16668701]
[159.63690186 403.22836304]
[154.58628845 417.45489502]
[145.88377380 429.79055786]
[134.17510986 439.31997681]
[120.32917023 445.33599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 109]
[25 108]
[26 87]
[27 86]
[28 85]
[29 84]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 61]
[50 60]
[90 105]
[91 104]
[92 102]
[93 101]
[94 100]
[95 99]
[112 129]
[113 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
