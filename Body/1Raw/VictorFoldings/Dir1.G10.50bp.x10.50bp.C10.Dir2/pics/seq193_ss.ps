%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAUAACGGGGGGGGGGAAUUGAAUGUCUGCACAGCCACUUUCCACACAGACAUCAUAACAAAAAAUxxxxxxxxxxAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCCCCCCCCCCCUAAUACUAAC\
) } def
/len { sequence length } bind def

/coor [
[129.91400146 437.74996948]
[117.35577393 429.39883423]
[107.26954651 418.18637085]
[100.28935242 404.81747437]
[96.85397339 390.13247681]
[97.17934418 375.05450439]
[101.24503326 360.53140259]
[108.79544830 347.47604370]
[119.35597992 336.70916748]
[132.26277161 328.90753174]
[146.70449829 324.56158447]
[146.08052063 309.57455444]
[145.45654297 294.58752441]
[144.83256531 279.60052490]
[144.20858765 264.61349487]
[143.58460999 249.62649536]
[142.96063232 234.63948059]
[142.33665466 219.65245056]
[141.71267700 204.66543579]
[141.08869934 189.67842102]
[140.46473694 174.69140625]
[135.71092224 160.46463013]
[126.94470978 148.29278564]
[117.92717743 136.30595398]
[108.90964508 124.31912994]
[86.43292999 122.06210327]
[74.27704620 103.02183533]
[59.51099396 100.38297272]
[44.74493790 97.74411011]
[29.97888184 95.10524750]
[15.21282578 92.46637726]
[0.44677004 89.82751465]
[-14.31928539 87.18865204]
[-21.66015434 100.43215179]
[-32.90510559 110.57265472]
[-46.83436584 116.51020050]
[-61.93700027 117.60071564]
[-76.57478333 113.72591400]
[-89.15991211 105.30610657]
[-98.32726288 93.25461578]
[-103.08241272 78.87868500]
[-102.90956879 63.73772049]
[-97.82746887 49.47409439]
[-88.38739777 37.63502121]
[-75.61333466 29.50470924]
[-60.89090729 25.96507835]
[-45.81710815 27.40008163]
[-32.02701950 33.65406036]
[-21.01649475 44.04862595]
[-13.97986698 57.45625687]
[-11.68042088 72.42259979]
[3.08563423 75.06146240]
[17.85169029 77.70032501]
[32.61774445 80.33918762]
[47.38380051 82.97805023]
[62.14985657 85.61692047]
[76.91590881 88.25578308]
[79.81914520 83.76624298]
[83.58233643 79.96847534]
[88.04512787 77.02429962]
[93.01734924 75.05918121]
[93.32940674 60.06242752]
[93.64146423 45.06567383]
[93.95352173 30.06892014]
[81.62367249 17.70315170]
[82.01174927 0.58200955]
[94.39250946 -10.75706673]
[94.39250946 -25.75706673]
[94.39250946 -40.75706863]
[94.39250946 -55.75706863]
[81.05138397 -63.36692047]
[73.31641388 -76.63590240]
[73.26827240 -91.99472046]
[80.91990662 -105.31192780]
[94.21306610 -113.00526428]
[109.57195282 -113.00526428]
[122.86511230 -105.31192780]
[130.51675415 -91.99472046]
[130.46861267 -76.63590240]
[122.73363495 -63.36692047]
[109.39250946 -55.75706863]
[109.39250946 -40.75706863]
[109.39250946 -25.75706673]
[109.39250946 -10.75706673]
[119.71348572 -2.98055267]
[123.71146393 9.51306820]
[119.70533752 22.20869446]
[108.95027161 30.38097763]
[108.63821411 45.37773132]
[108.32616425 60.37448502]
[108.01410675 75.37123871]
[118.33693695 81.70906067]
[124.64881134 92.04777527]
[125.56909180 104.12593079]
[120.89647675 115.30159760]
[129.91401672 127.28842926]
[138.93153381 139.27526855]
[144.94972229 142.25669861]
[148.04679871 147.11874390]
[148.06248474 151.95353699]
[147.30459595 136.97270203]
[149.72424316 122.16914368]
[155.21253967 108.20924377]
[163.52239990 95.72140503]
[174.27978516 85.26776123]
[187.00044250 77.31887054]
[201.11177063 72.23255157]
[215.97853088 70.23776245]
[230.93153381 71.42429352]
[245.29765320 75.73873901]
[258.43023682 82.98689270]
[269.73806763 92.84246826]
[278.71221924 104.86182404]
[284.94863892 118.50392914]
[288.16665649 133.15467834]
[288.22137451 148.15457153]
[285.11035156 162.82841492]
[278.97363281 176.51565552]
[270.08743286 188.60017395]
[258.85177612 198.53800964]
[245.77246094 205.88177490]
[231.43820190 210.30093384]
[216.49424744 211.59654236]
[201.61332703 209.71028137]
[187.46527100 204.72706604]
[174.68695068 196.87120056]
[163.85357666 186.49632263]
[155.45175171 174.06742859]
[156.07572937 189.05444336]
[156.69970703 204.04145813]
[157.32368469 219.02847290]
[157.94766235 234.01550293]
[158.57164001 249.00251770]
[159.19560242 263.98953247]
[159.81958008 278.97653198]
[160.44355774 293.96356201]
[161.06753540 308.95056152]
[161.69151306 323.93759155]
[176.44451904 327.06802368]
[189.95515442 333.76977539]
[201.37414551 343.62158203]
[209.98365784 356.00411987]
[215.24249268 370.13900757]
[216.82009888 385.13775635]
[214.61729431 400.05746460]
[208.77255249 413.96035767]
[199.65327454 425.97241211]
[187.83270264 435.33856201]
[174.05389404 441.47006226]
[159.18299866 443.98144531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 100]
[23 97]
[24 96]
[25 95]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[61 91]
[62 90]
[63 89]
[64 88]
[67 84]
[68 83]
[69 82]
[70 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
