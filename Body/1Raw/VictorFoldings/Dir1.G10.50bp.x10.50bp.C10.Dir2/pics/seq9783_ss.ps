%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCACCCAGGGGGGGGGGCAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAxxxxxxxxxxUUCUUCGAAACCACACUUAUCCCCACCUUGGCUAUCAUCACCCGAUGAGGCCCCCCCCCCCAACCAGCCA\
) } def
/len { sequence length } bind def

/coor [
[64.85295105 370.52767944]
[51.00701523 364.51165771]
[39.29835510 354.98223877]
[30.59582901 342.64657593]
[25.54522705 328.42004395]
[24.52133560 313.35836792]
[27.60013580 298.57922363]
[34.55315781 285.17929077]
[44.86444092 274.15295410]
[57.76882172 266.31845093]
[72.30870819 262.25714111]
[72.30870819 247.25712585]
[72.30870819 232.25712585]
[72.30870819 217.25712585]
[72.30870819 202.25712585]
[72.30870819 187.25712585]
[72.30870819 172.25712585]
[72.30870819 157.25712585]
[72.30870819 142.25712585]
[72.30870819 127.25713348]
[72.30870819 112.25713348]
[69.82359314 97.46442413]
[64.92204285 83.28786469]
[60.02048874 69.11130524]
[55.11893845 54.93474960]
[40.61595154 58.79036713]
[25.87021255 61.57704544]
[10.96039486 63.27991104]
[-4.03394890 63.88988113]
[-19.03281593 63.40370560]
[-33.95618439 61.82397079]
[-48.72442245 59.15911102]
[-63.25874329 55.42333984]
[-77.48159027 50.63659286]
[-91.31708527 44.82440948]
[-104.69140625 38.01780319]
[-117.53319550 30.25308228]
[-129.77394104 21.57168198]
[-141.34831238 12.01992035]
[-152.19458008 1.64876032]
[-162.25485229 -9.48646259]
[-171.47547913 -21.32633591]
[-179.80723572 -33.80768967]
[-187.20568848 -46.86392975]
[-193.63134766 -60.42539215]
[-199.04994202 -74.41972351]
[-203.43254089 -88.77225494]
[-206.75578308 -103.40641022]
[-209.00193787 -118.24410248]
[-210.15901184 -133.20617676]
[-210.22082520 -148.21279907]
[-209.18705750 -163.18388367]
[-207.06321716 -178.03958130]
[-203.86064148 -192.70062256]
[-199.59642029 -207.08877563]
[-194.29330444 -221.12725830]
[-187.97958374 -234.74121094]
[-180.68894958 -247.85795593]
[-172.46029663 -260.40753174]
[-163.33752441 -272.32296753]
[-153.36932373 -283.54067993]
[-142.60887146 -294.00085449]
[-131.11357117 -303.64764404]
[-118.94477081 -312.42956543]
[-106.16738129 -320.29983521]
[-92.84959412 -327.21640015]
[-79.06244659 -333.14236450]
[-64.87951660 -338.04611206]
[-50.37646484 -341.90148926]
[-35.63068008 -344.68792725]
[-20.72083473 -346.39053345]
[-5.72648096 -347.00027466]
[9.27237892 -346.51385498]
[24.19571877 -344.93386841]
[38.96391678 -342.26876831]
[53.49817276 -338.53274536]
[67.72094727 -333.74578857]
[81.55634308 -327.93334961]
[94.93055725 -321.12652588]
[107.77221680 -313.36160278]
[120.01280975 -304.67999268]
[131.58703613 -295.12805176]
[142.43312073 -284.75671387]
[152.49322510 -273.62133789]
[161.71365356 -261.78131104]
[170.04519653 -249.29980469]
[177.44343567 -236.24345398]
[183.86886597 -222.68188477]
[189.28723145 -208.68745422]
[193.66960144 -194.33485413]
[196.99261475 -179.70065308]
[199.23851013 -164.86291504]
[200.39533997 -149.90081787]
[200.45690918 -134.89421082]
[199.42289734 -119.92312622]
[197.29881287 -105.06746674]
[194.09599304 -90.40647888]
[189.83154297 -76.01840210]
[184.52819824 -61.97999573]
[178.21424866 -48.36616135]
[170.92340088 -35.24953461]
[162.69453430 -22.70009995]
[153.57157898 -10.78481579]
[143.60319519 0.43274468]
[132.84255981 10.89272976]
[121.34710693 20.53933144]
[109.17816162 29.32107925]
[96.40064240 37.19111633]
[83.08274078 44.10746002]
[69.29549408 50.03319931]
[74.19704437 64.20975494]
[79.09859467 78.38631439]
[84.00014496 92.56287384]
[101.90051270 84.01736450]
[114.26123047 97.13280487]
[128.38603210 102.18156433]
[142.51083374 107.23032379]
[156.63563538 112.27907562]
[170.76043701 117.32783508]
[186.78790283 113.85615540]
[197.60632324 126.18067932]
[192.08663940 141.62298584]
[175.90702820 144.29736328]
[165.71168518 131.45263672]
[151.58688354 126.40387726]
[137.46208191 121.35512543]
[123.33728027 116.30636597]
[109.21247864 111.25761414]
[99.05913544 116.06771088]
[87.30870819 112.25713348]
[87.30870819 127.25713348]
[87.30870819 142.25712585]
[87.30870819 157.25712585]
[87.30870819 172.25712585]
[87.30870819 187.25712585]
[87.30870819 202.25712585]
[87.30870819 217.25712585]
[87.30870819 232.25712585]
[87.30870819 247.25712585]
[87.30870819 262.25714111]
[101.84859467 266.31845093]
[114.75297546 274.15295410]
[125.06426239 285.17929077]
[132.01728821 298.57922363]
[135.09608459 313.35836792]
[134.07218933 328.42004395]
[129.02159119 342.64657593]
[120.31906128 354.98223877]
[108.61040497 364.51165771]
[94.76446533 370.52767944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 113]
[23 112]
[24 111]
[25 110]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
