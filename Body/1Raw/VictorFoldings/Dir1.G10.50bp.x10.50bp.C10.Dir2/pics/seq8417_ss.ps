%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUCCUUAAUCAUGGGGGGGGGGUUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCUCACUCAUUUACACxxxxxxxxxxACCACUAUCACGAAAAAAACUCUACCUCUCUAUACUAAUCUCCCUACAAACCCCCCCCCCUCUCCUUAAUUAU\
) } def
/len { sequence length } bind def

/coor [
[85.11811066 167.61401367]
[70.93198395 162.83450317]
[58.10485077 155.11734009]
[47.23641968 144.82331848]
[38.83480835 132.43370056]
[33.29281235 118.52771759]
[30.86953545 103.75553131]
[31.67826843 88.80776215]
[35.68120193 74.38325500]
[42.69119263 61.15639114]
[52.38050461 49.74555969]
[64.29613495 40.68423843]
[77.88101196 34.39606857]
[92.50000000 31.17503929]
[92.50000000 16.17503929]
[92.50000000 1.17503905]
[92.50000000 -13.82496071]
[92.50000000 -28.82496071]
[92.50000000 -43.82496262]
[92.50000000 -58.82496262]
[92.50000000 -73.82495880]
[92.50000000 -88.82495880]
[92.50000000 -103.82495880]
[92.50000000 -118.82495880]
[92.50000000 -133.82496643]
[92.50000000 -148.82496643]
[77.52191162 -149.71369934]
[62.62277985 -151.48820496]
[47.85493851 -154.14221191]
[33.27025986 -157.66642761]
[18.91997147 -162.04846191]
[4.85448170 -167.27291870]
[-8.87680435 -173.32145691]
[-22.22565460 -180.17282104]
[-35.14517975 -187.80294800]
[-47.59000015 -196.18502808]
[-59.51640320 -205.28964233]
[-70.88249207 -215.08479309]
[-81.64835358 -225.53607178]
[-91.77616119 -236.60676575]
[-101.23033905 -248.25801086]
[-109.97769165 -260.44885254]
[-117.98748016 -273.13650513]
[-125.23158264 -286.27636719]
[-131.68453979 -299.82229614]
[-137.32369995 -313.72671509]
[-142.12924194 -327.94079590]
[-146.08428955 -342.41458130]
[-149.17495728 -357.09722900]
[-151.39038086 -371.93722534]
[-152.72277832 -386.88238525]
[-153.16748047 -401.88021851]
[-152.72291565 -416.87805176]
[-151.39064026 -431.82321167]
[-149.17533875 -446.66320801]
[-146.08480835 -461.34591675]
[-142.12988281 -475.81973267]
[-137.32446289 -490.03384399]
[-131.68544006 -503.93832397]
[-125.23259735 -517.48431396]
[-117.98860931 -530.62420654]
[-109.97892761 -543.31195068]
[-101.23168945 -555.50286865]
[-91.77760315 -567.15417480]
[-81.64989471 -578.22497559]
[-70.88413239 -588.67633057]
[-59.51812363 -598.47161865]
[-47.59180069 -607.57629395]
[-35.14705276 -615.95849609]
[-22.22759438 -623.58874512]
[-8.87880516 -630.44024658]
[4.85242748 -636.48889160]
[18.91787148 -641.71343994]
[33.26811981 -646.09564209]
[47.85276794 -649.61999512]
[62.62059021 -652.27410889]
[77.51970673 -654.04876709]
[92.49778748 -654.93762207]
[107.50221252 -654.93762207]
[122.48029327 -654.04876709]
[137.37940979 -652.27410889]
[152.14723206 -649.61999512]
[166.73187256 -646.09564209]
[181.08212280 -641.71343994]
[195.14756775 -636.48889160]
[208.87879944 -630.44024658]
[222.22760010 -623.58874512]
[235.14704895 -615.95849609]
[247.59179688 -607.57629395]
[259.51812744 -598.47161865]
[270.88412476 -588.67633057]
[281.64990234 -578.22497559]
[291.77761841 -567.15417480]
[301.23168945 -555.50286865]
[309.97894287 -543.31195068]
[317.98861694 -530.62420654]
[325.23260498 -517.48431396]
[331.68542480 -503.93832397]
[337.32446289 -490.03384399]
[342.12988281 -475.81973267]
[346.08480835 -461.34591675]
[349.17535400 -446.66320801]
[351.39062500 -431.82321167]
[352.72290039 -416.87805176]
[353.16748047 -401.88021851]
[352.72277832 -386.88238525]
[351.39038086 -371.93722534]
[349.17495728 -357.09722900]
[346.08428955 -342.41458130]
[342.12924194 -327.94079590]
[337.32369995 -313.72671509]
[331.68453979 -299.82229614]
[325.23156738 -286.27636719]
[317.98748779 -273.13650513]
[309.97769165 -260.44885254]
[301.23034668 -248.25801086]
[291.77615356 -236.60676575]
[281.64834595 -225.53607178]
[270.88250732 -215.08479309]
[259.51638794 -205.28964233]
[247.58999634 -196.18502808]
[235.14517212 -187.80294800]
[222.22564697 -180.17282104]
[208.87680054 -173.32145691]
[195.14552307 -167.27291870]
[181.08003235 -162.04846191]
[166.72973633 -157.66642761]
[152.14506531 -154.14221191]
[137.37721252 -151.48820496]
[122.47808838 -149.71369934]
[107.50000000 -148.82496643]
[107.50000000 -133.82496643]
[107.50000000 -118.82495880]
[107.50000000 -103.82495880]
[107.50000000 -88.82495880]
[107.50000000 -73.82495880]
[107.50000000 -58.82496262]
[107.50000000 -43.82496262]
[107.50000000 -28.82496071]
[107.50000000 -13.82496071]
[107.50000000 1.17503905]
[107.50000000 16.17503929]
[107.50000000 31.17503929]
[122.11898804 34.39606857]
[135.70385742 40.68423843]
[147.61949158 49.74555969]
[157.30880737 61.15639114]
[164.31880188 74.38325500]
[168.32173157 88.80776215]
[169.13046265 103.75553131]
[166.70718384 118.52771759]
[161.16519165 132.43370056]
[152.76358032 144.82331848]
[141.89514160 155.11734009]
[129.06802368 162.83450317]
[114.88188934 167.61401367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
