%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAUCUCCGGGGGGGGGGCAUAUUGUAACUUACUACUCCGGAAAAAAAGAACCAUUUGGAUACAUAGGxxxxxxxxxxAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCCCCCCCCCCCAAUAAUCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.46533966 388.56832886]
[85.24514008 381.29586792]
[74.35833740 370.84884644]
[66.54720306 357.93960571]
[62.34432602 343.44827271]
[62.03625107 328.36294556]
[65.64399719 313.71212769]
[72.92156982 300.49472046]
[83.37277222 289.61196899]
[96.28503418 281.80581665]
[110.77796936 277.60852051]
[110.46591949 262.61178589]
[110.15386200 247.61502075]
[109.84180450 232.61827087]
[109.52974701 217.62152100]
[109.21768951 202.62477112]
[108.90563202 187.62800598]
[108.59358215 172.63125610]
[108.28152466 157.63450623]
[107.96946716 142.63775635]
[107.65740967 127.64099884]
[92.28224182 126.17102814]
[80.65695190 117.20642090]
[75.86126709 104.14318848]
[78.61335754 91.28289032]
[67.31435394 81.41716766]
[56.01535034 71.55144501]
[44.71634293 61.68571854]
[33.61529541 71.79830933]
[21.43383598 80.57952881]
[8.33078003 87.91490173]
[-5.52305031 93.70878601]
[-19.94704056 97.88565826]
[-34.75314713 100.39105988]
[-49.74833679 101.19232941]
[-64.73712158 100.27901459]
[-79.52408600 97.66303253]
[-93.91645813 93.37847900]
[-107.72660065 87.48120880]
[-120.77446747 80.04811859]
[-132.88995361 71.17610168]
[-143.91511536 60.98083115]
[-153.70622253 49.59521866]
[-162.13560486 37.16769791]
[-169.09338379 23.86029243]
[-174.48884583 9.84648705]
[-178.25166321 -4.69101715]
[-180.33274841 -19.56269455]
[-180.70501709 -34.57466507]
[-179.36357117 -49.53121185]
[-176.32591248 -64.23735046]
[-171.63166809 -78.50135040]
[-165.34199524 -92.13725281]
[-157.53892517 -104.96729279]
[-148.32418823 -116.82419586]
[-137.81788635 -127.55338287]
[-126.15702057 -137.01498413]
[-113.49359894 -145.08564758]
[-99.99272156 -151.66015625]
[-85.83039856 -156.65278625]
[-71.19126129 -159.99844360]
[-56.26617050 -161.65354919]
[-41.24969482 -161.59648132]
[-26.33761024 -159.82800293]
[-11.72432518 -156.37117004]
[2.39964557 -151.27105713]
[15.85016727 -144.59414673]
[28.45188522 -136.42747498]
[40.04051208 -126.87752533]
[50.46496201 -116.06879425]
[59.58933258 -104.14220428]
[67.29467010 -91.25322723]
[73.48051453 -77.56991577]
[78.06623077 -63.27065277]
[80.99202728 -48.54185486]
[82.21976471 -33.57554626]
[81.73342896 -18.56683922]
[79.53936768 -3.71140790]
[75.66618347 10.79708004]
[70.16437531 24.76947403]
[63.10565948 38.02361679]
[54.58206940 50.38671494]
[65.88107300 60.25243759]
[77.18007660 70.11816406]
[88.47908020 79.98388672]
[104.60917664 75.47199249]
[120.90429688 83.19803619]
[128.66828918 100.88880157]
[143.31178284 97.63797760]
[157.95529175 94.38714600]
[172.59878540 91.13632202]
[187.24229431 87.88549805]
[200.96234131 81.82248688]
[213.22471619 73.18336487]
[225.48707581 64.54425049]
[237.74945068 55.90513611]
[244.14225769 40.80334473]
[260.44821167 39.05758286]
[269.89315796 52.46374512]
[262.76092529 67.23071289]
[246.38856506 68.16750336]
[234.12620544 76.80661774]
[221.86383057 85.44573975]
[209.60145569 94.08485413]
[224.57064819 93.12394714]
[239.17724609 96.53679657]
[252.17082214 104.03125000]
[262.43908691 114.96572876]
[269.10299683 128.40419006]
[271.59213257 143.19622803]
[269.69332886 158.07556152]
[263.56921387 171.76843262]
[253.74400330 183.10269165]
[241.05879211 191.10803223]
[226.59950256 195.09916687]
[211.60394287 194.73442078]
[197.35578918 190.04504395]
[185.07478333 181.43243408]
[175.81222534 169.63392639]
[170.36105347 155.65948486]
[169.18791199 140.70542908]
[172.39323425 126.05190277]
[179.70262146 112.95331573]
[190.49311829 102.52899933]
[175.84962463 105.77982330]
[161.20611572 109.03064728]
[146.56262207 112.28147888]
[131.91911316 115.53230286]
[122.65416718 127.32894135]
[122.96621704 142.32569885]
[123.27827454 157.32244873]
[123.59033203 172.31919861]
[123.90238953 187.31596375]
[124.21444702 202.31271362]
[124.52650452 217.30946350]
[124.83855438 232.30621338]
[125.15061188 247.30296326]
[125.46266937 262.29971313]
[125.77472687 277.29647827]
[140.42971802 280.88723755]
[153.65553284 288.14950562]
[164.55039978 298.58810425]
[172.37149048 311.49130249]
[176.58555603 325.97937012]
[176.90528870 341.06448364]
[173.30885315 355.71807861]
[166.04148865 368.94107056]
[155.59869385 379.83190918]
[142.69245911 387.64804077]
[128.20277405 391.85650635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[25 85]
[26 84]
[27 83]
[28 82]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 104]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
