%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAGGCCUAGGGGGGGGGGCCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCxxxxxxxxxxCACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCCCCCCCCCCCUCCUAGACCUA\
) } def
/len { sequence length } bind def

/coor [
[83.09775543 398.14642334]
[70.17860413 390.38806152]
[59.39730453 379.85903931]
[51.33528900 367.12716675]
[46.42733002 352.87905884]
[44.93810654 337.88308716]
[46.94792938 322.94796753]
[52.34841156 308.87918091]
[60.84831619 296.43536377]
[71.98925018 286.28762817]
[85.17039490 278.98324585]
[99.68091583 274.91610718]
[99.06509399 259.92877197]
[98.44926453 244.94140625]
[97.83344269 229.95405579]
[97.21761322 214.96670532]
[96.60179138 199.97933960]
[95.98596191 184.99198914]
[95.37014008 170.00463867]
[94.75431061 155.01728821]
[94.13848877 140.02993774]
[79.26963806 134.74197388]
[67.55507660 124.16773987]
[60.77727509 109.91619110]
[59.96753311 94.15580750]
[65.24905396 79.28466797]
[75.81822205 67.56553650]
[90.06684113 60.78157043]
[89.14342499 45.81002045]
[88.22000885 30.83847046]
[87.29660034 15.86692047]
[72.29090881 15.73211670]
[57.33210373 14.53915882]
[42.49471283 12.29398823]
[27.85265732 9.00779247]
[13.47887897 4.69694138]
[-0.55500901 -0.61708724]
[-14.17909145 -6.90781927]
[-27.32549286 -14.14391422]
[-39.92871475 -22.28932190]
[-51.92597580 -31.30346107]
[-63.25749588 -41.14142609]
[-73.86682892 -51.75419998]
[-83.70111847 -63.08891296]
[-92.71136475 -75.08909607]
[-100.85268402 -87.69496155]
[-108.08451080 -100.84371185]
[-114.37081909 -114.46983337]
[-119.68029785 -128.50544739]
[-123.98648834 -142.88061523]
[-127.26792908 -157.52374268]
[-129.50828552 -172.36186218]
[-130.69639587 -187.32104492]
[-130.82632446 -202.32678223]
[-129.89744568 -217.30430603]
[-127.91437531 -232.17898560]
[-124.88699341 -246.87673950]
[-120.83038330 -261.32434082]
[-115.76475525 -275.44976807]
[-109.71534729 -289.18270874]
[-102.71229553 -302.45471191]
[-94.79048920 -315.19967651]
[-85.98939514 -327.35409546]
[-76.35286713 -338.85739136]
[-65.92890167 -349.65231323]
[-54.76944351 -359.68502808]
[-42.93008041 -368.90557861]
[-30.46979713 -377.26800537]
[-17.45067406 -384.73065186]
[-3.93757010 -391.25637817]
[10.00219154 -396.81262207]
[24.29916382 -401.37173462]
[38.88211823 -404.91101074]
[53.67840576 -407.41278076]
[68.61430359 -408.86459351]
[83.61540985 -409.25921631]
[98.60698700 -408.59469604]
[113.51434326 -406.87435913]
[128.26321411 -404.10671997]
[142.78012085 -400.30560303]
[156.99273682 -395.48995972]
[170.83026123 -389.68374634]
[184.22373962 -382.91592407]
[197.10646057 -375.22018433]
[209.41424561 -366.63488770]
[221.08576965 -357.20278931]
[232.06288147 -346.97088623]
[242.29089355 -335.99014282]
[251.71887207 -324.31527710]
[260.29980469 -312.00445557]
[267.99099731 -299.11901855]
[274.75405884 -285.72314453]
[280.55535889 -271.88357544]
[285.36599731 -257.66925049]
[289.16195679 -243.15100098]
[291.92434692 -228.40115356]
[293.63943481 -213.49317932]
[294.29864502 -198.50137329]
[293.89871216 -183.50041199]
[292.44158936 -168.56501770]
[289.93460083 -153.76962280]
[286.39016724 -139.18792725]
[281.82598877 -124.89256287]
[276.26480103 -110.95477295]
[269.73431396 -97.44397736]
[262.26702881 -84.42749786]
[253.90019226 -71.97017670]
[244.67546082 -60.13407898]
[234.63879395 -48.97817230]
[223.84019470 -38.55803299]
[212.33348083 -28.92557335]
[200.17594910 -20.12878609]
[187.42819214 -12.21149445]
[174.15370178 -5.21314287]
[160.41862488 0.83140302]
[146.29138184 5.89202929]
[131.84236145 9.94352341]
[117.14353943 12.96570110]
[102.26815033 14.94350719]
[103.19155884 29.91505623]
[104.11497498 44.88660812]
[105.03839111 59.85815811]
[118.44889832 63.99456787]
[129.63943481 72.46353912]
[137.26344299 84.24598694]
[140.40351868 97.92413330]
[138.68179321 111.85206604]
[132.30548096 124.35383606]
[122.04180908 133.92507935]
[109.12583923 139.41410828]
[109.74166870 154.40145874]
[110.35749054 169.38880920]
[110.97332001 184.37617493]
[111.58914185 199.36352539]
[112.20497131 214.35087585]
[112.82079315 229.33822632]
[113.43662262 244.32557678]
[114.05244446 259.31292725]
[114.66827393 274.30029297]
[129.46354675 277.16326904]
[143.19950867 283.36163330]
[155.13542175 292.56112671]
[164.62757874 304.26565552]
[171.16406250 317.84396362]
[174.39241028 332.56384277]
[174.13848877 347.63143921]
[170.41600037 362.23416138]
[163.42568970 375.58453369]
[153.54454041 386.96258545]
[141.30543518 395.75466919]
[127.36841583 401.48669434]
[112.48507690 403.84951782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[28 122]
[29 121]
[30 120]
[31 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
