%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAACCCCCUGGGGGGGGGGUCGACCUUGCCGAAGGGGAGUCCGAACUAGUCUCAGGCUUCAACAUCGAAxxxxxxxxxxGCAUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCCCCCCCCCCCAAACCCCCU\
) } def
/len { sequence length } bind def

/coor [
[75.47369385 439.64941406]
[61.45175171 434.09640503]
[49.25179291 425.23007202]
[39.64072418 413.60775757]
[33.22269821 399.96005249]
[30.40116119 385.14486694]
[31.35347557 370.09347534]
[36.01978302 355.75207520]
[44.10674667 343.02209473]
[55.10602188 332.70382690]
[68.32617950 325.44586182]
[82.93619537 321.70443726]
[82.93619537 306.70443726]
[82.93619537 291.70443726]
[82.93619537 276.70443726]
[82.93619537 261.70443726]
[82.93619537 246.70442200]
[82.93619537 231.70442200]
[82.93619537 216.70442200]
[82.93619537 201.70442200]
[82.93619537 186.70442200]
[72.25532532 176.38673401]
[72.04164124 161.17460632]
[82.93619537 150.04148865]
[82.93619537 135.04148865]
[70.96593475 126.00196075]
[56.53855133 130.10690308]
[42.11116791 134.21185303]
[27.68378258 138.31680298]
[16.66244507 150.46020508]
[0.69476956 146.72317505]
[-3.79307008 130.95005798]
[7.81563139 119.36687469]
[23.57883644 123.88941193]
[38.00622177 119.78446960]
[52.43360519 115.67951965]
[66.86099243 111.57457733]
[68.06951904 103.79166412]
[70.93743896 97.09460449]
[56.89546204 91.81986237]
[42.85348511 86.54512024]
[31.47181129 96.77820587]
[16.63543320 100.53858948]
[1.75364184 96.96215820]
[-9.75383568 86.87075043]
[-15.24266624 72.58329773]
[-13.45155525 57.38294983]
[-4.79208803 44.76263809]
[8.74585342 37.62242126]
[24.05134964 37.60306168]
[37.60730743 44.70901489]
[46.29867172 57.30737686]
[48.12822723 72.50314331]
[62.17020416 77.77788544]
[76.21218109 83.05262756]
[90.57609558 72.35467529]
[108.48353577 72.05177307]
[116.38002014 59.29851532]
[124.27649689 46.54525757]
[132.17298889 33.79199982]
[126.46555328 19.48356056]
[130.23371887 4.73044968]
[141.82936096 -4.86148119]
[156.67196655 -5.77522421]
[164.56845093 -18.52848053]
[161.16654968 -33.72929764]
[169.35638428 -46.55042648]
[183.86900330 -49.69993973]
[191.76548767 -62.45319748]
[199.66197205 -75.20645142]
[188.23936462 -84.97499847]
[178.44186401 -96.37277985]
[170.49914551 -109.13262939]
[164.59739685 -122.95542908]
[160.87496948 -137.51716614]
[159.41911316 -152.47647095]
[160.26396179 -167.48269653]
[163.38970947 -182.18405151]
[168.72308350 -196.23594666]
[176.13905334 -209.30895996]
[185.46379089 -221.09664917]
[196.47871399 -231.32270813]
[208.92559814 -239.74739075]
[222.51268005 -246.17324829]
[236.92146301 -250.44961548]
[251.81417847 -252.47627258]
[266.84173584 -252.20570374]
[281.65185547 -249.64425659]
[295.89733887 -244.85195923]
[309.24429321 -237.94116211]
[321.37985229 -229.07385254]
[332.01950073 -218.45791626]
[340.91384888 -206.34219360]
[347.85443115 -193.01068115]
[352.67849731 -178.77590942]
[355.27297974 -163.97154236]
[355.57708740 -148.94464111]
[353.58364868 -134.04743958]
[349.33944702 -119.62915039]
[342.94393921 -106.02775574]
[334.54702759 -93.56210327]
[324.34558105 -82.52439880]
[312.57873535 -73.17338562]
[299.52227783 -65.72826385]
[285.48233032 -60.36355209]
[270.78796387 -57.20500946]
[255.78367615 -56.32668304]
[240.82115173 -57.74915695]
[226.25115967 -61.43908310]
[212.41522217 -67.30997467]
[204.51873779 -54.55671692]
[196.62225342 -41.80345917]
[200.27175903 -27.40843391]
[192.44528198 -14.36232948]
[177.32171631 -10.63199902]
[169.42523193 2.12125826]
[175.22320557 15.81510830]
[171.80548096 30.47059059]
[160.27865601 40.41974258]
[144.92623901 41.68848419]
[137.02975464 54.44173813]
[129.13327026 67.19499969]
[121.23679352 79.94825745]
[129.20770264 91.61894226]
[130.94969177 106.20382690]
[125.56179810 120.46419525]
[113.78414917 130.99652100]
[97.93619537 135.04148865]
[97.93619537 150.04148865]
[108.83074951 161.17460632]
[108.61706543 176.38673401]
[97.93619537 186.70442200]
[97.93619537 201.70442200]
[97.93619537 216.70442200]
[97.93619537 231.70442200]
[97.93619537 246.70442200]
[97.93619537 261.70443726]
[97.93619537 276.70443726]
[97.93619537 291.70443726]
[97.93619537 306.70443726]
[97.93619537 321.70443726]
[112.54620361 325.44586182]
[125.76636505 332.70382690]
[136.76564026 343.02209473]
[144.85260010 355.75207520]
[149.51890564 370.09347534]
[150.47122192 385.14486694]
[147.64968872 399.96005249]
[141.23165894 413.60775757]
[131.62059021 425.23007202]
[119.42063904 434.09640503]
[105.39869690 439.64941406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[24 129]
[25 128]
[26 37]
[27 36]
[28 35]
[29 34]
[39 55]
[40 54]
[41 53]
[57 123]
[58 122]
[59 121]
[60 120]
[64 116]
[65 115]
[68 112]
[69 111]
[70 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
