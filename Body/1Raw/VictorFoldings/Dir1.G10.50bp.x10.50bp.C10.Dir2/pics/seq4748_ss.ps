%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAAUAAAGGGGGGGGGGCAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGUUCCAxxxxxxxxxxACGCCUAAUCUACUCCACCUCAAUCACACUACUCCCCAUAUCUAACAACGCCCCCCCCCCUAAAAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 372.70864868]
[71.19830322 366.69262695]
[59.48964310 357.16320801]
[50.78712082 344.82754517]
[45.73651886 330.60101318]
[44.71262741 315.53933716]
[47.79142761 300.76016235]
[54.74444962 287.36026001]
[65.05573273 276.33392334]
[77.96011353 268.49942017]
[92.50000000 264.43807983]
[92.50000000 249.43809509]
[92.50000000 234.43809509]
[92.50000000 219.43809509]
[92.50000000 204.43809509]
[92.50000000 189.43809509]
[92.50000000 174.43809509]
[92.50000000 159.43809509]
[92.50000000 144.43809509]
[92.50000000 129.43809509]
[92.50000000 114.43809509]
[83.73101807 100.16924286]
[92.20125580 85.72106171]
[91.88919830 70.72430420]
[83.86647797 57.08808517]
[91.33733368 44.20260239]
[91.02527618 29.20584869]
[90.71321869 14.20909595]
[75.72310638 13.52925396]
[60.81069565 11.86018944]
[46.04120255 9.20919991]
[31.47920418 5.58787870]
[17.18838310 1.01206064]
[3.23122573 -4.49824524]
[-10.33123493 -10.91894436]
[-23.43969345 -18.22195816]
[-36.03682709 -26.37535667]
[-48.06755829 -35.34348297]
[-59.47927094 -45.08712006]
[-70.22206879 -55.56366348]
[-80.24897766 -66.72730255]
[-89.51614380 -78.52922058]
[-97.98305511 -90.91781616]
[-105.61267853 -103.83889771]
[-112.37165833 -117.23598480]
[-118.23043060 -131.05049133]
[-123.16338348 -145.22200012]
[-127.14894867 -159.68855286]
[-130.16969299 -174.38687134]
[-132.21240234 -189.25270081]
[-133.26815796 -204.22103882]
[-133.33232117 -219.22642517]
[-132.40463257 -234.20324707]
[-130.48915100 -249.08601379]
[-127.59423065 -263.80963135]
[-123.73255157 -278.30975342]
[-118.92098236 -292.52291870]
[-113.18058014 -306.38702393]
[-106.53643799 -319.84143066]
[-99.01760101 -332.82730103]
[-90.65696716 -345.28787231]
[-81.49107361 -357.16860962]
[-71.56002045 -368.41760254]
[-60.90722275 -378.98565674]
[-49.57926178 -388.82653809]
[-37.62567902 -397.89724731]
[-25.09874153 -406.15808105]
[-12.05322552 -413.57293701]
[1.45382261 -420.10940552]
[15.36333942 -425.73889160]
[29.61450195 -430.43676758]
[44.14499283 -434.18249512]
[58.89127350 -436.95971680]
[73.78885651 -438.75628662]
[88.77261353 -439.56430054]
[103.77700043 -439.38027954]
[118.73642731 -438.20498657]
[133.58547974 -436.04360962]
[148.25920105 -432.90554810]
[162.69345093 -428.80456543]
[176.82510376 -423.75857544]
[190.59237671 -417.78964233]
[203.93504333 -410.92385864]
[216.79478455 -403.19128418]
[229.11534119 -394.62570190]
[240.84286499 -385.26455688]
[251.92605591 -375.14877319]
[262.31646729 -364.32266235]
[271.96862793 -352.83346558]
[280.84036255 -340.73150635]
[288.89288330 -328.06964111]
[296.09097290 -314.90325928]
[302.40313721 -301.28994751]
[307.80175781 -287.28921509]
[312.26330566 -272.96231079]
[315.76818848 -258.37185669]
[318.30111694 -243.58164978]
[319.85101318 -228.65638733]
[320.41110229 -213.66131592]
[319.97891235 -198.66201782]
[318.55636597 -183.72407532]
[316.14968872 -168.91281128]
[312.76934814 -154.29299927]
[308.43017578 -139.92855835]
[303.15115356 -125.88229370]
[296.95532227 -112.21563721]
[289.86978149 -98.98834991]
[281.92556763 -86.25827789]
[273.15734863 -74.08106995]
[263.60351562 -62.50999069]
[253.30581665 -51.59563065]
[242.30931091 -41.38571548]
[230.66204834 -31.92489243]
[218.41499329 -23.25453186]
[205.62167358 -15.41254616]
[192.33804321 -8.43322754]
[178.62219238 -2.34709454]
[164.53408813 2.81923938]
[150.13533020 7.04318333]
[135.48890686 10.30626678]
[120.65882874 12.59422016]
[105.70996857 13.89703941]
[106.02202606 28.89379311]
[106.33408356 43.89054871]
[114.33448792 56.45409775]
[106.88595581 70.41224670]
[107.19801331 85.40900421]
[115.12266541 93.99886322]
[115.24423218 105.68522644]
[107.50000000 114.43809509]
[107.50000000 129.43809509]
[107.50000000 144.43809509]
[107.50000000 159.43809509]
[107.50000000 174.43809509]
[107.50000000 189.43809509]
[107.50000000 204.43809509]
[107.50000000 219.43809509]
[107.50000000 234.43809509]
[107.50000000 249.43809509]
[107.50000000 264.43807983]
[122.03988647 268.49942017]
[134.94427490 276.33392334]
[145.25555420 287.36026001]
[152.20857239 300.76016235]
[155.28736877 315.53933716]
[154.26348877 330.60101318]
[149.21287537 344.82754517]
[140.51036072 357.16320801]
[128.80169678 366.69262695]
[114.95575714 372.70864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 127]
[24 126]
[26 124]
[27 123]
[28 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
