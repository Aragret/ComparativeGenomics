%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUUAAAUGGGGGGGGGGUUGCCCACAGAACCCUCUAAAUCCCCUUGUAAAUUUAACUGUUAGUCCAAxxxxxxxxxxCACUUUCCUAGGACUUCUAACAGCCCUAGACCUCAACUACCUAACCAACACCCCCCCCCCAACUUAAAAU\
) } def
/len { sequence length } bind def

/coor [
[87.07400513 440.28674316]
[73.85380554 433.01425171]
[62.96700287 422.56726074]
[55.15587234 409.65802002]
[50.95299149 395.16668701]
[50.64491653 380.08135986]
[54.25265884 365.43054199]
[61.53023148 352.21313477]
[71.98143768 341.33038330]
[84.89369965 333.52423096]
[99.38663483 329.32693481]
[99.07458496 314.33020020]
[98.76252747 299.33343506]
[98.45046997 284.33670044]
[98.13841248 269.33993530]
[97.82635498 254.34318542]
[97.51429749 239.34642029]
[97.20224762 224.34967041]
[96.89019012 209.35292053]
[96.42214966 194.36021423]
[95.79817200 179.37319946]
[95.17419434 164.38618469]
[94.55021667 149.39916992]
[84.92512512 148.16111755]
[75.58130646 145.03790283]
[66.88957977 140.09364319]
[59.20611572 133.46565247]
[52.85794830 125.36106110]
[48.12924957 116.05058289]
[33.36319351 118.68945312]
[18.59713936 121.32831573]
[6.41465187 132.30642700]
[-9.09828663 126.98846436]
[-11.98329544 110.84508514]
[0.72747600 100.48321533]
[15.95827484 106.56225586]
[30.72433090 103.92339325]
[45.49038696 101.28453064]
[47.20307541 86.38262939]
[33.42069244 80.46266174]
[19.63831329 74.54270172]
[5.85593176 68.62274170]
[-6.40146112 77.87757111]
[-21.64605331 79.74786377]
[-35.77712250 73.73052216]
[-44.99348831 61.44418335]
[-46.81599045 46.19380188]
[-40.75438690 32.08166122]
[-28.43921471 22.90385437]
[-13.18319798 21.12916565]
[0.90987307 27.23497391]
[10.04903316 39.57885361]
[11.77589417 54.84035873]
[25.55827522 60.76031876]
[39.34065628 66.68028259]
[53.12303925 72.60025024]
[67.28463745 58.60197830]
[85.07045746 50.99189758]
[103.84137726 50.44979858]
[107.24435425 35.84090805]
[110.64733124 21.23201561]
[114.05030823 6.62312222]
[117.45328522 -7.98577023]
[120.39877319 -22.69373131]
[122.88388824 -37.48643875]
[125.36900330 -52.27914810]
[127.85412598 -67.07185364]
[130.33924866 -81.86456299]
[116.60885620 -88.12066650]
[104.96613312 -97.71803284]
[96.20489502 -110.00229645]
[90.92250824 -124.13590240]
[89.47912598 -139.15518188]
[91.97315979 -154.03611755]
[98.23455811 -167.76409912]
[107.83641815 -179.40310669]
[120.12406921 -188.15960693]
[134.25970459 -193.43653870]
[149.27955627 -194.87411499]
[164.15953064 -192.37434387]
[177.88508606 -186.10763550]
[189.52038574 -176.50128174]
[198.27214050 -164.21025085]
[203.54360962 -150.07257080]
[204.97538757 -135.05216980]
[202.46986389 -120.17317200]
[196.19786072 -106.45004272]
[186.58702087 -94.81844330]
[174.29261780 -86.07144165]
[160.15290833 -80.80542755]
[145.13195801 -79.37944031]
[142.64683533 -64.58673859]
[140.16171265 -49.79402924]
[137.67658997 -35.00131989]
[135.19148254 -20.20861244]
[136.98306274 -17.10092545]
[137.32025146 -12.95508575]
[135.72471619 -8.48220730]
[132.06217957 -4.58279228]
[128.65919495 10.02610016]
[125.25622559 24.63499260]
[121.85324860 39.24388504]
[118.45027161 53.85277939]
[130.40406799 60.68624878]
[140.02412415 70.53734589]
[146.57202148 82.64992523]
[149.54516602 96.09426117]
[164.50541687 97.18556976]
[179.46566772 98.27687836]
[187.49139404 85.24436951]
[200.66023254 77.44436646]
[215.94610596 76.66926575]
[229.83641052 83.09716797]
[239.13926697 95.25099182]
[241.71694946 110.33787537]
[236.97711182 124.89096832]
[226.00894165 135.56607056]
[211.33285522 139.91014099]
[196.32128906 136.92491150]
[184.42381287 127.29638672]
[178.37435913 113.23712921]
[163.41410828 112.14582062]
[148.45385742 111.05451202]
[140.77056885 128.42074585]
[127.13475037 141.63752747]
[109.53723145 148.77519226]
[110.16120911 163.76220703]
[110.78518677 178.74922180]
[111.40916443 193.73625183]
[114.91177368 202.24409485]
[111.88694000 209.04086304]
[112.19899750 224.03761292]
[112.51105499 239.03436279]
[112.82311249 254.03112793]
[113.13516998 269.02786255]
[113.44721985 284.02462769]
[113.75927734 299.02139282]
[114.07133484 314.01812744]
[114.38339233 329.01489258]
[129.03839111 332.60565186]
[142.26419067 339.86791992]
[153.15905762 350.30651855]
[160.98016357 363.20971680]
[165.19422913 377.69778442]
[165.51394653 392.78289795]
[161.91752625 407.43649292]
[154.65016174 420.65948486]
[144.20735168 431.55032349]
[131.30113220 439.36645508]
[116.81143951 443.57492065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 129]
[21 128]
[22 127]
[23 126]
[29 38]
[30 37]
[31 36]
[39 56]
[40 55]
[41 54]
[42 53]
[59 103]
[60 102]
[61 101]
[62 100]
[63 99]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[107 123]
[108 122]
[109 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
