%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAAAGCCAGGGGGGGGGGUACUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACAAUGAACAAxxxxxxxxxxUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACCCCCCCCCCCUCCAAAGCCA\
) } def
/len { sequence length } bind def

/coor [
[85.73217010 416.20916748]
[71.71022797 410.65615845]
[59.51026917 401.78982544]
[49.89919662 390.16751099]
[43.48117065 376.51980591]
[40.65963364 361.70462036]
[41.61194992 346.65325928]
[46.27825546 332.31182861]
[54.36522293 319.58187866]
[65.36449432 309.26361084]
[78.58465576 302.00561523]
[93.19467163 298.26419067]
[93.19467163 283.26419067]
[93.19467163 268.26419067]
[93.19467163 253.26419067]
[93.19467163 238.26419067]
[93.19467163 223.26419067]
[93.19467163 208.26419067]
[93.19467163 193.26419067]
[93.19467163 178.26419067]
[93.19467163 163.26419067]
[93.19467163 148.26419067]
[83.60403442 133.59912109]
[92.86221313 117.71463013]
[82.48131561 107.60605621]
[82.18382263 93.11959076]
[92.14095306 82.59334564]
[91.83297729 67.59650421]
[83.81396484 53.95810318]
[91.28831482 41.07465363]
[90.98033905 26.07781601]
[90.67236328 11.08097839]
[90.36438751 -3.91585922]
[90.05640411 -18.91269684]
[75.07086945 -19.71323395]
[60.18537521 -21.61831093]
[45.48122787 -24.61752319]
[31.03873634 -28.69448853]
[16.93678093 -33.82694244]
[3.25238180 -39.98684692]
[-9.93971920 -47.14056778]
[-22.56747246 -55.24902344]
[-34.56190872 -64.26793671]
[-45.85751343 -74.14804077]
[-56.39259720 -84.83538055]
[-66.10962677 -96.27157593]
[-74.95551300 -108.39418030]
[-82.88195801 -121.13697052]
[-89.84566498 -134.43034363]
[-95.80860138 -148.20172119]
[-100.73819733 -162.37586975]
[-104.60752869 -176.87536621]
[-107.39546204 -191.62103271]
[-109.08676910 -206.53231812]
[-109.67221832 -221.52780151]
[-109.14861298 -236.52557373]
[-107.51879883 -251.44371033]
[-104.79169464 -266.20074463]
[-100.98218536 -280.71609497]
[-96.11107635 -294.91043091]
[-90.20497894 -308.70626831]
[-83.29614258 -322.02825928]
[-75.42230988 -334.80361938]
[-66.62648010 -346.96258545]
[-56.95669937 -358.43875122]
[-46.46577072 -369.16946411]
[-35.21100235 -379.09603882]
[-23.25385666 -388.16433716]
[-10.65964603 -396.32479858]
[2.50284481 -403.53286743]
[16.16172600 -409.74914551]
[30.24239922 -414.93969727]
[44.66795731 -419.07617188]
[59.35961151 -422.13598633]
[74.23712158 -424.10244751]
[89.21923065 -424.96475220]
[104.22411346 -424.71826172]
[119.16981506 -423.36425781]
[133.97470093 -420.91018677]
[148.55792236 -417.36944580]
[162.83982849 -412.76135254]
[176.74240112 -407.11108398]
[190.18971252 -400.44949341]
[203.10833740 -392.81295776]
[215.42770386 -384.24319458]
[227.08052063 -374.78704834]
[238.00314331 -364.49609375]
[248.13594055 -353.42660522]
[257.42352295 -341.63900757]
[265.81521606 -329.19766235]
[273.26516724 -316.17056274]
[279.73266602 -302.62881470]
[285.18243408 -288.64642334]
[289.58465576 -274.29974365]
[292.91531372 -259.66708374]
[295.15621948 -244.82844543]
[296.29510498 -229.86482239]
[296.32580566 -214.85794067]
[295.24810791 -199.88978577]
[293.06790161 -185.04209900]
[289.79708862 -170.39596558]
[285.45358276 -156.03138733]
[280.06106567 -142.02682495]
[273.64898682 -128.45875549]
[266.25238037 -115.40128326]
[257.91165161 -102.92573547]
[248.67231750 -91.10024261]
[238.58488464 -79.98940277]
[227.70443726 -69.65388489]
[216.09037781 -60.15014267]
[203.80616760 -51.53009033]
[190.91888428 -43.84080124]
[177.49891663 -37.12427139]
[163.61956787 -31.41719246]
[149.35662842 -26.75072670]
[134.78800964 -23.15036392]
[119.99328613 -20.63576889]
[105.05324554 -19.22067451]
[105.36122131 -4.22383690]
[105.66919708 10.77300167]
[105.97718048 25.76983833]
[106.28515625 40.76667786]
[114.28214264 53.33240509]
[106.82981110 67.28852844]
[107.13778687 82.28536987]
[117.51868439 92.39394379]
[117.81617737 106.88040924]
[107.85904694 117.40665436]
[116.62852478 126.91979980]
[116.54232788 139.45629883]
[108.19467163 148.26419067]
[108.19467163 163.26419067]
[108.19467163 178.26419067]
[108.19467163 193.26419067]
[108.19467163 208.26419067]
[108.19467163 223.26419067]
[108.19467163 238.26419067]
[108.19467163 253.26419067]
[108.19467163 268.26419067]
[108.19467163 283.26419067]
[108.19467163 298.26419067]
[122.80467987 302.00561523]
[136.02484131 309.26361084]
[147.02410889 319.58187866]
[155.11108398 332.31182861]
[159.77738953 346.65325928]
[160.72970581 361.70462036]
[157.90817261 376.51980591]
[151.49014282 390.16751099]
[141.87907410 401.78982544]
[129.67910767 410.65615845]
[115.65716553 416.20916748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[24 128]
[27 125]
[28 124]
[30 122]
[31 121]
[32 120]
[33 119]
[34 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
