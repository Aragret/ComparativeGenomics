%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAAUCUUAGGGGGGGGGGUCCAUCAUAGCAGGCAGUUGAGGUGGAUUAAACCAAACCCAGCUACGCAAxxxxxxxxxxGGAGCCUCCGUAGACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUCCCCCCCCCCCCUCUAUCUUA\
) } def
/len { sequence length } bind def

/coor [
[83.78427887 383.89767456]
[70.56407928 376.62521362]
[59.67727661 366.17819214]
[51.86614609 353.26895142]
[47.66326523 338.77764893]
[47.35519028 323.69229126]
[50.96293259 309.04147339]
[58.24050522 295.82409668]
[68.69171143 284.94131470]
[81.60397339 277.13519287]
[96.09690857 272.93789673]
[95.78485870 257.94113159]
[95.47280121 242.94438171]
[95.16074371 227.94763184]
[94.84868622 212.95088196]
[94.53662872 197.95413208]
[94.22457123 182.95736694]
[93.91252136 167.96061707]
[93.60046387 152.96386719]
[93.28840637 137.96711731]
[86.04020691 135.93981934]
[79.32395172 132.54301453]
[73.39558411 127.90612793]
[68.48100281 122.20584869]
[64.76747894 115.65939331]
[62.39653015 108.51622009]
[61.45849609 101.04853058]
[61.98912430 93.54088593]
[47.97240829 88.19937134]
[33.95569611 82.85785675]
[19.93898392 77.51634979]
[4.28818798 79.83219147]
[-4.84952116 68.06990051]
[-18.86623383 62.72838974]
[-25.54769135 63.41076279]
[-30.75865364 60.94557190]
[-33.34724045 56.86209869]
[-47.12962341 50.94213867]
[-60.91200256 45.02217484]
[-73.20166779 49.07408142]
[-84.58191681 43.81015778]
[-89.14856720 32.56502151]
[-102.80480194 26.35961342]
[-116.46104431 20.15420723]
[-130.48887634 27.06462288]
[-145.66436768 23.29120064]
[-154.82209778 10.61563587]
[-153.63807678 -4.97705841]
[-142.67135620 -16.12448883]
[-127.10010529 -17.56317902]
[-114.27656555 -8.61382294]
[-110.25563812 6.49796534]
[-96.59939575 12.70337296]
[-82.94315338 18.90877914]
[-65.62572479 16.24297333]
[-54.99203873 31.23979187]
[-41.20965958 37.15975571]
[-27.42727661 43.07971954]
[-13.52472115 48.71167755]
[0.49199152 54.05318832]
[15.14021873 51.35527802]
[25.28049660 63.49963379]
[39.29721069 68.84114838]
[53.31392288 74.18265533]
[67.33063507 79.52416992]
[78.64659882 66.47461700]
[94.96337128 59.37036133]
[113.27220154 60.01195908]
[129.98144531 68.72364044]
[138.74766541 56.55180359]
[124.30371094 60.59808731]
[109.73824310 57.01378632]
[98.82148743 46.72668839]
[94.37920380 32.39957428]
[97.56127167 17.74098015]
[107.54402161 6.54523134]
[121.74344635 1.71031737]
[136.48406982 4.48774004]
[147.95031738 14.15857220]
[153.17420959 28.21954727]
[150.80357361 43.03092957]
[161.89488220 32.93228149]
[172.98620605 22.83362961]
[184.07751465 12.73498058]
[177.14352417 -0.66584277]
[173.91513062 -15.40490341]
[174.61245728 -30.47726631]
[179.18797302 -44.85527420]
[187.32969666 -57.55860901]
[198.48251343 -67.72113800]
[211.88601685 -74.64996338]
[226.62632751 -77.87266541]
[241.69841003 -77.16950989]
[256.07464600 -72.58844757]
[268.77484131 -64.44182587]
[278.93307495 -53.28507996]
[285.85671997 -39.87890625]
[289.07373047 -25.13735580]
[288.36474609 -10.06553555]
[283.77813721 4.30893517]
[275.62661743 17.00597954]
[264.46594238 27.15989304]
[251.05709839 34.07836533]
[236.31431580 37.28968430]
[221.24276733 36.57489014]
[206.87007141 31.98272896]
[194.17616272 23.82629585]
[183.08485413 33.92494583]
[171.99354553 44.02359390]
[160.90222168 54.12224579]
[150.91949463 65.31800842]
[142.15328979 77.48984528]
[147.05484009 91.66640472]
[161.46705627 95.82429504]
[175.87927246 99.98217773]
[190.29148865 104.14006805]
[204.70370483 108.29795837]
[219.11592102 112.45584106]
[236.01039124 111.03691864]
[242.05070496 126.87834930]
[228.50050354 137.06796265]
[214.95803833 126.86805725]
[200.54582214 122.71017456]
[186.13360596 118.55228424]
[171.72138977 114.39439392]
[157.30917358 110.23651123]
[142.89695740 106.07862091]
[135.68382263 121.64541626]
[123.36071777 132.64892578]
[108.28515625 137.65505981]
[108.59721375 152.65180969]
[108.90927124 167.64855957]
[109.22132874 182.64530945]
[109.53338623 197.64207458]
[109.84544373 212.63882446]
[110.15749359 227.63557434]
[110.46955109 242.63232422]
[110.78160858 257.62908936]
[111.09366608 272.62582397]
[125.74865723 276.21661377]
[138.97447205 283.47885132]
[149.86933899 293.91744995]
[157.69042969 306.82067871]
[161.90449524 321.30874634]
[162.22422791 336.39382935]
[158.62779236 351.04742432]
[151.36042786 364.27044678]
[140.91763306 375.16128540]
[128.01139832 382.97738647]
[113.52171326 387.18588257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[28 65]
[29 64]
[30 63]
[31 62]
[33 60]
[34 59]
[37 58]
[38 57]
[39 56]
[42 54]
[43 53]
[44 52]
[69 112]
[70 111]
[81 110]
[82 109]
[83 108]
[84 107]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
