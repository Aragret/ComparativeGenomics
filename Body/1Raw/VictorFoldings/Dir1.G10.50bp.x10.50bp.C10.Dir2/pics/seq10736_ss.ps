%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCAUAAUGGGGGGGGGGAUUCAUCCCUGUAGCAUUGUUCGUUACAUGGUCCAUCAUAGAAUUCUCACxxxxxxxxxxCCACCCUUACUACACAAUCAAAGACGCCCUCGGCUUACUUCUCUUCCUUCCCCCCCCCCCUCUCCUUAAU\
) } def
/len { sequence length } bind def

/coor [
[102.52416992 512.80285645]
[89.30397034 505.53039551]
[78.41716766 495.08337402]
[70.60604095 482.17413330]
[66.40316010 467.68283081]
[66.09508514 452.59747314]
[69.70282745 437.94665527]
[76.98040009 424.72927856]
[87.43161011 413.84649658]
[100.34387207 406.04034424]
[114.83680725 401.84307861]
[114.52474976 386.84631348]
[114.21269226 371.84954834]
[113.90063477 356.85281372]
[113.58858490 341.85604858]
[113.27652740 326.85931396]
[112.96446991 311.86254883]
[112.65241241 296.86578369]
[112.34035492 281.86904907]
[112.02829742 266.87228394]
[111.71624756 251.87553406]
[96.65505219 247.94052124]
[83.29344177 239.92536926]
[72.71179962 228.46867371]
[65.76839447 214.48767090]
[63.02975464 199.10482788]
[64.72448730 183.55770874]
[70.72418213 169.09942627]
[80.55312347 156.89761353]
[93.42599487 147.94017029]
[108.31060791 142.95523071]
[107.68663025 127.96821594]
[88.90471649 125.25409698]
[76.72975922 111.95742035]
[75.78940582 94.90281677]
[85.31621552 81.88342285]
[80.12080383 67.81190491]
[74.92538452 53.74038315]
[69.72997284 39.66886139]
[64.53455353 25.59734344]
[49.94662857 29.15968323]
[35.04771423 31.03586960]
[20.03204346 31.20144272]
[5.09537983 29.65424538]
[-9.56754875 26.41444969]
[-23.76558113 21.52428818]
[-37.31361389 15.04751968]
[-50.03502655 7.06857967]
[-61.76396179 -2.30851054]
[-72.34751129 -12.96150112]
[-81.64770508 -24.75150681]
[-89.54328156 -37.52482224]
[-95.93131256 -51.11492157]
[-100.72852325 -65.34462738]
[-103.87236023 -80.02842712]
[-105.32185364 -94.97489166]
[-105.05808258 -109.98915863]
[-103.08451080 -124.87548828]
[-99.42684937 -139.43980408]
[-94.13278961 -153.49223328]
[-87.27135468 -166.84956360]
[-78.93199921 -179.33767700]
[-69.22342682 -190.79374695]
[-58.27222824 -201.06842041]
[-46.22116470 -210.02775574]
[-33.22735214 -217.55494690]
[-19.46018410 -223.55184937]
[-5.09914970 -227.94029236]
[9.66852665 -230.66307068]
[24.65032005 -231.68466187]
[39.65090942 -230.99177551]
[54.47473145 -228.59342957]
[68.92852783 -224.52090454]
[82.82386780 -218.82727051]
[95.97958374 -211.58677673]
[108.22418213 -202.89381409]
[119.39801788 -192.86170959]
[129.35542297 -181.62124634]
[137.96656799 -169.31898499]
[145.11921692 -156.11529541]
[150.72009277 -142.18231201]
[154.69618225 -127.70169067]
[156.99566650 -112.86221313]
[157.58854675 -97.85733795]
[156.46710205 -82.88268280]
[153.64595032 -68.13348389]
[149.16188049 -53.80202484]
[143.07333374 -40.07513809]
[135.45970154 -27.13178444]
[126.42024231 -15.14070892]
[116.07279968 -4.25824022]
[104.55226898 5.37374783]
[92.00885010 13.62968159]
[78.60607147 20.40192795]
[83.80149078 34.47344589]
[88.99690247 48.54496765]
[94.19232178 62.61648560]
[99.38773346 76.68800354]
[112.43564606 78.06472015]
[123.61978912 86.69331360]
[128.99310303 100.83963776]
[143.70106506 97.89415741]
[158.40902710 94.94867706]
[170.42118835 84.65213776]
[184.42001343 89.73960114]
[199.12797546 86.79411316]
[211.07943726 75.56493378]
[226.69964600 80.55902100]
[229.91987610 96.63889313]
[217.42742920 107.26294708]
[202.07345581 101.50207520]
[187.36549377 104.44756317]
[176.40534973 114.53341675]
[161.35452271 109.65663910]
[146.64656067 112.60211945]
[131.93859863 115.54759979]
[122.67364502 127.34423828]
[123.29762268 142.33125305]
[137.40652466 145.61763000]
[150.16752625 152.44891357]
[160.70826721 162.35095215]
[168.31002808 174.63993835]
[172.45677185 188.46960449]
[172.87008667 202.88949585]
[169.52793884 216.91030884]
[162.66571045 229.57179260]
[152.75965881 240.00842285]
[140.49388123 247.50868225]
[126.71299744 251.56347656]
[127.02505493 266.56024170]
[127.33711243 281.55697632]
[127.64916992 296.55374146]
[127.96121979 311.55050659]
[128.27328491 326.54724121]
[128.58534241 341.54400635]
[128.89738464 356.54074097]
[129.20944214 371.53750610]
[129.52149963 386.53427124]
[129.83355713 401.53100586]
[144.48855591 405.12179565]
[157.71435547 412.38403320]
[168.60922241 422.82263184]
[176.43032837 435.72586060]
[180.64439392 450.21389771]
[180.96411133 465.29901123]
[177.36769104 479.95260620]
[170.10032654 493.17562866]
[159.65753174 504.06646729]
[146.75129700 511.88256836]
[132.26161194 516.09106445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[31 118]
[32 117]
[36 98]
[37 97]
[38 96]
[39 95]
[40 94]
[101 116]
[102 115]
[103 114]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
