%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAAACUCACGGGGGGGGGGCUGAGUUGUAAAAAACUCCAGUUGACACAAAAUAGACUACGAAAGUGGCUxxxxxxxxxxCCCUCAUAAUCAUUUUCCUUAUCUGCUUCCUAGUCCUGUAUGCCCUUUUCCCCCCCCCCCCUAACACUCAC\
) } def
/len { sequence length } bind def

/coor [
[83.66121674 384.40301514]
[70.17233276 377.67147827]
[58.68683243 367.90692139]
[49.87246323 355.67703247]
[44.24168396 341.69284058]
[42.12185287 326.76736450]
[43.63622284 311.76837158]
[48.69674683 297.56784058]
[57.00921249 284.99142456]
[68.09033966 274.77026367]
[81.29589844 267.49862671]
[95.85812378 263.59927368]
[95.55014038 248.60243225]
[95.24216461 233.60559082]
[94.93418884 218.60874939]
[94.62621307 203.61190796]
[94.31822968 188.61508179]
[94.01025391 173.61824036]
[93.70227814 158.62139893]
[93.39430237 143.62455750]
[93.08631897 128.62771606]
[85.79424286 125.79810333]
[79.50421906 121.14871979]
[74.65992737 115.00754547]
[60.23254395 119.11248779]
[45.80516052 123.21743011]
[31.37777710 127.32238007]
[16.95039177 131.42732239]
[9.47987938 145.35452271]
[-5.67451429 149.84004211]
[-19.52195549 142.22270203]
[-23.84700584 127.02173615]
[-16.08368683 113.25559998]
[-0.83783835 109.09150696]
[12.84544659 116.99993896]
[27.27283096 112.89498901]
[41.70021439 108.79004669]
[56.12760162 104.68510437]
[70.55498505 100.58015442]
[70.70434570 96.98170471]
[71.29182434 93.42839813]
[58.00448227 86.46804047]
[44.71714020 79.50768280]
[32.80080414 88.99034119]
[18.05611801 92.80008698]
[3.03768945 90.27685547]
[-9.65244865 81.85781097]
[-17.81565285 69.00160980]
[-20.03759956 53.93565750]
[-15.93332195 39.27022934]
[-6.21391153 27.54619408]
[7.43668461 20.79481697]
[22.65341949 20.18581009]
[36.79990005 25.82468987]
[47.42516327 36.73448563]
[52.68832016 51.02500916]
[51.67749405 66.22034454]
[64.96483612 73.18070221]
[78.25217438 80.14105225]
[86.21125793 73.97662354]
[95.78151703 70.85295868]
[105.84469604 71.13505554]
[115.22493744 74.78994751]
[125.99361420 64.34793854]
[136.76229858 53.90592957]
[147.53097534 43.46392059]
[151.54675293 35.18930435]
[158.62959290 32.92089462]
[169.61039734 22.70218658]
[180.59120178 12.48348045]
[171.70541382 0.37730485]
[164.28520203 -12.67860699]
[158.43087769 -26.50768852]
[154.22164917 -40.92292023]
[151.71441650 -55.72934723]
[150.94308472 -70.72673035]
[151.91810608 -85.71225739]
[154.62628174 -100.48324585]
[159.03099060 -114.83995819]
[165.07267761 -128.58822632]
[172.66960144 -141.54209900]
[181.71903992 -153.52642822]
[192.09861755 -164.37911987]
[203.66796875 -173.95339966]
[216.27059937 -182.11979675]
[229.73609924 -188.76786804]
[243.88235474 -193.80770874]
[258.51806641 -197.17114258]
[273.44528198 -198.81269836]
[288.46212769 -198.71017456]
[303.36553955 -196.86495972]
[317.95394897 -193.30200195]
[332.03009033 -188.06948853]
[345.40356445 -181.23818970]
[357.89352417 -172.90046692]
[369.33105469 -163.16911316]
[379.56149292 -152.17572021]
[388.44647217 -140.06895447]
[395.86581421 -127.01254272]
[401.71920776 -113.18306732]
[405.92749023 -98.76755524]
[408.43371582 -83.96096039]
[409.20404053 -68.96352386]
[408.22802734 -53.97806931]
[405.51885986 -39.20725250]
[401.11318970 -24.85084152]
[395.07058716 -11.10298157]
[387.47280884 1.85039878]
[378.42257690 13.83412075]
[368.04226685 24.68611717]
[356.47229004 34.25962830]
[343.86911011 42.42518616]
[330.40316772 49.07235336]
[316.25656128 54.11124420]
[301.62063599 57.47370529]
[286.69329834 59.11426544]
[271.67645264 59.01073837]
[256.77316284 57.16452789]
[242.18498230 53.60059357]
[228.10920715 48.36714172]
[214.73619080 41.53494644]
[202.24679565 33.19640350]
[190.80990601 23.46428299]
[179.82910156 33.68299103]
[168.84829712 43.90169525]
[157.97299194 54.23260117]
[147.20429993 64.67460632]
[136.43562317 75.11661530]
[125.66694641 85.55862427]
[127.23776245 111.20043182]
[108.08316040 128.31974792]
[108.39113617 143.31658936]
[108.69911957 158.31341553]
[109.00709534 173.31025696]
[109.31507111 188.30709839]
[109.62304688 203.30393982]
[109.93102264 218.30076599]
[110.23900604 233.29760742]
[110.54698181 248.29444885]
[110.85495758 263.29129028]
[125.56499481 266.58950806]
[139.05795288 273.31286621]
[150.54937744 283.07046509]
[159.37115479 295.29501343]
[165.01040649 309.27578735]
[167.13928223 324.19998169]
[165.63401794 339.19989014]
[160.58210754 353.40347290]
[152.27726746 365.98492432]
[141.20233154 376.21279907]
[128.00119019 383.49246216]
[113.44132996 387.40063477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[41 59]
[42 58]
[43 57]
[63 129]
[64 128]
[65 127]
[66 126]
[68 125]
[69 124]
[70 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
