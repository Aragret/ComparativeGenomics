%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAUAUUACGGGGGGGGGGAGGCGAACAUACUUACUAAAGUGUGUUAAUUAAUUAAUGCUUGUAGGACAxxxxxxxxxxCAGUAGCCCAAACAAUCUCAUAUGAAGUCACCCUAGCCAUCAUUCUACUACCCCCCCCCCUCAACAUUAC\
) } def
/len { sequence length } bind def

/coor [
[92.92433167 408.05114746]
[79.07839203 402.03512573]
[67.36972809 392.50570679]
[58.66720581 380.17004395]
[53.61660385 365.94351196]
[52.59271240 350.88183594]
[55.67151260 336.10266113]
[62.62453461 322.70275879]
[72.93582153 311.67642212]
[85.84020233 303.84191895]
[100.38008881 299.78057861]
[100.38008881 284.78057861]
[100.38008881 269.78057861]
[100.38008881 254.78059387]
[100.38008881 239.78059387]
[100.38008881 224.78059387]
[100.38008881 209.78059387]
[100.38008881 194.78059387]
[100.38008881 179.78059387]
[100.38008881 164.78059387]
[100.22405243 149.78140259]
[99.91199493 134.78465271]
[80.36215973 103.59223938]
[65.54439545 101.26113892]
[50.72663879 98.93003845]
[35.74692535 98.15019226]
[20.76721191 98.93003845]
[5.78749704 99.70987701]
[-9.19221687 100.48972321]
[-24.17193222 101.26956940]
[-39.15164566 102.04941559]
[-54.13135910 102.82926178]
[-69.11107635 103.60910797]
[-84.09078979 104.38895416]
[-97.54534149 113.76483154]
[-112.27543640 106.55677032]
[-113.12802887 90.17979431]
[-99.22602844 81.48114777]
[-84.87063599 89.40923309]
[-69.89092255 88.62939453]
[-54.91120529 87.84954834]
[-39.93149185 87.06970215]
[-24.95177650 86.28985596]
[-9.97206211 85.51000977]
[5.00765228 84.73016357]
[19.98736572 83.95031738]
[34.96707916 83.17047882]
[22.77190399 74.43676758]
[16.45234299 60.83297729]
[17.64419556 45.88040161]
[26.03895569 33.44947052]
[39.46366501 26.75789642]
[54.44337845 27.53776932]
[67.10063934 35.58721924]
[74.15916443 48.82267761]
[73.79186249 63.81818008]
[66.09381866 76.69218445]
[53.05774307 84.11227417]
[67.87550354 86.44338226]
[82.69326019 88.77448273]
[94.58563995 79.63275146]
[96.14321899 64.71383667]
[97.70080566 49.79492569]
[99.25838470 34.87601471]
[91.35660553 18.27656174]
[102.13339996 4.46132946]
[103.38027954 -10.48675728]
[89.28559113 -15.91965866]
[77.29329681 -25.10451698]
[68.37556458 -37.29675674]
[63.25531387 -51.50801086]
[62.34761429 -66.58622742]
[65.72605896 -81.30909729]
[73.11676025 -94.48309326]
[83.92060089 -105.04026031]
[97.26174927 -112.12477875]
[112.05870819 -115.16233063]
[127.11194611 -113.90668488]
[141.20117188 -108.45963287]
[153.18423462 -99.26272583]
[162.08970642 -87.06153870]
[167.19567871 -72.84514618]
[168.08822632 -57.76602173]
[164.69500732 -43.04655457]
[157.29106140 -29.87998962]
[146.47662354 -19.33368301]
[133.12837219 -12.26257229]
[118.32836151 -9.23988247]
[117.08148956 5.70820427]
[124.66886139 15.18127918]
[123.71073914 27.68331718]
[114.17729187 36.43359375]
[112.61971283 51.35250854]
[111.06213379 66.27141571]
[109.50455475 81.19033051]
[114.61128998 86.68316650]
[119.01852417 72.34523010]
[133.63917542 68.99314117]
[143.85241699 79.97902679]
[139.44487000 94.31686401]
[124.82477570 97.66883087]
[129.93151855 103.16165924]
[144.92420959 102.69361877]
[159.91690063 102.22557831]
[174.90960693 101.75753784]
[180.25296021 87.52668762]
[190.63914490 76.42733765]
[204.48432922 70.15203857]
[219.67721558 69.65774536]
[233.90103149 75.01982117]
[244.98670959 85.42059326]
[251.24378967 99.27401733]
[251.71809387 114.46755219]
[246.33731079 128.68428040]
[235.92196655 139.75628662]
[222.06031799 145.99513245]
[206.86618042 146.44944763]
[192.65652466 141.04997253]
[181.59825134 130.62007141]
[175.37763977 116.75022888]
[160.38494873 117.21826935]
[145.39225769 117.68631744]
[130.39955139 118.15435791]
[144.07142639 124.32523346]
[146.95899963 139.04467773]
[136.63182068 149.92353821]
[121.78214264 147.80520630]
[114.90874481 134.47259521]
[115.22080231 149.46934509]
[118.54566193 158.04823303]
[115.38008881 164.78059387]
[115.38008881 179.78059387]
[115.38008881 194.78059387]
[115.38008881 209.78059387]
[115.38008881 224.78059387]
[115.38008881 239.78059387]
[115.38008881 254.78059387]
[115.38008881 269.78057861]
[115.38008881 284.78057861]
[115.38008881 299.78057861]
[129.91996765 303.84191895]
[142.82435608 311.67642212]
[153.13563538 322.70275879]
[160.08865356 336.10266113]
[163.16746521 350.88183594]
[162.14356995 365.94351196]
[157.09297180 380.17004395]
[148.39044189 392.50570679]
[136.68177795 402.03512573]
[122.83583832 408.05114746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 129]
[22 128]
[23 60]
[24 59]
[25 58]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[61 95]
[62 94]
[63 93]
[64 92]
[66 89]
[67 88]
[102 123]
[103 122]
[104 121]
[105 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
