%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCACUCCCAGGGGGGGGGGUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACxxxxxxxxxxAGGAGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAAAUCCCCUAGAAGCCCCCCCCCCUCCCACUCCUA\
) } def
/len { sequence length } bind def

/coor [
[51.62710190 239.69306946]
[40.49325180 235.32568359]
[29.74888039 230.07257080]
[19.46430779 223.96812439]
[9.70684814 217.05229187]
[0.54036331 209.37034607]
[-7.97515059 200.97256470]
[-15.78395844 191.91390991]
[-22.83495140 182.25367737]
[-29.08198166 172.05508423]
[-34.48415756 161.38488770]
[-39.00612640 150.31291199]
[-42.61828995 138.91163635]
[-57.27101517 142.12063599]
[-71.92374420 145.32963562]
[-83.74915314 155.84011841]
[-97.83702850 151.00473022]
[-112.48975372 154.21372986]
[-127.14247894 157.42272949]
[-141.79519653 160.63171387]
[-156.44792175 163.84071350]
[-171.10064697 167.04971313]
[-171.95738220 182.12182617]
[-176.84983826 196.40350342]
[-185.41496277 208.83496094]
[-197.01718140 218.49369812]
[-210.79551697 224.66297913]
[-225.72753906 226.88497925]
[-240.70518494 224.99482727]
[-254.61701965 219.13279724]
[-266.43069458 209.73385620]
[-275.26953125 197.49551392]
[-280.47766113 183.32589722]
[-281.66857910 168.27650452]
[-278.75396729 153.46409607]
[-271.95004272 139.98785400]
[-261.76171875 128.84779358]
[-248.94505310 120.87059784]
[-234.45111084 116.64821625]
[-219.35545349 116.49398804]
[-204.77827454 120.41934967]
[-191.80130005 128.13301086]
[-181.38749695 139.06257629]
[-174.30964661 152.39698792]
[-159.65692139 149.18798828]
[-145.00419617 145.97898865]
[-130.35147095 142.77000427]
[-115.69875336 139.56100464]
[-101.04602814 136.35200500]
[-90.26867676 126.07105255]
[-75.13273621 130.67691040]
[-60.48001099 127.46791077]
[-45.82728577 124.25891876]
[-47.24839783 113.11495972]
[-47.81914902 101.89527130]
[-47.53624344 90.66462708]
[-46.40132141 79.48790741]
[-44.42092896 68.42963409]
[-41.60650635 57.55368423]
[-37.97430801 46.92285919]
[-33.54531097 36.59855652]
[-28.34508705 26.64039803]
[-22.40367317 17.10588837]
[-15.75537682 8.05009270]
[-8.43859482 -0.47469270]
[-0.49558038 -8.41923714]
[8.02779579 -15.73766136]
[17.08230972 -22.38770103]
[26.61567497 -28.33095360]
[36.57283401 -33.53309250]
[46.89628220 -37.96408081]
[57.52640533 -41.59832764]
[68.40181732 -44.41484451]
[79.45970154 -46.39736557]
[90.63620758 -47.53444290]
[101.86679077 -47.81951141]
[113.08659363 -47.25091934]
[124.23081970 -45.83195877]
[135.23512268 -43.57081604]
[146.03593445 -40.48055267]
[156.57089233 -36.57901764]
[166.77914429 -31.88873672]
[176.60176086 -26.43679810]
[185.01516724 -38.85511398]
[187.25944519 -47.77469635]
[193.73098755 -51.43959427]
[202.39758301 -63.68254852]
[211.06419373 -75.92549896]
[219.73080444 -88.16845703]
[220.70433044 -104.53868103]
[235.48725891 -111.63775635]
[248.87219238 -102.16275787]
[247.08985901 -85.86075592]
[231.97375488 -79.50184631]
[223.30714417 -67.25889587]
[214.64054871 -55.01594162]
[205.97393799 -42.77298737]
[197.43347168 -30.44170380]
[189.02006531 -18.02338791]
[211.23669434 2.63219142]
[228.76937866 27.38773346]
[240.87983704 55.20082855]
[247.05812073 84.90032959]
[247.04409790 115.23564148]
[261.86657715 117.53652191]
[276.68905640 119.83739471]
[291.51275635 114.30849457]
[302.90255737 123.90648651]
[317.72506714 126.20735931]
[324.53515625 112.69893646]
[335.18774414 101.95752716]
[348.63916016 95.03546906]
[363.57156372 92.61092377]
[378.52203369 94.92140961]
[392.02587891 101.74057007]
[402.76016235 112.40034485]
[409.67318726 125.85638428]
[412.08773804 140.79040527]
[409.76724243 155.73933411]
[402.93902588 169.23861694]
[392.27206421 179.96574402]
[378.81140137 186.86976624]
[363.87576294 189.27430725]
[348.92837524 186.94378662]
[335.43368530 180.10653687]
[324.71371460 169.43238831]
[317.81869507 155.96708679]
[315.42416382 141.02984619]
[300.60168457 138.72895813]
[286.83819580 144.42243958]
[274.38818359 134.65988159]
[259.56570435 132.35900879]
[244.74322510 130.05812073]
[241.83978271 141.66014099]
[238.00799561 152.98948669]
[233.27293396 163.97201538]
[227.66558838 174.53584290]
[221.22265625 184.61181641]
[213.98631287 194.13400269]
[206.00393677 203.04008484]
[197.32774353 211.27175903]
[188.01452637 218.77514648]
[178.12525940 225.50114441]
[167.72465515 231.40571594]
[156.88078308 236.45024109]
[145.66462708 240.60168457]
[134.14958191 243.83288574]
[122.41104126 246.12268066]
[110.52581024 247.45610046]
[98.57168579 247.82440186]
[86.62691498 247.22517395]
[74.76966095 245.66235352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 53]
[14 52]
[15 51]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[83 99]
[84 98]
[86 97]
[87 96]
[88 95]
[89 94]
[104 133]
[105 132]
[106 131]
[108 129]
[109 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
