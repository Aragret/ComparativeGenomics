%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAUUAAUUGGGGGGGGGGCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACCCUAUAGCACCCCCUxxxxxxxxxxUUCAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAACCCCCCCCCCUAAAAUUAAUU\
) } def
/len { sequence length } bind def

/coor [
[109.18712616 367.17593384]
[95.16518402 361.62292480]
[82.96522522 352.75659180]
[73.35415649 341.13430786]
[66.93612671 327.48660278]
[64.11459351 312.67141724]
[65.06690979 297.62002563]
[69.73321533 283.27859497]
[77.82018280 270.54864502]
[88.81945038 260.23037720]
[102.03961182 252.97239685]
[116.64962769 249.23097229]
[116.64962769 234.23097229]
[116.64962769 219.23097229]
[116.64962769 204.23097229]
[116.64962769 189.23097229]
[116.64962769 174.23097229]
[116.64962769 159.23097229]
[116.64962769 144.23097229]
[116.64962769 129.23097229]
[116.64962769 114.23096466]
[99.00406647 119.87226868]
[85.30532074 110.20677185]
[70.53320312 112.81149292]
[55.76108551 115.41621399]
[40.98896790 118.02093506]
[26.21685219 120.62565613]
[22.57360458 135.41236877]
[13.22591114 147.43486023]
[-0.20668340 154.61018372]
[-15.39690113 155.69517517]
[-29.71294403 150.50183105]
[-40.67447281 139.92994690]
[-46.38233566 125.81115723]
[-45.84761047 110.59162903]
[-39.16294098 96.90824127]
[-27.48648643 87.13172150]
[-12.84126568 82.95590973]
[2.23534989 85.10429382]
[15.13124561 93.20465088]
[23.61212921 105.85354614]
[38.38424683 103.24881744]
[53.15636063 100.64409637]
[67.92848206 98.03937531]
[82.70059204 95.43465424]
[90.35016632 83.36799622]
[105.31317902 80.13246155]
[118.98106384 89.07070160]
[121.73731232 74.32611084]
[124.49355316 59.58151245]
[127.24979401 44.83691406]
[130.00604248 30.09231758]
[132.76228333 15.34772205]
[118.39537811 10.98247910]
[104.59590149 5.06322670]
[91.53135681 -2.33818245]
[79.36033630 -11.13190174]
[68.23059082 -21.21118355]
[58.27721786 -32.45367432]
[49.62104797 -44.72290039]
[42.36715698 -57.86992264]
[36.60359955 -71.73515320]
[32.40034103 -86.15027618]
[29.80840683 -100.94030762]
[28.85925865 -115.92571259]
[29.56441689 -130.92457581]
[31.91532516 -145.75483704]
[35.88344193 -160.23645020]
[41.42060089 -174.19363403]
[48.45958328 -187.45697021]
[56.91494370 -199.86543274]
[66.68404388 -211.26841736]
[77.64829254 -221.52748108]
[89.67459869 -230.51809692]
[102.61696625 -238.13113403]
[116.31829071 -244.27416992]
[130.61225891 -248.87261963]
[145.32533264 -251.87069702]
[160.27893066 -253.23197937]
[175.29151917 -252.93995667]
[190.18086243 -250.99816895]
[204.76623535 -247.43017578]
[218.87054443 -242.27931213]
[232.32260132 -235.60809326]
[244.95912170 -227.49749756]
[256.62667847 -218.04597473]
[267.18365479 -207.36828613]
[276.50192261 -195.59400940]
[284.46832275 -182.86610413]
[290.98617554 -169.33908081]
[295.97637939 -155.17710876]
[299.37829590 -140.55212402]
[301.15069580 -125.64167023]
[301.27203369 -110.62672424]
[299.74081421 -95.68956757]
[296.57568359 -81.01152802]
[291.81500244 -66.77076721]
[285.51660156 -53.14016724]
[277.75689697 -40.28518677]
[268.63012695 -28.36187744]
[258.24707031 -17.51497078]
[246.73377991 -7.87614393]
[234.22998047 0.43759921]
[220.88748169 7.32533693]
[206.86825562 12.70345879]
[192.34245300 16.50667763]
[177.48643494 18.68882942]
[162.48051453 19.22342110]
[147.50688171 18.10396385]
[144.75064087 32.84856033]
[141.99438477 47.59315872]
[139.23814392 62.33775330]
[136.48190308 77.08235168]
[133.72566223 91.82695007]
[140.86877441 78.63694763]
[151.81971741 68.38624573]
[165.45230103 62.12903976]
[180.36453247 60.50881577]
[195.02284241 63.69219971]
[207.91975403 71.35180664]
[217.72894287 82.69992828]
[223.44161987 96.56951141]
[224.47030640 111.53419495]
[220.70918274 126.05500793]
[212.54507446 138.63862610]
[200.81756592 147.99092102]
[186.73272705 153.15011597]
[171.73904419 153.58563232]
[157.37849426 149.25267029]
[145.12791443 140.59686279]
[136.24714661 128.50834656]
[131.64962769 114.23096466]
[131.64962769 129.23097229]
[131.64962769 144.23097229]
[131.64962769 159.23097229]
[131.64962769 174.23097229]
[131.64962769 189.23097229]
[131.64962769 204.23097229]
[131.64962769 219.23097229]
[131.64962769 234.23097229]
[131.64962769 249.23097229]
[146.25964355 252.97239685]
[159.47979736 260.23037720]
[170.47906494 270.54864502]
[178.56604004 283.27859497]
[183.23234558 297.62002563]
[184.18466187 312.67141724]
[181.36312866 327.48660278]
[174.94509888 341.13430786]
[165.33403015 352.75659180]
[153.13406372 361.62292480]
[139.11212158 367.17593384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[48 114]
[49 113]
[50 112]
[51 111]
[52 110]
[53 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
