%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAAACCCCGGGGGGGGGGCUUAUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUxxxxxxxxxxAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACCCCCCCCCCCUUAAACUCC\
) } def
/len { sequence length } bind def

/coor [
[85.11870575 504.04010010]
[71.27276611 498.02407837]
[59.56410217 488.49465942]
[50.86157990 476.15896606]
[45.81097794 461.93246460]
[44.78708649 446.87078857]
[47.86588669 432.09161377]
[54.81890488 418.69168091]
[65.13018799 407.66534424]
[78.03456879 399.83084106]
[92.57445526 395.76953125]
[92.57445526 380.76953125]
[92.57445526 365.76953125]
[92.57445526 350.76953125]
[92.57445526 335.76953125]
[92.57445526 320.76953125]
[92.57445526 305.76953125]
[92.57445526 290.76953125]
[92.57445526 275.76953125]
[92.57445526 260.76953125]
[78.33772278 256.20046997]
[66.19383240 247.44284058]
[57.33945084 235.34408569]
[52.65185928 221.08163452]
[52.60208893 206.04833984]
[57.20759583 191.71640015]
[66.02932739 179.49325562]
[78.21355438 170.58329773]
[92.57445526 165.86929321]
[92.57445526 150.86929321]
[92.57445526 135.86929321]
[92.57445526 120.86929321]
[92.57445526 105.86929321]
[89.75909424 101.36080933]
[89.70751190 95.59175110]
[92.89949799 90.24856567]
[93.52347565 75.26154327]
[94.14745331 60.27453232]
[86.99091339 46.16444397]
[95.25095367 33.77005005]
[80.36174774 31.87655449]
[65.68675995 28.72717667]
[51.33172607 24.34461021]
[37.40008163 18.76043129]
[23.99219894 12.01487255]
[11.20468903 4.15653801]
[-0.87031502 -4.75795174]
[-12.14581013 -14.66436672]
[-22.54055405 -25.49132919]
[-31.97965431 -37.16083145]
[-40.39509583 -49.58879089]
[-47.72624969 -62.68566132]
[-53.92028809 -76.35707855]
[-58.93258667 -90.50453949]
[-62.72703171 -105.02611542]
[-65.27627563 -119.81716156]
[-66.56196594 -134.77111816]
[-66.57482147 -149.78024292]
[-65.31475830 -164.73638916]
[-62.79085922 -179.53178406]
[-59.02130508 -194.05982971]
[-54.03325653 -208.21586609]
[-47.86264801 -221.89787292]
[-40.55394745 -235.00729370]
[-32.15981293 -247.44964600]
[-22.74072266 -259.13531494]
[-12.36454391 -269.98007202]
[-1.10603929 -279.90579224]
[10.95367241 -288.84094238]
[23.72769928 -296.72119141]
[37.12400436 -303.48971558]
[51.04606247 -309.09774780]
[65.39356232 -313.50491333]
[80.06313324 -316.67941284]
[94.94907379 -318.59841919]
[109.94412994 -319.24807739]
[124.94026947 -318.62371826]
[139.82942200 -316.72985840]
[154.50433350 -313.58010864]
[168.85925293 -309.19714355]
[182.79075623 -303.61260986]
[196.19845581 -296.86669922]
[208.98576355 -289.00805664]
[221.06054688 -280.09326172]
[232.33578491 -270.18655396]
[242.73023987 -259.35931396]
[252.16903687 -247.68955994]
[260.58416748 -235.26138306]
[267.91497803 -222.16432190]
[274.10867310 -208.49275208]
[279.12060547 -194.34515381]
[282.91467285 -179.82348633]
[285.46353149 -165.03236389]
[286.74884033 -150.07838440]
[286.76129150 -135.06925964]
[285.50085449 -120.11315155]
[282.97656250 -105.31781769]
[279.20663452 -90.78986359]
[274.21823120 -76.63396454]
[268.04727173 -62.95211029]
[260.73822021 -49.84288788]
[252.34376526 -37.40074539]
[242.92437744 -25.71533012]
[232.54792786 -14.87084007]
[221.28915405 -4.94541073]
[209.22921753 3.98944378]
[196.45498657 11.86934757]
[183.05850220 18.63752365]
[169.13630676 24.24520683]
[154.78869629 28.65199280]
[140.11903381 31.82612991]
[125.23304749 33.74475098]
[110.23796844 34.39402771]
[117.43914032 47.43214035]
[109.13446808 60.89850998]
[108.51049042 75.88552094]
[107.88651276 90.87254333]
[107.57445526 105.86929321]
[107.57445526 120.86929321]
[107.57445526 135.86929321]
[107.57445526 150.86929321]
[107.57445526 165.86929321]
[121.93536377 170.58329773]
[134.11958313 179.49325562]
[142.94131470 191.71640015]
[147.54682922 206.04833984]
[147.49705505 221.08163452]
[142.80946350 235.34408569]
[133.95507812 247.44284058]
[121.81119537 256.20046997]
[107.57445526 260.76953125]
[107.57445526 275.76953125]
[107.57445526 290.76953125]
[107.57445526 305.76953125]
[107.57445526 320.76953125]
[107.57445526 335.76953125]
[107.57445526 350.76953125]
[107.57445526 365.76953125]
[107.57445526 380.76953125]
[107.57445526 395.76953125]
[122.11434937 399.83084106]
[135.01872253 407.66534424]
[145.33001709 418.69168091]
[152.28303528 432.09161377]
[155.36183167 446.87078857]
[154.33793640 461.93246460]
[149.28733826 476.15896606]
[140.58480835 488.49465942]
[128.87615967 498.02407837]
[115.03021240 504.04010010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[29 122]
[30 121]
[31 120]
[32 119]
[33 118]
[36 117]
[37 116]
[38 115]
[40 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
