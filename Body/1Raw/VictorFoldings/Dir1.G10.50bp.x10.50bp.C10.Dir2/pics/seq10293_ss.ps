%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAACCCCCUGGGGGGGGGGGAAGCUUCACCGGCGCAGUCAUUCUCAUAAUCGCCCACGGGCUUACAUCCxxxxxxxxxxAGGAUUUCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACCCCCCCCCCCAAUCCCCCU\
) } def
/len { sequence length } bind def

/coor [
[99.60947418 453.32357788]
[86.38927460 446.05111694]
[75.50247192 435.60409546]
[67.69133759 422.69485474]
[63.48846054 408.20355225]
[63.18038559 393.11819458]
[66.78813171 378.46737671]
[74.06570435 365.25000000]
[84.51690674 354.36721802]
[97.42916870 346.56106567]
[111.92210388 342.36380005]
[111.61005402 327.36703491]
[111.29799652 312.37026978]
[110.98593903 297.37353516]
[110.67388153 282.37677002]
[110.36182404 267.38000488]
[110.04976654 252.38327026]
[109.73771667 237.38650513]
[109.42565918 222.38975525]
[108.17877960 207.44166565]
[106.00194550 192.60046387]
[103.82511139 177.75926208]
[101.64826965 162.91806030]
[99.47143555 148.07684326]
[89.68135834 146.95942688]
[80.32467651 143.86962891]
[71.79440308 138.93722534]
[64.44881439 132.36936951]
[58.59645081 124.44194794]
[54.48310852 115.48791504]
[52.28156662 105.88336182]
[52.08428955 96.03169250]
[37.51158524 92.47692871]
[22.93888283 88.92217255]
[8.36618042 85.36740875]
[13.45843220 99.47658539]
[5.78483343 112.36518097]
[-9.04583740 114.61267090]
[-20.19355965 104.57632446]
[-19.51025009 89.59189606]
[-7.49599838 80.61192322]
[-21.62080193 75.56316376]
[-35.74560547 70.51441193]
[-50.80295563 76.05117035]
[-64.44459534 67.60810852]
[-66.20582581 51.66202545]
[-54.73557663 40.44538498]
[-38.83284760 42.56263733]
[-30.69684792 56.38960648]
[-16.57204437 61.43836594]
[-2.44724202 66.48712158]
[11.92094231 70.79470825]
[26.49364471 74.34946442]
[41.06634903 77.90422821]
[55.63904953 81.45899200]
[68.88980865 63.34186172]
[88.92085266 53.21415329]
[111.36652374 53.28314209]
[117.14279938 39.43992233]
[122.91907501 25.59670448]
[128.69534302 11.75348759]
[115.68566132 4.24505997]
[103.74298096 -4.86540890]
[93.06340027 -15.42831612]
[83.82230377 -27.27021027]
[76.17143250 -40.19663620]
[70.23641968 -53.99532700]
[66.11471558 -68.43970490]
[63.87401962 -83.29256439]
[63.55111313 -98.31002808]
[65.15130615 -113.24547577]
[68.64830780 -127.85366821]
[73.98471832 -141.89471436]
[81.07288361 -155.13806152]
[89.79642487 -167.36624146]
[100.01209259 -178.37843323]
[111.55213165 -187.99382019]
[124.22704315 -196.05451965]
[137.82870483 -202.42816162]
[152.13374329 -207.01008606]
[166.90728760 -209.72503662]
[181.90670776 -210.52845764]
[196.88572693 -209.40713501]
[211.59837341 -206.37950134]
[225.80302429 -201.49525452]
[239.26646423 -194.83460999]
[251.76759338 -186.50692749]
[263.10113525 -176.64897156]
[273.08096313 -165.42262268]
[281.54324341 -153.01220703]
[288.34896851 -139.62152100]
[293.38641357 -125.47046661]
[296.57284546 -110.79139709]
[297.85595703 -95.82537079]
[297.21466064 -80.81813812]
[294.65948486 -66.01612854]
[290.23239136 -51.66241074]
[284.00610352 -37.99267960]
[276.08282471 -25.23140907]
[266.59268188 -13.58814812]
[255.69149780 -3.25409102]
[243.55830383 5.60106802]
[230.39231873 12.83191967]
[216.40974426 18.31972694]
[201.84019470 21.97437286]
[186.92291260 23.73584938]
[171.90283203 23.57522583]
[157.02662659 21.49514389]
[142.53855896 17.52976036]
[136.76228333 31.37297821]
[130.98602295 45.21619415]
[125.20974731 59.05941391]
[135.73332214 67.83181763]
[143.35545349 79.21618652]
[147.45724487 92.28814697]
[147.70562744 105.98628998]
[144.08044434 119.19836426]
[136.87605286 130.85157776]
[126.67741394 139.99972534]
[114.31263733 145.90000916]
[116.48947906 160.74121094]
[118.66631317 175.58242798]
[120.84315491 190.42362976]
[123.01998901 205.26483154]
[133.14138794 194.19427490]
[148.11651611 193.33085632]
[159.44319153 203.16481018]
[160.69064331 218.11283875]
[151.15063477 229.68817139]
[136.23953247 231.31884766]
[124.42240906 222.07769775]
[124.73446655 237.07446289]
[125.04652405 252.07121277]
[125.35858154 267.06796265]
[125.67063904 282.06472778]
[125.98268890 297.06146240]
[126.29474640 312.05822754]
[126.60680389 327.05499268]
[126.91886139 342.05172729]
[141.57385254 345.64248657]
[154.79966736 352.90475464]
[165.69453430 363.34335327]
[173.51562500 376.24655151]
[177.72969055 390.73461914]
[178.04942322 405.81973267]
[174.45298767 420.47332764]
[167.18562317 433.69635010]
[156.74282837 444.58715820]
[143.83659363 452.40328979]
[129.34690857 456.61175537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[32 55]
[33 54]
[34 53]
[35 52]
[41 51]
[42 50]
[43 49]
[58 112]
[59 111]
[60 110]
[61 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
