%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCUAGCCGGGGGGGGGGGUUUACUCAAUCCUCUGAUCAGGGUGAGCAUCAAACUCAAACUACGCCCUxxxxxxxxxxCUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUGACAAAACACACCCCCCCCCCUAGCCUACCC\
) } def
/len { sequence length } bind def

/coor [
[88.72677612 412.82211304]
[74.88083649 406.80609131]
[63.17217636 397.27667236]
[54.46965408 384.94100952]
[49.41905212 370.71447754]
[48.39516068 355.65280151]
[51.47395706 340.87365723]
[58.42697906 327.47372437]
[68.73826599 316.44738770]
[81.64264679 308.61288452]
[96.18253326 304.55157471]
[96.18253326 289.55157471]
[96.18253326 274.55157471]
[96.18253326 259.55157471]
[96.18253326 244.55155945]
[96.18253326 229.55155945]
[96.18253326 214.55155945]
[96.18253326 199.55155945]
[96.18253326 184.55155945]
[96.18253326 169.55155945]
[95.71449280 154.55886841]
[94.77886200 139.58807373]
[93.84323120 124.61728668]
[92.90760803 109.64649200]
[84.65689850 122.17350006]
[71.59233093 129.54350281]
[56.60365677 130.12634277]
[43.00623703 123.79307556]
[33.80769730 111.94458008]
[31.04266548 97.20162964]
[35.32274628 82.82522583]
[45.70121765 71.99530029]
[59.88246536 67.10733032]
[74.72972107 69.24249268]
[86.95891571 77.92851257]
[93.86553192 91.24603271]
[96.35065460 76.45332336]
[94.68090820 67.40546417]
[99.04441833 61.38006592]
[101.83674622 46.64225769]
[104.62906647 31.90445328]
[107.42139435 17.16664696]
[110.21371460 2.42884135]
[113.00604248 -12.30896473]
[115.33714294 -27.12672234]
[117.20475769 -42.01000214]
[119.07237244 -56.89328384]
[120.93998718 -71.77656555]
[106.30916595 -75.14260864]
[92.09396362 -79.97158051]
[78.44023895 -86.21392059]
[65.48810577 -93.80558014]
[53.37047577 -102.66864777]
[42.21169281 -112.71218109]
[32.12626648 -123.83311462]
[23.21768379 -135.91732788]
[15.57736969 -148.84082031]
[9.28372192 -162.47097778]
[4.40132475 -176.66790771]
[0.98027873 -191.28596497]
[-0.94430977 -206.17512512]
[-1.35269165 -221.18260193]
[-0.24067611 -236.15438843]
[2.38032556 -250.93685913]
[6.48341799 -265.37829590]
[12.02649593 -279.33056641]
[18.95267868 -292.65042114]
[27.19089317 -305.20123291]
[36.65660095 -316.85418701]
[47.25266647 -327.48971558]
[58.87036133 -336.99868774]
[71.39046478 -345.28347778]
[84.68450165 -352.25912476]
[98.61605072 -357.85403442]
[113.04216003 -362.01077271]
[127.81478119 -364.68667603]
[142.78233337 -365.85433960]
[157.79122925 -365.50173950]
[172.68742371 -363.63250732]
[187.31809998 -360.26580811]
[201.53308105 -355.43621826]
[215.18653870 -349.19326782]
[228.13833618 -341.60104370]
[240.25556946 -332.73745728]
[251.41392517 -322.69342041]
[261.49887085 -311.57205200]
[270.40689087 -299.48742676]
[278.04666138 -286.56362915]
[284.33969116 -272.93319702]
[289.22146606 -258.73602295]
[292.64187622 -244.11782837]
[294.56579590 -229.22857666]
[294.97354126 -214.22109985]
[293.86083984 -199.24935913]
[291.23919678 -184.46699524]
[287.13546753 -170.02572632]
[281.59179688 -156.07371521]
[274.66500854 -142.75415039]
[266.42623901 -130.20370483]
[256.96002197 -118.55116272]
[246.36349487 -107.91610718]
[234.74537659 -98.40766144]
[222.22491455 -90.12341309]
[208.93057251 -83.14835358]
[194.99876404 -77.55406952]
[180.57247925 -73.39796448]
[165.79974365 -70.72268677]
[150.83213806 -69.55568695]
[135.82325745 -69.90895081]
[133.95565796 -55.02566910]
[132.08804321 -40.14239120]
[130.22042847 -25.25910950]
[132.13972473 -22.22863770]
[132.64909363 -18.10041428]
[131.24099731 -13.56503582]
[127.74384308 -9.51663971]
[124.95152283 5.22116613]
[122.15919495 19.95897102]
[119.36687469 34.69677734]
[116.57454681 49.43458557]
[113.78222656 64.17238617]
[111.14335632 78.93844604]
[108.65824127 93.73115540]
[107.87839508 108.71086884]
[108.81402588 123.68165588]
[109.74965668 138.65245056]
[110.68527985 153.62324524]
[113.65116882 158.07556152]
[114.48361206 162.75096130]
[113.46421814 166.78364563]
[111.18253326 169.55155945]
[111.18253326 184.55155945]
[111.18253326 199.55155945]
[111.18253326 214.55155945]
[111.18253326 229.55155945]
[111.18253326 244.55155945]
[111.18253326 259.55157471]
[111.18253326 274.55157471]
[111.18253326 289.55157471]
[111.18253326 304.55157471]
[125.72241974 308.61288452]
[138.62680054 316.44738770]
[148.93807983 327.47372437]
[155.89111328 340.87365723]
[158.96990967 355.65280151]
[157.94601440 370.71447754]
[152.89541626 384.94100952]
[144.19288635 397.27667236]
[132.48422241 406.80609131]
[118.63829041 412.82211304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 127]
[22 126]
[23 125]
[24 124]
[36 123]
[37 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 112]
[46 111]
[47 110]
[48 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
