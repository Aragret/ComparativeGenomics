%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUACACAAAGGGGGGGGGGCAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUxxxxxxxxxxGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAACCCCCCCCCCGAAUUCACAAA\
) } def
/len { sequence length } bind def

/coor [
[77.16114807 489.69192505]
[63.13920593 484.13891602]
[50.93924713 475.27258301]
[41.32817841 463.65026855]
[34.91015244 450.00259399]
[32.08861542 435.18737793]
[33.04093170 420.13601685]
[37.70723724 405.79458618]
[45.79420471 393.06463623]
[56.79347610 382.74636841]
[70.01363373 375.48837280]
[84.62364960 371.74694824]
[84.62364960 356.74694824]
[84.62364960 341.74694824]
[84.62364960 326.74694824]
[84.62364960 311.74694824]
[84.62364960 296.74694824]
[84.62364960 281.74694824]
[84.62364960 266.74694824]
[84.62364960 251.74694824]
[84.62364960 236.74694824]
[81.89543915 232.75871277]
[81.68591309 227.00163269]
[84.94427490 221.13429260]
[85.56009674 206.14694214]
[75.56815338 197.95465088]
[72.08563995 185.30946350]
[76.60681152 172.78988647]
[87.68496704 165.06433105]
[88.60837555 150.09277344]
[89.53179169 135.12123108]
[90.45520782 120.14967346]
[91.37861633 105.17812347]
[90.30155182 90.21684265]
[87.24315643 75.53194427]
[84.18476105 60.84704971]
[78.62281799 46.91633224]
[70.72634125 34.16307449]
[54.31897736 25.86673927]
[54.39318085 8.34420967]
[46.23651505 -4.24422932]
[38.07984924 -16.83266830]
[29.92318344 -29.42110825]
[16.18589783 -23.31918716]
[1.66315627 -19.44149590]
[-13.28740311 -17.88352585]
[-28.29760933 -18.68364334]
[-42.99782181 -21.82214546]
[-57.02603912 -27.22174454]
[-70.03679657 -34.74946594]
[-81.70970154 -44.21994019]
[-91.75729370 -55.39994049]
[-99.93213654 -68.01416016]
[-106.03292084 -81.75194550]
[-109.90941620 -96.27500916]
[-111.46614838 -111.22569275]
[-110.66479492 -126.23583221]
[-107.52507782 -140.93579102]
[-102.12432098 -154.96356201]
[-94.59552765 -167.97369385]
[-85.12409210 -179.64581299]
[-73.94326019 -189.69248962]
[-61.32837296 -197.86628723]
[-47.59007645 -203.96594238]
[-33.06669617 -207.84123230]
[-18.11588097 -209.39674377]
[-3.10580707 -208.59414673]
[11.59388924 -205.45321655]
[25.62121391 -200.05130005]
[38.63072968 -192.52143860]
[50.30207062 -183.04904175]
[60.34781265 -171.86737061]
[68.52057648 -159.25181580]
[74.61909485 -145.51301575]
[78.49319458 -130.98931885]
[80.04746246 -116.03836823]
[79.24362946 -101.02836609]
[76.10148621 -86.32892609]
[70.69841766 -72.30204773]
[63.16747284 -59.29315186]
[53.69411087 -47.62259674]
[42.51162338 -37.57777405]
[50.66828918 -24.98933411]
[58.82495499 -12.40089512]
[66.98162079 0.18754408]
[78.77674866 3.04010391]
[85.66616058 13.51423550]
[83.47959137 26.26659203]
[91.37607574 39.01984787]
[98.77511597 40.24631500]
[108.29821777 28.65706825]
[113.57319641 42.69924164]
[120.97223663 43.92570496]
[132.56127930 34.40236664]
[144.15032959 24.87903023]
[147.13732910 9.11649895]
[161.39006042 1.75176263]
[175.97503662 8.43441677]
[179.70393372 24.03810120]
[169.71623230 36.59300232]
[153.67367554 36.46807861]
[142.08462524 45.99141693]
[130.49557495 55.51475525]
[122.07962799 59.45838165]
[113.65981293 61.04889679]
[105.76277161 60.41432953]
[98.86965179 57.78865433]
[101.92804718 72.47354889]
[104.98645020 87.15844727]
[116.47711182 96.80026245]
[131.47000122 97.26218414]
[146.46289062 97.72411346]
[161.45576477 98.18604279]
[175.63977051 89.95523071]
[189.72314453 98.35704041]
[189.21813965 114.74841309]
[174.64424133 122.26730347]
[160.99385071 113.17892456]
[146.00096130 112.71700287]
[131.00807190 112.25507355]
[116.01519012 111.79314423]
[110.97294617 109.24384308]
[106.35016632 106.10153961]
[105.42675781 121.07308960]
[104.50334167 136.04463196]
[103.57992554 151.01618958]
[102.65651703 165.98773193]
[114.47213745 178.84768677]
[113.38375854 195.93998718]
[100.54745483 206.76275635]
[99.93162537 221.75010681]
[99.62364960 236.74694824]
[99.62364960 251.74694824]
[99.62364960 266.74694824]
[99.62364960 281.74694824]
[99.62364960 296.74694824]
[99.62364960 311.74694824]
[99.62364960 326.74694824]
[99.62364960 341.74694824]
[99.62364960 356.74694824]
[99.62364960 371.74694824]
[114.23366547 375.48837280]
[127.45381927 382.74636841]
[138.45309448 393.06463623]
[146.54005432 405.79458618]
[151.20635986 420.13601685]
[152.15867615 435.18737793]
[149.33714294 450.00259399]
[142.91911316 463.65026855]
[133.30804443 475.27258301]
[121.10809326 484.13891602]
[107.08615112 489.69192505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[24 131]
[25 130]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[34 109]
[35 108]
[36 107]
[37 89]
[38 88]
[40 85]
[41 84]
[42 83]
[43 82]
[93 103]
[94 102]
[95 101]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
