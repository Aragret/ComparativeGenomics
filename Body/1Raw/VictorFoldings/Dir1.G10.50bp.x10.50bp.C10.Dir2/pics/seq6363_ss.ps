%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCUUCAUAGGGGGGGGGGGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUCCCCUAAUxxxxxxxxxxCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCCCCCCCCCCCUCUCCUUCAUA\
) } def
/len { sequence length } bind def

/coor [
[83.50808716 583.84387207]
[71.17497253 575.19268799]
[61.07652664 564.01373291]
[53.71927261 550.86773682]
[49.47225189 536.41394043]
[48.54849243 521.37756348]
[50.99433136 506.51263428]
[56.68708420 492.56484985]
[65.34120941 480.23382568]
[76.52261353 470.13809204]
[89.67044067 462.78402710]
[104.12520599 458.54049683]
[103.20179749 443.56896973]
[102.27838135 428.59741211]
[101.35496521 413.62585449]
[100.43155670 398.65429688]
[99.50814056 383.68276978]
[98.58472443 368.71121216]
[97.66131592 353.73965454]
[96.73789978 338.76809692]
[95.81448364 323.79656982]
[94.89107513 308.82501221]
[93.96765900 293.85345459]
[80.98329163 291.88735962]
[68.64189148 287.38208008]
[57.43496704 280.51464844]
[47.80934906 271.55624390]
[40.14932632 260.86145020]
[34.76133728 248.85424805]
[31.86167526 236.01118469]
[31.56784248 222.84246826]
[33.89376831 209.87170410]
[38.74917221 197.61508179]
[45.94306564 186.56080627]
[55.19126511 177.14967346]
[66.12761688 169.75752258]
[78.31849670 164.68013000]
[91.27998352 162.12149048]
[91.58796692 147.12464905]
[91.89594269 132.12780762]
[92.20391846 117.13097382]
[73.49320984 107.75069427]
[69.43889618 80.20485687]
[64.02027130 66.21777344]
[58.60164642 52.23069382]
[53.18302155 38.24361038]
[47.76439667 24.25652504]
[42.34577179 10.26944256]
[34.06029510 -2.23459339]
[23.29161644 -12.67660236]
[14.89725876 -16.43566513]
[12.41180801 -23.44528198]
[1.85979319 -34.10618973]
[-8.69222164 -44.76709747]
[-19.24423790 -55.42800903]
[-35.19671249 -59.22940063]
[-39.62090302 -75.02049255]
[-27.96558189 -86.55676270]
[-12.22074413 -81.97068787]
[-8.58332825 -65.98002625]
[1.96868682 -55.31911469]
[12.52070236 -44.65820694]
[23.07271767 -33.99729538]
[33.73362732 -23.44528198]
[44.50230408 -13.00327206]
[40.65937805 -27.50264931]
[40.79528427 -42.50203323]
[44.90031433 -56.92939377]
[52.68107224 -69.75358582]
[63.58145142 -80.05803680]
[76.82238770 -87.10626984]
[91.45752716 -90.39454651]
[106.44086456 -89.68783569]
[120.70153046 -85.03665161]
[133.22027588 -76.77342224]
[143.10237122 -65.48873901]
[149.64154053 -51.98912811]
[152.37039185 -37.23943710]
[151.09390259 -22.29384995]
[145.90330505 -8.22055340]
[137.16957092 3.97461247]
[125.51693726 13.42003727]
[111.77822113 19.44063950]
[96.93535614 21.60611725]
[82.04918671 19.76170158]
[68.18364716 14.03921318]
[56.33285522 4.85081720]
[61.75148010 18.83790016]
[67.17010498 32.82498550]
[72.58872986 46.81206894]
[78.00735474 60.79915237]
[83.42597961 74.78623199]
[90.47367096 77.35138702]
[87.86885834 62.57928467]
[99.35940552 52.93732834]
[113.45489502 58.06737137]
[116.05997467 72.83942413]
[104.56906128 82.48168945]
[111.61676025 85.04683685]
[124.75839233 77.81513977]
[132.78027344 63.51193619]
[149.17927551 63.57807541]
[157.08552551 77.94551086]
[148.36573792 91.83425903]
[131.99009705 90.95676422]
[118.84845734 98.18846893]
[133.78770447 96.83969879]
[145.77479553 105.85688019]
[148.62078857 120.58441162]
[140.85627747 133.41845703]
[126.49011230 137.73274231]
[112.93955994 131.29981995]
[107.20075989 117.43894958]
[106.89277649 132.43579102]
[106.58480072 147.43263245]
[106.27682495 162.42945862]
[122.69147491 166.88293457]
[137.42265320 175.36402893]
[149.50189209 187.30934143]
[158.13659668 201.92793274]
[162.76197815 218.25366211]
[163.07803345 235.20910645]
[159.06898499 251.67655945]
[151.00399780 266.57183838]
[139.41911316 278.91552734]
[125.08161926 287.89752197]
[108.93920898 292.93005371]
[109.86262512 307.90161133]
[110.78603363 322.87313843]
[111.70944977 337.84469604]
[112.63286591 352.81625366]
[113.55627441 367.78781128]
[114.47969055 382.75933838]
[115.40310669 397.73089600]
[116.32651520 412.70245361]
[117.24993134 427.67401123]
[118.17334747 442.64553833]
[119.09675598 457.61709595]
[133.96343994 460.05212402]
[147.91534424 465.73474121]
[160.25265503 474.37991333]
[170.35652161 485.55395508]
[177.72013855 498.69644165]
[181.97416687 513.14813232]
[182.90521240 528.18408203]
[180.46656799 543.05023193]
[174.78057861 557.00073242]
[166.13243103 569.33593750]
[154.95591736 579.43707275]
[141.81166077 586.79754639]
[127.35894775 591.04803467]
[112.32273865 591.97546387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[38 116]
[39 115]
[40 114]
[41 113]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[48 87]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
