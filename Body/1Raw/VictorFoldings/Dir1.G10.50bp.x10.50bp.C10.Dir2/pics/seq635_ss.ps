%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUAAUCUGGGGGGGGGGCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAxxxxxxxxxxCACUGUGAUAUAUAAACUCAGACCCAAACAUUAAUCAGUUCUUCAAAUAUCCCCCCCCCCCUACUCAUCU\
) } def
/len { sequence length } bind def

/coor [
[14.60202694 254.85966492]
[5.89044142 249.72547913]
[-2.51345205 244.10177612]
[-10.58217716 238.00692749]
[-18.28935432 231.46086121]
[-25.60978317 224.48498535]
[-32.51953125 217.10209656]
[-38.99600601 209.33634949]
[-45.01803207 201.21313477]
[-50.56592178 192.75900269]
[-63.65907669 200.07810974]
[-76.75222778 207.39720154]
[-89.84538269 214.71630859]
[-98.11589813 228.20368958]
[-113.00057983 227.66012573]
[-126.09373474 234.97923279]
[-139.18688965 242.29833984]
[-152.28004456 249.61744690]
[-165.37319946 256.93655396]
[-164.39237976 272.16812134]
[-170.12538147 286.31362915]
[-181.43391418 296.56448364]
[-196.07266235 300.88534546]
[-211.13507080 298.41833496]
[-223.63052368 289.65325928]
[-231.07801819 276.33044434]
[-231.99884033 261.09512329]
[-226.21018982 246.97229004]
[-214.86137390 236.76605225]
[-200.20573425 232.50286865]
[-185.15313721 235.02917480]
[-172.69230652 243.84339905]
[-159.59915161 236.52429199]
[-146.50599670 229.20518494]
[-133.41284180 221.88607788]
[-120.31968689 214.56697083]
[-112.98568726 201.60310364]
[-97.16448975 201.62315369]
[-84.07133484 194.30406189]
[-70.97817993 186.98495483]
[-57.88502884 179.66584778]
[-68.47680664 153.75773621]
[-74.84827423 126.50299835]
[-76.83982849 98.58436584]
[-74.40157318 70.70120239]
[-67.59458923 43.55195999]
[-56.58939743 17.81673431]
[-41.66166687 -5.85981512]
[-23.18533897 -26.88459587]
[-33.16806412 -38.08036041]
[-43.15079117 -49.27612686]
[-53.13351822 -60.47189331]
[-67.96688843 -56.69964981]
[-82.85153198 -60.26418686]
[-94.36707306 -70.34638977]
[-99.86732483 -84.62944794]
[-98.08837128 -99.83122253]
[-89.43899536 -112.45845032]
[-75.90676880 -119.60949707]
[-60.60128784 -119.64109039]
[-47.03965378 -112.54597473]
[-38.33821869 -99.95456696]
[-36.49651718 -84.76026917]
[-41.93775177 -70.45462036]
[-31.95502663 -59.25885391]
[-21.97229958 -48.06308746]
[-11.98957348 -36.86732101]
[-0.23969072 -45.69259644]
[12.20233440 -53.51188278]
[25.25059128 -60.27119064]
[38.81498337 -65.92384338]
[52.80184937 -70.43081665]
[67.11460876 -73.76098633]
[81.65444183 -75.89135742]
[96.32095337 -76.80722046]
[111.01286316 -76.50225067]
[125.62873077 -74.97856140]
[140.06762695 -72.24666595]
[154.22987366 -68.32542419]
[168.01766968 -63.24192429]
[181.33580017 -57.03125381]
[194.09233093 -49.73630524]
[206.19915771 -41.40744781]
[215.70751953 -53.00878906]
[225.21588135 -64.61013031]
[227.97947693 -80.18810272]
[242.03137207 -85.12705994]
[237.18298340 -99.77276611]
[241.04444885 -114.70905304]
[252.38360596 -125.16979980]
[267.58215332 -127.81703186]
[281.79028320 -121.80601501]
[290.47424316 -109.05485535]
[290.86303711 -93.63239288]
[282.83255005 -80.45987701]
[268.94534302 -73.74061584]
[253.63272095 -75.61869812]
[251.54922485 -60.87053680]
[236.81721497 -55.10177231]
[227.30886841 -43.50043106]
[217.80050659 -31.89908981]
[225.14677429 -24.95043945]
[232.08389282 -17.59326172]
[238.58914185 -9.85161304]
[244.64129639 -1.75080407]
[250.22052002 6.68267965]
[255.30860901 15.42126465]
[259.88891602 24.43638039]
[263.94647217 33.69855118]
[267.46798706 43.17749405]
[270.44198608 52.84222031]
[272.85873413 62.66112900]
[274.71029663 72.60211182]
[275.99063110 82.63268280]
[276.69558716 92.72002411]
[276.82281494 102.83117676]
[276.37194824 112.93306732]
[275.34442139 122.99267578]
[273.74359131 132.97711182]
[271.57473755 142.85372925]
[268.84487915 152.59022522]
[265.56301880 162.15478516]
[261.73983765 171.51612854]
[257.38781738 180.64366150]
[252.52125549 189.50750732]
[247.15600586 198.07872009]
[241.30964661 206.32926941]
[235.00126648 214.23216248]
[228.25149536 221.76158142]
[221.08239746 228.89289856]
[213.51742554 235.60281372]
[205.58131409 241.86935425]
[197.30000305 247.67205811]
[188.70057678 252.99195862]
[179.81112671 257.81164551]
[170.66075134 262.11535645]
[161.27932739 265.88903809]
[151.69757080 269.12033081]
[141.94677734 271.79870605]
[132.05885315 273.91537476]
[122.06610107 275.46343994]
[112.00120544 276.43780518]
[101.89707184 276.83532715]
[91.78673553 276.65466309]
[81.70324707 275.89645386]
[71.67958832 274.56311035]
[61.74852371 272.65905762]
[51.94251633 270.19049072]
[42.29363632 267.16549683]
[32.83342743 263.59396362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 41]
[11 40]
[12 39]
[13 38]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[49 67]
[50 66]
[51 65]
[52 64]
[83 101]
[84 100]
[85 99]
[87 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
