%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGCCCACAGGGGGGGGGGUCACUCGAGACGUAAAUUAUGGCUGAAUCAUCCGCUACCUUCACGCCAAUxxxxxxxxxxAAGUGAACUGUAUCCGACAUCUGGUUCCUACUUCAGGGUCAUAAAGCCUACCCCCCCCCCAAUAGCCCACA\
) } def
/len { sequence length } bind def

/coor [
[86.09380341 412.41232300]
[72.07186127 406.85931396]
[59.87190247 397.99298096]
[50.26082993 386.37066650]
[43.84280777 372.72296143]
[41.02127075 357.90777588]
[41.97358704 342.85638428]
[46.63988876 328.51498413]
[54.72685623 315.78500366]
[65.72613525 305.46673584]
[78.94628906 298.20877075]
[93.55630493 294.46731567]
[93.55630493 279.46731567]
[93.55630493 264.46731567]
[93.55630493 249.46733093]
[93.55630493 234.46733093]
[93.55630493 219.46733093]
[93.55630493 204.46733093]
[93.55630493 189.46733093]
[93.55630493 174.46733093]
[93.55630493 159.46733093]
[93.55630493 144.46733093]
[73.26080322 114.39000702]
[85.70226288 93.27812195]
[73.92012787 83.99474335]
[62.13799286 74.71135712]
[50.96020889 84.16507721]
[38.15050888 91.24191284]
[24.20686340 95.66897583]
[9.67088318 97.27635956]
[-4.89321470 96.00363922]
[-18.92050362 91.90213776]
[-31.86726570 85.13287354]
[-43.23206329 75.96022797]
[-52.57516098 64.74163055]
[-59.53554535 51.91360474]
[-63.84486771 37.97482681]
[-65.33778381 23.46670532]
[-63.95831299 8.95236015]
[-59.76192093 -5.00522709]
[-52.91330719 -17.86505699]
[-64.50235748 -27.38839340]
[-76.09140015 -36.91173172]
[-87.68045044 -46.43507004]
[-99.36666107 -55.83892441]
[-111.14879608 -65.12231445]
[-122.93093109 -74.40570068]
[-134.71307373 -83.68907928]
[-148.40287781 -76.93985748]
[-163.66542053 -76.80738068]
[-177.47030640 -83.31796265]
[-187.07658386 -95.17891693]
[-190.57690430 -110.03524780]
[-187.27627563 -124.93721771]
[-177.83004761 -136.92602539]
[-164.11378479 -143.62129211]
[-148.85083008 -143.69366455]
[-135.07168579 -137.12876892]
[-125.51219177 -125.23007202]
[-122.07040405 -110.36007690]
[-125.42968750 -95.47122192]
[-113.64755249 -86.18783569]
[-101.86540985 -76.90444946]
[-90.08327484 -67.62106323]
[-82.83821869 -65.94138336]
[-78.15711212 -58.02411652]
[-66.56806946 -48.50077820]
[-54.97901917 -38.97744370]
[-43.38996887 -29.45410538]
[-31.41124344 -39.11835480]
[-17.68678856 -46.09693146]
[-2.80977798 -50.08559036]
[12.57625198 -50.90938568]
[27.80524826 -48.53031921]
[42.21747589 -43.04908752]
[55.18808746 -34.70083618]
[66.15422821 -23.84506226]
[74.63944244 -10.95013428]
[80.27439880 3.42690992]
[82.81294250 18.66443253]
[82.14286041 34.10306931]
[78.29082489 49.07426453]
[71.42137909 62.92921829]
[83.20351410 72.21260071]
[94.98564911 81.49598694]
[109.97853851 81.03406525]
[121.16683197 71.04296875]
[132.35513306 61.05186844]
[143.54342651 51.06077194]
[154.31210327 40.61876297]
[164.64300537 29.74344826]
[174.97390747 18.86813545]
[176.00123596 2.85800838]
[189.24089050 -6.20240068]
[204.53656006 -1.36272132]
[210.15469360 13.66445827]
[201.78555298 27.35157204]
[185.84922791 29.19903755]
[175.51832581 40.07435226]
[165.18742371 50.94966507]
[165.15901184 53.81151962]
[163.95968628 56.83325577]
[161.52313232 59.55537415]
[157.95532227 61.50325775]
[153.53453064 62.24906921]
[142.34622192 72.24016571]
[131.15792847 82.23126221]
[119.96963501 92.22235870]
[121.42337036 99.58012390]
[136.03201294 96.17606354]
[149.33834839 89.25209045]
[160.23974609 99.55547333]
[154.07670593 113.23088837]
[139.13636780 111.88809204]
[124.33084106 114.29564667]
[125.78457642 121.65340424]
[139.93190002 126.63872528]
[154.07920837 131.62405396]
[169.66642761 128.91313171]
[179.09869385 140.44056702]
[194.13104248 134.83630371]
[207.81042480 143.21806335]
[209.64320374 159.15608215]
[198.22340393 170.42407227]
[182.31132507 168.37820435]
[174.11337280 154.58789062]
[159.53805542 157.65538025]
[149.09388733 145.77136230]
[134.94657898 140.78604126]
[120.79925537 135.80072021]
[108.55630493 144.46733093]
[108.55630493 159.46733093]
[108.55630493 174.46733093]
[108.55630493 189.46733093]
[108.55630493 204.46733093]
[108.55630493 219.46733093]
[108.55630493 234.46733093]
[108.55630493 249.46733093]
[108.55630493 264.46731567]
[108.55630493 279.46731567]
[108.55630493 294.46731567]
[123.16631317 298.20877075]
[136.38647461 305.46673584]
[147.38574219 315.78500366]
[155.47271729 328.51498413]
[160.13902283 342.85638428]
[161.09133911 357.90777588]
[158.26980591 372.72296143]
[151.85177612 386.37066650]
[142.24070740 397.99298096]
[130.04074097 406.85931396]
[116.01879883 412.41232300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[24 85]
[25 84]
[26 83]
[41 69]
[42 68]
[43 67]
[44 66]
[45 64]
[46 63]
[47 62]
[48 61]
[86 108]
[87 107]
[88 106]
[89 105]
[90 100]
[91 99]
[92 98]
[116 130]
[117 129]
[118 128]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
