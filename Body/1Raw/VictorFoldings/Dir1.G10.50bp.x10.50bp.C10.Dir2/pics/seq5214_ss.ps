%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAACCAAACGGGGGGGGGGCCAGCUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAxxxxxxxxxxAGGAAUCUUCUUACUCAUCCGCUUCCACCCCCUAGCAGAAAAUAGCCCACCCCCCCCCCCUAAUCCAAAC\
) } def
/len { sequence length } bind def

/coor [
[86.73719025 461.44329834]
[73.51699829 454.17083740]
[62.63019180 443.72381592]
[54.81906128 430.81457520]
[50.61618042 416.32327271]
[50.30810928 401.23791504]
[53.91585159 386.58709717]
[61.19342422 373.36972046]
[71.64463043 362.48693848]
[84.55689240 354.68078613]
[99.04982758 350.48352051]
[98.73777008 335.48675537]
[98.42572021 320.49002075]
[98.11366272 305.49325562]
[97.80160522 290.49649048]
[97.48954773 275.49975586]
[97.17749023 260.50299072]
[96.86543274 245.50624084]
[96.55338287 230.50949097]
[96.24132538 215.51272583]
[83.92681885 207.17660522]
[78.82189941 193.02020264]
[83.08144379 178.40139771]
[95.27316284 168.98501587]
[94.96110535 153.98826599]
[94.64904785 138.99150085]
[94.33699036 123.99475098]
[93.40136719 109.02396393]
[91.68867493 94.12206268]
[89.82106018 79.23877716]
[73.12224579 76.34089661]
[58.13027573 68.47417450]
[46.28219986 56.40499878]
[38.70994186 41.30199432]
[36.13215256 24.62287140]
[38.78600693 7.97371435]
[46.40544510 -7.04564857]
[58.24779510 -18.99538994]
[73.16613770 -26.73370171]
[70.37381744 -41.47150803]
[67.58148956 -56.20931244]
[62.33443832 -42.15696716]
[53.68922424 -29.89889717]
[42.21323776 -20.23961258]
[28.65966415 -13.81305885]
[13.91802883 -11.04101753]
[-1.04415846 -12.10541821]
[-15.24491787 -16.93640518]
[-27.75224113 -25.21691513]
[-37.74526596 -36.40349197]
[-44.56813431 -49.76195145]
[-47.77306366 -64.41556549]
[-47.14970398 -79.40261078]
[-42.73897552 -93.73946381]
[-34.83035278 -106.48519897]
[-23.94288445 -116.80329132]
[-10.79112625 -124.01655579]
[3.76176095 -127.65159607]
[18.76066017 -127.46981812]
[33.22117996 -123.48316956]
[46.19426346 -115.95329285]
[56.82847977 -105.37437439]
[64.42589569 -92.44072723]
[68.48858643 -77.99639130]
[72.49632263 -92.45108032]
[76.50406647 -106.90576935]
[80.51180267 -121.36045837]
[84.51954651 -135.81515503]
[88.52729034 -150.26983643]
[75.32175446 -157.53004456]
[64.14689636 -167.64039612]
[55.60536575 -180.05566406]
[50.15779495 -194.10632324]
[48.09796524 -209.03460693]
[49.53696060 -224.03547668]
[54.39717484 -238.29994202]
[62.41650772 -251.05874634]
[73.16248322 -261.62380981]
[86.05558777 -269.42538452]
[100.40050507 -274.04275513]
[115.42363739 -275.22686768]
[130.31480408 -272.91390991]
[144.27095032 -267.22860718]
[156.53942871 -258.47753906]
[166.45861816 -247.13265991]
[173.49360657 -233.80577087]
[177.26496887 -219.21559143]
[177.56935120 -204.14894104]
[174.39033508 -189.41833496]
[167.89933777 -175.81819153]
[158.44644165 -164.08195496]
[146.54141235 -154.84252930]
[132.82627869 -148.59819031]
[118.04067993 -145.68568420]
[102.98197174 -146.26210022]
[98.97423553 -131.80740356]
[94.96649170 -117.35272217]
[90.95875549 -102.89803314]
[86.95101166 -88.44334412]
[82.94327545 -73.98865509]
[82.31929779 -59.00163651]
[85.11161804 -44.26383209]
[87.90394592 -29.52602577]
[101.05594635 -28.59834290]
[113.60440063 -24.51807976]
[124.80461121 -17.52205849]
[133.99060059 -8.02029610]
[140.61473083 3.42802167]
[144.28033447 16.14744949]
[144.76545715 29.38613129]
[142.03630066 42.36024475]
[136.24955750 54.30040741]
[127.74334717 64.49729919]
[117.01754761 72.34380341]
[104.70434570 77.37117004]
[106.57195282 92.25444794]
[110.64397430 99.27603912]
[108.32027435 107.46638489]
[111.09433746 110.99711609]
[112.42469025 114.84435272]
[112.39368439 118.50234222]
[111.24340057 121.54714966]
[109.33374786 123.68270111]
[109.64580536 138.67945862]
[109.95786285 153.67620850]
[110.26991272 168.67295837]
[122.84278870 177.57403564]
[127.70677185 192.00299072]
[123.19515228 206.35949707]
[111.23807526 215.20066833]
[111.55013275 230.19743347]
[111.86219025 245.19418335]
[112.17424774 260.19094849]
[112.48630524 275.18768311]
[112.79835510 290.18444824]
[113.11041260 305.18118286]
[113.42247009 320.17794800]
[113.73452759 335.17471313]
[114.04658508 350.17144775]
[128.70156860 353.76223755]
[141.92738342 361.02447510]
[152.82225037 371.46307373]
[160.64335632 384.36630249]
[164.85742188 398.85437012]
[165.17713928 413.93945312]
[161.58071899 428.59304810]
[154.31335449 441.81607056]
[143.87054443 452.70690918]
[130.96432495 460.52301025]
[116.47463226 464.73147583]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[24 126]
[25 125]
[26 124]
[27 123]
[28 118]
[29 116]
[30 115]
[39 103]
[40 102]
[41 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
