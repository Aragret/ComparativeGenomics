%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCUCACCGGGGGGGGGGCUAACAGGUCAACCUCGCUUCCCCACCCUUACUAACAUUAACGAAAAUAAxxxxxxxxxxAGACGCCCUCGGCUUACUUCUCUUCCUUCUCUCCUUAAUGACAUUAACACCCCCCCCCCCUAUUCUCACC\
) } def
/len { sequence length } bind def

/coor [
[83.87774658 388.38970947]
[70.65755463 381.11724854]
[59.77074814 370.67022705]
[51.95961761 357.76098633]
[47.75673676 343.26968384]
[47.44866180 328.18432617]
[51.05640411 313.53350830]
[58.33397675 300.31613159]
[68.78518677 289.43334961]
[81.69744873 281.62722778]
[96.19038391 277.42993164]
[95.87832642 262.43316650]
[95.56626892 247.43641663]
[95.25421143 232.43966675]
[94.94216156 217.44291687]
[94.63010406 202.44616699]
[94.31804657 187.44940186]
[94.00598907 172.45265198]
[93.69393158 157.45590210]
[93.38187408 142.45915222]
[79.26757050 137.63967896]
[67.65071869 128.28608704]
[59.93069077 115.52511597]
[57.03746414 100.89397430]
[59.31955338 86.15514374]
[66.50205994 73.08408356]
[77.71976471 63.25534821]
[91.62136841 57.85290909]
[91.30931091 42.85615540]
[90.99725342 27.85940361]
[90.68520355 12.86264992]
[75.69749451 12.11597729]
[60.79978943 10.31394196]
[46.06630707 7.46552229]
[31.57045555 3.58490849]
[17.38444710 -1.30856562]
[3.57895756 -7.19052124]
[-9.77723312 -14.03165436]
[-22.61758423 -21.79788208]
[-34.87812805 -30.45051384]
[-46.49777603 -39.94644165]
[-57.41864777 -50.23835754]
[-67.58632660 -61.27498627]
[-76.95016479 -73.00134277]
[-85.46350861 -85.35900879]
[-93.08394623 -98.28641510]
[-99.77350616 -111.71916199]
[-105.49887085 -125.59032440]
[-110.23151398 -139.83079529]
[-113.94785309 -154.36962891]
[-116.62937164 -169.13439941]
[-118.26271820 -184.05154419]
[-118.83974457 -199.04673767]
[-118.35758972 -214.04528809]
[-116.81864929 -228.97245789]
[-114.23059082 -243.75390625]
[-110.60630035 -258.31594849]
[-105.96384430 -272.58609009]
[-100.32635498 -286.49319458]
[-93.72190094 -299.96798706]
[-86.18340302 -312.94335938]
[-77.74840546 -325.35461426]
[-68.45893860 -337.13998413]
[-58.36128235 -348.24072266]
[-47.50574112 -358.60150146]
[-35.94639969 -368.17074585]
[-23.74084091 -376.90078735]
[-10.94987869 -384.74807739]
[2.36276555 -391.67358398]
[16.13076782 -397.64276123]
[30.28553391 -402.62588501]
[44.75654602 -406.59811401]
[59.47171021 -409.53970337]
[74.35771942 -411.43594360]
[89.34040070 -412.27740479]
[104.34512329 -412.05990601]
[119.29712677 -410.78454590]
[134.12191772 -408.45764160]
[148.74563599 -405.09082031]
[163.09544373 -400.70083618]
[177.09983826 -395.30953979]
[190.68905640 -388.94384766]
[203.79537964 -381.63540649]
[216.35353088 -373.42068481]
[228.30093384 -364.34057617]
[239.57806396 -354.44030762]
[250.12875366 -343.76922607]
[259.90045166 -332.38049316]
[268.84442139 -320.33084106]
[276.91616821 -307.68032837]
[284.07540894 -294.49191284]
[290.28656006 -280.83135986]
[295.51861572 -266.76669312]
[299.74551392 -252.36802673]
[302.94622803 -237.70703125]
[305.10476685 -222.85679626]
[306.21041870 -207.89129639]
[306.25765991 -192.88507080]
[305.24627686 -177.91290283]
[303.18127441 -163.04936218]
[300.07293701 -148.36851501]
[295.93676758 -133.94349670]
[290.79339600 -119.84617615]
[284.66839600 -106.14678192]
[277.59231567 -92.91356659]
[269.60040283 -80.21245575]
[260.73248291 -68.10672760]
[251.03269958 -56.65668869]
[240.54940796 -45.91939163]
[229.33483887 -35.94832230]
[217.44483948 -26.79316139]
[204.93865967 -18.49951744]
[191.87861633 -11.10870838]
[178.32975769 -4.65755606]
[164.35958862 0.82179880]
[150.03771973 5.30205917]
[135.43547058 8.76090336]
[120.62562561 11.18110085]
[105.68195343 12.55059338]
[105.99401093 27.54734802]
[106.30606842 42.54410172]
[106.61812592 57.54085541]
[120.73242950 62.36032867]
[132.34928894 71.71392059]
[140.06930542 84.47488403]
[142.96253967 99.10602570]
[140.68045044 113.84485626]
[133.49794006 126.91591644]
[122.28023529 136.74465942]
[108.37863159 142.14709473]
[108.69068909 157.14384460]
[109.00274658 172.14059448]
[109.31479645 187.13734436]
[109.62685394 202.13410950]
[109.93891144 217.13085938]
[110.25096893 232.12760925]
[110.56302643 247.12435913]
[110.87508392 262.12112427]
[111.18713379 277.11785889]
[125.84213257 280.70864868]
[139.06793213 287.97088623]
[149.96279907 298.40948486]
[157.78390503 311.31271362]
[161.99797058 325.80078125]
[162.31768799 340.88586426]
[158.72126770 355.53945923]
[151.45390320 368.76248169]
[141.01110840 379.65332031]
[128.10487366 387.46942139]
[113.61518097 391.67791748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[28 122]
[29 121]
[30 120]
[31 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
