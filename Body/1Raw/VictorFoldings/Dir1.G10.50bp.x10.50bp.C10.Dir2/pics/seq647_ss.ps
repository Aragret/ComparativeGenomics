%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAUCUCAGGGGGGGGGGUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACxxxxxxxxxxAAAGACGCCCUCGGCUUACUUCUCUUCCUUCUCUCCUUAAUGACAUUAACCCCCCCCCCCACUAUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[43.21521759 275.79797363]
[32.35021973 271.90969849]
[21.74917793 267.35064697]
[11.45345688 262.13867188]
[1.50322783 256.29400635]
[-8.06268406 249.83955383]
[-17.20695496 242.80043030]
[-25.89390564 235.20413208]
[-34.08964157 227.08030701]
[-41.76218414 218.46061707]
[-48.88159561 209.37872314]
[-55.42010117 199.87005615]
[-68.35815430 207.45996094]
[-81.29621124 215.04986572]
[-89.28434753 228.70637512]
[-104.17711639 228.47259521]
[-117.11517334 236.06250000]
[-130.05322266 243.65240479]
[-142.99128723 251.24230957]
[-155.92933655 258.83221436]
[-168.86740112 266.42211914]
[-171.29739380 281.86975098]
[-183.12231445 292.10232544]
[-198.75880432 292.28829956]
[-210.82376099 282.33990479]
[-213.62051392 266.95443726]
[-205.82849121 253.39648438]
[-191.12687683 248.06765747]
[-176.45730591 253.48408508]
[-163.51924133 245.89416504]
[-150.58119202 238.30426025]
[-137.64314270 230.71435547]
[-124.70507812 223.12445068]
[-111.76702118 215.53453064]
[-104.70430756 202.42091370]
[-88.88612366 202.11181641]
[-75.94806671 194.52189636]
[-63.01000977 186.93199158]
[-73.18211365 164.32254028]
[-80.23527527 140.55465698]
[-84.04245758 116.05639648]
[-84.53510284 91.26897430]
[-81.70433044 66.63878632]
[-75.60112762 42.60942459]
[-66.33541107 19.61364746]
[-54.07405090 -1.93439937]
[-39.03786850 -21.64664268]
[-49.91669464 -31.97384834]
[-60.79552078 -42.30105209]
[-71.67434692 -52.62825775]
[-86.14280701 -47.63604736]
[-101.27223969 -49.95095825]
[-113.58601379 -59.04104233]
[-120.25450897 -72.81745911]
[-119.74535370 -88.11450195]
[-112.17555237 -101.41700745]
[-99.28458405 -109.66816711]
[-84.03470612 -110.97191620]
[-69.93022919 -105.02867126]
[-60.21224594 -93.20414734]
[-57.11389160 -78.21552277]
[-61.34714127 -63.50708389]
[-50.46831512 -53.17987823]
[-39.58948898 -42.85267258]
[-28.71066475 -32.52546692]
[-18.10370255 -42.05967331]
[-6.79285145 -50.74721146]
[5.15447569 -58.53630829]
[17.66707420 -65.38054657]
[30.67037201 -71.23912048]
[44.08686829 -76.07713318]
[57.83660126 -79.86573792]
[71.83762360 -82.58235168]
[86.00649261 -84.21079254]
[100.25876617 -84.74135590]
[114.50949097 -84.17086792]
[128.67373657 -82.50274658]
[142.66709900 -79.74691772]
[156.40617371 -75.91980743]
[169.80905151 -71.04423523]
[182.79588318 -65.14925385]
[195.28926086 -58.26999283]
[203.54154968 -70.79595184]
[211.79383850 -83.32191467]
[212.92491150 -99.10263824]
[226.38798523 -105.47402954]
[234.64027405 -117.99999237]
[235.06575012 -134.39361572]
[249.60298157 -141.98313904]
[263.29733276 -132.96110535]
[262.06121826 -116.60861206]
[247.16624451 -109.74770355]
[238.91395569 -97.22174072]
[238.37315369 -82.33695984]
[224.31980896 -75.06962585]
[216.06752014 -62.54366302]
[207.81523132 -50.01770401]
[217.42266846 -42.62310791]
[226.52441406 -34.61428452]
[235.08126831 -26.02572823]
[243.05638123 -16.89442444]
[250.41539001 -7.25969887]
[257.12661743 2.83695459]
[263.16116333 13.35205364]
[268.49304199 24.24031448]
[273.09927368 35.45484543]
[276.96002197 46.94734573]
[280.05868530 58.66832733]
[282.38189697 70.56730652]
[283.91964722 82.59304810]
[284.66531372 94.69374847]
[284.61569214 106.81730652]
[283.77102661 118.91149902]
[282.13491821 130.92425537]
[279.71441650 142.80381775]
[276.51992798 154.49905396]
[272.56524658 165.95957947]
[286.34765625 171.87953186]
[300.13003540 177.79949951]
[313.91241455 183.71946716]
[327.69479370 189.63941956]
[344.63446045 190.33503723]
[348.65539551 206.80525208]
[333.94195557 215.22846985]
[321.77481079 203.42179871]
[307.99243164 197.50184631]
[294.21005249 191.58187866]
[280.42767334 185.66191101]
[266.64529419 179.74195862]
[261.34158325 189.99072266]
[255.40832520 199.88836670]
[248.86869812 209.39627075]
[241.74821472 218.47732544]
[234.07466125 227.09609985]
[225.87796021 235.21897888]
[217.19012451 242.81425476]
[208.04501343 249.85229492]
[198.47834778 256.30563354]
[188.52743530 262.14910889]
[178.23109436 267.35989380]
[167.62951660 271.91766357]
[156.76405334 275.80465698]
[145.67712402 279.00567627]
[134.41195679 281.50827026]
[123.01251984 283.30264282]
[111.52329254 284.38180542]
[99.98911285 284.74154663]
[88.45496368 284.38043213]
[76.96587372 283.29992676]
[65.56665039 281.50421143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 38]
[13 37]
[14 36]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[47 65]
[48 64]
[49 63]
[50 62]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
