%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGCCCAUAAGGGGGGGGGGAAAUAAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUxxxxxxxxxxUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCCCCCCCCCCCAACGCCCAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 404.34140015]
[70.87159729 399.18640137]
[58.28185654 390.90417480]
[47.94191742 379.94140625]
[40.40940475 366.88928223]
[36.09054184 352.45169067]
[35.21823120 337.40722656]
[37.83952332 322.56723022]
[43.81304932 308.73199463]
[52.81666565 296.64764404]
[64.36482239 286.96585083]
[77.83473969 280.20880127]
[92.50000000 276.74081421]
[92.50000000 261.74081421]
[92.50000000 246.74081421]
[92.50000000 231.74081421]
[92.50000000 216.74081421]
[92.50000000 201.74081421]
[92.50000000 186.74081421]
[92.50000000 171.74081421]
[92.50000000 156.74081421]
[92.50000000 141.74081421]
[92.50000000 126.74081421]
[75.97960663 118.26756287]
[67.41776276 100.09857941]
[53.24879074 105.02201080]
[39.07981491 109.94543457]
[24.91084099 114.86886597]
[14.60211372 127.62277222]
[-1.55316842 124.80516815]
[-6.93583679 109.31455994]
[3.99133682 97.08635712]
[19.98741341 100.69989014]
[34.15638733 95.77645874]
[48.32536316 90.85303497]
[62.49433899 85.92960358]
[70.29938507 73.12018585]
[68.17834473 58.27090454]
[66.05730438 43.42162323]
[63.93626022 28.57234001]
[48.94515610 29.33527565]
[33.94678497 28.73182297]
[19.06543541 26.76698112]
[4.42441368 23.45703316]
[-9.85495281 18.82940674]
[-23.65433884 12.92244720]
[-36.85939789 5.78510427]
[-49.36070633 -2.52347922]
[-61.05466843 -11.93445396]
[-71.84439087 -22.36983681]
[-81.64044952 -33.74315643]
[-90.36168671 -45.96016312]
[-97.93582916 -58.91962814]
[-104.30010223 -72.51415253]
[-109.40177917 -86.63110352]
[-113.19858551 -101.15348053]
[-115.65905762 -115.96095276]
[-116.76280975 -130.93081665]
[-116.50068665 -145.93904114]
[-114.87487030 -160.86123657]
[-111.89881897 -175.57376099]
[-107.59721375 -189.95469666]
[-102.00568390 -203.88488770]
[-95.17057037 -217.24888611]
[-87.14850616 -229.93595886]
[-78.00598145 -241.84097290]
[-67.81873322 -252.86528015]
[-56.67119598 -262.91751099]
[-44.65573502 -271.91439819]
[-31.87191582 -279.78137207]
[-18.42567635 -286.45324707]
[-4.42843628 -291.87472534]
[10.00381756 -296.00091553]
[24.75149155 -298.79757690]
[39.69237900 -300.24157715]
[54.70267487 -300.32089233]
[69.65798950 -299.03494263]
[84.43441010 -296.39434814]
[98.90947723 -292.42098999]
[112.96324921 -287.14776611]
[126.47927094 -280.61843872]
[139.34555054 -272.88705444]
[151.45544434 -264.01770020]
[162.70863342 -254.08384705]
[173.01185608 -243.16786194]
[182.27973938 -231.36016846]
[190.43547058 -218.75860596]
[197.41148376 -205.46762085]
[203.14996338 -191.59732056]
[207.60336304 -177.26266479]
[210.73478699 -162.58242798]
[212.51826477 -147.67825317]
[212.93904114 -132.67364502]
[211.99362183 -117.69294739]
[209.68981934 -102.86028290]
[206.04675293 -88.29857635]
[201.09460449 -74.12848663]
[194.87440491 -60.46743774]
[187.43768311 -47.42862701]
[178.84609985 -35.12010193]
[169.17082214 -23.64385796]
[158.49201965 -13.09499073]
[146.89820862 -3.56091475]
[134.48542786 4.87936592]
[121.35656738 12.15591145]
[107.62039948 18.20842552]
[93.39075470 22.98675156]
[78.78553772 26.45129776]
[80.90658569 41.30057907]
[83.02762604 56.14986038]
[85.14867401 70.99914551]
[95.79911041 68.49810028]
[106.40147400 69.68946838]
[115.74372864 74.25474548]
[122.81897736 81.50032043]
[126.93347931 90.45653534]
[127.77266693 100.00494385]
[142.21464539 104.05825806]
[156.65661621 108.11157227]
[171.09858704 112.16488647]
[185.73402405 105.59345245]
[199.93026733 113.06646729]
[202.79719543 128.85128784]
[192.13554382 140.83912659]
[176.12400818 139.83396912]
[167.04527283 126.60686493]
[152.60330200 122.55355072]
[138.16133118 118.50023651]
[123.71935272 114.44691467]
[119.40586853 119.86789703]
[113.88491058 124.05265808]
[107.50000000 126.74081421]
[107.50000000 141.74081421]
[107.50000000 156.74081421]
[107.50000000 171.74081421]
[107.50000000 186.74081421]
[107.50000000 201.74081421]
[107.50000000 216.74081421]
[107.50000000 231.74081421]
[107.50000000 246.74081421]
[107.50000000 261.74081421]
[107.50000000 276.74081421]
[122.16526031 280.20880127]
[135.63517761 286.96585083]
[147.18333435 296.64764404]
[156.18695068 308.73199463]
[162.16047668 322.56723022]
[164.78176880 337.40722656]
[163.90945435 352.45169067]
[159.59059143 366.88928223]
[152.05809021 379.94140625]
[141.71813965 390.90417480]
[129.12840271 399.18640137]
[114.96779633 404.34140015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[25 36]
[26 35]
[27 34]
[28 33]
[37 111]
[38 110]
[39 109]
[40 108]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
