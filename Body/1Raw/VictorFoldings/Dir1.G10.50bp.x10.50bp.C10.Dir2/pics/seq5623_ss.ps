%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUCACCCGGGGGGGGGGUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCACAxxxxxxxxxxUAAUCAUAUUUUAUAUCUUCUUCGAAACCACACUUAUCCCCACCUUGGCUCCCCCCCCCCAUCAUCACCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 357.70864868]
[71.19830322 351.69262695]
[59.48964310 342.16320801]
[50.78712082 329.82754517]
[45.73651886 315.60101318]
[44.71262741 300.53933716]
[47.79142761 285.76016235]
[54.74444962 272.36026001]
[65.05573273 261.33392334]
[77.96011353 253.49940491]
[92.50000000 249.43809509]
[92.50000000 234.43809509]
[92.50000000 219.43809509]
[92.50000000 204.43809509]
[92.50000000 189.43809509]
[92.50000000 174.43809509]
[92.50000000 159.43809509]
[92.50000000 144.43809509]
[92.50000000 129.43809509]
[92.50000000 114.43809509]
[83.73101807 100.16924286]
[92.20125580 85.72106171]
[91.88919830 70.72430420]
[76.89611053 70.13889313]
[61.96486282 68.65787506]
[47.14891434 66.28655243]
[32.50129700 63.03342056]
[18.07445145 58.91011810]
[3.92001820 53.93140793]
[-9.91133118 48.11511230]
[-23.37008476 41.48205566]
[-36.40806580 34.05597687]
[-48.97859573 25.86346245]
[-61.03667831 16.93384171]
[-72.53914642 7.29907656]
[-83.44483185 -3.00634050]
[-93.71468353 -13.94551945]
[-103.31194305 -25.47929955]
[-112.20225525 -37.56639481]
[-120.35379791 -50.16353226]
[-127.73738861 -63.22562027]
[-134.32658386 -76.70590210]
[-140.09780884 -90.55611420]
[-145.03041077 -104.72668457]
[-149.10671997 -119.16687775]
[-152.31214905 -133.82501221]
[-154.63520813 -148.64860535]
[-156.06759644 -163.58459473]
[-156.60420227 -178.57951355]
[-156.24307251 -193.57968140]
[-154.98551941 -208.53140259]
[-152.83602905 -223.38116455]
[-149.80230713 -238.07579041]
[-145.89523315 -252.56268311]
[-141.12875366 -266.78997803]
[-135.51995850 -280.70678711]
[-129.08891296 -294.26321411]
[-121.85865021 -307.41079712]
[-113.85504150 -320.10244751]
[-105.10674286 -332.29272461]
[-95.64508057 -343.93798828]
[-85.50390625 -354.99658203]
[-74.71953583 -365.42886353]
[-63.33057404 -375.19754028]
[-51.37778473 -384.26763916]
[-38.90396118 -392.60665894]
[-25.95375252 -400.18475342]
[-12.57352257 -406.97482300]
[1.18883467 -412.95251465]
[15.28405190 -418.09649658]
[29.66167068 -422.38827515]
[44.27022552 -425.81256104]
[59.05741882 -428.35705566]
[73.97031403 -430.01266479]
[88.95553589 -430.77343750]
[103.95942688 -430.63668823]
[118.92828369 -429.60287476]
[133.80853271 -427.67568970]
[148.54687500 -424.86209106]
[163.09059143 -421.17208862]
[177.38758850 -416.61889648]
[191.38668823 -411.21887207]
[205.03779602 -404.99127197]
[218.29203796 -397.95843506]
[231.10194397 -390.14553833]
[243.42169189 -381.58053589]
[255.20716858 -372.29406738]
[266.41616821 -362.31939697]
[277.00857544 -351.69226074]
[286.94647217 -340.45065308]
[296.19430542 -328.63485718]
[304.71893311 -316.28713989]
[312.48986816 -303.45169067]
[319.47924805 -290.17449951]
[325.66210938 -276.50308228]
[331.01629639 -262.48638916]
[335.52264404 -248.17454529]
[339.16500854 -233.61883545]
[341.93035889 -218.87135315]
[343.80880737 -203.98487854]
[344.79360962 -189.01272583]
[344.88122559 -174.00845337]
[344.07138062 -159.02581787]
[342.36697388 -144.11842346]
[339.77407837 -129.33963013]
[336.30200195 -114.74237061]
[331.96313477 -100.37887573]
[326.77307129 -86.30057526]
[320.75030518 -72.55786896]
[313.91647339 -59.19993973]
[306.29602051 -46.27461243]
[297.91619873 -33.82815552]
[288.80703735 -21.90512657]
[279.00112915 -10.54820728]
[268.53356934 0.20194934]
[257.44186401 10.30685997]
[245.76567078 19.73035049]
[233.54681396 28.43868828]
[220.82904053 36.40069962]
[207.65786743 43.58787918]
[194.08042908 49.97450256]
[180.14535522 55.53770447]
[165.90252686 60.25757217]
[151.40290833 64.11721039]
[136.69842529 67.10279846]
[121.84171295 69.20365143]
[106.88595581 70.41224670]
[107.19801331 85.40900421]
[115.12266541 93.99886322]
[115.24423218 105.68522644]
[107.50000000 114.43809509]
[107.50000000 129.43809509]
[107.50000000 144.43809509]
[107.50000000 159.43809509]
[107.50000000 174.43809509]
[107.50000000 189.43809509]
[107.50000000 204.43809509]
[107.50000000 219.43809509]
[107.50000000 234.43809509]
[107.50000000 249.43809509]
[122.03988647 253.49940491]
[134.94427490 261.33392334]
[145.25555420 272.36026001]
[152.20857239 285.76016235]
[155.28736877 300.53933716]
[154.26348877 315.60101318]
[149.21287537 329.82754517]
[140.51036072 342.16320801]
[128.80169678 351.69262695]
[114.95575714 357.70864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 128]
[23 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
