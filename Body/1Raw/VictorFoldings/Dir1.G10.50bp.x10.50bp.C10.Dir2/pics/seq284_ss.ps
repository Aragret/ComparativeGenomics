%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCAAACCCCGGGGGGGGGGCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCxxxxxxxxxxCCUCAUCACCCAACUAAAAAUAUUAAACACAAACUACCACCUACCUCCCUCCCCCCCCCCCACCAAAGCCC\
) } def
/len { sequence length } bind def

/coor [
[9.75616169 328.16790771]
[-0.53280985 323.82513428]
[-10.61351299 319.01870728]
[-20.46506310 313.75854492]
[-30.06705284 308.05554199]
[-39.39958954 301.92150879]
[-48.44334030 295.36917114]
[-57.17956924 288.41210938]
[-65.59017944 281.06472778]
[-73.65774536 273.34222412]
[-81.36554718 265.26065063]
[-92.75662231 275.01992798]
[-104.14769745 284.77920532]
[-115.53877258 294.53848267]
[-126.92984772 304.29772949]
[-138.32092285 314.05700684]
[-149.71199036 323.81628418]
[-161.10307312 333.57556152]
[-172.49414062 343.33483887]
[-180.58859253 358.23168945]
[-197.14404297 354.57742310]
[-198.21559143 337.65737915]
[-182.25341797 331.94375610]
[-170.86233521 322.18447876]
[-159.47126770 312.42523193]
[-148.08020020 302.66595459]
[-136.68911743 292.90667725]
[-125.29804230 283.14739990]
[-113.90697479 273.38812256]
[-102.51589966 263.62884521]
[-91.12482452 253.86956787]
[-114.95390320 218.31889343]
[-132.24317932 179.16847229]
[-142.46664429 137.60940552]
[-145.31326294 94.90610504]
[-160.29350281 94.13644409]
[-175.27374268 93.36678314]
[-189.62374878 101.30463409]
[-203.53164673 92.61543274]
[-202.69020081 76.23788452]
[-187.96499634 69.01981354]
[-174.50408936 78.38654327]
[-159.52383423 79.15620422]
[-144.54359436 79.92585754]
[-143.37684631 68.81905365]
[-141.70591736 57.77684402]
[-139.53424072 46.82210541]
[-136.86634827 35.97753143]
[-133.70774841 25.26558876]
[-130.06498718 14.70847034]
[-125.94561005 4.32804537]
[-121.35816193 -5.85418081]
[-116.31213379 -15.81711483]
[-110.81798553 -25.54011726]
[-104.88709259 -35.00304413]
[-98.53175354 -44.18629456]
[-91.76512146 -53.07083893]
[-84.60121918 -61.63827896]
[-77.05489349 -69.87085724]
[-69.14176941 -77.75152588]
[-60.87824249 -85.26395416]
[-52.28143692 -92.39258575]
[-43.36915588 -99.12265015]
[-34.15986633 -105.44019318]
[-24.67264175 -111.33214569]
[-14.92714310 -116.78628540]
[-4.94355488 -121.79132843]
[5.25743914 -126.33689880]
[15.65470600 -130.41357422]
[26.22670555 -134.01290894]
[36.95153809 -137.12747192]
[47.80698395 -139.75077820]
[58.77055740 -141.87739563]
[69.81954193 -143.50294495]
[80.93105316 -144.62403870]
[92.08206177 -145.23835754]
[103.24947357 -145.34461975]
[114.41015625 -144.94262695]
[125.54099274 -144.03320312]
[136.61891174 -142.61820984]
[147.62097168 -140.70062256]
[158.52436829 -138.28437805]
[169.30653381 -135.37448120]
[179.94511414 -131.97698975]
[190.41807556 -128.09890747]
[200.70373535 -123.74829865]
[210.78076172 -118.93415833]
[220.62829590 -113.66646576]
[230.22592163 -107.95613098]
[239.55377197 -101.81498718]
[248.59251404 -95.25575256]
[257.32342529 -88.29201508]
[265.72842407 -80.93820190]
[273.79010010 -73.20955658]
[281.49172974 -65.12207794]
[288.81735229 -56.69252014]
[295.75186157 -47.93835831]
[302.28079224 -38.87771606]
[308.39071655 -29.52937126]
[314.06887817 -19.91268730]
[319.30361938 -10.04758549]
[324.08401489 0.04549522]
[328.40017700 10.34564590]
[332.24319458 20.83152962]
[335.60507202 31.48142052]
[338.47885132 42.27325821]
[340.85861206 53.18468475]
[342.73937988 64.19309998]
[344.11727905 75.27568817]
[344.98947144 86.40950012]
[345.35412598 97.57146454]
[345.21047974 108.73846436]
[344.55886841 119.88735962]
[343.40060425 130.99505615]
[341.73809814 142.03852844]
[339.57479858 152.99493408]
[336.91519165 163.84153748]
[333.76477051 174.55589294]
[330.13006592 185.11578369]
[326.01861572 195.49935913]
[321.43893433 205.68508911]
[316.40054321 215.65187073]
[310.91381836 225.37905884]
[304.99014282 234.84651184]
[298.64181519 244.03462219]
[291.88198853 252.92433167]
[284.72460938 261.49722290]
[277.18457031 269.73556519]
[269.27746582 277.62228394]
[261.01968384 285.14102173]
[252.42832947 292.27621460]
[243.52119446 299.01309204]
[234.31674194 305.33767700]
[224.83401489 311.23684692]
[215.09268188 316.69845581]
[205.11291504 321.71112061]
[194.91540527 326.26446533]
[184.52125549 330.34909058]
[173.95201111 333.95651245]
[163.22955322 337.07925415]
[152.37611389 339.71084595]
[141.41416931 341.84582520]
[130.36642456 343.47982788]
[119.25578308 344.60940552]
[108.10523987 345.23223877]
[96.93791199 345.34704590]
[85.77692413 344.95355225]
[74.64540100 344.05264282]
[63.56640625 342.64611816]
[52.56288910 340.73690796]
[41.65764236 338.32901001]
[30.87326050 335.42733765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[35 44]
[36 43]
[37 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
