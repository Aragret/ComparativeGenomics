%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACACUAAAGGGGGGGGGGGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCACxxxxxxxxxxCCUCCCCCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCCCCCCCCCCCAAUACUAAA\
) } def
/len { sequence length } bind def

/coor [
[97.51727295 159.63143921]
[82.76712036 157.14106750]
[69.09954071 151.06108093]
[57.37311554 141.77345276]
[48.32451248 129.86163330]
[42.52215195 116.07389069]
[40.33054733 101.27639771]
[41.88736725 86.39871979]
[47.09481430 72.37547302]
[55.62576294 60.08759689]
[66.94429016 50.30701447]
[80.33937836 43.64813614]
[94.96953583 40.52927399]
[95.59351349 25.54225731]
[96.21749115 10.55524158]
[96.84146881 -4.43177509]
[97.46544647 -19.41879082]
[98.08942413 -34.40580750]
[98.71340179 -49.39282227]
[99.33737946 -64.37983704]
[99.96135712 -79.36685181]
[100.58533478 -94.35387421]
[101.20931244 -109.34088898]
[86.27967072 -110.83553314]
[71.46219635 -113.19573212]
[56.80702972 -116.41349792]
[42.36375046 -120.47794342]
[28.18123245 -125.37532043]
[14.30746746 -131.08905029]
[0.78940082 -137.59980774]
[-12.32722759 -144.88554382]
[-24.99803543 -152.92163086]
[-37.18014908 -161.68087769]
[-48.83234406 -171.13362122]
[-59.91519928 -181.24787903]
[-70.39120483 -191.98945618]
[-80.22492218 -203.32197571]
[-89.38307190 -215.20710754]
[-97.83467102 -227.60462952]
[-105.55110931 -240.47259521]
[-112.50629425 -253.76747131]
[-118.67667389 -267.44424438]
[-124.04138184 -281.45666504]
[-128.58226013 -295.75732422]
[-132.28395081 -310.29779053]
[-135.13391113 -325.02893066]
[-137.12251282 -339.90081787]
[-138.24302673 -354.86318970]
[-138.49165344 -369.86538696]
[-137.86756897 -384.85668945]
[-136.37286377 -399.78631592]
[-134.01260376 -414.60379028]
[-130.79476929 -429.25894165]
[-126.73027039 -443.70220947]
[-121.83283234 -457.88470459]
[-116.11904144 -471.75845337]
[-109.60823059 -485.27648926]
[-102.32243347 -498.39306641]
[-94.28629303 -511.06384277]
[-85.52700806 -523.24591064]
[-76.07421875 -534.89807129]
[-65.95989990 -545.98089600]
[-55.21828842 -556.45684814]
[-43.88572311 -566.29052734]
[-32.00055695 -575.44860840]
[-19.60299683 -583.90014648]
[-6.73499727 -591.61657715]
[6.55990076 -598.57171631]
[20.23671150 -604.74200439]
[34.24915695 -610.10668945]
[48.54981995 -614.64746094]
[63.09031677 -618.34912109]
[77.82144165 -621.19903564]
[92.69335938 -623.18756104]
[107.65573120 -624.30798340]
[122.65793610 -624.55657959]
[137.64921570 -623.93243408]
[152.57884216 -622.43768311]
[167.39630127 -620.07733154]
[182.05143738 -616.85943604]
[196.49468994 -612.79486084]
[210.67716980 -607.89739990]
[224.55088806 -602.18353271]
[238.06889343 -595.67266846]
[251.18547058 -588.38684082]
[263.85620117 -580.35064697]
[276.03823853 -571.59130859]
[287.69036865 -562.13842773]
[298.77313232 -552.02410889]
[309.24905396 -541.28240967]
[319.08267212 -529.94982910]
[328.24072266 -518.06463623]
[336.69223022 -505.66702271]
[344.40856934 -492.79901123]
[351.36361694 -479.50405884]
[357.53390503 -465.82723999]
[362.89849854 -451.81475830]
[367.43923950 -437.51409912]
[371.14080811 -422.97357178]
[373.99066162 -408.24243164]
[375.97912598 -393.37051392]
[377.09951782 -378.40814209]
[377.34802246 -363.40591431]
[376.72381592 -348.41464233]
[375.22900391 -333.48501587]
[372.86862183 -318.66757202]
[369.65066528 -304.01245117]
[365.58602905 -289.56921387]
[360.68847656 -275.38677979]
[354.97457886 -261.51306152]
[348.46365356 -247.99508667]
[341.17773438 -234.87855530]
[333.14151001 -222.20783997]
[324.38211060 -210.02583313]
[314.92922974 -198.37376404]
[304.81481934 -187.29103088]
[294.07312012 -176.81515503]
[282.74047852 -166.98158264]
[270.85522461 -157.82357788]
[258.45761108 -149.37213135]
[245.58953857 -141.65585327]
[232.29458618 -134.70083618]
[218.61772156 -128.53062439]
[204.60522461 -123.16609192]
[190.30453491 -118.62538910]
[175.76400757 -114.92388916]
[161.03285217 -112.07410431]
[146.16091919 -110.08568573]
[131.19853210 -108.96535492]
[116.19632721 -108.71691132]
[115.57234955 -93.72989655]
[114.94837189 -78.74288177]
[114.32439423 -63.75586319]
[113.70041656 -48.76884460]
[113.07643890 -33.78182983]
[112.45246124 -18.79481316]
[111.82848358 -3.80779743]
[111.20450592 11.17921829]
[110.58052826 26.16623497]
[109.95655060 41.15325165]
[124.27683258 45.47745132]
[137.07203674 53.22674942]
[147.53837585 63.91433716]
[155.01837158 76.86882019]
[159.04211426 91.27640533]
[159.35684204 106.23200226]
[155.94277954 120.79610443]
[149.01440430 134.05380249]
[139.00694275 145.17224121]
[126.54907227 153.45297241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
