%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCACUCUCAGGGGGGGGGGCUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGACUAGCUxxxxxxxxxxCUUGCCGCAGUACUCUUAAAACUAGGCGGCUAUGGUAUAAUACGCCUCACCCCCCCCCCCACUCAUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[81.46664429 365.53115845]
[67.97776031 358.79965210]
[56.49225998 349.03506470]
[47.67789459 336.80517578]
[42.04711151 322.82098389]
[39.92728424 307.89550781]
[41.44165039 292.89651489]
[46.50217438 278.69598389]
[54.81464005 266.11956787]
[65.89576721 255.89842224]
[79.10132599 248.62678528]
[93.66355133 244.72741699]
[93.35557556 229.73057556]
[93.04759216 214.73373413]
[92.73961639 199.73689270]
[92.43164062 184.74006653]
[92.12366486 169.74322510]
[91.81568146 154.74638367]
[91.50770569 139.74954224]
[91.19972992 124.75270844]
[90.89175415 109.75587463]
[84.76258087 96.06524658]
[73.78177643 85.84653473]
[62.80097198 75.62783051]
[51.82017136 65.40912628]
[33.80552673 61.73444366]
[29.25511360 44.81290817]
[18.06681824 34.82181168]
[6.87852049 24.83071518]
[-4.30977583 14.83961868]
[-15.56674004 24.78029823]
[-27.92043114 33.31977463]
[-41.19742203 40.33816910]
[-55.21132660 45.73694992]
[-69.76541138 49.44033432]
[-84.65535736 51.39632416]
[-99.67212677 51.57746506]
[-114.60492706 49.98121262]
[-129.24411011 46.62997818]
[-143.38415527 41.57080460]
[-156.82658386 34.87471390]
[-169.38265991 26.63571358]
[-180.87614441 16.96946335]
[-191.14566040 6.01166248]
[-200.04704285 -6.08385849]
[-207.45533752 -19.14729691]
[-213.26655579 -32.99526596]
[-217.39909363 -47.43335342]
[-219.79495239 -62.25888062]
[-220.42048645 -77.26371765]
[-219.26693726 -92.23721313]
[-216.35046387 -106.96916962]
[-211.71203613 -121.25277710]
[-205.41676331 -134.88751221]
[-197.55300903 -147.68194580]
[-188.23118591 -159.45649719]
[-177.58215332 -170.04585266]
[-165.75540161 -179.30134583]
[-152.91696167 -187.09306335]
[-139.24707031 -193.31161499]
[-124.93761444 -197.86968994]
[-110.18949890 -200.70332336]
[-95.20975494 -201.77270508]
[-80.20867157 -201.06285095]
[-65.39685059 -198.58370972]
[-50.98221207 -194.37008667]
[-37.16712189 -188.48114014]
[-24.14552689 -180.99952698]
[-12.10022354 -172.03030396]
[-1.20031250 -161.69937134]
[8.40118980 -150.15174866]
[16.56949234 -137.54956055]
[23.18992615 -124.06970978]
[28.16954803 -109.90144348]
[31.43845558 -95.24365997]
[32.95075607 -80.30213165]
[32.68522263 -65.28661346]
[30.64557648 -50.40789795]
[26.86045456 -35.87485886]
[21.38299561 -21.89151764]
[14.29009342 -8.65418053]
[5.68132114 3.65132189]
[16.86961746 13.64241886]
[28.05791473 23.63351631]
[39.24621201 33.62461090]
[51.37604141 33.26490021]
[60.78425980 41.55083847]
[62.03887558 54.42832184]
[73.01967621 64.64702606]
[84.00048065 74.86573792]
[94.98128510 85.08444214]
[85.88963318 73.15373230]
[82.23459625 58.60585785]
[84.60757446 43.79474640]
[92.62461853 31.11693001]
[104.98851013 22.62374878]
[119.69870758 19.68945122]
[134.37501526 22.78882599]
[146.64271545 31.42037201]
[154.51681519 44.18745804]
[156.72325134 59.02429199]
[152.90499878 73.53018951]
[143.67988586 85.35800171]
[130.54058838 92.59393311]
[115.61052704 94.06688690]
[130.57180786 95.14395905]
[145.53309631 96.22103119]
[160.49436951 97.29809570]
[175.45565796 98.37516785]
[182.23489380 84.76963806]
[193.70797729 74.79785156]
[208.12536621 69.98041534]
[223.28848267 71.05197144]
[236.88507080 77.84910583]
[246.84176636 89.33530426]
[251.64022827 103.75900269]
[250.54873657 118.92070007]
[243.73371887 132.50834656]
[232.23443604 142.44992065]
[217.80442810 147.22940063]
[202.64418030 146.11796570]
[189.06552124 139.28507996]
[179.13908386 127.77272797]
[174.37858582 113.33644867]
[159.41729736 112.25937653]
[144.45602417 111.18231201]
[129.49473572 110.10523987]
[114.53345490 109.02816772]
[111.48013306 109.83537292]
[108.55410004 109.95447540]
[105.88858795 109.44789124]
[106.19656372 124.44473267]
[106.50454712 139.44157410]
[106.81252289 154.43840027]
[107.12049866 169.43524170]
[107.42847443 184.43208313]
[107.73645782 199.42892456]
[108.04443359 214.42576599]
[108.35240936 229.42259216]
[108.66038513 244.41943359]
[123.37042236 247.71766663]
[136.86338806 254.44100952]
[148.35479736 264.19860840]
[157.17657471 276.42315674]
[162.81584167 290.40393066]
[164.94471741 305.32812500]
[163.43943787 320.32806396]
[158.38752747 334.53161621]
[150.08268738 347.11309814]
[139.00775146 357.34094238]
[125.80661774 364.62060547]
[111.24675751 368.52877808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 91]
[23 90]
[24 89]
[25 88]
[27 85]
[28 84]
[29 83]
[30 82]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
