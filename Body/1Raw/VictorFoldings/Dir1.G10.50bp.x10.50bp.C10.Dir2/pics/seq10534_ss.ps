%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCCCGACGGGGGGGGGGAUCAUUACCGGGUUUUCCUCUUGUAAAUAUAGUUUAACCAAAACAUCAGAxxxxxxxxxxACCCACACUCAACAGAAACAAAGCAUACAUCAUUAUUCUCGCACGGACUACCCCCCCCCCCAACCACGAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 376.88131714]
[71.19830322 370.86529541]
[59.48964310 361.33587646]
[50.78712082 349.00021362]
[45.73651886 334.77368164]
[44.71262741 319.71200562]
[47.79142761 304.93286133]
[54.74444962 291.53292847]
[65.05573273 280.50659180]
[77.96011353 272.67208862]
[92.50000000 268.61077881]
[92.50000000 253.61077881]
[92.50000000 238.61077881]
[92.50000000 223.61077881]
[92.50000000 208.61077881]
[92.50000000 193.61077881]
[92.50000000 178.61077881]
[92.50000000 163.61077881]
[92.50000000 148.61077881]
[92.50000000 133.61077881]
[81.55700684 129.08247375]
[72.79517365 121.11472321]
[67.25072479 110.64984131]
[65.57937622 98.92545319]
[67.97878265 87.32814789]
[74.16518402 77.22948456]
[83.40694427 69.82377625]
[94.61108398 65.98686218]
[95.54671478 51.01606750]
[96.48233795 36.04527664]
[89.62089539 21.78936195]
[98.13699341 9.56948757]
[83.26042938 7.60264921]
[68.55500793 4.61414099]
[54.09080505 0.61820531]
[39.93675232 -4.36611557]
[26.16029930 -10.31506824]
[12.82709980 -17.20030403]
[0.00069237 -24.98900986]
[-12.25779819 -33.64406967]
[-23.88995552 -43.12424088]
[-34.84034348 -53.38433838]
[-45.05678558 -64.37547302]
[-54.49058533 -76.04526520]
[-63.09679031 -88.33810425]
[-70.83438873 -101.19540405]
[-77.66651154 -114.55590057]
[-83.56059265 -128.35591125]
[-88.48854065 -142.52969360]
[-92.42688751 -157.00968933]
[-95.35684967 -171.72688293]
[-97.26446533 -186.61116028]
[-98.14065552 -201.59158325]
[-97.98123169 -216.59675598]
[-96.78695679 -231.55517578]
[-94.56352997 -246.39556885]
[-91.32154083 -261.04718018]
[-87.07643890 -275.44024658]
[-81.84844971 -289.50610352]
[-75.66249847 -303.17779541]
[-68.54805756 -316.39010620]
[-60.53902817 -329.08010864]
[-51.67358398 -341.18731689]
[-41.99396896 -352.65405273]
[-31.54631233 -363.42562866]
[-20.38040352 -373.45074463]
[-8.54944992 -382.68164062]
[3.89016414 -391.07427979]
[16.87915993 -398.58871460]
[30.35563660 -405.18911743]
[44.25537491 -410.84402466]
[58.51213074 -415.52648926]
[73.05796814 -419.21420288]
[87.82357025 -421.88961792]
[102.73856354 -423.53991699]
[117.73188019 -424.15731812]
[132.73207092 -423.73880005]
[147.66763306 -422.28640747]
[162.46740723 -419.80706787]
[177.06086731 -416.31256104]
[191.37847900 -411.81954956]
[205.35197449 -406.34945679]
[218.91479492 -399.92834473]
[232.00228882 -392.58682251]
[244.55210876 -384.35986328]
[256.50442505 -375.28668213]
[267.80230713 -365.41049194]
[278.39187622 -354.77841187]
[288.22268677 -343.44104004]
[297.24789429 -331.45245361]
[305.42449951 -318.86978149]
[312.71353149 -305.75296021]
[319.08023071 -292.16452026]
[324.49429321 -278.16921997]
[328.92987061 -263.83374023]
[332.36587524 -249.22637939]
[334.78588867 -234.41677856]
[336.17843628 -219.47550964]
[336.53680420 -204.47377014]
[335.85934448 -189.48304749]
[334.14929199 -174.57478333]
[331.41473389 -159.82003784]
[327.66876221 -145.28909302]
[322.92919922 -131.05120850]
[317.21862793 -117.17424774]
[310.56427002 -103.72432709]
[302.99786377 -90.76554871]
[294.55541992 -78.35966492]
[285.27719116 -66.56580353]
[275.20739746 -55.44015503]
[264.39404297 -45.03574753]
[252.88861084 -35.40216446]
[240.74597168 -26.58530617]
[228.02397156 -18.62719727]
[214.78324890 -11.56576061]
[201.08689880 -5.43464518]
[187.00018311 -0.26306975]
[172.59024048 3.92432022]
[157.92575073 7.10757017]
[143.07656860 9.27150917]
[128.11347961 10.40582657]
[113.10778809 10.50511646]
[120.03615570 23.69022179]
[111.45313263 36.98090744]
[110.51750183 51.95169830]
[109.58187866 66.92248535]
[124.94205475 76.25493622]
[133.50840759 92.05517578]
[132.94760132 110.01945496]
[123.41238403 125.25459290]
[107.50000000 133.61077881]
[107.50000000 148.61077881]
[107.50000000 163.61077881]
[107.50000000 178.61077881]
[107.50000000 193.61077881]
[107.50000000 208.61077881]
[107.50000000 223.61077881]
[107.50000000 238.61077881]
[107.50000000 253.61077881]
[107.50000000 268.61077881]
[122.03988647 272.67208862]
[134.94427490 280.50659180]
[145.25555420 291.53292847]
[152.20857239 304.93286133]
[155.28736877 319.71200562]
[154.26348877 334.77368164]
[149.21287537 349.00021362]
[140.51036072 361.33587646]
[128.80169678 370.86529541]
[114.95575714 376.88131714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[28 126]
[29 125]
[30 124]
[32 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
