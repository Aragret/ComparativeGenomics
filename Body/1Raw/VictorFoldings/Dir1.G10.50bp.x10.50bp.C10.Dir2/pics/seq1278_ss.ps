%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUCACCUGGGGGGGGGGGAGUUGUAAAAAACUCCAGUUGACACAAAAUAGACUACGAAAGUGGCUUUxxxxxxxxxxUGCACGAAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUCCCCCCCCCCAAAAUCACCU\
) } def
/len { sequence length } bind def

/coor [
[66.68933868 392.83178711]
[52.19964600 388.62332153]
[39.29341507 380.80718994]
[28.85061646 369.91635132]
[21.58325195 356.69335938]
[17.98682594 342.03976440]
[18.30654716 326.95465088]
[22.52061844 312.46658325]
[30.34171486 299.56338501]
[41.23658371 289.12478638]
[54.46239090 281.86251831]
[69.11738586 278.27175903]
[69.42944336 263.27499390]
[69.74149323 248.27824402]
[70.05355072 233.28149414]
[70.36560822 218.28474426]
[70.67766571 203.28799438]
[70.98972321 188.29122925]
[71.30178070 173.29447937]
[71.61383057 158.29772949]
[71.92588806 143.30097961]
[72.23794556 128.30421448]
[82.94251251 89.55926514]
[75.48760223 76.54295349]
[68.03269196 63.52664185]
[60.57778168 50.51033401]
[53.12287140 37.49402237]
[41.09081650 38.99820709]
[29.29633904 36.33710480]
[19.13442421 29.84964180]
[11.79873562 20.32586288]
[8.14143276 8.91077614]
[8.57422066 -3.03328562]
[13.02214050 -14.08924103]
[20.93526840 -22.95339394]
[14.30676937 -36.40935898]
[7.67827082 -49.86532593]
[-5.36088037 -58.82585526]
[-4.04420424 -73.66214752]
[-10.67270279 -87.11811829]
[-17.30120087 -100.57408142]
[-26.56615067 -112.37071991]
[-42.11452866 -115.29621887]
[-46.90704727 -129.39872742]
[-58.40885162 -139.02726746]
[-69.91065216 -148.65579224]
[-83.01695251 -141.03996277]
[-97.93815613 -138.36909485]
[-112.87245178 -140.96571350]
[-126.01646423 -148.51626587]
[-135.78298950 -160.10897827]
[-140.99266052 -174.34396362]
[-141.01638794 -189.50230408]
[-135.85130310 -203.75354004]
[-126.12113190 -215.37677002]
[-113.00081635 -222.96842957]
[-98.07472229 -225.61180115]
[-83.14522552 -222.98765564]
[-70.01515198 -215.41290283]
[-60.27001572 -203.80221558]
[-55.08658981 -189.55764771]
[-55.09079361 -174.39929199]
[-60.28212738 -160.15759277]
[-48.78032303 -150.52906799]
[-37.27852249 -140.90054321]
[-22.55282974 -138.66374207]
[-16.93762398 -123.87252808]
[-21.75488663 -138.07794189]
[-22.45468330 -153.06161499]
[-18.98240280 -167.65419006]
[-11.60902119 -180.71685791]
[-0.90996736 -191.23019409]
[12.27979755 -198.37373352]
[26.93093300 -201.58998108]
[41.90005112 -200.62792969]
[56.01894760 -195.56268311]
[68.18577576 -186.78953552]
[77.45101929 -174.99311829]
[83.09162140 -161.09407043]
[84.66737366 -146.17706299]
[82.05531311 -131.40625000]
[75.45927429 -117.93434143]
[65.39402771 -106.81270599]
[52.64507294 -98.90927887]
[38.20734787 -94.84085083]
[23.20758247 -94.92493439]
[8.81637478 -99.15496826]
[-3.84523606 -107.20258331]
[2.78326249 -93.74661255]
[9.41176128 -80.29064941]
[21.97679710 -72.29257965]
[21.13423538 -56.49382401]
[27.76273537 -43.03785706]
[34.39123535 -29.58189201]
[52.43827438 -29.26213455]
[67.92849731 -19.83316994]
[76.58172607 -3.80061221]
[75.95670319 14.49183464]
[66.13918304 30.03911400]
[73.59409332 43.05542374]
[81.04900360 56.07173157]
[88.50391388 69.08804321]
[95.95882416 82.10435486]
[95.96465302 67.10435486]
[106.02748108 55.98052597]
[120.95185089 54.47613144]
[133.03227234 63.36788559]
[136.03160095 78.06496429]
[128.40127563 90.97922516]
[114.07880402 95.44287872]
[128.72230530 98.69370270]
[143.36581421 101.94452667]
[158.00930786 105.19535065]
[172.65281677 108.44618225]
[184.18774414 98.06711578]
[199.62382507 96.48382568]
[213.02558899 104.30512238]
[219.23976135 118.52355194]
[215.87686157 133.67182922]
[204.23002625 143.92515564]
[188.77766418 145.34089661]
[175.46154785 137.37467957]
[169.40199280 123.08968353]
[154.75848389 119.83885193]
[140.11497498 116.58802795]
[125.47148132 113.33720398]
[110.82798004 110.08638000]
[104.92965698 114.71884918]
[93.13301849 123.98380280]
[87.23470306 128.61627197]
[86.92264557 143.61302185]
[86.61058807 158.60978699]
[86.29853058 173.60653687]
[85.98647308 188.60328674]
[85.67441559 203.60003662]
[85.36236572 218.59680176]
[85.05030823 233.59355164]
[84.73825073 248.59030151]
[84.42619324 263.58706665]
[84.11413574 278.58380127]
[98.60707092 282.78109741]
[111.51933289 290.58724976]
[121.97054291 301.47000122]
[129.24812317 314.68740845]
[132.85586548 329.33822632]
[132.54779053 344.42355347]
[128.34490967 358.91488647]
[120.53377533 371.82412720]
[109.64697266 382.27111816]
[96.42677307 389.54360962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 103]
[24 102]
[25 101]
[26 100]
[27 99]
[35 94]
[36 93]
[37 92]
[39 90]
[40 89]
[41 88]
[42 67]
[44 65]
[45 64]
[46 63]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
