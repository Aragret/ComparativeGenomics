%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAUAAACAGGGGGGGGGGAAUAGGUUUGGUCCUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACACAUGxxxxxxxxxxACUAUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCACCCCCCCCCCACCCCUUAAACA\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 389.29861450]
[70.87159729 384.14361572]
[58.28185654 375.86141968]
[47.94191742 364.89862061]
[40.40940475 351.84649658]
[36.09054184 337.40890503]
[35.21823120 322.36444092]
[37.83952332 307.52444458]
[43.81304932 293.68920898]
[52.81666565 281.60485840]
[64.36482239 271.92309570]
[77.83473969 265.16601562]
[92.50000000 261.69802856]
[92.50000000 246.69804382]
[92.50000000 231.69804382]
[92.50000000 216.69804382]
[92.50000000 201.69804382]
[92.50000000 186.69804382]
[92.50000000 171.69804382]
[92.50000000 156.69804382]
[92.50000000 141.69804382]
[92.50000000 126.69804382]
[80.58824158 119.80451965]
[73.45752716 108.03321838]
[72.86412811 94.28336334]
[78.95420074 81.94149017]
[70.63645172 69.45890045]
[62.31870270 56.97631073]
[54.00095749 44.49371719]
[45.68320847 32.01112747]
[37.36546326 19.52853775]
[29.04771423 7.04594612]
[20.72996712 -5.43664503]
[12.41221905 -17.91923523]
[-0.89619577 -10.96810627]
[-14.86808491 -5.47097874]
[-29.34513664 -1.49013937]
[-44.16331482 0.92930597]
[-59.15471649 1.75994301]
[-74.14947510 0.99235988]
[-88.97769928 -1.36474597]
[-103.47136688 -5.28466702]
[-117.46624756 -10.72298717]
[-130.80377197 -17.61808586]
[-143.33282471 -25.89183617]
[-154.91143799 -35.45049286]
[-165.40841675 -46.18574524]
[-174.70481873 -57.97595596]
[-182.69529724 -70.68753052]
[-189.28933716 -84.17644501]
[-194.41221619 -98.28985596]
[-198.00587463 -112.86783600]
[-200.02960205 -127.74522400]
[-200.46047974 -142.75343323]
[-199.29360962 -157.72242737]
[-196.54222107 -172.48257446]
[-192.23748779 -186.86663818]
[-186.42819214 -200.71163940]
[-179.18013000 -213.86070251]
[-170.57546997 -226.16484070]
[-160.71166992 -237.48463440]
[-149.70053101 -247.69181824]
[-137.66679382 -256.67074585]
[-124.74680328 -264.31967163]
[-111.08697510 -270.55194092]
[-96.84207153 -275.29693604]
[-82.17350006 -278.50085449]
[-67.24747467 -280.12744141]
[-52.23311234 -280.15826416]
[-37.30053329 -278.59292603]
[-22.61894226 -275.44921875]
[-8.35468960 -270.76272583]
[5.33059883 -264.58654785]
[18.28185844 -256.99069214]
[30.35234070 -248.06123352]
[41.40528107 -237.89930725]
[51.31543732 -226.62008667]
[59.97052002 -214.35136414]
[67.27246094 -201.23214722]
[73.13852692 -187.41110229]
[77.50225067 -173.04481506]
[80.31417847 -158.29608154]
[81.54245758 -143.33201599]
[81.17317200 -128.32215881]
[79.21050262 -113.43659210]
[75.67668915 -98.84398651]
[70.61177063 -84.70967865]
[64.07313538 -71.19381714]
[56.13487625 -58.44956207]
[46.88693619 -46.62130356]
[36.43410110 -35.84306717]
[24.89480972 -26.23698425]
[33.21255875 -13.75439262]
[41.53030396 -1.27180159]
[49.84805298 11.21078968]
[58.16579819 23.69338036]
[66.48355103 36.17597198]
[74.80129242 48.65856171]
[83.11904144 61.14115143]
[91.43679047 73.62374115]
[112.71487427 75.35517120]
[126.45771790 91.69190216]
[141.45079041 91.23593903]
[156.44386292 90.77996826]
[171.43692017 90.32399750]
[186.42999268 89.86803436]
[190.64776611 75.33993530]
[199.15020752 62.82739639]
[211.10433960 53.55626297]
[225.33901978 48.43482590]
[240.45967102 47.96483994]
[254.98493958 52.19233704]
[267.49179077 60.70316315]
[276.75491333 72.66350555]
[281.86679077 86.90161133]
[282.32666016 102.02258301]
[278.08941650 116.54501343]
[269.57022095 129.04614258]
[257.60366821 138.30125427]
[243.36213684 143.40361023]
[228.24087524 143.85333252]
[213.72128296 139.60636902]
[201.22586060 131.07879639]
[191.97877502 119.10604858]
[186.88595581 104.86109924]
[171.89289856 105.31707001]
[156.89982605 105.77303314]
[141.90675354 106.22900391]
[126.91368866 106.68497467]
[124.24533081 113.46103668]
[119.90493011 119.30878448]
[114.19182587 123.82493591]
[107.50000000 126.69804382]
[107.50000000 141.69804382]
[107.50000000 156.69804382]
[107.50000000 171.69804382]
[107.50000000 186.69804382]
[107.50000000 201.69804382]
[107.50000000 216.69804382]
[107.50000000 231.69804382]
[107.50000000 246.69804382]
[107.50000000 261.69802856]
[122.16526031 265.16601562]
[135.63517761 271.92309570]
[147.18333435 281.60485840]
[156.18695068 293.68920898]
[162.16047668 307.52444458]
[164.78176880 322.36444092]
[163.90945435 337.40890503]
[159.59059143 351.84649658]
[152.05809021 364.89862061]
[141.71813965 375.86141968]
[129.12840271 384.14361572]
[114.96779633 389.29861450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[26 100]
[27 99]
[28 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
