%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAAAGCCCUGGGGGGGGGGCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGGACUGCAAAACCCxxxxxxxxxxGGCAUCAACCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACGCCUUCCCCCCCCCCCUUCAAAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 378.67681885]
[70.87159729 373.52182007]
[58.28185654 365.23959351]
[47.94191742 354.27682495]
[40.40940475 341.22470093]
[36.09054184 326.78710938]
[35.21823120 311.74264526]
[37.83952332 296.90264893]
[43.81304932 283.06741333]
[52.81666565 270.98306274]
[64.36482239 261.30130005]
[77.83473969 254.54420471]
[92.50000000 251.07623291]
[92.50000000 236.07623291]
[92.50000000 221.07623291]
[92.50000000 206.07623291]
[92.50000000 191.07623291]
[92.50000000 176.07623291]
[92.50000000 161.07623291]
[92.50000000 146.07623291]
[92.50000000 131.07623291]
[92.50000000 116.07624054]
[81.21823120 106.19081116]
[66.34821320 108.16126251]
[51.47819901 110.13171387]
[36.70025635 112.70316315]
[22.03866005 115.87138367]
[7.37706423 119.03960419]
[-7.28453112 122.20783234]
[-21.94612694 125.37605286]
[-30.29719925 138.79376221]
[-45.70878220 142.29499817]
[-59.03745651 133.80253601]
[-62.37555695 118.35479736]
[-53.74264526 105.11665344]
[-38.26047516 101.94206238]
[-25.11434746 110.71445465]
[-10.45275211 107.54623413]
[4.20884323 104.37801361]
[18.87043762 101.20979309]
[33.53203201 98.04157257]
[35.16711426 95.69600677]
[37.85709381 93.87688446]
[41.39871979 92.99970245]
[45.43857956 93.39582825]
[49.50774765 95.26170349]
[64.37776184 93.29125214]
[79.24777985 91.32080078]
[85.68299103 87.77323151]
[92.03319550 87.10127258]
[97.23882294 88.84255981]
[102.30558014 74.72420502]
[107.37234497 60.60585022]
[112.43910980 46.48749542]
[101.00300598 31.21823692]
[101.00926208 12.29014778]
[112.27669525 -2.73315930]
[130.15986633 -7.95555067]
[134.35932922 -22.35570717]
[138.55879211 -36.75586319]
[142.75825500 -51.15602112]
[139.19392395 -66.57049561]
[150.18498230 -76.62264252]
[154.38444519 -91.02280426]
[158.58390808 -105.42295837]
[144.98847961 -111.83471680]
[132.56350708 -120.29443359]
[121.61499786 -130.59378052]
[112.41254425 -142.47912598]
[105.18277740 -155.65777588]
[100.10373688 -169.80520630]
[97.30049133 -184.57301331]
[96.84207916 -199.59754944]
[98.73978424 -214.50878906]
[102.94688416 -228.93954468]
[109.35976410 -242.53445435]
[117.82050323 -254.95872498]
[128.12074280 -265.90637207]
[140.00685120 -275.10784912]
[153.18611145 -282.33654785]
[167.33395386 -287.41439819]
[182.10200500 -290.21643066]
[197.12655640 -290.67361450]
[212.03764343 -288.77465820]
[226.46806335 -284.56637573]
[240.06243896 -278.15237427]
[252.48600769 -269.69061279]
[263.43283081 -259.38946533]
[272.63330078 -247.50260925]
[279.86090088 -234.32275391]
[284.93762207 -220.17448425]
[287.73843384 -205.40621948]
[288.19436646 -190.38160706]
[286.29418945 -175.47068787]
[282.08471680 -161.04061890]
[275.66958618 -147.44677734]
[267.20678711 -135.02389526]
[256.90475464 -124.07793427]
[245.01712036 -114.87842560]
[231.83666992 -107.65192413]
[217.68798828 -102.57637787]
[202.91947937 -99.77679443]
[187.89483643 -99.32209778]
[172.98406982 -101.22349548]
[168.78460693 -86.82334137]
[164.58514404 -72.42317963]
[168.44985962 -58.03870392]
[157.15841675 -46.95655823]
[152.95895386 -32.55640030]
[148.75949097 -18.15624619]
[144.56002808 -3.75608850]
[153.00039673 3.68833876]
[158.05114746 13.80325794]
[158.93859863 25.12587357]
[155.49435425 36.00241470]
[148.18548584 44.82969284]
[138.05171204 50.29138565]
[126.55746460 51.55426025]
[121.49069977 65.67261505]
[116.42393494 79.79096985]
[111.35717010 93.90932465]
[121.66303253 83.01027679]
[135.76103210 77.88714600]
[150.65979004 79.62699890]
[163.19801331 87.86064911]
[170.71527100 100.84104919]
[171.61653137 115.81394958]
[165.71055603 129.60232544]
[154.25050354 139.28050232]
[139.66801453 142.79490662]
[125.05727386 139.39984131]
[113.51847839 129.81567383]
[107.50000000 116.07624054]
[107.50000000 131.07623291]
[107.50000000 146.07623291]
[107.50000000 161.07623291]
[107.50000000 176.07623291]
[107.50000000 191.07623291]
[107.50000000 206.07623291]
[107.50000000 221.07623291]
[107.50000000 236.07623291]
[107.50000000 251.07623291]
[122.16526031 254.54420471]
[135.63517761 261.30130005]
[147.18333435 270.98306274]
[156.18695068 283.06741333]
[162.16047668 296.90264893]
[164.78176880 311.74264526]
[163.90945435 326.78710938]
[159.59059143 341.22470093]
[152.05809021 354.27682495]
[141.71813965 365.23959351]
[129.12840271 373.52182007]
[114.96779633 378.67681885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 48]
[24 47]
[25 46]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[51 121]
[52 120]
[53 119]
[54 118]
[58 111]
[59 110]
[60 109]
[61 108]
[63 106]
[64 105]
[65 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
