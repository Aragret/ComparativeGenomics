%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCUACCCCGGGGGGGGGGCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGxxxxxxxxxxCAGCACCAAUCCUACCUCCAUCGCUAACCCCACUAAAACACUCACCAAGACCCCCCCCCCCCUCAACCCC\
) } def
/len { sequence length } bind def

/coor [
[88.66687775 462.61621094]
[74.82093811 456.60018921]
[63.11228180 447.07077026]
[54.40975571 434.73510742]
[49.35915375 420.50857544]
[48.33526230 405.44689941]
[51.41406250 390.66772461]
[58.36708450 377.26779175]
[68.67836761 366.24148560]
[81.58274841 358.40695190]
[96.12263489 354.34564209]
[96.12263489 339.34564209]
[96.12263489 324.34564209]
[96.12263489 309.34564209]
[96.12263489 294.34564209]
[96.12263489 279.34564209]
[96.12263489 264.34564209]
[96.12263489 249.34565735]
[96.12263489 234.34565735]
[96.12263489 219.34565735]
[95.96659851 204.34646606]
[95.65454102 189.34971619]
[81.90013123 180.44345093]
[76.08445740 164.94688416]
[80.67424774 148.87158203]
[94.05811310 138.57962036]
[93.43413544 123.59259796]
[92.81015778 108.60558319]
[80.66539001 117.40925598]
[66.15477753 113.60897064]
[59.88440704 99.98243713]
[66.43740845 86.48954010]
[81.02407074 82.99250793]
[92.98242188 92.04679108]
[93.91804504 77.07599640]
[94.85367584 62.10520554]
[83.04889679 49.23723602]
[84.14884949 32.14706039]
[96.99058533 21.33281898]
[97.61456299 6.34580278]
[84.22373199 -0.89622825]
[75.34134674 -13.18403625]
[72.68576813 -28.04903221]
[76.73098755 -42.53340912]
[86.62306976 -53.77868271]
[100.35975647 -59.58978271]
[100.98373413 -74.57679749]
[101.60771179 -89.56381989]
[102.23168945 -104.55083466]
[102.85566711 -119.53784943]
[88.02528381 -121.89924622]
[73.56932831 -125.96641541]
[59.68330383 -131.68435669]
[46.55500031 -138.97572327]
[34.36196136 -147.74194336]
[23.26909256 -157.86442566]
[13.42640400 -169.20629883]
[4.96701002 -181.61416626]
[-1.99468637 -194.92022705]
[-7.36453581 -208.94453430]
[-11.06991768 -223.49742126]
[-13.06072044 -238.38209534]
[-13.31002045 -253.39723206]
[-11.81444740 -268.33978271]
[-8.59422588 -283.00765991]
[-3.69290709 -297.20251465]
[2.82322550 -310.73233032]
[10.86604786 -323.41418457]
[20.32678986 -335.07656860]
[31.07750702 -345.56173706]
[42.97280502 -354.72787476]
[55.85181808 -362.45108032]
[69.54036713 -368.62683105]
[83.85334015 -373.17166138]
[98.59716034 -376.02407837]
[113.57243347 -377.14553833]
[128.57664490 -376.52084351]
[143.40687561 -374.15844727]
[157.86254883 -370.09033203]
[171.74819946 -364.37145996]
[184.87600708 -357.07919312]
[197.06846619 -348.31219482]
[208.16065979 -338.18896484]
[218.00259399 -326.84643555]
[226.46115112 -314.43798828]
[233.42196655 -301.13146973]
[238.79087830 -287.10681152]
[242.49528503 -272.55364990]
[244.48509216 -257.66885376]
[244.73339844 -242.65371704]
[243.23683167 -227.71125793]
[240.01562500 -213.04359436]
[235.11335754 -198.84907532]
[228.59632874 -185.31967163]
[220.55265808 -172.63835144]
[211.09114075 -160.97662354]
[200.33972168 -150.49217224]
[188.44380188 -141.32681274]
[175.56428528 -133.60449219]
[161.87532043 -127.42963409]
[147.56204224 -122.88576508]
[132.81803894 -120.03432465]
[117.84268188 -118.91387177]
[117.21870422 -103.92685699]
[116.59472656 -88.93984222]
[115.97075653 -73.95281982]
[115.34677887 -58.96580505]
[128.55287170 -52.03295517]
[137.47595215 -40.00432205]
[140.30316162 -25.23381424]
[136.42112732 -10.64100838]
[126.54805756 0.86592531]
[112.60157776 6.96977997]
[111.97760010 21.95679665]
[121.96615601 30.15591621]
[125.44094849 42.80503082]
[120.91017914 55.32302094]
[109.82447052 63.04083633]
[108.88883972 78.01162720]
[107.95320892 92.98241425]
[107.79717255 107.98160553]
[108.42115021 122.96862030]
[109.04512787 137.95564270]
[121.08839417 144.73493958]
[128.13883972 156.49522400]
[128.43847656 170.09524536]
[122.01603699 181.96385193]
[110.65129852 189.03765869]
[110.96335602 204.03440857]
[114.28821564 212.61328125]
[111.12263489 219.34565735]
[111.12263489 234.34565735]
[111.12263489 249.34565735]
[111.12263489 264.34564209]
[111.12263489 279.34564209]
[111.12263489 294.34564209]
[111.12263489 309.34564209]
[111.12263489 324.34564209]
[111.12263489 339.34564209]
[111.12263489 354.34564209]
[125.66252136 358.40695190]
[138.56690979 366.24148560]
[148.87818909 377.26779175]
[155.83120728 390.66772461]
[158.91000366 405.44689941]
[157.88612366 420.50857544]
[152.83551025 434.73510742]
[144.13299561 447.07077026]
[132.42433167 456.60018921]
[118.57839203 462.61621094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 129]
[22 128]
[26 123]
[27 122]
[28 121]
[34 120]
[35 119]
[36 118]
[39 114]
[40 113]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
