%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCACUCUGGGGGGGGGGCUCAAUCUUAUCCAUCAUAGCAGGCAGUUGAGGUGGAUUAAACCAAACCCxxxxxxxxxxUAAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCCCCCCCCCCCUCCUCAUUCU\
) } def
/len { sequence length } bind def

/coor [
[34.97024155 536.83996582]
[21.48136139 530.10845947]
[9.99586105 520.34387207]
[1.18149149 508.11398315]
[-4.44929028 494.12976074]
[-6.56911898 479.20431519]
[-5.05474997 464.20529175]
[0.00577335 450.00479126]
[8.31823826 437.42837524]
[19.39937019 427.20721436]
[32.60492325 419.93557739]
[47.16714859 416.03619385]
[46.85917282 401.03936768]
[46.55119324 386.04254150]
[46.24321747 371.04568481]
[45.93523788 356.04885864]
[45.62726212 341.05200195]
[45.31928253 326.05517578]
[45.01130676 311.05834961]
[44.70332718 296.06149292]
[44.39535141 281.06466675]
[43.93342590 266.07177734]
[43.31760025 251.08442688]
[35.92538834 264.13644409]
[24.75577736 274.14843750]
[10.97589397 280.07418823]
[-3.97438002 281.29458618]
[-18.53286743 277.68203735]
[-31.17832756 269.61404419]
[-40.58941650 257.93365479]
[-45.78276062 243.86138916]
[-46.21569061 228.86763000]
[-41.84297562 214.51913452]
[-33.12152481 202.31518555]
[-20.96265411 193.53100586]
[-6.63686752 189.08445740]
[8.35891438 189.44017029]
[22.45775795 194.56095886]
[34.18645477 203.91177368]
[42.31945038 216.51551819]
[46.00687790 231.05471802]
[50.55416870 216.76057434]
[49.57885361 209.38758850]
[55.34434891 202.22135925]
[60.18416214 188.02360535]
[65.02397919 173.82585144]
[69.71778107 159.57916260]
[74.26506805 145.28503418]
[72.87429047 140.65740967]
[74.41989899 135.10772705]
[79.30362701 130.50427246]
[84.43392944 116.40888214]
[89.56423187 102.31349182]
[91.71281433 87.46817017]
[90.78939819 72.49662018]
[89.86598206 57.52507019]
[88.94257355 42.55352020]
[76.01714325 34.17261887]
[70.56874847 19.95402527]
[74.49110413 5.42546463]
[86.07765961 -3.89600134]
[85.15425110 -18.86755180]
[84.23083496 -33.83909988]
[69.41820526 -36.67403412]
[55.77631378 -43.10440063]
[44.16270065 -52.72597885]
[35.30740356 -64.93395233]
[29.76707840 -78.96090698]
[27.88999176 -93.92510986]
[29.79413986 -108.88589478]
[35.35982895 -122.90280914]
[44.23719025 -135.09474182]
[55.86819077 -144.69529724]
[69.52169037 -151.10098267]
[84.33942413 -153.90911865]
[99.38993073 -152.94319153]
[113.72712708 -148.26391602]
[126.44976807 -140.16543579]
[136.75808716 -129.15684509]
[144.00410461 -115.93012238]
[147.73233032 -101.31673431]
[147.70838928 -86.23528290]
[143.93380737 -71.63379669]
[136.64584351 -58.43014526]
[126.30263519 -47.45431519]
[113.55435944 -39.39625931]
[99.20238495 -34.76251602]
[100.12580109 -19.79096413]
[101.04920959 -4.81941509]
[113.69344330 3.00754690]
[119.37146759 16.94397736]
[115.71166229 31.72434425]
[103.91412354 41.63010788]
[104.83753204 56.60165405]
[105.76094818 71.57320404]
[106.68436432 86.54475403]
[112.76102448 90.94067383]
[117.36700439 76.66535187]
[132.36697388 76.63459778]
[137.03143311 90.89092255]
[124.91436005 99.73252106]
[130.99102783 104.12844086]
[145.49964905 100.32057953]
[160.00828552 96.51272583]
[174.51690674 92.70486450]
[182.27178955 78.93398285]
[197.51509094 74.76055145]
[211.20321655 82.66059875]
[215.21524048 97.94716644]
[207.17091370 111.55100250]
[191.84278870 115.40119171]
[178.32476807 107.21349335]
[163.81613159 111.02134705]
[149.30751038 114.82920837]
[134.79888916 118.63706970]
[116.59320068 117.18025970]
[103.65962219 107.44379425]
[98.52931976 121.53918457]
[93.39901733 135.63456726]
[88.55920410 149.83232117]
[84.01190948 164.12644958]
[84.38862610 173.31632996]
[79.22173309 178.66567993]
[74.38191986 192.86343384]
[69.54209900 207.06117249]
[64.84829712 221.30787659]
[60.30101013 235.60200500]
[58.30495071 250.46859741]
[58.92077637 265.45596313]
[62.41789627 273.96276855]
[59.39218903 280.75668335]
[59.70016479 295.75350952]
[60.00814438 310.75036621]
[60.31612015 325.74719238]
[60.62409973 340.74404907]
[60.93207550 355.74087524]
[61.24005508 370.73770142]
[61.54803085 385.73455811]
[61.85601044 400.73138428]
[62.16398621 415.72824097]
[76.87402344 419.02645874]
[90.36698151 425.74981689]
[101.85839844 435.50741577]
[110.68018341 447.73196411]
[116.31944275 461.71273804]
[118.44831848 476.63693237]
[116.94303894 491.63684082]
[111.89112854 505.84042358]
[103.58628845 518.42187500]
[92.51136017 528.64971924]
[79.31021118 535.92938232]
[64.75035858 539.83758545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 129]
[23 128]
[41 127]
[42 126]
[44 125]
[45 124]
[46 123]
[47 121]
[48 120]
[51 119]
[52 118]
[53 117]
[54 96]
[55 95]
[56 94]
[57 93]
[61 89]
[62 88]
[63 87]
[102 115]
[103 114]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
