%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUAUCUCCCGGGGGGGGGGCUUUUAUACUAAUAAUCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGxxxxxxxxxxUAACAACAUAAAACCCUCAUUCACACGAGAAAACACCCUCAUGUUCAUACCCCCCCCCCCACCUAUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.63155365 382.95883179]
[70.14267731 376.22729492]
[58.65717316 366.46273804]
[49.84280396 354.23284912]
[44.21202469 340.24862671]
[42.09219360 325.32318115]
[43.60656357 310.32415771]
[48.66708755 296.12365723]
[56.97955322 283.54724121]
[68.06068420 273.32608032]
[81.26623535 266.05444336]
[95.82846069 262.15505981]
[95.52048492 247.15823364]
[95.21250916 232.16139221]
[94.90453339 217.16455078]
[94.59654999 202.16772461]
[94.28857422 187.17088318]
[93.98059845 172.17404175]
[93.67262268 157.17720032]
[93.36463928 142.18037415]
[93.05666351 127.18353271]
[73.94374084 110.40314484]
[76.24391174 85.07343292]
[66.13847351 73.98830414]
[56.03303909 62.90316772]
[45.92760468 51.81803131]
[35.82217026 40.73289871]
[25.71673775 29.64776611]
[1.33284187 30.81072235]
[-14.68091583 8.59043789]
[-29.58536339 6.90004063]
[-44.48981094 5.20964336]
[-59.39425659 3.51924586]
[-69.89231110 14.79297924]
[-84.84099579 17.68956757]
[-98.46772766 11.30394077]
[-105.63558960 -1.72524488]
[-120.54003906 -3.41564226]
[-135.44448853 -5.10604000]
[-151.86410522 -0.88317841]
[-160.46733093 -15.49210453]
[-148.81094360 -27.80327225]
[-133.75408936 -20.01048660]
[-118.84963989 -18.32008934]
[-103.94519806 -16.62969208]
[-94.04149628 -27.72269440]
[-79.33081055 -30.89441681]
[-65.41050720 -24.72363281]
[-57.70386124 -11.38520145]
[-42.79941177 -9.69480419]
[-27.89496613 -8.00440693]
[-12.99051857 -6.31400919]
[-3.46718073 -17.90305710]
[-8.01447105 -32.19718933]
[-12.56176090 -46.49131775]
[-17.10905075 -60.78544617]
[-32.13552094 -59.64441299]
[-47.01999283 -62.00007248]
[-60.95977402 -67.72538757]
[-73.20310211 -76.51160431]
[-83.08971405 -87.88489532]
[-90.08644104 -101.23189545]
[-93.81594849 -115.83283997]
[-94.07711792 -130.90029907]
[-90.85585785 -145.62171936]
[-84.32588959 -159.20318604]
[-74.83936310 -170.91227722]
[-62.90788651 -180.11752319]
[-49.17489624 -186.32249451]
[-34.38100052 -189.19256592]
[-19.32401466 -188.57298279]
[-4.81594324 -184.49713135]
[8.36081219 -177.18481445]
[19.49564552 -167.03039551]
[27.98806953 -154.58148193]
[33.38009644 -140.50942993]
[35.38094330 -125.57312012]
[33.88270950 -110.57805634]
[28.96618652 -96.33290100]
[20.89651871 -83.60587311]
[10.10889626 -73.08332825]
[-2.81492114 -65.33274078]
[1.73236895 -51.03860855]
[6.27965927 -36.74447632]
[10.82694912 -22.45034790]
[27.02470970 -19.00173759]
[38.20074463 -8.00002003]
[41.50201797 6.43192577]
[36.80187225 19.54233170]
[46.90730667 30.62746429]
[57.01274109 41.71259689]
[67.11817169 52.79773331]
[77.22360992 63.88286591]
[87.32904053 74.96800232]
[96.72988892 67.96470642]
[109.52444458 64.92282867]
[123.92139435 67.32845306]
[137.34884644 60.64237976]
[150.77629089 53.95630264]
[153.21229553 38.63163376]
[164.21444702 27.68941116]
[179.55220032 25.33714294]
[193.32786560 32.47932434]
[200.24441528 46.36964035]
[197.64230347 61.66698074]
[186.52209473 72.48921204]
[171.15974426 74.67495728]
[157.46237183 67.38375092]
[144.03491211 74.06983185]
[130.60746765 80.75590515]
[131.60549927 88.18920135]
[133.60154724 103.05580139]
[134.59957886 110.48910522]
[149.31510925 113.39657593]
[164.03062439 116.30404663]
[178.74615479 119.21151733]
[191.73449707 110.20716095]
[207.27056885 113.10643768]
[216.13710022 126.18925476]
[213.07374573 141.69381714]
[199.89790344 150.42152405]
[184.42660522 147.19441223]
[175.83868408 133.92704773]
[161.12315369 131.01956177]
[146.40763855 128.11209106]
[131.69210815 125.20462036]
[126.65737915 127.08872223]
[121.65917969 128.14994812]
[116.81941223 128.42790222]
[112.25057220 127.97914886]
[108.05350494 126.87554932]
[108.36148071 141.87239075]
[108.66945648 156.86923218]
[108.97743225 171.86605835]
[109.28541565 186.86289978]
[109.59339142 201.85974121]
[109.90136719 216.85658264]
[110.20934296 231.85342407]
[110.51732635 246.85025024]
[110.82530212 261.84710693]
[125.53533936 265.14532471]
[139.02828979 271.86868286]
[150.51971436 281.62628174]
[159.34149170 293.85083008]
[164.98075867 307.83160400]
[167.10963440 322.75579834]
[165.60435486 337.75570679]
[160.55244446 351.95928955]
[152.24760437 364.54074097]
[141.17266846 374.76861572]
[127.97152710 382.04824829]
[113.41166687 385.95645142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[30 52]
[31 51]
[32 50]
[33 49]
[37 45]
[38 44]
[39 43]
[53 85]
[54 84]
[55 83]
[56 82]
[97 110]
[98 109]
[99 108]
[113 126]
[114 125]
[115 124]
[116 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
