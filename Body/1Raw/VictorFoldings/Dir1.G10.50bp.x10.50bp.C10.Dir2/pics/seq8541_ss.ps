%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUACCAGGGGGGGGGGCAAGGCACACCUACACCCCUUAUCCCCAUACUAGUUAUUAUCGAAACCAUxxxxxxxxxxUACUCGGAUUCUACCCUAGCAUCACACACCGCACAAUCCCCUAUCUAGGCCCCCCCCCCCCUUCUUACGA\
) } def
/len { sequence length } bind def

/coor [
[92.63795471 380.40847778]
[79.41775513 373.13601685]
[68.53095245 362.68899536]
[60.71982193 349.77975464]
[56.51694107 335.28845215]
[56.20886612 320.20309448]
[59.81660843 305.55227661]
[67.09418488 292.33489990]
[77.54538727 281.45211792]
[90.45764923 273.64596558]
[104.95058441 269.44869995]
[104.63853455 254.45193481]
[104.32647705 239.45518494]
[104.01441956 224.45841980]
[103.70236206 209.46166992]
[103.39030457 194.46492004]
[103.07824707 179.46817017]
[102.76619720 164.47140503]
[102.45413971 149.47465515]
[102.14208221 134.47790527]
[101.83002472 119.48114777]
[89.84319305 110.46362305]
[75.34759521 114.32077789]
[60.85199738 118.17794037]
[46.35640335 122.03510284]
[43.54343414 137.03675842]
[34.49314499 149.32720947]
[21.00247383 156.46615601]
[5.75000286 157.03616333]
[-8.23587704 150.92404175]
[-18.17825890 139.34338379]
[-22.10307884 124.59351349]
[-19.23105621 109.60304260]
[-10.13243771 97.34833527]
[3.38624263 90.26257324]
[18.64083862 89.75263214]
[32.60254288 95.91977692]
[42.49924469 107.53950500]
[56.99483871 103.68234253]
[71.49043274 99.82518005]
[85.98603058 95.96802521]
[71.01688385 95.00645447]
[58.71643829 86.42163849]
[52.65104675 72.70263672]
[54.57928467 57.82708740]
[63.94209290 46.10796356]
[78.02484131 40.94306564]
[92.74443054 43.82989120]
[103.83310699 53.93143845]
[108.07585144 68.31890106]
[104.24378967 82.81871033]
[112.49607849 70.29275513]
[120.74836731 57.76678848]
[129.00065613 45.24082565]
[117.23377991 35.92256546]
[106.32382965 25.61420441]
[96.35383606 14.39419556]
[87.39968109 2.34793305]
[79.52950287 -10.43290138]
[72.80321503 -23.85103798]
[67.27199554 -37.80435181]
[62.97795105 -52.18665314]
[59.95375443 -66.88847351]
[58.22242737 -81.79792786]
[57.79714584 -96.80154419]
[58.68114471 -111.78513336]
[60.86769867 -126.63465881]
[64.34016418 -141.23710632]
[69.07211304 -155.48132324]
[75.02752686 -169.25892639]
[82.16109467 -182.46505737]
[90.41851044 -194.99917603]
[99.73693848 -206.76593018]
[110.04545593 -217.67573547]
[121.26560211 -227.64556885]
[133.31199646 -236.59956360]
[146.09294128 -244.46955872]
[159.51116943 -251.19566345]
[173.46455383 -256.72668457]
[187.84692383 -261.02050781]
[202.54878235 -264.04452515]
[217.45826721 -265.77563477]
[232.46188354 -266.20071411]
[247.44546509 -265.31649780]
[262.29495239 -263.12973022]
[276.89733887 -259.65707397]
[291.14151001 -254.92491150]
[304.91903687 -248.96929932]
[318.12506104 -241.83555603]
[330.65905762 -233.57795715]
[342.42568970 -224.25936890]
[353.33532715 -213.95069885]
[363.30502319 -202.73040771]
[372.25885010 -190.68389893]
[380.12866211 -177.90284729]
[386.85458374 -164.48451233]
[392.38540649 -150.53105164]
[396.67904663 -136.14862061]
[399.70281982 -121.44671631]
[401.43371582 -106.53721619]
[401.85858154 -91.53358459]
[400.97418213 -76.55002594]
[398.78720093 -61.70056152]
[395.31433105 -47.09821320]
[390.58197021 -32.85411835]
[384.62615967 -19.07668304]
[377.49224854 -5.87076235]
[369.23446655 6.66313553]
[359.91571045 18.42961884]
[349.60690308 29.33913612]
[338.38647461 39.30865860]
[326.33981323 48.26231003]
[313.55865479 56.13194275]
[300.14022827 62.85766983]
[286.18670654 68.38829803]
[271.80419922 72.68173981]
[257.10226440 75.70531464]
[242.19273376 77.43601990]
[227.18910217 77.86067200]
[212.20555115 76.97603607]
[197.35610962 74.78886414]
[182.75381470 71.31578064]
[168.50979614 66.58323669]
[154.73243713 60.62723541]
[141.52661133 53.49311829]
[133.27432251 66.01908112]
[125.02204132 78.54504395]
[116.76975250 91.07099915]
[116.82678223 119.16909790]
[117.13883209 134.16584778]
[117.45088959 149.16259766]
[117.76294708 164.15936279]
[118.07500458 179.15611267]
[118.38706207 194.15286255]
[118.69911957 209.14961243]
[119.01116943 224.14637756]
[119.32322693 239.14312744]
[119.63528442 254.13987732]
[119.94734192 269.13662720]
[134.60234070 272.72738647]
[147.82814026 279.98965454]
[158.72300720 290.42825317]
[166.54411316 303.33145142]
[170.75817871 317.81951904]
[171.07789612 332.90463257]
[167.48147583 347.55822754]
[160.21411133 360.78125000]
[149.77130127 371.67205811]
[136.86508179 379.48818970]
[122.37538910 383.69665527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 41]
[23 40]
[24 39]
[25 38]
[51 128]
[52 127]
[53 126]
[54 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
