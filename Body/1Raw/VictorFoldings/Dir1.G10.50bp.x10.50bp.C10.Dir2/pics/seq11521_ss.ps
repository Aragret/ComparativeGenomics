%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAACAACCCGGGGGGGGGGCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACUACAxxxxxxxxxxAAACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCCCCCCCCCCCAAUCAACCC\
) } def
/len { sequence length } bind def

/coor [
[94.04028320 416.59841919]
[80.19434357 410.58239746]
[68.48568726 401.05297852]
[59.78316116 388.71731567]
[54.73255920 374.49078369]
[53.70866776 359.42910767]
[56.78746796 344.64993286]
[63.74048996 331.25003052]
[74.05177307 320.22369385]
[86.95615387 312.38919067]
[101.49604034 308.32785034]
[101.49604034 293.32785034]
[101.49604034 278.32785034]
[101.49604034 263.32785034]
[101.49604034 248.32786560]
[101.49604034 233.32786560]
[101.49604034 218.32786560]
[101.49604034 203.32786560]
[101.49604034 188.32786560]
[101.49604034 173.32786560]
[101.49604034 158.32786560]
[100.87206268 143.34085083]
[99.62519073 128.39276123]
[77.05548096 108.78423309]
[85.94576263 84.74537659]
[80.45873260 70.78498840]
[74.97170258 56.82459641]
[60.61646652 61.20195770]
[45.96203613 64.43951416]
[31.09876442 66.51731110]
[16.11828804 67.42253876]
[1.11296904 67.14961243]
[-13.82467937 65.70021057]
[-28.60256004 63.08327866]
[-43.12956238 59.31494904]
[-57.31612015 54.41844940]
[-71.07476807 48.42397690]
[-84.32067108 41.36848450]
[-96.97217560 33.29547119]
[-108.95127869 24.25471306]
[-120.18411255 14.30195141]
[-130.60142517 3.49854612]
[-140.13900757 -8.08889389]
[-148.73803711 -20.38892746]
[-156.34548950 -33.32572174]
[-162.91448975 -46.81951141]
[-168.40452576 -60.78710556]
[-172.78173828 -75.14238739]
[-176.01913452 -89.79685211]
[-178.09678650 -104.66014099]
[-179.00186157 -119.64062500]
[-178.72877502 -134.64595032]
[-177.27922058 -149.58357239]
[-174.66213989 -164.36143494]
[-170.89366150 -178.88839722]
[-165.99702454 -193.07490540]
[-160.00241089 -206.83348083]
[-152.94677734 -220.07933044]
[-144.87364197 -232.73074341]
[-135.83276367 -244.70974731]
[-125.87988281 -255.94248962]
[-115.07637024 -266.35971069]
[-103.48883057 -275.89715576]
[-91.18871307 -284.49606323]
[-78.25183868 -292.10339355]
[-64.75798035 -298.67224121]
[-50.79033279 -304.16213989]
[-36.43500519 -308.53918457]
[-21.78050995 -311.77645874]
[-6.91719484 -313.85394287]
[8.06330013 -314.75885010]
[23.06861305 -314.48562622]
[38.00623322 -313.03591919]
[52.78405762 -310.41870117]
[67.31098175 -306.65005493]
[81.49744415 -301.75326538]
[95.25596619 -295.75851440]
[108.50173187 -288.70275879]
[121.15306854 -280.62948608]
[133.13198853 -271.58850098]
[144.36462402 -261.63549805]
[154.78170776 -250.83187866]
[164.31904602 -239.24424744]
[172.91783142 -226.94403076]
[180.52502441 -214.00708008]
[187.09375000 -200.51315308]
[192.58349609 -186.54545593]
[196.96040344 -172.19007874]
[200.19750977 -157.53555298]
[202.27485657 -142.67221069]
[203.17962646 -127.69171143]
[202.90623474 -112.68640137]
[201.45637512 -97.74880219]
[198.83900452 -82.97100067]
[195.07022095 -68.44411469]
[190.17329407 -54.25770569]
[184.17839050 -40.49924088]
[177.12249756 -27.25354958]
[169.04908752 -14.60229111]
[160.00796509 -2.62347007]
[150.05487061 8.60906124]
[139.25114441 19.02604866]
[127.66340637 28.56326866]
[115.36311340 37.16191864]
[102.42608643 44.76898575]
[88.93209076 51.33756638]
[94.41912079 65.29795837]
[99.90615845 79.25834656]
[109.01834869 79.21712494]
[118.01920319 83.29904175]
[125.02269745 91.33078003]
[128.30345154 102.28118134]
[143.06950378 104.92004395]
[157.83557129 107.55891418]
[172.60162354 110.19777679]
[187.83242798 104.11872864]
[200.54319763 114.48059845]
[197.65818787 130.62397766]
[182.14524841 135.94194031]
[169.96275330 124.96382904]
[155.19670105 122.32496643]
[140.43064880 119.68610382]
[125.66458893 117.04724121]
[114.57327271 127.14588928]
[115.82015228 142.09397888]
[118.52015686 145.68165588]
[119.77018738 149.55574036]
[119.66308594 153.21229553]
[118.44970703 156.23249817]
[116.49604034 158.32786560]
[116.49604034 173.32786560]
[116.49604034 188.32786560]
[116.49604034 203.32786560]
[116.49604034 218.32786560]
[116.49604034 233.32786560]
[116.49604034 248.32786560]
[116.49604034 263.32785034]
[116.49604034 278.32785034]
[116.49604034 293.32785034]
[116.49604034 308.32785034]
[131.03593445 312.38919067]
[143.94030762 320.22369385]
[154.25158691 331.25003052]
[161.20462036 344.64993286]
[164.28341675 359.42910767]
[163.25952148 374.49078369]
[158.20892334 388.71731567]
[149.50639343 401.05297852]
[137.79772949 410.58239746]
[123.95179749 416.59841919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 125]
[23 124]
[25 108]
[26 107]
[27 106]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
