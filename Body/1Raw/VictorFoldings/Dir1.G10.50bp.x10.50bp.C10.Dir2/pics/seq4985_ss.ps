%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUAGCAAUGGGGGGGGGGAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGGUUACCCAAGxxxxxxxxxxAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCCCCCCCCCCCUAUAGCACU\
) } def
/len { sequence length } bind def

/coor [
[96.73707581 385.42648315]
[83.51687622 378.15402222]
[72.63007355 367.70703125]
[64.81894684 354.79776001]
[60.61606216 340.30645752]
[60.30799103 325.22113037]
[63.91573334 310.57028198]
[71.19330597 297.35290527]
[81.64451599 286.47012329]
[94.55677795 278.66400146]
[109.04971313 274.46670532]
[108.73765564 259.46994019]
[108.42559814 244.47320557]
[108.11354065 229.47644043]
[107.80148315 214.47969055]
[107.48943329 199.48294067]
[107.17737579 184.48619080]
[106.86531830 169.48942566]
[106.55326080 154.49267578]
[106.24120331 139.49592590]
[91.27518463 138.28005981]
[78.08416748 131.69914246]
[68.47605133 120.88259125]
[63.68195343 107.52285004]
[64.20064545 93.61244202]
[69.75403595 81.14724731]
[79.35622406 71.84012604]
[73.29321289 58.12007141]
[60.63809204 48.62488556]
[62.57079697 33.85620499]
[56.50778198 20.13615227]
[50.44477081 6.41609955]
[44.38175583 -7.30395412]
[38.31874466 -21.02400780]
[23.20901489 -20.06407738]
[8.70975494 -24.32358932]
[-3.43451071 -33.26993179]
[-11.76949501 -45.80780029]
[-15.30529213 -60.41326523]
[-13.63391399 -75.31900024]
[-6.97626448 -88.72813416]
[3.84683180 -99.03084564]
[-2.21618128 -112.75090027]
[-8.27919483 -126.47095490]
[-17.66635704 -138.17057800]
[-29.74634552 -147.06292725]
[-41.82633209 -155.95527649]
[-53.90632248 -164.84762573]
[-65.98631287 -173.73997498]
[-78.06629944 -182.63232422]
[-94.07942200 -181.65283203]
[-104.72184753 -193.65776062]
[-101.82962036 -209.43795776]
[-87.62139893 -216.88819885]
[-72.99652863 -210.29330444]
[-69.17395020 -194.71231079]
[-57.09395981 -185.81996155]
[-45.01397324 -176.92761230]
[-32.93398285 -168.03526306]
[-20.85399437 -159.14291382]
[-8.77400684 -150.25056458]
[-14.45799637 -164.13192749]
[-16.85248756 -178.93957520]
[-15.83319473 -193.90490723]
[-11.45302391 -208.25112915]
[-3.93933034 -221.23359680]
[6.31788111 -232.17843628]
[18.78620338 -240.51756287]
[32.81845474 -245.81811523]
[47.68628693 -247.80496216]
[62.61797333 -246.37498474]
[76.83846283 -241.60240173]
[89.60964966 -233.73493958]
[100.26861572 -223.18096924]
[108.26211548 -210.48829651]
[113.17523193 -196.31573486]
[114.75294495 -181.39894104]
[112.91336060 -166.51217651]
[107.75197601 -152.42813110]
[99.53668976 -139.87788391]
[88.69391632 -129.51283264]
[75.78646088 -121.87098694]
[61.48430252 -117.34902191]
[46.52979660 -116.18163300]
[31.69917297 -118.42942810]
[17.76222420 -123.97573090]
[5.44085932 -132.53396606]
[11.50387192 -118.81391144]
[17.56688499 -105.09385681]
[32.47150421 -106.16045380]
[46.86871719 -102.05564880]
[59.01557541 -93.25631714]
[67.43471527 -80.80883789]
[71.09400177 -66.20474243]
[69.53307343 -51.20195007]
[62.92111206 -37.61320496]
[52.03879547 -27.08702087]
[58.10181046 -13.36696720]
[64.16482544 0.35308635]
[70.22783661 14.07314014]
[76.29084778 27.79319382]
[88.51229858 36.30702591]
[87.01326752 52.05705643]
[93.07627869 65.77711487]
[105.74854279 64.70385742]
[118.26872253 68.27832031]
[128.95033264 76.24152374]
[136.27725220 87.73008728]
[139.11718750 101.36649323]
[136.89175415 115.42332458]
[151.38735962 119.28047943]
[165.88294983 123.13764191]
[180.37855530 126.99480438]
[190.27525330 115.37507629]
[204.23695374 109.20793152]
[219.49154663 109.71786499]
[233.01022339 116.80363464]
[242.10884094 129.05833435]
[244.98086548 144.04881287]
[241.05604553 158.79867554]
[231.11366272 170.37934875]
[217.12779236 176.49145508]
[201.87532043 175.92144775]
[188.38464355 168.78250122]
[179.33435059 156.49206543]
[176.52139282 141.49040222]
[162.02578735 137.63323975]
[147.53019714 133.77607727]
[133.03459167 129.91891479]
[121.23796082 139.18386841]
[121.55001831 154.18061829]
[121.86206818 169.17736816]
[122.17412567 184.17413330]
[122.48618317 199.17088318]
[122.79824066 214.16763306]
[123.11029816 229.16438293]
[123.42235565 244.16114807]
[123.73440552 259.15789795]
[124.04646301 274.15466309]
[138.70146179 277.74542236]
[151.92726135 285.00769043]
[162.82212830 295.44625854]
[170.64323425 308.34948730]
[174.85729980 322.83755493]
[175.17701721 337.92263794]
[171.58059692 352.57626343]
[164.31323242 365.79925537]
[153.87043762 376.69009399]
[140.96420288 384.50619507]
[126.47451019 388.71469116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[27 104]
[28 103]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[42 89]
[43 88]
[44 87]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[110 129]
[111 128]
[112 127]
[113 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
