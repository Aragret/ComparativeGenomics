%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUAACAACGGGGGGGGGGGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCxxxxxxxxxxAUUAUUGCAGCCCUAGCAACACUCCACCUCCUAUUCUUGCACGAAACGGGCCCCCCCCCCAUCAAACAAC\
) } def
/len { sequence length } bind def

/coor [
[1.95622623 263.24850464]
[-10.06192017 255.39958191]
[-21.45470428 246.66769409]
[-32.15739059 237.10244751]
[-42.10917282 226.75819397]
[-51.25349808 215.69371033]
[-59.53841782 203.97186279]
[-66.91684723 191.65927124]
[-73.34687805 178.82586670]
[-78.79196167 165.54458618]
[-83.22116089 151.89086914]
[-86.60931396 137.94233704]
[-88.93716431 123.77820587]
[-90.19149780 109.47896576]
[-105.19068146 109.63500214]
[-120.18987274 109.79103851]
[-135.18905640 109.94707489]
[-148.90800476 117.82751465]
[-161.71507263 110.22303009]
[-176.71426392 110.37906647]
[-191.71343994 110.53510284]
[-206.71263123 110.69113922]
[-193.97479248 118.61244965]
[-184.63893127 130.35305786]
[-179.79054260 144.54788208]
[-179.99333191 159.54650879]
[-185.22373962 173.60505676]
[-194.87361145 185.08895874]
[-207.82096863 192.66299438]
[-222.56044006 195.44651794]
[-237.37828064 193.11589050]
[-250.55162048 185.94212341]
[-260.54882812 174.75926208]
[-266.20748901 160.86756897]
[-266.86975098 145.88220215]
[-262.45852661 131.54548645]
[-253.48678589 119.52435303]
[-240.99760437 111.21648407]
[-226.44024658 107.58762360]
[-240.66702271 102.83380890]
[-254.89379883 98.07999420]
[-269.12057495 93.32617950]
[-283.14782715 100.60710907]
[-298.18954468 95.75715637]
[-305.32177734 81.65371704]
[-300.31304932 66.66410828]
[-286.13500977 59.68140030]
[-271.19918823 64.84831238]
[-264.36676025 79.09940338]
[-250.13998413 83.85321808]
[-235.91320801 88.60703278]
[-221.68643188 93.36084747]
[-206.86866760 95.69194794]
[-191.86947632 95.53591156]
[-176.87030029 95.37987518]
[-161.87110901 95.22383881]
[-149.22500610 87.35456085]
[-135.34509277 94.94789124]
[-120.34590912 94.79185486]
[-105.34671783 94.63581848]
[-90.34753418 94.47978210]
[-89.05355835 77.16564941]
[-86.18797302 60.04134369]
[-81.77459717 43.24921417]
[-75.85012054 26.92885780]
[-68.46379089 11.21594524]
[-59.67700958 -3.75889945]
[-49.56282425 -17.87119102]
[-38.20531845 -31.00361252]
[-25.69890022 -43.04699326]
[-12.14754295 -53.90121841]
[2.33610392 -63.47605133]
[17.63163567 -71.69190216]
[33.61190033 -78.48046875]
[50.14405441 -83.78530884]
[67.09066010 -87.56233978]
[84.31084442 -89.78015137]
[101.66146088 -90.42031097]
[118.99825287 -89.47750092]
[136.17712402 -86.95954895]
[153.05523682 -82.88739014]
[169.49230957 -77.29487610]
[185.35168457 -70.22850800]
[200.50154114 -61.74701691]
[214.81590271 -51.92091370]
[224.32426453 -63.52225494]
[233.83262634 -75.12359619]
[243.34098816 -86.72493744]
[240.27011108 -102.05802917]
[247.81893921 -115.75289917]
[262.42312622 -121.34323883]
[277.18701172 -116.18946838]
[285.13955688 -102.72503662]
[282.52581787 -87.30743408]
[270.57989502 -77.21639252]
[254.94232178 -77.21657562]
[245.43395996 -65.61523438]
[235.92559814 -54.01389694]
[226.41725159 -42.41255569]
[235.36279297 -33.93868256]
[243.74157715 -24.90401840]
[251.51853943 -15.34639072]
[258.66110229 -5.30581474]
[265.13934326 5.17566967]
[270.92617798 16.05417633]
[275.99734497 27.28415871]
[280.33160400 38.81859970]
[283.91085815 50.60919952]
[286.72009277 62.60659790]
[288.74752808 74.76055908]
[289.98468018 87.02019501]
[290.42639160 99.33417511]
[290.07080078 111.65094757]
[288.91940308 123.91893768]
[286.97702026 136.08677673]
[284.25173950 148.10353088]
[280.75503540 159.91886902]
[276.50152588 171.48333740]
[271.50900269 182.74850464]
[284.75158691 189.79364014]
[300.56893921 189.44445801]
[308.17105103 202.25292969]
[321.41363525 209.29806519]
[338.23687744 211.39938354]
[340.87481689 228.14685059]
[325.51208496 235.31785583]
[314.36849976 222.54064941]
[301.12591553 215.49551392]
[286.25576782 216.34861755]
[277.70645142 203.03622437]
[264.46386719 195.99108887]
[256.76611328 208.10661316]
[248.17762756 219.60787964]
[238.74720764 230.42955017]
[228.52842712 240.51013184]
[217.57936096 249.79235840]
[205.96223450 258.22344971]
[193.74302673 265.75555420]
[180.99116516 272.34582520]
[167.77914429 277.95684814]
[154.18199158 282.55676270]
[140.27697754 286.11938477]
[126.14312744 288.62448120]
[111.86072540 290.05783081]
[97.51093292 290.41128540]
[83.17528534 289.68286133]
[68.93523407 287.87664795]
[54.87168884 285.00296021]
[41.06455994 281.07806396]
[27.59229851 276.12432861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 61]
[15 60]
[16 59]
[17 58]
[19 56]
[20 55]
[21 54]
[22 53]
[39 52]
[40 51]
[41 50]
[42 49]
[85 99]
[86 98]
[87 97]
[88 96]
[119 131]
[120 130]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
