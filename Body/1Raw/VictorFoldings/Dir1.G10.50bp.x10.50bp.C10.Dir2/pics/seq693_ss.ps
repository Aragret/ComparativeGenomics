%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUACGGGGGGGGGGCCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCxxxxxxxxxxACUAACCCCCUAAUAAAAUUAAUUAACCACUCAUUCAUCGACCUCCCCACCCCCCCCCCCCCCAUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[243.01028442 209.18872070]
[232.99176025 198.01901245]
[223.65252686 186.27543640]
[215.02540588 173.99920654]
[207.14068604 161.23345947]
[200.02606201 148.02304077]
[193.70654297 134.41435242]
[188.20429993 120.45518494]
[183.53868103 106.19458008]
[179.72605896 91.68261719]
[165.01809692 94.62810516]
[150.31013489 97.57358551]
[135.60217285 100.51906586]
[120.89421082 103.46454620]
[112.09008789 117.38967896]
[95.97048187 120.79264832]
[82.28906250 111.61437988]
[67.64556122 114.86520386]
[53.00205612 118.11602783]
[38.35855484 121.36685944]
[29.85111427 134.41526794]
[14.95421124 137.50346375]
[2.56696892 129.31251526]
[-12.07653236 132.56333923]
[-26.72003365 135.81416321]
[-41.36353683 139.06498718]
[-44.79811478 153.93666077]
[-54.35183334 165.83998108]
[-68.12779999 172.41156006]
[-83.39077759 172.34658813]
[-97.11029816 165.65797424]
[-106.56233215 153.67373657]
[-109.87018585 138.77337646]
[-106.37706757 123.91535187]
[-96.77655029 112.04974365]
[-82.97480774 105.53247070]
[-67.71220398 105.65753937]
[-54.01913452 112.40013123]
[-44.61436081 124.42148590]
[-29.97085953 121.17066193]
[-15.32735825 117.91983795]
[-0.68385684 114.66901398]
[7.07383204 102.00592041]
[21.87811470 98.50051880]
[35.10773087 106.72335815]
[49.75123215 103.47252655]
[64.39472961 100.22170258]
[79.03823090 96.97087860]
[84.54843903 85.51481628]
[95.62527466 79.27723694]
[108.27816010 80.50530243]
[117.94873047 88.75659180]
[132.65669250 85.81110382]
[147.36465454 82.86562347]
[162.07261658 79.92014313]
[176.78057861 76.97465515]
[174.71083069 62.11366272]
[173.52511597 47.15615845]
[173.22755432 32.15467834]
[173.81922913 17.16191483]
[175.29804993 2.23053670]
[177.65881348 -12.58701229]
[180.89323425 -27.23868370]
[184.98995972 -41.67301178]
[189.93457031 -55.83929825]
[195.70974731 -69.68778229]
[202.29515076 -83.16981506]
[209.66769409 -96.23804474]
[217.80145264 -108.84657288]
[226.66786194 -120.95110321]
[236.23579407 -132.50912476]
[246.47161865 -143.48002625]
[257.33938599 -153.82528687]
[268.80093384 -163.50857544]
[280.81600952 -172.49584961]
[293.34237671 -180.75556946]
[306.33605957 -188.25869751]
[319.75143433 -194.97889709]
[333.54132080 -200.89256287]
[347.65734863 -205.97891235]
[362.04989624 -210.22007751]
[376.66842651 -213.60118103]
[391.46157837 -216.11033630]
[406.37738037 -217.73870850]
[421.36346436 -218.48060608]
[436.36715698 -218.33341980]
[451.33578491 -217.29765320]
[466.21679688 -215.37695312]
[480.95785522 -212.57806396]
[495.50723267 -208.91082764]
[509.81381226 -204.38810730]
[523.82733154 -199.02580261]
[537.49853516 -192.84272766]
[550.77947998 -185.86062622]
[563.62347412 -178.10401917]
[575.98541260 -169.60014343]
[587.82183838 -160.37887573]
[599.09118652 -150.47259521]
[609.75390625 -139.91612244]
[619.77252197 -128.74650574]
[629.11187744 -117.00300598]
[637.73907471 -104.72685242]
[645.62396240 -91.96118164]
[652.73864746 -78.75082397]
[659.05828857 -65.14218903]
[664.56066895 -51.18306732]
[669.22644043 -36.92250061]
[673.03918457 -22.41057777]
[675.98553467 -7.69827175]
[678.05511475 7.16274071]
[679.24072266 22.12025833]
[679.53814697 37.12174225]
[678.94635010 52.11449814]
[677.46740723 67.04586029]
[675.10650635 81.86338806]
[671.87194824 96.51503754]
[667.77508545 110.94932556]
[662.83038330 125.11557007]
[657.05505371 138.96400452]
[650.46954346 152.44598389]
[643.09686279 165.51414490]
[634.96301270 178.12260437]
[626.09649658 190.22705078]
[616.52850342 201.78498840]
[606.29254150 212.75581360]
[595.42468262 223.10096741]
[583.96307373 232.78414917]
[571.94793701 241.77133179]
[559.42144775 250.03092957]
[546.42773438 257.53393555]
[533.01226807 264.25402832]
[519.22235107 270.16757202]
[505.10626221 275.25381470]
[490.71368408 279.49484253]
[476.09512329 282.87582397]
[461.30197144 285.38482666]
[446.38613892 287.01309204]
[431.40005493 287.75485229]
[416.39636230 287.60754395]
[401.42773438 286.57162476]
[386.54675293 284.65081787]
[371.80569458 281.85180664]
[357.25634766 278.18441772]
[342.94982910 273.66159058]
[328.93637085 268.29913330]
[315.26516724 262.11596680]
[301.98431396 255.13374329]
[289.14038086 247.37701416]
[276.77853394 238.87303162]
[264.94219971 229.65165710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[17 48]
[18 47]
[19 46]
[20 45]
[23 42]
[24 41]
[25 40]
[26 39]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
