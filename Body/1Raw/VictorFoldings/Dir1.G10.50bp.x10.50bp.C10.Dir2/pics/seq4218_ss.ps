%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCAAGACCCUACUUCUAGGGGGGGGGGACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGAxxxxxxxxxxUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCCCCCCCCCCCACCACGACCCUACUACUA\
) } def
/len { sequence length } bind def

/coor [
[85.05900574 196.73323059]
[70.46820068 193.31893921]
[56.56956100 187.71743774]
[43.68884659 180.06001282]
[32.12795258 170.52613831]
[22.15784073 159.33927917]
[14.01219654 146.76161194]
[7.88193417 133.08796692]
[3.91073537 118.63878632]
[2.19167733 103.75276184]
[2.76505136 88.77877045]
[5.61741829 74.06779480]
[10.68192482 59.96460724]
[17.83986855 46.79977417]
[26.92348289 34.88184738]
[37.71986389 24.49015999]
[49.97596741 15.86827374]
[63.40453339 9.21826744]
[77.69082642 4.69600248]
[92.50000000 2.40747380]
[92.50000000 -12.59252644]
[92.50000000 -27.59252548]
[92.50000000 -42.59252548]
[92.50000000 -57.59252548]
[92.50000000 -72.59252930]
[92.50000000 -87.59252930]
[92.50000000 -102.59252930]
[92.50000000 -117.59252930]
[92.50000000 -132.59252930]
[77.51963043 -133.43370056]
[62.60999298 -135.11349487]
[47.81799698 -137.62664795]
[33.19018936 -140.96525574]
[18.77258873 -145.11878967]
[4.61056042 -150.07418823]
[-9.25133514 -155.81587219]
[-22.76948547 -162.32575989]
[-35.90135193 -169.58337402]
[-48.60562515 -177.56588745]
[-60.84232712 -186.24818420]
[-72.57295227 -195.60293579]
[-83.76060486 -205.60072327]
[-94.37007141 -216.21006775]
[-104.36797333 -227.39759827]
[-113.72285461 -239.12812805]
[-122.40528107 -251.36473083]
[-130.38793945 -264.06890869]
[-137.64570618 -277.20071411]
[-144.15574646 -290.71878052]
[-149.89758301 -304.58059692]
[-154.85314941 -318.74258423]
[-159.00683594 -333.16012573]
[-162.34559631 -347.78790283]
[-164.85891724 -362.57986450]
[-166.53887939 -377.48950195]
[-167.38021851 -392.46984863]
[-167.38027954 -407.47381592]
[-166.53904724 -422.45419312]
[-164.85919189 -437.36383057]
[-162.34597778 -452.15579224]
[-159.00732422 -466.78359985]
[-154.85374451 -481.20120239]
[-149.89828491 -495.36318970]
[-144.15655518 -509.22506714]
[-137.64662170 -522.74322510]
[-130.38894653 -535.87506104]
[-122.40638733 -548.57928467]
[-113.72404480 -560.81597900]
[-104.36925507 -572.54656982]
[-94.37142944 -583.73413086]
[-83.76204681 -594.34356689]
[-72.57447052 -604.34143066]
[-60.84391022 -613.69628906]
[-48.60727310 -622.37866211]
[-35.90306473 -630.36126709]
[-22.77124786 -637.61901855]
[-9.25314713 -644.12896729]
[4.60870600 -649.87078857]
[18.77069664 -654.82629395]
[33.18826675 -658.97991943]
[47.81605148 -662.31860352]
[62.60802841 -664.83190918]
[77.51765442 -666.51177979]
[92.49801636 -667.35308838]
[107.50198364 -667.35308838]
[122.48234558 -666.51177979]
[137.39196777 -664.83190918]
[152.18394470 -662.31860352]
[166.81173706 -658.97991943]
[181.22930908 -654.82629395]
[195.39129639 -649.87078857]
[209.25314331 -644.12896729]
[222.77124023 -637.61901855]
[235.90306091 -630.36126709]
[248.60726929 -622.37866211]
[260.84390259 -613.69628906]
[272.57446289 -604.34143066]
[283.76205444 -594.34356689]
[294.37142944 -583.73413086]
[304.36926270 -572.54656982]
[313.72406006 -560.81597900]
[322.40637207 -548.57928467]
[330.38894653 -535.87506104]
[337.64660645 -522.74322510]
[344.15655518 -509.22506714]
[349.89828491 -495.36318970]
[354.85375977 -481.20120239]
[359.00732422 -466.78359985]
[362.34597778 -452.15579224]
[364.85919189 -437.36383057]
[366.53906250 -422.45419312]
[367.38027954 -407.47381592]
[367.38021851 -392.46984863]
[366.53887939 -377.48950195]
[364.85891724 -362.57986450]
[362.34558105 -347.78790283]
[359.00683594 -333.16012573]
[354.85314941 -318.74258423]
[349.89758301 -304.58059692]
[344.15576172 -290.71878052]
[337.64569092 -277.20071411]
[330.38793945 -264.06890869]
[322.40527344 -251.36473083]
[313.72283936 -239.12812805]
[304.36798096 -227.39759827]
[294.37005615 -216.21006775]
[283.76058960 -205.60072327]
[272.57296753 -195.60293579]
[260.84231567 -186.24818420]
[248.60562134 -177.56588745]
[235.90135193 -169.58337402]
[222.76948547 -162.32575989]
[209.25134277 -155.81587219]
[195.38943481 -150.07418823]
[181.22741699 -145.11878967]
[166.80981445 -140.96525574]
[152.18200684 -137.62664795]
[137.39001465 -135.11349487]
[122.48036957 -133.43370056]
[107.50000000 -132.59252930]
[107.50000000 -117.59252930]
[107.50000000 -102.59252930]
[107.50000000 -87.59252930]
[107.50000000 -72.59252930]
[107.50000000 -57.59252548]
[107.50000000 -42.59252548]
[107.50000000 -27.59252548]
[107.50000000 -12.59252644]
[107.50000000 2.40747380]
[122.30917358 4.69600248]
[136.59545898 9.21826744]
[150.02403259 15.86827374]
[162.28013611 24.49015999]
[173.07652283 34.88184738]
[182.16012573 46.79977417]
[189.31806946 59.96460724]
[194.38258362 74.06779480]
[197.23495483 88.77877045]
[197.80831909 103.75276184]
[196.08926392 118.63878632]
[192.11807251 133.08796692]
[185.98780823 146.76161194]
[177.84216309 159.33927917]
[167.87205505 170.52613831]
[156.31115723 180.06001282]
[143.43043518 187.71743774]
[129.53179932 193.31893921]
[114.94099426 196.73323059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
