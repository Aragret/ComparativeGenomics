%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUAGCCAUGGGGGGGGGGGUGAUUUCACUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAxxxxxxxxxxAUAUUGUGCCUAUUGCCAUACUAGUCUUUGCCGCCUGCGAAGCAGCGGUGCCCCCCCCCCGGCCUAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 365.98715210]
[71.01555634 360.43414307]
[58.81560135 351.56781006]
[49.20452881 339.94549561]
[42.78650284 326.29779053]
[39.96496582 311.48260498]
[40.91728210 296.43121338]
[45.58358765 282.08981323]
[53.67055511 269.35983276]
[64.66983032 259.04156494]
[77.88998413 251.78359985]
[92.50000000 248.04216003]
[92.50000000 233.04216003]
[92.50000000 218.04216003]
[92.50000000 203.04216003]
[92.50000000 188.04216003]
[92.50000000 173.04216003]
[92.50000000 158.04216003]
[92.50000000 143.04216003]
[92.50000000 128.04216003]
[92.50000000 113.04216003]
[79.66634369 105.27702332]
[66.37900543 112.23738098]
[53.09166336 119.19773865]
[44.77780533 133.33322144]
[28.38360596 132.93038940]
[20.77401161 118.40365601]
[29.77712250 104.69686127]
[46.13130569 105.91039276]
[59.41864777 98.95003510]
[72.70599365 91.98968506]
[78.86771393 90.32858276]
[84.84476471 90.22286224]
[90.32602692 91.57183075]
[95.02729034 94.21894836]
[98.98390198 79.75018311]
[102.94051361 65.28141785]
[89.73057556 72.38758087]
[75.00931549 69.50929260]
[65.44862366 57.95103455]
[65.38155365 42.95118332]
[74.83850098 31.30789375]
[89.53343201 28.29807281]
[102.80638885 35.28582001]
[108.64176941 49.10241318]
[114.63006592 35.34958267]
[120.61836243 21.59675407]
[126.60665894 7.84392500]
[119.22539520 0.01855646]
[115.26099396 -10.27596283]
[115.49765015 -21.57918167]
[120.10704041 -32.20219421]
[128.59234619 -40.47997665]
[139.83438110 -45.03150940]
[152.23709106 -44.98723602]
[154.69001770 -59.78531647]
[157.14294434 -74.58339691]
[159.59587097 -89.38147736]
[162.04879761 -104.17955017]
[147.72511292 -108.71966553]
[134.19337463 -115.25212097]
[121.72908783 -123.64392090]
[110.58600616 -133.72421265]
[100.99098206 -145.28779602]
[93.13935852 -158.09922791]
[87.19099426 -171.89768982]
[83.26697540 -186.40226746]
[81.44720459 -201.31767273]
[81.76872253 -216.34024048]
[84.22499084 -231.16412354]
[88.76599121 -245.48753357]
[95.29927826 -259.01885986]
[103.69184875 -271.48263550]
[113.77283478 -282.62509155]
[125.33700562 -292.21939087]
[138.14892578 -300.07022095]
[151.94775391 -306.01773071]
[166.45257568 -309.94085693]
[181.36810303 -311.75970459]
[196.39064026 -311.43725586]
[211.21437073 -308.98007202]
[225.53750610 -304.43820190]
[239.06842041 -297.90405273]
[251.53167725 -289.51071167]
[262.67352295 -279.42904663]
[272.26712036 -267.86428833]
[280.11712646 -255.05187988]
[286.06381226 -241.25267029]
[289.98602295 -226.74760437]
[291.80395508 -211.83198547]
[291.48056030 -196.80946350]
[289.02246094 -181.98588562]
[284.47970581 -167.66302490]
[277.94473267 -154.13250732]
[269.55062866 -141.66978455]
[259.46826172 -130.52856445]
[247.90289307 -120.93568420]
[235.08999634 -113.08644867]
[221.29043579 -107.14064026]
[206.78512573 -103.21932220]
[191.86938477 -101.40232086]
[176.84687805 -101.72662354]
[174.39395142 -86.92854309]
[171.94102478 -72.13047028]
[169.48809814 -57.33238983]
[167.03517151 -42.53430939]
[176.67698669 -31.04364204]
[191.67619324 -30.88964653]
[206.67539978 -30.73564911]
[221.67460632 -30.58165169]
[236.67382812 -30.42765427]
[251.67303467 -30.27365875]
[264.09317017 -40.42845154]
[279.74536133 -36.90869141]
[286.62255859 -22.41443634]
[279.44921875 -8.06443787]
[263.72805786 -4.86678743]
[251.51902771 -15.27444839]
[236.51982117 -15.42844582]
[221.52061462 -15.58244228]
[206.52140808 -15.73643875]
[191.52220154 -15.89043617]
[176.52297974 -16.04443359]
[164.71859741 8.36620331]
[140.35948181 13.83222103]
[134.37118530 27.58505058]
[128.38288879 41.33787918]
[122.39459991 55.09070969]
[117.40927887 69.23802185]
[113.45266724 83.70679474]
[109.49605560 98.17556000]
[107.50000000 113.04216003]
[107.50000000 128.04216003]
[107.50000000 143.04216003]
[107.50000000 158.04216003]
[107.50000000 173.04216003]
[107.50000000 188.04216003]
[107.50000000 203.04216003]
[107.50000000 218.04216003]
[107.50000000 233.04216003]
[107.50000000 248.04216003]
[122.11001587 251.78359985]
[135.33016968 259.04156494]
[146.32945251 269.35983276]
[154.41641235 282.08981323]
[159.08271790 296.43121338]
[160.03503418 311.48260498]
[157.21350098 326.29779053]
[150.79547119 339.94549561]
[141.18440247 351.56781006]
[128.98443604 360.43414307]
[114.96250153 365.98715210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 31]
[23 30]
[24 29]
[35 131]
[36 130]
[37 129]
[45 128]
[46 127]
[47 126]
[48 125]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
