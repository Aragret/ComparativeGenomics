%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUUCAUUUCGGGGGGGGGGUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCGCUUxxxxxxxxxxAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUUCGCUCCCCCCCCCCUCAUUCAUUGC\
) } def
/len { sequence length } bind def

/coor [
[87.30655670 477.87326050]
[73.28461456 472.32025146]
[61.08465576 463.45391846]
[51.47358322 451.83160400]
[45.05555725 438.18389893]
[42.23402023 423.36871338]
[43.18633652 408.31732178]
[47.85264206 393.97589111]
[55.93960953 381.24594116]
[66.93888092 370.92767334]
[80.15904236 363.66970825]
[94.76905823 359.92825317]
[94.76905823 344.92825317]
[94.76905823 329.92825317]
[94.76905823 314.92825317]
[94.76905823 299.92825317]
[94.76905823 284.92825317]
[94.76905823 269.92825317]
[94.76905823 254.92826843]
[94.76905823 239.92826843]
[94.76905823 224.92826843]
[85.17842102 210.26319885]
[94.43659973 194.37870789]
[86.43961334 181.81298828]
[93.89193726 167.85685730]
[93.58396149 152.86001587]
[93.27598572 137.86317444]
[92.96800232 122.86634064]
[92.66002655 107.86950684]
[89.15086365 93.28575897]
[82.60298920 79.79037476]
[76.05512238 66.29499054]
[61.07694244 68.32271576]
[46.22547913 65.62522125]
[32.95292664 58.47905350]
[22.55314255 47.59513855]
[16.03551483 34.04806900]
[14.02699089 19.17000771]
[16.71180344 4.41968822]
[23.81464195 -8.76059341]
[34.62882233 -19.08602333]
[28.08095169 -32.58140564]
[21.53308105 -46.07678986]
[14.98520947 -59.57217407]
[8.43733883 -73.06755829]
[1.88946855 -86.56294250]
[-4.65840197 -100.05832672]
[-11.20627213 -113.55371094]
[-25.95031548 -110.43942261]
[-41.00214386 -110.94418335]
[-55.48696136 -115.03432465]
[-68.56396484 -122.46790314]
[-79.47515869 -132.80905151]
[-87.58927917 -145.45349121]
[-92.43830872 -159.66387939]
[-93.74449921 -174.61279297]
[-91.43624115 -189.43087769]
[-85.65200806 -203.25746155]
[-76.73202515 -215.29049683]
[-65.19830322 -224.83311462]
[-71.74617004 -238.32850647]
[-78.29404449 -251.82388306]
[-84.84191132 -265.31927490]
[-98.71466064 -274.06448364]
[-97.80716705 -290.43850708]
[-83.05297852 -297.59713745]
[-69.62994385 -288.17620850]
[-71.34652710 -271.86712646]
[-64.79866028 -258.37176514]
[-58.25078583 -244.87637329]
[-51.70291519 -231.38098145]
[-37.06928635 -234.53460693]
[-22.09711838 -234.09387207]
[-7.65685129 -230.08007812]
[5.41096163 -222.72235107]
[16.34457779 -212.44461060]
[24.50546646 -199.84111023]
[29.41560555 -185.64212036]
[30.78546906 -170.67158508]
[28.53110695 -155.79933167]
[22.77926826 -141.89050293]
[13.86028671 -129.75526428]
[2.28911138 -120.10158539]
[8.83698177 -106.60620117]
[15.38485241 -93.11081696]
[21.93272400 -79.61543274]
[28.48059464 -66.12004852]
[35.02846527 -52.62466049]
[41.57633591 -39.12927628]
[48.12420654 -25.63389397]
[62.92739487 -27.73784065]
[77.67607880 -25.15977097]
[90.92370605 -18.13976860]
[101.36700439 -7.35420179]
[107.97418976 6.14941645]
[110.08689117 21.05416489]
[107.48575592 35.90214157]
[100.41311646 49.23706818]
[89.55050659 59.74711609]
[96.09837341 73.24250031]
[102.64624786 86.73788452]
[103.99415588 71.79856873]
[109.25196075 57.75024414]
[118.04386902 45.59696198]
[129.74151611 36.20734024]
[143.50885010 30.25247192]
[158.36190796 28.15796280]
[173.23908997 30.07351112]
[187.07711792 35.86220551]
[198.88696289 45.11032104]
[207.82453918 57.15687943]
[213.25108337 71.14089203]
[214.77874756 86.06289673]
[212.29833984 100.85639954]
[205.98713684 114.46407318]
[196.29623413 125.91335297]
[183.91821289 134.38595581]
[169.73779297 139.27630615]
[154.76846313 140.23490906]
[140.08009338 137.19323730]
[126.72248840 130.36868286]
[115.65035248 120.24900818]
[107.65686798 107.56153107]
[107.96484375 122.55836487]
[108.27281952 137.55520630]
[108.58079529 152.55204773]
[108.88877869 167.54887390]
[116.90779114 181.18728638]
[109.43343353 194.07072449]
[118.20291138 203.58387756]
[118.11671448 216.12037659]
[109.76905823 224.92826843]
[109.76905823 239.92826843]
[109.76905823 254.92826843]
[109.76905823 269.92825317]
[109.76905823 284.92825317]
[109.76905823 299.92825317]
[109.76905823 314.92825317]
[109.76905823 329.92825317]
[109.76905823 344.92825317]
[109.76905823 359.92825317]
[124.37906647 363.66970825]
[137.59922791 370.92767334]
[148.59849548 381.24594116]
[156.68547058 393.97589111]
[161.35177612 408.31732178]
[162.30409241 423.36871338]
[159.48255920 438.18389893]
[153.06452942 451.83160400]
[143.45346069 463.45391846]
[131.25349426 472.32025146]
[117.23155212 477.87326050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 129]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[30 101]
[31 100]
[32 99]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[60 71]
[61 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
