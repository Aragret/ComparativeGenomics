%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAACCCACUGGGGGGGGGGCCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAxxxxxxxxxxGCAUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCCCCCCCCCCCAAACCCCCU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 381.98358154]
[71.01555634 376.43057251]
[58.81560135 367.56423950]
[49.20452881 355.94195557]
[42.78650284 342.29425049]
[39.96496582 327.47906494]
[40.91728210 312.42767334]
[45.58358765 298.08624268]
[53.67055511 285.35629272]
[64.66983032 275.03802490]
[77.88998413 267.78005981]
[92.50000000 264.03860474]
[92.50000000 249.03862000]
[92.50000000 234.03862000]
[92.50000000 219.03862000]
[92.50000000 204.03862000]
[92.50000000 189.03862000]
[92.50000000 174.03862000]
[92.50000000 159.03862000]
[92.50000000 144.03862000]
[92.50000000 129.03862000]
[81.49999237 123.60594940]
[73.59563446 114.22324371]
[70.10958862 102.46052551]
[71.62516785 90.28608704]
[77.88877869 79.73709869]
[87.85231781 72.57875061]
[85.39939117 57.78067017]
[82.94646454 42.98259354]
[80.49353790 28.18451309]
[78.04060364 13.38643360]
[75.58767700 -1.41164517]
[73.13475037 -16.20972443]
[58.18208694 -14.92443562]
[43.17467499 -14.81628990]
[28.20504379 -15.88595295]
[13.36548233 -18.12682915]
[-1.25251389 -21.52510452]
[-15.55881977 -26.05982590]
[-29.46523094 -31.70303535]
[-42.88600922 -38.41994095]
[-55.73841095 -46.16912842]
[-67.94319153 -54.90282059]
[-79.42510986 -64.56716919]
[-90.11336517 -75.10260010]
[-99.94207001 -86.44414520]
[-108.85062408 -98.52188110]
[-116.78410339 -111.26135254]
[-123.69358826 -124.58400726]
[-129.53648376 -138.40769958]
[-134.27676392 -152.64721680]
[-137.88520813 -167.21475220]
[-140.33956909 -182.02050781]
[-141.62469482 -196.97319031]
[-141.73269653 -211.98059082]
[-140.66287231 -226.95022583]
[-138.42184448 -241.78976440]
[-135.02342224 -256.40771484]
[-130.48855591 -270.71398926]
[-124.84519958 -284.62033081]
[-118.12815857 -298.04104614]
[-110.37884521 -310.89337158]
[-101.64502716 -323.09805298]
[-91.98055267 -334.57986450]
[-81.44502258 -345.26803589]
[-70.10337830 -355.09661865]
[-58.02554703 -364.00503540]
[-45.28599548 -371.93838501]
[-31.96327209 -378.84774780]
[-18.13951302 -384.69049072]
[-3.89994907 -389.43063354]
[10.66762829 -393.03890991]
[25.47340393 -395.49313354]
[40.42609406 -396.77810669]
[55.43350601 -396.88595581]
[70.40311432 -395.81597900]
[85.24263000 -393.57479858]
[99.86055756 -390.17623901]
[114.16677094 -385.64120483]
[128.07307434 -379.99771118]
[141.49371338 -373.28054810]
[154.34594727 -365.53109741]
[166.55055237 -356.79714966]
[178.03227234 -347.13256836]
[188.72032166 -336.59692383]
[198.54879761 -325.25518799]
[207.45709229 -313.17724609]
[215.39031982 -300.43762207]
[222.29953003 -287.11483765]
[228.14213562 -273.29101562]
[232.88212585 -259.05139160]
[236.49028015 -244.48377991]
[238.94433594 -229.67797852]
[240.22915649 -214.72528076]
[240.33685303 -199.71786499]
[239.26672363 -184.74826050]
[237.02539062 -169.90876770]
[233.62666321 -155.29087830]
[229.09150696 -140.98471069]
[223.44787598 -127.07847595]
[216.73056030 -113.65790558]
[208.98097229 -100.80574036]
[200.24691772 -88.60122681]
[190.58221436 -77.11960602]
[180.04644775 -66.43167114]
[168.70460510 -56.60331345]
[156.62660217 -47.69512939]
[143.88688660 -39.76204300]
[130.56402588 -32.85296631]
[116.74014282 -27.01049423]
[102.50048065 -22.27064896]
[87.93283081 -18.66265297]
[90.38575745 -3.86457324]
[92.83868408 10.93350601]
[95.29161072 25.73158455]
[97.74454498 40.52966309]
[100.19747162 55.32774353]
[102.65039825 70.12582397]
[123.36580658 81.19760132]
[129.74954224 103.80204010]
[143.68026733 109.36397552]
[158.93002319 104.38158417]
[172.25376892 113.31787872]
[173.43064880 129.31770325]
[161.55787659 140.10736084]
[145.74320984 137.40995789]
[138.11833191 123.29469299]
[124.18761444 117.73275757]
[120.80960846 121.59748840]
[116.82205963 124.82960510]
[112.34178162 127.33443451]
[107.50000000 129.03862000]
[107.50000000 144.03862000]
[107.50000000 159.03862000]
[107.50000000 174.03862000]
[107.50000000 189.03862000]
[107.50000000 204.03862000]
[107.50000000 219.03862000]
[107.50000000 234.03862000]
[107.50000000 249.03862000]
[107.50000000 264.03860474]
[122.11001587 267.78005981]
[135.33016968 275.03802490]
[146.32945251 285.35629272]
[154.41641235 298.08624268]
[159.08271790 312.42767334]
[160.03503418 327.47906494]
[157.21350098 342.29425049]
[150.79547119 355.94195557]
[141.18440247 367.56423950]
[128.98443604 376.43057251]
[114.96250153 381.98358154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[27 118]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
