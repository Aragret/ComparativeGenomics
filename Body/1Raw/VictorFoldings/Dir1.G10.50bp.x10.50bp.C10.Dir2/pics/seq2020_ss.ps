%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUACCGCAAGGGGGGGGGGGGGAAAGAUGAAAAAUUAUAACCAAGCAUAAUAUAGCAAGGACUAACCCCxxxxxxxxxxUACAUAAAAACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCACCCCCCCCCCAGUACAGCAA\
) } def
/len { sequence length } bind def

/coor [
[82.93383789 343.02755737]
[69.71364594 335.75509644]
[58.82683945 325.30807495]
[51.01570892 312.39883423]
[46.81282806 297.90753174]
[46.50475693 282.82217407]
[50.11249542 268.17135620]
[57.39006805 254.95396423]
[67.84127808 244.07119751]
[80.75354004 236.26506042]
[95.24647522 232.06776428]
[94.93441772 217.07101440]
[94.62236023 202.07426453]
[94.31031036 187.07751465]
[93.99825287 172.08074951]
[93.68619537 157.08399963]
[93.37413788 142.08724976]
[93.06208038 127.09049225]
[92.75002289 112.09374237]
[90.41892242 97.27597809]
[86.11133575 82.90779877]
[81.80375671 68.53961182]
[77.49617004 54.17142868]
[73.18858337 39.80324554]
[58.54895782 43.09962082]
[43.71504974 45.36675262]
[28.75912857 46.59359360]
[13.75405884 46.77417374]
[-1.22705579 45.90760422]
[-16.11122704 43.99811554]
[-30.82594109 41.05500412]
[-45.29951096 37.09260941]
[-59.46141815 32.13023758]
[-73.24266815 26.19206619]
[-86.57611847 19.30702209]
[-99.39681244 11.50865269]
[-111.64228058 2.83494973]
[-123.25287628 -6.67182970]
[-134.17202759 -16.96536827]
[-144.34652710 -27.99551773]
[-153.72682190 -39.70853806]
[-162.26719666 -52.04736328]
[-169.92605591 -64.95188141]
[-176.66607666 -78.35922241]
[-182.45443726 -92.20407104]
[-187.26290894 -106.41896820]
[-191.06809998 -120.93465424]
[-193.85144043 -135.68041992]
[-195.59938049 -150.58442688]
[-196.30342102 -165.57406616]
[-195.96009827 -180.57629395]
[-194.57112122 -195.51803589]
[-192.14323425 -210.32647705]
[-188.68827820 -224.92948914]
[-184.22306824 -239.25592041]
[-178.76937866 -253.23597717]
[-172.35375977 -266.80154419]
[-165.00747681 -279.88653564]
[-156.76634216 -292.42718506]
[-147.67047119 -304.36242676]
[-137.76419067 -315.63409424]
[-127.09577942 -326.18728638]
[-115.71719360 -335.97055054]
[-103.68387604 -344.93627930]
[-91.05445099 -353.04074097]
[-77.89044952 -360.24447632]
[-64.25600433 -366.51239014]
[-50.21754456 -371.81393433]
[-35.84346390 -376.12326050]
[-21.20378876 -379.41943359]
[-6.36984825 -381.68637085]
[8.58609104 -382.91299438]
[23.59116364 -383.09335327]
[38.57226562 -382.22656250]
[53.45640945 -380.31686401]
[68.17108154 -377.37353516]
[82.64459229 -373.41094971]
[96.80642700 -368.44836426]
[110.58759308 -362.51000977]
[123.92094421 -355.62475586]
[136.74153137 -347.82620239]
[148.98687744 -339.15234375]
[160.59733582 -329.64538574]
[171.51632690 -319.35168457]
[181.69067383 -308.32138062]
[191.07080078 -296.60824585]
[199.61100769 -284.26928711]
[207.26968384 -271.36465454]
[214.00950623 -257.95721436]
[219.79766846 -244.11230469]
[224.60594177 -229.89733887]
[228.41090393 -215.38159180]
[231.19404602 -200.63577271]
[232.94177246 -185.73175049]
[233.64559937 -170.74209595]
[233.30206299 -155.73988342]
[231.91287231 -140.79815674]
[229.48477173 -125.98975372]
[226.02960205 -111.38678741]
[221.56419373 -97.06041718]
[216.11029053 -83.08044434]
[209.69448853 -69.51496887]
[202.34802246 -56.43008041]
[194.10670471 -43.88953781]
[185.01066589 -31.95442963]
[175.10421753 -20.68290520]
[164.43565369 -10.12987900]
[153.05693054 -0.34676561]
[141.02348328 8.61877346]
[128.39393616 16.72305679]
[115.22983551 23.92660332]
[101.59530640 30.19431686]
[87.55677032 35.49565887]
[91.86434937 49.86384583]
[96.17193604 64.23202515]
[100.47952271 78.60021210]
[104.78710938 92.96839905]
[114.80165863 88.60606384]
[127.20982361 90.40547943]
[140.59611511 97.17359924]
[153.98239136 103.94171143]
[167.36868286 110.70982361]
[183.70367432 109.26070404]
[192.90341187 122.83629608]
[185.50399780 137.47120667]
[169.11729431 138.11029053]
[160.60057068 124.09611511]
[147.21427917 117.32799530]
[133.82798767 110.55988312]
[120.44171143 103.79177094]
[107.74678040 111.78168488]
[108.05883789 126.77843475]
[108.37089539 141.77519226]
[108.68294525 156.77194214]
[108.99500275 171.76869202]
[109.30706024 186.76545715]
[109.61911774 201.76220703]
[109.93117523 216.75895691]
[110.24323273 231.75570679]
[124.89822388 235.34648132]
[138.12402344 242.60873413]
[149.01890564 253.04733276]
[156.83999634 265.95053101]
[161.05406189 280.43859863]
[161.37379456 295.52371216]
[157.77735901 310.17730713]
[150.50999451 323.40032959]
[140.06719971 334.29116821]
[127.16096497 342.10726929]
[112.67127991 346.31573486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
