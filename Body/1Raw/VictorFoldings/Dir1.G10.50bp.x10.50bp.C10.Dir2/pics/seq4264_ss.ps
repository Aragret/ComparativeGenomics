%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAACCUCCCGGGGGGGGGGUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCxxxxxxxxxxUGAUCUAGAAAUUGCCCUCCUUUUACCCCUACCAUGAGCCCUACAAACAACCCCCCCCCCCUAACCUGCC\
) } def
/len { sequence length } bind def

/coor [
[82.93931580 343.29071045]
[69.71911621 336.01824951]
[58.83231354 325.57122803]
[51.02118301 312.66198730]
[46.81830215 298.17065430]
[46.51023102 283.08532715]
[50.11797333 268.43450928]
[57.39554596 255.21711731]
[67.84675598 244.33435059]
[80.75901794 236.52819824]
[95.25195312 232.33091736]
[94.93989563 217.33416748]
[94.62783813 202.33740234]
[94.31578064 187.34065247]
[94.00372314 172.34390259]
[93.69167328 157.34715271]
[93.37961578 142.35038757]
[93.06755829 127.35363770]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[91.62363434 57.96166229]
[91.31157684 42.96490860]
[89.90927124 28.03060150]
[87.42415619 13.23789406]
[84.93903351 -1.55481315]
[82.45391846 -16.34752083]
[79.96879578 -31.14022827]
[77.48368073 -45.93293381]
[62.53960419 -44.55932236]
[47.53466415 -44.30632782]
[32.55277634 -45.17536545]
[17.67772484 -47.16157913]
[2.99269724 -50.25386047]
[-11.42017937 -54.43491364]
[-25.48030090 -59.68135834]
[-39.10903931 -65.96385193]
[-52.23017502 -73.24726105]
[-64.77032471 -81.49085236]
[-76.65936279 -90.64852142]
[-87.83080292 -100.66906738]
[-98.22216034 -111.49642944]
[-107.77532959 -123.07007599]
[-116.43687439 -135.32527161]
[-124.15837097 -148.19348145]
[-130.89662170 -161.60273743]
[-136.61395264 -175.47804260]
[-141.27839661 -189.74182129]
[-144.86384583 -204.31428528]
[-147.35026550 -219.11393738]
[-148.72375488 -234.05802917]
[-148.97660828 -249.06297302]
[-148.10743713 -264.04486084]
[-146.12109375 -278.91989136]
[-143.02868652 -293.60488892]
[-138.84750366 -308.01773071]
[-133.60093689 -322.07778931]
[-127.31832123 -335.70648193]
[-120.03479767 -348.82754517]
[-111.79109955 -361.36764526]
[-102.63332367 -373.25659180]
[-92.61267853 -384.42794800]
[-81.78522491 -394.81921387]
[-70.21149445 -404.37225342]
[-57.95622635 -413.03372192]
[-45.08795166 -420.75509644]
[-31.67863655 -427.49322510]
[-17.80327225 -433.21044922]
[-3.53945756 -437.87475586]
[11.03303909 -441.46008301]
[25.83271980 -443.94635010]
[40.77682114 -445.31970215]
[55.78176498 -445.57244873]
[70.76363373 -444.70312500]
[85.63865662 -442.71667480]
[100.32362366 -439.62411499]
[114.73642731 -435.44281006]
[128.79646301 -430.19613647]
[142.42507935 -423.91339111]
[155.54609680 -416.62976074]
[168.08610535 -408.38592529]
[179.97497559 -399.22805786]
[191.14624023 -389.20730591]
[201.53739929 -378.37976074]
[211.09036255 -366.80596924]
[219.75169373 -354.55059814]
[227.47296143 -341.68228149]
[234.21098328 -328.27288818]
[239.92807007 -314.39749146]
[244.59225464 -300.13363647]
[248.17745972 -285.56109619]
[250.66362000 -270.76138306]
[252.03683472 -255.81727600]
[252.28942871 -240.81233215]
[251.41999817 -225.83047485]
[249.43338013 -210.95547485]
[246.34071350 -196.27052307]
[242.15928650 -181.85775757]
[236.91247559 -167.79777527]
[230.62960815 -154.16920471]
[223.34585571 -141.04826355]
[215.10192871 -128.50833130]
[205.94395447 -116.61952972]
[195.92311096 -105.44835663]
[185.09547424 -95.05728912]
[173.52157593 -85.50442505]
[161.26615906 -76.84320068]
[148.39773560 -69.12204742]
[134.98831177 -62.38414764]
[121.11284637 -56.66718292]
[106.84894562 -52.00312042]
[92.27639008 -48.41805267]
[94.76150513 -33.62534714]
[97.24662018 -18.83263969]
[99.73174286 -4.03993177]
[102.21685791 10.75277519]
[104.70198059 25.54548264]
[113.72418976 13.56217194]
[128.29786682 10.01143742]
[141.82101440 16.50179482]
[148.16749573 30.09305191]
[144.46229553 44.62823105]
[132.38389587 53.52275848]
[117.40396118 52.74732590]
[106.30832672 42.65285110]
[106.62038422 57.64960480]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[108.06430817 127.04158020]
[108.37636566 142.03833008]
[108.68842316 157.03509521]
[109.00048065 172.03184509]
[109.31253815 187.02859497]
[109.62459564 202.02534485]
[109.93664551 217.02210999]
[110.24870300 232.01885986]
[124.90369415 235.60963440]
[138.12950134 242.87188721]
[149.02436829 253.31048584]
[156.84547424 266.21368408]
[161.05953979 280.70175171]
[161.37925720 295.78686523]
[157.78283691 310.44046021]
[150.51547241 323.66345215]
[140.07267761 334.55429077]
[127.16644287 342.37042236]
[112.67675018 346.57888794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[21 129]
[22 128]
[23 127]
[24 126]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
