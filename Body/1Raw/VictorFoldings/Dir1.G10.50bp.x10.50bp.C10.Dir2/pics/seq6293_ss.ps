%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAUGAGCUGGGGGGGGGGGGAGUCCUAGGCACAGCUCUAAGCCUCCUUAUUCGAGCCGAGCUGGGCCAGxxxxxxxxxxCCGAUUGAAGCCCCCAUUCGUAUAAUAAUUACAUCACAAGACGUCUUGCACCCCCCCCCCCUCAUGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[79.60461426 407.57821655]
[66.38639832 400.30215454]
[55.50243378 389.85217285]
[47.69481277 376.94082642]
[43.49587250 362.44836426]
[43.19190598 347.36291504]
[46.80363083 332.71307373]
[54.08479691 319.49768066]
[64.53896332 308.61776733]
[77.45334625 300.81512451]
[91.94742584 296.62176514]
[91.63945007 281.62493896]
[91.33147430 266.62811279]
[91.02349091 251.63125610]
[90.71551514 236.63442993]
[90.40753937 221.63758850]
[90.09956360 206.64074707]
[89.79158020 191.64390564]
[89.48360443 176.64707947]
[89.17562866 161.65023804]
[81.17864227 149.08450317]
[88.63097382 135.12838745]
[77.05745697 110.13484192]
[87.94211578 94.53044128]
[76.35307312 85.00710297]
[64.76402283 75.48376465]
[52.09250641 67.45677185]
[38.53060913 61.04779434]
[29.37232971 60.19825363]
[24.75812531 54.36547470]
[11.33067703 47.67940140]
[-2.09677267 40.99332428]
[-17.89899254 41.76820755]
[-25.84316635 29.16902542]
[-39.27061462 22.48295021]
[-52.69806671 15.79687500]
[-66.12551880 9.11079979]
[-79.55296326 2.42472458]
[-92.98041534 -4.26135063]
[-106.91113281 -9.82328796]
[-121.25119019 -14.22358799]
[-135.59124756 -18.62388802]
[-149.93132019 -23.02418900]
[-165.78405762 -18.82624817]
[-177.15248108 -30.64533615]
[-172.34173584 -46.32298660]
[-156.30070496 -49.73138046]
[-145.53102112 -37.36425018]
[-131.19094849 -32.96395111]
[-116.85089111 -28.56365013]
[-102.51082611 -24.16334915]
[-109.96853638 -37.17805481]
[-108.50967407 -52.10694504]
[-98.67350006 -63.43168259]
[-84.09587097 -66.96617889]
[-70.16527557 -61.40393448]
[-62.03104401 -48.80098724]
[-62.69992065 -33.81590652]
[-71.92465973 -21.98779869]
[-86.29434204 -17.68880081]
[-72.86688995 -11.00272465]
[-59.43944168 -4.31664944]
[-46.01198959 2.36942601]
[-32.58454132 9.05550098]
[-19.15709114 15.74157619]
[-4.31529379 14.48846245]
[4.58930254 27.56587601]
[18.01675224 34.25195312]
[31.44420052 40.93802643]
[44.93958664 47.48589706]
[58.50148010 53.89487457]
[51.18131638 40.80231094]
[50.14811707 25.83793640]
[55.59947968 11.86358070]
[66.49287415 1.55173969]
[80.74500275 -3.12551904]
[95.63025665 -1.27370250]
[108.30193329 6.75304222]
[116.33666229 19.41965675]
[118.19786072 34.30374146]
[113.52958679 48.55881500]
[103.22460938 59.45870209]
[89.25369263 64.91887665]
[74.28736115 63.89471817]
[85.87641144 73.41805267]
[97.46545410 82.94139099]
[112.41489410 84.17200470]
[125.40527344 76.67200470]
[138.39566040 69.17200470]
[135.82019043 54.25247574]
[138.49952698 39.37991714]
[146.09132385 26.34592056]
[157.66258240 16.71389580]
[171.80439758 11.63153076]
[186.80342102 11.69407272]
[200.84944153 16.87467003]
[212.25386047 26.52995110]
[225.24423218 19.02995110]
[238.23461914 11.52995110]
[243.75903320 -3.53193521]
[259.02423096 -8.46680450]
[272.32009888 0.51095194]
[273.44714355 16.51436806]
[261.54080200 27.26699257]
[245.73461914 24.52033234]
[232.74423218 32.02033234]
[219.75386047 39.52033234]
[222.41336060 54.22449112]
[219.87689209 68.97899628]
[212.43153381 81.99980164]
[200.95916748 91.70578766]
[186.83197021 96.91078949]
[171.74830627 96.96846771]
[157.52861023 91.85256958]
[145.89566040 82.16238403]
[132.90527344 89.66238403]
[119.91489410 97.16238403]
[121.14550018 112.11182404]
[135.18748474 117.38656616]
[149.22946167 122.66130066]
[163.27143860 127.93604279]
[179.35253906 124.72197723]
[189.97180176 137.21849060]
[184.20506287 152.57026672]
[167.98461914 154.98468018]
[157.99668884 141.97802734]
[143.95471191 136.70327759]
[129.91273499 131.42854309]
[115.87075806 126.15380096]
[103.62780762 134.82040405]
[111.64682007 148.45880127]
[104.17246246 161.34225464]
[104.48044586 176.33909607]
[104.78842163 191.33593750]
[105.09639740 206.33276367]
[105.40437317 221.32960510]
[105.71235657 236.32644653]
[106.02033234 251.32328796]
[106.32830811 266.32012939]
[106.63628387 281.31695557]
[106.94426727 296.31381226]
[121.59828186 299.90853882]
[134.82211304 307.17440796]
[145.71414185 317.61596680]
[153.53172302 330.52130127]
[157.74185181 345.01049805]
[158.05747986 360.09570312]
[154.45706177 374.74832153]
[147.18611145 387.96936035]
[136.74034119 398.85736084]
[123.83199310 406.66995239]
[109.34115601 410.87448120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[22 130]
[24 86]
[25 85]
[26 84]
[27 71]
[28 70]
[30 69]
[31 68]
[32 67]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 51]
[41 50]
[42 49]
[43 48]
[87 117]
[88 116]
[89 115]
[97 107]
[98 106]
[99 105]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
