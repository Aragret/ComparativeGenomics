%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGCAGUAAGGGGGGGGGGACUAAGAGUAGAGUGCUUAGUUGAACAGGGCCCUGAAGCGCGUACACACCxxxxxxxxxxUCAAAACCAUACCUCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCACCCCCCCCCCUUAGCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[107.60614777 345.83984375]
[93.11645508 341.63134766]
[80.21022797 333.81524658]
[69.76742554 322.92440796]
[62.50006104 309.70141602]
[58.90363693 295.04779053]
[59.22335815 279.96270752]
[63.43742752 265.47463989]
[71.25852203 252.57142639]
[82.15339661 242.13282776]
[95.37920380 234.87057495]
[110.03419495 231.27980042]
[110.34625244 216.28305054]
[110.65830994 201.28630066]
[110.97035980 186.28955078]
[111.28241730 171.29278564]
[111.59447479 156.29603577]
[111.90653229 141.29928589]
[112.21858978 126.30252838]
[112.53064728 111.30577850]
[102.29216766 115.28703308]
[92.79335022 112.04781342]
[79.40706635 118.81592560]
[66.02078247 125.58403778]
[57.50404739 139.59822083]
[41.11735535 138.95913696]
[33.71793365 124.32422638]
[42.91767502 110.74862671]
[59.25267029 112.19775391]
[72.63895416 105.42964172]
[86.02523804 98.66152191]
[97.32922363 84.77455139]
[115.24954987 92.76889038]
[119.25728607 78.31420135]
[123.26502991 63.85951233]
[127.27276611 49.40482330]
[131.28050232 34.95013428]
[123.75659180 21.31090736]
[128.02693176 6.70889044]
[141.07621765 -0.37995702]
[145.08395386 -14.83464527]
[149.09169006 -29.28933334]
[153.09942627 -43.74402237]
[141.93290710 -56.74205399]
[141.78494263 -74.76824951]
[153.87060547 -89.32238770]
[173.37066650 -92.80793762]
[175.54750061 -107.64913940]
[177.72433472 -122.49034882]
[179.90116882 -137.33155823]
[167.65837097 -148.95764160]
[164.76263428 -165.42263794]
[172.15600586 -180.23155212]
[186.76087952 -187.66142273]
[188.62849426 -202.54470825]
[190.49610901 -217.42797852]
[192.36372375 -232.31126404]
[194.23132324 -247.19453430]
[179.76458740 -251.26530457]
[166.06619263 -257.44686890]
[153.44216919 -265.60110474]
[142.17453003 -275.54583740]
[132.51499939 -287.05892944]
[124.67939758 -299.88317871]
[118.84275055 -313.73202515]
[115.13546753 -328.29617310]
[113.64035797 -343.25015259]
[114.39082336 -358.25997925]
[117.37010956 -372.99026489]
[122.51165009 -387.11196899]
[129.70057678 -400.30957031]
[138.77630615 -412.28826904]
[149.53605652 -422.78042603]
[161.73947144 -431.55163574]
[175.11390686 -438.40597534]
[189.36058044 -443.19030762]
[204.16122437 -445.79776001]
[219.18518066 -446.17004395]
[234.09680176 -444.29888916]
[248.56295776 -440.22604370]
[262.26046753 -434.04254150]
[274.88333130 -425.88653564]
[286.14956665 -415.94018555]
[295.80743408 -404.42568970]
[303.64123535 -391.60034180]
[309.47589111 -377.75064087]
[313.18112183 -363.18600464]
[314.67407227 -348.23178101]
[313.92147827 -333.22207642]
[310.94009399 -318.49221802]
[305.79653931 -304.37124634]
[298.60574341 -291.17465210]
[289.52832031 -279.19726562]
[278.76705933 -268.70663452]
[266.56240845 -259.93716431]
[253.18698120 -253.08471680]
[238.93962097 -248.30241394]
[224.13861084 -245.69708252]
[209.11460876 -245.32693481]
[207.24699402 -230.44364929]
[205.37937927 -215.56036377]
[203.51176453 -200.67709351]
[201.64414978 -185.79380798]
[212.21292114 -177.57814026]
[217.36822510 -165.10681152]
[215.65800476 -151.61141968]
[207.42449951 -140.64682007]
[194.74238586 -135.15472412]
[192.56553650 -120.31351471]
[190.38870239 -105.47230530]
[188.21186829 -90.63110352]
[197.47682190 -78.83445740]
[212.41113281 -77.43215942]
[227.08389282 -84.75622559]
[240.61199951 -75.48680115]
[239.07890320 -59.15946960]
[224.06170654 -52.57039642]
[211.00881958 -62.49784851]
[196.07450867 -63.90015411]
[185.92492676 -45.35780716]
[167.55412292 -39.73628235]
[163.54638672 -25.28159332]
[159.53863525 -10.82690525]
[155.53089905 3.62778330]
[163.06677246 16.42411804]
[159.20826721 31.14031982]
[145.73519897 38.95787430]
[141.72746277 53.41256332]
[137.71971130 67.86724854]
[133.71197510 82.32193756]
[129.70423889 96.77662659]
[127.52739716 111.61783600]
[127.21533966 126.61458588]
[126.90328217 141.61134338]
[126.59123230 156.60809326]
[126.27917480 171.60484314]
[125.96711731 186.60160828]
[125.65505981 201.59835815]
[125.34300232 216.59510803]
[125.03094482 231.59185791]
[139.52388000 235.78915405]
[152.43614197 243.59529114]
[162.88735962 254.47805786]
[170.16493225 267.69546509]
[173.77267456 282.34628296]
[173.46459961 297.43161011]
[169.26171875 311.92294312]
[161.45057678 324.83218384]
[150.56378174 335.27917480]
[137.34358215 342.55163574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[22 31]
[23 30]
[24 29]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[40 124]
[41 123]
[42 122]
[43 121]
[47 111]
[48 110]
[49 109]
[50 108]
[54 103]
[55 102]
[56 101]
[57 100]
[58 99]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
