%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAAUCCUAGGGGGGGGGGUUCUAGAGUCCAUAUCAACAAUAGGGUUUACGACCUCGAUGUUGGAUCAGxxxxxxxxxxCCUAACAUAACCAUUCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCCCCCCCCCCCGCAUUCCUA\
) } def
/len { sequence length } bind def

/coor [
[85.52590942 649.75689697]
[72.30570984 642.48443604]
[61.41890717 632.03741455]
[53.60777664 619.12817383]
[49.40489578 604.63684082]
[49.09682465 589.55151367]
[52.70456314 574.90069580]
[59.98213577 561.68328857]
[70.43334198 550.80053711]
[83.34560394 542.99438477]
[97.83854675 538.79711914]
[97.52648926 523.80035400]
[97.21443176 508.80358887]
[96.90237427 493.80682373]
[96.59031677 478.81008911]
[96.27825928 463.81332397]
[95.96620941 448.81655884]
[95.65415192 433.81982422]
[95.34209442 418.82305908]
[95.03003693 403.82629395]
[94.71797943 388.82955933]
[83.82477570 378.73629761]
[83.29467010 363.53192139]
[93.95525360 352.17456055]
[93.64319611 337.17779541]
[93.33113861 322.18103027]
[78.61566162 319.39709473]
[64.79525757 313.61199951]
[52.47496033 305.07638550]
[42.19469070 294.16137695]
[34.40557098 281.34237671]
[29.45015144 267.17846680]
[27.54733086 252.28796387]
[28.78269577 237.32141113]
[33.10467148 222.93322754]
[40.32666779 209.75302124]
[50.13514328 198.35807800]
[62.10320282 189.24806213]
[75.70919037 182.82312012]
[90.35941315 179.36628723]
[90.04736328 164.36953735]
[89.73530579 149.37278748]
[89.42324829 134.37602234]
[89.11119080 119.37927246]
[75.55069733 86.83193970]
[71.24311066 72.46375275]
[66.93552399 58.09556961]
[62.62794113 43.72738266]
[55.52495956 47.37432480]
[46.30879974 47.85127258]
[36.31203461 44.33766937]
[24.81023026 34.70914459]
[8.57239437 32.41464233]
[2.69235921 17.10591316]
[13.21900082 4.53126240]
[29.32341194 7.62641335]
[34.43875504 23.20734024]
[45.94055939 32.83586502]
[59.25571442 25.92886734]
[58.00884247 10.98078156]
[56.76196671 -3.96730590]
[55.51509094 -18.91539192]
[54.26821899 -33.86347961]
[53.02134323 -48.81156540]
[51.77446747 -63.75965500]
[37.14210510 -67.71816254]
[24.74785995 -76.44504547]
[16.08839417 -88.88648224]
[12.20938301 -103.54012299]
[13.57923508 -118.63645935]
[20.03253365 -132.35253906]
[30.79001236 -143.03207397]
[44.55265427 -149.38545227]
[59.65855026 -150.64549255]
[74.28359222 -146.66001892]
[86.66173553 -137.91032410]
[95.29825592 -125.45294189]
[99.15025330 -110.79217529]
[97.75258636 -95.69839478]
[91.27402496 -81.99423218]
[80.49687958 -71.33454132]
[66.72255707 -65.00653076]
[67.96942902 -50.05844116]
[69.21630096 -35.11035538]
[70.46318054 -20.16226768]
[71.71005249 -5.21418047]
[72.95692444 9.73390675]
[74.20380402 24.68199348]
[76.99612427 39.41979980]
[81.30371094 53.78798294]
[85.61129761 68.15616608]
[89.91888428 82.52435303]
[104.24147797 86.98117065]
[115.94110107 77.59400940]
[127.64072418 68.20684052]
[136.21098328 53.57855225]
[152.64009094 57.76436996]
[153.16587830 74.71015930]
[137.02789307 79.90647125]
[125.32826233 89.29363251]
[113.62863922 98.68079376]
[128.55143738 100.20066833]
[135.95504761 113.24622345]
[129.60795593 126.83718872]
[114.85241699 129.53424072]
[104.10794830 119.06721497]
[104.41999817 134.06396484]
[104.73205566 149.06072998]
[105.04411316 164.05747986]
[105.35617065 179.05422974]
[120.13751221 181.89865112]
[133.99899292 187.75204468]
[146.33566284 196.35630798]
[156.60964966 207.33337402]
[164.37367249 220.20175171]
[169.29043579 234.39768982]
[171.14732361 249.29989624]
[169.86557007 264.25668335]
[165.50363159 278.61444092]
[158.25450134 291.74636841]
[148.43717957 303.07958984]
[136.48262024 312.12030029]
[122.91482544 318.47531128]
[108.32789612 321.86898804]
[108.63995361 336.86575317]
[108.95201111 351.86248779]
[120.07581329 362.76657104]
[120.17864990 377.97985840]
[109.71473694 388.51748657]
[110.02679443 403.51425171]
[110.33884430 418.51101685]
[110.65090179 433.50775146]
[110.96295929 448.50451660]
[111.27501678 463.50125122]
[111.58707428 478.49801636]
[111.89913177 493.49478149]
[112.21118164 508.49151611]
[112.52323914 523.48828125]
[112.83529663 538.48504639]
[127.49028778 542.07580566]
[140.71609497 549.33807373]
[151.61096191 559.77667236]
[159.43206787 572.67987061]
[163.64613342 587.16790771]
[163.96585083 602.25305176]
[160.36943054 616.90661621]
[153.10206604 630.12963867]
[142.65927124 641.02044678]
[129.75303650 648.83660889]
[115.26334381 653.04504395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 126]
[25 125]
[26 124]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[45 92]
[46 91]
[47 90]
[48 89]
[51 58]
[52 57]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
