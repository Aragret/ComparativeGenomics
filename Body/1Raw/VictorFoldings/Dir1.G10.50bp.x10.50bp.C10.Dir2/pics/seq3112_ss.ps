%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUAAAUGAUGGGGGGGGGGAUCAUCUCAACUUAGUAUUAUACCCACACCCACCCAAGAACAGGGUUUGUxxxxxxxxxxUCACCAGACGCCUCAACCGCCUUUUCAUCAAUCGCCCACAUCACUCGAGACCCCCCCCCCCGUAAAUUAU\
) } def
/len { sequence length } bind def

/coor [
[85.28728485 348.17562866]
[71.44134521 342.15960693]
[59.73268509 332.63018799]
[51.03016281 320.29452515]
[45.97956085 306.06799316]
[44.95566940 291.00631714]
[48.03446960 276.22714233]
[54.98748779 262.82720947]
[65.29877472 251.80088806]
[78.20315552 243.96638489]
[92.74304199 239.90505981]
[92.74304199 224.90505981]
[92.74304199 209.90505981]
[92.74304199 194.90505981]
[92.74304199 179.90505981]
[92.74304199 164.90505981]
[92.74304199 149.90505981]
[92.74304199 134.90505981]
[92.74304199 119.90506744]
[92.74304199 104.90506744]
[90.71244812 102.53639221]
[89.52348328 99.35817719]
[89.48427582 95.69014740]
[90.77687073 91.96360016]
[93.41893005 88.67117310]
[94.66580963 73.72308350]
[95.91268158 58.77500153]
[97.15955353 43.82691193]
[82.31430817 41.64332581]
[67.63545990 38.53190613]
[53.18094635 34.50492859]
[39.00781250 29.57829094]
[25.17199516 23.77143097]
[11.72809696 17.10726929]
[-1.27082634 9.61210632]
[-13.77347183 1.31552136]
[-25.73049736 -7.74974251]
[-37.09471512 -17.54790878]
[-47.82127380 -28.04030800]
[-57.86783981 -39.18553162]
[-67.19476318 -50.93959045]
[-75.76523590 -63.25610352]
[-83.54543304 -76.08645630]
[-90.50465393 -89.38002014]
[-96.61543274 -103.08432007]
[-101.85364532 -117.14527893]
[-106.19862366 -131.50740051]
[-109.63321686 -146.11401367]
[-112.14387512 -160.90745544]
[-113.72068787 -175.82936096]
[-114.35743713 -190.82083130]
[-114.05159760 -205.82269287]
[-112.80438995 -220.77574158]
[-110.62072754 -235.62098694]
[-107.50923157 -250.29981995]
[-103.48217773 -264.75430298]
[-98.55546570 -278.92742920]
[-92.74853516 -292.76321411]
[-86.08429718 -306.20706177]
[-78.58907318 -319.20596313]
[-70.29241943 -331.70855713]
[-61.22709274 -343.66552734]
[-51.42886734 -355.02969360]
[-40.93641281 -365.75619507]
[-29.79113770 -375.80270386]
[-18.03702736 -385.12957764]
[-5.72047186 -393.69998169]
[7.10992289 -401.48010254]
[20.40351868 -408.43927002]
[34.10785294 -414.54995728]
[48.16884232 -419.78811646]
[62.53099060 -424.13302612]
[77.13761902 -427.56753540]
[91.93107605 -430.07812500]
[106.85298157 -431.65484619]
[121.84445190 -432.29150391]
[136.84631348 -431.98559570]
[151.79936218 -430.73831177]
[166.64459229 -428.55456543]
[181.32341003 -425.44299316]
[195.77787781 -421.41586304]
[209.95095825 -416.48907471]
[223.78671265 -410.68206787]
[237.23054504 -404.01779175]
[250.22938538 -396.52249146]
[262.73196411 -388.22576904]
[274.68887329 -379.16036987]
[286.05300903 -369.36209106]
[296.77944946 -358.86956787]
[306.82589722 -347.72424316]
[316.15270996 -335.97009277]
[324.72305298 -323.65350342]
[332.50311279 -310.82305908]
[339.46218872 -297.52941895]
[345.57281494 -283.82507324]
[350.81088257 -269.76403809]
[355.15570068 -255.40187073]
[358.59014893 -240.79522705]
[361.10067749 -226.00175476]
[362.67733765 -211.07983398]
[363.31390381 -196.08836365]
[363.00790405 -181.08650208]
[361.76055908 -166.13346863]
[359.57672119 -151.28823853]
[356.46508789 -136.60945129]
[352.43786621 -122.15499878]
[347.51101685 -107.98194122]
[341.70394897 -94.14621735]
[335.03958130 -80.70242310]
[327.54421997 -67.70361328]
[319.24743652 -55.20109940]
[310.18197632 -43.24421310]
[300.38363647 -31.88015175]
[289.89105225 -21.15375710]
[278.74569702 -11.10736656]
[266.99148560 -1.78062594]
[254.67483521 6.78965521]
[241.84436035 14.56965351]
[228.55068970 21.52866554]
[214.84628296 27.63922501]
[200.78524780 32.87721634]
[186.42304993 37.22196960]
[171.81639099 40.65633774]
[157.02290344 43.16676712]
[142.10098267 44.74334717]
[127.10950470 45.37985992]
[112.10764313 45.07378769]
[110.86077118 60.02187347]
[109.61389160 74.96996307]
[108.36701965 89.91804504]
[107.74304199 104.90506744]
[107.74304199 119.90506744]
[107.74304199 134.90505981]
[107.74304199 149.90505981]
[107.74304199 164.90505981]
[107.74304199 179.90505981]
[107.74304199 194.90505981]
[107.74304199 209.90505981]
[107.74304199 224.90505981]
[107.74304199 239.90505981]
[122.28292847 243.96638489]
[135.18731689 251.80088806]
[145.49859619 262.82720947]
[152.45161438 276.22714233]
[155.53041077 291.00631714]
[154.50653076 306.06799316]
[149.45591736 320.29452515]
[140.75340271 332.63018799]
[129.04473877 342.15960693]
[115.19879913 348.17562866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[25 130]
[26 129]
[27 128]
[28 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
