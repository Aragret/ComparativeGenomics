%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUCAUUCUCAGGGGGGGGGGACCCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAxxxxxxxxxxCCUCGUAGUAACAGCCAUUCUCAUCCAAACCCCCUGAAGCUUCACCGGCGCCCCCCCCCCCAGUCAUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 431.82788086]
[70.87159729 426.67285156]
[58.28185654 418.39065552]
[47.94191742 407.42788696]
[40.40940475 394.37576294]
[36.09054184 379.93817139]
[35.21823120 364.89370728]
[37.83952332 350.05371094]
[43.81304932 336.21847534]
[52.81666565 324.13412476]
[64.36482239 314.45233154]
[77.83473969 307.69525146]
[92.50000000 304.22729492]
[92.50000000 289.22729492]
[92.50000000 274.22729492]
[92.50000000 259.22729492]
[92.50000000 244.22727966]
[92.50000000 229.22727966]
[92.50000000 214.22727966]
[92.50000000 199.22727966]
[92.50000000 184.22727966]
[92.50000000 169.22727966]
[81.81912994 158.90960693]
[81.60544586 143.69746399]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[83.18924713 64.19617462]
[69.29560852 69.85009003]
[54.41867447 67.93257141]
[42.41279602 58.94041824]
[36.38848114 45.20332718]
[37.90652466 30.28034019]
[46.57362366 18.03773499]
[60.14429092 11.64735222]
[75.10260773 12.76482677]
[87.57314301 21.10063934]
[94.32457733 34.49313736]
[97.34405518 19.80018616]
[100.36353302 5.10723782]
[85.95322418 0.91327554]
[71.92711639 -4.42664289]
[58.37618637 -10.87788582]
[45.38830948 -18.39861488]
[33.04771805 -26.94005203]
[21.43445015 -36.44680405]
[10.62382126 -46.85721207]
[0.68594533 -58.10376740]
[-8.31472683 -70.11351776]
[-16.31982231 -82.80858612]
[-23.27742386 -96.10663605]
[-29.14240646 -109.92142487]
[-33.87673569 -124.16335297]
[-37.44970322 -138.74005127]
[-39.83814240 -153.55699158]
[-41.02655792 -168.51806641]
[-41.00724411 -183.52627563]
[-39.78033066 -198.48423767]
[-37.35376740 -213.29498291]
[-33.74329376 -227.86244202]
[-28.97232628 -242.09213257]
[-23.07180786 -255.89178467]
[-16.08000565 -269.17187500]
[-8.04226494 -281.84631348]
[0.98928630 -293.83285522]
[10.95607376 -305.05380249]
[21.79345894 -315.43634033]
[33.43115616 -324.91317749]
[45.79368591 -333.42282104]
[58.80087662 -340.91009521]
[72.36837006 -347.32644653]
[86.40817261 -352.63024902]
[100.82922363 -356.78710938]
[115.53800964 -359.77008057]
[130.43911743 -361.55978394]
[145.43592834 -362.14465332]
[160.43116760 -361.52087402]
[175.32759094 -359.69247437]
[190.02857971 -356.67135620]
[204.43879700 -352.47708130]
[218.46478271 -347.13684082]
[232.01557922 -340.68530273]
[245.00328064 -333.16427612]
[257.34368896 -324.62258911]
[268.95675659 -315.11557007]
[279.76715088 -304.70492554]
[289.70477295 -293.45816040]
[298.70516968 -281.44821167]
[306.70999146 -268.75296021]
[313.66729736 -255.45474243]
[319.53198242 -241.63983154]
[324.26599121 -227.39781189]
[327.83865356 -212.82102966]
[330.22674561 -198.00402832]
[331.41485596 -183.04292297]
[331.39520264 -168.03472900]
[330.16793823 -153.07678223]
[327.74105835 -138.26609802]
[324.13027954 -123.69871521]
[319.35897827 -109.46912384]
[313.45816040 -95.66960907]
[306.46606445 -82.38966370]
[298.42803955 -69.71541595]
[289.39624023 -57.72906494]
[279.42919922 -46.50834656]
[268.59158325 -36.12603378]
[256.95367432 -26.64945793]
[244.59095764 -18.14008141]
[231.58360291 -10.65309048]
[218.01597595 -4.23704290]
[203.97605896 1.06645036]
[189.55491638 5.22299385]
[174.84606934 8.20563030]
[159.94490051 9.99501705]
[144.94808960 10.57954693]
[129.95286560 9.95543098]
[115.05648041 8.12671566]
[112.03700256 22.81966400]
[109.01752472 37.51261520]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[118.39455414 143.69746399]
[118.18087006 158.90960693]
[107.50000000 169.22727966]
[107.50000000 184.22727966]
[107.50000000 199.22727966]
[107.50000000 214.22727966]
[107.50000000 229.22727966]
[107.50000000 244.22727966]
[107.50000000 259.22729492]
[107.50000000 274.22729492]
[107.50000000 289.22729492]
[107.50000000 304.22729492]
[122.16526031 307.69525146]
[135.63517761 314.45233154]
[147.18333435 324.13412476]
[156.18695068 336.21847534]
[162.16047668 350.05371094]
[164.78176880 364.89370728]
[163.90945435 379.93817139]
[159.59059143 394.37576294]
[152.05809021 407.42788696]
[141.71813965 418.39065552]
[129.12840271 426.67285156]
[114.96779633 431.82788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[25 130]
[26 129]
[29 126]
[30 125]
[31 124]
[42 123]
[43 122]
[44 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
