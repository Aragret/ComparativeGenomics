%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCCCUUAGGGGGGGGGGUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUCCxxxxxxxxxxAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAGCUAACAUGACUCCCCCCCCCCAACACCCUUA\
) } def
/len { sequence length } bind def

/coor [
[82.93595123 343.12905884]
[69.71575928 335.85659790]
[58.82895279 325.40957642]
[51.01782227 312.50033569]
[46.81494141 298.00903320]
[46.50686646 282.92367554]
[50.11460876 268.27285767]
[57.39218140 255.05546570]
[67.84339142 244.17269897]
[80.75565338 236.36654663]
[95.24858856 232.16926575]
[94.93653107 217.17251587]
[94.62447357 202.17576599]
[94.31241608 187.17900085]
[94.00036621 172.18225098]
[93.68830872 157.18550110]
[93.37625122 142.18875122]
[93.06419373 127.19199371]
[92.75213623 112.19523621]
[90.26702118 97.40252686]
[85.66145325 83.12706757]
[81.05589294 68.85160828]
[76.45032501 54.57614899]
[71.84476471 40.30068970]
[66.19632721 33.03797150]
[67.29521942 25.68011093]
[62.98763657 11.31192684]
[58.68005371 -3.05625725]
[47.24502182 -6.57946777]
[39.03651047 -15.11932850]
[36.03007126 -26.45225143]
[38.86735535 -37.70469666]
[46.72334671 -46.08168411]
[43.01718521 -60.61661911]
[39.31102371 -75.15155792]
[35.60486221 -89.68649292]
[31.89870071 -104.22142792]
[11.05117512 -108.10789490]
[-0.48029742 -134.17398071]
[-7.10879612 -147.62994385]
[-13.73729420 -161.08592224]
[-31.08402443 -156.81338501]
[-48.94145203 -156.66729736]
[-66.34187317 -160.65225220]
[-82.34311676 -168.54911804]
[-96.07955170 -179.92701721]
[-106.80891418 -194.16685486]
[-113.95241547 -210.49499512]
[-117.12599182 -228.02532959]
[-116.16090393 -245.80731201]
[-111.11273956 -262.87753296]
[-102.25820923 -278.31192017]
[-90.07998657 -291.27572632]
[-98.59107971 -303.62731934]
[-107.10216522 -315.97888184]
[-115.61325836 -328.33044434]
[-124.12435150 -340.68203735]
[-132.63543701 -353.03359985]
[-148.08956909 -357.34048462]
[-154.22491455 -372.16403198]
[-146.33496094 -386.13284302]
[-130.47221375 -388.53128052]
[-118.80519867 -377.51943970]
[-120.28386688 -361.54467773]
[-111.77277374 -349.19311523]
[-103.26168823 -336.84155273]
[-94.75059509 -324.48995972]
[-86.23950195 -312.13839722]
[-77.72841644 -299.78683472]
[-66.41810608 -304.90875244]
[-54.42451096 -308.13195801]
[-42.06409454 -309.37033081]
[-29.66317749 -308.59011841]
[-17.54931259 -305.81094360]
[-6.04263830 -301.10519409]
[4.55258751 -294.59619141]
[13.95602798 -286.45498657]
[21.91868591 -276.89581299]
[28.22949600 -266.17041016]
[32.72092438 -254.56156921]
[35.27341080 -242.37545776]
[35.81854630 -229.93368530]
[34.34092712 -217.56477356]
[30.87855530 -205.59550476]
[25.52189445 -194.34225464]
[18.41148758 -184.10261536]
[9.73427200 -175.14761353]
[-0.28132915 -167.71441650]
[6.34716940 -154.25845337]
[12.97566795 -140.80249023]
[20.28011513 -139.10099792]
[30.53139877 -150.05139160]
[34.88900757 -135.69801331]
[42.19345474 -133.99652100]
[54.08583450 -143.13825989]
[59.84489059 -158.49290466]
[76.06411743 -160.91546631]
[86.05856323 -147.91380310]
[79.54679871 -132.86293030]
[63.22756577 -131.24588013]
[51.33518600 -122.10414886]
[46.43363571 -107.92758942]
[50.13979721 -93.39265442]
[53.84595871 -78.85771942]
[57.55212021 -64.32278442]
[61.25828171 -49.78784561]
[77.51177979 -41.46791458]
[82.67368317 -23.62268639]
[73.04824066 -7.36384201]
[77.35581970 7.00434208]
[81.66340637 21.37252617]
[86.12022400 35.69512177]
[90.72578430 49.97058487]
[95.33135223 64.24604797]
[99.93691254 78.52150726]
[104.54248047 92.79696655]
[114.43564606 88.36325836]
[126.84818268 90.23744965]
[140.37237549 96.72561646]
[153.45188904 88.54454041]
[168.87779236 88.75634766]
[181.72775269 97.29344940]
[187.90138245 111.43168640]
[185.42871094 126.65959930]
[175.09873962 138.11802673]
[160.20774841 142.15060425]
[145.50738525 137.47056580]
[135.68847656 125.57129669]
[133.88421631 110.24980164]
[120.36002350 103.76164246]
[107.74889374 111.88317871]
[108.06095123 126.87993622]
[108.37300110 141.87669373]
[108.68505859 156.87344360]
[108.99711609 171.87019348]
[109.30917358 186.86694336]
[109.62123108 201.86370850]
[109.93328857 216.86045837]
[110.24533844 231.85720825]
[124.90033722 235.44798279]
[138.12614441 242.71023560]
[149.02101135 253.14883423]
[156.84210205 266.05203247]
[161.05618286 280.54010010]
[161.37590027 295.62521362]
[157.77947998 310.27880859]
[150.51211548 323.50180054]
[140.06930542 334.39263916]
[127.16307831 342.20877075]
[112.67338562 346.41723633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[26 111]
[27 110]
[28 109]
[33 106]
[34 105]
[35 104]
[36 103]
[37 102]
[39 90]
[40 89]
[41 88]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[94 101]
[95 100]
[118 130]
[119 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
