%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCCAAACGGGGGGGGGGAUCACUUUGGCUUCGAAGCCGCCGCCUGAUACUGGCAUUUUGUAGAUGUGxxxxxxxxxxGUACGGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCCCCCCCCCCCACAUCAAAAC\
) } def
/len { sequence length } bind def

/coor [
[84.19723511 417.20761108]
[71.63901520 408.85647583]
[61.55279160 397.64401245]
[54.57259750 384.27511597]
[51.13721466 369.59011841]
[51.46258926 354.51214600]
[55.52827454 339.98904419]
[63.07869339 326.93368530]
[73.63922119 316.16680908]
[86.54602051 308.36517334]
[100.98774719 304.01922607]
[100.36376953 289.03219604]
[99.73979187 274.04519653]
[99.11581421 259.05816650]
[98.49183655 244.07115173]
[97.86785889 229.08413696]
[97.24388123 214.09712219]
[96.61990356 199.11010742]
[95.99592590 184.12309265]
[95.37194824 169.13607788]
[94.74797058 154.14906311]
[94.12399292 139.16203308]
[87.97174835 138.57382202]
[81.86692810 137.00720215]
[75.96672058 134.46394348]
[70.42871094 130.97123718]
[65.40670776 126.58188629]
[61.04660034 121.37371063]
[57.48224258 115.44831848]
[42.61919403 117.47064972]
[27.75614738 119.49298859]
[12.89310074 121.51531982]
[0.26448545 131.97715759]
[-15.01380634 126.01848602]
[-17.22477722 109.76906586]
[-4.09396982 99.94491577]
[10.87076664 106.65227509]
[25.73381424 104.62994385]
[40.59685898 102.60760498]
[55.45990753 100.58527374]
[57.79101181 85.76751709]
[44.26682281 79.27935028]
[30.74263191 72.79118347]
[18.11086082 81.52811432]
[2.80166411 82.76264191]
[-11.06686306 76.16267395]
[-19.76415634 63.50358200]
[-20.95068741 48.19058990]
[-14.30728626 34.34281921]
[-1.62099302 25.68524742]
[13.69564247 24.54672050]
[27.52252197 31.23349571]
[36.14028549 43.94686508]
[37.23079681 59.26699448]
[50.75498581 65.75515747]
[64.27917480 72.24332428]
[89.13171387 58.99709320]
[115.12899017 63.40346527]
[123.38127899 50.87750244]
[131.63357544 38.35153961]
[139.88586426 25.82557869]
[139.97843933 21.33637810]
[141.38824463 17.51753998]
[143.73098755 14.70802212]
[146.55072021 13.08225536]
[149.38139343 12.64108181]
[158.64633179 0.84444177]
[167.91128540 -10.95219803]
[177.17623901 -22.74883842]
[163.09712219 -17.57404709]
[148.24316406 -15.48598385]
[133.28302002 -16.57864189]
[118.89009094 -20.80283356]
[105.71228790 -27.96841049]
[94.34279633 -37.75281906]
[85.29340363 -49.71561432]
[78.97147369 -63.31830597]
[75.66156769 -77.94856262]
[75.51270294 -92.94783020]
[78.53155518 -107.64090729]
[84.58225250 -121.36639404]
[93.39241791 -133.50645447]
[104.56546021 -143.51460266]
[117.59844208 -150.94032288]
[131.90467834 -155.44937134]
[146.84019470 -156.83874512]
[161.73268127 -155.04592896]
[175.91172791 -150.15159607]
[188.73910522 -142.37609863]
[199.63737488 -132.06942749]
[208.11598206 -119.69552612]
[213.79322815 -105.81140137]
[216.41358948 -91.04205322]
[215.85910034 -76.05230713]
[212.15472412 -61.51691818]
[205.46719360 -48.09019089]
[196.09596252 -36.37490082]
[210.22076416 -41.42365646]
[224.34556580 -46.47241211]
[228.98048401 -51.33296585]
[234.54316711 -52.84556198]
[239.16429138 -51.42402267]
[253.48687744 -55.88083649]
[262.19100952 -69.35739136]
[278.16806030 -70.81127930]
[289.16177368 -59.12720490]
[286.73873901 -43.26818848]
[272.75769043 -35.39990997]
[257.94369507 -41.55823898]
[243.62109375 -37.10142517]
[229.39431763 -32.34761047]
[215.26951599 -27.29885292]
[201.14471436 -22.25009537]
[188.97288513 -13.48388863]
[179.70793152 -1.68724883]
[170.44297791 10.10939121]
[161.17802429 21.90603065]
[152.41181946 34.07786942]
[144.15953064 46.60382843]
[135.90724182 59.12979126]
[127.65495300 71.65575409]
[135.80068970 83.07359314]
[139.45545959 96.61473846]
[138.16078186 110.58054352]
[132.07907104 123.21909332]
[121.97324371 132.94494629]
[109.11101532 138.53807068]
[109.73498535 153.52508545]
[110.35896301 168.51210022]
[110.98294067 183.49911499]
[111.60691833 198.48612976]
[112.23089600 213.47314453]
[112.85487366 228.46015930]
[113.47885132 243.44717407]
[114.10282898 258.43420410]
[114.72680664 273.42120361]
[115.35078430 288.40823364]
[115.97476196 303.39523315]
[130.72776794 306.52569580]
[144.23840332 313.22744751]
[155.65737915 323.07922363]
[164.26689148 335.46176147]
[169.52574158 349.59664917]
[171.10334778 364.59539795]
[168.90054321 379.51513672]
[163.05580139 393.41799927]
[153.93652344 405.43005371]
[142.11595154 414.79620361]
[128.33714294 420.92770386]
[113.46623230 423.43908691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[29 40]
[30 39]
[31 38]
[32 37]
[41 56]
[42 55]
[43 54]
[58 121]
[59 120]
[60 119]
[61 118]
[66 117]
[67 116]
[68 115]
[69 114]
[97 113]
[98 112]
[99 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
