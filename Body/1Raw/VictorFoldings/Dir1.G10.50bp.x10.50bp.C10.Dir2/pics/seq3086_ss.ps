%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUACUUCAGGGGGGGGGGCAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCxxxxxxxxxxCAAUCGGCAUCAACCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACCCCCCCCCCCGCCUUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[-2.41010451 366.96585083]
[-16.95762253 360.92053223]
[-31.15011978 354.08316040]
[-44.94451141 346.47451782]
[-58.29892731 338.11773682]
[-71.17283630 329.03811646]
[-83.52714539 319.26327515]
[-95.32436371 308.82287598]
[-106.52867889 297.74859619]
[-117.10608673 286.07403564]
[-127.02446747 273.83468628]
[-136.25372314 261.06762695]
[-148.86485291 269.18917847]
[-161.47598267 277.31072998]
[-174.08709717 285.43225098]
[-186.69822693 293.55380249]
[-199.30935669 301.67535400]
[-211.92048645 309.79687500]
[-224.53161621 317.91842651]
[-237.14274597 326.03997803]
[-249.75387573 334.16149902]
[-254.54087830 349.47372437]
[-269.54864502 355.14355469]
[-283.26446533 346.82156372]
[-285.16677856 330.89169312]
[-273.79626465 319.57397461]
[-257.87542725 321.55038452]
[-245.26428223 313.42883301]
[-232.65315247 305.30731201]
[-220.04203796 297.18576050]
[-207.43090820 289.06420898]
[-194.81977844 280.94265747]
[-182.20864868 272.82113647]
[-169.59751892 264.69958496]
[-156.98638916 256.57803345]
[-144.37525940 248.45649719]
[-151.56323242 235.92108154]
[-158.10874939 223.03851318]
[-163.99507141 209.84172058]
[-169.20716858 196.36441040]
[-173.73175049 182.64099121]
[-177.55723572 168.70651245]
[-180.67385864 154.59657288]
[-183.07368469 140.34718323]
[-184.75054932 125.99475861]
[-185.70019531 111.57594299]
[-185.92018127 97.12756348]
[-185.40995789 82.68652344]
[-184.17082214 68.28969574]
[-182.20594788 53.97385788]
[-179.52033997 39.77556610]
[-176.12086487 25.73108101]
[-172.01618958 11.87627125]
[-167.21682739 -1.75347793]
[-161.73500061 -15.12335777]
[-155.58474731 -28.19922447]
[-148.78173828 -40.94768143]
[-141.34336853 -53.33617020]
[-133.28863525 -65.33305359]
[-124.63809204 -76.90769196]
[-115.41384888 -88.03051758]
[-105.63945770 -98.67313385]
[-95.33988190 -108.80836487]
[-84.54142761 -118.41030884]
[-73.27167511 -127.45446014]
[-61.55939484 -135.91770935]
[-49.43450928 -143.77844238]
[-36.92798233 -151.01658630]
[-24.07175446 -157.61366272]
[-10.89865780 -163.55282593]
[2.55766344 -168.81887817]
[16.26284409 -173.39840698]
[30.18188095 -177.27969360]
[44.27922821 -180.45285034]
[58.51887894 -182.90972900]
[72.86447144 -184.64410400]
[87.27936554 -185.65151978]
[101.72674561 -185.92939758]
[116.16971588 -185.47705078]
[130.57139587 -184.29560852]
[144.89498901 -182.38810730]
[159.10392761 -179.75941467]
[173.16192627 -176.41622925]
[187.03306580 -172.36711121]
[200.68193054 -167.62240601]
[214.07366943 -162.19419861]
[227.17408752 -156.09637451]
[239.94969177 -149.34451294]
[252.36788940 -141.95584106]
[264.39694214 -133.94923401]
[276.00616455 -125.34514618]
[287.16586304 -116.16555023]
[297.84756470 -106.43387604]
[308.02395630 -96.17499542]
[317.66909790 -85.41510773]
[326.75833130 -74.18167877]
[335.26846313 -62.50340652]
[343.17770386 -50.41011810]
[350.46591187 -37.93269348]
[357.11444092 -25.10300255]
[363.10635376 -11.95380974]
[368.42626953 1.48130310]
[373.06069946 15.16802311]
[376.99771118 29.07139778]
[380.22732544 43.15591431]
[382.74124146 57.38560867]
[384.53308105 71.72413635]
[399.49334717 70.63282776]
[414.45358276 69.54151154]
[427.71017456 59.88776016]
[442.58703613 66.78781891]
[443.78015137 83.14350891]
[430.06210327 92.12949371]
[415.54489136 84.50176239]
[400.58465576 85.59307098]
[385.62438965 86.68438721]
[385.92425537 102.43515015]
[385.35617065 118.17852020]
[383.92190552 133.86671448]
[381.62579346 149.45210266]
[378.47482300 164.88739014]
[374.47854614 180.12570190]
[369.64910889 195.12080383]
[364.00112915 209.82716370]
[357.55178833 224.20013428]
[350.32067871 238.19612122]
[342.32968140 251.77259827]
[333.60314941 264.88836670]
[324.16748047 277.50363159]
[314.05136108 289.58010864]
[303.28552246 301.08108521]
[291.90258789 311.97171021]
[279.93713379 322.21887207]
[267.42550659 331.79150391]
[254.40563965 340.66055298]
[240.91708374 348.79907227]
[227.00077820 356.18237305]
[212.69897461 362.78802490]
[198.05506897 368.59597778]
[183.11351013 373.58865356]
[167.91967773 377.75082397]
[152.51966858 381.06988525]
[136.96023560 383.53579712]
[121.28861237 385.14102173]
[105.55236816 385.88070679]
[89.79927063 385.75259399]
[74.07713318 384.75711060]
[58.43368912 382.89721680]
[42.91641617 380.17861938]
[27.57242203 376.60955811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
