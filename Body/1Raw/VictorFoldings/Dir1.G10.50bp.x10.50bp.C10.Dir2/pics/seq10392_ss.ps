%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUACCCCCGGGGGGGGGGCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCUxxxxxxxxxxAUCCUACCUCCAUCGCUAACCCCACUAAAACACUCACCAAGACCUCAACCCCCCCCCCCCCCUGACCCCC\
) } def
/len { sequence length } bind def

/coor [
[44.42316437 335.82983398]
[32.34629440 332.65310669]
[20.44914436 328.85836792]
[8.76331139 324.45571899]
[-2.68016171 319.45678711]
[-13.85087585 313.87490845]
[-21.30578613 326.89120483]
[-28.76069641 339.90753174]
[-36.21560669 352.92382812]
[-43.67051697 365.94015503]
[-43.07260132 382.32839966]
[-57.10813141 390.80990601]
[-71.33855438 382.65960693]
[-71.12483215 366.26187134]
[-56.68682480 358.48522949]
[-49.23191452 345.46893311]
[-41.77700424 332.45260620]
[-34.32209396 319.43630981]
[-26.86718559 306.41998291]
[-44.94211197 294.15530396]
[-61.83900833 280.31259155]
[-77.42054749 265.00439453]
[-91.56008911 248.35508728]
[-104.14270020 230.50001526]
[-115.06613159 211.58428955]
[-124.24159241 191.76167297]
[-131.59451294 171.19323730]
[-137.06512451 150.04618835]
[-140.60897827 128.49237061]
[-142.19726562 106.70698547]
[-141.81706238 84.86708069]
[-139.47148132 63.15018082]
[-135.17956543 41.73277664]
[-128.97621155 20.78894424]
[-120.91183472 0.48890623]
[-111.05197906 -19.00234604]
[-99.47678375 -37.52639771]
[-111.55677032 -46.41874695]
[-123.63675690 -55.31109619]
[-135.71675110 -64.20344543]
[-147.79673767 -73.09579468]
[-159.87672424 -81.98814392]
[-171.95671082 -90.88049316]
[-172.69039917 -75.89845276]
[-184.73542786 -66.95879364]
[-199.28784180 -70.59569550]
[-205.71101379 -84.15087128]
[-199.31013489 -97.71658325]
[-184.76435852 -101.37752533]
[-195.85566711 -111.47618103]
[-206.94697571 -121.57482910]
[-222.11479187 -118.30114746]
[-236.29641724 -124.59888458]
[-244.03869629 -138.04643250]
[-242.36459351 -153.47293091]
[-231.91783142 -164.94659424]
[-216.71539307 -168.05554199]
[-202.60293579 -161.60432434]
[-195.00698853 -148.07357788]
[-196.84832764 -132.66613770]
[-185.75701904 -122.56748962]
[-174.66569519 -112.46884155]
[-163.06436157 -102.96048737]
[-150.98437500 -94.06813812]
[-138.90438843 -85.17578888]
[-126.82439423 -76.28343201]
[-114.74440765 -67.39108276]
[-102.66442108 -58.49873734]
[-90.58443451 -49.60638809]
[-82.62311554 -59.22718048]
[-74.17667389 -68.42500305]
[-65.26755524 -77.17542267]
[-55.91942215 -85.45519257]
[-46.15710449 -93.24232483]
[-36.00653839 -100.51612854]
[-25.49468231 -107.25728607]
[-14.64946270 -113.44787598]
[-3.49969006 -119.07147217]
[7.92501879 -124.11312866]
[19.59431458 -128.55944824]
[31.47719955 -132.39862061]
[43.54211044 -135.62046814]
[55.75699234 -138.21640015]
[68.08940125 -140.17953491]
[80.50657654 -141.50466919]
[92.97554016 -142.18826294]
[105.46315765 -142.22851562]
[117.93626404 -141.62530518]
[130.36172485 -140.38024902]
[142.70652771 -138.49664307]
[154.93789673 -135.97949219]
[167.02331543 -132.83549500]
[178.93070984 -129.07299805]
[190.62841797 -124.70198822]
[202.08538818 -119.73408508]
[213.27117920 -114.18247986]
[224.15608215 -108.06192017]
[234.71118164 -101.38867188]
[244.90841675 -94.18045044]
[254.72073364 -86.45640564]
[264.12203979 -78.23706818]
[273.08737183 -69.54425812]
[281.59292603 -60.40106964]
[289.61608887 -50.83179474]
[297.13558960 -40.86185074]
[304.13137817 -30.51772499]
[310.58493042 -19.82689095]
[316.47909546 -8.81774902]
[321.79818726 2.48045516]
[326.52810669 14.03770924]
[330.65628052 25.82331467]
[334.17172241 37.80596161]
[337.06512451 49.95381927]
[339.32879639 62.23461914]
[340.95669556 74.61573792]
[341.94454956 87.06429291]
[342.28967285 99.54720306]
[341.99121094 112.03131866]
[341.04989624 124.48347473]
[339.46826172 136.87059021]
[337.25051880 149.15977478]
[334.40255737 161.31835938]
[330.93191528 173.31405640]
[326.84780884 185.11502075]
[322.16113281 196.68986511]
[316.88427734 208.00787354]
[311.03131104 219.03897095]
[304.61776733 229.75384521]
[297.66067505 240.12405396]
[290.17852783 250.12202454]
[282.19119263 259.72122192]
[273.71987915 268.89614868]
[264.78707886 277.62240601]
[255.41654968 285.87683105]
[245.63317871 293.63748169]
[235.46295166 300.88375854]
[224.93287659 307.59643555]
[214.07092285 313.75762939]
[202.90596008 319.35098267]
[191.46763611 324.36169434]
[179.78634644 328.77639771]
[167.89311218 332.58337402]
[155.81951904 335.77252197]
[143.59764099 338.33535767]
[131.25996399 340.26507568]
[118.83924103 341.55657959]
[106.36847687 342.20639038]
[93.88079834 342.21282959]
[81.40937042 341.57583618]
[68.98732758 340.29711914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[49 62]
[50 61]
[51 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
