%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUAAGACGGGGGGGGGGCCCCGAAACCAGACGAGCUACCUAAGAACAGCUAAAAGAGCACACCCGUCxxxxxxxxxxAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAACCUCCGAGCAGUACCCCCCCCCCCAUGCUAAGAC\
) } def
/len { sequence length } bind def

/coor [
[62.86203384 351.44155884]
[50.30381393 343.09042358]
[40.21759033 331.87796021]
[33.23739624 318.50906372]
[29.80201149 303.82406616]
[30.12738800 288.74609375]
[34.19307327 274.22299194]
[41.74349213 261.16763306]
[52.30402374 250.40074158]
[65.21081543 242.59912109]
[79.65254211 238.25315857]
[79.02856445 223.26614380]
[78.40458679 208.27912903]
[77.78060913 193.29211426]
[77.15663910 178.30509949]
[76.53266144 163.31808472]
[75.90868378 148.33106995]
[75.28470612 133.34405518]
[74.66072845 118.35703278]
[69.02877045 104.45447540]
[59.04604340 93.25871277]
[49.06331635 82.06294250]
[39.08058929 70.86717987]
[29.09786415 59.67141342]
[22.85267639 57.20055389]
[19.36216354 52.61278534]
[18.94463539 47.79602432]
[9.43627739 36.19468307]
[-0.07208092 24.59334373]
[-9.58043957 12.99200153]
[-19.20896530 1.49019849]
[-30.60998726 -8.25745392]
[-43.38734436 -16.11487961]
[-56.16469955 -23.97230530]
[-68.94206238 -31.82973099]
[-82.66210938 -37.89274216]
[-97.07432556 -42.05063248]
[-111.48654175 -46.20851898]
[-125.89875793 -50.36640549]
[-136.90847778 -39.65745163]
[-151.80157471 -35.90364456]
[-166.57189941 -40.11473465]
[-177.24629211 -51.15796661]
[-180.95339966 -66.06275940]
[-176.69602966 -80.81980896]
[-165.61938477 -91.45953369]
[-150.70304871 -95.11990356]
[-135.95942688 -90.81629944]
[-125.35446930 -79.70636749]
[-121.74087524 -64.77862549]
[-107.32865906 -60.62073517]
[-92.91644287 -56.46284866]
[-78.50422668 -52.30495834]
[-88.01454163 -63.90469742]
[-92.09365082 -78.33940887]
[-90.06107330 -93.20105743]
[-82.25588226 -106.01039124]
[-69.98015594 -114.63051605]
[-55.28177261 -117.62342072]
[-40.61274338 -114.48979950]
[-28.42019081 -105.75242615]
[-20.73811150 -92.86888123]
[-18.84804535 -77.98844147]
[-23.06529808 -63.59348297]
[-32.68634033 -52.08541489]
[-46.10615921 -45.38404465]
[-61.08463287 -44.60708618]
[-48.30727386 -36.74966049]
[-35.52991867 -28.89223671]
[-22.75256157 -21.03481102]
[-29.18522644 -34.58548737]
[-30.38930893 -49.53708267]
[-26.20800591 -63.94252014]
[-17.18582726 -75.92585754]
[-4.49768877 -83.92655182]
[10.20409393 -86.90271759]
[25.00498009 -84.46678925]
[37.97751999 -76.93597412]
[47.43236542 -65.29097748]
[52.13825607 -51.04827499]
[51.48236847 -36.06262207]
[45.55010986 -22.28552628]
[35.11401367 -11.51111507]
[21.53312492 -5.14248705]
[6.57601309 -4.00899744]
[-7.80794477 -8.25745392]
[-1.02690506 -5.19752741]
[2.02090192 3.48364353]
[11.52926064 15.08498478]
[21.03761864 26.68632507]
[30.54597664 38.28766632]
[40.29362869 49.68868637]
[50.27635574 60.88445282]
[60.25908279 72.08022308]
[70.24180603 83.27598572]
[80.22453308 94.47174835]
[98.00418091 81.71529388]
[114.34026337 92.35041046]
[129.33944702 92.19437408]
[144.33213806 91.72633362]
[159.31185913 90.94648743]
[174.29158020 90.16664124]
[189.27128601 89.38679504]
[204.25100708 88.60695648]
[219.23071289 87.82711029]
[234.21043396 87.04726410]
[240.55105591 73.11689758]
[252.64627075 63.73797226]
[267.71670532 61.06569290]
[282.29922485 65.71412659]
[293.04293823 76.61510468]
[297.47900391 91.26365662]
[294.58801270 106.29364777]
[285.03433228 118.25131226]
[271.01330566 124.38884735]
[255.74687195 123.29590607]
[242.74313354 115.22363281]
[234.99028015 102.02697754]
[220.01055908 102.80682373]
[205.03085327 103.58666992]
[190.05113220 104.36651611]
[175.07141113 105.14635468]
[160.09170532 105.92620087]
[145.11198425 106.70604706]
[141.26927185 109.64017487]
[135.52702332 110.14789581]
[129.49548340 107.19356537]
[114.49629974 107.34960175]
[105.19926453 117.64317322]
[89.64774323 117.73305511]
[90.27172089 132.72007751]
[90.89569855 147.70709229]
[91.51967621 162.69410706]
[92.14365387 177.68112183]
[92.76763153 192.66813660]
[93.39160919 207.65515137]
[94.01558685 222.64216614]
[94.63956451 237.62918091]
[109.39256287 240.75962830]
[122.90320587 247.46138000]
[134.32217407 257.31317139]
[142.93170166 269.69570923]
[148.19053650 283.83059692]
[149.76814270 298.82934570]
[147.56533813 313.74905396]
[141.72059631 327.65194702]
[132.60131836 339.66400146]
[120.78074646 349.03015137]
[107.00193787 355.16165161]
[92.13103485 357.67303467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[27 91]
[28 90]
[29 89]
[30 88]
[31 86]
[32 70]
[33 69]
[34 68]
[35 67]
[36 53]
[37 52]
[38 51]
[39 50]
[98 128]
[99 127]
[100 124]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
