%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAUUAUUGGGGGGGGGGUUCCCCUCCCACUCCCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAxxxxxxxxxxAUCGAAUACGCCGCAGGCCCCUUCGCCCUAUUCUUCAUAGCCGAAUACACCCCCCCCCCCAAACAUUAUU\
) } def
/len { sequence length } bind def

/coor [
[2.07935047 210.67613220]
[-6.73242664 202.20492554]
[-14.81396294 193.03446960]
[-22.10996819 183.22749329]
[-28.57052040 172.85107422]
[-34.15142441 161.97624207]
[-38.81449127 150.67736816]
[-42.52781677 139.03178406]
[-45.26599884 127.11914825]
[-47.01030350 115.02096558]
[-47.74879456 102.82001495]
[-47.47642136 90.59976959]
[-62.37832260 88.88707733]
[-77.28022766 87.17438507]
[-91.87358856 93.28539276]
[-103.63418579 84.14550018]
[-118.53608704 82.43281555]
[-133.43798828 80.72012329]
[-148.33988953 79.00743103]
[-163.24179077 77.29474640]
[-178.14369202 75.58205414]
[-193.04559326 73.86936188]
[-197.19471741 88.32048035]
[-203.66595459 101.89151001]
[-212.28279114 114.21222687]
[-222.81011963 124.94652557]
[-234.96076965 133.80154419]
[-248.40327454 140.53573608]
[-262.77087402 144.96536255]
[-277.67163086 146.96960449]
[-292.69906616 146.49375916]
[-307.44317627 143.55084229]
[-321.50177002 138.22109985]
[-334.49130249 130.64996338]
[-346.05737305 121.04395294]
[-355.88452148 109.66514587]
[-363.70462036 96.82395935]
[-369.30429077 82.87070465]
[-372.53085327 68.18604279]
[-373.29623413 53.17058182]
[-371.57952881 38.23395538]
[-367.42764282 23.78363991]
[-360.95379639 10.21385574]
[-352.33459473 -2.10520458]
[-341.80517578 -12.83746910]
[-329.65283203 -21.69015312]
[-316.20904541 -28.42174911]
[-301.84057617 -32.84861374]
[-286.93942261 -34.84997940]
[-271.91207886 -34.37124634]
[-257.16851807 -31.42547798]
[-243.11097717 -26.09303474]
[-230.12290955 -18.51938820]
[-218.55867004 -8.91115475]
[-208.73373413 2.46954679]
[-200.91612244 15.31224155]
[-195.31910706 29.26657295]
[-192.09538269 43.95185471]
[-191.33290100 58.96746063]
[-176.43099976 60.68015289]
[-161.52909851 62.39284134]
[-146.62719727 64.10552979]
[-131.72529602 65.81822205]
[-116.82339478 67.53091431]
[-101.92149353 69.24359894]
[-88.39402008 63.01009369]
[-75.56753540 72.27248383]
[-60.66563416 73.98517609]
[-45.76372910 75.69786835]
[-42.56385803 61.10006714]
[-37.90597916 46.90009689]
[-31.83772850 33.24318695]
[-24.42116547 20.26900101]
[-15.73214054 8.11022758]
[-5.85951710 -3.10878420]
[5.09573746 -13.27329636]
[17.02158356 -22.27935600]
[29.79605293 -30.03485870]
[43.28850174 -36.46048737]
[57.36094666 -41.49052811]
[71.86946106 -45.07353973]
[86.66566467 -47.17287064]
[101.59824371 -47.76706314]
[116.51447296 -46.85002899]
[131.26181030 -44.43115234]
[145.68943787 -40.53517151]
[159.64978027 -35.20193100]
[173.00009155 -28.48597145]
[185.60383606 -20.45597839]
[197.33209229 -11.19407749]
[207.77189636 -21.96488571]
[218.21171570 -32.73569489]
[224.89395142 -48.31722260]
[241.71638489 -46.20952225]
[244.34796143 -29.46105576]
[228.98252869 -22.29588127]
[218.54270935 -11.52507305]
[208.10290527 -0.75426489]
[224.19165039 19.91195869]
[236.37940979 43.09381866]
[244.28338623 68.06315613]
[247.65528870 94.03565216]
[262.65447998 94.19168854]
[277.65365601 94.34772491]
[292.65286255 94.50376129]
[302.43441772 86.03176880]
[314.96411133 86.50738525]
[323.50891113 95.12676239]
[338.50161743 95.59480286]
[353.49429321 96.06285095]
[368.48699951 96.53089142]
[381.11703491 86.63839722]
[396.69210815 90.48513794]
[403.26431274 105.12022400]
[395.79202271 119.31686401]
[380.00735474 122.18461609]
[368.01895142 111.52358246]
[353.02624512 111.05554199]
[338.03356934 110.58750153]
[323.04086304 110.11946106]
[308.08551025 119.24835968]
[292.49682617 109.50295258]
[277.49761963 109.34691620]
[262.49844360 109.19087982]
[247.49925232 109.03484344]
[246.24800110 121.19390869]
[243.99613953 133.20797729]
[240.75909424 144.99484253]
[236.55900574 156.47384644]
[231.42460632 167.56648254]
[225.39103699 178.19685364]
[218.49955750 188.29220581]
[210.79733276 197.78347778]
[202.33706665 206.60574341]
[193.17662048 214.69863892]
[183.37867737 222.00677490]
[173.01028442 228.48017883]
[162.14236450 234.07455444]
[150.84928894 238.75160217]
[139.20829773 242.47935486]
[127.29906464 245.23229980]
[115.20305634 246.99157715]
[103.00302887 247.74519348]
[90.78245544 247.48794556]
[78.62494659 246.22163391]
[66.61368561 243.95489502]
[54.83083725 240.70324707]
[43.35703278 236.48895264]
[32.27076721 231.34082031]
[21.64788818 225.29408264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 69]
[13 68]
[14 67]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[22 59]
[90 98]
[91 97]
[92 96]
[102 125]
[103 124]
[104 123]
[105 122]
[108 120]
[109 119]
[110 118]
[111 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
