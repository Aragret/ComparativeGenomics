%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAUUUACGGGGGGGGGGAGUAGGAAUAGACGUAGACACACGAGCAUAUUUCACCUCCGCUACCAUAAxxxxxxxxxxUCUCCUACUUACAGGACUCAACAUACUAGUCACAGCCCUAUACUCCCUCUCCCCCCCCCCACAUAUUUAC\
) } def
/len { sequence length } bind def

/coor [
[87.83532715 514.62890625]
[73.98938751 508.61285400]
[62.28072739 499.08343506]
[53.57820511 486.74777222]
[48.52760315 472.52124023]
[47.50371170 457.45956421]
[50.58250809 442.68041992]
[57.53553009 429.28048706]
[67.84681702 418.25415039]
[80.75119781 410.41964722]
[95.29108429 406.35833740]
[95.29108429 391.35833740]
[95.29108429 376.35833740]
[95.29108429 361.35833740]
[95.29108429 346.35833740]
[95.29108429 331.35833740]
[95.29108429 316.35833740]
[95.29108429 301.35833740]
[95.29108429 286.35833740]
[95.29108429 271.35833740]
[95.29108429 256.35833740]
[95.29108429 241.35832214]
[84.61021423 231.04064941]
[84.39653015 215.82850647]
[95.29108429 204.69538879]
[95.29108429 189.69538879]
[95.29108429 174.69538879]
[94.97902679 159.69863892]
[94.35504913 144.71160889]
[93.73107147 129.72459412]
[93.10709381 114.73758698]
[83.75213623 100.84586334]
[91.61402130 86.05783844]
[90.52271271 71.09758759]
[89.27584076 56.14950180]
[85.42234039 47.79471588]
[88.16182709 40.87800598]
[87.22619629 25.90721321]
[86.29056549 10.93642235]
[71.28574371 10.54543686]
[56.37419128 8.82984161]
[41.67261887 5.80306339]
[27.29608727 1.48879123]
[13.35711384 -4.07920980]
[-0.03520847 -10.85736084]
[-12.77606392 -18.79261398]
[-24.76573563 -27.82286072]
[-35.91038895 -37.87742996]
[-46.12279510 -48.87762833]
[-55.32303238 -60.73736191]
[-63.43909073 -73.36380768]
[-70.40745544 -86.65814972]
[-76.17358398 -100.51634216]
[-80.69234467 -114.82991791]
[-83.92837524 -129.48684692]
[-85.85635376 -144.37243652]
[-86.46118164 -159.37016296]
[-85.73813629 -174.36265564]
[-83.69286346 -189.23257446]
[-80.34137726 -203.86354065]
[-75.70991516 -218.14103699]
[-69.83470917 -231.95333862]
[-62.76175308 -245.19233704]
[-54.54640198 -257.75439453]
[-45.25295258 -269.54122925]
[-34.95413971 -280.46057129]
[-23.73056602 -290.42697144]
[-11.67007446 -299.36242676]
[1.13294411 -307.19699097]
[14.57828712 -313.86932373]
[28.56072426 -319.32727051]
[42.97082138 -323.52807617]
[57.69580078 -326.43884277]
[72.62041473 -328.03683472]
[87.62785339 -328.30950928]
[102.60066986 -327.25476074]
[117.42166901 -324.88079834]
[131.97485352 -321.20626831]
[146.14633179 -316.25985718]
[159.82519531 -310.08035278]
[172.90437317 -302.71606445]
[185.28149414 -294.22463989]
[196.85971069 -284.67254639]
[207.54840088 -274.13452148]
[217.26388550 -262.69308472]
[225.93016052 -250.43772888]
[233.47938538 -237.46441650]
[239.85247803 -223.87466431]
[244.99954224 -209.77484131]
[248.88031006 -195.27526855]
[251.46441650 -180.48947144]
[252.73162842 -165.53314209]
[252.67201233 -150.52334595]
[251.28605652 -135.57754517]
[248.58460999 -120.81272888]
[244.58880615 -106.34445190]
[239.32991028 -92.28594208]
[232.84909058 -78.74723053]
[225.19706726 -65.83428955]
[216.43373108 -53.64816284]
[206.62767029 -42.28423691]
[195.85563660 -31.83145332]
[184.20191956 -22.37161446]
[171.75773621 -13.97876167]
[158.62048340 -6.71857977]
[144.89297485 -0.64789152]
[130.68266296 4.18579102]
[116.10074615 7.74463749]
[101.26136017 10.00079346]
[102.19699097 24.97158432]
[103.13261414 39.94237518]
[104.22393036 54.90262604]
[105.47080231 69.85071564]
[109.18505096 76.29663849]
[106.58481598 85.12220764]
[114.85993195 93.37497711]
[115.46753693 105.04616547]
[108.09410858 114.11360931]
[108.71808624 129.10061646]
[109.34206390 144.08764648]
[109.96604156 159.07466125]
[113.22995758 164.94444275]
[113.02145386 170.70532227]
[110.29108429 174.69538879]
[110.29108429 189.69538879]
[110.29108429 204.69538879]
[121.18563843 215.82850647]
[120.97195435 231.04064941]
[110.29108429 241.35832214]
[110.29108429 256.35833740]
[110.29108429 271.35833740]
[110.29108429 286.35833740]
[110.29108429 301.35833740]
[110.29108429 316.35833740]
[110.29108429 331.35833740]
[110.29108429 346.35833740]
[110.29108429 361.35833740]
[110.29108429 376.35833740]
[110.29108429 391.35833740]
[110.29108429 406.35833740]
[124.83097076 410.41964722]
[137.73535156 418.25415039]
[148.04663086 429.28048706]
[154.99966431 442.68041992]
[158.07846069 457.45956421]
[157.05456543 472.52124023]
[152.00396729 486.74777222]
[143.30143738 499.08343506]
[131.59277344 508.61285400]
[117.74684143 514.62890625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[25 126]
[26 125]
[27 124]
[28 121]
[29 120]
[30 119]
[31 118]
[33 115]
[34 113]
[35 112]
[37 111]
[38 110]
[39 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
