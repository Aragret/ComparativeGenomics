%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUCCUUGGGGGGGGGGCUAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAACxxxxxxxxxxGCUACUUCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCACGCCCUCCCCCCCCCCCAUAAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[84.45660400 393.73663330]
[72.57232666 384.46154785]
[63.25362015 372.61141968]
[57.04225540 358.87527466]
[54.29935455 344.05163574]
[55.18438339 329.00238037]
[59.64588928 314.60241699]
[67.42449188 301.68899536]
[78.06793976 291.01284790]
[90.95745087 283.19464111]
[105.34363556 278.68899536]
[104.40800476 263.71820068]
[103.47238159 248.74740601]
[102.53675079 233.77661133]
[101.60112000 218.80581665]
[100.66549683 203.83502197]
[99.72986603 188.86422729]
[98.63855743 173.90399170]
[97.39167786 158.95590210]
[96.14480591 144.00781250]
[94.89793396 129.05972290]
[82.45378876 123.71980286]
[73.70578003 113.38329315]
[70.49666595 100.22756958]
[73.50245667 87.02391815]
[82.08998108 76.55368042]
[76.31370544 62.71046448]
[70.53743744 48.86724854]
[64.76116180 35.02402878]
[56.41738510 47.48923874]
[41.48869324 48.95009613]
[30.88674927 38.33884048]
[32.36071777 23.41143608]
[44.83324814 15.07860851]
[59.18743896 19.43053818]
[54.87985611 5.06235504]
[50.57226944 -9.30582905]
[46.26468658 -23.67401314]
[31.52175522 -20.83904648]
[16.56765747 -19.51016426]
[1.55584145 -19.70100403]
[-13.35964394 -21.40960312]
[-28.02574158 -24.61843300]
[-42.29195404 -29.29456329]
[-56.01188660 -35.39001083]
[-69.04474640 -42.84222794]
[-81.25680542 -51.57473755]
[-92.52273560 -61.49793243]
[-102.72693634 -72.50998688]
[-111.76469421 -84.49789429]
[-119.54326630 -97.33863831]
[-125.98283386 -110.90045929]
[-131.01731873 -125.04418945]
[-134.59504700 -139.62467957]
[-136.67932129 -154.49232483]
[-137.24874878 -169.49455261]
[-136.29748535 -184.47741699]
[-133.83528137 -199.28715515]
[-129.88740540 -213.77182007]
[-124.49439240 -227.78274536]
[-117.71156311 -241.17619324]
[-109.60852051 -253.81469727]
[-100.26842499 -265.56857300]
[-89.78710938 -276.31719971]
[-78.27213287 -285.95028687]
[-65.84166718 -294.36898804]
[-52.62326050 -301.48690796]
[-38.75255966 -307.23098755]
[-24.37189484 -311.54232788]
[-9.62884140 -314.37664795]
[5.32531643 -315.70486450]
[20.33712387 -315.51336670]
[35.25253296 -313.80410767]
[49.91849136 -310.59463501]
[64.18449402 -305.91787720]
[77.90415955 -299.82183838]
[90.93669128 -292.36904907]
[103.14836121 -283.63598633]
[114.41385651 -273.71231079]
[124.61757660 -262.69979858]
[133.65480042 -250.71148682]
[141.43281555 -237.87040710]
[147.87178040 -224.30830383]
[152.90563965 -210.16435242]
[156.48274231 -195.58369446]
[158.56636047 -180.71595764]
[159.13511658 -165.71371460]
[158.18319702 -150.73089600]
[155.72033691 -135.92124939]
[151.77183533 -121.43676758]
[146.37820435 -107.42607117]
[139.59477234 -94.03292847]
[131.49118042 -81.39478302]
[122.15056610 -69.64131927]
[111.66877747 -58.89315033]
[100.15338135 -49.26056671]
[87.72254181 -40.84241486]
[74.50382233 -33.72508240]
[60.63286972 -27.98159790]
[64.94045258 -13.61341381]
[69.24803925 0.75477028]
[73.55562592 15.12295437]
[78.60437775 29.24775696]
[84.38065338 43.09097672]
[90.15692139 56.93419266]
[95.93319702 70.77741241]
[117.24266815 76.05863190]
[129.00508118 94.59591675]
[143.96533203 95.68722534]
[158.92556763 96.77853394]
[173.88581848 97.86985016]
[184.65185547 86.52848053]
[200.19496155 84.81213379]
[213.17616272 93.53121948]
[217.46614075 108.56884003]
[211.03927612 122.82470703]
[196.93016052 129.56762695]
[181.80068970 125.61379242]
[172.79450989 112.83009338]
[157.83425903 111.73878479]
[142.87400818 110.64747620]
[127.91376495 109.55616760]
[125.07535553 115.54750824]
[120.97086334 120.75383759]
[115.80751038 124.91226959]
[109.84601593 127.81285095]
[111.09289551 142.76094055]
[112.33976746 157.70903015]
[113.58663940 172.65710449]
[117.44013977 181.01188660]
[114.70065308 187.92860413]
[115.63628387 202.89939880]
[116.57191467 217.87019348]
[117.50754547 232.84097290]
[118.44316864 247.81176758]
[119.37879944 262.78256226]
[120.31443024 277.75335693]
[135.14965820 280.43276978]
[148.91229248 286.58526611]
[160.80218506 295.85317993]
[170.12808228 307.69763184]
[176.34777832 321.43002319]
[179.09965515 336.25198364]
[178.22375488 351.30178833]
[173.77098083 365.70443726]
[166.00021362 378.62258911]
[155.36323547 389.30520630]
[142.47846985 397.13119507]
[128.09501648 401.64556885]
[113.04911041 402.58590698]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 129]
[19 128]
[20 127]
[21 126]
[26 106]
[27 105]
[28 104]
[29 103]
[35 102]
[36 101]
[37 100]
[38 99]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
