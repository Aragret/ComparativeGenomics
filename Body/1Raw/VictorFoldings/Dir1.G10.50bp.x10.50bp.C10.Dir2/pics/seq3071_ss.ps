%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGAAAUAAGGGGGGGGGGGGCCUACUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAxxxxxxxxxxAUAAAUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCAAAACCCCCCCCCCAAGAGUAAUAA\
) } def
/len { sequence length } bind def

/coor [
[42.55006409 254.95619202]
[31.70098495 250.48974609]
[21.19612885 245.26481628]
[11.08844471 239.30776978]
[1.42887330 232.64860535]
[-7.73390055 225.32089233]
[-16.35369682 217.36155701]
[-24.38707161 208.81072998]
[-31.79353523 199.71150208]
[-38.53576279 190.10971069]
[-44.57976913 180.05378723]
[-49.89509583 169.59437561]
[-54.45495605 158.78422546]
[-68.70164490 163.47802734]
[-82.94834137 168.17182922]
[-97.19503021 172.86563110]
[-111.44172668 177.55943298]
[-125.68841553 182.25323486]
[-139.93510437 186.94703674]
[-154.18179321 191.64082336]
[-168.42849731 196.33462524]
[-179.11445618 208.00170898]
[-193.62371826 204.63560486]
[-207.87040710 209.32940674]
[-209.80599976 224.46928406]
[-218.12606812 237.26535034]
[-231.17863464 245.17692566]
[-246.37213135 246.63316345]
[-260.68984985 241.34492493]
[-271.28903198 230.36219788]
[-276.06515503 215.86560059]
[-274.06994629 200.73344421]
[-265.69955444 187.97024536]
[-252.61593628 180.11013794]
[-237.41682434 178.71374512]
[-223.12004089 184.05831909]
[-212.56420898 195.08270264]
[-198.31752014 190.38890076]
[-188.65057373 179.05755615]
[-173.12229919 182.08793640]
[-158.87559509 177.39413452]
[-144.62890625 172.70033264]
[-130.38221741 168.00653076]
[-116.13552094 163.31272888]
[-101.88883209 158.61894226]
[-87.64214325 153.92514038]
[-73.39544678 149.23133850]
[-59.14875412 144.53753662]
[-61.59761047 134.61401367]
[-63.42832565 124.55809784]
[-64.63390350 114.40823364]
[-65.20971680 104.20326233]
[-65.15357971 93.98220825]
[-64.46569824 83.78417969]
[-63.14870453 73.64817047]
[-61.20763779 63.61296844]
[-58.64992142 53.71694946]
[-55.48534012 43.99797440]
[-51.72600174 34.49321747]
[-47.38628387 25.23903275]
[-42.48278427 16.27082443]
[-37.03425980 7.62289524]
[-31.06155968 -0.67167455]
[-24.58752251 -8.58115673]
[-17.63691521 -16.07529640]
[-10.23632622 -23.12542725]
[-2.41406226 -29.70458031]
[5.79995394 -35.78759003]
[14.37430191 -41.35118866]
[23.27618408 -46.37409210]
[32.47154999 -50.83708572]
[41.92522430 -54.72310257]
[51.60104370 -58.01727676]
[61.46199799 -60.70700073]
[71.47036743 -62.78199768]
[81.58786774 -64.23432159]
[91.77579498 -65.05841827]
[101.99518585 -65.25113678]
[112.20694733 -64.81173706]
[122.37200928 -63.74190521]
[132.45149231 -62.04573059]
[142.40684509 -59.72970200]
[152.19999695 -56.80267715]
[161.79345703 -53.27585220]
[171.15054321 -49.16271973]
[180.23548889 -44.47901535]
[189.01350403 -39.24264908]
[197.45101929 -33.47365570]
[205.51577759 -27.19410324]
[213.17691040 -20.42800903]
[220.40512085 -13.20125484]
[227.17277527 -5.54148531]
[233.45394897 2.52199960]
[239.22465515 10.95835495]
[252.21502686 3.45835543]
[265.20541382 -4.04164457]
[278.19580078 -11.54164505]
[291.18618774 -19.04164505]
[293.72323608 -34.47204590]
[305.61886597 -44.62234879]
[321.25625610 -44.69989395]
[333.25192261 -34.66806030]
[335.94189453 -19.26358223]
[328.05606079 -5.75997496]
[313.31784058 -0.53323323]
[298.68618774 -6.05126333]
[285.69580078 1.44873643]
[272.70541382 8.94873619]
[259.71502686 16.44873619]
[246.72465515 23.94873619]
[260.99203491 62.67061996]
[265.22131348 103.72005463]
[259.14874268 144.53753662]
[273.39544678 149.23133850]
[287.64215088 153.92514038]
[301.88882446 158.61894226]
[316.13552856 163.31272888]
[330.38220215 168.00653076]
[344.62890625 172.70033264]
[358.62533569 165.36033630]
[373.68737793 170.14685059]
[380.87896729 184.22009277]
[375.93350220 199.23068237]
[361.78500366 206.27310181]
[346.82754517 201.16918945]
[339.93511963 186.94703674]
[325.68841553 182.25323486]
[311.44171143 177.55943298]
[297.19503784 172.86563110]
[282.94833374 168.17182922]
[268.70166016 163.47802734]
[254.45495605 158.78422546]
[249.89509583 169.59437561]
[244.57977295 180.05378723]
[238.53576660 190.10971069]
[231.79353333 199.71150208]
[224.38706970 208.81072998]
[216.35369873 217.36155701]
[207.73390198 225.32089233]
[198.57112122 232.64860535]
[188.91156006 239.30776978]
[178.80387878 245.26481628]
[168.29901123 250.48974609]
[157.44993591 254.95619202]
[146.31130981 258.64166260]
[134.93927002 261.52758789]
[123.39113617 263.59942627]
[111.72511292 264.84671021]
[100.00000000 265.26318359]
[88.27488708 264.84671021]
[76.60886383 263.59942627]
[65.06072998 261.52758789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[23 38]
[24 37]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
