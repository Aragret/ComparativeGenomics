%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUAAUCCUGGGGGGGGGGCUCUCAAGGACUUCAAACUCUACUCCCACUAAUAGCUUUUUGAUGACUUCxxxxxxxxxxACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACACCCCCCCCCCAUCCUAAUCCU\
) } def
/len { sequence length } bind def

/coor [
[69.73468781 371.65353394]
[56.24580383 364.92199707]
[44.76030350 355.15744019]
[35.94593430 342.92755127]
[30.31515312 328.94335938]
[28.19532585 314.01788330]
[29.70969391 299.01885986]
[34.77021790 284.81835938]
[43.08268356 272.24194336]
[54.16381454 262.02078247]
[67.36936951 254.74914551]
[81.93159485 250.84977722]
[81.62361908 235.85293579]
[81.31563568 220.85610962]
[81.00765991 205.85926819]
[80.69968414 190.86242676]
[80.39170837 175.86558533]
[80.08372498 160.86875916]
[79.77574921 145.87191772]
[79.46777344 130.87507629]
[68.91575623 120.21416473]
[53.92287064 119.75224304]
[38.92998505 119.29031372]
[31.33358955 134.63148499]
[17.85813332 145.09980774]
[1.22271109 148.64372253]
[-15.24229336 144.60278320]
[-28.26194382 133.83016968]
[-35.26813889 118.51302338]
[-50.26734543 118.66702271]
[-65.26655579 118.82102203]
[-71.27880859 132.81289673]
[-82.46669006 143.14494324]
[-96.89183807 148.02706909]
[-112.05499268 146.61341858]
[-125.32906342 139.14889526]
[-134.41423035 126.92680359]
[-137.73643494 112.06467438]
[-134.72007751 97.13746643]
[-125.88777161 84.73141479]
[-112.76976013 76.99593353]
[-97.63881683 75.27124023]
[-83.11647797 79.85616302]
[-71.71881866 89.95632172]
[-65.42055511 103.82180786]
[-50.42134476 103.66781616]
[-35.42213440 103.51381683]
[-30.85429001 91.28340149]
[-22.36679268 81.32105255]
[-10.96163845 74.83660126]
[2.00317192 72.62728882]
[14.97532463 74.97982025]
[26.39405060 81.63336945]
[34.87791061 91.80828857]
[39.39191055 104.29743195]
[54.38479614 104.75935364]
[69.37768555 105.22128296]
[69.49140930 93.46693420]
[73.97518921 82.54525757]
[82.22491455 74.02797699]
[93.09165192 69.15599823]
[105.04156494 68.65872955]
[106.57885742 53.73771667]
[108.11614990 38.81669998]
[109.65344238 23.89568329]
[111.19073486 8.97466660]
[96.95811462 4.02196646]
[84.25163269 -4.08000946]
[73.75653076 -14.89433289]
[66.03880310 -27.83780098]
[61.51464844 -42.21238708]
[60.42805481 -57.24289322]
[62.83761978 -72.11873627]
[68.61339569 -86.03768158]
[77.44390869 -98.24910736]
[88.85292816 -108.09445190]
[102.22519684 -115.04277802]
[116.83955383 -118.71936798]
[131.90786743 -118.92595673]
[146.61752319 -115.65139008]
[160.17524719 -109.07226562]
[171.84988403 -99.54338837]
[181.01184082 -87.57863617]
[187.16702271 -73.82325745]
[189.98350525 -59.01906586]
[189.30937195 -43.96442032]
[185.18098450 -29.47121048]
[177.82098389 -16.32103157]
[167.62629700 -5.22305536]
[155.14669800 3.22421575]
[141.05520630 8.56523132]
[126.11174774 10.51195908]
[124.57445526 25.43297577]
[123.03716278 40.35399246]
[121.49987030 55.27500916]
[119.96257782 70.19602203]
[130.40458679 80.96470642]
[145.36587524 79.88763428]
[160.32714844 78.81056213]
[167.93856812 67.65367889]
[180.41108704 63.00421143]
[193.09135437 66.35672760]
[201.38578796 76.26403809]
[216.36602783 75.49437714]
[231.34626770 74.72471619]
[246.32650757 73.95505524]
[261.30673218 73.18539429]
[267.16729736 59.09225464]
[278.56796265 48.94398499]
[293.24514771 44.75553131]
[308.28466797 47.35851669]
[320.70043945 56.23611450]
[328.02725220 69.62567139]
[328.81042480 84.86868286]
[322.89440918 98.93864441]
[311.45385742 109.04193878]
[296.76031494 113.17256165]
[281.73114014 110.51036835]
[269.35046387 101.58394623]
[262.07641602 88.16564178]
[247.09616089 88.93529510]
[232.11592102 89.70495605]
[217.13568115 90.47461700]
[202.15544128 91.24427795]
[191.46502686 104.19102478]
[174.38479614 105.45481873]
[161.40422058 93.77184296]
[146.44293213 94.84891510]
[131.48165894 95.92598724]
[127.69664001 115.04164124]
[113.52769470 128.21562195]
[94.46460724 130.56709290]
[94.77259064 145.56393433]
[95.08056641 160.56077576]
[95.38854218 175.55761719]
[95.69651794 190.55445862]
[96.00450134 205.55128479]
[96.31247711 220.54812622]
[96.62045288 235.54496765]
[96.92842865 250.54180908]
[111.63846588 253.84002686]
[125.13142395 260.56338501]
[136.62284851 270.32098389]
[145.44462585 282.54553223]
[151.08387756 296.52630615]
[153.21275330 311.45050049]
[151.70748901 326.45040894]
[146.65557861 340.65399170]
[138.35073853 353.23544312]
[127.27580261 363.46331787]
[114.07466125 370.74298096]
[99.51480103 374.65115356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 57]
[22 56]
[23 55]
[29 47]
[30 46]
[31 45]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[97 129]
[98 128]
[99 127]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
