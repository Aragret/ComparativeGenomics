%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAAUGCUGGGGGGGGGGUACCGAACGAAAAAUUCUAGGCUAUAUACAACUACGCAAAGGCCCCAACGxxxxxxxxxxCCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCCCCCCCCCCCUCCUAAUACU\
) } def
/len { sequence length } bind def

/coor [
[53.22783279 151.04399109]
[43.34899521 139.79684448]
[36.11872482 126.68909454]
[31.87505341 112.33357239]
[30.81638527 97.40142059]
[32.99221039 82.59075928]
[38.30081177 68.59402466]
[46.49399185 56.06559372]
[57.18870163 45.59119415]
[69.88494110 37.66053772]
[83.98913574 32.64439774]
[82.12152100 17.76111603]
[80.25390625 2.87783623]
[78.38629150 -12.00544357]
[76.51868439 -26.88872337]
[74.65106964 -41.77200317]
[72.78345490 -56.65528488]
[70.91584015 -71.53856659]
[69.04822540 -86.42184448]
[67.18061829 -101.30512238]
[65.31300354 -116.18840027]
[50.33952713 -115.22239685]
[35.33504105 -115.16223145]
[20.35430145 -116.00811768]
[5.45196533 -117.75698853]
[-9.31758785 -120.40245056]
[-23.90046501 -123.93484497]
[-38.24345398 -128.34129333]
[-52.29421997 -133.60571289]
[-66.00149536 -139.70890808]
[-79.31525421 -146.62857056]
[-92.18692780 -154.33949280]
[-104.56953430 -162.81352234]
[-116.41790771 -172.01972961]
[-127.68879700 -181.92453003]
[-138.34109497 -192.49177551]
[-148.33590698 -203.68292236]
[-157.63679504 -215.45712280]
[-166.20979309 -227.77142334]
[-174.02363586 -240.58087158]
[-181.04978943 -253.83874512]
[-187.26264954 -267.49664307]
[-192.63951111 -281.50479126]
[-197.16078186 -295.81198120]
[-200.80995178 -310.36608887]
[-203.57371521 -325.11395264]
[-205.44197083 -340.00180054]
[-206.40789795 -354.97528076]
[-206.46800232 -369.97976685]
[-205.62203979 -384.96051025]
[-203.87310791 -399.86282349]
[-201.22756958 -414.63235474]
[-197.69511414 -429.21524048]
[-193.28858948 -443.55819702]
[-188.02410889 -457.60894775]
[-181.92085266 -471.31619263]
[-175.00112915 -484.62991333]
[-167.29014587 -497.50155640]
[-158.81607056 -509.88412476]
[-149.60980225 -521.73242188]
[-139.70494080 -533.00329590]
[-129.13764954 -543.65551758]
[-117.94645691 -553.65032959]
[-106.17221069 -562.95111084]
[-93.85787964 -571.52404785]
[-81.04838562 -579.33782959]
[-67.79048157 -586.36395264]
[-54.13254166 -592.57672119]
[-40.12439728 -597.95355225]
[-25.81716537 -602.47473145]
[-11.26305294 -606.12384033]
[3.48483491 -608.88751221]
[18.37268257 -610.75573730]
[33.34616852 -611.72161865]
[48.35065079 -611.78161621]
[63.33138657 -610.93560791]
[78.23370361 -609.18658447]
[93.00323486 -606.54101562]
[107.58607483 -603.00848389]
[121.92902374 -598.60186768]
[135.97973633 -593.33734131]
[149.68696594 -587.23400879]
[163.00065613 -580.31420898]
[175.87225342 -572.60314941]
[188.25479126 -564.12902832]
[200.10307312 -554.92272949]
[211.37387085 -545.01782227]
[222.02607727 -534.45043945]
[232.02078247 -523.25921631]
[241.32156372 -511.48495483]
[249.89443970 -499.17056274]
[257.70816040 -486.36105347]
[264.73419189 -473.10311890]
[270.94692993 -459.44512939]
[276.32366943 -445.43695068]
[280.84481812 -431.12969971]
[284.49383545 -416.57559204]
[287.25744629 -401.82766724]
[289.12557983 -386.93981934]
[290.09136963 -371.96633911]
[290.15133667 -356.96185303]
[289.30523682 -341.98110962]
[287.55615234 -327.07879639]
[284.91049194 -312.30929565]
[281.37789917 -297.72647095]
[276.97125244 -283.38354492]
[271.70663452 -269.33285522]
[265.60324097 -255.62565613]
[258.68338013 -242.31199646]
[250.97229004 -229.44042969]
[242.49809265 -217.05793762]
[233.29173279 -205.20968628]
[223.38676453 -193.93893433]
[212.81936646 -183.28678894]
[201.62808228 -173.29212952]
[189.85375977 -163.99140930]
[177.53933716 -155.41857910]
[164.72978210 -147.60491943]
[151.47181702 -140.57894897]
[137.81381226 -134.36627197]
[123.80561829 -128.98960876]
[109.49834442 -124.46853638]
[94.94419861 -120.81956482]
[80.19628143 -118.05601501]
[82.06389618 -103.17273712]
[83.93151093 -88.28945923]
[85.79911804 -73.40617371]
[87.66673279 -58.52289581]
[89.53434753 -43.63961792]
[91.40196228 -28.75633621]
[93.26957703 -13.87305737]
[95.13718414 1.01022303]
[97.00479889 15.89350319]
[98.87241364 30.77678299]
[113.77868652 32.15257645]
[128.04077148 36.70039368]
[140.99189758 44.20761871]
[152.02655029 54.32326889]
[160.62882996 66.57440948]
[166.39657593 80.38828278]
[169.06013489 95.11904144]
[168.49496460 110.07800293]
[164.72747803 124.56578827]
[157.93385315 137.90507507]
[148.43167114 149.47219849]
[136.66520691 158.72637939]
[123.18454742 165.23497009]
[108.61995697 168.69367981]
[93.65236664 168.94079590]
[78.98153687 165.96476746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
