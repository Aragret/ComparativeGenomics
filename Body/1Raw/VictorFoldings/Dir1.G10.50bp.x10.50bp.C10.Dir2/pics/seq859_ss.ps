%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCUCAAAGGGGGGGGGGGCAAUACACUGAAAAUGUUUAGACGGGCUCACAUCACCCCAUAAACAAAUxxxxxxxxxxUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCAUUCCCCCCCCCCCCCCCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[65.07962036 365.96636963]
[51.23368073 359.95031738]
[39.52502060 350.42092896]
[30.82249641 338.08523560]
[25.77189445 323.85873413]
[24.74800301 308.79705811]
[27.82680130 294.01788330]
[34.77982330 280.61795044]
[45.09110641 269.59161377]
[57.99548721 261.75711060]
[72.53537750 257.69580078]
[72.53537750 242.69580078]
[72.53537750 227.69580078]
[72.53537750 212.69580078]
[72.53537750 197.69580078]
[72.53537750 182.69580078]
[72.53537750 167.69580078]
[72.53537750 152.69580078]
[72.53537750 137.69580078]
[72.53537750 122.69580078]
[65.62837982 109.38064575]
[53.36600876 100.74153137]
[41.81055069 111.58417511]
[28.27489281 119.81248474]
[13.34022331 125.07577515]
[-2.35274267 127.15062714]
[-18.13124657 125.95035553]
[-33.31932831 121.52862549]
[-47.26678848 114.07706451]
[-59.37701035 103.91696930]
[-69.13249969 91.48542023]
[-76.11698914 77.31650543]
[-80.03318787 62.01839066]
[-80.71545410 46.24716568]
[-78.13679504 30.67874527]
[-72.40991974 15.97989082]
[-85.02104950 7.85834837]
[-97.63217926 -0.26319358]
[-110.24330902 -8.38473606]
[-122.85443878 -16.50627708]
[-135.46556091 -24.62782097]
[-148.25283813 -20.27543640]
[-161.01992798 -24.04761314]
[-169.14672852 -34.34466934]
[-169.82830811 -47.24940872]
[-182.26774597 -55.63154984]
[-194.70718384 -64.01369476]
[-208.83549500 -57.81735611]
[-224.06735229 -60.26556396]
[-235.54235840 -70.57711029]
[-239.59886169 -85.46160889]
[-234.94244385 -100.16947937]
[-223.05895996 -110.00748444]
[-207.74038696 -111.83635712]
[-193.87481689 -105.07251740]
[-185.88671875 -91.87426758]
[-186.32504272 -76.45313263]
[-173.88560486 -68.07099152]
[-161.44616699 -59.68884659]
[-145.12422180 -63.61978149]
[-130.70887756 -54.37414932]
[-127.34402466 -37.23894882]
[-114.73289490 -29.11740685]
[-102.12176514 -20.99586296]
[-89.51063538 -12.87432194]
[-76.89950562 -4.75277948]
[-64.28838348 3.36876249]
[-54.47813797 -6.90233612]
[-42.92876053 -15.17699909]
[-30.04053497 -21.16647339]
[-16.26052666 -24.66124535]
[-2.06705356 -25.53836441]
[12.04691029 -23.76576996]
[25.59085274 -19.40346336]
[38.09377670 -12.60147285]
[49.12057877 -3.59469676]
[58.28718185 7.30520678]
[65.27392578 19.72060585]
[69.83670807 33.22097397]
[71.81551361 47.33782959]
[71.14001465 61.58097458]
[67.83209991 75.45554352]
[62.00512314 88.47916412]
[74.26749420 97.11827850]
[79.33040619 85.90550232]
[88.73670959 78.64632416]
[100.03657532 76.73355103]
[110.50847626 80.22824860]
[117.81385040 87.93470001]
[132.38655090 84.37994385]
[146.61332703 79.62612915]
[160.39570618 73.70616150]
[167.09857178 67.40350342]
[174.52693176 67.80971527]
[188.42948914 62.17775726]
[202.33204651 56.54580307]
[213.27542114 41.77344894]
[230.53364563 44.79894638]
[244.31602478 38.87898254]
[258.09841919 32.95901871]
[271.88079834 27.03905678]
[281.25509644 13.58339977]
[297.57000732 15.24336052]
[304.04214478 30.31131363]
[294.01354980 43.28664017]
[277.80075073 40.82143784]
[264.01837158 46.74140167]
[250.23599243 52.66136551]
[236.45361328 58.58132553]
[231.65400696 69.72902679]
[220.16671753 74.75505829]
[207.96400452 70.44835663]
[194.06144714 76.08031464]
[180.15888977 81.71227264]
[166.31567383 87.48854065]
[152.53329468 93.40850830]
[166.63078308 98.53302765]
[175.15632629 110.87462616]
[174.95988464 125.87334442]
[166.11405945 137.98744202]
[151.88720703 142.74099731]
[137.53584290 138.37768555]
[128.36253357 126.50964355]
[127.75662994 111.52188873]
[135.94131470 98.95264435]
[121.36861420 102.50740814]
[119.56275940 110.89259338]
[114.47551727 118.21505737]
[106.67776489 123.20018768]
[97.22904205 124.86380768]
[87.53537750 122.69580078]
[87.53537750 137.69580078]
[87.53537750 152.69580078]
[87.53537750 167.69580078]
[87.53537750 182.69580078]
[87.53537750 197.69580078]
[87.53537750 212.69580078]
[87.53537750 227.69580078]
[87.53537750 242.69580078]
[87.53537750 257.69580078]
[102.07526398 261.75711060]
[114.97964478 269.59161377]
[125.29092407 280.61795044]
[132.24394226 294.01788330]
[135.32275391 308.79705811]
[134.29885864 323.85873413]
[129.24826050 338.08523560]
[120.54573059 350.42092896]
[108.83706665 359.95031738]
[94.99112701 365.96636963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 84]
[22 83]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[45 59]
[46 58]
[47 57]
[89 126]
[90 125]
[91 116]
[92 115]
[94 114]
[95 113]
[96 112]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
