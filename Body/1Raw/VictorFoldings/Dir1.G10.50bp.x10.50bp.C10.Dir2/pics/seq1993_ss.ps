%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAAGUAGGGGGGGGGGUAGGCGAUAGAAAUUGAAACCUGGCGCAAUAGAUAUAGUACCGCAAGGGAxxxxxxxxxxUUAUUACCCUCACUGUCAACCCAACACAGGCAUGCUCAUAAGGAAAGGUUCCCCCCCCCCAAAAAAAGUA\
) } def
/len { sequence length } bind def

/coor [
[50.31469727 446.29293823]
[36.46875763 440.27691650]
[24.76009560 430.74749756]
[16.05757141 418.41183472]
[11.00696945 404.18530273]
[9.98307800 389.12362671]
[13.06187725 374.34445190]
[20.01489830 360.94454956]
[30.32618332 349.91821289]
[43.23056412 342.08370972]
[57.77045059 338.02236938]
[57.77045059 323.02236938]
[57.77045059 308.02236938]
[57.77045059 293.02236938]
[57.77045059 278.02236938]
[57.77045059 263.02236938]
[57.77045059 248.02238464]
[57.77045059 233.02238464]
[57.77045059 218.02238464]
[57.77045059 203.02238464]
[51.73045731 198.57620239]
[42.83790588 210.65605164]
[30.75821304 201.76329041]
[39.65047073 189.68385315]
[33.61047363 185.23768616]
[19.28787804 189.69450378]
[4.96528006 194.15132141]
[-9.35731697 198.60812378]
[-20.07814980 211.01763916]
[-36.13250351 207.67253113]
[-41.00503540 192.01396179]
[-29.68330383 180.15014648]
[-13.81413269 184.28553772]
[0.50846440 179.82872009]
[14.83106136 175.37190247]
[29.15365982 170.91508484]
[48.76218033 172.63249207]
[61.33779526 183.06091309]
[66.53321075 168.98939514]
[71.72863007 154.91787720]
[76.92404175 140.84635925]
[82.11946106 126.77483368]
[68.97411346 108.60231018]
[70.88491058 86.25527954]
[59.18529129 76.86811829]
[47.48566818 67.48095703]
[34.36691666 75.11396790]
[19.37607384 77.48863983]
[4.54052496 74.28380585]
[-8.13334274 65.93290710]
[-16.93149376 53.56533051]
[-20.66404915 38.85368729]
[-18.82621193 23.78760719]
[-11.66653538 10.40465355]
[-0.15330596 0.51476032]
[14.15640640 -4.54454422]
[29.32733154 -4.08903170]
[43.30772400 1.81969452]
[54.20685196 12.38252735]
[60.55069733 26.17092896]
[61.48131180 41.32013321]
[56.87282944 55.78133392]
[68.57244873 65.16849518]
[80.27207947 74.55565643]
[87.60166931 70.28659058]
[95.79180145 68.07984161]
[97.34938049 53.16093063]
[98.90695953 38.24201584]
[100.46454620 23.32310486]
[86.72206116 16.96520615]
[75.79031372 6.48781967]
[68.85509491 -6.97254848]
[66.66869354 -21.95581818]
[69.46826935 -36.83671570]
[76.95014191 -50.00107193]
[88.30273438 -60.02091980]
[102.29460907 -65.80937195]
[117.40802765 -66.73855591]
[132.00360107 -62.70766449]
[144.49809265 -54.15394592]
[153.53622437 -42.00524521]
[158.13758850 -27.57936096]
[157.80307007 -12.44110489]
[152.56895447 1.76743901]
[143.00299072 13.50503349]
[130.14283752 21.49847221]
[115.38345337 24.88068581]
[113.82587433 39.79959869]
[112.26829529 54.71850967]
[110.71070862 69.63742065]
[115.83476257 67.76781464]
[121.52233124 66.72689819]
[127.64453888 66.61804962]
[140.73770142 59.29894638]
[153.83085632 51.97983932]
[166.92401123 44.66073608]
[167.76907349 29.25653458]
[176.82664490 16.76797676]
[191.20646667 11.18011570]
[206.31999207 14.27601814]
[217.34457397 25.06779099]
[220.76226807 40.11182022]
[215.48254395 54.60761261]
[203.19010925 63.92960739]
[187.80744934 65.10319519]
[174.24310303 57.75389099]
[161.14994812 65.07299805]
[148.05680847 72.39209747]
[134.96365356 79.71120453]
[136.05206299 87.13180542]
[149.99336243 92.66719055]
[138.22889709 101.97301483]
[139.31732178 109.39361572]
[154.46635437 104.83100128]
[165.21429443 115.14269257]
[179.85780334 118.39351654]
[195.32829285 112.95330811]
[207.59703064 123.83496094]
[204.04296875 139.84436035]
[188.32225037 144.51240540]
[176.60697937 133.03701782]
[161.96347046 129.78619385]
[147.86184692 134.58132935]
[136.06649780 124.03711700]
[115.81958771 134.29681396]
[96.19097900 131.97024536]
[90.99555969 146.04176331]
[85.80014801 160.11328125]
[80.60472870 174.18481445]
[75.40931702 188.25633240]
[72.77045441 203.02238464]
[72.77045441 218.02238464]
[72.77045441 233.02238464]
[72.77045441 248.02238464]
[72.77045441 263.02236938]
[72.77045441 278.02236938]
[72.77045441 293.02236938]
[72.77045441 308.02236938]
[72.77045441 323.02236938]
[72.77045441 338.02236938]
[87.31034088 342.08370972]
[100.21472168 349.91821289]
[110.52600098 360.94454956]
[117.47902679 374.34445190]
[120.55782318 389.12362671]
[119.53393555 404.18530273]
[114.48332977 418.41183472]
[105.78080750 430.74749756]
[94.07214355 440.27691650]
[80.22620392 446.29293823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[25 36]
[26 35]
[27 34]
[28 33]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[44 64]
[45 63]
[46 62]
[66 90]
[67 89]
[68 88]
[69 87]
[93 109]
[94 108]
[95 107]
[96 106]
[113 124]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
