%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCAAUCACGGGGGGGGGGAUGCCUAUCAUAUAGUAAAACCCAGCCCAUGACCCCUAACAGGGGCCCUCxxxxxxxxxxAACCACGACCAAUGAUAUGAAAAACCAUCGUUGUAUUUCAACUACAAGAACCCCCCCCCCCACCAAUGAC\
) } def
/len { sequence length } bind def

/coor [
[63.58179092 360.20822144]
[50.36159515 352.93572998]
[39.47479248 342.48873901]
[31.66366196 329.57949829]
[27.46077919 315.08816528]
[27.15270805 300.00283813]
[30.76044846 285.35202026]
[38.03802109 272.13461304]
[48.48923111 261.25186157]
[61.40149307 253.44570923]
[75.89442444 249.24842834]
[75.58237457 234.25166321]
[75.27031708 219.25491333]
[74.95825958 204.25816345]
[74.64620209 189.26141357]
[74.33414459 174.26464844]
[74.02208710 159.26789856]
[73.71003723 144.27114868]
[73.39797974 129.27439880]
[86.57171631 91.85251617]
[79.94322205 78.39655304]
[73.31472015 64.94058990]
[66.68622589 51.48462296]
[50.20723343 50.57820511]
[36.50193787 41.55265808]
[29.24320984 26.93962288]
[30.31934166 10.75246716]
[39.34379578 -2.61580968]
[32.43679810 -15.93096542]
[25.52979851 -29.24612045]
[18.62280083 -42.56127548]
[11.71580124 -55.87643433]
[4.80880308 -69.19158936]
[1.37793171 -54.58922195]
[-9.29932022 -44.05374527]
[-23.94624138 -40.81835938]
[-38.06787872 -45.87596893]
[-47.33047867 -57.67444992]
[-48.89147186 -72.59300995]
[-42.27180481 -86.05332184]
[-29.50297356 -93.92459106]
[-14.50356579 -93.79122925]
[-1.87618208 -85.69355774]
[-6.18376684 -100.06174469]
[-14.17368317 -112.75666809]
[-25.26499748 -122.85532379]
[-36.35631180 -132.95396423]
[-47.44762802 -143.05262756]
[-62.86085129 -146.62237549]
[-67.06257629 -160.91204834]
[-78.15389252 -171.01069641]
[-93.32170868 -167.73701477]
[-107.50331879 -174.03474426]
[-115.24561310 -187.48229980]
[-113.57151031 -202.90879822]
[-103.12474060 -214.38246155]
[-87.92230225 -217.49140930]
[-73.80984497 -211.04019165]
[-66.21389008 -197.50944519]
[-68.05524445 -182.10200500]
[-56.96392822 -172.00335693]
[-42.34403229 -169.15592957]
[-37.34897995 -154.14393616]
[-26.25766373 -144.04528809]
[-15.16634846 -133.94664001]
[-4.07503319 -123.84798431]
[-8.25328541 -138.25431824]
[-9.18446827 -153.22538757]
[-6.82362509 -168.03843689]
[-1.28473246 -181.97833252]
[7.16480732 -194.37208557]
[18.11707306 -204.62136841]
[31.04331779 -212.23138428]
[45.31949615 -216.83471680]
[60.25639725 -218.20913696]
[75.13290405 -216.28829956]
[89.23081207 -211.16493225]
[101.86952209 -203.08638000]
[112.43886566 -192.44265747]
[120.42858887 -179.74760437]
[125.45296478 -165.61410522]
[127.26942444 -150.72450256]
[125.79028320 -135.79760742]
[121.08694458 -121.55406189]
[113.38648224 -108.68150330]
[103.06063843 -97.80138397]
[90.60792542 -89.43896484]
[76.62953186 -83.99797058]
[61.80029297 -81.74106598]
[46.83612061 -82.77721405]
[32.45945358 -87.05638885]
[19.36435127 -94.37200928]
[8.18441772 -104.36932373]
[12.49200249 -90.00114441]
[18.12395859 -76.09858704]
[25.03095818 -62.78343201]
[31.93795586 -49.46827698]
[38.84495544 -36.15311813]
[45.75195312 -22.83796310]
[52.65895081 -9.52280807]
[66.34767914 -9.80247402]
[78.87586212 -4.11707497]
[87.76402283 6.47103930]
[91.22604370 19.92315292]
[88.52784729 33.61661148]
[80.14218903 44.85612488]
[86.77068329 58.31208801]
[93.39918518 71.76805115]
[100.02768707 85.22402191]
[112.29005432 93.86313629]
[127.19195557 95.57582855]
[142.09385681 97.28851318]
[156.99575806 99.00120544]
[170.40440369 90.19281769]
[185.60578918 95.32092285]
[190.93870544 110.45167542]
[182.31221008 123.97805023]
[166.34379578 125.52378082]
[155.28306580 113.90310669]
[140.38116455 112.19041443]
[125.47926331 110.47772980]
[110.57736206 108.76503754]
[105.03170776 113.81436157]
[117.28824615 122.46173859]
[130.65039062 129.27738953]
[132.64595032 144.14404297]
[121.55413818 154.24215698]
[106.93947601 150.86405945]
[101.40406799 136.92430115]
[93.94039154 123.91300964]
[88.39472961 128.96234131]
[88.70678711 143.95909119]
[89.01884460 158.95584106]
[89.33090210 173.95259094]
[89.64295959 188.94935608]
[89.95500946 203.94610596]
[90.26706696 218.94285583]
[90.57912445 233.93960571]
[90.89118195 248.93637085]
[105.54617310 252.52713013]
[118.77198029 259.78939819]
[129.66685486 270.22799683]
[137.48794556 283.13119507]
[141.70201111 297.61926270]
[142.02174377 312.70437622]
[138.42530823 327.35797119]
[131.15794373 340.58096313]
[120.71514893 351.47180176]
[107.80892181 359.28793335]
[93.31922913 363.49639893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 109]
[21 108]
[22 107]
[23 106]
[28 100]
[29 99]
[30 98]
[31 97]
[32 96]
[33 95]
[43 94]
[44 93]
[45 66]
[46 65]
[47 64]
[48 63]
[50 61]
[51 60]
[110 122]
[111 121]
[112 120]
[113 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
