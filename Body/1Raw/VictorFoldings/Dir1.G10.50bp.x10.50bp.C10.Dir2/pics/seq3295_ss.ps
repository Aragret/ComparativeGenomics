%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUACUCCUGGGGGGGGGGCAUUGUACCCAUUCUAAUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAxxxxxxxxxxAGGAGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAAAUCCCCUAGAAGCCCCCCCCCCUCCCACUCCU\
) } def
/len { sequence length } bind def

/coor [
[88.37253571 487.72485352]
[74.52659607 481.70883179]
[62.81793594 472.17941284]
[54.11540985 459.84375000]
[49.06480789 445.61721802]
[48.04092026 430.55554199]
[51.11971664 415.77639771]
[58.07273865 402.37646484]
[68.38402557 391.35012817]
[81.28840637 383.51562500]
[95.82829285 379.45431519]
[95.82829285 364.45431519]
[95.82829285 349.45431519]
[95.82829285 334.45431519]
[95.82829285 319.45431519]
[95.82829285 304.45431519]
[95.82829285 289.45431519]
[95.82829285 274.45431519]
[95.82829285 259.45431519]
[95.82829285 244.45431519]
[95.82829285 229.45431519]
[89.52272797 225.39353943]
[76.91159821 217.27200317]
[70.60603333 213.21122742]
[56.94979477 219.41662598]
[47.85746002 233.06439209]
[31.51153946 231.74420166]
[24.72731209 216.81416321]
[34.48381424 203.63301086]
[50.74438858 205.76039124]
[64.40062714 199.55497742]
[73.78778839 187.85536194]
[76.88610840 173.17883301]
[79.98443604 158.50230408]
[83.08275604 143.82579041]
[86.18107605 129.14926147]
[70.22879028 112.42244720]
[69.56093597 89.31799316]
[56.94980621 81.19644928]
[44.33868027 73.07491302]
[32.21520233 80.12241364]
[18.30322075 81.23944855]
[5.33437204 76.26412201]
[-4.16965294 66.22513580]
[-8.38741112 53.12973022]
[-6.54660511 39.56246185]
[-18.98604584 31.18031693]
[-31.42548561 22.79817390]
[-43.86492538 14.41603088]
[-56.30436707 6.03388739]
[-72.81845093 2.19703460]
[-73.70309448 -14.73381710]
[-57.67879868 -20.27081680]
[-47.92222214 -6.40555286]
[-35.48278427 1.97659051]
[-23.04334259 10.35873413]
[-10.60390186 18.74087715]
[1.83553827 27.12302017]
[16.14679527 19.68396378]
[32.35095978 20.46310997]
[46.03963470 29.34287453]
[53.44129181 43.98907089]
[52.46022034 60.46378326]
[65.07135010 68.58532715]
[77.68247986 76.70686340]
[93.99482727 68.30489349]
[112.25007629 70.15745544]
[121.01628113 57.98561859]
[110.59418488 46.56253433]
[102.76432800 33.23488998]
[97.86365509 18.58081436]
[96.10210419 3.23541474]
[97.55361176 -12.13674641]
[102.15302277 -26.87043381]
[109.69900513 -40.32852936]
[119.86285400 -51.92958069]
[132.20283508 -61.17292023]
[146.18334961 -67.66027832]
[161.19819641 -71.11293030]
[176.59689331 -71.38368988]
[191.71278381 -68.46316528]
[205.89195251 -62.48008347]
[214.40304565 -74.83165741]
[216.71867371 -83.73612976]
[223.22189331 -87.34914398]
[231.98809814 -99.52098083]
[240.75430298 -111.69281769]
[249.52050781 -123.86465454]
[250.62756348 -140.22639465]
[265.46792603 -147.20462036]
[278.77511597 -137.62072754]
[276.85983276 -121.33380890]
[261.69235229 -115.09844208]
[252.92614746 -102.92660522]
[244.15994263 -90.75476837]
[235.39372253 -78.58293152]
[226.75460815 -66.32056427]
[218.24353027 -53.96899414]
[228.37579346 -43.49727249]
[236.26127625 -31.23823547]
[241.59233093 -17.66657448]
[244.16026306 -3.30825663]
[243.86346436 11.27984715]
[240.71151733 25.53156662]
[234.82484436 38.89340210]
[226.43008423 50.84602737]
[215.85142517 60.92446518]
[203.49807739 68.73617554]
[189.84835815 73.97636414]
[175.43132019 76.43983459]
[160.80612183 76.02906799]
[146.54035950 72.75805664]
[133.18812561 66.75182343]
[124.42191315 78.92366028]
[128.20271301 84.33957672]
[130.80117798 90.41201019]
[132.10836792 96.88640594]
[132.06948853 103.49132538]
[130.68618774 109.94988251]
[128.01641846 115.99131775]
[124.17213440 121.36234283]
[119.31448364 125.83781433]
[113.64712524 129.23008728]
[107.40763855 131.39695740]
[100.85760498 132.24757385]
[97.75927734 146.92410278]
[94.66095734 161.60063171]
[91.56263733 176.27716064]
[88.46431732 190.95367432]
[110.82829285 229.45431519]
[110.82829285 244.45431519]
[110.82829285 259.45431519]
[110.82829285 274.45431519]
[110.82829285 289.45431519]
[110.82829285 304.45431519]
[110.82829285 319.45431519]
[110.82829285 334.45431519]
[110.82829285 349.45431519]
[110.82829285 364.45431519]
[110.82829285 379.45431519]
[125.36817932 383.51562500]
[138.27255249 391.35012817]
[148.58384705 402.37646484]
[155.53686523 415.77639771]
[158.61566162 430.55554199]
[157.59176636 445.61721802]
[152.54116821 459.84375000]
[143.83865356 472.17941284]
[132.12998962 481.70883179]
[118.28404999 487.72485352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 31]
[25 30]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[38 65]
[39 64]
[40 63]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[67 114]
[68 113]
[82 98]
[83 97]
[85 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
