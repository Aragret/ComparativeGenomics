%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUCUUUACAGGGGGGGGGGGUGAAAUGCCCCAACUAAAUACUACCGUAUGGCCCACCAUAAUUACCCCCAxxxxxxxxxxGAGCCAACAACUUAAUAUGACUAGCUUACACAAUAGCUUUUAUAGUAAAGCCCCCCCCCCAUACCUCUUUACGG\
) } def
/len { sequence length } bind def

/coor [
[84.38343048 436.17724609]
[70.51077271 430.32550049]
[58.15813446 421.71701050]
[47.86552429 410.72811890]
[40.08289337 397.83920288]
[35.15045929 383.61370850]
[33.28385162 368.67352295]
[34.56466675 353.67172241]
[38.93691635 339.26419067]
[46.20946503 326.08071899]
[56.06438446 314.69766235]
[68.07086182 305.61260986]
[81.70402527 299.22271729]
[96.36788940 295.80737305]
[96.07153320 280.81030273]
[95.77517700 265.81323242]
[95.47881317 250.81614685]
[95.18245697 235.81907654]
[94.88610077 220.82200623]
[94.58974457 205.82493591]
[94.29338837 190.82786560]
[93.99703217 175.83079529]
[93.70066833 160.83370972]
[85.71342468 148.26179504]
[93.17656708 134.31144714]
[85.92467499 132.02687073]
[79.33764648 128.22944641]
[73.72663116 123.09858704]
[69.35666656 116.87664032]
[66.43417358 109.85749817]
[65.09720612 102.37272644]
[50.26160431 100.15802765]
[35.42599869 97.94332886]
[44.79434967 109.65802765]
[45.64001846 124.63416290]
[37.65002441 137.32904053]
[23.78148460 143.04425049]
[9.16718388 139.66458130]
[-0.78408748 128.44085693]
[-2.38933754 113.52699280]
[4.94554090 100.44266510]
[18.50389671 94.03068542]
[4.20186043 89.50832367]
[-10.10017586 84.98596191]
[-24.40221214 80.46359253]
[-40.29015350 84.52626801]
[-51.55743408 72.61071777]
[-46.61324310 56.97463608]
[-30.54373741 53.70308685]
[-19.87984848 66.16156006]
[-5.57781267 70.68392181]
[8.72422314 75.20628357]
[23.02625847 79.72864532]
[37.64069748 83.10772705]
[52.47630310 85.32242584]
[67.31190491 87.53712463]
[71.68256378 77.84597778]
[78.92955780 69.67771149]
[88.52457428 63.88449478]
[99.68815613 61.13598251]
[111.45241547 61.84598541]
[112.93188477 46.91912460]
[114.41136169 31.99226379]
[115.89083862 17.06540298]
[101.39236450 13.07763290]
[87.77645111 6.69681454]
[75.43484497 -1.89346111]
[64.72264862 -12.44603539]
[55.94806671 -24.65728951]
[49.36356354 -38.17588425]
[45.15858841 -52.61285782]
[43.45412827 -67.55283356]
[44.29922485 -82.56594849]
[47.66955948 -97.22026062]
[53.46815872 -111.09413147]
[61.52819443 -123.78837585]
[71.61775208 -134.93775940]
[83.44654083 -144.22149658]
[96.67422485 -151.37246704]
[110.92021942 -156.18492126]
[125.77462769 -158.52041626]
[140.81007385 -158.31172180]
[155.59393311 -155.56488037]
[169.70088196 -150.35888672]
[182.72500610 -142.84355164]
[194.29158020 -133.23510742]
[204.06781006 -121.80998993]
[211.77243042 -108.89694214]
[217.18374634 -94.86748505]
[220.14607239 -80.12527466]
[220.57415771 -65.09448242]
[218.45571899 -50.20756912]
[213.85168457 -35.89286041]
[206.89453125 -22.56221962]
[197.78442383 -10.59919643]
[186.78347778 -0.34799114]
[174.20820618 7.89644957]
[160.42045593 13.89691639]
[145.81687927 17.48076439]
[130.81770325 18.54487801]
[129.33822632 33.47173691]
[127.85874939 48.39859772]
[126.37927246 63.32545853]
[136.93334961 73.98432159]
[151.87409973 72.65238190]
[166.81484985 71.32044220]
[181.67161560 69.25241852]
[196.40812683 66.45334625]
[211.14465332 63.65427017]
[225.88117981 60.85519409]
[232.37707520 46.76324844]
[245.93182373 39.21020126]
[261.33334351 41.10035706]
[272.65945435 51.70691681]
[275.55502319 66.95143127]
[268.90661621 80.97208405]
[255.27075195 88.37764740]
[239.89064026 86.32051849]
[228.68025208 75.59172058]
[213.94372559 78.39079285]
[199.20721436 81.18987274]
[184.47068787 83.98894501]
[194.99568176 94.67652893]
[193.40336609 109.59177399]
[180.85934448 117.81657410]
[166.54594421 113.33029938]
[160.94071960 99.41694641]
[168.14678955 86.26119232]
[153.20603943 87.59313202]
[138.26528931 88.92507172]
[136.96139526 109.72072601]
[125.60294342 126.15547943]
[108.17363739 134.01509094]
[116.18207550 147.65969849]
[108.69774628 160.53735352]
[108.99410248 175.53442383]
[109.29045868 190.53150940]
[109.58681488 205.52857971]
[109.88317108 220.52565002]
[110.17952728 235.52272034]
[110.47589111 250.51979065]
[110.77224731 265.51687622]
[111.06860352 280.51394653]
[111.36495972 295.51101685]
[126.15230560 298.34439087]
[140.02726746 304.19067383]
[152.38328552 312.79431152]
[162.68022156 323.77914429]
[170.46792603 336.66500854]
[175.40596008 350.88858032]
[177.27844238 365.82803345]
[176.00352478 380.83029175]
[171.63694763 395.23956299]
[164.36958313 408.42587280]
[154.51914978 419.81283569]
[142.51625061 428.90261841]
[128.88558960 435.29785156]
[114.22307587 438.71899414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[25 133]
[31 56]
[32 55]
[33 54]
[42 53]
[43 52]
[44 51]
[45 50]
[61 103]
[62 102]
[63 101]
[64 100]
[104 130]
[105 129]
[106 128]
[107 122]
[108 121]
[109 120]
[110 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
