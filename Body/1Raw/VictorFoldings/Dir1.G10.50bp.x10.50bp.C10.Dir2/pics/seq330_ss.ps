%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCCCCGGGGGGGGGGGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAxxxxxxxxxxUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAACUAACACAUUAUUUUCCCCCCCCCCCCCCUCCCAC\
) } def
/len { sequence length } bind def

/coor [
[47.02947617 308.27630615]
[36.46597672 297.53570557]
[28.55777168 284.71353149]
[23.70153618 270.45294189]
[22.14085960 255.46922302]
[23.95402145 240.51394653]
[29.05007553 226.33728027]
[37.17340469 213.65029907]
[47.91654968 203.08940125]
[60.74063492 195.18431091]
[75.00241089 190.33152771]
[73.44483185 175.41261292]
[71.88725281 160.49369812]
[70.32967377 145.57479858]
[68.77208710 130.65588379]
[87.68130493 93.08937073]
[81.05281067 79.63339996]
[74.42430878 66.17743683]
[67.79580688 52.72147369]
[61.16731262 39.26550674]
[54.53881454 25.80954170]
[39.38057709 23.06471825]
[28.86800194 12.04931450]
[26.88097191 -2.86764598]
[33.97377014 -15.93785000]
[27.34527016 -29.39381409]
[20.71677208 -42.84978104]
[7.06053114 -49.05518723]
[-7.43506575 -45.19802856]
[-18.66283607 -33.24523544]
[-34.56414032 -37.25528717]
[-38.78108215 -53.10298157]
[-26.97563171 -64.48557281]
[-11.29222488 -59.69362640]
[3.20337176 -63.55078506]
[-7.42638206 -74.13418579]
[0.16350417 -87.07225037]
[14.58823395 -82.95787048]
[10.88207245 -97.49280548]
[7.17591190 -112.02774048]
[3.46975040 -126.56267548]
[-0.23641077 -141.09761047]
[-16.85991287 -150.07861328]
[-21.62419891 -168.03408813]
[-11.97551727 -183.53572083]
[-16.28310204 -197.90390015]
[-20.59068680 -212.27207947]
[-31.58639526 -219.09471130]
[-34.85508728 -231.19985962]
[-29.16380310 -241.91976929]
[-33.17154312 -256.37445068]
[-37.17928314 -270.82916260]
[-41.18702316 -285.28384399]
[-45.19476318 -299.73852539]
[-49.20250320 -314.19320679]
[-53.21024323 -328.64791870]
[-57.21798325 -343.10260010]
[-72.29650879 -342.80447388]
[-86.97526550 -346.26638794]
[-100.33153534 -353.27075195]
[-111.52573395 -363.37719727]
[-119.85417938 -375.95050049]
[-124.79334259 -390.20025635]
[-126.03273773 -405.23071289]
[-123.49446869 -420.09704590]
[-117.33807373 -433.86477661]
[-107.95056915 -445.66839600]
[-95.92205048 -454.76593018]
[-82.00863647 -460.58554077]
[-67.08494568 -462.76138306]
[-52.08908844 -461.15667725]
[-37.96371841 -455.87228394]
[-25.59677124 -447.24038696]
[-15.76563740 -435.80361938]
[-9.08831310 -422.28091431]
[-5.98454189 -407.52227783]
[-6.64942789 -392.45544434]
[-11.04117584 -378.02758789]
[-18.88371849 -365.14559937]
[-29.68406296 -354.61929321]
[-42.76329422 -347.11032104]
[-38.75555420 -332.65563965]
[-34.74781418 -318.20095825]
[-30.74007416 -303.74627686]
[-26.73233414 -289.29159546]
[-22.72459412 -274.83688354]
[-18.71685410 -260.38220215]
[-14.70911407 -245.92752075]
[-1.54891860 -234.35992432]
[-6.22250271 -216.57966614]
[-1.91491807 -202.21148682]
[2.39266658 -187.84329224]
[13.44066906 -184.70767212]
[21.66718674 -176.52281189]
[24.92575073 -165.25978088]
[22.28670120 -153.71231079]
[14.29852581 -144.80377197]
[18.00468636 -130.26884460]
[21.71084785 -115.73390198]
[25.41700935 -101.19896698]
[29.12317085 -86.66403198]
[34.17273712 -49.47827911]
[40.80123520 -36.02231216]
[47.42973328 -22.56634903]
[62.11482239 -20.22407532]
[72.73036957 -9.55758286]
[75.05678558 5.49038029]
[67.99478149 19.18104362]
[74.62327576 32.63700867]
[81.25177765 46.09297562]
[87.88027191 59.54893875]
[94.50877380 73.00490570]
[101.13726807 86.46086884]
[112.33303833 96.44359589]
[126.45783997 101.49235535]
[142.05706787 98.85140991]
[151.43750000 110.42105865]
[165.56230164 115.46981812]
[179.68710327 120.51856995]
[195.71456909 117.04689026]
[206.53298950 129.37141418]
[201.01329041 144.81373596]
[184.83369446 147.48811340]
[174.63835144 134.64337158]
[160.51354980 129.59461975]
[146.38874817 124.54586029]
[131.79981995 127.54792786]
[121.40908813 115.61715698]
[107.28427887 110.56839752]
[101.38596344 115.20087433]
[83.69100189 129.09829712]
[85.24858093 144.01721191]
[86.80615997 158.93612671]
[88.36374664 173.85504150]
[89.92132568 188.77394104]
[104.87791443 190.57623291]
[119.05828094 195.66198730]
[131.75115967 203.77609253]
[142.31985474 214.51155090]
[150.23428345 227.32989502]
[155.09742737 241.58813477]
[156.66535950 256.57110596]
[154.85945129 271.52725220]
[149.77026367 285.70639038]
[141.65307617 298.39730835]
[130.91505432 308.96340942]
[118.09480286 316.87472534]
[103.83538055 321.73440552]
[88.85203552 323.29870605]
[73.89632416 321.48916626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 113]
[17 112]
[18 111]
[19 110]
[20 109]
[21 108]
[25 104]
[26 103]
[27 102]
[28 35]
[29 34]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[45 92]
[46 91]
[47 90]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[114 129]
[115 128]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
