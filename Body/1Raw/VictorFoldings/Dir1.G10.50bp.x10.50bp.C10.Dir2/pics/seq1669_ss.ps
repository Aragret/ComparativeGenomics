%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCAGUAAAGGGGGGGGGGCUAAGAGUAGAGUGCUUAGUUGAACAGGGCCCUGAAGCGCGUACACACCGxxxxxxxxxxAAGCACUAUAGUUGUAGCAGGAAUCUUCUUACUCAUCCGCUUCCACCCCCCCCCCCCCCCUAGCAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[80.90281677 370.01953125]
[70.33930969 359.27893066]
[62.43110657 346.45675659]
[57.57487106 332.19616699]
[56.01419449 317.21243286]
[57.82735825 302.25717163]
[62.92341232 288.08050537]
[71.04674530 275.39352417]
[81.78988647 264.83264160]
[94.61397552 256.92752075]
[108.87574768 252.07475281]
[107.31816864 237.15583801]
[105.76058960 222.23692322]
[104.20300293 207.31800842]
[102.64542389 192.39910889]
[101.08784485 177.48019409]
[99.53026581 162.56127930]
[97.97267914 147.64236450]
[96.41510010 132.72344971]
[94.85752106 117.80454254]
[90.32238007 114.38350677]
[87.32376099 109.99054718]
[85.99523163 105.21369934]
[86.26652527 100.62263489]
[87.88928223 96.70331573]
[90.48223877 93.80701447]
[75.75023651 88.03824615]
[73.66674042 73.29008484]
[64.15838623 61.68874359]
[49.42638016 55.91997910]
[47.34288406 41.17181778]
[37.83452606 29.57047462]
[28.32616806 17.96913338]
[18.81781006 6.36779261]
[9.30945206 -5.23354864]
[-0.19890666 -16.83489037]
[-5.20758533 -18.71444321]
[-8.61544991 -22.02183533]
[-10.14501095 -25.88992500]
[-9.91113663 -29.46942139]
[-20.46242714 -40.13104630]
[-32.54241562 -49.02339554]
[-48.24299622 -50.97336197]
[-53.90583038 -64.74948120]
[-65.98581696 -73.64183044]
[-74.81370544 -76.23418427]
[-78.22203827 -82.84696960]
[-93.87864685 -85.12314606]
[-99.25366211 -99.01409149]
[-111.14604187 -108.15583038]
[-126.78244019 -105.85828400]
[-139.41360474 -115.35717773]
[-141.54571533 -131.01698303]
[-131.91380310 -143.54702759]
[-116.23233032 -145.51344299]
[-103.80482483 -135.74960327]
[-102.00431061 -120.04821014]
[-90.11193085 -110.90647125]
[-75.30593872 -109.28417969]
[-69.08029938 -94.73934937]
[-57.09346771 -85.72182465]
[-45.01348114 -76.82947540]
[-30.17694092 -75.51554871]
[-23.65006447 -61.10338593]
[-11.57007694 -52.21103668]
[-16.85408020 -66.24952698]
[-16.81114388 -81.24946594]
[-11.44686031 -95.25748444]
[-1.45979226 -106.44937134]
[11.84949112 -113.36768341]
[26.74778748 -115.11146545]
[41.29496384 -111.45363617]
[53.59660721 -102.87054443]
[62.05074310 -90.47991943]
[65.55641937 -75.89533234]
[63.65711975 -61.01605988]
[56.60017395 -47.77976608]
[45.30457306 -37.91014099]
[31.24129295 -32.69246674]
[16.24172401 -32.80620956]
[2.26070046 -38.23563004]
[11.40243435 -26.34324837]
[20.91079330 -14.74190712]
[30.41915131 -3.14056611]
[39.92750931 8.46077538]
[49.43586731 20.06211662]
[58.94422531 31.66345787]
[72.99613190 36.60241699]
[75.75972748 52.18038559]
[85.26808167 63.78172684]
[99.31998444 68.72068787]
[102.08358002 84.29866028]
[116.15509796 89.49407196]
[130.92115784 86.85520935]
[144.67984009 74.66182709]
[160.94094849 81.18684387]
[175.64891052 78.24136353]
[190.35687256 75.29588318]
[198.21702576 70.51364136]
[205.40130615 72.44546509]
[220.16735840 69.80660248]
[234.93341064 67.16773224]
[238.54246521 52.37264633]
[247.86235046 40.32857132]
[261.27832031 33.12221146]
[276.46597290 32.00211716]
[290.79400635 37.16234970]
[301.77993774 47.70886993]
[307.52041626 61.81442642]
[307.02087402 77.03514862]
[300.36785889 90.73394775]
[288.71405029 100.53743744]
[274.07852173 104.74709320]
[258.99697876 102.63356781]
[246.08238220 94.56304169]
[237.57228088 81.93379211]
[222.80622864 84.57265472]
[208.04016113 87.21151733]
[193.30235291 90.00384521]
[178.59440613 92.94932556]
[163.88644409 95.89480591]
[156.88772583 105.81072998]
[144.61001587 108.35562134]
[133.56001282 101.62126160]
[118.79396057 104.26012421]
[109.77643585 116.24696350]
[111.33401489 131.16587830]
[112.89159393 146.08477783]
[114.44917297 161.00369263]
[116.00675964 175.92260742]
[117.56433868 190.84152222]
[119.12191772 205.76043701]
[120.67949677 220.67935181]
[122.23708344 235.59825134]
[123.79466248 250.51716614]
[138.75125122 252.31945801]
[152.93162537 257.40521240]
[165.62449646 265.51931763]
[176.19319153 276.25479126]
[184.10762024 289.07312012]
[188.97076416 303.33135986]
[190.53869629 318.31433105]
[188.73278809 333.27047729]
[183.64360046 347.44961548]
[175.52641296 360.14053345]
[164.78839111 370.70663452]
[151.96813965 378.61795044]
[137.70870972 383.47763062]
[122.72537231 385.04193115]
[107.76966095 383.23239136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[26 92]
[28 90]
[29 89]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[40 81]
[41 65]
[42 64]
[44 62]
[45 61]
[47 60]
[49 58]
[50 57]
[93 125]
[94 124]
[96 121]
[97 120]
[98 119]
[100 118]
[101 117]
[102 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
