%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCACAGCGGGGGGGGGGCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAACAAxxxxxxxxxxACCUUUUUCCAAGGACAAAUCAGAGAAAAAGUCUUUAACUCCACCAUUAGCCCCCCCCCCCACCCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[85.18793488 152.87287903]
[71.47409821 146.91706848]
[59.87530518 137.48262024]
[51.25152969 125.26905060]
[46.24217987 111.18192291]
[45.21867371 96.26571655]
[48.25689697 81.62638092]
[55.13158417 68.34934998]
[65.33300781 57.41903687]
[78.10480499 49.64586639]
[92.50000000 45.60617065]
[92.50000000 30.60617256]
[92.50000000 15.60617256]
[92.50000000 0.60617250]
[92.50000000 -14.39382744]
[92.50000000 -29.39382744]
[92.50000000 -44.39382935]
[92.50000000 -59.39382935]
[92.50000000 -74.39382935]
[92.50000000 -89.39382935]
[92.50000000 -104.39382935]
[92.50000000 -119.39382935]
[92.50000000 -134.39382935]
[92.50000000 -149.39382935]
[92.50000000 -164.39382935]
[77.52366638 -165.31739807]
[62.63258743 -167.16116333]
[47.88325882 -169.91815186]
[33.33162689 -173.57789612]
[19.03289604 -178.12651062]
[5.04130173 -183.54673767]
[-8.59008026 -189.81802368]
[-21.80953979 -196.91659546]
[-34.56692886 -204.81549072]
[-46.81386185 -213.48477173]
[-58.50387192 -222.89152527]
[-69.59262085 -233.00010681]
[-80.03804016 -243.77215576]
[-89.80050659 -255.16679382]
[-98.84299469 -267.14080811]
[-107.13120270 -279.64877319]
[-114.63368225 -292.64324951]
[-121.32197571 -306.07495117]
[-127.17071533 -319.89291382]
[-132.15771484 -334.04470825]
[-136.26405334 -348.47665405]
[-139.47415161 -363.13406372]
[-141.77584839 -377.96124268]
[-143.16038513 -392.90203857]
[-143.62252808 -407.89968872]
[-143.16053772 -422.89736938]
[-141.77613831 -437.83816528]
[-139.47459412 -452.66537476]
[-136.26463318 -467.32278442]
[-132.15843201 -481.75479126]
[-127.17157745 -495.90664673]
[-121.32297516 -509.72467041]
[-114.63481140 -523.15643311]
[-107.13246155 -536.15093994]
[-98.84438324 -548.65899658]
[-89.80200958 -560.63311768]
[-80.03964996 -572.02789307]
[-69.59433746 -582.79998779]
[-58.50569153 -592.90869141]
[-46.81577301 -602.31555176]
[-34.56892776 -610.98498535]
[-21.81161308 -618.88397217]
[-8.59222317 -625.98266602]
[5.03909636 -632.25408936]
[19.03063774 -637.67449951]
[33.32932663 -642.22320557]
[47.88092041 -645.88311768]
[62.63021851 -648.64025879]
[77.52127838 -650.48419189]
[92.49760437 -651.40789795]
[107.50239563 -651.40789795]
[122.47872162 -650.48419189]
[137.36978149 -648.64025879]
[152.11907959 -645.88311768]
[166.67066956 -642.22320557]
[180.96936035 -637.67449951]
[194.96090698 -632.25408936]
[208.59222412 -625.98266602]
[221.81161499 -618.88397217]
[234.56892395 -610.98498535]
[246.81576538 -602.31555176]
[258.50567627 -592.90869141]
[269.59432983 -582.79998779]
[280.03964233 -572.02789307]
[289.80200195 -560.63311768]
[298.84439087 -548.65899658]
[307.13247681 -536.15093994]
[314.63482666 -523.15643311]
[321.32296753 -509.72467041]
[327.17156982 -495.90664673]
[332.15844727 -481.75479126]
[336.26464844 -467.32278442]
[339.47457886 -452.66537476]
[341.77612305 -437.83816528]
[343.16052246 -422.89736938]
[343.62252808 -407.89968872]
[343.16040039 -392.90203857]
[341.77584839 -377.96124268]
[339.47415161 -363.13406372]
[336.26403809 -348.47665405]
[332.15771484 -334.04470825]
[327.17071533 -319.89291382]
[321.32196045 -306.07495117]
[314.63366699 -292.64324951]
[307.13119507 -279.64877319]
[298.84298706 -267.14080811]
[289.80050659 -255.16679382]
[280.03802490 -243.77215576]
[269.59262085 -233.00010681]
[258.50387573 -222.89152527]
[246.81385803 -213.48477173]
[234.56692505 -204.81549072]
[221.80953979 -196.91659546]
[208.59007263 -189.81802368]
[194.95869446 -183.54673767]
[180.96710205 -178.12651062]
[166.66836548 -173.57789612]
[152.11674500 -169.91815186]
[137.36741638 -167.16116333]
[122.47633362 -165.31739807]
[107.50000000 -164.39382935]
[107.50000000 -149.39382935]
[107.50000000 -134.39382935]
[107.50000000 -119.39382935]
[107.50000000 -104.39382935]
[107.50000000 -89.39382935]
[107.50000000 -74.39382935]
[107.50000000 -59.39382935]
[107.50000000 -44.39382935]
[107.50000000 -29.39382744]
[107.50000000 -14.39382744]
[107.50000000 0.60617250]
[107.50000000 15.60617256]
[107.50000000 30.60617256]
[107.50000000 45.60617065]
[121.89519501 49.64586639]
[134.66699219 57.41903687]
[144.86842346 68.34934998]
[151.74310303 81.62638092]
[154.78132629 96.26571655]
[153.75781250 111.18192291]
[148.74847412 125.26905060]
[140.12469482 137.48262024]
[128.52589417 146.91706848]
[114.81206512 152.87287903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
