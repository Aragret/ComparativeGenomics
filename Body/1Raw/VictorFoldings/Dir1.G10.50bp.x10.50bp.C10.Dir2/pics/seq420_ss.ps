%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAAACAAAGGGGGGGGGGGAACCCUAACACCAGCCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUxxxxxxxxxxGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACUAAACCCACACUCAACCCCCCCCCCCAGAAACAAAG\
) } def
/len { sequence length } bind def

/coor [
[100.87148285 374.77731323]
[87.65326691 367.50125122]
[76.76930237 357.05126953]
[68.96168518 344.13992310]
[64.76274109 329.64746094]
[64.45877075 314.56204224]
[68.07049561 299.91220093]
[75.35166168 286.69677734]
[85.80583191 275.81686401]
[98.72021484 268.01422119]
[113.21429443 263.82086182]
[112.90631866 248.82403564]
[112.59833527 233.82719421]
[112.29035950 218.83036804]
[111.98238373 203.83352661]
[111.67440796 188.83668518]
[111.36642456 173.83984375]
[111.05844879 158.84300232]
[110.75047302 143.84617615]
[110.44249725 128.84933472]
[96.66268158 129.12811279]
[84.78590393 123.45384216]
[77.10830688 113.53517914]
[74.83509064 101.83029175]
[77.91222382 90.95250702]
[66.52114868 81.19322968]
[55.13007355 71.43395233]
[42.19323730 71.63853455]
[32.89983749 63.22401810]
[31.89031219 51.13092041]
[19.55902863 42.59045792]
[6.27168608 35.63010406]
[-7.01565504 28.66974831]
[-16.13133430 27.44493103]
[-20.50218391 21.42763329]
[-33.64381409 14.19593143]
[-46.78544617 6.96422911]
[-62.60615540 7.08969641]
[-70.02637482 -5.82500982]
[-83.16800690 -13.05671215]
[-89.87474060 -13.30631447]
[-94.69190216 -16.46587944]
[-96.69181824 -20.86469078]
[-109.52547455 -28.62982559]
[-122.35912323 -36.39496231]
[-135.19277954 -44.16009521]
[-148.60997009 -36.68517303]
[-163.96681213 -36.93634033]
[-177.13238525 -44.84603500]
[-184.56521606 -58.28659058]
[-184.26591492 -73.64257050]
[-176.31498718 -86.78327942]
[-162.85119629 -94.17395020]
[-147.49623108 -93.82651520]
[-134.38050842 -85.83443451]
[-127.03208160 -72.34754944]
[-127.42764282 -56.99375153]
[-114.59399414 -49.22861481]
[-101.76033783 -41.46347809]
[-88.92668152 -33.69834518]
[-75.93630219 -26.19834328]
[-62.79467010 -18.96664238]
[-47.91394043 -19.60936928]
[-39.55374527 -6.17740250]
[-26.41211319 1.05430007]
[-13.27048206 8.28600216]
[-0.05529892 15.38240623]
[13.23204231 22.34276199]
[26.51938438 29.30311775]
[19.74290466 15.92106628]
[19.32494164 0.92689008]
[25.34542656 -12.81187820]
[36.65298462 -22.66779709]
[51.08512497 -26.75599098]
[65.88180542 -24.29462051]
[78.21325684 -15.75440788]
[85.72118378 -2.76860642]
[86.96974182 12.17933941]
[81.72016144 26.23074150]
[70.97637939 36.69836807]
[56.79307556 41.58035660]
[41.88140869 39.94262314]
[59.20795059 42.55710602]
[64.88935089 60.04288101]
[76.28042603 69.80215454]
[87.67149353 79.56143188]
[111.77510834 75.39768219]
[130.40095520 95.86342621]
[143.82841492 89.17735291]
[157.25585938 82.49127197]
[170.68330383 75.80519867]
[167.38023376 61.09625244]
[167.69392395 46.02425385]
[171.60615540 31.46547890]
[178.88945007 18.26635170]
[189.12039185 7.19425011]
[201.70414734 -1.10710669]
[215.90911865 -6.15508842]
[230.90945435 -7.65621281]
[245.83305359 -5.52320576]
[259.81225586 0.11992220]
[272.03436279 8.94508743]
[281.78878784 20.43920517]
[288.50842285 33.93402481]
[291.80258179 48.64496994]
[291.47973633 63.71677399]
[287.55868530 78.27317810]
[280.26739502 91.46788788]
[270.02975464 102.53378296]
[257.44094849 110.82750702]
[243.23292542 115.86687469]
[228.23168945 117.35890961]
[213.30938721 115.21685028]
[199.33358765 109.56525421]
[187.11683655 100.73268127]
[177.36938477 89.23265076]
[163.94194031 95.91872406]
[150.51448059 102.60479736]
[137.08703613 109.29087067]
[152.07620239 109.86075592]
[166.79241943 106.95678711]
[181.26045227 110.91611481]
[192.44737244 120.90875244]
[198.00810242 134.83995056]
[196.77696228 149.78933716]
[189.01200867 162.62310791]
[176.34101868 170.65092468]
[161.42018127 172.18995667]
[147.37731934 166.91755676]
[137.15623474 155.93896484]
[132.89947510 141.55467224]
[125.43933105 128.54135132]
[125.74731445 143.53819275]
[126.05529022 158.53503418]
[126.36326599 173.53187561]
[126.67124176 188.52870178]
[126.97922516 203.52554321]
[127.28720093 218.52238464]
[127.59517670 233.51922607]
[127.90315247 248.51605225]
[128.21113586 263.51290894]
[142.86514282 267.10763550]
[156.08897400 274.37350464]
[166.98100281 284.81506348]
[174.79859924 297.72039795]
[179.00872803 312.20962524]
[179.32434082 327.29479980]
[175.72393799 341.94741821]
[168.45297241 355.16845703]
[158.00721741 366.05645752]
[145.09886169 373.86904907]
[130.60801697 378.07357788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[25 86]
[26 85]
[27 84]
[30 82]
[31 69]
[32 68]
[33 67]
[35 66]
[36 65]
[37 64]
[39 62]
[40 61]
[43 60]
[44 59]
[45 58]
[46 57]
[88 119]
[89 118]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
