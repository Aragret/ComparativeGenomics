%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAAACUAGGGGGGGGGGGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGGUUACCCAAGGCACCCCxxxxxxxxxxAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUAUGCCUAGAAGGCCCCCCCCCCAAUAAUACUA\
) } def
/len { sequence length } bind def

/coor [
[98.32374573 349.85394287]
[85.10355377 342.58145142]
[74.21675110 332.13446045]
[66.40561676 319.22521973]
[62.20273590 304.73388672]
[61.89466476 289.64855957]
[65.50240326 274.99774170]
[72.77997589 261.78033447]
[83.23118591 250.89756775]
[96.14344788 243.09143066]
[110.63638306 238.89414978]
[110.32432556 223.89738464]
[110.01227570 208.90063477]
[109.70021820 193.90388489]
[109.38816071 178.90713501]
[109.07610321 163.91036987]
[108.76404572 148.91362000]
[108.45198822 133.91687012]
[108.13993835 118.92011261]
[95.04678345 111.60100555]
[82.10872650 119.19091797]
[69.17066956 126.78082275]
[63.75084305 141.88066101]
[48.52022171 146.92127991]
[35.16243744 138.03593445]
[33.92443848 122.04072571]
[45.75590897 111.20578766]
[61.58076096 113.84276581]
[74.51881409 106.25286102]
[87.45687103 98.66294861]
[96.22307587 86.49111176]
[99.32140350 71.81459045]
[102.41972351 57.13806534]
[105.51804352 42.46153641]
[95.18633270 34.29758835]
[89.03334808 22.79104233]
[87.99980927 9.90361786]
[73.87500763 4.85486174]
[59.75020218 -0.19389459]
[45.62540054 -5.24265099]
[31.50059700 -10.29140759]
[17.37579536 -15.34016323]
[3.25099158 -20.38891983]
[-11.80636024 -14.85216045]
[-25.44799995 -23.29521942]
[-27.20922661 -39.24130630]
[-15.73898029 -50.45794296]
[0.16374874 -48.34069061]
[8.29974747 -34.51372147]
[22.42455101 -29.46496582]
[36.54935455 -24.41621017]
[50.67415619 -19.36745453]
[64.79895782 -14.31869793]
[78.92375946 -9.26994133]
[93.04856873 -4.22118473]
[97.26610565 -9.34396839]
[102.46212006 -13.47095108]
[108.40660095 -16.41944695]
[114.83642578 -18.05894279]
[121.46695709 -18.31686211]
[128.00471497 -17.18178940]
[134.16026306 -14.70396996]
[144.14299011 -25.89973450]
[154.12571716 -37.09550095]
[164.10844421 -48.29126740]
[174.09117126 -59.48703384]
[159.71267700 -55.21403122]
[144.71551514 -55.50615692]
[130.51431274 -60.33585358]
[118.44860077 -69.24755859]
[109.65647125 -81.40068054]
[104.96723175 -95.64888000]
[104.82320404 -110.64818573]
[109.23797607 -124.98380280]
[117.79512024 -137.30351257]
[129.68748474 -146.44526672]
[143.79331970 -151.54678345]
[158.78208923 -152.12683105]
[173.24000549 -148.13072205]
[185.80329895 -139.93537903]
[195.28695679 -128.31384277]
[200.79641724 -114.36228180]
[201.81201172 -99.39670563]
[198.23794556 -84.82872772]
[190.41120911 -72.03232574]
[203.79748535 -78.80043793]
[217.18377686 -85.56855774]
[230.57006836 -92.33666992]
[243.95634460 -99.10478210]
[240.43415833 -113.75711823]
[240.38656616 -128.82676697]
[243.81614685 -143.50105286]
[250.53796387 -156.98861694]
[260.18948364 -168.56205750]
[272.25024414 -177.59727478]
[286.06979370 -183.60697937]
[300.90286255 -186.26710510]
[315.94955444 -185.43415833]
[330.39840698 -181.15309143]
[343.47021484 -173.65475464]
[354.45999146 -163.34355164]
[362.77511597 -150.77551270]
[367.96716309 -136.62844849]
[369.75613403 -121.66528320]
[368.04550171 -106.69296265]
[362.92758179 -92.51892090]
[354.67834473 -79.90753937]
[343.74267578 -69.53894806]
[330.71029663 -61.97231293]
[316.28405762 -57.61568069]
[301.24191284 -56.70400620]
[286.39511108 -59.28645325]
[272.54431152 -65.22375488]
[260.43643188 -74.19571686]
[250.72445679 -85.71849823]
[237.33818054 -78.95038605]
[223.95188904 -72.18227386]
[210.56561279 -65.41415405]
[197.17932129 -58.64604187]
[185.28694153 -49.50430679]
[175.30421448 -38.30854034]
[165.32148743 -27.11277390]
[155.33876038 -15.91700935]
[145.35603333 -4.72124290]
[150.99801636 16.75584412]
[141.06497192 36.84558105]
[120.19457245 45.55986023]
[117.09624481 60.23638535]
[113.99792480 74.91291046]
[110.89960480 89.58943939]
[123.13668823 118.60805511]
[123.44874573 133.60481262]
[123.76080322 148.60156250]
[124.07286072 163.59831238]
[124.38491058 178.59507751]
[124.69696808 193.59182739]
[125.00902557 208.58857727]
[125.32108307 223.58532715]
[125.63314056 238.58209229]
[140.28813171 242.17285156]
[153.51394653 249.43511963]
[164.40881348 259.87371826]
[172.22990417 272.77691650]
[176.44396973 287.26498413]
[176.76370239 302.35006714]
[173.16726685 317.00369263]
[165.89990234 330.22668457]
[155.45710754 341.11752319]
[142.55087280 348.93365479]
[128.06118774 353.14212036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 30]
[21 29]
[22 28]
[31 130]
[32 129]
[33 128]
[34 127]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
