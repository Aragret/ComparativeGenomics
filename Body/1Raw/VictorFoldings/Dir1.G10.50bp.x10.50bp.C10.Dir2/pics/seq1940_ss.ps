%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCAGACAGGGGGGGGGGACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCGAUAGAAAUUGAAxxxxxxxxxxGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCCCCCCCCCCCUACCACACA\
) } def
/len { sequence length } bind def

/coor [
[90.35041809 384.45593262]
[77.79219055 376.10476685]
[67.70597076 364.89233398]
[60.72577667 351.52343750]
[57.29039001 336.83843994]
[57.61576843 321.76046753]
[61.68145370 307.23736572]
[69.23187256 294.18200684]
[79.79240417 283.41510010]
[92.69919586 275.61349487]
[107.14092255 271.26751709]
[106.51694489 256.28051758]
[105.89296722 241.29350281]
[105.26898956 226.30647278]
[104.64501190 211.31945801]
[104.02103424 196.33244324]
[103.39706421 181.34542847]
[102.77308655 166.35841370]
[102.14910889 151.37139893]
[101.52513123 136.38438416]
[93.69819641 134.99623108]
[86.54351044 131.98657227]
[80.38277435 127.57936859]
[75.47311401 122.05895996]
[71.99662018 115.75293732]
[70.05418396 109.01334381]
[69.66385651 102.19741058]
[54.89780045 99.55854034]
[40.13174438 96.91967773]
[26.00006866 107.17799377]
[9.14724922 104.13389587]
[-0.13000701 90.14138031]
[-14.94776535 87.81027985]
[-21.34418869 89.85802460]
[-26.95197487 88.52233887]
[-30.32819939 85.06161499]
[-45.03615952 82.11613464]
[-59.74412155 79.17065430]
[-74.45208740 76.22516632]
[-87.46364594 85.19593811]
[-102.99218750 82.25653076]
[-111.82489014 69.15084839]
[-108.72147369 53.65425873]
[-95.52313995 44.96061325]
[-80.06021881 48.22769547]
[-71.50659943 61.51720810]
[-56.79864120 64.46269226]
[-42.09067917 67.40817261]
[-27.38271713 70.35365295]
[-12.61666107 72.99251556]
[2.20109677 75.32362366]
[11.48708248 66.33656311]
[24.45022392 64.32875824]
[36.36902618 70.25919342]
[42.77061081 82.15362549]
[57.53666306 84.79248810]
[72.30271912 87.43135071]
[86.27623749 72.85652161]
[106.29765320 70.24349213]
[112.92614746 56.78752518]
[119.55464935 43.33156204]
[126.18314362 29.87559509]
[121.32975769 15.07416344]
[128.24368286 1.52232623]
[142.38449097 -3.01342177]
[129.70086670 4.99442863]
[115.57456970 10.03899002]
[100.68756866 11.87672424]
[85.75858307 10.41891003]
[71.50833130 5.73592806]
[58.62477875 -1.94614053]
[47.72991943 -12.25642586]
[39.34971619 -24.69717598]
[33.88875198 -38.66778183]
[31.61066437 -53.49378204]
[32.62543106 -68.45941925]
[36.88406372 -82.84218597]
[44.18096924 -95.94773102]
[54.16386795 -107.14334106]
[66.35081482 -115.88852692]
[80.15345764 -121.76110077]
[94.90543365 -124.47754669]
[109.89456940 -123.90671539]
[124.39722443 -120.07617188]
[137.71324158 -113.17084503]
[149.19976807 -103.52410126]
[158.30227661 -91.60166168]
[164.58128357 -77.97911072]
[167.73370361 -63.31410599]
[167.60731506 -48.31463623]
[164.20822144 -33.70483780]
[157.70164490 -20.19181633]
[170.31277466 -28.31336021]
[182.92390442 -36.43490219]
[195.53503418 -44.55644226]
[208.14616394 -52.67798615]
[211.24562073 -68.17536926]
[224.44174194 -76.87238312]
[239.90548706 -73.60925293]
[248.46249390 -60.32192230]
[245.03605652 -44.89353943]
[231.65899658 -36.47748566]
[216.26770020 -40.06685638]
[203.65657043 -31.94531631]
[191.04544067 -23.82377243]
[178.43431091 -15.70223141]
[165.82318115 -7.58068895]
[155.84046936 3.61507678]
[160.86250305 17.59057808]
[154.33195496 31.33126640]
[139.63911438 36.50409317]
[133.01062012 49.96006012]
[126.38211823 63.41602325]
[119.75361633 76.87198639]
[132.37899780 91.73999023]
[134.02549744 112.97748566]
[148.04220581 118.31900024]
[162.05891418 123.66050720]
[175.62840271 115.88856506]
[191.00970459 118.70806122]
[200.94024658 130.78773499]
[200.73112488 146.42391968]
[190.48109436 158.23368835]
[175.02989197 160.64083862]
[161.67311096 152.50877380]
[156.71740723 137.67723083]
[142.70069885 132.33570862]
[128.68397522 126.99420166]
[116.51214600 135.76040649]
[117.13612366 150.74742126]
[117.76010132 165.73443604]
[118.38407898 180.72145081]
[119.00805664 195.70846558]
[119.63203430 210.69548035]
[120.25601196 225.68251038]
[120.87998962 240.66952515]
[121.50396729 255.65653992]
[122.12793732 270.64355469]
[136.88095093 273.77398682]
[150.39158630 280.47573853]
[161.81056213 290.32754517]
[170.42007446 302.71008301]
[175.67892456 316.84497070]
[177.25653076 331.84368896]
[175.05372620 346.76342773]
[169.20896912 360.66629028]
[160.08969116 372.67837524]
[148.26911926 382.04452515]
[134.49031067 388.17602539]
[119.61941528 390.68740845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[27 57]
[28 56]
[29 55]
[32 51]
[33 50]
[36 49]
[37 48]
[38 47]
[39 46]
[59 114]
[60 113]
[61 112]
[62 111]
[65 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[116 128]
[117 127]
[118 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
