%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCGCCCUUGGGGGGGGGGACCACGCUACUCCUACCUAUCUCCCCUUUUAUACUAAUAAUCUUAUAGAAxxxxxxxxxxAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACAACAUUUCCCCCGCCCCCCCCCCCAUCCCCCUU\
) } def
/len { sequence length } bind def

/coor [
[83.25651550 358.97137451]
[69.41057587 352.95535278]
[57.70191574 343.42593384]
[48.99939346 331.09027100]
[43.94879150 316.86373901]
[42.92490005 301.80206299]
[46.00369644 287.02291870]
[52.95671844 273.62298584]
[63.26800537 262.59664917]
[76.17238617 254.76214600]
[90.71227264 250.70082092]
[90.71227264 235.70082092]
[90.71227264 220.70082092]
[90.71227264 205.70082092]
[90.71227264 190.70082092]
[90.71227264 175.70082092]
[90.71227264 160.70082092]
[90.71227264 145.70082092]
[90.71227264 130.70082092]
[90.71227264 115.70082855]
[80.35697174 126.55291748]
[65.38087463 125.70649719]
[56.31428146 113.75672913]
[59.53229523 99.10598755]
[72.77219391 92.05580139]
[86.72481537 97.56382751]
[75.22301483 87.93530273]
[63.72121048 78.30677795]
[51.54699326 87.18788147]
[37.60939789 92.89364624]
[22.72023964 95.09641266]
[7.74564409 93.67244720]
[-6.44435120 88.70883942]
[-19.02633667 80.49820709]
[-29.27131271 69.52146912]
[-36.58692551 56.41965103]
[-40.55172729 41.95644760]
[-40.93943024 26.97373962]
[-37.73183823 12.34255981]
[-31.11964989 -1.08753121]
[-42.62145233 -10.71605778]
[-54.12325668 -20.34458351]
[-67.60582733 -13.38068199]
[-82.68678284 -12.11266804]
[-97.06540680 -16.70273590]
[-108.56010437 -26.42176819]
[-115.43936157 -39.76495743]
[-116.68257141 -54.68473434]
[-112.13131714 -68.90498352]
[-123.63311768 -78.53350830]
[-135.13491821 -88.16203308]
[-146.63673401 -97.79055786]
[-162.87455750 -100.08506012]
[-168.75459290 -115.39379120]
[-158.22795105 -127.96843719]
[-142.12355042 -124.87329102]
[-137.00820923 -109.29236603]
[-125.50640106 -99.66383362]
[-114.00459290 -90.03530884]
[-102.50279236 -80.40678406]
[-89.30500793 -87.38874054]
[-74.39920807 -88.78967285]
[-60.05389786 -84.36509705]
[-48.46425247 -74.75949097]
[-41.41622162 -61.41262054]
[-40.01135254 -46.34379959]
[-44.49473190 -31.84638786]
[-32.99292755 -22.21786118]
[-21.49112320 -12.58933449]
[-9.43373680 -21.46107674]
[4.40495729 -27.19261932]
[19.22219658 -29.44678688]
[34.15732956 -28.08825302]
[48.34180832 -23.19166374]
[60.94968796 -15.03754520]
[71.24573517 -4.09624147]
[78.62829590 8.99922371]
[82.66445160 23.48976135]
[83.11540222 38.53422165]
[79.95058441 53.25822449]
[73.34973907 66.80496979]
[84.85153961 76.43350220]
[96.35334778 86.06202698]
[110.99684906 89.31285095]
[125.49243927 85.45569611]
[139.98803711 81.59853363]
[153.15661621 74.41602325]
[164.24794006 64.31737518]
[169.24299622 49.30537796]
[183.86288452 46.45795059]
[194.95420837 36.35930252]
[206.04551697 26.26065063]
[206.53462219 10.46393204]
[218.10749817 -0.29915622]
[233.89816284 0.35693476]
[244.53829956 12.04295826]
[243.71530151 27.82580376]
[231.91743469 38.34178925]
[216.14416504 37.35196686]
[205.05285645 47.45061493]
[193.96153259 57.54926682]
[189.75981140 71.83893585]
[174.34658813 75.40869141]
[163.25526428 85.50733948]
[177.97467041 82.61959076]
[192.95370483 83.41246796]
[207.28599548 87.83800507]
[220.10432434 95.62841034]
[230.63307190 106.31230164]
[238.23515320 119.24320221]
[242.45059204 133.63870239]
[243.02429199 148.62771606]
[239.92155457 163.30331421]
[233.33012390 176.77748108]
[223.64881897 188.23489380]
[211.46347046 196.98231506]
[197.51138306 202.49043274]
[182.63679504 204.42594910]
[167.73971558 202.67176819]
[153.72157288 197.33401489]
[141.43057251 188.73567200]
[131.61042786 177.39703369]
[124.85535431 164.00416565]
[121.57407379 149.36746216]
[121.96514893 134.37255859]
[126.00491333 119.92678070]
[133.44891357 106.90423584]
[143.84519958 96.09413147]
[129.34960938 99.95128632]
[114.85400391 103.80844879]
[105.71227264 115.70082855]
[105.71227264 130.70082092]
[105.71227264 145.70082092]
[105.71227264 160.70082092]
[105.71227264 175.70082092]
[105.71227264 190.70082092]
[105.71227264 205.70082092]
[105.71227264 220.70082092]
[105.71227264 235.70082092]
[105.71227264 250.70082092]
[120.25215912 254.76214600]
[133.15653992 262.59664917]
[143.46781921 273.62298584]
[150.42085266 287.02291870]
[153.49964905 301.80206299]
[152.47575378 316.86373901]
[147.42515564 331.09027100]
[138.72262573 343.42593384]
[127.01396179 352.95535278]
[113.16802979 358.97137451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 83]
[27 82]
[28 81]
[40 69]
[41 68]
[42 67]
[49 60]
[50 59]
[51 58]
[52 57]
[84 130]
[85 129]
[86 128]
[87 104]
[88 103]
[90 101]
[91 100]
[92 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
