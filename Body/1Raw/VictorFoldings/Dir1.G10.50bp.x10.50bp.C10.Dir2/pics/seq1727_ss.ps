%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUAACUAGGGGGGGGGGAAACCCCUACGCAUUUAUAUAGAGGAGACAAGUCGUAACAUGGUAAGUGUxxxxxxxxxxGAUUUCCCCUAUUCUCAGGCUACACCCUAGACCAAACCUACGCCAAAAUCCCCCCCCCCCCAUUUCACUA\
) } def
/len { sequence length } bind def

/coor [
[84.40385437 413.67337036]
[71.18366241 406.40087891]
[60.29685593 395.95388794]
[52.48572540 383.04464722]
[48.28284454 368.55331421]
[47.97476959 353.46798706]
[51.58251190 338.81716919]
[58.86008453 325.59976196]
[69.31129456 314.71701050]
[82.22355652 306.91085815]
[96.71649170 302.71356201]
[96.40443420 287.71682739]
[96.09237671 272.72006226]
[95.78031921 257.72329712]
[95.46826935 242.72654724]
[95.15621185 227.72979736]
[94.84415436 212.73304749]
[94.53209686 197.73629761]
[94.22003937 182.73953247]
[93.90798187 167.74278259]
[93.59593201 152.74603271]
[78.36820221 148.53062439]
[65.05338287 140.02362061]
[54.82892227 127.97730255]
[48.59896088 113.45693970]
[33.69705963 115.16963196]
[18.81377983 117.03724670]
[3.95073247 119.05957794]
[-10.91231441 121.08191681]
[-16.65400696 135.32720947]
[-28.75899124 144.78051758]
[-43.97108841 146.89892578]
[-58.19831848 141.11260986]
[-67.61363220 128.97805786]
[-69.68435669 113.75939178]
[-63.85346985 99.55036926]
[-51.68946075 90.17314148]
[-36.46438217 88.15013123]
[-22.27370453 94.02552032]
[-12.93464851 106.21886444]
[1.92839801 104.19653320]
[16.79144478 102.17419434]
[23.03555298 98.12984467]
[31.98436928 100.26773071]
[46.88627243 98.55503845]
[48.39921188 87.33056641]
[52.25677109 76.68176270]
[58.28367615 67.09249115]
[66.20607758 58.99845505]
[75.66399384 52.76744080]
[86.22768402 48.68256378]
[97.41715240 46.92943573]
[108.72398376 47.58771133]
[119.63442230 50.62748337]
[127.08933258 37.61117172]
[134.54423523 24.59486389]
[141.99914551 11.57855320]
[134.85771179 -3.72020221]
[138.18559265 -20.10332489]
[150.48368835 -31.18136024]
[166.79420471 -32.75379181]
[173.97669983 -45.92237473]
[181.15921021 -59.09095764]
[188.34172058 -72.25953674]
[187.44152832 -90.62171173]
[202.70726013 -99.22154999]
[209.61425781 -112.53670502]
[196.65724182 -104.97920990]
[182.49305725 -100.04201508]
[167.64567566 -97.90776062]
[152.66432190 -98.65539551]
[138.10317993 -102.25726318]
[124.50093079 -108.58013153]
[112.36072540 -117.39009094]
[102.13166046 -128.36125183]
[94.19213867 -141.08775330]
[88.83585358 -155.09883118]
[86.26095581 -169.87617493]
[86.56268311 -184.87313843]
[89.72988892 -199.53495789]
[95.64539337 -213.31924438]
[104.09038544 -225.71611023]
[114.75245667 -236.26695251]
[127.23719788 -244.58146667]
[141.08276367 -250.35209656]
[155.77699280 -253.36537170]
[170.77629089 -253.50981140]
[185.52581787 -250.78009033]
[199.47994995 -245.27716064]
[212.12249756 -237.20462036]
[222.98579407 -226.86106873]
[231.66795349 -214.62913513]
[237.84782410 -200.96133423]
[241.29679871 -186.36322021]
[241.88728333 -171.37484741]
[239.59744263 -156.55065918]
[234.51197815 -142.43902588]
[226.82292175 -129.56729126]
[240.20921326 -136.33540344]
[246.56033325 -151.06776428]
[262.07571411 -155.14855957]
[274.85327148 -145.44732666]
[275.09115601 -129.40603638]
[262.60687256 -119.33019257]
[246.97732544 -122.94911194]
[233.59103394 -116.18099976]
[222.92941284 -105.62970734]
[216.02241516 -92.31455231]
[219.37672424 -80.65025330]
[213.67814636 -69.48131561]
[201.51029968 -65.07702637]
[194.32780457 -51.90844727]
[187.14529419 -38.73986435]
[179.96278381 -25.57128143]
[186.79374695 -14.05894756]
[187.02970886 -0.56614214]
[180.50137329 11.36831665]
[168.82763672 18.56115150]
[155.01545715 19.03346443]
[147.56054688 32.04977417]
[140.10563660 45.06608200]
[132.65072632 58.08239365]
[144.50280762 70.97145081]
[151.52178955 87.01305389]
[152.94543457 104.46506500]
[148.61911011 121.43216705]
[139.01268005 136.07168579]
[125.16940308 146.79377747]
[108.59268188 152.43397522]
[108.90473938 167.43072510]
[109.21679688 182.42749023]
[109.52885437 197.42424011]
[109.84090424 212.42098999]
[110.15296173 227.41773987]
[110.46501923 242.41450500]
[110.77707672 257.41125488]
[111.08913422 272.40802002]
[111.40119171 287.40475464]
[111.71324158 302.40151978]
[126.36824036 305.99227905]
[139.59403992 313.25454712]
[150.48890686 323.69314575]
[158.31001282 336.59634399]
[162.52407837 351.08441162]
[162.84381104 366.16949463]
[159.24737549 380.82312012]
[151.98001099 394.04611206]
[141.53721619 404.93695068]
[128.63098145 412.75308228]
[114.14128876 416.96154785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[25 45]
[26 44]
[27 42]
[28 41]
[29 40]
[54 122]
[55 121]
[56 120]
[57 119]
[61 114]
[62 113]
[63 112]
[64 111]
[66 108]
[67 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
