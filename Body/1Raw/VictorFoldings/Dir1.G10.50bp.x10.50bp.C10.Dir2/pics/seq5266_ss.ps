%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAAUUACCGGGGGGGGGGCACAUAGGAUGAAUAAUAGCAGUUCUACCGUACAACCCUAACAUAACCAUxxxxxxxxxxAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACAGCCCUAGACCCCCCCCCCCCUCAACUACC\
) } def
/len { sequence length } bind def

/coor [
[90.15927124 384.94641113]
[76.13732147 379.39340210]
[63.93736649 370.52706909]
[54.32629395 358.90475464]
[47.90827179 345.25704956]
[45.08673477 330.44186401]
[46.03905106 315.39047241]
[50.70535278 301.04907227]
[58.79232025 288.31909180]
[69.79159546 278.00082397]
[83.01175690 270.74285889]
[97.62176514 267.00143433]
[97.62176514 252.00141907]
[97.62176514 237.00141907]
[97.62176514 222.00141907]
[97.62176514 207.00141907]
[97.62176514 192.00141907]
[97.62176514 177.00141907]
[97.62176514 162.00141907]
[97.62176514 147.00141907]
[97.62176514 132.00141907]
[76.92968750 118.83053589]
[72.75334167 96.50695801]
[85.15232849 79.68856812]
[73.37615204 69.12294769]
[76.59313202 54.57989502]
[71.75331116 40.38214493]
[66.91349792 26.18439102]
[62.07368088 11.98663902]
[57.23386383 -2.21111369]
[51.95912170 -16.25308990]
[46.25445938 -30.12597084]
[40.54979706 -43.99885178]
[32.36145401 -38.35784149]
[22.90445709 -35.91078949]
[13.35583591 -36.83867264]
[4.86241055 -40.90985107]
[-1.59693825 -47.52244949]
[-5.32384491 -55.79034424]
[-5.97494268 -64.66071320]
[-3.59046459 -73.04776764]
[1.42494762 -79.96557617]
[-5.94129181 -93.03227234]
[-13.30753136 -106.09896851]
[-20.67377090 -119.16566467]
[-34.78313828 -113.97702789]
[-49.54213715 -111.11902618]
[-64.56846619 -110.66567993]
[-79.47291565 -112.62873840]
[-93.86942291 -116.95734406]
[-107.38507843 -123.53938293]
[-119.66979218 -132.20436096]
[-130.40538025 -142.72782898]
[-139.31373596 -154.83721924]
[-146.16413879 -168.21885681]
[-150.77912903 -182.52613831]
[-153.03916931 -197.38844299]
[-152.88571167 -212.42083740]
[-150.32275391 -227.23391724]
[-145.41667175 -241.44400024]
[-138.29455566 -254.68301392]
[-129.14085388 -266.60803223]
[-118.19269562 -276.91015625]
[-105.73365784 -285.32257080]
[-92.08645630 -291.62734985]
[-77.60459137 -295.66116333]
[-62.66317749 -297.31954956]
[-47.64923096 -296.55957031]
[-32.95164871 -293.40090942]
[-18.95113564 -287.92532349]
[-6.01033878 -280.27471924]
[5.53554487 -270.64721680]
[15.38745022 -259.29220581]
[23.29018784 -246.50381470]
[29.03905678 -232.61329651]
[32.48514938 -217.98043823]
[33.53920364 -202.98426819]
[32.17391968 -188.01321411]
[28.42465401 -173.45509338]
[22.38852692 -159.68696594]
[14.22188854 -147.06546021]
[4.13627386 -135.91752625]
[-7.60707617 -126.53189850]
[-0.24083649 -113.46520996]
[7.12540293 -100.39851379]
[14.49164295 -87.33181763]
[25.92785835 -88.46427155]
[37.29011917 -84.09184265]
[45.94226456 -74.58106232]
[56.04769897 -85.66619873]
[66.15313721 -96.75133514]
[76.25856781 -107.83646393]
[79.23641968 -123.96298218]
[94.77970123 -129.19158936]
[106.89881897 -118.14356232]
[103.12666321 -102.18415070]
[87.34370422 -97.73103333]
[77.23826599 -86.64589691]
[67.13283539 -75.56076813]
[57.02739716 -64.47563171]
[54.42267609 -49.70351410]
[60.12733841 -35.83063507]
[65.83200073 -21.95775414]
[68.99179840 -20.26574326]
[71.46620941 -16.92704582]
[72.47560883 -12.29166794]
[71.43161774 -7.05093002]
[76.27143097 7.14682245]
[81.11125183 21.34457588]
[85.95106506 35.54232788]
[90.79087830 49.74008179]
[102.22087860 59.29018402]
[99.35008240 74.84875488]
[111.69097137 75.78205109]
[122.86582184 82.78009033]
[129.92010498 94.86728668]
[130.60202026 109.65729523]
[144.53273010 115.21923065]
[158.46345520 120.78116608]
[172.39416504 126.34310913]
[186.08454895 118.78615570]
[201.41946411 121.84792328]
[211.15823364 134.08271790]
[210.70251465 149.71366882]
[200.26747131 161.36029053]
[184.78022766 163.52342224]
[171.55337524 155.18170166]
[166.83222961 140.27381897]
[152.90151978 134.71188354]
[138.97079468 129.14994812]
[125.04008484 123.58801270]
[112.62176514 132.00141907]
[112.62176514 147.00141907]
[112.62176514 162.00141907]
[112.62176514 177.00141907]
[112.62176514 192.00141907]
[112.62176514 207.00141907]
[112.62176514 222.00141907]
[112.62176514 237.00141907]
[112.62176514 252.00141907]
[112.62176514 267.00143433]
[127.23178101 270.74285889]
[140.45193481 278.00082397]
[151.45121765 288.31909180]
[159.53817749 301.04907227]
[164.20448303 315.39047241]
[165.15679932 330.44186401]
[162.33526611 345.25704956]
[155.91723633 358.90475464]
[146.30616760 370.52706909]
[134.10621643 379.39340210]
[120.08426666 384.94641113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[24 113]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 103]
[32 102]
[33 101]
[42 86]
[43 85]
[44 84]
[45 83]
[89 100]
[90 99]
[91 98]
[92 97]
[117 131]
[118 130]
[119 129]
[120 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
