%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAAACGCUUAGCCUAGCCACACCCCGGGGGGGGGGCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUUAACUAxxxxxxxxxxGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACAACAAAUAGCCCUCCCCCCCCCCUCUAAACGCUAAUCCAAGCCUCACCCC\
) } def
/len { sequence length } bind def

/coor [
[80.06752014 717.93255615]
[65.25688171 715.46105957]
[50.80803299 711.37524414]
[36.89636612 705.72473145]
[23.69075012 698.57806396]
[11.35149574 690.02197266]
[0.02838709 680.16040039]
[-10.14112282 669.11303711]
[-19.03358650 657.01397705]
[-26.54105759 644.01013184]
[-32.57239914 630.25927734]
[-37.05440140 615.92834473]
[-39.93265152 601.19134521]
[-41.17221451 586.22717285]
[-40.75804138 571.21746826]
[-38.69515991 556.34442139]
[-35.00860977 541.78857422]
[-29.74314690 527.72662354]
[-22.96268654 514.32928467]
[-14.74953556 501.75921631]
[-5.20339632 490.16891479]
[5.55985069 479.69918823]
[17.40954971 470.47705078]
[30.20185471 462.61447144]
[43.78147888 456.20687866]
[57.98358154 451.33212280]
[72.63575745 448.04928589]
[87.56015015 446.39828491]
[87.56015015 431.39828491]
[87.56015015 416.39828491]
[87.56015015 401.39828491]
[87.56015015 386.39828491]
[87.56015015 371.39828491]
[87.56015015 356.39828491]
[87.56015015 341.39828491]
[87.56015015 326.39828491]
[87.56015015 311.39828491]
[84.40885162 304.69409180]
[87.68966675 296.14410400]
[84.65267181 289.38739014]
[88.07820129 280.89434814]
[88.58755493 265.90298462]
[89.09690094 250.91163635]
[74.32735443 245.72904968]
[61.86459732 236.22711182]
[52.93410492 223.32508850]
[48.41867065 208.27726746]
[48.77115250 192.55110168]
[53.96908188 177.68405151]
[63.51569748 165.13328552]
[76.48738861 156.13285828]
[91.62305450 151.57240295]
[91.87776184 136.57456970]
[92.13247681 121.57672882]
[74.22509766 106.63538361]
[77.19174957 80.10758209]
[66.81266785 69.27824402]
[56.43358231 58.44889832]
[46.05450058 47.61955643]
[30.91963387 43.01017761]
[27.69913101 28.46790695]
[17.32004738 17.63856506]
[6.94096422 6.80922461]
[-3.43811893 -4.02011681]
[-18.57298470 -8.62949657]
[-21.79348946 -23.17176628]
[-37.38399887 -21.95935249]
[-50.07622147 -31.09398460]
[-53.87727737 -46.26256943]
[-46.99242020 -60.30296707]
[-32.67247009 -66.58573151]
[-17.67887306 -62.14432907]
[-9.09114456 -49.07585907]
[-10.96414757 -33.55084991]
[3.42833805 -29.71605682]
[7.39122248 -14.39919949]
[17.77030563 -3.56985855]
[28.14938927 7.25948286]
[38.52847290 18.08882523]
[52.92095566 21.92361641]
[56.88384247 37.24047470]
[67.26292419 48.06981659]
[77.64200592 58.89915848]
[88.02108765 69.72850037]
[102.86509705 67.57085419]
[109.73163605 54.23479080]
[96.60555267 61.49467468]
[81.63529205 62.43877411]
[67.70114136 56.88545227]
[57.48402786 45.90316391]
[52.94973755 31.60490417]
[54.97066116 16.74166679]
[63.15797424 4.17313814]
[75.93643951 -3.68248987]
[90.84746552 -5.31379366]
[105.02217865 -0.40690908]
[115.73336029 10.09407711]
[120.92016602 24.16877174]
[119.58454895 39.10954285]
[129.00784302 27.43900490]
[138.43115234 15.76846886]
[147.85444641 4.09793282]
[157.27774048 -7.57260323]
[159.92739868 -23.17035675]
[173.94281006 -28.21190262]
[183.36611938 -39.88243866]
[176.78070068 -53.65179443]
[176.83033752 -68.91483307]
[183.50517273 -82.64105988]
[195.47988892 -92.10514069]
[210.37692261 -95.42795563]
[225.23844910 -91.94976807]
[237.11370850 -82.36116791]
[243.64483643 -68.56598663]
[243.53509521 -53.30326843]
[236.80627441 -39.60342789]
[224.79437256 -30.18658257]
[209.88436890 -26.92245483]
[195.03665161 -30.45914078]
[185.61335754 -18.78860283]
[183.63772583 -4.02560425]
[168.94828796 1.85069656]
[159.52497864 13.52123260]
[150.10168457 25.19176865]
[140.67837524 36.86230469]
[131.25508118 48.53284073]
[123.06770325 61.10132599]
[116.20116425 74.43739319]
[125.72303772 87.86962128]
[126.40895081 103.30776978]
[119.12207794 115.77754974]
[107.13031006 121.83144379]
[106.87560272 136.82928467]
[106.62088776 151.82711792]
[120.33168793 156.25807190]
[132.22286987 164.36735535]
[141.33387756 175.48902893]
[146.93182373 188.71429443]
[148.57040405 202.96569824]
[146.12547302 217.08493042]
[139.80445862 229.92700195]
[130.12867737 240.45304871]
[117.89046478 247.81440735]
[104.08824921 251.42098999]
[103.57890320 266.41235352]
[103.06954956 281.40368652]
[102.68750763 296.39883423]
[102.56015015 311.39828491]
[102.56015015 326.39828491]
[102.56015015 341.39828491]
[102.56015015 356.39828491]
[102.56015015 371.39828491]
[102.56015015 386.39828491]
[102.56015015 401.39828491]
[102.56015015 416.39828491]
[102.56015015 431.39828491]
[102.56015015 446.39828491]
[117.48453522 448.04928589]
[132.13671875 451.33212280]
[146.33882141 456.20687866]
[159.91844177 462.61447144]
[172.71073914 470.47705078]
[184.56044006 479.69918823]
[195.32368469 490.16891479]
[204.86982727 501.75921631]
[213.08297729 514.32928467]
[219.86344910 527.72662354]
[225.12890625 541.78857422]
[228.81546021 556.34442139]
[230.87834167 571.21746826]
[231.29251099 586.22717285]
[230.05294800 601.19134521]
[227.17469788 615.92834473]
[222.69268799 630.25927734]
[216.66134644 644.01013184]
[209.15388489 657.01397705]
[200.26141357 669.11303711]
[190.09190369 680.16040039]
[178.76879883 690.02197266]
[166.42955017 698.57806396]
[153.22392273 705.72473145]
[139.31225586 711.37524414]
[124.86341095 715.46105957]
[110.05278015 717.93255615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[39 147]
[41 146]
[42 145]
[43 144]
[52 134]
[53 133]
[54 132]
[56 84]
[57 83]
[58 82]
[59 81]
[61 79]
[62 78]
[63 77]
[64 76]
[66 74]
[85 128]
[86 127]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[105 120]
[106 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
