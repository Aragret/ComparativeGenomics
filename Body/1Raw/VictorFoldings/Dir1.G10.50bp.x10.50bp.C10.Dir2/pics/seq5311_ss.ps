%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUAACAUAGGGGGGGGGGACCAUUCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUxxxxxxxxxxAUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCCCCCCCCCCCUAACAAA\
) } def
/len { sequence length } bind def

/coor [
[74.32051086 421.38723755]
[60.47457123 415.37121582]
[48.76591110 405.84179688]
[40.06338501 393.50613403]
[35.01278305 379.27960205]
[33.98889160 364.21792603]
[37.06769180 349.43878174]
[44.02071381 336.03884888]
[54.33199692 325.01251221]
[67.23638153 317.17800903]
[81.77626801 313.11669922]
[81.77626801 298.11669922]
[81.77626801 283.11669922]
[81.77626801 268.11669922]
[81.77626801 253.11669922]
[81.77626801 238.11669922]
[81.77626801 223.11669922]
[81.77626801 208.11669922]
[81.77626801 193.11669922]
[81.77626801 178.11669922]
[81.77626801 163.11669922]
[81.77626801 148.11669922]
[82.88201904 93.01538086]
[73.13436890 81.61436462]
[63.38671494 70.21334076]
[53.63906097 58.81232071]
[43.89140701 47.41130066]
[31.58016014 56.00198746]
[18.48614883 63.34458160]
[4.73548222 69.36836243]
[-9.53941154 74.01531982]
[-24.20105362 77.24069977]
[-39.10823822 79.01343536]
[-54.11740112 79.31645203]
[-69.08399200 78.14684296]
[-83.86386871 75.51586151]
[-98.31468964 71.44885254]
[-112.29727936 65.98497772]
[-125.67697906 59.17686462]
[-138.32493591 51.09008026]
[-150.11932373 41.80250168]
[-160.94656372 31.40358162]
[-170.70239258 19.99346542]
[-179.29283142 7.68204498]
[-186.63516235 -5.41211271]
[-192.65867615 -19.16290092]
[-197.30534363 -33.43788528]
[-200.53042603 -48.09959412]
[-202.30287170 -63.00681305]
[-202.60559082 -78.01598358]
[-201.43568420 -92.98255157]
[-198.80439758 -107.76237488]
[-194.73710632 -122.21311188]
[-189.27294922 -136.19558716]
[-182.46456909 -149.57516479]
[-174.37753296 -162.22294617]
[-165.08972168 -174.01715088]
[-154.69058228 -184.84419250]
[-143.28027344 -194.59979248]
[-130.96867371 -203.18998718]
[-117.87437439 -210.53205872]
[-104.12346649 -216.55528259]
[-89.84838104 -221.20167542]
[-75.18661499 -224.42646790]
[-60.27935410 -226.19860840]
[-45.27017975 -226.50102234]
[-30.30363846 -225.33081055]
[-15.52386761 -222.69923401]
[-1.07320988 -218.63165283]
[12.90916348 -213.16722107]
[26.28859138 -206.35856628]
[38.93622208 -198.27128601]
[50.73024368 -188.98323059]
[61.55707169 -178.58387756]
[71.31243896 -167.17337036]
[79.90238953 -154.86160278]
[87.24419403 -141.76715088]
[93.26715088 -128.01612854]
[97.91325378 -113.74095154]
[101.13774872 -99.07911682]
[102.90959167 -84.17182922]
[103.21171570 -69.16264343]
[102.04120636 -54.19612885]
[99.40933228 -39.41640854]
[95.34145355 -24.96583366]
[89.87674713 -10.98356819]
[83.06783295 2.39572358]
[74.98028564 15.04319000]
[65.69200134 26.83702660]
[55.29243088 37.66364670]
[65.04008484 49.06466675]
[74.78773499 60.46569061]
[84.53538513 71.86670685]
[94.28303528 83.26773071]
[109.10079956 85.59883881]
[121.87815094 77.74140930]
[134.65551758 69.88397980]
[139.76002502 54.67466354]
[154.88249207 49.31828308]
[168.42222595 57.92380142]
[169.99272156 73.88980103]
[158.38922119 84.96852875]
[142.51293945 82.66133881]
[129.73558044 90.51876831]
[116.95822144 98.37619019]
[120.36119843 112.98508453]
[135.29550171 114.38739014]
[150.22981262 115.78969574]
[157.30345154 102.33486938]
[168.99075317 92.61504364]
[183.50953674 88.11240387]
[198.64575195 89.51358795]
[212.09126282 96.60490417]
[221.79570007 108.30500031]
[226.27923584 122.82968140]
[224.85813904 137.96405029]
[217.74914551 151.40020752]
[206.03630066 161.08924866]
[191.50572205 165.55368042]
[176.37324524 164.11268616]
[162.94644165 156.98600769]
[153.27281189 145.26042175]
[148.82751465 130.72399902]
[133.89320374 129.32170105]
[118.95889282 127.91939545]
[113.41323853 132.96871948]
[116.61329651 147.62339783]
[102.32192230 143.06736755]
[96.77626801 148.11669922]
[96.77626801 163.11669922]
[96.77626801 178.11669922]
[96.77626801 193.11669922]
[96.77626801 208.11669922]
[96.77626801 223.11669922]
[96.77626801 238.11669922]
[96.77626801 253.11669922]
[96.77626801 268.11669922]
[96.77626801 283.11669922]
[96.77626801 298.11669922]
[96.77626801 313.11669922]
[111.31615448 317.17800903]
[124.22053528 325.01251221]
[134.53181458 336.03884888]
[141.48483276 349.43878174]
[144.56364441 364.21792603]
[143.53974915 379.27960205]
[138.48915100 393.50613403]
[129.78662109 405.84179688]
[118.07795715 415.37121582]
[104.23201752 421.38723755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[95 105]
[96 104]
[97 103]
[106 125]
[107 124]
[108 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
