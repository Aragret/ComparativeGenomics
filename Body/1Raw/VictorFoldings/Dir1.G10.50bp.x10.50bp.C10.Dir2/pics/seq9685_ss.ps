%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCCUACUAGGGGGGGGGGGUCUCAAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUxxxxxxxxxxCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACAACAAACCCCCCCCCCUAGCCCUUCUA\
) } def
/len { sequence length } bind def

/coor [
[80.54425049 336.00158691]
[67.62509155 328.24322510]
[56.84379578 317.71420288]
[48.78177643 304.98233032]
[43.87381744 290.73422241]
[42.38459396 275.73825073]
[44.39441681 260.80316162]
[49.79490280 246.73432922]
[58.29480743 234.29052734]
[69.43573761 224.14280701]
[82.61688995 216.83840942]
[97.12740326 212.77128601]
[96.51158142 197.78393555]
[95.89575195 182.79656982]
[95.27993011 167.80921936]
[94.66410828 152.82186890]
[94.04827881 137.83451843]
[93.43245697 122.84716034]
[92.81662750 107.85980988]
[90.97330475 92.97350311]
[87.91490936 78.28860474]
[84.85651398 63.60370636]
[81.79811859 48.91881180]
[78.73972321 34.23391342]
[75.68132782 19.54901505]
[72.62293243 4.86411762]
[69.56453705 -9.82077980]
[54.69599533 -7.79316139]
[39.72223282 -6.80766344]
[24.71620369 -6.86908770]
[9.75101185 -7.97713470]
[-5.10043097 -10.12640667]
[-19.76576996 -13.30643177]
[-34.17355728 -17.50171852]
[-48.25359726 -22.69182396]
[-61.93729019 -28.85146713]
[-75.15797424 -35.95063782]
[-87.85124207 -43.95474243]
[-99.95524597 -52.82479477]
[-111.41101837 -62.51757431]
[-122.16275024 -72.98586273]
[-132.15805054 -84.17865753]
[-141.34823608 -96.04142761]
[-149.68852234 -108.51637268]
[-157.13827515 -121.54272461]
[-163.66120911 -135.05702209]
[-169.22554016 -148.99340820]
[-173.80416870 -163.28399658]
[-177.37477112 -177.85916138]
[-179.91995239 -192.64790344]
[-181.42732239 -207.57815552]
[-181.88952637 -222.57719421]
[-181.30433655 -237.57192993]
[-179.67457581 -252.48933411]
[-177.00819397 -267.25668335]
[-173.31819153 -281.80209351]
[-168.62252808 -296.05465698]
[-162.94409180 -309.94494629]
[-156.31054688 -323.40527344]
[-148.75421143 -336.37011719]
[-140.31190491 -348.77624512]
[-131.02474976 -360.56323242]
[-120.93798828 -371.67367554]
[-110.10076904 -382.05343628]
[-98.56589508 -391.65194702]
[-86.38955688 -400.42245483]
[-73.63108063 -408.32220459]
[-60.35261917 -415.31271362]
[-46.61886978 -421.35992432]
[-32.49673843 -426.43438721]
[-18.05503273 -430.51138306]
[-3.36410809 -433.57101440]
[11.50446129 -435.59841919]
[26.47823715 -436.58370972]
[41.48426437 -436.52206421]
[56.44944000 -435.41381836]
[71.30085754 -433.26434326]
[85.96614838 -430.08410645]
[100.37387085 -425.88861084]
[114.45384216 -420.69830322]
[128.13745117 -414.53845215]
[141.35803223 -407.43908691]
[154.05117798 -399.43481445]
[166.15505981 -390.56457520]
[177.61068726 -380.87164307]
[188.36227417 -370.40319824]
[198.35742188 -359.21026611]
[207.54742432 -347.34735107]
[215.88754272 -334.87228394]
[223.33711243 -321.84582520]
[229.85984802 -308.33145142]
[235.42398071 -294.39498901]
[240.00239563 -280.10430908]
[243.57278442 -265.52911377]
[246.11775208 -250.74032593]
[247.62490845 -235.81004333]
[248.08691406 -220.81100464]
[247.50149536 -205.81626892]
[245.87152100 -190.89891052]
[243.20492554 -176.13157654]
[239.51470947 -161.58622742]
[234.81884766 -147.33374023]
[229.14021301 -133.44352722]
[222.50648499 -119.98328400]
[214.94996643 -107.01856995]
[206.50747681 -94.61255646]
[197.22015381 -82.82569122]
[187.13322449 -71.71538544]
[176.29586792 -61.33578110]
[164.76084900 -51.73743820]
[152.58438110 -42.96712112]
[139.82579041 -35.06756210]
[126.54723358 -28.07724190]
[112.81340027 -22.03022003]
[98.69120026 -16.95595741]
[84.24943542 -12.87917519]
[87.30783081 1.80572212]
[90.36622620 16.49061966]
[93.42462158 31.17551804]
[96.48301697 45.86041641]
[99.54141235 60.54531097]
[102.59980774 75.23020935]
[105.65820312 89.91510773]
[113.46504211 77.10678101]
[127.24770355 71.18747711]
[141.91156006 74.34523010]
[152.03623962 85.41279602]
[153.87922668 100.29914093]
[146.75930786 113.50166321]
[133.30827332 120.14016724]
[118.49819183 117.76078033]
[107.80397797 107.24398804]
[108.41980743 122.23133850]
[109.03562927 137.21868896]
[109.65145874 152.20603943]
[110.26728058 167.19340515]
[110.88311005 182.18075562]
[111.49893188 197.16810608]
[112.11476135 212.15545654]
[126.91003418 215.01843262]
[140.64601135 221.21679688]
[152.58190918 230.41630554]
[162.07406616 242.12081909]
[168.61054993 255.69914246]
[171.83889771 270.41900635]
[171.58497620 285.48660278]
[167.86248779 300.08932495]
[160.87217712 313.43969727]
[150.99104309 324.81774902]
[138.75193787 333.60983276]
[124.81490326 339.34185791]
[109.93156433 341.70468140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
