%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAACCAGAUGGGGGGGGGGUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAACxxxxxxxxxxUUCACUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACCCCCCCCCCCUAACCAUAU\
) } def
/len { sequence length } bind def

/coor [
[97.17400360 388.90466309]
[83.32807159 382.88864136]
[71.61940765 373.35922241]
[62.91688156 361.02355957]
[57.86627960 346.79702759]
[56.84238815 331.73535156]
[59.92118835 316.95620728]
[66.87420654 303.55627441]
[77.18549347 292.52993774]
[90.08987427 284.69543457]
[104.62976074 280.63412476]
[104.62976074 265.63412476]
[104.62976074 250.63410950]
[104.62976074 235.63410950]
[104.62976074 220.63410950]
[104.62976074 205.63410950]
[104.62976074 190.63410950]
[104.62976074 175.63410950]
[104.62976074 160.63410950]
[104.62976074 145.63410950]
[104.62976074 130.63410950]
[82.02468872 124.02599335]
[71.23865509 103.94036102]
[56.91605377 108.39717102]
[42.59345627 112.85398865]
[28.27086067 117.31080627]
[23.41971016 132.05006409]
[10.81186771 141.09562683]
[-4.70469332 140.96925354]
[-17.16353798 131.71955872]
[-21.77398872 116.90323639]
[-16.76322937 102.21746826]
[-4.05800343 93.30921936]
[11.45627308 93.60390472]
[23.81404495 102.98820496]
[38.13664246 98.53139496]
[52.45923996 94.07457733]
[66.78183746 89.61775970]
[74.23674774 76.60144806]
[70.83377075 61.99255753]
[67.43079376 47.38366699]
[56.76445389 35.69864273]
[61.41263580 21.54789543]
[58.00965881 6.93900204]
[54.60668182 -7.66989040]
[51.20370102 -22.27878380]
[36.25889206 -20.76850128]
[21.24364853 -21.18177605]
[6.40453672 -23.51181602]
[-8.01477146 -27.72036552]
[-21.77749825 -33.73831177]
[-34.65764618 -41.46683502]
[-46.44371414 -50.77902985]
[-56.94216156 -61.52197647]
[-65.98059845 -73.51927185]
[-73.41059875 -86.57389832]
[-79.11016083 -100.47150421]
[-82.98568726 -114.98386383]
[-84.97354889 -129.87268066]
[-85.04109192 -144.89344788]
[-83.18721008 -159.79954529]
[-79.44234467 -174.34616089]
[-73.86799622 -188.29446411]
[-66.55570221 -201.41539001]
[-57.62552261 -213.49348450]
[-47.22411346 -224.33039856]
[-35.52226639 -233.74821472]
[-22.71214294 -241.59225464]
[-9.00409222 -247.73373413]
[5.37678528 -252.07177734]
[20.19434357 -254.53517151]
[35.20526123 -255.08346558]
[50.16305161 -253.70764160]
[64.82209015 -250.43031311]
[78.94165802 -245.30526733]
[92.28990936 -238.41668701]
[104.64765167 -229.87768555]
[115.81195068 -219.82847595]
[125.59947968 -208.43406677]
[133.84953308 -195.88157654]
[140.42662048 -182.37712097]
[145.22274780 -168.14245605]
[148.15916443 -153.41134644]
[149.18763733 -138.42567444]
[148.29129028 -123.43150330]
[145.48483276 -108.67507935]
[140.81436157 -94.39869690]
[134.35655212 -80.83679962]
[126.21746826 -68.21208191]
[116.53074646 -56.73184967]
[105.45545197 -46.58461761]
[93.17346191 -37.93701935]
[79.88644409 -30.93105316]
[65.81259155 -25.68176079]
[69.21557617 -11.07286835]
[72.61855316 3.53602409]
[76.02153015 18.14491653]
[86.44446564 28.78501511]
[82.03968048 43.98069000]
[85.44265747 58.58958054]
[88.84564209 73.19847107]
[116.05000305 74.64733887]
[130.94682312 98.52413940]
[145.65478516 95.57865906]
[160.36274719 92.63317871]
[168.91636658 79.34366608]
[184.37927246 76.07658386]
[197.57760620 84.77023315]
[200.68103027 100.26682281]
[191.84832764 113.37250519]
[176.31979370 116.31190491]
[163.30822754 107.34114075]
[148.60026550 110.28662109]
[133.89230347 113.23210144]
[148.21188354 117.69857025]
[162.53147888 122.16503906]
[177.52978516 121.94001770]
[191.35647583 127.75576782]
[201.68472290 138.63360596]
[206.77645874 152.74296570]
[205.77485657 167.70948792]
[198.84844971 181.01455688]
[187.16282654 190.41915894]
[172.68450928 194.34063721]
[157.84992981 192.11909485]
[145.15550232 184.12838745]
[136.73748779 171.71318054]
[134.01252747 156.96159363]
[126.82114410 143.79785156]
[119.62976074 130.63410950]
[119.62976074 145.63410950]
[119.62976074 160.63410950]
[119.62976074 175.63410950]
[119.62976074 190.63410950]
[119.62976074 205.63410950]
[119.62976074 220.63410950]
[119.62976074 235.63410950]
[119.62976074 250.63410950]
[119.62976074 265.63412476]
[119.62976074 280.63412476]
[134.16964722 284.69543457]
[147.07403564 292.52993774]
[157.38531494 303.55627441]
[164.33833313 316.95620728]
[167.41712952 331.73535156]
[166.39324951 346.79702759]
[161.34263611 361.02355957]
[152.64012146 373.35922241]
[140.93145752 382.88864136]
[127.08551788 388.90466309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 38]
[24 37]
[25 36]
[26 35]
[39 101]
[40 100]
[41 99]
[43 97]
[44 96]
[45 95]
[46 94]
[103 114]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
