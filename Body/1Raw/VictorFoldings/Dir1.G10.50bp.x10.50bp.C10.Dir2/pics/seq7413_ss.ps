%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAAAGGUAUGGGGGGGGGGUAGAAAAACCAUUUCAUAACUUUGUCAAAGUUAAAUUAUAGGCUAAAUCCxxxxxxxxxxCUAAAACAAUUUCACAGCACCAAAUCUCCACCUCCAUCAUCACCUCAACCCCCCCCCCCCCAAAAAGGCAU\
) } def
/len { sequence length } bind def

/coor [
[83.51669312 408.34210205]
[70.59754181 400.58374023]
[59.81624222 390.05471802]
[51.75422668 377.32284546]
[46.84626770 363.07473755]
[45.35704422 348.07876587]
[47.36686707 333.14367676]
[52.76734924 319.07485962]
[61.26725388 306.63104248]
[72.40818787 296.48333740]
[85.58934021 289.17895508]
[100.09985352 285.11181641]
[99.48403168 270.12445068]
[98.86820221 255.13710022]
[98.25238037 240.14974976]
[97.63655090 225.16239929]
[97.02072906 210.17504883]
[96.40489960 195.18769836]
[95.78907776 180.20033264]
[95.17324829 165.21298218]
[94.55742645 150.22563171]
[93.94159698 135.23828125]
[79.94507599 129.60136414]
[69.52013397 118.69272614]
[55.37281418 123.67805481]
[41.22549820 128.66337585]
[27.07818222 133.64869690]
[18.88021660 147.43901062]
[2.96814752 149.48487854]
[-8.45165062 138.21688843]
[-6.61888361 122.27886200]
[7.06050491 113.89710999]
[22.09285927 119.50138092]
[36.24017715 114.51605988]
[50.38749313 109.53073120]
[64.53481293 104.54541016]
[64.24659729 100.36708069]
[64.44895935 96.18370819]
[50.20226669 91.48991394]
[35.95557404 86.79611206]
[21.70888329 82.10231018]
[7.46219110 77.40850830]
[-6.78450108 72.71470642]
[-21.03119278 68.02090454]
[-37.96689606 68.80721283]
[-43.41074371 52.75103760]
[-29.48905373 43.07514572]
[-16.33739281 53.77421570]
[-2.09070015 58.46801758]
[12.15599155 63.16181564]
[26.40268326 67.85561371]
[40.64937592 72.54941559]
[54.89606857 77.24321747]
[69.14276123 81.93701935]
[73.78666687 75.68330383]
[79.67465973 70.58365631]
[86.52729797 66.88011169]
[94.01934814 64.74844360]
[101.79524231 64.28981018]
[109.48593140 65.52598572]
[116.72641754 68.39830017]
[126.36823273 56.90763474]
[136.01005554 45.41696548]
[125.54424286 34.65323639]
[116.22109985 22.88590813]
[108.13629150 10.23573589]
[101.37277222 -3.16746831]
[95.99996185 -17.18616676]
[92.07298279 -31.67650223]
[89.63213348 -46.48978424]
[88.70246887 -61.47399902]
[89.29351807 -76.47538757]
[91.39922333 -91.34001160]
[94.99797821 -105.91532898]
[100.05284119 -120.05178833]
[106.51195526 -133.60430908]
[114.30903625 -146.43382263]
[123.36406708 -158.40869141]
[133.58413696 -169.40602112]
[144.86436462 -179.31295776]
[157.08898926 -188.02786255]
[170.13258362 -195.46127319]
[183.86129761 -201.53694153]
[198.13423157 -206.19248962]
[212.80494690 -209.38017273]
[227.72286987 -211.06727600]
[242.73495483 -211.23646545]
[257.68710327 -209.88603210]
[272.42593384 -207.02980042]
[286.80017090 -202.69712830]
[300.66235352 -196.93241882]
[313.87014771 -189.79487610]
[326.28808594 -181.35772705]
[337.78875732 -171.70753479]
[348.25408936 -160.94334412]
[357.57669067 -149.17559814]
[365.66094971 -136.52507019]
[372.42388916 -123.12157440]
[377.79608154 -109.10263824]
[381.72241211 -94.61212921]
[384.16262817 -79.79874420]
[385.09161377 -64.81448364]
[384.49990845 -49.81312180]
[382.39355469 -34.94858932]
[378.79415894 -20.37342834]
[373.73867798 -6.23719645]
[367.27896118 7.31504154]
[359.48132324 20.14421844]
[350.42575073 32.11868668]
[340.20520020 43.11556625]
[328.92453003 53.02201080]
[316.69952393 61.73636627]
[303.65560913 69.16921234]
[289.92663574 75.24426270]
[275.65350342 79.89919281]
[260.98263550 83.08623505]
[246.06463623 84.77266693]
[231.05255127 84.94120789]
[216.10044861 83.59010315]
[201.36174011 80.73323822]
[186.98768616 76.39991760]
[173.12579346 70.63461304]
[159.91828918 63.49648666]
[147.50071716 55.05878067]
[137.85890198 66.54944611]
[128.21708679 78.04011536]
[135.75524902 99.94909668]
[128.27949524 121.87945557]
[108.92895508 134.62245178]
[109.54477692 149.60980225]
[110.16060638 164.59716797]
[110.77642822 179.58451843]
[111.39225769 194.57186890]
[112.00807953 209.55921936]
[112.62390900 224.54656982]
[113.23973083 239.53392029]
[113.85556030 254.52128601]
[114.47138214 269.50863647]
[115.08721161 284.49600220]
[129.88247681 287.35894775]
[143.61845398 293.55731201]
[155.55435181 302.75683594]
[165.04650879 314.46136475]
[171.58300781 328.03967285]
[174.81134033 342.75955200]
[174.55741882 357.82714844]
[170.83493042 372.42987061]
[163.84463501 385.78024292]
[153.96348572 397.15826416]
[141.72438049 405.95037842]
[127.78735352 411.68240356]
[112.90401459 414.04522705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[24 36]
[25 35]
[26 34]
[27 33]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[61 126]
[62 125]
[63 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
