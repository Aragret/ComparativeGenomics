%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAAGCCAUACGGGGGGGGGGUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACAAUGAACAAGAUxxxxxxxxxxCAUCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACCCCCCCCCCCUCAAAACCAUAC\
) } def
/len { sequence length } bind def

/coor [
[83.89904785 404.00051880]
[70.19689178 397.73962402]
[58.23177719 388.58627319]
[48.60386658 376.99960327]
[41.79608536 363.56079102]
[38.14991760 348.94390869]
[37.84825134 333.88214111]
[40.90621567 319.13098145]
[47.17042542 305.43035889]
[56.32666779 293.46746826]
[67.91567993 283.84234619]
[81.35614777 277.03784180]
[95.97390747 273.39520264]
[95.66990662 258.39828491]
[95.36589813 243.40136719]
[95.06189728 228.40444946]
[94.75789642 213.40753174]
[94.45388794 198.41059875]
[94.14988708 183.41368103]
[93.84587860 168.41676331]
[93.54187775 153.41984558]
[93.23786926 138.42292786]
[92.93386841 123.42601013]
[92.62985992 108.42909241]
[80.31928253 116.99935913]
[65.88532257 112.91757965]
[59.88615417 99.16949463]
[66.71005249 85.81155396]
[81.36545563 82.61484528]
[93.13201904 91.91725159]
[94.34678650 76.96652222]
[87.75250244 62.58507538]
[96.49510193 50.52620697]
[97.70986938 35.57547760]
[98.92463684 20.62474823]
[100.13940430 5.67401791]
[85.30702972 3.39501548]
[70.67502594 0.06368481]
[56.31796265 -4.30299807]
[42.30899429 -9.68278122]
[28.71950912 -16.04825020]
[15.61876011 -23.36696815]
[3.07350469 -31.60164070]
[-8.85232925 -40.71030426]
[-20.09796906 -50.64654160]
[-30.60610962 -61.35972214]
[-40.32320404 -72.79524994]
[-49.19973373 -84.89485931]
[-57.19046783 -97.59688568]
[-64.25468445 -110.83660126]
[-70.35638428 -124.54654694]
[-75.46448517 -138.65684509]
[-79.55294037 -153.09561157]
[-82.60092926 -167.78924561]
[-84.59291077 -182.66288757]
[-85.51873779 -197.64074707]
[-85.37369537 -212.64648438]
[-84.15852356 -227.60363770]
[-81.87940216 -242.43600464]
[-78.54796600 -257.06796265]
[-74.18116760 -271.42501831]
[-68.80127716 -285.43392944]
[-62.43570709 -299.02337646]
[-55.11688614 -312.12405396]
[-46.88211823 -324.66925049]
[-37.77336502 -336.59503174]
[-27.83703995 -347.84057617]
[-17.12377739 -358.34863281]
[-5.68817329 -368.06564331]
[6.41150093 -376.94207764]
[19.11358833 -384.93270874]
[32.35335922 -391.99682617]
[46.06334686 -398.09844971]
[60.17368698 -403.20642090]
[74.61248016 -407.29476929]
[89.30614471 -410.34265137]
[104.17980194 -412.33450317]
[119.15766144 -413.26022339]
[134.16340637 -413.11508179]
[149.12054443 -411.89978027]
[163.95289612 -409.62054443]
[178.58483887 -406.28900146]
[192.94184875 -401.92208862]
[206.95072937 -396.54208374]
[220.54011536 -390.17642212]
[233.64074707 -382.85751343]
[246.18588257 -374.62265015]
[258.11157227 -365.51379395]
[269.35705566 -355.57739258]
[279.86505127 -344.86404419]
[289.58197021 -333.42834473]
[298.45831299 -321.32861328]
[306.44885254 -308.62646484]
[313.51284790 -295.38662720]
[319.61434937 -281.67660522]
[324.72222900 -267.56622314]
[328.81045532 -253.12741089]
[331.85821533 -238.43371582]
[333.84997559 -223.56004333]
[334.77557373 -208.58218384]
[334.63031006 -193.57643127]
[333.41491699 -178.61929321]
[331.13555908 -163.78697205]
[327.80389404 -149.15504456]
[323.43688965 -134.79808044]
[318.05676270 -120.78923798]
[311.69097900 -107.19989777]
[304.37197876 -94.09931946]
[296.13702393 -81.55425262]
[287.02807617 -69.62863159]
[277.09158325 -58.38321686]
[266.37814331 -47.87532043]
[254.94239807 -38.15848923]
[242.84259033 -29.28223991]
[230.14038086 -21.29179764]
[216.90049744 -14.22788525]
[203.19041443 -8.12649822]
[189.08000183 -3.01872730]
[174.64114380 1.06939888]
[159.94743347 4.11704779]
[145.07374573 6.10868931]
[130.09587097 7.03417397]
[115.09014130 6.88878632]
[113.87536621 21.83951759]
[112.66059875 36.79024887]
[111.44583130 51.74097824]
[118.12700653 65.05304718]
[109.29751587 78.18128967]
[108.08274841 93.13201904]
[107.62678528 108.12508392]
[107.93078613 123.12200928]
[108.23478699 138.11892700]
[108.53879547 153.11584473]
[108.84279633 168.11276245]
[109.14680481 183.10968018]
[109.45080566 198.10659790]
[109.75481415 213.10351562]
[110.05881500 228.10043335]
[110.36282349 243.09735107]
[110.66682434 258.09426880]
[110.97083282 273.09118652]
[125.72420502 276.13842773]
[139.42938232 282.39270020]
[151.39894104 291.54022217]
[161.03247070 303.12225342]
[167.84675598 316.55776978]
[171.50000000 331.17288208]
[171.80897522 346.23449707]
[168.75816345 360.98712158]
[162.50059509 374.69079590]
[153.35014343 386.65814209]
[141.76579285 396.28884888]
[128.32862854 403.09988403]
[113.71263123 406.74960327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[30 129]
[31 128]
[33 126]
[34 125]
[35 124]
[36 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
