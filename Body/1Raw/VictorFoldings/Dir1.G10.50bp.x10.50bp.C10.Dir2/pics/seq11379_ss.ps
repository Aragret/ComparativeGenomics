%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCUGACCCGGGGGGGGGGCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAAGAxxxxxxxxxxGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCCCCCCCCCCCACCCCUCACCC\
) } def
/len { sequence length } bind def

/coor [
[85.36779022 453.39221191]
[72.44863129 445.63385010]
[61.66733551 435.10482788]
[53.60531998 422.37295532]
[48.69736099 408.12484741]
[47.20813751 393.12887573]
[49.21796036 378.19375610]
[54.61844254 364.12493896]
[63.11834717 351.68115234]
[74.25928497 341.53341675]
[87.44042969 334.22903442]
[101.95095062 330.16189575]
[101.33512115 315.17456055]
[100.71929932 300.18719482]
[100.10346985 285.19982910]
[99.48764801 270.21249390]
[98.87181854 255.22512817]
[98.25599670 240.23777771]
[97.64016724 225.25042725]
[97.02434540 210.26307678]
[96.40851593 195.27572632]
[95.79269409 180.28836060]
[84.69723511 170.41789246]
[83.85919952 155.22735596]
[94.28749847 143.65634155]
[93.67166901 128.66899109]
[77.78699493 119.19741821]
[70.71665192 102.10812378]
[75.26623535 84.18230438]
[89.63042450 72.53310394]
[88.09313202 57.61208725]
[86.55583954 42.69107056]
[83.64836121 27.97554970]
[79.39551544 13.59106827]
[75.14266968 -0.79341274]
[70.88982391 -15.17789364]
[56.64881897 -13.66932011]
[42.36758041 -14.68198013]
[28.48889732 -18.18321419]
[15.44285679 -24.06322479]
[3.63351130 -32.13851547]
[-6.57362890 -42.15762711]
[-14.86291122 -53.80895233]
[-20.97830009 -66.73044586]
[-24.73129272 -80.52085876]
[-26.00671768 -94.75219727]
[-24.76627541 -108.98302460]
[-21.04969215 -122.77213287]
[-14.97343445 -135.69224548]
[-6.72707748 -147.34321594]
[3.43262434 -157.36447144]
[15.18972206 -165.44613647]
[28.17890358 -171.33863831]
[24.52019691 -185.88558960]
[20.86149216 -200.43254089]
[17.20278549 -214.97949219]
[13.54407978 -229.52645874]
[9.88537407 -244.07341003]
[-5.18967342 -243.99353027]
[-19.84561729 -247.52436829]
[-33.23037720 -254.46061707]
[-44.56578827 -264.39901733]
[-53.19281387 -276.76177979]
[-58.60990143 -290.83013916]
[-60.50209808 -305.78616333]
[-58.75939941 -320.76037598]
[-53.48312759 -334.88214111]
[-44.98003006 -347.33047485]
[-33.74446869 -357.38162231]
[-20.42966461 -364.45123291]
[-5.80972528 -368.12829590]
[9.26536751 -368.19903564]
[23.91916847 -364.65930176]
[37.29972076 -357.71493530]
[48.62910461 -347.76965332]
[57.24863434 -335.40167236]
[62.65718842 -321.33004761]
[64.54032135 -306.37286377]
[62.78854370 -291.39971924]
[57.50370789 -277.28115845]
[48.99306488 -264.83798218]
[37.75141525 -254.79365540]
[24.43232727 -247.73211670]
[28.09103394 -233.18516541]
[31.74973869 -218.63819885]
[35.40844345 -204.09124756]
[39.06715012 -189.54429626]
[42.72585678 -174.99734497]
[58.41746140 -175.90751648]
[73.99384308 -173.76924133]
[88.86817932 -168.66131592]
[102.47978210 -160.77447510]
[114.31517792 -150.40422058]
[123.92754364 -137.93977356]
[130.95350647 -123.84944916]
[135.12695312 -108.66311646]
[136.28903198 -92.95218658]
[134.39425659 -77.30818939]
[129.51225281 -62.32044601]
[121.82524872 -48.55391312]
[111.62118530 -36.52785110]
[99.28302002 -26.69626236]
[85.27430725 -19.43074036]
[89.52715302 -5.04625940]
[93.77999878 9.33822155]
[98.03284454 23.72270203]
[104.14971924 10.02657604]
[116.61956787 1.68973768]
[131.61373901 1.27186596]
[144.52854919 8.90126133]
[151.39872742 22.23545265]
[150.11491394 37.18041229]
[141.07125854 49.14755249]
[127.04448700 54.46257782]
[112.34124756 51.49359894]
[101.47685242 41.15377808]
[103.01414490 56.07479477]
[104.55143738 70.99581146]
[115.08065796 74.81008148]
[123.41567993 82.28942871]
[128.34376526 92.34562683]
[129.14788818 103.51551819]
[125.71105957 114.17391205]
[118.53332520 122.77003479]
[108.65902710 128.05316162]
[109.27484894 143.04051208]
[120.61728668 153.71697998]
[121.02832031 168.92504883]
[110.78004456 179.67254639]
[111.39587402 194.65989685]
[112.01169586 209.64724731]
[112.62752533 224.63459778]
[113.24334717 239.62194824]
[113.85917664 254.60931396]
[114.47499847 269.59664917]
[115.09082794 284.58401489]
[115.70664978 299.57138062]
[116.32247925 314.55871582]
[116.93830109 329.54608154]
[131.73358154 332.40905762]
[145.46954346 338.60742188]
[157.40545654 347.80691528]
[166.89759827 359.51144409]
[173.43409729 373.08975220]
[176.66242981 387.80963135]
[176.40850830 402.87722778]
[172.68601990 417.47994995]
[165.69572449 430.83032227]
[155.81457520 442.20837402]
[143.57546997 451.00045776]
[129.63844299 456.73248291]
[114.75511169 459.09530640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[25 126]
[26 125]
[30 118]
[31 117]
[32 116]
[33 106]
[34 105]
[35 104]
[36 103]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
