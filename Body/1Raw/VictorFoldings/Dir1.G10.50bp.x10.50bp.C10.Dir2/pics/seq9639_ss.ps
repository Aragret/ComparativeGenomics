%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUCAACGGGGGGGGGGACCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUAGUCUUUGCxxxxxxxxxxCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCCCCCCCCCCCAACCCUCAAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 367.32946777]
[71.19830322 361.31344604]
[59.48964310 351.78402710]
[50.78712082 339.44836426]
[45.73651886 325.22183228]
[44.71262741 310.16015625]
[47.79142761 295.38098145]
[54.74444962 281.98107910]
[65.05573273 270.95474243]
[77.96011353 263.12020874]
[92.50000000 259.05889893]
[92.50000000 244.05891418]
[92.50000000 229.05891418]
[92.50000000 214.05891418]
[92.50000000 199.05891418]
[92.50000000 184.05891418]
[92.50000000 169.05891418]
[92.50000000 154.05891418]
[92.50000000 139.05891418]
[92.50000000 124.05890656]
[87.46974945 121.86490631]
[83.03372192 118.63401031]
[79.40226746 114.51945496]
[76.74760437 109.71634674]
[61.81330109 111.11865234]
[46.87899399 112.52095795]
[43.58752060 127.28649902]
[35.89259720 140.31121826]
[24.54808807 150.31907654]
[10.66541386 156.32962036]
[-4.39534283 157.75398254]
[-19.15868187 154.45262146]
[-32.17824173 146.74896240]
[-42.17850113 135.39775085]
[-48.17973328 121.51105499]
[-49.59399796 106.44934845]
[-46.28274536 91.68822479]
[-38.57036972 78.67382812]
[-27.21245956 68.68117523]
[-13.32174301 62.68925095]
[1.74090886 61.28507614]
[16.49981117 64.60622406]
[29.50903511 72.32731628]
[39.49407196 83.69191742]
[45.47668839 97.58664703]
[60.41099548 96.18434143]
[75.34530640 94.78203583]
[79.55442047 85.26706696]
[87.24854279 78.26335907]
[97.11618805 74.96472931]
[107.47538757 75.93343353]
[115.98647308 63.58185577]
[124.49756622 51.23028564]
[133.00865173 38.87871170]
[141.51974487 26.52713966]
[138.86575317 11.17806530]
[147.67315674 -1.22694230]
[162.32250977 -3.66252398]
[170.83360291 -16.01409721]
[179.34469604 -28.36566925]
[187.85578918 -40.71724319]
[175.42590332 -54.68147659]
[178.38374329 -79.46448517]
[180.86886597 -94.25719452]
[179.19912720 -103.30505371]
[183.56263733 -109.33045197]
[186.35494995 -124.06826019]
[189.14727783 -138.80606079]
[191.93960571 -153.54386902]
[178.40989685 -160.24085999]
[167.18951416 -170.34065247]
[159.11108398 -183.09373474]
[154.77404785 -197.55378723]
[154.50028992 -212.64773560]
[158.31008911 -227.25553894]
[165.92074585 -240.29319763]
[176.76750183 -250.79322815]
[190.04544067 -257.97644043]
[204.76927185 -261.30981445]
[219.84637451 -260.54598999]
[234.15794373 -255.74165344]
[246.64195251 -247.25329590]
[256.37200928 -235.71081543]
[262.62606812 -221.97076416]
[264.94003296 -207.05271912]
[263.14224243 -192.06370544]
[257.36602783 -178.11601257]
[248.04008484 -166.24464417]
[235.85643005 -157.33055115]
[221.71917725 -152.03520203]
[206.67741394 -150.75154114]
[203.88508606 -136.01373291]
[201.09275818 -121.27593231]
[198.30043030 -106.53813171]
[195.66157532 -91.77207184]
[193.17645264 -76.97936249]
[198.10931396 -71.32986450]
[207.38221741 -83.12025452]
[210.07562256 -97.87645721]
[222.08470154 -106.86434937]
[237.00166321 -105.28819275]
[246.86715698 -93.98898315]
[246.41717529 -78.99573517]
[235.89181519 -68.30850220]
[220.90797424 -67.62948608]
[207.97503662 -60.03085709]
[212.90789795 -54.38135529]
[227.90058899 -54.84939957]
[242.89329529 -55.31744003]
[257.88598633 -55.78548431]
[271.53268433 -64.87942505]
[286.10964966 -57.36648178]
[286.62133789 -40.97532272]
[272.54138184 -32.56776428]
[258.35403442 -40.79278564]
[243.36132812 -40.32474518]
[228.36863708 -39.85670090]
[213.37594604 -39.38866043]
[200.20736694 -32.20615005]
[191.69627380 -19.85457802]
[183.18518066 -7.50300646]
[174.67408752 4.84856606]
[177.61480713 19.40493011]
[169.15931702 32.05242538]
[153.87132263 35.03823090]
[145.36022949 47.38980103]
[136.84913635 59.74137497]
[128.33804321 72.09294891]
[119.82695770 84.44451904]
[124.06274414 107.48769379]
[107.50000000 124.05890656]
[107.50000000 139.05891418]
[107.50000000 154.05891418]
[107.50000000 169.05891418]
[107.50000000 184.05891418]
[107.50000000 199.05891418]
[107.50000000 214.05891418]
[107.50000000 229.05891418]
[107.50000000 244.05891418]
[107.50000000 259.05889893]
[122.03988647 263.12020874]
[134.94427490 270.95474243]
[145.25555420 281.98107910]
[152.20857239 295.38098145]
[155.28736877 310.16015625]
[154.26348877 325.22183228]
[149.21287537 339.44836426]
[140.51036072 351.78402710]
[128.80169678 361.31344604]
[114.95575714 367.32946777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 47]
[25 46]
[26 45]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[58 122]
[59 121]
[60 120]
[61 119]
[63 96]
[64 95]
[66 94]
[67 93]
[68 92]
[69 91]
[107 118]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
