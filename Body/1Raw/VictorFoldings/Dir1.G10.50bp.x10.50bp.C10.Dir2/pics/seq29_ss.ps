%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUAUUAAGGGGGGGGGGCCACUCACGGGAGCUCUCCAUGCAUUUGGUAUUUUCGUCUGGGGGGUAUGxxxxxxxxxxCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUAAAUUAUUCAGCUUCCUCCCCCCCCCCACACUAUUAA\
) } def
/len { sequence length } bind def

/coor [
[59.22539902 518.74371338]
[45.37945938 512.72766113]
[33.67079926 503.19824219]
[24.96827316 490.86257935]
[19.91767120 476.63607788]
[18.89377975 461.57437134]
[21.97257996 446.79522705]
[28.92560196 433.39529419]
[39.23688507 422.36895752]
[52.14126587 414.53445435]
[66.68115234 410.47314453]
[66.68115234 395.47314453]
[66.68115234 380.47314453]
[66.68115234 365.47314453]
[66.68115234 350.47314453]
[66.68115234 335.47314453]
[66.68115234 320.47314453]
[66.68115234 305.47314453]
[66.68115234 290.47314453]
[66.68115234 275.47314453]
[56.40884018 286.40380859]
[41.70433426 289.36651611]
[28.00065994 283.26657104]
[20.36105156 270.35778809]
[21.60819244 255.40972900]
[31.28128624 243.94537354]
[45.80632019 240.20060730]
[59.81658554 245.55900574]
[68.13532257 258.03994751]
[70.62043762 243.24722290]
[73.10556030 228.45452881]
[75.59067535 213.66181946]
[77.92178345 198.84405518]
[80.09861755 184.00285339]
[82.27545166 169.16165161]
[67.46524048 163.55299377]
[54.25575256 154.81748962]
[43.29690933 143.38493347]
[35.12789154 129.81782532]
[30.15061569 114.78365326]
[28.60996819 99.02211761]
[30.58175087 83.30870056]
[35.96894836 68.41649628]
[44.50651169 55.07822800]
[55.77438354 43.95013046]
[69.21818542 35.57971954]
[84.17646027 30.37882042]
[99.91326904 28.60332298]
[101.47085571 13.68441200]
[88.72879791 7.24694586]
[78.97769165 -3.13877344]
[73.37889862 -16.20587540]
[72.58901215 -30.36997604]
[76.68287659 -43.92127991]
[85.14703369 -55.23097229]
[96.94405365 -62.94699860]
[110.63961029 -66.15568542]
[112.50721741 -81.03896332]
[114.37483215 -95.92224121]
[108.41596222 -110.57838440]
[117.67769623 -122.24326324]
[119.54531097 -137.12654114]
[121.41292572 -152.00982666]
[122.19277191 -166.98954773]
[121.88071442 -181.98629761]
[121.56865692 -196.98304749]
[107.14150238 -201.58042908]
[94.99031067 -210.61520386]
[86.43314362 -223.10734558]
[82.39822388 -237.70179749]
[83.32322693 -252.81547546]
[89.10781860 -266.80895996]
[99.12452698 -278.16430664]
[112.28681946 -285.64981079]
[127.16693878 -288.45349121]
[142.15081787 -286.27124023]
[155.61309814 -279.33972168]
[166.09350586 -268.41088867]
[172.45520020 -254.67015076]
[174.00810242 -239.60804749]
[170.58378601 -224.85836792]
[162.55368042 -212.02107239]
[150.78883362 -202.48864746]
[136.56541443 -197.29510498]
[136.87747192 -182.29835510]
[137.18952942 -167.30158997]
[147.85527039 -177.84872437]
[162.78996277 -179.24690247]
[175.22804260 -170.86273193]
[179.53494263 -156.49435425]
[173.75958252 -142.65074158]
[160.51826477 -135.60322571]
[145.80943298 -138.54437256]
[136.29620361 -150.14221191]
[134.42858887 -135.25892639]
[132.56097412 -120.37565613]
[138.65342712 -106.78406525]
[129.25811768 -94.05462646]
[127.39050293 -79.17134857]
[125.52288818 -64.28807068]
[139.39099121 -56.68147278]
[149.31266785 -44.31364441]
[153.75199890 -29.05206299]
[152.00378418 -13.21568108]
[144.30532837 0.77745229]
[131.80473328 10.77939224]
[116.38976288 15.24199295]
[114.83218384 30.16090393]
[128.29225159 34.44817734]
[140.64474487 41.30163956]
[151.40609741 50.45299149]
[160.15502930 61.54398727]
[166.54905701 74.14044189]
[170.33784485 87.74922943]
[171.37307739 101.83760834]
[169.61424255 115.85404205]
[165.13017273 129.24983215]
[158.09643555 141.50056458]
[148.78836060 152.12666321]
[137.57034302 160.71212769]
[124.88154602 166.92086792]
[111.21869659 170.50981140]
[97.11666107 171.33848572]
[94.93981934 186.17968750]
[92.76298523 201.02088928]
[94.62059784 210.03205872]
[90.38338470 216.14692688]
[87.89826202 230.93963623]
[85.41314697 245.73234558]
[82.92802429 260.52505493]
[81.68115234 275.47314453]
[81.68115234 290.47314453]
[81.68115234 305.47314453]
[81.68115234 320.47314453]
[81.68115234 335.47314453]
[81.68115234 350.47314453]
[81.68115234 365.47314453]
[81.68115234 380.47314453]
[81.68115234 395.47314453]
[81.68115234 410.47314453]
[96.22103882 414.53445435]
[109.12541962 422.36895752]
[119.43670654 433.39529419]
[126.38972473 446.79522705]
[129.46852112 461.57437134]
[128.44464111 476.63607788]
[123.39403534 490.86257935]
[114.69150543 503.19824219]
[102.98284912 512.72766113]
[89.13690948 518.74371338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[29 130]
[30 129]
[31 128]
[32 127]
[33 125]
[34 124]
[35 123]
[48 108]
[49 107]
[57 100]
[58 99]
[59 98]
[61 96]
[62 95]
[63 94]
[64 86]
[65 85]
[66 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
