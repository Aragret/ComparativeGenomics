%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUACUCAUCGGGGGGGGGGGCACUAAUUUACACUCACAACACCCUAGGCUCACUAAACAUUCUACUACUxxxxxxxxxxCCAGUCUCAGCCCUACUCCACUCAAGCACUAUAGUUGUAGCAGGAAUCUUCCCCCCCCCCCUUACUCAUC\
) } def
/len { sequence length } bind def

/coor [
[75.16247559 460.29342651]
[61.31653595 454.27740479]
[49.60787582 444.74798584]
[40.90534973 432.41232300]
[35.85474777 418.18579102]
[34.83086014 403.12411499]
[37.90965652 388.34494019]
[44.86267853 374.94500732]
[55.17396164 363.91870117]
[68.07834625 356.08416748]
[82.61823273 352.02285767]
[82.61823273 337.02285767]
[82.61823273 322.02285767]
[82.61823273 307.02285767]
[82.61823273 292.02285767]
[82.61823273 277.02285767]
[82.61823273 262.02285767]
[82.61823273 247.02285767]
[82.61823273 232.02285767]
[82.61823273 217.02285767]
[70.11775208 225.31370544]
[55.77779007 220.91310120]
[50.07968903 207.03752136]
[57.18830490 193.82890320]
[71.90781403 190.94166565]
[83.47916412 200.48556519]
[85.03674316 185.56665039]
[77.02009583 169.98675537]
[87.87382507 155.14840698]
[89.12069702 140.20031738]
[82.46813202 126.87393951]
[91.32579041 113.76468658]
[83.77325439 98.81629944]
[93.41518402 85.12220764]
[94.35081482 70.15141296]
[91.75057983 61.32584763]
[95.46482849 54.87992096]
[96.71170044 39.93183517]
[97.95858002 24.98374748]
[99.20545197 10.03565979]
[100.45232391 -4.91242695]
[91.09862518 -12.37441158]
[86.58292389 -23.32508850]
[87.93045807 -34.97231674]
[94.68726349 -44.40700150]
[105.06309509 -49.32966614]
[106.93070984 -64.21294403]
[108.79832458 -79.09622192]
[110.51100922 -93.99812317]
[112.06859589 -108.91703796]
[113.62617493 -123.83595276]
[98.96566772 -127.08670807]
[84.77130127 -131.98747253]
[71.22811127 -138.47436523]
[58.51266479 -146.46281433]
[46.79074097 -155.84866333]
[36.21515274 -166.50956726]
[26.92377853 -178.30651855]
[19.03774643 -191.08572388]
[12.65987206 -204.68060303]
[7.87330008 -218.91389465]
[4.74043465 -233.60003662]
[3.30211878 -248.54757690]
[3.57710457 -263.56164551]
[5.56180620 -278.44650269]
[9.23034954 -293.00805664]
[14.53490734 -307.05654907]
[21.40632439 -320.40875244]
[29.75501633 -332.89062500]
[39.47214127 -344.33941650]
[50.43101883 -354.60592651]
[62.48877335 -363.55624390]
[75.48821259 -371.07369995]
[89.25985718 -377.06033325]
[103.62416840 -381.43804932]
[118.39387512 -384.14978027]
[133.37641907 -385.16018677]
[148.37649536 -384.45608521]
[163.19851685 -382.04666138]
[177.64926147 -377.96331787]
[191.54034424 -372.25930786]
[204.69065857 -365.00900269]
[216.92874146 -356.30688477]
[228.09507751 -346.26641846]
[238.04408264 -335.01852417]
[246.64604187 -322.70980835]
[253.78880310 -309.50079346]
[259.37927246 -295.56362915]
[263.34454346 -281.08004761]
[265.63293457 -266.23883057]
[266.21459961 -251.23352051]
[265.08197021 -236.25971985]
[262.24978638 -221.51263428]
[257.75500488 -207.18452454]
[251.65620422 -193.46218872]
[244.03289795 -180.52453613]
[234.98448181 -168.54022217]
[224.62890625 -157.66548157]
[213.10118103 -148.04211426]
[200.55158997 -139.79554749]
[187.14376831 -133.03332520]
[173.05247498 -127.84358978]
[158.46144104 -124.29399109]
[143.56089783 -122.43082428]
[128.54508972 -122.27837372]
[126.98750305 -107.35945892]
[125.42992401 -92.44054413]
[127.87931061 -85.41586304]
[123.68160248 -77.22861481]
[121.81398773 -62.34532928]
[119.94637299 -47.46205139]
[132.02993774 -33.77318954]
[130.30625916 -15.27653313]
[115.40041351 -3.66555238]
[114.15354156 11.28253460]
[112.90666199 26.23062134]
[111.65979004 41.17870712]
[110.41291046 56.12679672]
[109.32160187 71.08704376]
[108.38597870 86.05783844]
[115.56916809 95.27670288]
[114.71889496 106.93273163]
[106.27388000 115.01155853]
[112.83725739 129.40713501]
[104.06878662 141.44720459]
[102.82190704 156.39527893]
[110.55980682 166.76730347]
[109.17385864 179.22917175]
[99.95565796 187.12423706]
[98.39807892 202.04315186]
[97.61823273 217.02285767]
[97.61823273 232.02285767]
[97.61823273 247.02285767]
[97.61823273 262.02285767]
[97.61823273 277.02285767]
[97.61823273 292.02285767]
[97.61823273 307.02285767]
[97.61823273 322.02285767]
[97.61823273 337.02285767]
[97.61823273 352.02285767]
[112.15811920 356.08416748]
[125.06250000 363.91870117]
[135.37377930 374.94500732]
[142.32681274 388.34494019]
[145.40560913 403.12411499]
[144.38171387 418.18579102]
[139.33111572 432.41232300]
[130.62858582 444.74798584]
[118.91992188 454.27740479]
[105.07398987 460.29342651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 130]
[27 129]
[29 126]
[30 125]
[32 123]
[34 120]
[35 119]
[37 118]
[38 117]
[39 116]
[40 115]
[41 114]
[46 111]
[47 110]
[48 109]
[49 107]
[50 106]
[51 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
