%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUACCAAACGGGGGGGGGGCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAACCUCCxxxxxxxxxxCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCCCCCCCCCCCAAUACCAAAC\
) } def
/len { sequence length } bind def

/coor [
[82.81932831 356.07363892]
[69.59912872 348.80117798]
[58.71232605 338.35418701]
[50.90119553 325.44494629]
[46.69831467 310.95361328]
[46.39023972 295.86828613]
[49.99798203 281.21746826]
[57.27555466 268.00006104]
[67.72676086 257.11730957]
[80.63902283 249.31115723]
[95.13195801 245.11386108]
[94.81990814 230.11711121]
[94.50785065 215.12036133]
[94.19579315 200.12359619]
[93.88373566 185.12684631]
[93.57167816 170.13009644]
[93.25962067 155.13334656]
[92.94757080 140.13659668]
[92.63551331 125.13983917]
[92.32345581 110.14308167]
[84.53507996 122.96264648]
[72.89221954 132.42012024]
[58.74859619 137.41590881]
[43.74867249 137.36915588]
[29.63646889 132.28527832]
[18.05280876 122.75538635]
[10.34451008 109.88751221]
[7.40781164 95.17779541]
[9.58416080 80.33651733]
[16.62051392 67.08926392]
[27.69876289 56.97628021]
[41.53084564 51.17339706]
[56.50852203 50.35530853]
[70.89034271 54.61713409]
[83.00415039 63.46335220]
[91.44149017 75.86542511]
[95.22158813 90.38425446]
[99.82714844 76.10879517]
[104.43271637 61.83333588]
[109.03827667 47.55787277]
[113.64384460 33.28241348]
[110.51744843 17.77318382]
[121.78876495 8.03631401]
[126.39433289 -6.23914671]
[130.99989319 -20.51460648]
[117.13942719 -26.27135086]
[103.79430389 -33.13870621]
[91.05334473 -41.07096863]
[79.00134277 -50.01535034]
[67.71849060 -59.91233063]
[57.27989197 -70.69603729]
[47.75500107 -82.29471588]
[39.20721436 -94.63117218]
[31.69340897 -107.62330627]
[25.26359558 -121.18465424]
[19.96055984 -135.22497559]
[15.81959534 -149.65083313]
[12.86825943 -164.36621094]
[11.12619209 -179.27319336]
[10.60498810 -194.27255249]
[11.30811501 -209.26451111]
[13.23089409 -224.14924622]
[16.36052895 -238.82774353]
[20.67619133 -253.20230103]
[26.14916420 -267.17724609]
[32.74301910 -280.65960693]
[40.41388321 -293.55963135]
[49.11069870 -305.79147339]
[58.77559280 -317.27377319]
[69.34424591 -327.93005371]
[80.74632263 -337.68942261]
[92.90595245 -346.48693848]
[105.74219513 -354.26403809]
[119.16964722 -360.96899414]
[133.09893799 -366.55718994]
[147.43736267 -370.99139404]
[162.08952332 -374.24212646]
[176.95788574 -376.28775024]
[191.94351196 -377.11462402]
[206.94667053 -376.71728516]
[221.86752319 -375.09835815]
[236.60678101 -372.26864624]
[251.06632996 -368.24691772]
[265.14996338 -363.05999756]
[278.76394653 -356.74240112]
[291.81768799 -349.33612061]
[304.22427368 -340.89047241]
[315.90121460 -331.46170044]
[326.77075195 -321.11248779]
[336.76055908 -309.91174316]
[345.80413818 -297.93399048]
[353.84133911 -285.25897217]
[360.81863403 -271.97100830]
[366.68963623 -258.15853882]
[371.41525269 -243.91349792]
[374.96401978 -229.33065796]
[377.31234741 -214.50709534]
[378.44458008 -199.54144287]
[378.35317993 -184.53329468]
[377.03878784 -169.58253479]
[374.51016235 -154.78866577]
[370.78405762 -140.25012207]
[365.88534546 -126.06367493]
[359.84658813 -112.32372284]
[352.70797729 -99.12171173]
[344.51705933 -86.54549408]
[335.32827759 -74.67876434]
[325.20281982 -63.60049820]
[314.20806885 -53.38441849]
[302.41720581 -44.09851456]
[289.90866089 -35.80458069]
[276.76571655 -28.55781555]
[263.07580566 -22.40644455]
[248.93005371 -17.39140129]
[234.42260742 -13.54606628]
[219.64999390 -10.89602661]
[204.71052551 -9.45891857]
[189.70364380 -9.24430561]
[174.72918701 -10.25361633]
[159.88684082 -12.48013496]
[145.27536011 -15.90904236]
[140.66978455 -1.63358223]
[136.06422424 12.64187813]
[139.52005005 27.13003159]
[127.91930389 37.88797760]
[123.31373596 52.16343689]
[118.70817566 66.43889618]
[114.10260773 80.71436310]
[109.49704742 94.98982239]
[107.32020569 109.83102417]
[107.63226318 124.82778168]
[107.94432068 139.82453918]
[108.25637817 154.82128906]
[108.56843567 169.81803894]
[108.88049316 184.81478882]
[109.19254303 199.81155396]
[109.50460052 214.80830383]
[109.81665802 229.80505371]
[110.12871552 244.80180359]
[124.78370667 248.39257812]
[138.00952148 255.65483093]
[148.90438843 266.09341431]
[156.72547913 278.99664307]
[160.93954468 293.48471069]
[161.25927734 308.56979370]
[157.66284180 323.22341919]
[150.39547729 336.44641113]
[139.95268250 347.33724976]
[127.04645538 355.15335083]
[112.55676270 359.36184692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[43 123]
[44 122]
[45 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
