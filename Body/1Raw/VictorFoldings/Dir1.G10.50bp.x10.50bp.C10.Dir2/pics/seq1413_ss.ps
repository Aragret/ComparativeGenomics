%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAACCUCAACAGGGGGGGGGGGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAAxxxxxxxxxxACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCACCCCCCCCCCUAACCCUCAACA\
) } def
/len { sequence length } bind def

/coor [
[85.42355347 554.47320557]
[70.80755615 550.82348633]
[57.37038803 544.01245117]
[45.78604507 534.38177490]
[36.63560104 522.41442871]
[30.37803078 508.71075439]
[27.32721519 493.95812988]
[27.63618088 478.89651489]
[31.28943253 464.28140259]
[38.10372162 450.84588623]
[47.73724747 439.26385498]
[59.70679855 430.11630249]
[73.41198730 423.86206055]
[88.16535950 420.81481934]
[88.46936035 405.81790161]
[88.77336884 390.82098389]
[89.07736969 375.82406616]
[89.38137817 360.82714844]
[89.68537903 345.83023071]
[89.98938751 330.83331299]
[90.29338837 315.83639526]
[90.59739685 300.83947754]
[90.90139771 285.84255981]
[91.20539856 270.84564209]
[76.23841858 266.94348145]
[62.62560654 259.58154297]
[51.15394974 249.18069458]
[42.48778152 236.33763123]
[37.13029861 221.79067993]
[35.39434433 206.37727356]
[37.38415909 190.98579407]
[42.98910904 176.50436401]
[51.88985062 163.76957703]
[63.57650757 153.51818848]
[77.37787628 146.34451294]
[92.50000000 142.66587830]
[92.50000000 127.66588593]
[80.17250061 120.70075989]
[72.68284607 108.68472290]
[71.85848999 94.54963684]
[58.39141846 87.94372559]
[44.92435074 81.33781433]
[31.45728302 74.73190308]
[17.99021530 68.12599182]
[5.51614809 71.55417633]
[-5.58301258 65.72891998]
[-9.58205318 54.27353287]
[-22.91247368 47.39603806]
[-39.25878525 48.71136856]
[-48.34706116 35.06090164]
[-40.82806015 20.48706627]
[-24.43668938 19.98217583]
[-16.03498077 34.06562042]
[-2.70456123 40.94311142]
[14.72688103 39.14511871]
[24.59612656 54.65892410]
[38.06319427 61.26483536]
[51.53026199 67.87075043]
[64.99732971 74.47666168]
[78.46440125 81.08257294]
[90.31759644 73.02033234]
[104.59239960 71.70581055]
[110.78588867 58.04416275]
[116.97937775 44.38251114]
[123.17286682 30.72086143]
[129.36636353 17.05921173]
[116.67775726 9.01275444]
[105.23253632 -0.72136736]
[95.25349426 -11.95367527]
[86.93486023 -24.46552849]
[80.43856049 -38.01338196]
[75.89105988 -52.33351898]
[73.38086700 -67.14719391]
[72.95684814 -82.16606140]
[74.62725830 -97.09777069]
[78.35957336 -111.65166473]
[84.08114624 -125.54446411]
[91.68061066 -138.50572205]
[101.01003265 -150.28315735]
[111.88782501 -160.64750671]
[124.10223389 -169.39704895]
[137.41551208 -176.36143494]
[151.56849670 -181.40513611]
[166.28572083 -184.42996216]
[181.28070068 -185.37702942]
[196.26153564 -184.22790527]
[210.93664551 -181.00494385]
[225.02035522 -175.77091980]
[238.23854065 -168.62767029]
[250.33389282 -159.71427917]
[261.07095337 -149.20422363]
[270.24078369 -137.30207825]
[277.66482544 -124.23955536]
[283.19857788 -110.27088928]
[286.73434448 -95.66799927]
[288.20330811 -80.71513367]
[287.57687378 -65.70334625]
[284.86718750 -50.92485428]
[280.12704468 -36.66732025]
[273.44873047 -23.20827675]
[264.96215820 -10.80970383]
[254.83261108 0.28705585]
[243.25720215 9.86600018]
[230.46127319 17.74067307]
[216.69390869 23.75778961]
[202.22308350 27.80022621]
[187.33047485 29.78929710]
[172.30598450 29.68628120]
[157.44204712 27.49318695]
[143.02801514 23.25270271]
[136.83451843 36.91435242]
[130.64103699 50.57600403]
[124.44754028 64.23765564]
[118.25405121 77.89929962]
[127.08222961 90.60830688]
[128.01777649 106.05435944]
[120.78804016 119.73596954]
[107.50000000 127.66588593]
[107.50000000 142.66587830]
[121.68550873 146.00073242]
[134.76060486 152.41731262]
[146.06576538 161.58818054]
[155.03155518 173.04708862]
[161.20736694 186.21267700]
[164.28401184 200.41790771]
[164.10923767 214.94390869]
[160.69525146 229.05636597]
[154.21792603 242.04260254]
[145.00772095 253.24760437]
[133.53286743 262.10699463]
[120.37554169 268.17559814]
[106.20232391 271.14962769]
[105.89831543 286.14654541]
[105.59431458 301.14349365]
[105.29030609 316.14041138]
[104.98630524 331.13732910]
[104.68229675 346.13424683]
[104.37829590 361.13116455]
[104.07428741 376.12808228]
[103.77028656 391.12500000]
[103.46628571 406.12191772]
[103.16227722 421.11883545]
[117.78004456 424.76144409]
[131.22050476 431.56597900]
[142.80952454 441.19107056]
[151.96575928 453.15399170]
[158.22998047 466.85461426]
[161.28793335 481.60577393]
[160.98626709 496.66754150]
[157.34010315 511.28442383]
[150.53231812 524.72326660]
[140.90440369 536.30993652]
[128.93930054 545.46325684]
[115.23714447 551.72412109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[36 119]
[37 118]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[47 54]
[48 53]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
