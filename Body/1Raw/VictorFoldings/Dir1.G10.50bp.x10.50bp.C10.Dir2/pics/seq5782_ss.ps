%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACAAAACCCGGGGGGGGGGACCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACUCCUACCUAUxxxxxxxxxxUCAAAGCCCUCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGGACCCCCCCCCCCUGCAAAACCC\
) } def
/len { sequence length } bind def

/coor [
[83.25137329 358.28744507]
[70.03117371 351.01498413]
[59.14437103 340.56799316]
[51.33324051 327.65872192]
[47.13035965 313.16741943]
[46.82228851 298.08209229]
[50.43002701 283.43124390]
[57.70760345 270.21386719]
[68.15880585 259.33111572]
[81.07106781 251.52494812]
[95.56401062 247.32766724]
[95.25195312 232.33091736]
[94.93989563 217.33416748]
[94.62783813 202.33740234]
[94.31578064 187.34065247]
[94.00372314 172.34390259]
[93.69167328 157.34715271]
[93.37961578 142.35038757]
[93.06755829 127.35363770]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[76.94259644 72.37300110]
[62.01134872 70.89198303]
[47.19540024 68.52066040]
[32.54778671 65.26753235]
[18.12093925 61.14422607]
[3.96650600 56.16551971]
[-9.86484337 50.34922409]
[-23.32359695 43.71616364]
[-36.36157608 36.29008865]
[-48.93210602 28.09757233]
[-60.99018860 19.16795158]
[-72.49266052 9.53318691]
[-83.39834595 -0.77223063]
[-93.66819763 -11.71140957]
[-103.26545715 -23.24518967]
[-112.15576935 -35.33228302]
[-120.30731201 -47.92942429]
[-127.69089508 -60.99151230]
[-134.28010559 -74.47179413]
[-140.05133057 -88.32200623]
[-144.98391724 -102.49257660]
[-149.06022644 -116.93276978]
[-152.26565552 -131.59089661]
[-154.58871460 -146.41448975]
[-156.02111816 -161.35047913]
[-156.55770874 -176.34539795]
[-156.19657898 -191.34556580]
[-154.93902588 -206.29728699]
[-152.78953552 -221.14704895]
[-149.75582886 -235.84167480]
[-145.84873962 -250.32856750]
[-141.08226013 -264.55587769]
[-135.47346497 -278.47265625]
[-129.04241943 -292.02911377]
[-121.81215668 -305.17669678]
[-113.80855560 -317.86834717]
[-105.06025696 -330.05859375]
[-95.59858704 -341.70388794]
[-85.45742035 -352.76245117]
[-74.67304993 -363.19476318]
[-63.28408432 -372.96343994]
[-51.33129501 -382.03350830]
[-38.85747147 -390.37252808]
[-25.90726471 -397.95065308]
[-12.52703476 -404.74069214]
[1.23532259 -410.71841431]
[15.33053970 -415.86236572]
[29.70815849 -420.15417480]
[44.31671143 -423.57846069]
[59.10390472 -426.12295532]
[74.01679993 -427.77856445]
[89.00202179 -428.53933716]
[104.00591278 -428.40255737]
[118.97476959 -427.36874390]
[133.85501099 -425.44158936]
[148.59336853 -422.62796021]
[163.13706970 -418.93795776]
[177.43406677 -414.38479614]
[191.43318176 -408.98474121]
[205.08428955 -402.75717163]
[218.33851624 -395.72433472]
[231.14843750 -387.91143799]
[243.46818542 -379.34640503]
[255.25364685 -370.05996704]
[266.46264648 -360.08529663]
[277.05505371 -349.45816040]
[286.99298096 -338.21655273]
[296.24078369 -326.40075684]
[304.76541138 -314.05300903]
[312.53634644 -301.21759033]
[319.52575684 -287.94039917]
[325.70861816 -274.26898193]
[331.06280518 -260.25225830]
[335.56912231 -245.94044495]
[339.21148682 -231.38473511]
[341.97683716 -216.63723755]
[343.85528564 -201.75077820]
[344.84008789 -186.77861023]
[344.92773438 -171.77435303]
[344.11788940 -156.79170227]
[342.41345215 -141.88430786]
[339.82055664 -127.10552216]
[336.34848022 -112.50826263]
[332.00964355 -98.14476776]
[326.81954956 -84.06646729]
[320.79681396 -70.32375336]
[313.96298218 -56.96582794]
[306.34249878 -44.04050064]
[297.96270752 -31.59404564]
[288.85354614 -19.67101669]
[279.04760742 -8.31409740]
[268.58007812 2.43605924]
[257.48834229 12.54096985]
[245.81216431 21.96446037]
[233.59330750 30.67279816]
[220.87553406 38.63480759]
[207.70434570 45.82198715]
[194.12692261 52.20861053]
[180.19184875 57.77181625]
[165.94900513 62.49168396]
[151.44940186 66.35131836]
[136.74491882 69.33690643]
[121.88820648 71.43775940]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[108.06430817 127.04158020]
[108.37636566 142.03833008]
[108.68842316 157.03509521]
[109.00048065 172.03184509]
[109.31253815 187.02859497]
[109.62459564 202.02534485]
[109.93664551 217.02210999]
[110.24870300 232.01885986]
[110.56076050 247.01560974]
[125.21575165 250.60638428]
[138.44155884 257.86865234]
[149.33642578 268.30722046]
[157.15753174 281.21044922]
[161.37159729 295.69851685]
[161.69131470 310.78359985]
[158.09489441 325.43722534]
[150.82752991 338.66021729]
[140.38473511 349.55105591]
[127.47850037 357.36715698]
[112.98880768 361.57565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
