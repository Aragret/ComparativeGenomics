%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUAAGACUGGGGGGGGGGUCACCAGUCAAAGCGAACUACUAUACUCAAUUGAUCCAAUAACUUGACCAxxxxxxxxxxAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUACUCCACCCCCCCCCCAUGCUAAAACU\
) } def
/len { sequence length } bind def

/coor [
[85.15901947 157.80845642]
[71.25035095 152.30229187]
[59.14772797 143.51051331]
[49.61143875 131.98539734]
[43.24055481 118.45097351]
[40.43529129 103.75745392]
[41.37187576 88.82789612]
[45.99147034 74.60016632]
[54.00387573 61.96804810]
[64.90574646 51.72509384]
[78.01223755 44.51476669]
[92.50000000 40.79000854]
[92.50000000 25.79001045]
[92.50000000 10.79001045]
[92.50000000 -4.20998955]
[92.50000000 -19.20998955]
[92.50000000 -34.20999146]
[92.50000000 -49.20999146]
[92.50000000 -64.20999146]
[92.50000000 -79.20999146]
[92.50000000 -94.20999146]
[92.50000000 -109.20999146]
[77.52034760 -110.06644440]
[62.61402512 -111.77667236]
[47.82964325 -114.33509064]
[33.21543503 -117.73336792]
[18.81906128 -121.96041870]
[4.68748665 -127.00244141]
[-9.13319683 -132.84300232]
[-22.59790993 -139.46304321]
[-35.66273117 -146.84097290]
[-48.28504562 -154.95272827]
[-60.42368698 -163.77185059]
[-72.03905487 -173.26956177]
[-83.09326172 -183.41490173]
[-93.55025482 -194.17477417]
[-103.37592316 -205.51406860]
[-112.53822327 -217.39581299]
[-121.00725555 -229.78123474]
[-128.75541687 -242.62995911]
[-135.75741577 -255.90005493]
[-141.99041748 -269.54824829]
[-147.43408203 -283.52999878]
[-152.07067871 -297.79974365]
[-155.88507080 -312.31091309]
[-158.86480713 -327.01617432]
[-161.00018311 -341.86755371]
[-162.28421021 -356.81661987]
[-162.71273804 -371.81460571]
[-162.28433228 -386.81262207]
[-161.00041199 -401.76168823]
[-158.86515808 -416.61309814]
[-155.88552856 -431.31835938]
[-152.07125854 -445.82955933]
[-147.43478394 -460.09933472]
[-141.99121094 -474.08114624]
[-135.75831604 -487.72940063]
[-128.75642395 -500.99954224]
[-121.00836945 -513.84832764]
[-112.53942871 -526.23382568]
[-103.37722778 -538.11560059]
[-93.55164337 -549.45501709]
[-83.09473419 -560.21496582]
[-72.04060364 -570.36035156]
[-60.42531586 -579.85821533]
[-48.28674698 -588.67742920]
[-35.66449356 -596.78924561]
[-22.59972954 -604.16729736]
[-9.13506889 -610.78741455]
[4.68556929 -616.62811279]
[18.81710434 -621.67022705]
[33.21344376 -625.89739990]
[47.82762909 -629.29577637]
[62.61198807 -631.85430908]
[77.51830292 -633.56469727]
[92.49794006 -634.42126465]
[107.50205994 -634.42126465]
[122.48169708 -633.56469727]
[137.38801575 -631.85430908]
[152.17237854 -629.29577637]
[166.78656006 -625.89739990]
[181.18289185 -621.67022705]
[195.31443787 -616.62811279]
[209.13507080 -610.78741455]
[222.59973145 -604.16729736]
[235.66448975 -596.78924561]
[248.28674316 -588.67742920]
[260.42532349 -579.85821533]
[272.04061890 -570.36035156]
[283.09472656 -560.21496582]
[293.55163574 -549.45501709]
[303.37722778 -538.11560059]
[312.53942871 -526.23382568]
[321.00836182 -513.84832764]
[328.75640869 -500.99954224]
[335.75833130 -487.72940063]
[341.99121094 -474.08114624]
[347.43478394 -460.09933472]
[352.07125854 -445.82955933]
[355.88552856 -431.31835938]
[358.86514282 -416.61309814]
[361.00039673 -401.76168823]
[362.28433228 -386.81262207]
[362.71273804 -371.81460571]
[362.28421021 -356.81661987]
[361.00018311 -341.86755371]
[358.86480713 -327.01617432]
[355.88507080 -312.31091309]
[352.07067871 -297.79974365]
[347.43408203 -283.52999878]
[341.99041748 -269.54824829]
[335.75741577 -255.90005493]
[328.75540161 -242.62995911]
[321.00726318 -229.78123474]
[312.53820801 -217.39581299]
[303.37591553 -205.51406860]
[293.55026245 -194.17477417]
[283.09326172 -183.41490173]
[272.03906250 -173.26956177]
[260.42367554 -163.77185059]
[248.28504944 -154.95272827]
[235.66273499 -146.84097290]
[222.59791565 -139.46304321]
[209.13319397 -132.84300232]
[195.31251526 -127.00244141]
[181.18093872 -121.96041870]
[166.78456116 -117.73336792]
[152.17034912 -114.33509064]
[137.38597107 -111.77667236]
[122.47965240 -110.06644440]
[107.50000000 -109.20999146]
[107.50000000 -94.20999146]
[107.50000000 -79.20999146]
[107.50000000 -64.20999146]
[107.50000000 -49.20999146]
[107.50000000 -34.20999146]
[107.50000000 -19.20998955]
[107.50000000 -4.20998955]
[107.50000000 10.79001045]
[107.50000000 25.79001045]
[107.50000000 40.79000854]
[121.98776245 44.51476669]
[135.09425354 51.72509384]
[145.99612427 61.96804810]
[154.00852966 74.60016632]
[158.62812805 88.82789612]
[159.56471252 103.75745392]
[156.75944519 118.45097351]
[150.38856506 131.98539734]
[140.85227966 143.51051331]
[128.74964905 152.30229187]
[114.84098053 157.80845642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
