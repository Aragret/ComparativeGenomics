%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAAAUCCAGGGGGGGGGGUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUCCCACAACACUxxxxxxxxxxUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCAUAUAACCUCCCCCCCCCCCCCCCAAAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[67.99810028 153.18473816]
[56.20111465 143.98176575]
[46.94906998 132.22323608]
[40.77954865 118.59236908]
[38.05103302 103.88119507]
[38.92206573 88.94449615]
[43.34203339 74.65018463]
[51.05411530 61.82882690]
[61.61019897 51.22540283]
[74.39691925 43.45603180]
[88.67131042 38.97214508]
[87.73568726 24.00135422]
[86.80005646 9.03056335]
[85.86442566 -5.94022799]
[84.92880249 -20.91102028]
[83.99317169 -35.88180923]
[83.05754089 -50.85260391]
[82.12191772 -65.82339478]
[81.18628693 -80.79418945]
[80.25065613 -95.76497650]
[65.24664307 -95.69326019]
[50.26340866 -96.48607635]
[35.35074234 -98.14079285]
[20.55817795 -100.65190887]
[5.93485260 -104.01108551]
[-8.47065449 -108.20716858]
[-22.61048889 -113.22621155]
[-36.43767929 -119.05154419]
[-49.90629578 -125.66381073]
[-62.97159576 -133.04106140]
[-75.59017181 -141.15876770]
[-87.72011566 -149.98997498]
[-99.32112122 -159.50534058]
[-110.35466003 -169.67327881]
[-120.78407288 -180.45997620]
[-130.57472229 -191.82962036]
[-139.69407654 -203.74444580]
[-148.11184692 -216.16487122]
[-155.80007935 -229.04962158]
[-162.73321533 -242.35591125]
[-168.88822937 -256.03955078]
[-174.24467468 -270.05502319]
[-178.78477478 -284.35583496]
[-182.49342346 -298.89447021]
[-185.35830688 -313.62261963]
[-187.36991882 -328.49133301]
[-188.52157593 -343.45126343]
[-188.80943298 -358.45269775]
[-188.23255920 -373.44580078]
[-186.79284668 -388.38076782]
[-184.49510193 -403.20794678]
[-181.34693909 -417.87817383]
[-177.35882568 -432.34262085]
[-172.54402161 -446.55328369]
[-166.91848755 -460.46298218]
[-160.50094604 -474.02545166]
[-153.31268311 -487.19567871]
[-145.37760925 -499.92990112]
[-136.72207642 -512.18579102]
[-127.37481689 -523.92266846]
[-117.36689758 -535.10156250]
[-106.73155975 -545.68530273]
[-95.50414276 -555.63873291]
[-83.72193146 -564.92877197]
[-71.42407227 -573.52459717]
[-58.65141296 -581.39764404]
[-45.44638824 -588.52178955]
[-31.85285950 -594.87329102]
[-17.91598511 -600.43109131]
[-3.68206096 -605.17675781]
[10.80162716 -609.09448242]
[25.48696709 -612.17126465]
[40.32517242 -614.39685059]
[55.26695633 -615.76391602]
[70.26268005 -616.26782227]
[85.26253510 -615.90704346]
[100.21668243 -614.68261719]
[115.07545471 -612.59875488]
[129.78948975 -609.66223145]
[144.30990601 -605.88293457]
[158.58847046 -601.27331543]
[172.57774353 -595.84881592]
[186.23126221 -589.62731934]
[199.50367737 -582.62951660]
[212.35089111 -574.87872314]
[224.73022461 -566.40063477]
[236.60055542 -557.22344971]
[247.92245483 -547.37762451]
[258.65829468 -536.89587402]
[268.77246094 -525.81298828]
[278.23129272 -514.16583252]
[287.00338745 -501.99310303]
[295.05963135 -489.33520508]
[302.37326050 -476.23416138]
[308.91992188 -462.73355103]
[314.67794800 -448.87820435]
[319.62817383 -434.71411133]
[323.75411987 -420.28836060]
[327.04214478 -405.64889526]
[329.48129272 -390.84426880]
[331.06344604 -375.92373657]
[331.78338623 -360.93682861]
[331.63870239 -345.93334961]
[330.62988281 -330.96310425]
[328.76025391 -316.07583618]
[326.03604126 -301.32104492]
[322.46630859 -286.74768066]
[318.06289673 -272.40420532]
[312.84045410 -258.33822632]
[306.81631470 -244.59648132]
[300.01046753 -231.22463989]
[292.44555664 -218.26708984]
[284.14669800 -205.76690674]
[275.14144897 -193.76559448]
[265.45977783 -182.30302429]
[255.13375854 -171.41728210]
[244.19775391 -161.14453125]
[232.68809509 -151.51887512]
[220.64297485 -142.57231140]
[208.10244751 -134.33454895]
[195.10813904 -126.83295441]
[181.70324707 -120.09245300]
[167.93228149 -114.13542938]
[153.84098816 -108.98167419]
[139.47618103 -104.64831543]
[124.88557434 -101.14973450]
[110.11764526 -98.49755859]
[95.22145081 -96.70060730]
[96.15708160 -81.72981262]
[97.09270477 -66.75902557]
[98.02833557 -51.78823090]
[98.96396637 -36.81744003]
[99.89958954 -21.84664726]
[100.83522034 -6.87585640]
[101.77085114 8.09493542]
[102.70647430 23.06572723]
[103.64210510 38.03651810]
[118.36370087 40.70824432]
[132.01826477 46.82511520]
[143.81242371 56.03171921]
[153.06085205 67.79309845]
[159.22616577 81.42586517]
[161.95016479 96.13787842]
[161.07452393 111.07430267]
[156.65016174 125.36724854]
[148.93412781 138.18623352]
[138.37478638 148.78640747]
[125.58567047 156.55184937]
[111.30989838 161.03134155]
[96.37696838 161.96459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
