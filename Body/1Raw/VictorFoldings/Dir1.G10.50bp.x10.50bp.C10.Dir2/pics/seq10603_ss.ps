%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACCACCCUGGGGGGGGGGAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAxxxxxxxxxxUCAACUGCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACAAACCCCCCCCCCCCUACCCACCCU\
) } def
/len { sequence length } bind def

/coor [
[-45.85956955 317.52346802]
[-58.77423096 308.28399658]
[-71.10520935 298.27880859]
[-82.80715942 287.54470825]
[-93.83708191 276.12115479]
[-104.15441895 264.05014038]
[-113.72123718 251.37605286]
[-122.50237274 238.14546204]
[-130.46554565 224.40702820]
[-137.58146667 210.21125793]
[-151.36384583 216.13121033]
[-165.14622498 222.05117798]
[-178.92861938 227.97114563]
[-192.71099854 233.89111328]
[-206.49337769 239.81106567]
[-220.27575684 245.73103333]
[-233.79994202 252.21919250]
[-247.04252625 259.26434326]
[-260.28512573 266.30947876]
[-273.52770996 273.35461426]
[-286.77029419 280.39974976]
[-300.01287842 287.44488525]
[-303.08337402 302.77804565]
[-315.32373047 312.50982666]
[-330.95440674 312.04522705]
[-342.59509277 301.60354614]
[-344.74938965 286.11505127]
[-336.40014648 272.89297485]
[-321.48956299 268.18032837]
[-307.05801392 274.20230103]
[-293.81542969 267.15716553]
[-280.57284546 260.11203003]
[-267.33026123 253.06687927]
[-254.08766174 246.02174377]
[-240.84507751 238.97660828]
[-239.91281128 236.26770020]
[-237.81632996 233.77796936]
[-234.63848877 231.96601868]
[-230.63119507 231.25003052]
[-226.19572449 231.94865417]
[-212.41334534 226.02868652]
[-198.63095093 220.10871887]
[-184.84857178 214.18876648]
[-171.06619263 208.26879883]
[-157.28381348 202.34883118]
[-143.50143433 196.42887878]
[-148.40876770 182.97325134]
[-152.57318115 169.26948547]
[-155.98223877 155.35855103]
[-158.62573242 141.28205872]
[-160.49574280 127.08209991]
[-161.58670044 112.80114746]
[-161.89533997 98.48191833]
[-161.42073059 84.16722107]
[-160.16429138 69.89987946]
[-158.12977600 55.72255707]
[-155.32328796 41.67765808]
[-151.75318909 27.80717850]
[-147.43019104 14.15260601]
[-142.36720276 0.75477660]
[-136.57936096 -12.34624100]
[-130.08399963 -25.11126709]
[-122.90052032 -37.50212479]
[-115.05041504 -49.48175430]
[-106.55715942 -61.01433182]
[-97.44615936 -72.06536102]
[-87.74465942 -82.60180664]
[-77.48166656 -92.59214020]
[-66.68788910 -102.00649261]
[-55.39559937 -110.81670380]
[-43.63856888 -118.99642944]
[-31.45195770 -126.52120972]
[-18.87221718 -133.36853027]
[-5.93696690 -139.51791382]
[7.31510782 -144.95098877]
[20.84437370 -149.65147400]
[34.61037064 -153.60534668]
[48.57192612 -156.80075073]
[62.68728638 -159.22814941]
[76.91423798 -160.88027954]
[91.21023560 -161.75219727]
[105.53251648 -161.84129333]
[119.83824921 -161.14730835]
[134.08465576 -159.67231750]
[148.22912598 -157.42071533]
[162.22935486 -154.39926147]
[176.04348755 -150.61695862]
[189.63018799 -146.08515930]
[202.94882202 -140.81738281]
[215.95957947 -134.82940674]
[228.62353516 -128.13912964]
[240.90281677 -120.76654816]
[252.76071167 -112.73372650]
[264.16174316 -104.06468964]
[275.07180786 -94.78535461]
[285.45831299 -84.92348480]
[295.29013062 -74.50856018]
[304.53793335 -63.57173157]
[313.17401123 -52.14571762]
[321.17254639 -40.26467896]
[328.50961304 -27.96415520]
[335.16329956 -15.28092861]
[341.11367798 -2.25293398]
[346.34298706 11.08086777]
[350.83554077 24.68059921]
[354.57791138 38.50558472]
[357.55892944 52.51448441]
[359.76965332 66.66539764]
[361.20352173 80.91600037]
[361.85617065 95.22368622]
[376.85537720 95.37972260]
[390.86856079 86.86132812]
[405.12036133 94.97415161]
[404.94976807 111.37240601]
[390.53225708 119.18698120]
[376.69934082 110.37890625]
[361.70013428 110.22286987]
[360.59957886 126.06412506]
[358.54098511 141.80957031]
[355.53192139 157.40130615]
[351.58349609 172.78202820]
[346.71017456 187.89517212]
[340.92990112 202.68521118]
[334.26394653 217.09774780]
[326.73675537 231.07981873]
[318.37603760 244.58001709]
[309.21252441 257.54870605]
[299.27990723 269.93820190]
[288.61471558 281.70297241]
[277.25610352 292.79977417]
[265.24588013 303.18777466]
[252.62815857 312.82885742]
[239.44935608 321.68750000]
[225.75791931 329.73120117]
[211.60415649 336.93032837]
[197.04011536 343.25848389]
[182.11933899 348.69235229]
[166.89666748 353.21197510]
[151.42807007 356.80075073]
[135.77041626 359.44546509]
[119.98126984 361.13641357]
[104.11865997 361.86734009]
[88.24090576 361.63562012]
[72.40638733 360.44204712]
[56.67330551 358.29104614]
[41.09950256 355.19052124]
[25.74222946 351.15185547]
[10.65794468 346.18991089]
[-4.09790087 340.32290649]
[-18.47105980 333.57244873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
