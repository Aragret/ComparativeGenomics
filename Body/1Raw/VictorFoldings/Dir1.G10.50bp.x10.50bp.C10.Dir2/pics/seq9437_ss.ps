%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUGCCCUGGGGGGGGGGCCUUUUACCCCUACCAUGAGCCCUACAAACAACUAACCUGCCACUAAUAGxxxxxxxxxxCCUCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACAACCCCCCCCCCCAAAUAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[84.07147217 397.69985962]
[70.85128021 390.42736816]
[59.96447372 379.98037720]
[52.15334320 367.07113647]
[47.95046234 352.57980347]
[47.64239120 337.49447632]
[51.25013351 322.84365845]
[58.52770615 309.62625122]
[68.97891235 298.74349976]
[81.89117432 290.93734741]
[96.38410950 286.74005127]
[96.07205200 271.74331665]
[95.75999451 256.74655151]
[95.44794464 241.74980164]
[95.13588715 226.75305176]
[94.82382965 211.75630188]
[94.51177216 196.75953674]
[94.19971466 181.76278687]
[93.88765717 166.76603699]
[93.57560730 151.76928711]
[80.33030701 148.31597900]
[68.43927002 141.53614807]
[58.72117615 131.89654541]
[51.84512329 120.06088257]
[48.28452301 106.84403229]
[48.28452301 93.15596771]
[51.84512329 79.93911743]
[58.72117615 68.10344696]
[68.43927002 58.46385574]
[80.33030701 51.68401337]
[93.57560730 48.23072052]
[93.88765717 33.23396683]
[90.99623108 27.17202568]
[91.56365967 21.43535995]
[94.53759766 17.62337875]
[95.47322845 2.65258670]
[96.40885925 -12.31820488]
[97.34448242 -27.28899574]
[98.28011322 -42.25978851]
[99.21574402 -57.23057938]
[84.36690521 -59.41658401]
[69.75306702 -62.83745193]
[55.47674179 -67.46918488]
[41.63805771 -73.27929688]
[28.33409119 -80.22703552]
[15.65816021 -88.26365662]
[3.69917870 -97.33279419]
[-7.45896816 -107.37084198]
[-17.73801231 -118.30737305]
[-27.06585503 -130.06568909]
[-35.37706375 -142.56329346]
[-42.61334229 -155.71255493]
[-48.72393036 -169.42120361]
[-53.66596985 -183.59310913]
[-57.40479279 -198.12884521]
[-59.91417313 -212.92646790]
[-61.17650986 -227.88217163]
[-61.18294907 -242.89105225]
[-59.93344116 -257.84783936]
[-57.43675995 -272.64761353]
[-53.71041107 -287.18655396]
[-48.78053284 -301.36267090]
[-42.68170929 -315.07656860]
[-35.45671463 -328.23202515]
[-27.15623283 -340.73678589]
[-17.83848381 -352.50308228]
[-7.56882620 -363.44842529]
[3.58070397 -373.49603271]
[15.53189945 -382.57543945]
[28.20093155 -390.62295532]
[41.49893188 -397.58209229]
[55.33262253 -403.40408325]
[69.60497284 -408.04806519]
[84.21587372 -411.48144531]
[99.06282806 -413.68020630]
[114.04169464 -414.62887573]
[129.04740906 -414.32080078]
[143.97473145 -412.75814819]
[158.71893311 -409.95187378]
[173.17658997 -405.92169189]
[187.24630737 -400.69583130]
[200.82939148 -394.31097412]
[213.83056641 -386.81188965]
[226.15861511 -378.25119019]
[237.72709656 -368.68893433]
[248.45483398 -358.19216919]
[258.26660156 -346.83453369]
[267.09356689 -334.69570923]
[274.87384033 -321.86080933]
[281.55279541 -308.41992188]
[287.08361816 -294.46725464]
[291.42749023 -280.10073853]
[294.55395508 -265.42108154]
[296.44110107 -250.53132629]
[297.07568359 -235.53585815]
[296.45324707 -220.53988647]
[294.57812500 -205.64860535]
[291.46353149 -190.96644592]
[287.13125610 -176.59640503]
[281.61169434 -162.63928223]
[274.94360352 -149.19297791]
[267.17373657 -136.35180664]
[258.35659790 -124.20584869]
[248.55401611 -112.84029388]
[237.83474731 -102.33486176]
[226.27401733 -92.76324463]
[213.95288086 -84.19258881]
[200.95777893 -76.68299866]
[187.37986755 -70.28716278]
[173.31437683 -65.04993439]
[158.85997009 -61.00805283]
[144.11804199 -58.18987274]
[129.19200134 -56.61515427]
[114.18653107 -56.29495239]
[113.25090790 -41.32415771]
[112.31527710 -26.35336876]
[111.37964630 -11.38257599]
[110.44402313 3.58821511]
[109.50839233 18.55900574]
[108.88441467 33.54602432]
[108.57235718 48.54277802]
[123.97166443 53.66760635]
[137.05070496 63.27703094]
[146.54354858 76.44093323]
[151.53135681 91.88516235]
[151.53135681 108.11483765]
[146.54354858 123.55906677]
[137.05070496 136.72297668]
[123.97166443 146.33239746]
[108.57235718 151.45722961]
[108.88441467 166.45397949]
[109.19647217 181.45072937]
[109.50852966 196.44747925]
[109.82057953 211.44424438]
[110.13263702 226.44099426]
[110.44469452 241.43774414]
[110.75675201 256.43450928]
[111.06880951 271.43124390]
[111.38086700 286.42800903]
[126.03585815 290.01876831]
[139.26167297 297.28103638]
[150.15653992 307.71963501]
[157.97763062 320.62283325]
[162.19169617 335.11090088]
[162.51142883 350.19601440]
[158.91499329 364.84960938]
[151.64762878 378.07260132]
[141.20483398 388.96343994]
[128.29859924 396.77957153]
[113.80891418 400.98803711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[31 121]
[32 120]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
