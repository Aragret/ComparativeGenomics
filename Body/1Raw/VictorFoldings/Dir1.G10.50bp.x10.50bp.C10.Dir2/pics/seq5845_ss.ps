%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACACUCGGGGGGGGGGAUCGCCCUUACCACGCUACUCCUACCUAUCUCCCCUUUUAUACUAAUAAUxxxxxxxxxxCAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUUCGCUUCAUUCAUUGCCCCCCCCCCCCCCCACAAUC\
) } def
/len { sequence length } bind def

/coor [
[100.21867371 379.46527100]
[86.99847412 372.19277954]
[76.11167145 361.74578857]
[68.30053711 348.83654785]
[64.09765625 334.34521484]
[63.78958511 319.25988770]
[67.39733124 304.60906982]
[74.67490387 291.39166260]
[85.12610626 280.50891113]
[98.03836823 272.70275879]
[112.53130341 268.50546265]
[112.21925354 253.50871277]
[111.90719604 238.51196289]
[111.59513855 223.51521301]
[111.28308105 208.51844788]
[110.97102356 193.52169800]
[110.65896606 178.52494812]
[110.34691620 163.52819824]
[110.03485870 148.53143311]
[109.72280121 133.53468323]
[95.69645691 132.98240662]
[83.70329285 127.08316040]
[75.57143402 117.33541107]
[61.55472565 122.67692566]
[58.48310471 137.79541016]
[47.70905685 148.83731079]
[32.67053604 152.27917480]
[18.16628456 147.02273560]
[8.82455063 134.74530029]
[7.62625170 119.36454010]
[14.95375919 105.78841400]
[28.46889305 98.34900665]
[43.85902023 99.42021179]
[56.21321106 108.66020966]
[70.22992706 103.31869507]
[70.32593536 95.91087341]
[72.23707581 88.75317383]
[75.84644318 82.28343201]
[80.93325043 76.89739227]
[74.58612061 63.30644608]
[68.23899078 49.71549225]
[53.92842484 54.28012848]
[39.15161896 56.97723770]
[24.15123177 57.76253128]
[9.17357922 56.62311935]
[-5.53539038 53.57770538]
[-19.73414421 48.67630386]
[-33.18952179 41.99939728]
[-45.68058014 33.65662384]
[-57.00219727 23.78498459]
[-66.96846771 12.54657841]
[-75.41573334 0.12594996]
[-82.20528412 -13.27294254]
[-87.22563171 -27.43007660]
[-90.39433289 -42.11297989]
[-91.65935516 -57.08054733]
[-90.99992371 -72.08699799]
[-88.42687225 -86.88590240]
[-83.98245239 -101.23426819]
[-77.73964691 -114.89646149]
[-69.80095673 -127.64815521]
[-60.29675674 -139.27993774]
[-49.38310623 -149.60081482]
[-37.23921967 -158.44131470]
[-24.06451035 -165.65626526]
[-10.07532024 -171.12716675]
[4.49863768 -174.76420593]
[19.41804504 -176.50765991]
[34.43791199 -176.32890320]
[49.31159592 -174.23085022]
[63.79486084 -170.24795532]
[77.64987946 -164.44564819]
[90.64913177 -156.91918945]
[102.57917023 -147.79216003]
[113.24407959 -137.21444702]
[122.46875000 -125.35974884]
[130.10168457 -112.42272186]
[136.01754761 -98.61581421]
[140.11921692 -84.16574097]
[142.33930969 -69.30977631]
[142.64138794 -54.29188919]
[141.02049255 -39.35866928]
[137.50321960 -24.75534248]
[132.14733887 -10.72170544]
[125.04081726 2.51179504]
[116.30032349 14.72785378]
[106.06938934 25.72587204]
[94.51602936 35.32525253]
[81.82994843 43.36836624]
[88.17707825 56.95931625]
[94.52420044 70.55027008]
[109.43198395 70.26528931]
[123.22608185 77.35964966]
[132.34877014 90.64100647]
[134.15318298 107.25724792]
[149.13290405 106.47740936]
[164.11262512 105.69756317]
[179.07286072 104.60624695]
[194.00717163 103.20394897]
[208.94148254 101.80164337]
[223.87579346 100.39933777]
[238.81010437 98.99703217]
[253.74440002 97.59473419]
[268.66333008 96.03714752]
[283.56521606 94.32446289]
[298.46713257 92.61177063]
[313.36901855 90.89907837]
[322.99774170 78.36658478]
[338.67871094 76.39616394]
[351.10870361 86.15682983]
[352.91323853 101.85776520]
[343.02169800 114.18386841]
[327.30255127 115.82229614]
[315.08172607 105.80098724]
[300.17980957 107.51367188]
[285.27792358 109.22636414]
[270.37600708 110.93905640]
[264.04910278 114.85262299]
[255.14671326 112.52903748]
[240.21240234 113.93134308]
[225.27809143 115.33364868]
[210.34378052 116.73594666]
[195.40948486 118.13825226]
[180.47517395 119.54055786]
[176.75784302 122.63198853]
[171.04167175 123.37815094]
[164.89245605 120.67727661]
[149.91275024 121.45712280]
[134.93302917 122.23696136]
[124.71955109 133.22262573]
[125.03160858 148.21939087]
[125.34366608 163.21614075]
[125.65572357 178.21289062]
[125.96778107 193.20964050]
[126.27983856 208.20640564]
[126.59188843 223.20315552]
[126.90394592 238.19990540]
[127.21600342 253.19665527]
[127.52806091 268.19342041]
[142.18305969 271.78417969]
[155.40885925 279.04644775]
[166.30372620 289.48504639]
[174.12483215 302.38824463]
[178.33889771 316.87631226]
[178.65861511 331.96139526]
[175.06219482 346.61502075]
[167.79483032 359.83801270]
[157.35202026 370.72885132]
[144.44580078 378.54498291]
[129.95610046 382.75344849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[23 35]
[24 34]
[39 91]
[40 90]
[41 89]
[95 129]
[96 128]
[97 127]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 117]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
