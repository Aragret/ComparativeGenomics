%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAACCAGAGGGGGGGGGGUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAAxxxxxxxxxxCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCCCCCCCCCCCUAACCUGA\
) } def
/len { sequence length } bind def

/coor [
[77.33332062 397.01144409]
[63.48738480 390.99542236]
[51.77872086 381.46600342]
[43.07619858 369.13034058]
[38.02559662 354.90380859]
[37.00170517 339.84213257]
[40.08050156 325.06295776]
[47.03352356 311.66302490]
[57.34481049 300.63671875]
[70.24919128 292.80218506]
[84.78907776 288.74087524]
[84.78907776 273.74087524]
[84.78907776 258.74087524]
[84.78907776 243.74087524]
[84.78907776 228.74087524]
[84.78907776 213.74087524]
[84.78907776 198.74087524]
[84.78907776 183.74087524]
[84.78907776 168.74087524]
[84.78907776 153.74087524]
[84.78907776 138.74087524]
[76.05184937 150.93353271]
[62.94781494 158.23313904]
[47.98193359 159.24430847]
[34.01508713 153.77374268]
[23.71717262 142.86718750]
[19.05673981 128.60954285]
[20.92467308 113.72629547]
[28.96390343 101.06253815]
[41.63764954 93.03906250]
[56.52320099 91.18963623]
[70.77503204 95.86779785]
[81.66877747 106.17926788]
[87.12174988 120.15144348]
[90.82791138 105.61650085]
[91.60775757 90.63678741]
[89.43092346 75.79558563]
[87.25408936 60.95438004]
[85.07724762 46.11317444]
[82.90041351 31.27196884]
[80.72357178 16.43076324]
[68.96543884 2.29831386]
[75.99467468 -13.75128937]
[73.50955963 -28.54399681]
[71.02443695 -43.33670425]
[56.02611160 -42.58389282]
[41.04180527 -43.57740784]
[26.27416420 -46.30381012]
[11.92290401 -50.72623444]
[-1.81789160 -56.78487015]
[-14.76239300 -64.39778137]
[-26.73554230 -73.46201324]
[-37.57541275 -83.85497284]
[-47.13541031 -95.43611908]
[-55.28625107 -108.04882812]
[-61.91769409 -121.52252197]
[-66.94006348 -135.67498779]
[-70.28543854 -150.31483459]
[-71.90856934 -165.24406433]
[-71.78751373 -180.26078796]
[-69.92390442 -195.16191101]
[-66.34294128 -209.74591064]
[-61.09306335 -223.81556702]
[-54.24526215 -237.18060303]
[-45.89214325 -249.66026306]
[-36.14667892 -261.08578491]
[-25.14066124 -271.30264282]
[-13.02293682 -280.17266846]
[0.04261695 -287.57589722]
[13.87930298 -293.41220093]
[28.29999542 -297.60269165]
[43.10967255 -300.09066772]
[58.10805130 -300.84246826]
[73.09229279 -299.84796143]
[87.85974884 -297.12057495]
[102.21071625 -292.69717407]
[115.95110321 -286.63763428]
[128.89509583 -279.02386475]
[140.86764526 -269.95883179]
[151.70681763 -259.56515503]
[161.26605225 -247.98335266]
[169.41604614 -235.37010193]
[176.04658508 -221.89596558]
[181.06800842 -207.74316406]
[184.41241455 -193.10310364]
[186.03454590 -178.17376709]
[185.91249084 -163.15704346]
[184.04788208 -148.25605774]
[180.46595764 -133.67228699]
[175.21513367 -119.60297394]
[168.36643982 -106.23840332]
[160.01248169 -93.75929260]
[150.26625061 -82.33442688]
[139.25955200 -72.11830902]
[127.14124298 -63.24909592]
[114.07519531 -55.84673691]
[100.23812103 -50.01134109]
[85.81714630 -45.82182312]
[88.30226898 -31.02911568]
[90.78738403 -16.23640823]
[100.48009491 -8.93170643]
[102.64064789 3.41944647]
[95.56478119 14.25392628]
[97.74161530 29.09513092]
[99.91845703 43.93633652]
[102.09529114 58.77754211]
[104.27212524 73.61875153]
[106.44896698 88.45995331]
[112.34564972 74.66759491]
[121.98194885 63.17230225]
[134.53294373 54.95813370]
[148.92419434 50.72826004]
[163.92373657 50.84479141]
[178.24754333 55.29774094]
[190.66940308 63.70592117]
[200.12593079 75.34954071]
[205.80761719 89.23184967]
[207.22807312 104.16443634]
[204.26570129 118.86901093]
[197.17408752 132.08676147]
[186.56031799 142.68618774]
[173.33299255 149.75993347]
[158.62443542 152.70242310]
[143.69377136 151.26177979]
[129.81915283 145.56132507]
[118.18833160 136.08906555]
[109.79695129 123.65584564]
[105.36285400 109.32266235]
[101.65669250 123.85760498]
[99.78907776 138.74087524]
[99.78907776 153.74087524]
[99.78907776 168.74087524]
[99.78907776 183.74087524]
[99.78907776 198.74087524]
[99.78907776 213.74087524]
[99.78907776 228.74087524]
[99.78907776 243.74087524]
[99.78907776 258.74087524]
[99.78907776 273.74087524]
[99.78907776 288.74087524]
[114.32896423 292.80218506]
[127.23334503 300.63671875]
[137.54463196 311.66302490]
[144.49765015 325.06295776]
[147.57644653 339.84213257]
[146.55255127 354.90380859]
[141.50195312 369.13034058]
[132.79943848 381.46600342]
[121.09076691 390.99542236]
[107.24483490 397.01144409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[34 129]
[35 128]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[43 100]
[44 99]
[45 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
