%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCGUAAAUGGGGGGGGGGGAUAUCAUCUCAACUUAGUAUUAUACCCACACCCACCCAAGAACAGGGUUxxxxxxxxxxAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCCCCCCCCCCCAUAAAU\
) } def
/len { sequence length } bind def

/coor [
[83.78276062 382.49407959]
[69.76081848 376.94107056]
[57.56086349 368.07473755]
[47.94979095 356.45242310]
[41.53176498 342.80471802]
[38.71022797 327.98953247]
[39.66254425 312.93814087]
[44.32884979 298.59674072]
[52.41581726 285.86676025]
[63.41509247 275.54849243]
[76.63524628 268.29052734]
[91.24526215 264.54907227]
[91.24526215 249.54908752]
[91.24526215 234.54908752]
[91.24526215 219.54908752]
[91.24526215 204.54908752]
[91.24526215 189.54908752]
[91.24526215 174.54908752]
[91.24526215 159.54908752]
[91.24526215 144.54908752]
[91.24526215 129.54908752]
[78.33256531 121.91611481]
[65.19093323 129.14781189]
[52.04930115 136.37951660]
[41.08752060 149.31303406]
[25.62493324 142.36000061]
[28.02577400 125.57689667]
[44.81760025 123.23789215]
[57.95922852 116.00618744]
[71.10086060 108.77448273]
[71.12208557 99.90290833]
[73.68862915 91.81759644]
[78.34571838 85.19684601]
[84.47450256 80.52420807]
[91.36501312 78.05472565]
[98.29370117 77.80625916]
[102.25031281 63.33749390]
[106.20692444 48.86872482]
[110.16353607 34.39995956]
[114.12014008 19.93119049]
[118.07675171 5.46242285]
[122.03336334 -9.00634480]
[125.98997498 -23.47511292]
[111.86406708 -28.54334259]
[98.17338562 -34.69099045]
[85.00027466 -41.88108444]
[72.42395020 -50.07037735]
[60.52006531 -59.20962143]
[49.36019897 -69.24385071]
[39.01147461 -80.11270905]
[29.53612900 -91.75084686]
[20.99114799 -104.08824921]
[13.42792606 -117.05073547]
[6.89194727 -130.56033325]
[1.42252111 -144.53579712]
[-2.94745851 -158.89308167]
[-6.19170952 -173.54583740]
[-8.29071999 -188.40592957]
[-9.23186684 -203.38400269]
[-9.00949001 -218.38996887]
[-7.62492609 -233.33357239]
[-5.08650208 -248.12493896]
[-1.40948498 -262.67514038]
[3.38401103 -276.89660645]
[9.26515675 -290.70388794]
[16.19858170 -304.01385498]
[24.14258766 -316.74655151]
[33.04939651 -328.82531738]
[42.86544418 -340.17758179]
[53.53169250 -350.73501587]
[64.98399353 -360.43414307]
[77.15346527 -369.21664429]
[89.96692657 -377.02969360]
[103.34731293 -383.82626343]
[117.21414948 -389.56552124]
[131.48403931 -394.21295166]
[146.07115173 -397.74060059]
[160.88778687 -400.12722778]
[175.84480286 -401.35848999]
[190.85224915 -401.42700195]
[205.81988525 -400.33233643]
[220.65766907 -398.08105469]
[235.27639771 -394.68673706]
[249.58811951 -390.16976929]
[263.50677490 -384.55734253]
[276.94863892 -377.88317871]
[289.83288574 -370.18746948]
[302.08203125 -361.51641846]
[313.62240601 -351.92224121]
[324.38458252 -341.46261597]
[334.30386353 -330.20046997]
[343.32055664 -318.20349121]
[351.38049316 -305.54385376]
[358.43511963 -292.29772949]
[364.44207764 -278.54473877]
[369.36520386 -264.36758423]
[373.17489624 -249.85159302]
[375.84826660 -235.08399963]
[377.36917114 -220.15365601]
[377.72854614 -205.15036011]
[376.92416382 -190.16432190]
[374.96090698 -175.28567505]
[371.85055542 -160.60392761]
[367.61184692 -146.20733643]
[362.27023315 -132.18252563]
[355.85784912 -118.61382294]
[348.41326904 -105.58283234]
[339.98129272 -93.16793060]
[330.61257935 -81.44377899]
[320.36349487 -70.48089600]
[309.29571533 -60.34520340]
[297.47573853 -51.09766769]
[284.97473145 -42.79390335]
[271.86779785 -35.48385239]
[258.23379517 -29.21147537]
[244.15475464 -24.01449776]
[229.71531677 -19.92417336]
[215.00231934 -16.96510506]
[200.10426331 -15.15508747]
[185.11073303 -14.50500679]
[170.11192322 -15.01877213]
[155.19802856 -16.69329453]
[140.45874023 -19.51850128]
[136.50213623 -5.04973459]
[132.54551697 9.41903305]
[128.58891296 23.88780022]
[124.63230133 38.35656738]
[120.67568970 52.82533646]
[116.71907806 67.29410553]
[112.76246643 81.76287079]
[125.70164490 105.24089050]
[106.24526215 129.54908752]
[106.24526215 144.54908752]
[106.24526215 159.54908752]
[106.24526215 174.54908752]
[106.24526215 189.54908752]
[106.24526215 204.54908752]
[106.24526215 219.54908752]
[106.24526215 234.54908752]
[106.24526215 249.54908752]
[106.24526215 264.54907227]
[120.85527802 268.29052734]
[134.07543945 275.54849243]
[145.07470703 285.86676025]
[153.16168213 298.59674072]
[157.82798767 312.93814087]
[158.78028870 327.98953247]
[155.95875549 342.80471802]
[149.54074097 356.45242310]
[139.92965698 368.07473755]
[127.72970581 376.94107056]
[113.70776367 382.49407959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 30]
[23 29]
[24 28]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
