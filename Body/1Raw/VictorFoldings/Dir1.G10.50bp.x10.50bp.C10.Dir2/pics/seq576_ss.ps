%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCACUCCGGGGGGGGGGCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACxxxxxxxxxxUGGCGUUUCCCCGCAUAAACAACAUAAGCUUCUGACUCUUACCUCCCUCUCCCCCCCCCCCUCCUACUCC\
) } def
/len { sequence length } bind def

/coor [
[-53.45216751 275.75927734]
[-63.15901566 266.78735352]
[-72.34221649 257.28015137]
[-80.97229767 247.26817322]
[-89.02156067 236.78353882]
[-96.46417236 225.85990906]
[-103.27623749 214.53234863]
[-109.43590546 202.83718872]
[-114.92340088 190.81199646]
[-119.72111511 178.49533081]
[-123.81365204 165.92675781]
[-127.18786621 153.14657593]
[-141.89582825 156.09207153]
[-156.60379028 159.03755188]
[-168.61595154 169.33409119]
[-182.61476135 164.24662781]
[-197.32272339 167.19210815]
[-212.03068542 170.13758850]
[-226.73864746 173.08306885]
[-241.44660950 176.02854919]
[-241.96731567 191.08927917]
[-245.94781494 205.62380981]
[-253.17343140 218.84829712]
[-263.25451660 230.04957581]
[-275.64739990 238.62356567]
[-289.68374634 244.10787964]
[-304.60659790 246.20677185]
[-319.61117554 244.80703735]
[-333.88830566 239.98416138]
[-346.66802979 231.99824524]
[-357.26119995 221.27995300]
[-365.09649658 208.40730286]
[-369.75137329 194.07452393]
[-370.97482300 179.05453491]
[-368.70083618 164.15736389]
[-363.05206299 150.18638611]
[-354.33312988 137.89505005]
[-343.01425171 127.94620514]
[-329.70581055 120.87638092]
[-315.12554932 117.06684113]
[-300.05972290 116.72303772]
[-285.32086182 119.86350250]
[-271.70379639 126.31887817]
[-259.94284058 135.74102783]
[-250.67230225 147.62184143]
[-244.39208984 161.32058716]
[-229.68412781 158.37510681]
[-214.97616577 155.42962646]
[-200.26821899 152.48414612]
[-185.56025696 149.53866577]
[-174.60011292 139.45280457]
[-159.54927063 144.32958984]
[-144.84130859 141.38410950]
[-130.13334656 138.43861389]
[-132.41688538 120.52513123]
[-133.30815125 102.48868561]
[-132.80183411 84.43733978]
[-130.90093994 66.47920990]
[-127.61687469 48.72188568]
[-122.96930695 31.27173615]
[-116.98607635 14.23329067]
[-109.70302582 -2.29138231]
[-101.16378784 -18.20329475]
[-91.41950226 -33.40712738]
[-80.52854919 -47.81180954]
[-68.55616760 -61.33104324]
[-55.57407761 -73.88385010]
[-41.66004562 -85.39503479]
[-26.89741898 -95.79563904]
[-11.37463570 -105.02336121]
[4.81532049 -113.02291870]
[21.57546616 -119.74639893]
[38.80540085 -125.15351868]
[56.40191269 -129.21189880]
[74.25959015 -131.89721680]
[92.27146149 -133.19338989]
[110.32963562 -133.09265137]
[128.32592773 -131.59561157]
[146.15254211 -128.71124268]
[163.70268250 -124.45680237]
[180.87121582 -118.85779572]
[197.55531311 -111.94775391]
[213.65501404 -103.76806641]
[221.37908936 -116.62647247]
[229.10317993 -129.48487854]
[225.03530884 -144.75666809]
[233.02986145 -158.38981628]
[248.34381104 -162.29600525]
[261.89166260 -154.15776062]
[265.63574219 -138.80335999]
[257.35470581 -125.34230042]
[241.96157837 -121.76078796]
[234.23750305 -108.90238190]
[226.51341248 -96.04398346]
[237.41220093 -88.56504059]
[247.86996460 -80.48091125]
[257.85314941 -71.81754303]
[267.32974243 -62.60273361]
[276.26925659 -52.86606216]
[284.64306641 -42.63877487]
[292.42428589 -31.95370102]
[299.58792114 -20.84512901]
[306.11099243 -9.34871292]
[311.97256470 2.49865103]
[317.15383911 14.65893936]
[321.63815308 27.09312439]
[325.41116333 39.76129913]
[328.46069336 52.62280655]
[330.77700806 65.63636780]
[332.35266113 78.76021576]
[333.18258667 91.95223236]
[333.26412964 105.17008209]
[332.59704590 118.37133026]
[331.18344116 131.51362610]
[329.02786255 144.55477905]
[326.13723755 157.45292664]
[322.52084351 170.16668701]
[318.19027710 182.65525818]
[313.15945435 194.87854004]
[307.44448853 206.79733276]
[301.06375122 218.37335205]
[294.03771973 229.56947327]
[286.38894653 240.34973145]
[278.14196777 250.67956543]
[269.32324219 260.52578735]
[259.96109009 269.85681152]
[250.08554077 278.64270020]
[239.72831726 286.85525513]
[228.92263794 294.46810913]
[217.70318604 301.45681763]
[206.10597229 307.79895020]
[194.16822815 313.47418213]
[181.92825317 318.46429443]
[169.42533875 322.75323486]
[156.69960022 326.32730103]
[143.79190063 329.17495728]
[130.74363708 331.28707886]
[117.59671021 332.65692139]
[104.39331055 333.28005981]
[91.17581177 333.15451050]
[77.98663330 332.28063965]
[64.86810303 330.66131592]
[51.86232758 328.30166626]
[39.01104355 325.20932007]
[26.35550308 321.39416504]
[13.93631935 316.86846924]
[1.79335153 311.64672852]
[-10.03442860 305.74575806]
[-21.50905991 299.18441772]
[-32.59371567 291.98382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 54]
[13 53]
[14 52]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[83 94]
[84 93]
[85 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
