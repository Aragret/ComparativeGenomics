%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUAGCCCUGGGGGGGGGGAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCxxxxxxxxxxGCAAAACCCCACUCUGCAUCAACUGAACGCAAAUCAGCCACUUUAAUUAACCCCCCCCCCGCUAAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[61.97565842 539.41564941]
[48.12971878 533.39965820]
[36.42105865 523.87023926]
[27.71853447 511.53454590]
[22.66793251 497.30801392]
[21.64404106 482.24633789]
[24.72283936 467.46719360]
[31.67586136 454.06726074]
[41.98714447 443.04092407]
[54.89152908 435.20642090]
[69.43141174 431.14511108]
[69.43141174 416.14511108]
[69.43141174 401.14511108]
[69.43141174 386.14511108]
[69.43141174 371.14511108]
[69.43141174 356.14511108]
[69.43141174 341.14511108]
[69.43141174 326.14511108]
[69.43141174 311.14511108]
[69.43141174 296.14511108]
[59.84030533 281.48187256]
[69.09456635 265.59667969]
[68.78250885 250.59994507]
[59.25201035 262.18310547]
[45.01819992 266.91583252]
[30.44925499 263.34570312]
[20.01619339 252.56834412]
[16.92079353 237.89120483]
[22.11299133 223.81849670]
[33.99937057 214.66896057]
[48.93214798 213.25047302]
[62.32864761 219.99833679]
[70.07786560 232.84251404]
[72.56298065 218.04980469]
[75.04810333 203.25709534]
[77.53321838 188.46438599]
[80.01834106 173.67169189]
[67.54415894 169.08981323]
[56.05365372 162.41395569]
[45.89508057 153.84646606]
[37.37631989 143.64698792]
[30.75556755 132.12464905]
[26.23348045 119.62866974]
[23.94711494 106.53778076]
[23.96576691 93.24875641]
[26.28886986 80.16433716]
[30.84601784 67.68110657]
[37.49909210 56.17739868]
[46.04644775 46.00186920]
[36.53808975 34.40052795]
[27.02972984 22.79918671]
[17.52137184 11.19784546]
[8.01301289 -0.40349579]
[-4.76201057 -2.46569037]
[-12.44013309 -12.37858105]
[-11.31583118 -24.46341705]
[-20.58078003 -36.26005554]
[-35.99450684 -41.85907745]
[-38.58564758 -58.05222702]
[-25.68865967 -68.18137360]
[-10.57085705 -61.82653046]
[-8.78414059 -45.52500534]
[0.48080888 -33.72836685]
[17.08061028 -28.12064362]
[19.61435318 -9.91185474]
[29.12271309 1.68948698]
[38.63106918 13.29082775]
[48.13943100 24.89216995]
[57.64778900 36.49351120]
[63.36786270 33.03082275]
[69.36902618 30.08199692]
[75.60521698 27.66965675]
[82.02859497 25.81231499]
[88.58986664 24.52422333]
[95.23868561 23.81526375]
[101.92404938 23.69087791]
[108.59464264 24.15201950]
[115.19928741 25.19514847]
[121.68730927 26.81226349]
[128.00892639 28.99095535]
[134.11561584 31.71450615]
[142.10552979 19.01957703]
[150.09544373 6.32464695]
[142.35932922 -6.88182831]
[141.65826416 -22.17127228]
[148.15338135 -36.03028488]
[160.35212708 -45.27416229]
[175.45130920 -47.77873230]
[189.98127747 -42.96846008]
[200.60313416 -31.94871521]
[204.87605286 -17.25175095]
[201.81816101 -2.25482440]
[192.13211060 9.59588242]
[178.04371643 15.57716370]
[162.79037476 14.31456375]
[154.80046082 27.00949287]
[146.81054688 39.70442200]
[153.30177307 45.35839844]
[159.11512756 51.70728683]
[164.17666626 58.67035294]
[168.42202759 66.15903473]
[171.79721069 74.07810211]
[174.25929260 82.32682800]
[189.12234497 80.30449677]
[203.98539734 78.28216553]
[218.84843445 76.25982666]
[227.03968811 62.93926239]
[241.89308167 58.04942703]
[256.39532471 63.89915466]
[263.69888306 77.72637939]
[260.35522461 93.00231171]
[247.94316101 102.51412201]
[232.32325745 101.77062225]
[220.87077332 91.12287140]
[206.00772095 93.14521027]
[191.14468384 95.16754150]
[176.28163147 97.18988037]
[172.96212769 122.43460083]
[161.52452087 145.18315125]
[143.24140930 162.90440369]
[120.14705658 173.62663269]
[94.81104279 176.15679932]
[92.32592773 190.94950867]
[89.84080505 205.74221802]
[87.35569000 220.53492737]
[84.87057495 235.32763672]
[83.77925873 250.28788757]
[84.09131622 265.28463745]
[92.86439514 274.79708862]
[92.77997589 287.33551025]
[84.43141174 296.14511108]
[84.43141174 311.14511108]
[84.43141174 326.14511108]
[84.43141174 341.14511108]
[84.43141174 356.14511108]
[84.43141174 371.14511108]
[84.43141174 386.14511108]
[84.43141174 401.14511108]
[84.43141174 416.14511108]
[84.43141174 431.14511108]
[98.97129822 435.20642090]
[111.87567902 443.04092407]
[122.18696594 454.06726074]
[129.13998413 467.46719360]
[132.21878052 482.24633789]
[131.19490051 497.30801392]
[126.14429474 511.53454590]
[117.44177246 523.87023926]
[105.73310852 533.39965820]
[91.88716888 539.41564941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 128]
[23 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[56 63]
[57 62]
[81 97]
[82 96]
[83 95]
[103 117]
[104 116]
[105 115]
[106 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
