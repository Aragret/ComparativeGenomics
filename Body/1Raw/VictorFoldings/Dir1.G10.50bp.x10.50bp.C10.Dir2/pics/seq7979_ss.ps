%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCCCAACUGGGGGGGGGGAAAUACUACCGUAUGGCCCACCAUAAUUACCCCCAUACUCCUUACACUAUxxxxxxxxxxCAUCACACACCGCACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCCCCCCCCCCCUGCCCCUACU\
) } def
/len { sequence length } bind def

/coor [
[85.26696014 488.02597046]
[72.70873260 479.67480469]
[62.62251282 468.46237183]
[55.64231873 455.09344482]
[52.20693588 440.40847778]
[52.53231430 425.33050537]
[56.59799576 410.80737305]
[64.14841461 397.75204468]
[74.70894623 386.98513794]
[87.61573792 379.18350220]
[102.05747223 374.83755493]
[101.43349457 359.85055542]
[100.80951691 344.86352539]
[100.18553925 329.87652588]
[99.56156158 314.88949585]
[98.93758392 299.90246582]
[98.31360626 284.91546631]
[97.68962860 269.92843628]
[97.06565094 254.94143677]
[96.44167328 239.95442200]
[82.59291840 236.44589233]
[70.28512573 229.16082764]
[60.52501297 218.68466187]
[54.11384583 205.86419678]
[51.58169174 191.73930359]
[53.14359283 177.45843506]
[58.68132782 164.18534851]
[67.75231934 153.00424194]
[79.62499237 144.83116150]
[93.33776093 140.33898926]
[93.02570343 125.34223938]
[92.71364594 110.34548950]
[91.93379974 95.36577606]
[83.07614136 82.25652313]
[89.72870636 68.93013763]
[88.48183441 53.98205185]
[87.23496246 39.03396606]
[85.98808289 24.08587837]
[70.97856140 24.02556610]
[56.03141785 22.65730667]
[41.26040268 19.99151230]
[26.77793694 16.04847145]
[12.69424438 10.85819530]
[-0.88348824 4.46018362]
[-13.85192394 -3.09686875]
[-26.11236382 -11.75544739]
[-37.57149506 -21.44965553]
[-48.14210892 -32.10570908]
[-57.74375153 -43.64251328]
[-66.30335236 -55.97225952]
[-73.75576019 -69.00111389]
[-80.04425812 -82.62990570]
[-85.12098694 -96.75492859]
[-88.94731140 -111.26866913]
[-91.49410248 -126.06066132]
[-92.74198914 -141.01834106]
[-92.68147278 -156.02786255]
[-91.31300354 -170.97499084]
[-88.64699554 -185.74597168]
[-84.70375824 -200.22837830]
[-79.51328278 -214.31199646]
[-73.11508179 -227.88964844]
[-65.55784607 -240.85797119]
[-56.89909363 -253.11828613]
[-47.20472717 -264.57730103]
[-36.54852295 -275.14773560]
[-25.01158714 -284.74923706]
[-12.68171978 -293.30865479]
[0.34723696 -300.76089478]
[13.97612381 -307.04919434]
[28.10121346 -312.12573242]
[42.61500549 -315.95184326]
[57.40703964 -318.49844360]
[72.36473846 -319.74609375]
[87.37425232 -319.68536377]
[102.32136536 -318.31668091]
[117.09230804 -315.65048218]
[131.57466125 -311.70703125]
[145.65820312 -306.51635742]
[159.23576355 -300.11798096]
[172.20397949 -292.56054688]
[184.46417236 -283.90164185]
[195.92303467 -274.20712280]
[206.49334717 -263.55075073]
[216.09468079 -252.01368713]
[224.65393066 -239.68370056]
[232.10597229 -226.65463257]
[238.39408875 -213.02566528]
[243.47041321 -198.90049744]
[247.29634094 -184.38665771]
[249.84271240 -169.59458923]
[251.09017944 -154.63687134]
[251.02923584 -139.62734985]
[249.66035461 -124.68025970]
[246.99394226 -109.90936279]
[243.05029297 -95.42706299]
[237.85942078 -81.34358978]
[231.46083069 -67.76612091]
[223.90322876 -54.79800415]
[215.24414062 -42.53792953]
[205.54945374 -31.07920647]
[194.89295959 -20.50904083]
[183.35574341 -10.90788364]
[171.02563477 -2.34880495]
[157.99647522 5.10305452]
[144.36741638 11.39097977]
[130.24217224 16.46711540]
[115.72827911 20.29282951]
[100.93617249 22.83900261]
[102.18304443 37.78709030]
[103.42992401 52.73517609]
[104.67679596 67.68326569]
[113.44527435 79.72332764]
[106.88188934 94.11889648]
[109.50399017 97.04481506]
[110.79428864 101.12903595]
[110.25840759 105.73674774]
[107.71040344 110.03343201]
[108.02246094 125.03018951]
[108.33451080 140.02694702]
[123.46992493 144.52061462]
[136.46574402 153.45204163]
[146.06182861 165.94067383]
[151.33215332 180.76174927]
[151.77420044 196.46636963]
[147.35684204 211.52320862]
[138.52218628 224.46780396]
[126.14137268 234.04493713]
[111.42868805 239.33044434]
[112.05266571 254.31745911]
[112.67664337 269.30447388]
[113.30062103 284.29147339]
[113.92459869 299.27850342]
[114.54857635 314.26553345]
[115.17255402 329.25253296]
[115.79653168 344.23956299]
[116.42050934 359.22656250]
[117.04448700 374.21359253]
[131.79748535 377.34402466]
[145.30812073 384.04577637]
[156.72711182 393.89758301]
[165.33662415 406.28009033]
[170.59545898 420.41500854]
[172.17306519 435.41372681]
[169.97026062 450.33346558]
[164.12551880 464.23632812]
[155.00624084 476.24838257]
[143.18566895 485.61456299]
[129.40686035 491.74603271]
[114.53595734 494.25744629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[30 120]
[31 119]
[32 118]
[33 114]
[35 112]
[36 111]
[37 110]
[38 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
