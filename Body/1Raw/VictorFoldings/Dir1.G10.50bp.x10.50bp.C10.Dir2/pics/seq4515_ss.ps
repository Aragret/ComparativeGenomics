%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCCCCUUAGGGGGGGGGGUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUCCxxxxxxxxxxAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACCCCCCCCCCCAAACCCCAUUA\
) } def
/len { sequence length } bind def

/coor [
[116.28929901 536.33319092]
[102.80041504 529.60168457]
[91.31491852 519.83709717]
[82.50054932 507.60720825]
[76.86976624 493.62298584]
[74.74993896 478.69754028]
[76.26430511 463.69851685]
[81.32482910 449.49801636]
[89.63729095 436.92160034]
[100.71842194 426.70043945]
[113.92398071 419.42880249]
[128.48620605 415.52941895]
[128.17822266 400.53259277]
[127.87024689 385.53576660]
[127.56227112 370.53890991]
[127.25429535 355.54208374]
[126.94631958 340.54522705]
[126.63833618 325.54840088]
[126.33036041 310.55157471]
[126.02238464 295.55471802]
[125.71440887 280.55789185]
[125.40642548 265.56106567]
[123.71603394 250.65660095]
[120.65763855 235.97171021]
[117.59924316 221.28680420]
[114.54084015 206.60191345]
[111.48244476 191.91700745]
[108.42404938 177.23211670]
[105.36565399 162.54722595]
[95.19589233 151.66488647]
[99.95689392 136.57702637]
[96.89849854 121.89213562]
[80.10713959 109.65188599]
[80.88476562 88.88727570]
[71.24295044 77.39661407]
[61.60113525 65.90594482]
[50.12382889 72.40856934]
[37.71727371 76.88072968]
[24.73744774 79.19532013]
[11.55659008 79.28713226]
[-1.44750381 77.15469360]
[-13.90229416 72.86023712]
[-25.45117378 66.52795410]
[-35.76367950 58.34033585]
[-44.54494858 48.53296280]
[-51.54414368 37.38769531]
[-56.56163025 25.22459602]
[-59.45465088 12.39272022]
[-60.14140701 -0.73989201]
[-58.60336685 -13.79677105]
[-54.88574600 -26.40381241]
[-49.09620667 -38.19999695]
[-41.40171814 -48.84772873]
[-32.02374649 -58.04249191]
[-40.43715668 -70.46080780]
[-48.85056686 -82.87911987]
[-57.26397705 -95.29743958]
[-65.67739105 -107.71575165]
[-74.09079742 -120.13406372]
[-89.51048279 -124.56270599]
[-95.52872467 -139.43415833]
[-87.52884674 -153.34033203]
[-71.64766693 -155.61358643]
[-60.06787109 -144.51008606]
[-61.67248535 -128.54747009]
[-53.25907516 -116.12915802]
[-44.84566498 -103.71084595]
[-36.43225479 -91.29253387]
[-28.01884460 -78.87421417]
[-19.60543442 -66.45590210]
[-3.93493724 -72.91207886]
[12.76959991 -75.81229401]
[29.71138763 -75.01552582]
[46.08173370 -70.55716705]
[61.09865189 -62.64744568]
[74.04421234 -51.66152573]
[84.29886627 -38.12171555]
[91.37109375 -22.67261887]
[94.92095947 -6.05046368]
[94.77646637 10.95198917]
[90.94187164 27.52325630]
[83.59760284 42.87186050]
[73.09180450 56.26412964]
[82.73361969 67.75479889]
[92.37542725 79.24546051]
[101.81398010 77.96379852]
[110.91589355 80.77168274]
[116.36177826 65.91729736]
[131.06095886 63.51244354]
[142.45204163 53.75316620]
[153.84310913 43.99389267]
[149.87539673 29.25550842]
[152.70379639 14.25674438]
[161.76672363 1.97561789]
[175.26473999 -5.14944410]
[190.51779175 -5.70375586]
[204.49737549 0.42274192]
[214.42782593 12.01362801]
[218.33747864 26.76752472]
[215.45002747 41.75503540]
[206.33880615 54.00037384]
[192.81285095 61.07222748]
[177.55773926 61.56646729]
[163.60238647 55.38496780]
[152.21130371 65.14424133]
[140.82023621 74.90351868]
[136.18911743 89.05985260]
[120.67516327 92.16275787]
[122.00411987 102.16877747]
[118.74728394 111.72280884]
[111.58339691 118.83374023]
[114.64179230 133.51863098]
[125.03031921 145.45132446]
[120.05055237 159.48883057]
[123.10894775 174.17372131]
[126.16734314 188.85861206]
[129.22573853 203.54351807]
[132.28413391 218.22840881]
[135.34252930 232.91331482]
[138.40092468 247.59820557]
[145.62081909 234.45008850]
[158.73258972 227.16438293]
[173.71051025 227.97805786]
[185.95585632 236.64128113]
[191.70893860 250.49415588]
[189.20333862 265.28341675]
[179.20838928 276.46826172]
[164.79284668 280.61459351]
[150.38275146 276.44937134]
[140.40325928 265.25308228]
[140.71124268 280.24990845]
[141.01922607 295.24676514]
[141.32719421 310.24359131]
[141.63517761 325.24041748]
[141.94316101 340.23727417]
[142.25112915 355.23410034]
[142.55911255 370.23092651]
[142.86708069 385.22778320]
[143.17506409 400.22460938]
[143.48304749 415.22146606]
[158.19308472 418.51968384]
[171.68603516 425.24304199]
[183.17745972 435.00064087]
[191.99923706 447.22518921]
[197.63848877 461.20596313]
[199.76736450 476.13015747]
[198.26210022 491.13006592]
[193.21018982 505.33364868]
[184.90534973 517.91510010]
[173.83041382 528.14294434]
[160.62927246 535.42260742]
[146.06941223 539.33081055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[31 112]
[32 111]
[34 85]
[35 84]
[36 83]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[87 108]
[89 106]
[90 105]
[91 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
