%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCACCCUCGGGGGGGGGGUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACxxxxxxxxxxCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCAUCAUCCUAGUCCUCCCCCCCCCCCAUCGCCCUC\
) } def
/len { sequence length } bind def

/coor [
[37.19255066 254.40435791]
[27.57929039 250.13568115]
[18.25439644 245.26918030]
[9.25499725 239.82426453]
[0.61692739 233.82258606]
[-7.62541866 227.28805542]
[-15.43922138 220.24668884]
[-22.79336739 212.72651672]
[-29.65857315 204.75750732]
[-41.73856354 213.64985657]
[-53.81855011 222.54220581]
[-65.89853668 231.43455505]
[-77.97853088 240.32690430]
[-90.05851746 249.21925354]
[-96.58538818 263.63140869]
[-111.42192841 264.94534302]
[-123.50191498 273.83767700]
[-130.02879333 288.24984741]
[-144.86532593 289.56378174]
[-156.94532776 298.45611572]
[-163.02256775 313.68765259]
[-179.28868103 315.77224731]
[-189.01048279 302.56549072]
[-182.18701172 287.65332031]
[-165.83767700 286.37612915]
[-153.75767517 277.48379517]
[-148.09484863 263.70767212]
[-132.39427185 261.75769043]
[-120.31427765 252.86534119]
[-114.65144348 239.08921814]
[-98.95086670 237.13926697]
[-86.87088013 228.24691772]
[-74.79088593 219.35455322]
[-62.71089935 210.46220398]
[-50.63091278 201.56985474]
[-38.55092239 192.67750549]
[-54.09798050 163.55541992]
[-63.60098267 131.94055176]
[-66.68719482 99.07289886]
[-63.23556900 66.24160767]
[-53.38148880 34.73439789]
[-66.90567780 28.24623108]
[-80.42987061 21.75806618]
[-93.06163788 30.49499702]
[-108.37083435 31.72952271]
[-122.23936462 25.12955856]
[-130.93666077 12.47046471]
[-132.12318420 -2.84252715]
[-125.47978210 -16.69029808]
[-112.79349518 -25.34786987]
[-97.47685242 -26.48639679]
[-83.64997864 -19.79962158]
[-75.03221130 -7.08625269]
[-73.94170380 8.23387623]
[-60.41751099 14.72204208]
[-46.89332199 21.21020699]
[-40.61008072 10.47746372]
[-33.54412079 0.24305807]
[-25.73477173 -9.43603992]
[-17.22550583 -18.50595093]
[-8.06369209 -26.91618538]
[1.69966972 -34.61992645]
[12.01023102 -41.57429123]
[22.81059647 -47.74057007]
[34.04064560 -53.08443069]
[45.63786697 -57.57613373]
[57.53769684 -61.19067001]
[69.67389679 -63.90792465]
[81.97891235 -65.71276093]
[94.38424683 -66.59514618]
[106.82083893 -66.55016327]
[119.21946716 -65.57805634]
[131.51110840 -63.68423843]
[143.62733459 -60.87925720]
[155.50070190 -57.17872620]
[167.06512451 -52.60324097]
[178.25621033 -47.17827225]
[189.01168823 -40.93402100]
[199.27166748 -33.90524673]
[208.97904968 -26.13107300]
[218.07977295 -17.65477753]
[229.17108154 -27.75342751]
[240.26240540 -37.85207748]
[251.35371399 -47.95072556]
[262.44503784 -58.04937744]
[264.85079956 -64.31993103]
[269.40200806 -67.85797882]
[274.21417236 -68.32558441]
[285.71597290 -77.95411682]
[297.21777344 -87.58264160]
[293.41867065 -102.36538696]
[296.41818237 -117.33086395]
[305.62081909 -129.50767517]
[319.19931030 -136.47808838]
[334.45770264 -136.85813904]
[348.36639404 -130.57235718]
[358.16381836 -118.86880493]
[361.90469360 -104.07121277]
[358.84625244 -89.11766052]
[349.59576416 -76.97719574]
[335.98989868 -70.06029510]
[320.73013306 -69.74033356]
[306.84628296 -76.08083344]
[295.34448242 -66.45230865]
[283.84268188 -56.82378387]
[272.54367065 -46.95806122]
[261.45236206 -36.85941315]
[250.36105347 -26.76076126]
[239.26974487 -16.66211128]
[228.17842102 -6.56346273]
[234.64421082 1.73292470]
[240.57385254 10.42059231]
[245.94377136 19.46494865]
[250.73257446 28.82997894]
[254.92117310 38.47839355]
[258.49291992 48.37177658]
[261.43356323 58.47073364]
[263.73144531 68.73504639]
[265.37734985 79.12385559]
[266.36474609 89.59579468]
[266.68972778 100.10915375]
[266.35098267 110.62207794]
[265.34985352 121.09271240]
[263.69033813 131.47935486]
[261.37905884 141.74064636]
[258.42517090 151.83575439]
[254.84046936 161.72444153]
[250.63923645 171.36737061]
[245.83818054 180.72612000]
[240.45642090 189.76342773]
[234.51539612 198.44332886]
[228.03875732 206.73124695]
[221.05229187 214.59416199]
[213.58381653 222.00080872]
[205.66307068 228.92166138]
[197.32160950 235.32917786]
[188.59262085 241.19783020]
[179.51086426 246.50427246]
[170.11253357 251.22735596]
[160.43501282 255.34828186]
[150.51686096 258.85064697]
[140.39755249 261.72048950]
[130.11738586 263.94641113]
[119.71730804 265.51950073]
[109.23871613 266.43353271]
[98.72333527 266.68487549]
[88.21304321 266.27252197]
[77.74967957 265.19805908]
[67.37491608 263.46585083]
[57.13005447 261.08273315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[16 29]
[17 28]
[19 26]
[20 25]
[41 56]
[42 55]
[43 54]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[88 105]
[89 104]
[90 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
