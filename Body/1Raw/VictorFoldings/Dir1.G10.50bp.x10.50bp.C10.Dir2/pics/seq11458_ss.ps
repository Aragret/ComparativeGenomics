%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCAACUAGGGGGGGGGGCAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUAAAAUUAxxxxxxxxxxCAGAGAAAAAGUCUUUAACUCCACCAUUAGCACCCAAAGCUAAGAUUCUACCCCCCCCCCAUUUAAACUA\
) } def
/len { sequence length } bind def

/coor [
[-9.65998459 208.65429688]
[-17.71514893 199.87097168]
[-25.06873322 190.49243164]
[-31.67691422 180.57455444]
[-37.50030518 170.17645264]
[-42.50419617 159.36010742]
[-46.65877151 148.18997192]
[-49.93926239 136.73262024]
[-52.32611847 125.05635834]
[-67.22801971 126.76904297]
[-82.12992859 128.48173523]
[-97.03182983 130.19442749]
[-111.93373108 131.90711975]
[-126.83563232 133.61981201]
[-141.73753357 135.33248901]
[-156.19223022 139.34024048]
[-169.84846497 145.54563904]
[-183.50469971 151.75105286]
[-197.16094971 157.95645142]
[-206.52397156 170.70967102]
[-221.31195068 168.93069458]
[-234.96820068 175.13610840]
[-236.37719727 190.43023682]
[-245.25756836 202.96156311]
[-259.22058105 209.35923767]
[-274.51019287 207.90231323]
[-287.01364136 198.98269653]
[-293.36752319 184.99971008]
[-291.86267090 169.71472168]
[-282.90390015 157.23930359]
[-268.90109253 150.92929077]
[-253.62088013 152.48204041]
[-241.17359924 161.47985840]
[-227.51736450 155.27445984]
[-219.13111877 142.96510315]
[-203.36634827 144.30021667]
[-189.71011353 138.09480286]
[-176.05386353 131.88940430]
[-162.39762878 125.68399048]
[-177.22978210 123.44632721]
[-190.30194092 116.08977509]
[-199.91175842 104.57234192]
[-204.80781555 90.39388275]
[-204.35250854 75.40079498]
[-198.60513306 61.54555511]
[-188.31414795 50.63246155]
[-174.81968689 44.08267593]
[-159.87908936 42.74914551]
[-145.43797302 46.80552673]
[-133.37695312 55.72357941]
[-125.26665497 68.34194946]
[-122.16326904 83.01740265]
[-124.47092438 97.83883667]
[-131.88909912 110.87611389]
[-143.45022583 120.43059540]
[-128.54832458 118.71790314]
[-113.64641571 117.00521088]
[-98.74451447 115.29252625]
[-83.84261322 113.57983398]
[-68.94071198 111.86714172]
[-54.03881073 110.15445709]
[-54.26424026 94.20242310]
[-52.84211349 78.31230927]
[-49.78762054 62.65382767]
[-45.13338089 47.39420319]
[-38.92910004 32.69641495]
[-31.24104691 18.71743393]
[-22.15132523 5.60655975]
[-11.75701618 -6.49618387]
[-0.16913116 -17.46153831]
[12.48856926 -27.17239189]
[26.08090019 -35.52503204]
[40.46269608 -42.43025208]
[55.48035431 -47.81430435]
[70.97348785 -51.61968613]
[86.77662659 -53.80575562]
[102.72099304 -54.34916306]
[118.63629150 -53.24410629]
[134.35256958 -50.50238800]
[149.70193481 -46.15329361]
[164.52049255 -40.24326324]
[178.64996338 -32.83542252]
[191.93945312 -24.00889015]
[201.44781494 -35.61022949]
[210.95617676 -47.21157074]
[213.48991394 -65.42036438]
[230.08972168 -71.02808380]
[239.35466003 -82.82472229]
[248.61961365 -94.62136078]
[250.40632629 -110.92288971]
[265.52413940 -117.27773285]
[278.42111206 -107.14858246]
[275.82998657 -90.95543671]
[260.41625977 -85.35641479]
[251.15130615 -73.55977631]
[241.88635254 -61.76313400]
[243.01065063 -49.67829895]
[235.33253479 -39.76540756]
[222.55751038 -37.70321274]
[213.04914856 -26.10187149]
[203.54080200 -14.50053120]
[218.83193970 1.46046770]
[231.68684387 19.44167328]
[241.84196472 39.07444382]
[249.08912659 59.95627975]
[253.27973938 81.65907288]
[254.32788086 103.73788452]
[269.28814697 104.82919312]
[284.24838257 105.92050171]
[299.20861816 107.01181030]
[314.16888428 108.10312653]
[324.93490601 96.76175690]
[340.47802734 95.04541779]
[353.45922852 103.76449585]
[357.74920654 118.80212402]
[351.32232666 133.05798340]
[337.21322632 139.80090332]
[322.08374023 135.84707642]
[313.07757568 123.06336975]
[298.11730957 121.97206116]
[283.15707397 120.88075256]
[268.19683838 119.78944397]
[253.23657227 118.69812775]
[251.33749390 130.46357727]
[248.53645325 142.04747009]
[244.85014343 153.38076782]
[240.30052185 164.39590454]
[234.91471863 175.02725220]
[228.72482300 185.21142578]
[221.76773071 194.88775635]
[214.08491516 203.99855042]
[205.72215271 212.48953247]
[196.72929382 220.31005859]
[187.15992737 227.41355896]
[177.07109070 233.75767517]
[166.52291870 239.30459595]
[155.57827759 244.02125549]
[144.30238342 247.87957764]
[132.76243591 250.85652161]
[121.02724457 252.93437195]
[109.16672516 254.10073853]
[97.25157166 254.34867859]
[85.35279846 253.67669678]
[73.54132080 252.08880615]
[61.88753891 249.59448242]
[50.46090317 246.20857239]
[39.32952118 241.95126343]
[28.55973244 236.84793091]
[18.21572495 230.92898560]
[8.35914898 224.22972107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 61]
[10 60]
[11 59]
[12 58]
[13 57]
[14 56]
[15 55]
[16 39]
[17 38]
[18 37]
[19 36]
[21 34]
[22 33]
[83 101]
[84 100]
[85 99]
[87 96]
[88 95]
[89 94]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
