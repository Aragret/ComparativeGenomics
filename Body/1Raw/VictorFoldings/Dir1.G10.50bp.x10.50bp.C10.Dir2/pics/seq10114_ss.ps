%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUACUCAGGGGGGGGGGCUCUCACUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGAxxxxxxxxxxAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACCCCCCCCCCCUACUAAUCA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 375.84072876]
[71.19830322 369.82470703]
[59.48964310 360.29528809]
[50.78712082 347.95962524]
[45.73651886 333.73309326]
[44.71262741 318.67141724]
[47.79142761 303.89224243]
[54.74444962 290.49234009]
[65.05573273 279.46600342]
[77.96011353 271.63146973]
[92.50000000 267.57015991]
[92.50000000 252.57017517]
[92.50000000 237.57017517]
[92.50000000 222.57017517]
[92.50000000 207.57017517]
[92.50000000 192.57017517]
[92.50000000 177.57017517]
[92.50000000 162.57017517]
[92.50000000 147.57017517]
[92.50000000 132.57017517]
[79.12783051 126.10399628]
[69.87802124 114.48214722]
[66.57746124 100.00000000]
[69.87802124 85.51785278]
[79.12783051 73.89600372]
[92.50000000 67.42983246]
[92.50000000 52.42982864]
[92.50000000 37.42982864]
[92.50000000 22.42982864]
[81.44523621 16.43745041]
[74.05114746 6.35638523]
[71.68421173 -5.84575653]
[74.73709869 -17.81986809]
[82.56508636 -27.28757286]
[93.62104034 -32.47472000]
[94.24501038 -47.46173477]
[94.86898804 -62.44874954]
[95.49296570 -77.43576813]
[80.59657288 -79.26435852]
[65.89562225 -82.28568268]
[51.48546600 -86.48015594]
[37.45955276 -91.82057953]
[23.90884781 -98.27230072]
[10.92123699 -105.79348755]
[-1.41904950 -114.33536530]
[-13.03197956 -123.84252930]
[-23.84223747 -134.25332642]
[-33.77971268 -145.50022888]
[-42.77996063 -157.51029968]
[-50.78460312 -170.20565796]
[-57.74172974 -183.50395203]
[-63.60622406 -197.31895447]
[-68.34004211 -211.56105042]
[-71.91249847 -226.13787842]
[-74.30040741 -240.95489502]
[-75.48829651 -255.91601562]
[-75.46844482 -270.92422485]
[-74.24099731 -285.88214111]
[-71.81391144 -300.69281006]
[-68.20291901 -315.26013184]
[-63.43144608 -329.48965454]
[-57.53043747 -343.28909302]
[-50.53816223 -356.56893921]
[-42.49996948 -369.24307251]
[-33.46799469 -381.22930908]
[-23.50080681 -392.44989014]
[-12.66305256 -402.83206177]
[-1.02501953 -412.30847168]
[11.33781528 -420.81768799]
[24.34527206 -428.30450439]
[37.91299057 -434.72036743]
[51.95298004 -440.02368164]
[66.37418365 -444.18002319]
[81.08306885 -447.16247559]
[95.98425293 -448.95166016]
[110.98107910 -449.53598022]
[125.97629547 -448.91165161]
[140.87265015 -447.08273315]
[155.57353210 -444.06109619]
[169.98359680 -439.86630249]
[184.00939941 -434.52557373]
[197.55995178 -428.07354736]
[210.54740906 -420.55206299]
[222.88749695 -412.00991821]
[234.50022888 -402.50250244]
[245.31025696 -392.09146118]
[255.24748230 -380.84432983]
[264.24746704 -368.83407593]
[272.25183105 -356.13854980]
[279.20864868 -342.84008789]
[285.07284546 -329.02496338]
[289.80636597 -314.78277588]
[293.37847900 -300.20587158]
[295.76608276 -285.38879395]
[296.95361328 -270.42764282]
[296.93344116 -255.41943359]
[295.70565796 -240.46153259]
[293.27825928 -225.65092468]
[289.66693115 -211.08367920]
[284.89514160 -196.85426331]
[278.99383545 -183.05496216]
[272.00128174 -169.77526855]
[263.96279907 -157.10130310]
[254.93055725 -145.11526489]
[244.96313477 -133.89489746]
[234.12515259 -123.51297760]
[222.48690796 -114.03681183]
[210.12388611 -105.52787781]
[197.11625671 -98.04135132]
[183.54840088 -91.62578583]
[169.50830078 -86.32279205]
[155.08700562 -82.16675568]
[140.37805176 -79.18464661]
[125.47682953 -77.39579010]
[110.47998810 -76.81179047]
[109.85601044 -61.82477570]
[109.23203278 -46.83775711]
[108.60805511 -31.85074234]
[122.92269135 -21.59603691]
[128.31010437 -4.66747046]
[122.45291138 12.26993370]
[107.50000000 22.42982864]
[107.50000000 37.42982864]
[107.50000000 52.42982864]
[107.50000000 67.42983246]
[120.87216949 73.89600372]
[130.12197876 85.51785278]
[133.42253113 100.00000000]
[130.12197876 114.48214722]
[120.87216949 126.10399628]
[107.50000000 132.57017517]
[107.50000000 147.57017517]
[107.50000000 162.57017517]
[107.50000000 177.57017517]
[107.50000000 192.57017517]
[107.50000000 207.57017517]
[107.50000000 222.57017517]
[107.50000000 237.57017517]
[107.50000000 252.57017517]
[107.50000000 267.57015991]
[122.03988647 271.63146973]
[134.94427490 279.46600342]
[145.25555420 290.49234009]
[152.20857239 303.89224243]
[155.28736877 318.67141724]
[154.26348877 333.73309326]
[149.21287537 347.95962524]
[140.51036072 360.29528809]
[128.80169678 369.82470703]
[114.95575714 375.84072876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 125]
[27 124]
[28 123]
[29 122]
[35 118]
[36 117]
[37 116]
[38 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
