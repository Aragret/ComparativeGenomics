%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAUCAUCAGGGGGGGGGGCCUCAACCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCxxxxxxxxxxUUCUCCGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUACCCCCCCCCCUCCAUCCUCA\
) } def
/len { sequence length } bind def

/coor [
[36.39440536 450.63943481]
[23.17420578 443.36697388]
[12.28740311 432.91995239]
[4.47627211 420.01071167]
[0.27339104 405.51940918]
[-0.03468139 390.43405151]
[3.57305980 375.78323364]
[10.85063267 362.56585693]
[21.30183983 351.68307495]
[34.21410370 343.87692261]
[48.70703888 339.67965698]
[48.39498138 324.68289185]
[48.08292770 309.68612671]
[47.77087021 294.68939209]
[47.45881271 279.69262695]
[47.14675903 264.69586182]
[46.83470154 249.69912720]
[46.52264404 234.70236206]
[46.21059036 219.70561218]
[33.68462753 211.45332336]
[19.78207016 217.08528137]
[5.87951517 222.71723938]
[-8.02304077 228.34919739]
[-10.06702518 243.57147217]
[-19.46100616 255.72254944]
[-33.67805099 261.53384399]
[-48.89384460 259.44216919]
[-61.01541901 250.01013184]
[-66.78212738 235.77494812]
[-64.64275360 220.56578064]
[-55.17278290 208.47383118]
[-40.91958618 202.75177002]
[-25.71720314 204.93881226]
[-13.65499783 214.44664001]
[0.24755837 208.81468201]
[14.15011406 203.18272400]
[28.05266953 197.55076599]
[35.42572403 172.44853210]
[57.47842407 164.50946045]
[62.08398819 150.23399353]
[66.68955231 135.95854187]
[71.29512024 121.68307495]
[64.94799042 108.09212494]
[51.04543304 102.46016693]
[37.14287567 96.82820892]
[20.19239998 96.48516083]
[15.82968426 80.10214996]
[30.36471939 71.37466431]
[42.77483368 82.92565155]
[56.67739105 88.55760956]
[70.57994843 94.18956757]
[77.91546631 79.36135101]
[92.08980560 70.57886505]
[108.89561462 70.61207581]
[112.60177612 56.07714081]
[116.30793762 41.54220581]
[120.01409149 27.00726891]
[106.03913879 21.50238419]
[92.86434174 14.28933525]
[80.69750214 5.48188448]
[69.73049927 -4.78106403]
[60.13630295 -16.33764839]
[52.06622696 -29.00560379]
[45.64754868 -42.58514023]
[40.98149490 -56.86208725]
[38.14166260 -71.61127472]
[37.17283630 -86.60009003]
[38.09029770 -101.59214020]
[40.87957764 -116.35097504]
[45.49668121 -130.64382935]
[51.86879349 -144.24526978]
[59.89541626 -156.94081116]
[69.44995880 -168.53019714]
[80.38172913 -178.83065796]
[92.51831818 -187.67974854]
[105.66831970 -194.93789673]
[119.62433624 -200.49063110]
[134.16625977 -204.25038147]
[149.06474304 -206.15785217]
[164.08480835 -206.18295288]
[178.98959351 -204.32530212]
[193.54399109 -200.61416626]
[207.51849365 -195.10810852]
[220.69267273 -187.89395142]
[232.85877991 -179.08547974]
[243.82492065 -168.82160950]
[253.41813660 -157.26420593]
[261.48715210 -144.59558105]
[267.90469360 -131.01550293]
[272.56954956 -116.73816681]
[275.40814209 -101.98873138]
[276.37570190 -86.99983978]
[275.45697021 -72.00786591]
[272.66644287 -57.24926758]
[268.04815674 -42.95680618]
[261.67489624 -29.35589218]
[253.64720154 -16.66103554]
[244.09167480 -5.07244873]
[233.15904236 5.22709751]
[221.02169800 14.07516479]
[207.87109375 21.33220673]
[193.91461182 26.88376808]
[179.37237549 30.64229584]
[164.47372437 32.54850769]
[149.45364380 32.57234573]
[134.54902649 30.71342850]
[130.84286499 45.24836731]
[127.13671112 59.78330231]
[123.43054962 74.31823730]
[132.06965637 86.58060455]
[147.00396729 87.98291016]
[161.93827820 89.38521576]
[176.87258911 90.78751373]
[191.54534912 83.46344757]
[205.07347107 92.73287201]
[203.54035950 109.06020355]
[188.52316284 115.64927673]
[175.47027588 105.72182465]
[160.53598022 104.31951904]
[145.60166931 102.91722107]
[130.66735840 101.51491547]
[122.82730865 120.17642212]
[105.18801880 129.77859497]
[85.57057953 126.28863525]
[80.96501160 140.56410217]
[76.35945129 154.83955383]
[71.75388336 169.11502075]
[81.91665649 180.11178589]
[84.15612030 195.82670593]
[76.67471313 210.84001160]
[61.20734406 219.39355469]
[61.51939774 234.39030457]
[61.83145523 249.38706970]
[62.14351273 264.38381958]
[62.45556641 279.38058472]
[62.76762390 294.37731934]
[63.07968140 309.37408447]
[63.39173508 324.37081909]
[63.70379257 339.36758423]
[78.35878754 342.95834351]
[91.58459473 350.22061157]
[102.47946167 360.65921021]
[110.30056000 373.56240845]
[114.51463318 388.05047607]
[114.83435059 403.13558960]
[111.23792267 417.78918457]
[103.97055817 431.01217651]
[93.52776337 441.90301514]
[80.62152863 449.71914673]
[66.13183594 453.92761230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 37]
[21 36]
[22 35]
[23 34]
[39 127]
[40 126]
[41 125]
[42 124]
[43 51]
[44 50]
[45 49]
[54 109]
[55 108]
[56 107]
[57 106]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
