%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUAGCGGGGGGGGGGCUCAUCAUCCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUxxxxxxxxxxUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGACUAGCUUCCCCCCCCCCACACAAUAGC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 338.46221924]
[71.19830322 332.44619751]
[59.48964310 322.91677856]
[50.78712082 310.58111572]
[45.73651886 296.35458374]
[44.71262741 281.29290771]
[47.79142761 266.51376343]
[54.74444962 253.11381531]
[65.05573273 242.08749390]
[77.96011353 234.25297546]
[92.50000000 230.19166565]
[92.50000000 215.19166565]
[92.50000000 200.19166565]
[92.50000000 185.19166565]
[92.50000000 170.19166565]
[92.50000000 155.19166565]
[92.50000000 140.19166565]
[92.50000000 125.19166565]
[92.50000000 110.19166565]
[92.03195953 95.19896698]
[91.09632874 80.22817993]
[90.16069794 65.25738525]
[78.59293365 54.82549286]
[77.85733795 39.62965012]
[87.87384033 28.66583824]
[86.93820953 13.69504738]
[86.00258636 -1.27574396]
[85.06695557 -16.24653625]
[70.06139374 -16.32355499]
[55.09525681 -17.41342545]
[40.23684692 -19.51117325]
[25.55395126 -22.60722542]
[11.11356831 -26.68745804]
[-3.01841283 -31.73325348]
[-16.77751160 -37.72158813]
[-30.10094833 -44.62513733]
[-42.92792892 -52.41239929]
[-55.19992828 -61.04784775]
[-66.86095428 -70.49208069]
[-77.85778809 -80.70200348]
[-88.14026642 -91.63102722]
[-97.66146851 -103.22928619]
[-106.37795258 -115.44386292]
[-114.24993896 -128.21902466]
[-121.24151611 -141.49647522]
[-127.32078552 -155.21563721]
[-132.46000671 -169.31391907]
[-136.63571167 -183.72697449]
[-139.82888794 -198.38906860]
[-142.02491760 -213.23326111]
[-143.21382141 -228.19184875]
[-143.39015198 -243.19657898]
[-142.55311584 -258.17898560]
[-140.70651245 -273.07070923]
[-137.85879517 -287.80377197]
[-134.02294922 -302.31097412]
[-129.21646118 -316.52612305]
[-123.46128082 -330.38436890]
[-116.78365326 -343.82244873]
[-109.21405792 -356.77908325]
[-100.78702545 -369.19512939]
[-91.54101562 -381.01394653]
[-81.51821136 -392.18157959]
[-70.76434326 -402.64712524]
[-59.32848358 -412.36276245]
[-47.26280975 -421.28424072]
[-34.62237167 -429.37078857]
[-21.46484947 -436.58554077]
[-7.85027742 -442.89553833]
[6.15922451 -448.27206421]
[20.49973297 -452.69052124]
[35.10581589 -456.13076782]
[49.91082382 -458.57711792]
[64.84721375 -460.01837158]
[79.84682465 -460.44802856]
[94.84122467 -459.86404419]
[109.76198578 -458.26913452]
[124.54103851 -455.67056274]
[139.11094666 -452.08016968]
[153.40521240 -447.51437378]
[167.35864258 -441.99398804]
[180.90756226 -435.54418945]
[193.99014282 -428.19439697]
[206.54669189 -419.97821045]
[218.51991272 -410.93304443]
[229.85517883 -401.10021973]
[240.50077820 -390.52456665]
[250.40812683 -379.25436401]
[259.53201294 -367.34103394]
[267.83081055 -354.83892822]
[275.26669312 -341.80508423]
[281.80566406 -328.29898071]
[287.41790771 -314.38226318]
[292.07785034 -300.11837769]
[295.76422119 -285.57247925]
[298.46017456 -270.81088257]
[300.15341187 -255.90093994]
[300.83621216 -240.91072083]
[300.50546265 -225.90859985]
[299.16268921 -210.96304321]
[296.81402588 -196.14222717]
[293.47012329 -181.51377869]
[289.14630127 -167.14445496]
[283.86227417 -153.09980774]
[277.64215088 -139.44393921]
[270.51428223 -126.23913574]
[262.51126099 -113.54566956]
[253.66952515 -101.42144012]
[244.02947998 -89.92177582]
[233.63507080 -79.09915161]
[222.53373718 -69.00293732]
[210.77613831 -59.67921448]
[198.41592407 -51.17051315]
[185.50947571 -43.51566696]
[172.11570740 -36.74959564]
[158.29571533 -30.90317726]
[144.11254883 -26.00308418]
[129.63093567 -22.07167625]
[114.91696167 -19.12689018]
[100.03775024 -17.18216324]
[100.97337341 -2.21137238]
[101.90900421 12.75941944]
[102.84463501 27.73021126]
[114.14827728 37.36157990]
[115.31040192 52.53076172]
[105.13149261 64.32176208]
[106.06712341 79.29254913]
[107.00274658 94.26334381]
[109.56341553 97.24317932]
[110.76847076 101.35335541]
[110.13684082 105.94892120]
[107.50000000 110.19166565]
[107.50000000 125.19166565]
[107.50000000 140.19166565]
[107.50000000 155.19166565]
[107.50000000 170.19166565]
[107.50000000 185.19166565]
[107.50000000 200.19166565]
[107.50000000 215.19166565]
[107.50000000 230.19166565]
[122.03988647 234.25297546]
[134.94427490 242.08749390]
[145.25555420 253.11381531]
[152.20857239 266.51376343]
[155.28736877 281.29290771]
[154.26348877 296.35458374]
[149.21287537 310.58111572]
[140.51036072 322.91677856]
[128.80169678 332.44619751]
[114.95575714 338.46221924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 128]
[21 127]
[22 126]
[25 123]
[26 122]
[27 121]
[28 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
