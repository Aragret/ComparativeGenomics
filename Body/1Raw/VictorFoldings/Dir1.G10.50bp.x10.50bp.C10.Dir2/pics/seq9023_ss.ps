%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUACCACUCGGGGGGGGGGCAGCCUAGCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGGCAxxxxxxxxxxAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUAAAAUUAACCCCCCCCCCUUAACCACUC\
) } def
/len { sequence length } bind def

/coor [
[1.31127572 271.93783569]
[-7.19473219 266.76742554]
[-15.43048954 261.17657471]
[-23.37523270 255.17936707]
[-31.00893021 248.79095459]
[-38.31233978 242.02740479]
[-45.26704788 234.90579224]
[-51.85551834 227.44406128]
[-58.06114197 219.66102600]
[-63.86827469 211.57630920]
[-69.26227570 203.21031189]
[-82.35543060 210.52941895]
[-95.44858551 217.84851074]
[-108.54174042 225.16761780]
[-121.63489532 232.48672485]
[-134.72804260 239.80583191]
[-147.66610718 247.39573669]
[-160.44346619 255.25317383]
[-173.22082520 263.11059570]
[-185.99818420 270.96801758]
[-198.77552795 278.82543945]
[-202.19673157 294.25500488]
[-215.57092285 302.67559814]
[-230.96343994 299.09146118]
[-239.24217224 285.62899780]
[-235.49549866 270.27523804]
[-221.94625854 262.13928223]
[-206.63296509 266.04809570]
[-193.85560608 258.19067383]
[-181.07824707 250.33323669]
[-168.30088806 242.47581482]
[-155.52352905 234.61839294]
[-153.55494690 230.20248413]
[-148.75691223 227.00715637]
[-142.04714966 226.71267700]
[-128.95399475 219.39356995]
[-115.86084747 212.07446289]
[-102.76769257 204.75537109]
[-89.67453766 197.43626404]
[-76.58138275 190.11715698]
[-90.14701843 156.09097290]
[-97.22087097 120.14978790]
[-97.56143188 83.52068329]
[-91.15706635 47.45418930]
[-78.22643280 13.18165588]
[-59.21099091 -18.12682152]
[-70.91061401 -27.51398277]
[-79.62302399 -30.47131920]
[-82.75331879 -37.22016144]
[-94.25512695 -46.84868622]
[-105.75692749 -56.47721481]
[-117.25873566 -66.10574341]
[-133.49656677 -68.40023804]
[-139.37660217 -83.70896912]
[-128.84996033 -96.28362274]
[-112.74555206 -93.18846893]
[-107.63020325 -77.60754395]
[-96.12840271 -67.97901917]
[-84.62660217 -58.35049057]
[-73.12479401 -48.72196579]
[-61.52345276 -39.21360779]
[-49.82382965 -29.82644463]
[-43.11833572 -37.18318939]
[-36.05202484 -44.19408035]
[-28.64270782 -50.84143829]
[-20.90906715 -57.10850906]
[-12.87060070 -62.97948837]
[-4.54757357 -68.43957520]
[4.03903055 -73.47500610]
[12.86756420 -78.07308960]
[21.91576958 -82.22222137]
[31.16083527 -85.91195679]
[40.57945251 -89.13298035]
[50.14787674 -91.87718201]
[59.84198380 -94.13763428]
[69.63732910 -95.90863800]
[79.50923157 -97.18573761]
[89.43278503 -97.96570587]
[99.38298798 -98.24657440]
[109.33473969 -98.02764893]
[119.26296234 -97.30946350]
[129.14262390 -96.09384155]
[138.94880676 -94.38384247]
[148.65678406 -92.18377686]
[158.24211121 -89.49919128]
[167.68060303 -86.33685303]
[176.94845581 -82.70474243]
[186.02230835 -78.61200714]
[194.87928772 -74.06896973]
[203.49707031 -69.08708191]
[211.85392761 -63.67890930]
[219.92878723 -57.85808182]
[227.70127869 -51.63927078]
[235.15182495 -45.03816223]
[242.26164246 -38.07139206]
[249.01280212 -30.75652885]
[255.38827515 -23.11201286]
[261.37200928 -15.15711594]
[266.94888306 -6.91189384]
[272.10488892 1.60286617]
[276.82696533 10.36569786]
[281.10327148 19.35450745]
[284.92297363 28.54663467]
[288.27645874 37.91890335]
[291.15527344 47.44768906]
[293.55218506 57.10896301]
[295.46112061 66.87837219]
[296.87725830 76.73128510]
[297.79705811 86.64286041]
[298.21817017 96.58811188]
[298.13955688 106.54196167]
[297.56143188 116.47931671]
[296.48519897 126.37512970]
[294.91363525 136.20445251]
[292.85064697 145.94248962]
[290.30148315 155.56471252]
[287.27252197 165.04684448]
[283.77142334 174.36497498]
[279.80703735 183.49563599]
[275.38931274 192.41578674]
[270.52941895 201.10295105]
[265.23959351 209.53521729]
[259.53317261 217.69132996]
[253.42457581 225.55073547]
[246.92915344 233.09361267]
[240.06332397 240.30093384]
[232.84436035 247.15455627]
[225.29048157 253.63717651]
[217.42074585 259.73245239]
[209.25495911 265.42501831]
[200.81373596 270.70053101]
[192.11834717 275.54571533]
[183.19071960 279.94830322]
[174.05335999 283.89721680]
[164.72930908 287.38250732]
[155.24205017 290.39538574]
[145.61552429 292.92825317]
[135.87400818 294.97473145]
[126.04203796 296.52963257]
[116.14441681 297.58908081]
[106.20609283 298.15036011]
[96.25212097 298.21209717]
[86.30759430 297.77410889]
[76.39759827 296.83752441]
[66.54709625 295.40469360]
[56.78093719 293.47918701]
[47.12374115 291.06591797]
[37.59984970 288.17095947]
[28.23327827 284.80157471]
[19.04763794 280.96630859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[46 62]
[47 61]
[49 60]
[50 59]
[51 58]
[52 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
