%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUCAUGACCGGGGGGGGGGCUUGGCCAUAAUAUGAUUUAUCUCCACACUAGCAGAGACCAACCGAACCCxxxxxxxxxxACUAGAAAAGCUAUUACCUAAAACAAUUUCACAGCACCAAAUCUCCACCUCCCCCCCCCCCCAUCAUCACC\
) } def
/len { sequence length } bind def

/coor [
[72.07518005 370.81851196]
[58.58629608 364.08697510]
[47.10079575 354.32241821]
[38.28642654 342.09252930]
[32.65564728 328.10833740]
[30.53581810 313.18286133]
[32.05018616 298.18383789]
[37.11071014 283.98333740]
[45.42317581 271.40692139]
[56.50430679 261.18576050]
[69.70986176 253.91412354]
[84.27208710 250.01475525]
[83.96411133 235.01791382]
[83.65612793 220.02107239]
[83.34815216 205.02424622]
[83.04017639 190.02740479]
[82.73220062 175.03056335]
[82.42421722 160.03372192]
[82.11624146 145.03689575]
[81.80826569 130.04005432]
[70.93295288 119.70914459]
[55.94006348 120.17107391]
[40.94717789 120.63300323]
[25.98589897 121.71006775]
[11.08145046 123.40046692]
[-3.82299709 125.09086609]
[-13.65746021 137.17063904]
[-28.79677010 138.67262268]
[-40.25238800 129.22253418]
[-55.15683365 130.91291809]
[-70.06127930 132.60331726]
[-84.96572876 134.29371643]
[-94.61317444 146.81179810]
[-110.29708099 148.75875854]
[-122.71246338 138.97950745]
[-124.49349976 123.27590179]
[-114.58352661 110.96459961]
[-98.86196136 109.34969330]
[-86.65612793 119.38927460]
[-71.75167847 117.69887543]
[-56.84723282 116.00847626]
[-41.94278336 114.31807709]
[-32.89448929 102.54251099]
[-17.80334091 100.61589050]
[-5.51339436 110.18641663]
[9.39105320 108.49601746]
[24.29549980 106.80561829]
[26.15683365 104.63157654]
[29.01789474 103.08769989]
[32.63414764 102.56861877]
[36.61932755 103.36980438]
[40.48525238 105.64011383]
[55.47813797 105.17818451]
[70.47102356 104.71626282]
[82.15888977 79.96143341]
[106.43443298 77.13117981]
[114.84783936 64.71286011]
[123.26125336 52.29454803]
[131.67466736 39.87623596]
[120.11685944 30.29642868]
[109.53760529 19.64584351]
[100.03568268 8.02392387]
[91.69981384 -4.46081829]
[84.60782623 -17.69181252]
[78.82594299 -31.54552269]
[74.40813446 -45.89259720]
[71.39566803 -60.59907532]
[69.81665802 -75.52764893]
[69.68585205 -90.53892517]
[71.00447083 -105.49274445]
[73.76020813 -120.24948883]
[77.92732239 -134.67137146]
[83.46691132 -148.62373352]
[90.32725525 -161.97630310]
[98.44429779 -174.60441589]
[107.74224854 -186.39015198]
[118.13429260 -197.22348022]
[129.52340698 -207.00323486]
[141.80323792 -215.63812256]
[154.85913086 -223.04750061]
[168.56919861 -229.16220093]
[182.80543518 -233.92512512]
[197.43489075 -237.29180908]
[212.32098389 -239.23080444]
[227.32472229 -239.72401428]
[242.30601501 -238.76684570]
[257.12500000 -236.36820984]
[271.64328003 -232.55053711]
[285.72534180 -227.34942627]
[299.23965454 -220.81349182]
[312.06008911 -213.00372314]
[324.06686401 -203.99304199]
[335.14794922 -193.86560059]
[345.19985962 -182.71594238]
[354.12872314 -170.64817810]
[361.85116577 -157.77497864]
[368.29513550 -144.21655273]
[373.40039062 -130.09947205]
[377.11932373 -115.55557251]
[379.41717529 -100.72063446]
[380.27252197 -85.73317719]
[379.67733765 -70.73313141]
[377.63720703 -55.86056137]
[374.17117310 -41.25432587]
[369.31161499 -27.05080223]
[363.10388184 -13.38260937]
[355.60592651 -0.37736592]
[346.88778687 11.84349728]
[337.03085327 23.16587639]
[326.12713623 33.48405075]
[314.27847290 42.70168686]
[301.59548950 50.73271561]
[288.19659424 57.50215149]
[274.20690918 62.94678879]
[259.75704956 67.01579285]
[244.98191833 69.67116547]
[230.01947021 70.88812256]
[215.00942993 70.65529633]
[200.09193420 68.97486877]
[185.40628052 65.86251068]
[171.08955383 61.34730530]
[157.27546692 55.47139359]
[144.09297180 48.28964615]
[135.67956543 60.70795822]
[127.26615143 73.12627411]
[118.85274506 85.54458618]
[123.91306305 93.49822998]
[125.61004639 103.17092896]
[123.39144897 113.14115143]
[117.30333710 121.82803345]
[108.02571106 127.74121094]
[96.80509949 129.73207092]
[97.11308289 144.72891235]
[97.42105865 159.72575378]
[97.72903442 174.72257996]
[98.03701019 189.71942139]
[98.34499359 204.71626282]
[98.65296936 219.71310425]
[98.96094513 234.70994568]
[99.26892090 249.70677185]
[113.97895813 253.00500488]
[127.47191620 259.72836304]
[138.96333313 269.48596191]
[147.78511047 281.71051025]
[153.42437744 295.69128418]
[155.55325317 310.61547852]
[154.04797363 325.61538696]
[148.99606323 339.81896973]
[140.69122314 352.40042114]
[129.61628723 362.62829590]
[116.41515350 369.90792847]
[101.85529327 373.81613159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 54]
[22 53]
[23 52]
[24 47]
[25 46]
[26 45]
[29 42]
[30 41]
[31 40]
[32 39]
[56 126]
[57 125]
[58 124]
[59 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
