%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCACCCCAUGGGGGGGGGGAAACAAAUAGGUUUGGUCCUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACxxxxxxxxxxUCUCCUUCAUAAAUUAUUCAGCUUCCUACACUAUUAAAGUUUACCACAACCCCCCCCCCCCACCACCCCAU\
) } def
/len { sequence length } bind def

/coor [
[84.89160156 361.95794678]
[70.86965942 356.40493774]
[58.66970062 347.53860474]
[49.05862808 335.91629028]
[42.64060211 322.26858521]
[39.81906509 307.45339966]
[40.77138138 292.40200806]
[45.43768692 278.06060791]
[53.52465439 265.33062744]
[64.52392578 255.01235962]
[77.74408722 247.75439453]
[92.35410309 244.01295471]
[92.35410309 229.01295471]
[92.35410309 214.01295471]
[92.35410309 199.01295471]
[92.35410309 184.01295471]
[92.35410309 169.01295471]
[92.35410309 154.01295471]
[92.35410309 139.01295471]
[92.35410309 124.01295471]
[92.35410309 109.01295471]
[83.02104187 120.75578308]
[69.11736298 126.38496399]
[54.24363708 124.44273376]
[42.25165176 115.43205261]
[36.24692154 101.68639374]
[37.78446198 86.76540375]
[46.46611023 74.53311157]
[60.04360962 68.15725708]
[75.00085449 69.28897858]
[87.46443176 77.63518524]
[94.20649719 91.03353882]
[97.26489258 76.34864044]
[100.32328796 61.66374588]
[103.23075867 46.94822311]
[105.98699951 32.20362854]
[108.74324036 17.45903015]
[111.49948883 2.71443439]
[96.98577881 -1.10001075]
[82.78514862 -5.95179462]
[68.97162628 -11.81562138]
[55.61724091 -18.66091919]
[42.79161072 -26.45200157]
[30.56160355 -35.14824677]
[18.99098206 -44.70431900]
[8.14007092 -55.07039261]
[-1.93455744 -66.19242859]
[-11.18037796 -78.01242828]
[-19.54918861 -90.46878815]
[-26.99735451 -103.49655151]
[-33.48604584 -117.02779388]
[-38.98143387 -130.99197388]
[-43.45486832 -145.31629944]
[-46.88302231 -159.92607117]
[-49.24802780 -174.74513245]
[-50.53755188 -189.69621277]
[-50.74487686 -204.70137024]
[-49.86891174 -219.68237305]
[-47.91423035 -234.56112671]
[-44.89102554 -249.26002502]
[-40.81505203 -263.70248413]
[-35.70756531 -277.81317139]
[-29.59519386 -291.51849365]
[-22.50980186 -304.74707031]
[-14.48833275 -317.42990112]
[-5.57260513 -329.50082397]
[4.19089699 -340.89697266]
[14.75127125 -351.55886841]
[26.05345917 -361.43096924]
[38.03853607 -370.46179199]
[50.64402008 -378.60424805]
[63.80418396 -385.81588745]
[77.45042419 -392.05911255]
[91.51158905 -397.30136108]
[105.91437531 -401.51535034]
[120.58368683 -404.67904663]
[135.44303894 -406.77603149]
[150.41497803 -407.79528809]
[165.42143250 -407.73153687]
[180.38417053 -406.58514404]
[195.22517395 -404.36203003]
[209.86708069 -401.07382202]
[224.23355103 -396.73764038]
[238.24967957 -391.37612915]
[251.84239197 -385.01721191]
[264.94082642 -377.69403076]
[277.47668457 -369.44479370]
[289.38461304 -360.31250000]
[300.60253906 -350.34475708]
[311.07196045 -339.59350586]
[320.73831177 -328.11486816]
[329.55117798 -315.96862793]
[337.46463013 -303.21813965]
[344.43737793 -289.92984009]
[350.43310547 -276.17306519]
[355.42056274 -262.01950073]
[359.37368774 -247.54296875]
[362.27194214 -232.81890869]
[364.10015869 -217.92408752]
[364.84881592 -202.93618774]
[364.51403809 -187.93333435]
[363.09756470 -172.99374390]
[360.60675049 -158.19531250]
[357.05462646 -143.61518860]
[352.45968628 -129.32937622]
[346.84585571 -115.41238403]
[340.24246216 -101.93674469]
[332.68389893 -88.97271729]
[324.20959473 -76.58790588]
[314.86367798 -64.84686279]
[304.69494629 -53.81081009]
[293.75637817 -43.53728485]
[282.10498047 -34.07984543]
[269.80154419 -25.48780441]
[256.91021729 -17.80595207]
[243.49815369 -11.07434082]
[229.63533020 -5.32806587]
[215.39399719 -0.59708613]
[200.84840393 3.09393311]
[186.07440186 5.72574854]
[171.14898682 7.28463840]
[156.15000916 7.76247597]
[141.15565491 7.15676975]
[126.24407959 5.47067738]
[123.48783875 20.21527290]
[120.73159790 34.95986938]
[117.97535706 49.70446777]
[119.84933472 56.90171432]
[115.00818634 64.72214508]
[111.94979095 79.40703583]
[108.89139557 94.09193420]
[107.35410309 109.01295471]
[107.35410309 124.01295471]
[107.35410309 139.01295471]
[107.35410309 154.01295471]
[107.35410309 169.01295471]
[107.35410309 184.01295471]
[107.35410309 199.01295471]
[107.35410309 214.01295471]
[107.35410309 229.01295471]
[107.35410309 244.01295471]
[121.96411133 247.75439453]
[135.18426514 255.01235962]
[146.18354797 265.33062744]
[154.27050781 278.06060791]
[158.93681335 292.40200806]
[159.88912964 307.45339966]
[157.06759644 322.26858521]
[150.64956665 335.91629028]
[141.03849792 347.53860474]
[128.83854675 356.40493774]
[114.81659698 361.95794678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[32 131]
[33 130]
[34 129]
[35 127]
[36 126]
[37 125]
[38 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
