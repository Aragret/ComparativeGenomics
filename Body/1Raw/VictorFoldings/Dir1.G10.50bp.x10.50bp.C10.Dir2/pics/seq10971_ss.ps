%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACCACACCGGGGGGGGGGUAGCAUUCCUGCACAUCUGUACCCACGCCUUCUUCAAAGCCAUACUAUUUxxxxxxxxxxAAACUAUUAAACCCAUAUAACCUCCCCCAAAAUUCAGAAUAAUAACACACCCCCCCCCCCCCGACCACACC\
) } def
/len { sequence length } bind def

/coor [
[84.28166962 414.61572266]
[70.79278564 407.88418579]
[59.30728531 398.11959839]
[50.49291611 385.88970947]
[44.86213684 371.90551758]
[42.74230576 356.98004150]
[44.25667572 341.98104858]
[49.31719971 327.78051758]
[57.62966537 315.20410156]
[68.71079254 304.98297119]
[81.91635132 297.71130371]
[96.47857666 293.81195068]
[96.17059326 278.81512451]
[95.86261749 263.81826782]
[95.55464172 248.82144165]
[95.24666595 233.82460022]
[94.93868256 218.82775879]
[94.63070679 203.83091736]
[94.32273102 188.83409119]
[94.01475525 173.83724976]
[93.70677185 158.84040833]
[93.39879608 143.84356689]
[75.89012909 137.20951843]
[62.68093491 123.93996429]
[48.86735153 129.78675842]
[35.05376816 135.63354492]
[25.60824966 149.03929138]
[9.30236340 147.29283142]
[2.91020751 132.19076538]
[13.00748348 119.26880646]
[29.20697975 121.81995392]
[43.02056122 115.97316742]
[56.83414459 110.12638092]
[56.48365784 91.50513458]
[63.81167984 74.38282013]
[77.52516937 61.78067780]
[95.20436096 55.92238235]
[96.12777710 40.95083237]
[97.05119324 25.97928047]
[97.97460175 11.00773144]
[83.11975098 8.86619949]
[68.48888397 5.52097607]
[54.17936707 0.99432349]
[40.28643417 -4.68363333]
[26.90253830 -11.47510815]
[14.11674976 -19.33490562]
[2.01415634 -28.21071625]
[-9.32470036 -38.04347229]
[-19.82435989 -48.76774216]
[-29.41494942 -60.31215286]
[-38.03264236 -72.59987640]
[-45.62009048 -85.54914093]
[-52.12679672 -99.07376862]
[-57.50946045 -113.08375549]
[-61.73226547 -127.48586273]
[-64.76710510 -142.18424988]
[-66.59378052 -157.08110046]
[-67.20013428 -172.07727051]
[-66.58213806 -187.07296753]
[-64.74389648 -201.96838379]
[-61.69765472 -216.66441345]
[-57.46367264 -231.06324768]
[-52.07013702 -245.06904602]
[-45.55293274 -258.58862305]
[-37.95543671 -271.53198242]
[-29.32820892 -283.81301880]
[-19.72866249 -295.34997559]
[-9.22068119 -306.06610107]
[2.12580347 -315.89004517]
[14.23528290 -324.75646973]
[27.02716827 -332.60632324]
[40.41633224 -339.38742065]
[54.31366730 -345.05459595]
[68.62669373 -349.57012939]
[83.26015472 -352.90399170]
[98.11666107 -355.03399658]
[113.09735107 -355.94595337]
[128.10253906 -355.63381958]
[143.03233337 -354.09963989]
[157.78741455 -351.35363770]
[172.26956177 -347.41409302]
[186.38241577 -342.30722046]
[200.03204346 -336.06698608]
[213.12762451 -328.73495483]
[225.58198547 -320.35989380]
[237.31225586 -310.99755859]
[248.24037170 -300.71023560]
[258.29360962 -289.56637573]
[267.40505981 -277.64016724]
[275.51409912 -265.01098633]
[282.56674194 -251.76286316]
[288.51605225 -237.98394775]
[293.32247925 -223.76596069]
[296.95397949 -209.20350647]
[299.38641357 -194.39350891]
[300.60360718 -179.43452454]
[300.59744263 -164.42610168]
[299.36795044 -149.46812439]
[296.92333984 -134.66012573]
[293.27984619 -120.10066986]
[288.46176147 -105.88663483]
[282.50112915 -92.11261749]
[275.43759155 -78.87029266]
[267.31817627 -66.24777222]
[258.19692993 -54.32906342]
[248.13453674 -43.19348526]
[237.19796753 -32.91514969]
[225.46000671 -23.56244850]
[212.99876404 -15.19763088]
[199.89715576 -7.87636137]
[186.24240112 -1.64736187]
[172.12536621 3.44791317]
[157.63996887 7.37555504]
[142.88264465 10.10942554]
[127.95158386 11.63133240]
[112.94615173 11.93114471]
[112.02274323 26.90269470]
[111.09932709 41.87424469]
[110.17591095 56.84579468]
[120.42710114 60.64814758]
[129.43609619 66.84353638]
[136.65504456 75.05520630]
[141.64495850 84.78380585]
[144.10238647 95.43771362]
[143.87789917 106.36906433]
[140.98513794 116.91310120]
[135.60002136 126.42863464]
[128.05003357 134.33700562]
[118.79428864 140.15730286]
[108.39563751 143.53559875]
[108.70361328 158.53242493]
[109.01158905 173.52926636]
[109.31957245 188.52610779]
[109.62754822 203.52294922]
[109.93552399 218.51979065]
[110.24349976 233.51661682]
[110.55147552 248.51345825]
[110.85945892 263.51028442]
[111.16743469 278.50714111]
[111.47541046 293.50396729]
[126.18544769 296.80218506]
[139.67840576 303.52554321]
[151.16983032 313.28314209]
[159.99160767 325.50769043]
[165.63085938 339.48849487]
[167.75973511 354.41265869]
[166.25447083 369.41259766]
[161.20256042 383.61614990]
[152.89772034 396.19763184]
[141.82278442 406.42550659]
[128.62164307 413.70513916]
[114.06178284 417.61334229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[24 33]
[25 32]
[26 31]
[37 119]
[38 118]
[39 117]
[40 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
