%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGGUACUGGGGGGGGGGGAACCUACGAGUACACCGACUACGGCGGACUAAUCUUCAACUCCUACAUAxxxxxxxxxxACUCCACUUAUGACUCCCUAAAGCCCAUGUCGAAGCCCCCAUCGCUGGGUCCCCCCCCCCCAAUAGUACU\
) } def
/len { sequence length } bind def

/coor [
[85.72368622 423.45053101]
[71.23399353 419.24206543]
[58.32776260 411.42596436]
[47.88496017 400.53512573]
[40.61759949 387.31210327]
[37.02117157 372.65850830]
[37.34089279 357.57339478]
[41.55496216 343.08535767]
[49.37606049 330.18212891]
[60.27092743 319.74353027]
[73.49673462 312.48129272]
[88.15173340 308.89050293]
[88.46378326 293.89376831]
[88.77584076 278.89700317]
[89.08789825 263.90023804]
[89.39995575 248.90348816]
[89.71201324 233.90673828]
[90.02407074 218.90998840]
[90.33612061 203.91323853]
[90.64817810 188.91648865]
[90.96023560 173.91972351]
[91.27229309 158.92297363]
[83.80144501 146.03749084]
[91.82416534 132.40127563]
[92.13621521 117.40451813]
[82.18195343 106.87556458]
[82.48339081 92.38918304]
[92.86702728 82.28342438]
[93.17908478 67.28667450]
[93.49114227 52.28992081]
[77.30197144 45.65159988]
[64.89817047 33.36019516]
[58.13990402 17.29663467]
[58.02631760 -0.09533978]
[64.54790497 -16.18094254]
[76.69197845 -28.53349304]
[92.59986115 -35.30050278]
[91.97588348 -50.28752136]
[91.35190582 -65.27453613]
[90.72792816 -80.26155090]
[77.97259521 -88.89913177]
[72.80949402 -103.22378540]
[77.02146912 -117.67104340]
[88.79202271 -126.75905609]
[88.16804504 -141.74607849]
[87.54406738 -156.73309326]
[72.56252289 -157.73336792]
[57.77695847 -160.34759521]
[43.36071777 -164.54513550]
[29.48283195 -170.27674866]
[16.30600739 -177.47526550]
[3.98474026 -186.05627441]
[-7.33651209 -195.91915894]
[-17.52501297 -206.94828796]
[-26.46130753 -219.01434326]
[-34.04062271 -231.97587585]
[-40.17409134 -245.68090820]
[-44.78981018 -259.96875000]
[-47.83365250 -274.67187500]
[-49.26993561 -289.61791992]
[-49.08182144 -304.63165283]
[-47.27151108 -319.53701782]
[-43.86023331 -334.15927124]
[-38.88798141 -348.32699585]
[-32.41305161 -361.87402344]
[-24.51136398 -374.64160156]
[-15.27555752 -386.47998047]
[-4.81391811 -397.25036621]
[6.75089645 -406.82647705]
[19.28329468 -415.09609985]
[32.63634109 -421.96218872]
[46.65348053 -427.34429932]
[61.17036057 -431.17932129]
[76.01679230 -433.42227173]
[91.01869202 -434.04687500]
[106.00018311 -433.04577637]
[120.78561401 -430.43075562]
[135.20162964 -426.23245239]
[149.07920837 -420.50009155]
[162.25564575 -413.30084229]
[174.57644653 -404.71917725]
[185.89717102 -394.85571289]
[196.08506775 -383.82601929]
[205.02072144 -371.75949097]
[212.59933472 -358.79754639]
[218.73207092 -345.09219360]
[223.34701538 -330.80410767]
[226.39007568 -316.10079956]
[227.82554626 -301.15466309]
[227.63662720 -286.14096069]
[225.82551575 -271.23568726]
[222.41345215 -256.61361694]
[217.44042969 -242.44616699]
[210.96478271 -228.89947510]
[203.06240845 -216.13233948]
[193.82595825 -204.29446411]
[183.36373901 -193.52462769]
[171.79841614 -183.94911194]
[159.26556396 -175.68019104]
[145.91215515 -168.81481934]
[131.89472961 -163.43345642]
[117.37763214 -159.59922791]
[102.53108978 -157.35707092]
[103.15505981 -142.37005615]
[103.77903748 -127.38303375]
[116.26430511 -119.30490112]
[121.66262817 -105.25776672]
[117.70812988 -90.55350494]
[105.71494293 -80.88552856]
[106.33892059 -65.89851379]
[106.96289825 -50.91149902]
[107.58687592 -35.92448044]
[119.82444000 -32.58165741]
[130.63261414 -25.90540886]
[139.12385559 -16.43202591]
[144.59750366 -4.92797565]
[146.59759521 7.67210674]
[144.95082092 20.34134865]
[139.78152466 32.04433060]
[131.50234985 41.82169724]
[120.78130341 48.86881638]
[108.48789215 52.60197449]
[108.17583466 67.59873199]
[107.86378479 82.59548187]
[117.81804657 93.12443542]
[117.51660919 107.61081696]
[107.13297272 117.71657562]
[106.82091522 132.71333313]
[114.26944733 146.67147827]
[106.26904297 159.23503113]
[105.95699310 174.23178101]
[105.64493561 189.22853088]
[105.33287811 204.22529602]
[105.02082062 219.22204590]
[104.70876312 234.21879578]
[104.39670563 249.21554565]
[104.08465576 264.21231079]
[103.77259827 279.20904541]
[103.46054077 294.20581055]
[103.14848328 309.20257568]
[117.64141846 313.39984131]
[130.55368042 321.20599365]
[141.00488281 332.08877563]
[148.28245544 345.30615234]
[151.89019775 359.95697021]
[151.58213806 375.04232788]
[147.37925720 389.53363037]
[139.56811523 402.44287109]
[128.68132019 412.88989258]
[115.46112061 420.16235352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[24 128]
[25 127]
[28 124]
[29 123]
[30 122]
[37 112]
[38 111]
[39 110]
[40 109]
[44 105]
[45 104]
[46 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
