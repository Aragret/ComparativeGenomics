%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCAAUCAAUACUCAGGGGGGGGGGUCAUUAAUAAUCAUAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUxxxxxxxxxxCCAUAUAACCUCCCCCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCCCCCCCCCCCUAACAAUCAAUACUAA\
) } def
/len { sequence length } bind def

/coor [
[85.07248688 187.06051636]
[70.57437897 183.28562927]
[56.92273712 177.11494446]
[44.51026535 168.72593689]
[33.69402695 158.35993958]
[24.78516579 146.31515503]
[18.03995132 132.93804932]
[13.65242100 118.61343384]
[11.74878788 103.75338745]
[12.38381100 88.78536987]
[15.53922462 74.13995361]
[21.12425804 60.23843765]
[28.97825241 47.48070908]
[38.87527466 36.23376846]
[50.53062820 26.82113838]
[63.60903168 19.51359367]
[77.73426056 14.52133942]
[92.50000000 11.98798752]
[92.50000000 -3.01201272]
[92.50000000 -18.01201248]
[92.50000000 -33.01201248]
[92.50000000 -48.01201248]
[92.50000000 -63.01201248]
[92.50000000 -78.01201630]
[92.50000000 -93.01201630]
[92.50000000 -108.01201630]
[92.50000000 -123.01201630]
[77.51963043 -123.85317993]
[62.60999298 -125.53298950]
[47.81799698 -128.04614258]
[33.19018936 -131.38473511]
[18.77258873 -135.53826904]
[4.61056042 -140.49366760]
[-9.25133514 -146.23535156]
[-22.76948547 -152.74523926]
[-35.90135193 -160.00286865]
[-48.60562515 -167.98538208]
[-60.84232712 -176.66767883]
[-72.57295227 -186.02243042]
[-83.76060486 -196.02020264]
[-94.37007141 -206.62954712]
[-104.36797333 -217.81709290]
[-113.72285461 -229.54760742]
[-122.40528107 -241.78421021]
[-130.38793945 -254.48840332]
[-137.64570618 -267.62017822]
[-144.15574646 -281.13827515]
[-149.89758301 -295.00009155]
[-154.85314941 -309.16207886]
[-159.00683594 -323.57962036]
[-162.34559631 -338.20739746]
[-164.85891724 -352.99935913]
[-166.53887939 -367.90896606]
[-167.38021851 -382.88934326]
[-167.38027954 -397.89331055]
[-166.53904724 -412.87368774]
[-164.85919189 -427.78329468]
[-162.34597778 -442.57528687]
[-159.00732422 -457.20309448]
[-154.85374451 -471.62066650]
[-149.89828491 -485.78268433]
[-144.15655518 -499.64456177]
[-137.64662170 -513.16265869]
[-130.38894653 -526.29455566]
[-122.40638733 -538.99877930]
[-113.72404480 -551.23541260]
[-104.36925507 -562.96600342]
[-94.37142944 -574.15362549]
[-83.76204681 -584.76306152]
[-72.57447052 -594.76092529]
[-60.84391022 -604.11578369]
[-48.60727310 -612.79815674]
[-35.90306473 -620.78076172]
[-22.77124786 -628.03845215]
[-9.25314713 -634.54846191]
[4.60870600 -640.29028320]
[18.77069664 -645.24578857]
[33.18826675 -649.39941406]
[47.81605148 -652.73809814]
[62.60802841 -655.25134277]
[77.51765442 -656.93127441]
[92.49801636 -657.77258301]
[107.50198364 -657.77258301]
[122.48234558 -656.93127441]
[137.39196777 -655.25134277]
[152.18394470 -652.73809814]
[166.81173706 -649.39941406]
[181.22930908 -645.24578857]
[195.39129639 -640.29028320]
[209.25314331 -634.54846191]
[222.77124023 -628.03845215]
[235.90306091 -620.78076172]
[248.60726929 -612.79815674]
[260.84390259 -604.11578369]
[272.57446289 -594.76092529]
[283.76205444 -584.76306152]
[294.37142944 -574.15362549]
[304.36926270 -562.96600342]
[313.72406006 -551.23541260]
[322.40637207 -538.99877930]
[330.38894653 -526.29455566]
[337.64660645 -513.16265869]
[344.15655518 -499.64456177]
[349.89828491 -485.78268433]
[354.85375977 -471.62066650]
[359.00732422 -457.20309448]
[362.34597778 -442.57528687]
[364.85919189 -427.78329468]
[366.53906250 -412.87368774]
[367.38027954 -397.89331055]
[367.38021851 -382.88934326]
[366.53887939 -367.90896606]
[364.85891724 -352.99935913]
[362.34558105 -338.20739746]
[359.00683594 -323.57962036]
[354.85314941 -309.16207886]
[349.89758301 -295.00009155]
[344.15576172 -281.13827515]
[337.64569092 -267.62017822]
[330.38793945 -254.48840332]
[322.40527344 -241.78421021]
[313.72283936 -229.54760742]
[304.36798096 -217.81709290]
[294.37005615 -206.62954712]
[283.76058960 -196.02020264]
[272.57296753 -186.02243042]
[260.84231567 -176.66767883]
[248.60562134 -167.98538208]
[235.90135193 -160.00286865]
[222.76948547 -152.74523926]
[209.25134277 -146.23535156]
[195.38943481 -140.49366760]
[181.22741699 -135.53826904]
[166.80981445 -131.38473511]
[152.18200684 -128.04614258]
[137.39001465 -125.53298950]
[122.48036957 -123.85317993]
[107.50000000 -123.01201630]
[107.50000000 -108.01201630]
[107.50000000 -93.01201630]
[107.50000000 -78.01201630]
[107.50000000 -63.01201248]
[107.50000000 -48.01201248]
[107.50000000 -33.01201248]
[107.50000000 -18.01201248]
[107.50000000 -3.01201272]
[107.50000000 11.98798752]
[122.26573944 14.52133942]
[136.39097595 19.51359367]
[149.46937561 26.82113838]
[161.12472534 36.23376846]
[171.02174377 47.48070908]
[178.87574768 60.23843765]
[184.46076965 74.13995361]
[187.61619568 88.78536987]
[188.25120544 103.75338745]
[186.34757996 118.61343384]
[181.96005249 132.93804932]
[175.21482849 146.31515503]
[166.30596924 158.35993958]
[155.48973083 168.72593689]
[143.07727051 177.11494446]
[129.42562866 183.28562927]
[114.92751312 187.06051636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 140]
[26 139]
[27 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
