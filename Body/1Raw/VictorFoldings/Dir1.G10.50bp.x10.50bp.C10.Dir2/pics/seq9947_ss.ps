%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACGCCACGGGGGGGGGGUUAUCCAGUGAACCACUAUCACGAAAAAAACUCUACCUCUCUAUACUAAUxxxxxxxxxxACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCCCCCCCCCCCAAAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 375.84072876]
[71.19830322 369.82470703]
[59.48964310 360.29528809]
[50.78712082 347.95962524]
[45.73651886 333.73309326]
[44.71262741 318.67141724]
[47.79142761 303.89224243]
[54.74444962 290.49234009]
[65.05573273 279.46600342]
[77.96011353 271.63146973]
[92.50000000 267.57015991]
[92.50000000 252.57017517]
[92.50000000 237.57017517]
[92.50000000 222.57017517]
[92.50000000 207.57017517]
[92.50000000 192.57017517]
[92.50000000 177.57017517]
[92.50000000 162.57017517]
[92.50000000 147.57017517]
[92.50000000 132.57017517]
[79.12783051 126.10399628]
[69.87802124 114.48214722]
[66.57746124 100.00000000]
[69.87802124 85.51785278]
[79.12783051 73.89600372]
[92.50000000 67.42983246]
[92.50000000 52.42982864]
[92.50000000 37.42982864]
[92.50000000 22.42982864]
[92.34396362 7.43064022]
[92.03190613 -7.56611347]
[77.04419708 -8.31278610]
[62.14649582 -10.11482143]
[47.41301346 -12.96324062]
[32.91716003 -16.84385490]
[18.73115349 -21.73732948]
[4.92566442 -27.61928368]
[-8.43052578 -34.46041870]
[-21.27087784 -42.22664642]
[-33.53141785 -50.87927628]
[-45.15106964 -60.37520599]
[-56.07194138 -70.66712189]
[-66.23962402 -81.70375061]
[-75.60346222 -93.43010712]
[-84.11680603 -105.78777313]
[-91.73723602 -118.71517944]
[-98.42680359 -132.14791870]
[-104.15216827 -146.01908875]
[-108.88480377 -160.25956726]
[-112.60114288 -174.79840088]
[-115.28266144 -189.56317139]
[-116.91600800 -204.48030090]
[-117.49304199 -219.47550964]
[-117.01088715 -234.47404480]
[-115.47194672 -249.40122986]
[-112.88388062 -264.18267822]
[-109.25959778 -278.74472046]
[-104.61714172 -293.01486206]
[-98.97964478 -306.92196655]
[-92.37519836 -320.39675903]
[-84.83669281 -333.37210083]
[-76.40170288 -345.78338623]
[-67.11223602 -357.56875610]
[-57.01457596 -368.66946411]
[-46.15903473 -379.03027344]
[-34.59969330 -388.59951782]
[-22.39413452 -397.32955933]
[-9.60317230 -405.17684937]
[3.70947218 -412.10235596]
[17.47747421 -418.07150269]
[31.63224030 -423.05462646]
[46.10325241 -427.02688599]
[60.81842041 -429.96844482]
[75.70442200 -431.86468506]
[90.68711090 -432.70617676]
[105.69182587 -432.48867798]
[120.64382935 -431.21331787]
[135.46862793 -428.88641357]
[150.09234619 -425.51959229]
[164.44215393 -421.12960815]
[178.44654846 -415.73831177]
[192.03575134 -409.37258911]
[205.14208984 -402.06417847]
[217.70024109 -393.84945679]
[229.64764404 -384.76931763]
[240.92477417 -374.86907959]
[251.47546387 -364.19799805]
[261.24713135 -352.80926514]
[270.19113159 -340.75961304]
[278.26284790 -328.10906982]
[285.42211914 -314.92068481]
[291.63323975 -301.26013184]
[296.86529541 -287.19546509]
[301.09222412 -272.79678345]
[304.29290771 -258.13580322]
[306.45147705 -243.28556824]
[307.55712891 -228.32005310]
[307.60437012 -213.31382751]
[306.59298706 -198.34165955]
[304.52798462 -183.47811890]
[301.41964722 -168.79727173]
[297.28347778 -154.37226868]
[292.14010620 -140.27493286]
[286.01510620 -126.57554626]
[278.93902588 -113.34233093]
[270.94711304 -100.64122009]
[262.07916260 -88.53549194]
[252.37940979 -77.08545685]
[241.89611816 -66.34815216]
[230.68153381 -56.37708664]
[218.79154968 -47.22192383]
[206.28536987 -38.92827988]
[193.22532654 -31.53747177]
[179.67646790 -25.08631897]
[165.70629883 -19.60696411]
[151.38441467 -15.12670422]
[136.78218079 -11.66785908]
[121.97233582 -9.24766159]
[107.02866364 -7.87816954]
[107.34071350 7.11858416]
[110.64566803 13.78363800]
[107.50000000 22.42982864]
[107.50000000 37.42982864]
[107.50000000 52.42982864]
[107.50000000 67.42983246]
[120.87216949 73.89600372]
[130.12197876 85.51785278]
[133.42253113 100.00000000]
[130.12197876 114.48214722]
[120.87216949 126.10399628]
[107.50000000 132.57017517]
[107.50000000 147.57017517]
[107.50000000 162.57017517]
[107.50000000 177.57017517]
[107.50000000 192.57017517]
[107.50000000 207.57017517]
[107.50000000 222.57017517]
[107.50000000 237.57017517]
[107.50000000 252.57017517]
[107.50000000 267.57015991]
[122.03988647 271.63146973]
[134.94427490 279.46600342]
[145.25555420 290.49234009]
[152.20857239 303.89224243]
[155.28736877 318.67141724]
[154.26348877 333.73309326]
[149.21287537 347.95962524]
[140.51036072 360.29528809]
[128.80169678 369.82470703]
[114.95575714 375.84072876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[26 125]
[27 124]
[28 123]
[29 122]
[30 120]
[31 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
