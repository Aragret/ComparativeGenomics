%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUCCUUCUGGGGGGGGGGAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAACCAxxxxxxxxxxUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGACCCCCCCCCCAUAAUUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[72.97941589 492.06686401]
[58.95746994 486.51385498]
[46.75751114 477.64752197]
[37.14643860 466.02520752]
[30.72841454 452.37750244]
[27.90687752 437.56231689]
[28.85919380 422.51095581]
[33.52549744 408.16952515]
[41.61246490 395.43957520]
[52.61174011 385.12130737]
[65.83190155 377.86331177]
[80.44190979 374.12188721]
[80.44190979 359.12188721]
[80.44190979 344.12188721]
[80.44190979 329.12188721]
[80.44190979 314.12188721]
[80.44190979 299.12188721]
[80.44190979 284.12188721]
[80.44190979 269.12188721]
[80.44190979 254.12188721]
[80.44190979 239.12188721]
[65.26265717 231.10446167]
[56.15653992 216.44778442]
[55.68824768 199.11035156]
[64.07516479 183.82810974]
[79.10353851 174.82070923]
[78.48771667 159.83334351]
[77.87188721 144.84599304]
[77.25606537 129.85864258]
[67.38035583 118.56835938]
[52.60824203 115.96363831]
[37.83612442 113.35891724]
[31.14063263 126.89949036]
[20.90052032 138.00430298]
[7.94590855 145.77313232]
[-6.67302990 149.57618713]
[-21.77120399 149.10519409]
[-36.12467194 144.39833069]
[-48.56986237 135.83714294]
[-58.09789658 124.11565399]
[-63.93638611 110.18408203]
[-65.61202240 95.17179108]
[-62.98897934 80.29576111]
[-56.27988815 66.76191711]
[-46.02862549 55.66740417]
[-33.06621552 47.91159058]
[-18.44346237 44.12321472]
[-3.34577036 44.60937500]
[11.00296116 49.33066559]
[23.43954468 57.90435028]
[32.95579910 69.63539886]
[38.78028870 83.57283020]
[40.44084549 98.58679962]
[55.21296310 101.19152069]
[69.98507690 103.79624176]
[72.07752991 86.97304535]
[83.02082062 73.62284088]
[99.69333649 68.07420349]
[100.30915833 53.08684540]
[100.92498779 38.09949493]
[101.54080963 23.11214066]
[86.87830353 19.74680138]
[73.08393097 13.74431705]
[60.62751389 5.30912781]
[49.93332672 -5.27146530]
[41.36560059 -17.63709068]
[35.21615219 -31.36658287]
[31.69442749 -45.99231720]
[30.92037773 -61.01614761]
[32.92036819 -75.92636871]
[37.62627411 -90.21514130]
[44.87781906 -103.39580536]
[54.42801666 -115.01941681]
[65.95159149 -124.69008636]
[79.05605316 -132.07844543]
[93.29506683 -136.93283081]
[108.18366241 -139.08790588]
[123.21473694 -138.47029114]
[137.87634277 -135.10099792]
[151.66909790 -129.09478760]
[164.12322998 -120.65624237]
[174.81457520 -110.07276917]
[183.37896729 -97.70483398]
[189.52470398 -83.97368622]
[193.04249573 -69.34700012]
[193.81248474 -54.32296371]
[191.80848694 -39.41328430]
[187.09872437 -25.12577820]
[179.84362793 -11.94707489]
[170.29029846 -0.32603657]
[158.76411438 9.34152889]
[145.65766907 16.72634697]
[131.41734314 21.57689667]
[116.52816772 23.72796631]
[115.91233826 38.71532059]
[115.29651642 53.70267105]
[114.68068695 68.69002533]
[126.55751038 77.85195923]
[140.89756775 73.45166016]
[155.23764038 69.05136108]
[169.57769775 64.65106201]
[171.82373047 49.55410385]
[180.40476990 36.93156052]
[193.61703491 29.28964806]
[208.83721924 28.14566803]
[223.04335022 33.72676468]
[233.41477966 44.92480087]
[237.89227295 59.51640320]
[235.58680725 74.60440063]
[226.95613098 87.19305420]
[213.71386719 94.78287506]
[198.48930359 95.86691284]
[184.30525208 90.22991180]
[173.97799683 78.99111938]
[159.63793945 83.39141846]
[145.29788208 87.79172516]
[130.95780945 92.19202423]
[131.14590454 105.29402924]
[126.08097076 117.22916412]
[116.72824860 126.00804138]
[104.75703430 130.21652222]
[92.24341583 129.24281311]
[92.85924530 144.23016357]
[93.47506714 159.21752930]
[94.09089661 174.20487976]
[106.10849762 179.11584473]
[115.32740784 188.18984985]
[120.39132690 200.04193115]
[120.57426453 212.88232422]
[115.88440704 224.78665161]
[107.05754852 233.98431396]
[95.44190979 239.12188721]
[95.44190979 254.12188721]
[95.44190979 269.12188721]
[95.44190979 284.12188721]
[95.44190979 299.12188721]
[95.44190979 314.12188721]
[95.44190979 329.12188721]
[95.44190979 344.12188721]
[95.44190979 359.12188721]
[95.44190979 374.12188721]
[110.05192566 377.86331177]
[123.27207947 385.12130737]
[134.27136230 395.43957520]
[142.35832214 408.16952515]
[147.02462769 422.51095581]
[147.97694397 437.56231689]
[145.15541077 452.37750244]
[138.73738098 466.02520752]
[129.12631226 477.64752197]
[116.92635345 486.51385498]
[102.90441132 492.06686401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[26 125]
[27 124]
[28 123]
[29 122]
[30 55]
[31 54]
[32 53]
[58 97]
[59 96]
[60 95]
[61 94]
[98 117]
[99 116]
[100 115]
[101 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
