%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUAAUCAUGGGGGGGGGGUUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCUCACUCAUUUACACxxxxxxxxxxUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCAACGCCCCCCCCCCCCCAUAAUCAU\
) } def
/len { sequence length } bind def

/coor [
[81.42462921 380.04232788]
[68.20443726 372.76983643]
[57.31763077 362.32284546]
[49.50650024 349.41360474]
[45.30361938 334.92227173]
[44.99554825 319.83694458]
[48.60328674 305.18612671]
[55.88085938 291.96871948]
[66.33206940 281.08596802]
[79.24433136 273.27981567]
[93.73726654 269.08251953]
[93.42520905 254.08576965]
[93.11315155 239.08901978]
[92.80110168 224.09226990]
[92.48904419 209.09552002]
[92.17698669 194.09875488]
[91.86492920 179.10200500]
[91.55287170 164.10525513]
[91.24081421 149.10850525]
[90.92876434 134.11174011]
[90.61670685 119.11499023]
[85.37747192 111.61421967]
[84.36189270 103.62870026]
[86.87646484 97.13108826]
[91.44730377 93.38340759]
[83.72322083 80.52500916]
[75.99913788 67.66660309]
[68.27505493 54.80820084]
[54.76704407 61.35342407]
[40.72669983 66.66143799]
[26.26706696 70.68949890]
[11.50457096 73.40518188]
[-3.44192910 74.78662109]
[-18.45209122 74.82269287]
[-33.40505600 73.51309967]
[-48.18043518 70.86840057]
[-62.65925980 66.90987396]
[-76.72495270 61.66940308]
[-90.26425934 55.18917847]
[-103.16817474 47.52137375]
[-115.33280182 38.72772980]
[-126.66018677 28.87904739]
[-137.05912781 18.05462456]
[-146.44592285 6.34161615]
[-154.74494934 -6.16567183]
[-161.88941956 -19.36653519]
[-167.82180786 -33.15468597]
[-172.49432373 -47.41910934]
[-175.86936951 -62.04495239]
[-177.91976929 -76.91445160]
[-178.62901306 -91.90789032]
[-177.99137878 -106.90454865]
[-176.01202393 -121.78367615]
[-172.70684814 -136.42546082]
[-168.10250854 -150.71203613]
[-162.23603821 -164.52836609]
[-155.15469360 -177.76319885]
[-146.91548157 -190.30996704]
[-137.58473206 -202.06767273]
[-127.23760223 -212.94163513]
[-115.95737457 -222.84429932]
[-103.83488464 -231.69593811]
[-90.96773529 -239.42527771]
[-77.45952606 -245.97009277]
[-63.41902161 -251.27766418]
[-48.95926666 -255.30529785]
[-34.19668579 -258.02053833]
[-19.25014496 -259.40151978]
[-4.23998165 -259.43713379]
[10.71294498 -258.12707520]
[25.48824310 -255.48191833]
[39.96694565 -251.52294922]
[54.03247833 -246.28205872]
[67.57158661 -239.80140686]
[80.47527313 -232.13320923]
[92.63962555 -223.33920288]
[103.96671295 -213.49017334]
[114.36532593 -202.66543579]
[123.75175476 -190.95213318]
[132.05039978 -178.44459534]
[139.19447327 -165.24351501]
[145.12643433 -151.45518494]
[149.79852295 -137.19061279]
[153.17312622 -122.56466675]
[155.22306824 -107.69510651]
[155.93185425 -92.70164490]
[155.29376221 -77.70500946]
[153.31394958 -62.82594299]
[150.00833130 -48.18424988]
[145.40354919 -33.89781570]
[139.53665161 -20.08167267]
[132.45491028 -6.84705687]
[124.21530914 5.69946909]
[114.88420868 17.45688629]
[104.53674316 28.33053017]
[93.25621796 38.23284912]
[81.13345337 47.08411789]
[88.85753632 59.94252014]
[96.58162689 72.80091858]
[104.30570984 85.65932465]
[117.16410828 93.38340759]
[132.14382935 94.16325378]
[147.12353516 94.94309998]
[154.14117432 82.80230713]
[165.65818787 74.91881561]
[179.38465881 72.79074097]
[192.62113953 76.77866364]
[202.78944397 86.04605103]
[207.93493652 98.73397827]
[222.89518738 99.82528687]
[237.85543823 100.91659546]
[252.81567383 102.00791168]
[265.84631348 92.64936829]
[281.24786377 97.14067841]
[287.20556641 112.03649139]
[279.14920044 125.91001129]
[263.25891113 128.11866760]
[251.72436523 116.96815491]
[236.76411438 115.87684631]
[221.80387878 114.78553772]
[206.84362793 113.69422913]
[198.12214661 127.26210785]
[183.67367554 134.63937378]
[167.38209534 133.73710632]
[153.68020630 124.70639801]
[146.34368896 109.92281342]
[131.36398315 109.14296722]
[116.38426971 108.36312103]
[105.61345673 118.80293274]
[105.92551422 133.79968262]
[106.23757172 148.79644775]
[106.54962921 163.79319763]
[106.86168671 178.78994751]
[107.17373657 193.78669739]
[107.48579407 208.78346252]
[107.79785156 223.78021240]
[108.10990906 238.77696228]
[108.42196655 253.77371216]
[108.73402405 268.77047729]
[123.38901520 272.36123657]
[136.61482239 279.62350464]
[147.50968933 290.06210327]
[155.33078003 302.96530151]
[159.54486084 317.45336914]
[159.86457825 332.53845215]
[156.26815796 347.19207764]
[149.00079346 360.41506958]
[138.55798340 371.30590820]
[125.65175629 379.12203979]
[111.16206360 383.33050537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[25 100]
[26 99]
[27 98]
[28 97]
[101 128]
[102 127]
[103 126]
[109 121]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
