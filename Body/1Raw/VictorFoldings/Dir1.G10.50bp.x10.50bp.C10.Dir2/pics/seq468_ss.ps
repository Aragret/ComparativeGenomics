%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCAGCCUGGGGGGGGGGAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACxxxxxxxxxxAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCUUGUAGUAUAAACUAAUCCCCCCCCCCACACCAGUCU\
) } def
/len { sequence length } bind def

/coor [
[83.72592926 441.43319702]
[69.87998962 435.41717529]
[58.17132568 425.88775635]
[49.46880341 413.55209351]
[44.41820145 399.32556152]
[43.39431000 384.26388550]
[46.47310638 369.48471069]
[53.42612839 356.08477783]
[63.73741531 345.05847168]
[76.64179230 337.22393799]
[91.18167877 333.16262817]
[91.18167877 318.16262817]
[91.18167877 303.16262817]
[91.18167877 288.16262817]
[91.18167877 273.16262817]
[91.18167877 258.16262817]
[91.18167877 243.16264343]
[91.18167877 228.16264343]
[91.18167877 213.16264343]
[91.18167877 198.16264343]
[91.18167877 183.16264343]
[80.86070251 175.38612366]
[76.86273193 162.89250183]
[80.86885071 150.19688416]
[91.62391663 142.02459717]
[91.93597412 127.02783966]
[73.54067230 109.76918030]
[76.30692291 84.69735718]
[66.32419586 73.50158691]
[56.34147263 62.30582428]
[46.35874557 51.11005783]
[36.37601852 39.91429138]
[26.39329338 28.71852684]
[12.29465485 36.31248856]
[-3.19519758 40.34186172]
[-19.19038963 40.58032227]
[-34.77712631 37.01821899]
[-49.06587982 29.86292648]
[-61.24218369 19.52675056]
[-70.61302948 6.60319138]
[-76.64631653 -8.16714764]
[-79.00107574 -23.93899345]
[-77.54672241 -39.81077576]
[-72.37030029 -54.87616730]
[-63.77128601 -68.27584076]
[-74.21109772 -79.04665375]
[-84.65090942 -89.81745911]
[-95.09072113 -100.58827209]
[-110.25126648 -105.11247253]
[-113.55348969 -119.63640594]
[-123.99330902 -130.40721130]
[-138.65690613 -126.02118683]
[-153.67695618 -128.96345520]
[-165.60192871 -138.55790710]
[-171.69157410 -152.59980774]
[-170.54652405 -167.86242676]
[-162.42991638 -180.83851624]
[-149.20687866 -188.54629517]
[-133.91595459 -189.21453857]
[-120.07091522 -182.68971252]
[-110.85323334 -170.47117615]
[-108.38106537 -155.36663818]
[-113.22249603 -140.84703064]
[-102.78268433 -130.07621765]
[-88.36886597 -126.32241058]
[-84.31991577 -111.02808380]
[-73.88010406 -100.25727081]
[-63.44028854 -89.48646545]
[-53.00047684 -78.71565247]
[-41.04853058 -86.09973907]
[-27.80775070 -90.81501770]
[-13.86622906 -92.64923096]
[0.15623176 -91.51815033]
[13.63566875 -87.46944427]
[25.97171974 -80.68066406]
[36.61436844 -71.45143890]
[45.08846283 -60.19031906]
[51.01492691 -47.39661026]
[54.12773132 -33.63829422]
[54.28581238 -19.52677917]
[51.47947693 -5.68975210]
[45.83095169 7.25675917]
[37.58905792 18.73579979]
[47.57178497 29.93156624]
[57.55451202 41.12733078]
[67.53723907 52.32309723]
[77.51996613 63.51886368]
[87.50269318 74.71463013]
[94.34125519 72.36829376]
[101.55162811 71.83752441]
[108.66005707 73.15719604]
[115.19946289 76.24060059]
[120.74017334 80.88513947]
[124.91813660 86.78563690]
[139.56163025 83.53481293]
[154.20513916 80.28398895]
[168.84863281 77.03316498]
[183.49214172 73.78233337]
[198.10102844 70.37935638]
[212.67373657 66.82459259]
[227.24642944 63.26983261]
[232.36102295 58.91683960]
[238.05068970 57.99004364]
[242.49922180 59.88375092]
[257.20718384 56.93826675]
[271.91513062 53.99278641]
[283.86660767 42.76360321]
[299.48681641 47.75769043]
[302.70706177 63.83756256]
[290.21459961 74.46161652]
[274.86062622 68.70074463]
[260.15264893 71.64623260]
[245.44470215 74.59171295]
[230.80119324 77.84253693]
[216.22850037 81.39730072]
[201.65579224 84.95206451]
[195.86540222 89.62292480]
[186.74296570 88.42583466]
[172.09945679 91.67666626]
[157.45596313 94.92749023]
[142.81245422 98.17831421]
[128.16896057 101.42913818]
[126.31039429 110.16345215]
[121.81453705 117.87900543]
[115.13203430 123.80239868]
[106.93273163 127.33989716]
[106.62067413 142.33665466]
[118.95051575 154.70242310]
[118.56244659 171.82356262]
[106.18167877 183.16264343]
[106.18167877 198.16264343]
[106.18167877 213.16264343]
[106.18167877 228.16264343]
[106.18167877 243.16264343]
[106.18167877 258.16262817]
[106.18167877 273.16262817]
[106.18167877 288.16262817]
[106.18167877 303.16262817]
[106.18167877 318.16262817]
[106.18167877 333.16262817]
[120.72156525 337.22393799]
[133.62594604 345.05847168]
[143.93724060 356.08477783]
[150.89025879 369.48471069]
[153.96905518 384.26388550]
[152.94515991 399.32556152]
[147.89456177 413.55209351]
[139.19203186 425.88775635]
[127.48337555 435.41717529]
[113.63743591 441.43319702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[25 127]
[26 126]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[33 83]
[45 69]
[46 68]
[47 67]
[48 66]
[50 64]
[51 63]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 116]
[100 115]
[101 114]
[104 113]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
