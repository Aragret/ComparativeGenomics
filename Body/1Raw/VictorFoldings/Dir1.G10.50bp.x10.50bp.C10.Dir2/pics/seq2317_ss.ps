%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACACCCAGGGGGGGGGGUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACxxxxxxxxxxACACCCAUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCCCCCCCCCCCUCAACACCCA\
) } def
/len { sequence length } bind def

/coor [
[83.69012451 379.37283325]
[70.46992493 372.10034180]
[59.58312225 361.65335083]
[51.77199173 348.74411011]
[47.56911087 334.25277710]
[47.26103592 319.16744995]
[50.86877823 304.51663208]
[58.14635086 291.29922485]
[68.59755707 280.41647339]
[81.50981903 272.61032104]
[96.00275421 268.41302490]
[95.69070435 253.41627502]
[95.37864685 238.41952515]
[95.06658936 223.42277527]
[94.75453186 208.42601013]
[94.44247437 193.42926025]
[94.13041687 178.43251038]
[93.81836700 163.43576050]
[93.50630951 148.43899536]
[93.19425201 133.44224548]
[92.88219452 118.44549561]
[79.80844879 107.14042664]
[80.01680756 88.48660278]
[95.44319153 75.71542358]
[86.93209839 63.36384583]
[78.42101288 51.01227570]
[69.90991974 38.66070175]
[61.39883041 26.30912971]
[52.88773727 13.95755768]
[44.37664795 1.60598493]
[35.86555862 -10.74558735]
[22.69284248 -3.54256129]
[8.84931278 2.26783514]
[-5.51828241 6.62400866]
[-20.25763702 9.47978115]
[-35.21250916 10.80487919]
[-50.22436142 10.58525753]
[-65.13407135 8.82324219]
[-79.78357697 5.53751373]
[-94.01758575 0.76290143]
[-107.68521881 -5.44998074]
[-120.64157867 -13.03527355]
[-132.74932861 -21.91256714]
[-143.88012695 -31.98775864]
[-153.91596985 -43.15404510]
[-162.75047302 -55.29305649]
[-170.28997803 -68.27611542]
[-176.45458984 -81.96559143]
[-181.17892456 -96.21636200]
[-184.41291809 -110.87738037]
[-186.12229919 -125.79321289]
[-186.28894043 -140.80574036]
[-184.91105652 -155.75584412]
[-182.00328064 -170.48503113]
[-177.59642029 -184.83715820]
[-171.73719788 -198.66009521]
[-164.48771667 -211.80729675]
[-155.92483521 -224.13941956]
[-146.13932800 -235.52571106]
[-135.23490906 -245.84548950]
[-123.32717896 -254.98934937]
[-110.54237366 -262.86035156]
[-97.01601410 -269.37509155]
[-82.89148712 -274.46444702]
[-68.31852722 -278.07455444]
[-53.45160294 -280.16708374]
[-38.44832230 -280.71984863]
[-23.46772194 -279.72702026]
[-8.66860962 -277.19912720]
[5.79213715 -273.16293335]
[19.76122665 -267.66125488]
[33.09057999 -260.75238037]
[45.63889694 -252.50958252]
[57.27315521 -243.02021790]
[67.87003326 -232.38488770]
[77.31719208 -220.71632385]
[85.51448822 -208.13822937]
[92.37502289 -194.78395081]
[97.82608032 -180.79501343]
[101.80986023 -166.31974792]
[104.28414917 -151.51158142]
[105.22270966 -136.52748108]
[104.61558533 -121.52629852]
[102.46923065 -106.66705322]
[98.80638123 -92.10726166]
[93.66587067 -78.00125885]
[87.10219574 -64.49858856]
[79.18492889 -51.74237823]
[69.99800110 -39.86785126]
[59.63879776 -29.00088692]
[48.21713257 -19.25667763]
[56.72822189 -6.90510511]
[65.23931122 5.44646740]
[73.75040436 17.79804039]
[82.26148987 30.14961243]
[90.77258301 42.50118637]
[99.28366852 54.85275650]
[107.79476166 67.20433044]
[121.25072479 73.83283234]
[136.23043823 73.05298615]
[149.60969543 64.60868073]
[162.72201538 71.67382812]
[177.70172119 70.89398193]
[181.84669495 56.33040237]
[190.49792480 43.90321350]
[202.71697998 34.96042252]
[217.17842102 30.47208023]
[232.31359863 30.92504692]
[246.48075867 36.27018738]
[258.14312744 45.92770004]
[266.03570557 58.85001373]
[269.30230713 73.63540649]
[267.58865356 88.68007660]
[261.08059692 102.35208893]
[250.48408508 113.16840363]
[236.94854736 119.95574188]
[221.94223022 121.97788239]
[207.09289551 119.01545715]
[194.01127625 111.38982391]
[184.11640930 99.92814636]
[178.48156738 85.87370300]
[163.50186157 86.65354156]
[151.19406128 95.04206848]
[137.01028442 88.03269958]
[122.03057098 88.81254578]
[123.42872620 98.54125214]
[120.92545319 107.53218079]
[115.32342529 114.36743164]
[107.87895203 118.13343811]
[108.19100189 133.13018799]
[108.50305939 148.12695312]
[108.81511688 163.12370300]
[109.12717438 178.12045288]
[109.43923187 193.11720276]
[109.75128937 208.11396790]
[110.06333923 223.11071777]
[110.37539673 238.10746765]
[110.68745422 253.10421753]
[110.99951172 268.10098267]
[125.65450287 271.69174194]
[138.88031006 278.95401001]
[149.77517700 289.39260864]
[157.59628296 302.29580688]
[161.81034851 316.78387451]
[162.13006592 331.86895752]
[158.53364563 346.52258301]
[151.26628113 359.74557495]
[140.82347107 370.63641357]
[127.91725159 378.45254517]
[113.42755890 382.66101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[30 92]
[31 91]
[99 125]
[100 124]
[102 122]
[103 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
