%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUAAAACAGGGGGGGGGGCUGAACUGACAAUUAACAGCCCAAUAUCUACAAUCAACCAACAAGUCAUUxxxxxxxxxxCCUUCUCCUCACUCUCUCAAUCUUAUCCAUCAUAGCAGGCAGUUGAGGUGCCCCCCCCCCGAUUAAACCA\
) } def
/len { sequence length } bind def

/coor [
[86.28808594 385.91079712]
[72.44214630 379.89477539]
[60.73348618 370.36535645]
[52.03096390 358.02969360]
[46.98036194 343.80316162]
[45.95647049 328.74148560]
[49.03526688 313.96234131]
[55.98828888 300.56240845]
[66.29957581 289.53607178]
[79.20395660 281.70156860]
[93.74384308 277.64025879]
[93.74384308 262.64025879]
[93.74384308 247.64024353]
[93.74384308 232.64024353]
[93.74384308 217.64024353]
[93.74384308 202.64024353]
[93.74384308 187.64024353]
[93.74384308 172.64024353]
[93.74384308 157.64024353]
[93.74384308 142.64024353]
[93.74384308 127.64024353]
[93.27580261 112.64755249]
[85.70394897 100.89346313]
[91.75341034 88.28807831]
[90.81777954 73.31728363]
[89.88214874 58.34649658]
[88.94652557 43.37570190]
[88.01089478 28.40491104]
[79.42787170 15.11422729]
[86.35623932 1.92912257]
[71.35044098 1.80656207]
[56.39067078 0.62580884]
[41.55145645 -1.60725486]
[26.90672302 -4.88150358]
[12.52943230 -9.18062592]
[-1.50878727 -14.48320198]
[-15.13799763 -20.76281548]
[-28.29029846 -27.98818207]
[-40.90016174 -36.12330627]
[-52.90477371 -45.12765121]
[-64.24431610 -54.95636749]
[-74.86230469 -65.56048584]
[-84.70583344 -76.88716888]
[-93.72586823 -88.87999725]
[-101.87747192 -101.47921753]
[-109.12002563 -114.62205505]
[-115.41745758 -128.24304199]
[-120.73838043 -142.27432251]
[-125.05629730 -156.64598083]
[-128.34968567 -171.28642273]
[-130.60214233 -186.12271118]
[-131.80245972 -201.08091736]
[-131.94464111 -216.08654785]
[-131.02796936 -231.06481934]
[-129.05703735 -245.94111633]
[-126.04164886 -260.64132690]
[-121.99682617 -275.09222412]
[-116.94272614 -289.22180176]
[-110.90452576 -302.95968628]
[-103.91230774 -316.23739624]
[-96.00090027 -328.98880005]
[-87.20973206 -341.15039062]
[-77.58258820 -352.66156006]
[-67.16743469 -363.46496582]
[-56.01616287 -373.50677490]
[-44.18432617 -382.73696899]
[-31.73087311 -391.10958862]
[-18.71784210 -398.58285522]
[-5.21006680 -405.11959839]
[8.72515774 -410.68722534]
[23.01840591 -415.25799561]
[37.59846878 -418.80914307]
[52.39270782 -421.32299805]
[67.32742310 -422.78698730]
[82.32820129 -423.19387817]
[97.32031250 -422.54159546]
[112.22906494 -420.83340454]
[126.98019409 -418.07778931]
[141.50019836 -414.28854370]
[155.71673584 -409.48449707]
[169.55899048 -403.68957520]
[182.95799255 -396.93267822]
[195.84698486 -389.24746704]
[208.16175842 -380.67221069]
[219.84097290 -371.24963379]
[230.82643127 -361.02667236]
[241.06341553 -350.05429077]
[250.50090027 -338.38711548]
[259.09188843 -326.08331299]
[266.79357910 -313.20413208]
[273.56759644 -299.81378174]
[279.38018799 -285.97894287]
[284.20239258 -271.76855469]
[288.01019287 -257.25341797]
[290.78463745 -242.50582886]
[292.51187134 -227.59925842]
[293.18331909 -212.60798645]
[292.79562378 -197.60670471]
[291.35070801 -182.67013550]
[288.85577393 -167.87269592]
[285.32324219 -153.28810120]
[280.77072144 -138.98902893]
[275.22091675 -125.04670715]
[268.70144653 -111.53058624]
[261.24478149 -98.50801849]
[252.88810730 -86.04387665]
[243.67303467 -74.20025635]
[233.64547729 -63.03616333]
[222.85539246 -52.60721588]
[211.35653687 -42.96537399]
[199.20619202 -34.15866852]
[186.46488953 -26.23097992]
[173.19612122 -19.22179985]
[159.46597290 -13.16604996]
[145.34286499 -8.09389877]
[130.89715576 -4.03061724]
[116.20079803 -0.99644738]
[101.32703400 0.99349403]
[109.84313202 13.21336746]
[102.98168945 27.46928406]
[103.91731262 42.44007492]
[104.85294342 57.41086578]
[105.78857422 72.38166046]
[106.72419739 87.35244751]
[114.29605103 99.10653687]
[108.24658966 111.71192169]
[111.21247864 116.16423798]
[112.04492188 120.83964539]
[111.02552795 124.87232208]
[108.74384308 127.64024353]
[108.74384308 142.64024353]
[108.74384308 157.64024353]
[108.74384308 172.64024353]
[108.74384308 187.64024353]
[108.74384308 202.64024353]
[108.74384308 217.64024353]
[108.74384308 232.64024353]
[108.74384308 247.64024353]
[108.74384308 262.64025879]
[108.74384308 277.64025879]
[123.28372955 281.70156860]
[136.18811035 289.53607178]
[146.49938965 300.56240845]
[153.45242310 313.96234131]
[156.53121948 328.74148560]
[155.50732422 343.80316162]
[150.45672607 358.02969360]
[141.75419617 370.36535645]
[130.04553223 379.89477539]
[116.19960022 385.91079712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 126]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[30 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
