%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCCUUCCGGGGGGGGGGCGUACUAAUUAAUCCCCUGGCCCAACCCGUCAUCUACUCUACCAUCUUUGxxxxxxxxxxUACCUCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGACCCCCCCCCCAUACCUUUCC\
) } def
/len { sequence length } bind def

/coor [
[86.00765228 397.14834595]
[72.16171265 391.13232422]
[60.45305252 381.60290527]
[51.75053024 369.26721191]
[46.69992828 355.04071045]
[45.67603683 339.97903442]
[48.75483322 325.19985962]
[55.70785522 311.79992676]
[66.01914215 300.77359009]
[78.92352295 292.93908691]
[93.46340942 288.87777710]
[93.46340942 273.87777710]
[93.46340942 258.87777710]
[93.46340942 243.87777710]
[93.46340942 228.87777710]
[93.46340942 213.87777710]
[93.46340942 198.87777710]
[93.46340942 183.87777710]
[93.46340942 168.87777710]
[93.46340942 153.87777710]
[93.30737305 138.87858582]
[85.30696869 126.31504059]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[91.62363434 57.96166229]
[91.31157684 42.96490860]
[90.99951935 27.96815491]
[90.37554169 12.98113918]
[89.43991089 -1.98965251]
[79.22214508 8.99202347]
[64.35854340 11.01025009]
[51.58245850 3.15075254]
[46.68158722 -11.02604103]
[51.87607193 -25.09790421]
[64.81275940 -32.69014359]
[79.63120270 -30.36340332]
[89.61865234 -19.17134476]
[90.86553192 -34.11943054]
[92.11240387 -49.06751633]
[93.04803467 -64.03830719]
[93.67201233 -79.02532196]
[94.29598999 -94.01234436]
[94.91996765 -108.99935913]
[80.05409241 -111.09043884]
[65.46476746 -114.62858582]
[51.29250336 -119.57971191]
[37.67378616 -125.89614105]
[24.73977089 -133.51704407]
[12.61502743 -142.36900330]
[1.41632497 -152.36680603]
[-8.74848366 -163.41413879]
[-17.78150368 -175.40460205]
[-25.59573746 -188.22273254]
[-32.11593246 -201.74508667]
[-37.27928925 -215.84141541]
[-41.03608704 -230.37596130]
[-43.35013580 -245.20877075]
[-44.19915771 -260.19696045]
[-43.57497406 -275.19619751]
[-41.48359299 -290.06204224]
[-37.94515610 -304.65127563]
[-32.99374390 -318.82345581]
[-26.67704391 -332.44204712]
[-19.05588722 -345.37591553]
[-10.20367432 -357.50045776]
[-0.20565766 -368.69897461]
[10.84187412 -378.86355591]
[22.83252335 -387.89633179]
[35.65081406 -395.71032715]
[49.17329025 -402.23025513]
[63.26972198 -407.39331055]
[77.80435181 -411.14981079]
[92.63719940 -413.46356201]
[107.62541199 -414.31228638]
[122.62463379 -413.68780518]
[137.49043274 -411.59613037]
[152.07960510 -408.05740356]
[166.25167847 -403.10571289]
[179.87014771 -396.78872681]
[192.80384827 -389.16732788]
[204.92823792 -380.31488037]
[216.12654114 -370.31661987]
[226.29090881 -359.26889038]
[235.32345581 -347.27807617]
[243.13717651 -334.45962524]
[249.65682983 -320.93701172]
[254.81962585 -306.84048462]
[258.57583618 -292.30575562]
[260.88928223 -277.47286987]
[261.73770142 -262.48464966]
[261.11291504 -247.48542786]
[259.02096558 -232.61968994]
[255.48193359 -218.03057861]
[250.52995300 -203.85861206]
[244.21270752 -190.24026489]
[236.59103394 -177.30671692]
[227.73834229 -165.18249512]
[217.73986816 -153.98439026]
[206.69194031 -143.82025146]
[194.70092773 -134.78794861]
[181.88232422 -126.97447968]
[168.35958862 -120.45510101]
[154.26293945 -115.29258728]
[139.72816467 -111.53666687]
[124.89522552 -109.22350311]
[109.90698242 -108.37538147]
[109.28300476 -93.38836670]
[108.65902710 -78.40135193]
[108.03504944 -63.41433334]
[110.59707642 -59.31414795]
[110.56575775 -53.54957199]
[107.06049347 -47.82064438]
[105.81361389 -32.87255478]
[104.56674194 -17.92446899]
[104.41070557 -2.92528105]
[105.34633636 12.04551029]
[108.32027435 15.85749245]
[108.88770294 21.59415817]
[105.99627686 27.65609932]
[106.30832672 42.65285110]
[106.62038422 57.64960480]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[115.77497864 125.68105316]
[108.30412292 138.56652832]
[111.62899017 147.14541626]
[108.46340942 153.87777710]
[108.46340942 168.87777710]
[108.46340942 183.87777710]
[108.46340942 198.87777710]
[108.46340942 213.87777710]
[108.46340942 228.87777710]
[108.46340942 243.87777710]
[108.46340942 258.87777710]
[108.46340942 273.87777710]
[108.46340942 288.87777710]
[123.00329590 292.93908691]
[135.90766907 300.77359009]
[146.21896362 311.79992676]
[153.17198181 325.19985962]
[156.25077820 339.97903442]
[155.22688293 355.04071045]
[150.17628479 369.26721191]
[141.47377014 381.60290527]
[129.76510620 391.13232422]
[115.91916656 397.14834595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 129]
[23 127]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[30 118]
[31 117]
[39 116]
[40 115]
[41 114]
[42 111]
[43 110]
[44 109]
[45 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
