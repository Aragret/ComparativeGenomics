%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAAACCUGGGGGGGGGGUGUAGAGAGAGUAAAAAAUUUAACACCCAUAGUAGGCCUAAAAGCAGCCAxxxxxxxxxxCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACCCCCCCCCCCGAAAAAAACU\
) } def
/len { sequence length } bind def

/coor [
[15.86252403 502.21017456]
[2.64232659 494.93768311]
[-8.24447727 484.49069214]
[-16.05560684 471.58145142]
[-20.25848961 457.09011841]
[-20.56656075 442.00479126]
[-16.95882034 427.35397339]
[-9.68124676 414.13656616]
[0.76996064 403.25381470]
[13.68222237 395.44766235]
[28.17515945 391.25036621]
[27.86310196 376.25363159]
[27.55104637 361.25686646]
[27.23899078 346.26010132]
[26.92693329 331.26336670]
[26.61487770 316.26660156]
[26.30282211 301.26986694]
[25.99076462 286.27310181]
[25.67870903 271.27633667]
[25.36665344 256.27960205]
[25.05459595 241.28283691]
[24.74254036 226.28608704]
[17.17092514 239.23484802]
[6.95418310 250.21748352]
[-5.41444874 258.70376587]
[-19.33784676 264.28399658]
[-34.14382553 266.68878174]
[-49.11759186 265.80203247]
[-63.53625107 261.66656494]
[-76.70371246 254.48197937]
[-87.98428345 244.59518433]
[-96.83336639 232.48347473]
[-102.82375336 218.73155212]
[-105.66625214 204.00334167]
[-105.22361755 189.00987244]
[-101.51723480 174.47499084]
[-94.72602844 161.10041809]
[-85.17786407 149.53181458]
[-73.33370209 140.32769775]
[-59.76533890 133.93240356]
[-45.12783051 130.65470886]
[-30.12783241 130.65283203]
[-15.48950100 133.92686462]
[-1.91953909 140.31874084]
[9.92693233 149.51988220]
[19.47799873 161.08609009]
[26.27255630 174.45896912]
[29.98258781 188.99291992]
[30.42914581 203.98417664]
[37.88405609 190.96786499]
[45.33896637 177.95156860]
[52.79387665 164.93525696]
[60.24878693 151.91894531]
[60.84778976 144.50363159]
[67.99660492 138.71171570]
[75.72068787 125.85330963]
[67.68513489 117.20825195]
[62.73783112 106.08450317]
[61.63196945 93.58746338]
[64.72510529 81.04574585]
[71.91562653 69.86985016]
[82.62944031 61.39408112]
[95.86077118 56.71910858]
[110.26491547 56.57378769]
[113.97107697 42.03884888]
[108.56190491 24.46839905]
[121.22951508 12.36337566]
[124.63249207 -2.24551725]
[128.03547668 -16.85441017]
[131.43844604 -31.46330261]
[118.19904327 -38.71731567]
[107.40850830 -49.27510452]
[99.86756897 -62.35321045]
[96.13581848 -76.98114777]
[96.49017334 -92.07343292]
[100.90433502 -106.51010895]
[109.05075073 -119.21988678]
[120.32489777 -129.25961304]
[133.89016724 -135.88427734]
[148.73991394 -138.60227966]
[163.77220154 -137.21192932]
[177.87152100 -131.81640625]
[189.99160767 -122.81607819]
[199.23309326 -110.87883759]
[204.91017151 -96.89051056]
[206.60157776 -81.88912201]
[204.18180847 -66.98786926]
[197.83041382 -53.29253006]
[188.01870728 -41.81938934]
[175.47477722 -33.41982651]
[161.12948608 -28.71714973]
[146.04734802 -28.06032372]
[142.64436340 -13.45143223]
[139.24137878 1.15746081]
[135.83840942 15.76635361]
[141.97070312 26.24024200]
[139.20838928 38.47088623]
[128.50601196 45.74501038]
[124.79985046 60.27994919]
[129.55403137 66.08061981]
[134.84701538 52.04550552]
[149.64828491 49.61191177]
[159.15638733 61.21345901]
[153.86309814 75.24845886]
[139.06239319 77.68196106]
[143.81657410 83.48262787]
[158.79627991 82.70278168]
[173.77600098 81.92294312]
[188.75570679 81.14309692]
[200.51972961 70.23497009]
[216.36064148 72.77371979]
[224.12664795 86.81183624]
[217.86032104 101.58048248]
[202.36866760 105.75041199]
[189.53555298 96.12281036]
[174.55584717 96.90265656]
[159.57612610 97.68250275]
[144.59642029 98.46234131]
[134.07560730 123.81144714]
[111.98912811 136.60533142]
[88.57908630 133.57739258]
[80.85500336 146.43579102]
[73.26509857 159.37385559]
[65.81018829 172.39016724]
[58.35527420 185.40647888]
[50.90036392 198.42277527]
[43.44545364 211.43908691]
[39.73929596 225.97402954]
[40.05134964 240.97077942]
[40.36340714 255.96752930]
[40.67546463 270.96429443]
[40.98751831 285.96102905]
[41.29957581 300.95779419]
[41.61163330 315.95455933]
[41.92368698 330.95129395]
[42.23574448 345.94805908]
[42.54780197 360.94482422]
[42.85985565 375.94155884]
[43.17191315 390.93832397]
[57.82690430 394.52908325]
[71.05271149 401.79135132]
[81.94757843 412.22994995]
[89.76867676 425.13314819]
[93.98274994 439.62121582]
[94.30246735 454.70629883]
[90.70604706 469.35992432]
[83.43868256 482.58291626]
[72.99588013 493.47375488]
[60.08964920 501.28988647]
[45.59996033 505.49835205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[55 122]
[56 121]
[64 99]
[65 98]
[67 95]
[68 94]
[69 93]
[70 92]
[106 118]
[107 117]
[108 116]
[109 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
