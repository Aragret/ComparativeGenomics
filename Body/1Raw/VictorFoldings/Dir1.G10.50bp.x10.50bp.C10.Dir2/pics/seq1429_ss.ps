%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAACAGUGGGGGGGGGGUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAACUxxxxxxxxxxCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACAAACCUACCCACCCCCCCCCCCCCUUAACAGU\
) } def
/len { sequence length } bind def

/coor [
[196.61341858 350.34240723]
[196.49334717 335.32504272]
[198.15029907 320.39886475]
[201.56105042 305.77340698]
[206.67767334 291.65405273]
[213.42837524 278.23898315]
[221.71836853 265.71649170]
[231.43127441 254.26243591]
[221.21780396 243.27676392]
[211.00431824 232.29110718]
[200.79084778 221.30543518]
[190.57736206 210.31977844]
[180.36387634 199.33410645]
[166.03128052 195.28125000]
[162.30137634 179.90600586]
[152.08790588 168.92033386]
[141.87442017 157.93467712]
[131.66093445 146.94900513]
[121.44746399 135.96334839]
[111.23397827 124.97767639]
[101.02050018 113.99201202]
[108.34788513 127.08053589]
[110.28994751 141.95428467]
[106.56884766 156.48539734]
[97.71693420 168.59504700]
[85.00057220 176.55081177]
[70.23898315 179.21452332]
[55.54396439 176.20510864]
[43.01781845 167.95309448]
[34.45254517 155.63903809]
[31.07350159 141.02458191]
[33.36409760 126.20051575]
[40.99664307 113.28756714]
[52.87920761 104.13307953]
[67.31186676 100.04671478]
[82.23155975 101.61357880]
[68.10675812 96.56481934]
[53.98195267 91.51606750]
[39.85715103 86.46730804]
[25.73234749 81.41855621]
[13.71935081 86.22914124]
[2.03292370 81.68531036]
[-3.22624755 70.74691772]
[-17.24295998 65.40540314]
[-33.33917618 68.54290009]
[-43.89885330 55.99598312]
[-38.05910492 40.67184067]
[-21.82736015 38.33464050]
[-11.90144825 51.38869095]
[2.11526489 56.73020554]
[19.23269463 52.98941040]
[30.78110313 67.29374695]
[44.90590668 72.34250641]
[59.03070831 77.39126587]
[73.15550995 82.44001770]
[87.28031921 87.48877716]
[93.50003815 83.29770660]
[85.11809540 70.85812378]
[97.55781555 62.47639465]
[105.93947601 74.91555786]
[112.15919495 70.72448730]
[112.78317261 55.73747253]
[113.40715027 40.75045776]
[114.03112793 25.76344109]
[99.55432129 21.55803299]
[86.50495148 14.00969124]
[75.64170074 3.55726671]
[67.59613800 -9.19155121]
[62.83602524 -23.49556351]
[61.63810349 -38.52315140]
[64.07202911 -53.40063477]
[69.99628448 -67.26305389]
[79.06645203 -79.30445862]
[90.75519562 -88.82479095]
[104.38294983 -95.27054596]
[119.15741730 -98.26696777]
[134.21961975 -97.63986206]
[148.69387817 -93.42568207]
[161.73866272 -85.86943054]
[172.59558105 -75.41041565]
[180.63340759 -62.65672684]
[185.38485718 -48.34983063]
[186.57366943 -33.32151794]
[184.13072205 -18.44551468]
[178.19805908 -4.58669233]
[169.12060547 7.44921684]
[157.42608643 16.96245956]
[143.79441833 23.39994812]
[129.01814270 26.38741684]
[128.39416504 41.37443542]
[127.77018738 56.36145020]
[127.14620972 71.34846497]
[125.19464874 93.46645355]
[112.00616455 103.77853394]
[122.21965027 114.76419830]
[132.43312073 125.74986267]
[142.64660645 136.73551941]
[152.86009216 147.72119141]
[163.07356262 158.70684814]
[173.28704834 169.69252014]
[188.35018921 174.53114319]
[191.34954834 189.12062073]
[201.56303406 200.10629272]
[211.77650452 211.09194946]
[221.98999023 222.07762146]
[232.20346069 233.06329346]
[242.41694641 244.04895020]
[254.54731750 235.19511414]
[267.63973999 227.83815002]
[281.51040649 222.08134460]
[295.96459961 218.00550842]
[310.79943848 215.66786194]
[325.80661011 215.10122681]
[340.77545166 216.31355286]
[355.49584961 219.28782654]
[369.76113892 223.98229980]
[383.37106323 230.33103943]
[396.13452148 238.24494934]
[407.87240601 247.61293030]
[418.41986084 258.30343628]
[427.62887573 270.16644287]
[435.37011719 283.03536987]
[441.53497314 296.72955322]
[446.03683472 311.05679321]
[448.81256104 325.81591797]
[449.82312012 340.79974365]
[449.05438232 355.79794312]
[446.51712036 370.59991455]
[442.24694824 384.99789429]
[436.30380249 398.78976440]
[428.77114868 411.78189087]
[419.75469971 423.79190063]
[409.38107300 434.65115356]
[397.79583740 444.20727539]
[385.16168213 452.32601929]
[371.65597534 458.89349365]
[357.46826172 463.81747437]
[342.79776001 467.02880859]
[327.85040283 468.48245239]
[312.83605957 468.15798950]
[297.96545410 466.05993652]
[283.44738770 462.21780396]
[269.48565674 456.68548584]
[256.27624512 449.54067993]
[244.00463867 440.88366699]
[232.84307861 430.83599854]
[222.94825745 419.53869629]
[214.45909119 407.15039062]
[207.49475098 393.84497070]
[202.15299988 379.80920410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 107]
[9 106]
[10 105]
[11 104]
[12 103]
[13 102]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[43 50]
[44 49]
[61 92]
[62 91]
[63 90]
[64 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
