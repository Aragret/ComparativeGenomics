%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUACCGGGGGGGGGGCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCxxxxxxxxxxAUUAAAGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCCCCCCCCCCCAAUCCUACC\
) } def
/len { sequence length } bind def

/coor [
[242.82864380 222.76176453]
[232.36756897 212.00576782]
[222.54354858 200.66494751]
[213.38920593 188.77697754]
[204.93496704 176.38134766]
[197.20889282 163.51925659]
[190.23667908 150.23339844]
[184.04147339 136.56793213]
[178.64384460 122.56822968]
[174.06175232 108.28082275]
[170.31037903 93.75315857]
[155.59484863 96.66063690]
[140.87933350 99.56810760]
[126.16381073 102.47557831]
[111.44828796 105.38304901]
[96.82927704 108.74230957]
[82.32065582 112.55017090]
[67.81202698 116.35802460]
[53.30340576 120.16588593]
[38.87601852 124.27082825]
[24.53595924 128.67112732]
[10.19589710 133.07142639]
[-4.14416409 137.47172546]
[-18.48422623 141.87203979]
[-32.82428741 146.27233887]
[-35.58583832 161.32664490]
[-45.03628159 173.36607361]
[-59.00397873 179.62402344]
[-74.27925110 178.66249084]
[-87.35195923 170.70240784]
[-95.21808624 157.57293701]
[-96.07005310 142.29116821]
[-89.71208191 128.36871338]
[-77.60519409 119.00485229]
[-62.53145981 116.35133362]
[-47.95471573 121.01792908]
[-37.22458649 131.93226624]
[-22.88452530 127.53197479]
[-8.54446411 123.13166809]
[5.79559660 118.73136902]
[20.13565826 114.33106995]
[34.47571945 109.93077087]
[37.48816299 106.15262604]
[42.93049240 104.26345825]
[49.49554443 105.65726471]
[64.00417328 101.84940338]
[78.51279449 98.04154205]
[93.02142334 94.23368835]
[95.44946289 91.14909363]
[99.24589539 89.17453766]
[103.87223816 88.90511322]
[108.54081726 90.66752625]
[123.25634003 87.76005554]
[137.97186279 84.85258484]
[152.68737793 81.94511414]
[167.40290833 79.03764343]
[165.34736633 64.17491913]
[164.15150452 49.21846008]
[163.81930542 34.21794891]
[164.35186768 19.22321320]
[165.74743652 4.28406668]
[168.00135803 -10.54986668]
[171.10614014 -25.22930717]
[175.05148315 -39.70549393]
[179.82427979 -53.93033600]
[185.40867615 -67.85658264]
[191.78611755 -81.43796539]
[198.93540955 -94.62937164]
[206.83282471 -107.38698578]
[215.45210266 -119.66841888]
[224.76463318 -131.43287659]
[234.73947144 -142.64128113]
[245.34347534 -153.25640869]
[256.54144287 -163.24296570]
[268.29614258 -172.56781006]
[280.56854248 -181.19995117]
[293.31787109 -189.11071777]
[306.50180054 -196.27381897]
[320.07647705 -202.66548157]
[333.99688721 -208.26445007]
[348.21670532 -213.05213928]
[362.68875122 -217.01264954]
[377.36492920 -220.13281250]
[392.19650269 -222.40225220]
[407.13418579 -223.81346130]
[422.12835693 -224.36172485]
[437.12921143 -224.04524231]
[452.08691406 -222.86503601]
[466.95178223 -220.82505798]
[481.67440796 -217.93208313]
[496.20593262 -214.19569397]
[510.49807739 -209.62831116]
[524.50329590 -204.24513245]
[538.17517090 -198.06401062]
[551.46820068 -191.10549927]
[564.33825684 -183.39270020]
[576.74261475 -174.95124817]
[588.64001465 -165.80917358]
[599.99096680 -155.99684143]
[610.75775146 -145.54685974]
[620.90460205 -134.49394226]
[630.39782715 -122.87480164]
[639.20587158 -110.72802734]
[647.29943848 -98.09398651]
[654.65173340 -85.01463318]
[661.23834229 -71.53342438]
[667.03723145 -57.69514084]
[672.02929688 -43.54575348]
[676.19787598 -29.13226700]
[679.52917480 -14.50255871]
[682.01202393 0.29477206]
[683.63830566 15.21056938]
[684.40252686 30.19528389]
[684.30218506 45.19913864]
[683.33758545 60.17229080]
[681.51196289 75.06500244]
[678.83135986 89.82779694]
[675.30474854 104.41164398]
[670.94372559 118.76808167]
[665.76287842 132.84942627]
[659.77935791 146.60891724]
[653.01306152 160.00080872]
[645.48651123 172.98065186]
[637.22460938 185.50531006]
[628.25488281 197.53318787]
[618.60711670 209.02432251]
[608.31329346 219.94052124]
[597.40771484 230.24555969]
[585.92657471 239.90518188]
[573.90795898 248.88731384]
[561.39178467 257.16210938]
[548.41973877 264.70205688]
[535.03479004 271.48214722]
[521.28149414 277.47985840]
[507.20550537 282.67523193]
[492.85357666 287.05102539]
[478.27337646 290.59271240]
[463.51333618 293.28851318]
[448.62252808 295.12948608]
[433.65036011 296.10949707]
[418.64663696 296.22531128]
[403.66113281 295.47656250]
[388.74368286 293.86566162]
[373.94378662 291.39804077]
[359.31063843 288.08184814]
[344.89288330 283.92813110]
[330.73834229 278.95068359]
[316.89410400 273.16601562]
[303.40609741 266.59335327]
[290.31918335 259.25454712]
[277.67678833 251.17396545]
[265.52093506 242.37844849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 56]
[12 55]
[13 54]
[14 53]
[15 52]
[16 48]
[17 47]
[18 46]
[19 45]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
