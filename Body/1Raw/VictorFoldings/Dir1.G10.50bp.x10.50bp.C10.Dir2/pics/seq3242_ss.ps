%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAUAGGGGGGGGGGCCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCxxxxxxxxxxUUCAAAUAUCUACUCAUCUUCCUAAUUACCAUACUAAUCUUAGUUACCGCCCCCCCCCCCUAACAACCUA\
) } def
/len { sequence length } bind def

/coor [
[67.73468781 391.29666138]
[54.51448822 384.02420044]
[43.62768555 373.57720947]
[35.81655502 360.66793823]
[31.61367416 346.17663574]
[31.30560112 331.09127808]
[34.91334152 316.44046021]
[42.19091797 303.22308350]
[52.64212418 292.34030151]
[65.55438232 284.53417969]
[80.04732513 280.33688354]
[79.73526764 265.34011841]
[79.42321014 250.34336853]
[79.11115265 235.34661865]
[78.79909515 220.34986877]
[78.48703766 205.35311890]
[78.17498779 190.35635376]
[77.86293030 175.35960388]
[77.55087280 160.36285400]
[77.23881531 145.36610413]
[76.92675781 130.36933899]
[72.13349152 108.89125824]
[80.56877136 93.91737366]
[93.01024628 90.90398407]
[88.40467834 76.62852478]
[83.79911804 62.35306549]
[79.19355011 48.07760239]
[64.60368347 51.59230042]
[49.78978348 53.99351120]
[34.83671188 55.26747894]
[19.83011436 55.40690994]
[4.85595226 54.41100693]
[-10.00000572 52.28547287]
[-24.65266418 49.04248047]
[-39.01809311 44.70061111]
[-53.01400757 39.28472519]
[-66.56023407 32.82585526]
[-79.57919312 25.36099243]
[-91.99629974 16.93289566]
[-103.74043274 7.58983994]
[-114.74432373 -2.61465621]
[-124.94494629 -13.62214184]
[-134.28385925 -25.36956787]
[-142.70758057 -37.78964233]
[-150.16786194 -50.81122589]
[-156.62196350 -64.35973358]
[-162.03291321 -78.35755157]
[-166.36973572 -92.72451019]
[-169.60755920 -107.37831116]
[-171.72785950 -122.23501587]
[-172.71849060 -137.20953369]
[-172.57377625 -152.21607971]
[-171.29454041 -167.16870117]
[-168.88810730 -181.98175049]
[-165.36827087 -196.57037354]
[-160.75520325 -210.85102844]
[-155.07530212 -224.74188232]
[-148.36109924 -238.16340637]
[-140.65109253 -251.03869629]
[-131.98941040 -263.29400635]
[-122.42566681 -274.85913086]
[-112.01465607 -285.66784668]
[-100.81601715 -295.65823364]
[-88.89387512 -304.77307129]
[-76.31653595 -312.96011353]
[-63.15604019 -320.17251587]
[-49.48776627 -326.36892700]
[-35.39000702 -331.51388550]
[-20.94351578 -335.57791138]
[-6.23104048 -338.53771973]
[8.66314697 -340.37634277]
[23.65373039 -341.08328247]
[38.65484619 -340.65447998]
[53.58057022 -339.09234619]
[68.34540558 -336.40591431]
[82.86477661 -332.61047363]
[97.05552673 -327.72784424]
[110.83635712 -321.78598022]
[124.12834167 -314.81887817]
[136.85534668 -306.86645508]
[148.94445801 -297.97430420]
[160.32644653 -288.19329834]
[170.93611145 -277.57952881]
[180.71267700 -266.19372559]
[189.60014343 -254.10115051]
[197.54760742 -241.37106323]
[204.50953674 -228.07637024]
[210.44606018 -214.29322815]
[215.32318115 -200.10058594]
[219.11294556 -185.57972717]
[221.79367065 -170.81385803]
[223.34997559 -155.88752747]
[223.77296448 -140.88624573]
[223.06019592 -125.89593506]
[221.21577454 -111.00246429]
[218.25024414 -96.29113770]
[214.18061829 -81.84622955]
[209.03016663 -67.75047302]
[202.82843018 -54.08460617]
[195.61091614 -40.92691422]
[187.41897583 -28.35276031]
[178.29951477 -16.43416786]
[168.30477905 -5.23940849]
[157.49201965 5.16739655]
[145.92317200 14.72663593]
[133.66448975 23.38355446]
[120.78620911 31.08856773]
[107.36208344 37.79753876]
[93.46900940 43.47203827]
[98.07457733 57.74750137]
[102.68014526 72.02295685]
[107.28570557 86.29842377]
[118.37702179 96.39707184]
[133.02052307 99.64789581]
[147.66403198 102.89871979]
[162.30752563 106.14955139]
[177.77801514 100.70934296]
[190.04675293 111.59098816]
[186.49270630 127.60038757]
[170.77197266 132.26843262]
[159.05670166 120.79305267]
[144.41319275 117.54222107]
[129.76969910 114.29139709]
[115.12619781 111.04057312]
[109.32552338 115.79475403]
[118.83369446 127.39624786]
[107.23203278 136.90422058]
[97.72418213 125.30310822]
[91.92351532 130.05728149]
[92.23557281 145.05404663]
[92.54762268 160.05079651]
[92.85968018 175.04754639]
[93.17173767 190.04429626]
[93.48379517 205.04106140]
[93.79585266 220.03781128]
[94.10791016 235.03456116]
[94.41996002 250.03131104]
[94.73201752 265.02807617]
[95.04407501 280.02481079]
[109.69906616 283.61560059]
[122.92487335 290.87783813]
[133.81974792 301.31643677]
[141.64083862 314.21966553]
[145.85491943 328.70773315]
[146.17463684 343.79281616]
[142.57820129 358.44641113]
[135.31083679 371.66943359]
[124.86804199 382.56027222]
[111.96181488 390.37637329]
[97.47212219 394.58486938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 112]
[25 111]
[26 110]
[27 109]
[113 124]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
