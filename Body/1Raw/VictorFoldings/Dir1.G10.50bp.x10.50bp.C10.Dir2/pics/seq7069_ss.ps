%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAUUCACGGGGGGGGGGUGAUUUCCCCUAUUCUCAGGCUACACCCUAGACCAAACCUACGCCAAAAUxxxxxxxxxxUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACAUAAAACCCCCCCCCCCCCUCAUUCAC\
) } def
/len { sequence length } bind def

/coor [
[83.50609589 366.94982910]
[70.28589630 359.67736816]
[59.39909363 349.23034668]
[51.58796310 336.32110596]
[47.38508224 321.82980347]
[47.07701111 306.74444580]
[50.68475342 292.09362793]
[57.96232605 278.87625122]
[68.41353607 267.99346924]
[81.32579803 260.18731689]
[95.81873322 255.99003601]
[95.50667572 240.99328613]
[95.19461823 225.99653625]
[94.88256073 210.99978638]
[94.57050323 196.00302124]
[94.25845337 181.00627136]
[93.94639587 166.00952148]
[93.63433838 151.01277161]
[93.32228088 136.01600647]
[93.01022339 121.01925659]
[92.69816589 106.02250671]
[89.78961945 101.57356262]
[89.61802673 95.80682373]
[92.69816589 90.39839172]
[93.01022339 75.40163422]
[93.32228088 60.40488434]
[89.46511841 45.90928650]
[81.74103546 33.05088425]
[74.01695251 20.19248199]
[66.29286957 7.33407927]
[52.74833298 13.80635166]
[38.64989090 18.96181107]
[24.12523079 22.75376892]
[9.30588531 25.14788246]
[-5.67393208 26.12247086]
[-20.67856026 25.66870689]
[-35.57210922 23.79070091]
[-50.21970367 20.50546074]
[-64.48867798 15.84273911]
[-78.24982452 9.84476185]
[-91.37850189 2.56584978]
[-103.75582123 -5.92807674]
[-115.26968384 -15.56009293]
[-125.81581116 -26.24296951]
[-135.29870605 -37.87995529]
[-143.63247681 -50.36566544]
[-150.74166870 -63.58702469]
[-156.56187439 -77.42429352]
[-161.04039001 -91.75215149]
[-164.13667297 -106.44084930]
[-165.82266235 -121.35735321]
[-166.08308411 -136.36657715]
[-164.91560364 -151.33261108]
[-162.33079529 -166.11987305]
[-158.35203552 -180.59448242]
[-153.01539612 -194.62533569]
[-146.36917114 -208.08537292]
[-138.47357178 -220.85269165]
[-129.40011597 -232.81166077]
[-119.23094177 -243.85398865]
[-108.05817413 -253.87965393]
[-95.98298645 -262.79785156]
[-83.11473846 -270.52786255]
[-69.56996918 -276.99963379]
[-55.47134018 -282.15460205]
[-40.94653702 -285.94601440]
[-26.12710571 -288.33959961]
[-11.14725304 -289.31362915]
[3.85735822 -288.85931396]
[18.75084114 -286.98077393]
[33.39831161 -283.69500732]
[47.66712189 -279.03176880]
[61.42804337 -273.03326416]
[74.55645752 -265.75387573]
[86.93346405 -257.25952148]
[98.44697571 -247.62707520]
[108.99272156 -236.94381714]
[118.47518921 -225.30647278]
[126.80850983 -212.82046509]
[133.91720581 -199.59884644]
[139.73690796 -185.76136780]
[144.21490479 -171.43334961]
[147.31065369 -156.74453735]
[148.99609375 -141.82797241]
[149.25598145 -126.81873322]
[148.08795166 -111.85275269]
[145.50259399 -97.06557465]
[141.52331543 -82.59111023]
[136.18615723 -68.56044769]
[129.53944397 -55.10065460]
[121.64338684 -42.33362961]
[112.56948853 -30.37498856]
[102.39991760 -19.33304024]
[91.22678375 -9.30778217]
[79.15126801 -0.39000550]
[86.87535095 12.46839714]
[94.59944153 25.32679939]
[102.32352448 38.18520355]
[102.50154114 23.18625832]
[105.83985901 8.56245518]
[112.18820953 -5.02792454]
[121.26083374 -16.97311592]
[132.64930725 -26.73541451]
[145.84101868 -33.87537384]
[160.24211121 -38.07159042]
[175.20436096 -39.13518143]
[190.05422974 -37.01825714]
[204.12326050 -31.81612206]
[216.77815247 -23.76294136]
[227.44924927 -13.22122574]
[235.65618896 -0.66550523]
[241.02955627 13.33903027]
[243.32745361 28.16197395]
[242.44644165 43.13608170]
[238.42619324 57.58729553]
[231.44767761 70.86510468]
[221.82501221 82.37181854]
[209.99137878 91.58946228]
[196.47944641 98.10311127]
[181.89744568 101.61956024]
[166.90179443 101.98051453]
[152.16749573 99.16972351]
[138.35781860 93.31372070]
[126.09439087 84.67610168]
[115.92925262 73.64569092]
[108.31903839 60.71693802]
[108.00698090 75.71369171]
[107.69492340 90.71044922]
[107.69492340 105.71044922]
[108.00698090 120.70719910]
[108.31903839 135.70394897]
[108.63108826 150.70071411]
[108.94314575 165.69746399]
[109.25520325 180.69421387]
[109.56726074 195.69096375]
[109.87931824 210.68772888]
[110.19137573 225.68447876]
[110.50342560 240.68122864]
[110.81548309 255.67797852]
[125.47047424 259.26873779]
[138.69628906 266.53100586]
[149.59115601 276.96960449]
[157.41224670 289.87280273]
[161.62632751 304.36087036]
[161.94604492 319.44598389]
[158.34962463 334.09957886]
[151.08226013 347.32260132]
[140.63945007 358.21340942]
[127.73322296 366.02954102]
[113.24353027 370.23800659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 128]
[25 127]
[26 126]
[27 98]
[28 97]
[29 96]
[30 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
