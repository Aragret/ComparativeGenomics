%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACAGCGCUGGGGGGGGGGAAGCUCGCACUGAUUUUUUACCUGAGUAGGCCUAGAAAUAAACAUGCUAGxxxxxxxxxxCAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACCCCCCCCCCCUCACAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[251.43040466 377.52917480]
[247.51394653 363.03683472]
[245.03684998 348.23037720]
[244.02299500 333.25244141]
[244.48213196 318.24722290]
[246.40983582 303.35928345]
[249.78755188 288.73199463]
[254.58274841 274.50622559]
[260.74923706 260.81893921]
[268.22766113 247.80203247]
[276.94595337 235.58081055]
[265.64694214 225.71508789]
[254.34794617 215.84936523]
[243.04893494 205.98364258]
[231.74992371 196.11791992]
[220.05030823 186.73075867]
[207.97032166 177.83840942]
[195.89033508 168.94606018]
[183.81034851 160.05371094]
[171.73034668 151.16136169]
[159.65036011 142.26901245]
[147.57037354 133.37666321]
[135.49038696 124.48431396]
[122.39723206 117.16520691]
[108.49467468 111.53324890]
[94.62187958 113.27596283]
[85.87336731 102.36930847]
[71.97080994 96.73735046]
[58.06825256 91.10539246]
[48.87355804 90.77458191]
[43.93703079 85.20894623]
[30.15464783 79.28898621]
[16.19425774 73.80194855]
[2.06945562 68.75319672]
[-12.05534744 63.70443726]
[-26.18015099 58.65568161]
[-38.64380646 69.47399902]
[-54.76661301 72.53188324]
[-70.14926147 67.09091949]
[-80.64260101 54.71869278]
[-83.46671295 38.83864212]
[-97.69348907 34.08482742]
[-111.92026520 29.33101273]
[-127.87203217 33.13537216]
[-138.94450378 21.03857994]
[-133.74726868 5.48477697]
[-117.62680054 2.47438335]
[-107.16645050 15.10423470]
[-92.93967438 19.85804939]
[-78.71289825 24.61186409]
[-69.07830048 14.88386822]
[-56.12541962 10.24683189]
[-42.37404251 11.66361618]
[-30.52562141 18.91343689]
[-22.93259430 30.62398720]
[-21.13139343 44.53087997]
[-7.00659084 49.57963562]
[7.11821222 54.62839127]
[21.24301529 59.67714691]
[24.61741829 58.46022797]
[28.75791740 58.85764694]
[32.88034058 61.21518707]
[36.07461166 65.50659943]
[49.85699463 71.42656708]
[63.70021057 77.20283508]
[77.60276794 82.83479309]
[91.50532532 88.46675110]
[105.37812042 86.72403717]
[114.12663269 97.63069153]
[128.02919006 103.26264954]
[120.00909424 90.58676147]
[118.16364288 75.70072174]
[122.84560394 61.45013428]
[133.15997314 50.55914307]
[147.13507080 45.10967255]
[162.09941101 46.14343643]
[175.19239807 53.46282578]
[183.91120911 65.66866302]
[186.58912659 80.42768860]
[182.71426392 94.91855621]
[173.02731323 106.37120819]
[159.38006592 112.59635162]
[144.38273621 112.40432739]
[156.46272278 121.29667664]
[168.54270935 130.18902588]
[180.62269592 139.08137512]
[192.70269775 147.97372437]
[204.78268433 156.86607361]
[216.86267090 165.75842285]
[228.94265747 174.65077209]
[233.42097473 174.97662354]
[237.16134644 176.58305359]
[239.84527588 179.06869507]
[241.32223511 181.96913147]
[241.61564636 184.81892395]
[252.91465759 194.68464661]
[264.21365356 204.55036926]
[275.51266479 214.41609192]
[286.81167603 224.28181458]
[297.74588013 213.99542236]
[309.63571167 204.83032227]
[322.36660767 196.87478638]
[335.81600952 190.20541382]
[349.85437012 184.88644409]
[364.34646606 180.96911621]
[379.15277100 178.49113464]
[394.13067627 177.47637939]
[409.13589478 177.93461609]
[424.02395630 179.86143494]
[438.65142822 183.23826599]
[452.87750244 188.03260803]
[466.56515503 194.19828796]
[479.58251953 201.67591858]
[491.80426025 210.39347839]
[503.11267090 220.26701355]
[513.39880371 231.20143127]
[522.56365967 243.09143066]
[530.51898193 255.82250977]
[537.18804932 269.27203369]
[542.50677490 283.31048584]
[546.42382812 297.80267334]
[548.90148926 312.60903931]
[549.91595459 327.58694458]
[549.45739746 342.59216309]
[547.53027344 357.48016357]
[544.15313721 372.10760498]
[539.35852051 386.33358765]
[533.19256592 400.02108765]
[525.71472168 413.03829956]
[516.99688721 425.25985718]
[507.12313843 436.56808472]
[496.18850708 446.85403442]
[484.29833984 456.01864624]
[471.56710815 463.97369385]
[458.11743164 470.64251709]
[444.07885742 475.96090698]
[429.58660889 479.87768555]
[414.78021240 482.35507202]
[399.80227661 483.36923218]
[384.79705811 482.91040039]
[369.90908813 480.98297119]
[355.28173828 477.60556030]
[341.05584717 472.81063843]
[327.36846924 466.64440918]
[314.35137939 459.16625977]
[302.13000488 450.44821167]
[290.82199097 440.57421875]
[280.53625488 429.63940430]
[271.37188721 417.74902344]
[263.41708374 405.01763916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[24 70]
[25 69]
[27 67]
[28 66]
[29 65]
[31 64]
[32 63]
[33 59]
[34 58]
[35 57]
[36 56]
[41 50]
[42 49]
[43 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
