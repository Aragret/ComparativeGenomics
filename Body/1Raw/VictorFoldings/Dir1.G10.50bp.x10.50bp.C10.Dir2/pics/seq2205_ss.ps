%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCUUAGUUGGGGGGGGGGCAACUUUAAAUUUGCCCACAGAACCCUCUAAAUCCCCUUGUAAAUUUAACxxxxxxxxxxAACAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUUCCUAAUUACCAUACUCCCCCCCCCCAAUCUUAGUU\
) } def
/len { sequence length } bind def

/coor [
[96.02801514 375.31463623]
[82.18207550 369.29861450]
[70.47341156 359.76919556]
[61.77088928 347.43353271]
[56.72028732 333.20700073]
[55.69639587 318.14532471]
[58.77519226 303.36618042]
[65.72821808 289.96624756]
[76.03949738 278.93991089]
[88.94387817 271.10540771]
[103.48376465 267.04409790]
[103.48376465 252.04408264]
[103.48376465 237.04408264]
[103.48376465 222.04408264]
[103.48376465 207.04408264]
[103.48376465 192.04408264]
[103.48376465 177.04408264]
[103.48376465 162.04408264]
[103.48376465 147.04408264]
[103.48376465 132.04408264]
[76.35956573 115.35812378]
[79.12502289 87.85789490]
[69.14229584 76.66212463]
[59.15957260 65.46636200]
[49.17684555 54.27059555]
[37.00500870 45.50438690]
[23.22262573 39.58442307]
[9.44024467 33.66445923]
[-4.34213638 27.74449730]
[-18.12451744 21.82453537]
[-31.90689850 15.90457153]
[-45.68928146 9.98460865]
[-59.47166061 4.06464529]
[-63.90713501 4.76326704]
[-67.91442871 4.04728413]
[-71.09227753 2.23533297]
[-73.18874359 -0.25440514]
[-74.12102509 -2.96331549]
[-87.36360931 -10.00845051]
[-100.60619354 -17.05358505]
[-111.47808838 -6.53421640]
[-125.06942749 0.10887690]
[-140.04867554 2.22487187]
[-154.94830322 -0.39353514]
[-168.30862427 -7.48981905]
[-178.82069397 -18.36875916]
[-185.45468140 -31.96454620]
[-187.56063843 -46.94520569]
[-184.93225098 -61.84308243]
[-177.82701111 -75.19863892]
[-166.94104004 -85.70342255]
[-153.34080505 -92.32830048]
[-138.35873413 -94.42421722]
[-123.46263123 -91.78584290]
[-110.11183929 -84.67166138]
[-99.61434174 -73.77864838]
[-92.99858856 -60.17398071]
[-90.91270447 -45.19051361]
[-93.56105804 -30.29617119]
[-80.31847382 -23.25103569]
[-67.07588959 -16.20590019]
[-53.55170059 -9.71773624]
[-39.76931763 -3.79777288]
[-25.98693657 2.12219024]
[-12.20455456 8.04215336]
[1.57782662 13.96211624]
[15.36020851 19.88208008]
[29.14258957 25.80204201]
[42.92497253 31.72200584]
[34.21136093 19.51245880]
[29.04306984 5.43095493]
[27.78930855 -9.51655579]
[30.53964043 -24.26225662]
[37.09759140 -37.75274658]
[46.99467087 -49.02429199]
[59.52386093 -57.27168274]
[73.79010010 -61.90574265]
[88.77423096 -62.59542084]
[103.40583801 -59.29145432]
[116.63965607 -52.22986603]
[127.53029633 -41.91512299]
[135.29975891 -29.08408737]
[139.39300537 -14.65338039]
[139.51762390 0.34610218]
[135.66471863 14.84282875]
[128.10951233 27.80118561]
[117.39176178 38.29545593]
[104.27709961 45.57595062]
[89.70240784 49.12257004]
[74.70888519 48.68195343]
[60.37261200 44.28786850]
[70.35533905 55.48363495]
[80.33806610 66.67939758]
[90.32079315 77.87516785]
[97.97722626 74.58367920]
[106.73380280 74.01438141]
[115.60321045 76.52060699]
[123.49207306 82.09355927]
[129.33416748 90.33403015]
[132.22943115 100.47280884]
[147.16374207 99.07050323]
[162.09805298 97.66819763]
[165.63362122 82.94480133]
[173.76040649 70.16848755]
[185.59686279 60.72514725]
[199.85908508 55.63911438]
[215.00001526 55.46208572]
[229.37724304 60.21326828]
[241.43127441 69.37728119]
[249.85455322 81.96009064]
[253.73339844 96.59680176]
[252.64704895 111.69973755]
[246.71336365 125.63063812]
[236.57595825 136.87838745]
[223.33448792 144.22291565]
[208.42527771 146.86753845]
[193.46556091 144.52539062]
[180.07806396 137.45053101]
[169.71495056 126.41038513]
[163.50035095 112.60250854]
[148.56605530 114.00481415]
[133.63174438 115.40711212]
[148.58695984 114.24897003]
[161.60887146 121.69409180]
[168.19746399 135.16964722]
[166.07589722 150.01884460]
[155.97732544 161.11022949]
[141.39154053 164.61091614]
[127.35897827 159.31117249]
[118.72891998 147.04241943]
[118.48376465 132.04408264]
[118.48376465 147.04408264]
[118.48376465 162.04408264]
[118.48376465 177.04408264]
[118.48376465 192.04408264]
[118.48376465 207.04408264]
[118.48376465 222.04408264]
[118.48376465 237.04408264]
[118.48376465 252.04408264]
[118.48376465 267.04409790]
[133.02365112 271.10540771]
[145.92803955 278.93991089]
[156.23931885 289.96624756]
[163.19233704 303.36618042]
[166.27113342 318.14532471]
[165.24725342 333.20700073]
[160.19664001 347.43353271]
[151.49412537 359.76919556]
[139.78546143 369.29861450]
[125.93952179 375.31463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 94]
[23 93]
[24 92]
[25 91]
[26 69]
[27 68]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[38 61]
[39 60]
[40 59]
[100 122]
[101 121]
[102 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
