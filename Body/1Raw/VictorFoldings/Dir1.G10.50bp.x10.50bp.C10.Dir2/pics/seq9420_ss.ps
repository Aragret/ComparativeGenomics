%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAAAUUCUGGGGGGGGGGUCUUAGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUxxxxxxxxxxUACUUCUCCAUAAUAUUCAUCCCUGUAGCAUUGUUCGUUACAUGGUCCAUCCCCCCCCCCCAUAGAAUUCU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 393.46240234]
[71.01555634 387.90939331]
[58.81560135 379.04306030]
[49.20452881 367.42074585]
[42.78650284 353.77304077]
[39.96496582 338.95785522]
[40.91728210 323.90649414]
[45.58358765 309.56506348]
[53.67055511 296.83511353]
[64.66983032 286.51684570]
[77.88998413 279.25885010]
[92.50000000 275.51742554]
[92.50000000 260.51742554]
[92.50000000 245.51742554]
[92.50000000 230.51742554]
[92.50000000 215.51742554]
[92.50000000 200.51742554]
[92.50000000 185.51742554]
[92.50000000 170.51742554]
[92.50000000 155.51742554]
[92.50000000 140.51742554]
[77.91486359 134.78733826]
[66.52378845 124.02613068]
[59.97420502 109.79015350]
[59.21333694 94.13828278]
[64.35123444 79.33415985]
[52.96015930 69.57488251]
[41.56908417 59.81561279]
[30.17801094 50.05633545]
[17.26531410 42.42336655]
[3.22333717 37.14862442]
[-12.41625977 39.53893661]
[-21.60984612 27.82026482]
[-35.65182114 22.54552269]
[-49.69379807 17.27078056]
[-54.08548737 18.17230797]
[-58.11603165 17.64480591]
[-61.37139511 15.98669052]
[-63.58129883 13.60225010]
[-64.64161682 10.94391346]
[-78.20351410 4.53493738]
[-91.76541138 -1.87403822]
[-103.28238678 8.08985138]
[-117.85823059 12.50172615]
[-132.96759033 10.59720325]
[-145.99267578 2.70625234]
[-154.67680359 -9.80397224]
[-157.51541138 -24.76599693]
[-154.01667786 -39.58756256]
[-144.78680420 -51.70074081]
[-131.42489624 -59.00685501]
[-116.24598694 -60.24007034]
[-101.87992859 -55.18672943]
[-90.81571960 -44.72235107]
[-84.97030640 -30.65995407]
[-85.35643005 -15.43593407]
[-71.79453278 -9.02695847]
[-58.23263931 -2.61798310]
[-44.41905594 3.22880483]
[-30.37708092 8.50354671]
[-16.33510399 13.77828789]
[-1.69988346 11.01069355]
[8.49807835 23.10664940]
[22.54005432 28.38138962]
[13.40175629 16.48637009]
[8.53542423 2.29768443]
[8.44954967 -12.70207024]
[13.15310383 -26.94554520]
[22.15460777 -38.94441605]
[34.51347733 -47.44490433]
[48.93832016 -51.55878067]
[63.92185593 -50.85618210]
[77.89842987 -45.41051865]
[89.40762329 -35.79081726]
[97.24680328 -23.00226021]
[100.59685516 -8.38113976]
[99.10771942 6.54475975]
[92.93499756 20.21580696]
[82.72369385 31.20349503]
[69.54080200 38.35969925]
[54.76381302 40.93666077]
[39.93728638 38.66526413]
[51.32836151 48.42453766]
[62.71943283 58.18381119]
[74.11050415 67.94308472]
[90.32478333 59.94626617]
[108.40155792 59.65987778]
[124.86101532 67.13906097]
[136.53466797 80.94404602]
[150.87472534 76.54374695]
[165.21479797 72.14344788]
[150.89836121 67.66687012]
[139.56694031 57.83840179]
[133.11175537 44.29843521]
[132.61019897 29.30682373]
[138.14599609 15.36569691]
[148.79519653 4.80186033]
[162.78041077 -0.62155861]
[177.76750183 0.00062106]
[191.25508118 6.56455612]
[200.99205017 17.97471046]
[205.35327148 32.32670593]
[203.61085510 47.22516251]
[196.05560303 60.18349457]
[183.95124817 69.03769684]
[198.94413757 68.57576752]
[213.93701172 68.11384583]
[228.92990112 67.65191650]
[243.92279053 67.18998718]
[258.91567993 66.72806549]
[268.45089722 54.33396530]
[283.73309326 51.01915741]
[297.54650879 58.34878922]
[303.36886597 72.86203766]
[298.45101929 87.70618439]
[285.11502075 95.87227631]
[269.65771484 93.50454712]
[259.37759399 81.72094727]
[244.38471985 82.18287659]
[229.39183044 82.64480591]
[214.39894104 83.10672760]
[199.40605164 83.56865692]
[184.41317749 84.03057861]
[169.61509705 86.48350525]
[155.27503967 90.88381195]
[140.93496704 95.28411102]
[140.82684326 105.57493591]
[138.17201233 115.51801300]
[133.13607788 124.49309540]
[126.03317261 131.94033813]
[117.30635834 137.39520264]
[107.50000000 140.51742554]
[107.50000000 155.51742554]
[107.50000000 170.51742554]
[107.50000000 185.51742554]
[107.50000000 200.51742554]
[107.50000000 215.51742554]
[107.50000000 230.51742554]
[107.50000000 245.51742554]
[107.50000000 260.51742554]
[107.50000000 275.51742554]
[122.11001587 279.25885010]
[135.33016968 286.51684570]
[146.32945251 296.83511353]
[154.41641235 309.56506348]
[159.08271790 323.90649414]
[160.03503418 338.95785522]
[157.21350098 353.77304077]
[150.79547119 367.42074585]
[141.18440247 379.04306030]
[128.98443604 387.90939331]
[114.96250153 393.46240234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[26 85]
[27 84]
[28 83]
[29 82]
[30 64]
[31 63]
[33 61]
[34 60]
[35 59]
[40 58]
[41 57]
[42 56]
[89 126]
[90 125]
[91 124]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
