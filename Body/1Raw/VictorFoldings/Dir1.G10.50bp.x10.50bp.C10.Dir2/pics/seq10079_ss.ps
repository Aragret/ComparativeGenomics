%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCUUCCCCGGGGGGGGGGUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGCUCACUAAACAUUxxxxxxxxxxGACAAGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCCCCCCCCCCCUCGCUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.84812927 393.50494385]
[70.35925293 386.77340698]
[58.87375259 377.00885010]
[50.05938339 364.77896118]
[44.42860031 350.79476929]
[42.30877304 335.86929321]
[43.82314301 320.87030029]
[48.88366318 306.66976929]
[57.19612885 294.09335327]
[68.27725983 283.87219238]
[81.48281860 276.60055542]
[96.04503632 272.70120239]
[95.73706055 257.70434570]
[95.42908478 242.70751953]
[95.12110901 227.71067810]
[94.81313324 212.71385193]
[94.50514984 197.71701050]
[94.19717407 182.72016907]
[93.88919830 167.72332764]
[93.58122253 152.72648621]
[93.27323914 137.72966003]
[92.96526337 122.73281860]
[84.91859436 119.25227356]
[78.48237610 112.95342255]
[74.62950897 104.55060577]
[74.02545166 95.08735657]
[76.91994476 85.80727386]
[83.09177399 77.99054718]
[91.85697174 72.77781677]
[81.98126984 61.48753738]
[72.10556030 50.19725418]
[59.78520584 58.78049469]
[46.59538269 65.95626831]
[32.69620895 71.63748169]
[18.25640488 75.75515747]
[3.45125675 78.25931549]
[-11.53951263 79.11955261]
[-26.53393173 78.32543182]
[-41.34997940 75.88659668]
[-55.80780411 71.83264923]
[-69.73189545 66.21279144]
[-82.95323944 59.09525681]
[-95.31133270 50.56644058]
[-106.65615845 40.72986984]
[-116.85000610 29.70495987]
[-125.76912689 17.62553596]
[-133.30525208 4.63823605]
[-139.36691284 -9.09928799]
[-143.88049316 -23.42027473]
[-146.79124451 -38.15088272]
[-148.06379700 -53.11229324]
[-147.68272400 -68.12288666]
[-145.65264893 -83.00045013]
[-141.99819946 -97.56439209]
[-136.76376343 -111.63790131]
[-130.01286316 -125.05015564]
[-121.82745361 -137.63833618]
[-112.30689240 -149.24963379]
[-101.56675720 -159.74308777]
[-89.73742676 -168.99133301]
[-76.96249390 -176.88211060]
[-63.39702988 -183.31961060]
[-49.20571136 -188.22569275]
[-34.56081009 -191.54081726]
[-19.64009666 -193.22473145]
[-4.62470007 -193.25698853]
[10.30310917 -191.63720703]
[24.96212196 -188.38504028]
[39.17438889 -183.53997803]
[52.76738739 -177.16082764]
[65.57611084 -169.32502747]
[77.44507599 -160.12770081]
[88.23020172 -149.68048096]
[97.80056000 -138.11019897]
[106.03998566 -125.55731201]
[112.84845734 -112.17418671]
[118.14332581 -98.12329865]
[121.86031342 -83.57519531]
[123.95429993 -68.70648956]
[124.39987183 -53.69767380]
[123.19161224 -38.73093033]
[120.34419250 -23.98795509]
[115.89217377 -9.64770412]
[109.88961029 4.11573935]
[102.40935516 17.13530159]
[93.54222107 29.25293732]
[83.39584351 40.32154846]
[93.27155304 51.61183167]
[103.14725494 62.90211105]
[117.53173828 67.15496063]
[131.95912170 63.05001068]
[146.38650513 58.94506836]
[158.85621643 45.43444824]
[175.68952942 50.30108643]
[190.02958679 45.90078735]
[204.36965942 41.50048447]
[206.74131775 26.46264648]
[215.37173462 13.99657917]
[228.50508118 6.54436255]
[243.50999451 5.53751516]
[257.40673828 11.12229919]
[267.45895386 22.14130211]
[281.79901123 17.74100304]
[296.13906860 13.34070206]
[303.32205200 -0.73694897]
[318.38116455 -5.53267193]
[332.38208008 1.79875004]
[337.01834106 16.90771484]
[329.53927612 30.83034134]
[314.38214111 35.30658340]
[300.53936768 27.68076324]
[286.19931030 32.08106232]
[271.85925293 36.48136520]
[269.71765137 51.24208832]
[261.34515381 63.66026306]
[248.35806274 71.24287415]
[233.30522156 72.43968201]
[219.16806030 66.95993042]
[208.76995850 55.84054565]
[194.42990112 60.24084854]
[180.08982849 64.64114380]
[174.11827087 75.20536804]
[162.15861511 78.96539307]
[150.49145508 73.37245178]
[136.06407166 77.47739410]
[121.63668060 81.58234406]
[126.59364319 94.01132202]
[125.21292114 106.76686859]
[118.32552338 116.93273926]
[107.96210480 122.42484283]
[108.27008057 137.42167664]
[108.57805634 152.41851807]
[108.88603210 167.41535950]
[109.19401550 182.41218567]
[109.50199127 197.40902710]
[109.80996704 212.40586853]
[110.11794281 227.40270996]
[110.42592621 242.39953613]
[110.73390198 257.39639282]
[111.04187775 272.39321899]
[125.75191498 275.69143677]
[139.24487305 282.41479492]
[150.73629761 292.17239380]
[159.55807495 304.39694214]
[165.19732666 318.37771606]
[167.32620239 333.30191040]
[165.82093811 348.30181885]
[160.76901245 362.50540161]
[152.46418762 375.08688354]
[141.38925171 385.31472778]
[128.18811035 392.59439087]
[113.62825012 396.50256348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[29 89]
[30 88]
[31 87]
[90 126]
[91 125]
[92 124]
[94 121]
[95 120]
[96 119]
[102 113]
[103 112]
[104 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
