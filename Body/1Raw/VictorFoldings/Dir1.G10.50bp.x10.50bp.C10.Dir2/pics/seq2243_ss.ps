%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAAUCCCCGGGGGGGGGGUUGUAAAUUUAACUGUUAGUCCAAAGAGGAACAGCUCUUUGGACACUAGGxxxxxxxxxxACUCAACGGCUACAUAGAAAAAUCCACCCCUUACGAGUGCGGCUUCGACCCCCCCCCCCCCUAUAUCCCC\
) } def
/len { sequence length } bind def

/coor [
[69.18936920 383.55917358]
[56.63114548 375.20800781]
[46.54492569 363.99557495]
[39.56473160 350.62664795]
[36.12934494 335.94168091]
[36.45472336 320.86370850]
[40.52040863 306.34057617]
[48.07082748 293.28524780]
[58.63135529 282.51834106]
[71.53815460 274.71670532]
[85.97988129 270.37075806]
[85.35590363 255.38374329]
[84.73192596 240.39672852]
[84.10794830 225.40971375]
[83.48397064 210.42269897]
[82.85999298 195.43568420]
[82.23601532 180.44866943]
[81.61203766 165.46165466]
[80.98806000 150.47463989]
[80.36408234 135.48762512]
[79.74010468 120.50060272]
[84.20520020 85.19731903]
[79.89761353 70.82913208]
[75.59003448 56.46095276]
[71.28244781 42.09276581]
[66.97486115 27.72458267]
[61.63335037 13.70787048]
[55.28622055 0.11691917]
[48.93909073 -13.47403145]
[42.59196091 -27.06498337]
[28.00991249 -32.54235840]
[21.76662827 -46.41593170]
[27.07833290 -60.28393173]
[20.73120308 -73.87487793]
[10.63255310 -84.96619415]
[-2.30550241 -92.55610657]
[-9.00767803 -92.99010468]
[-13.73820686 -96.28455353]
[-15.61449337 -100.74045563]
[-28.22562218 -108.86199951]
[-40.83675003 -116.98354340]
[-53.44787979 -125.10508728]
[-66.05900574 -133.22662354]
[-78.67013550 -141.34817505]
[-91.28126526 -149.46971130]
[-103.89238739 -157.59124756]
[-116.50351715 -165.71279907]
[-129.11465454 -173.83433533]
[-144.50593567 -170.24496460]
[-157.88299561 -178.66102600]
[-161.30944824 -194.08940125]
[-152.75242615 -207.37672424]
[-137.28868103 -210.63986206]
[-124.09256744 -201.94285583]
[-120.99310303 -186.44546509]
[-108.38197327 -178.32392883]
[-95.77085114 -170.20237732]
[-83.15972137 -162.08084106]
[-70.54859161 -153.95928955]
[-57.93746567 -145.83775330]
[-45.32633591 -137.71621704]
[-32.71520615 -129.59466553]
[-20.10408020 -121.47312927]
[-7.49295139 -113.35158539]
[5.28440571 -105.49416351]
[18.22246170 -97.90425110]
[11.29242706 -111.20743561]
[7.12683868 -125.61742401]
[5.88986158 -140.56632996]
[7.63024473 -155.46502686]
[12.27939987 -169.72634888]
[19.65410614 -182.78826904]
[29.46372604 -194.13601685]
[41.32166672 -203.32237244]
[54.76060486 -209.98532104]
[69.25092316 -213.86227417]
[84.22155762 -214.80043030]
[99.08251953 -212.76281738]
[113.24813843 -207.82974243]
[126.16015625 -200.19561768]
[137.30970764 -190.16131592]
[146.25740051 -178.12225342]
[152.65060425 -164.55291748]
[156.23735046 -149.98805237]
[156.87631226 -135.00166321]
[154.54228210 -120.18437195]
[149.32727051 -106.12010193]
[141.43678284 -93.36313629]
[131.18177795 -82.41622162]
[118.96640778 -73.71077728]
[105.27207947 -67.58987427]
[90.63848877 -64.29473877]
[75.64232635 -63.95523834]
[60.87460327 -66.58473969]
[46.91730499 -72.07962799]
[34.32215500 -80.22200775]
[40.66928482 -66.63105774]
[54.71267700 -61.80211258]
[61.34317398 -48.10937119]
[56.18291092 -33.41211319]
[62.53004074 -19.82116127]
[68.87717438 -6.23021030]
[75.22430420 7.36074066]
[80.71678162 -6.59750557]
[93.81195831 -13.91299248]
[108.57758331 -11.27173424]
[118.32469177 0.12975517]
[118.63774109 15.12648773]
[109.37491608 26.92479897]
[94.73237610 30.17993546]
[81.34304810 23.41699791]
[85.65062714 37.78518295]
[89.95821381 52.15336609]
[94.26580048 66.52155304]
[98.57338715 80.88973236]
[105.99538422 67.85462952]
[120.92031097 66.35578918]
[130.78605652 77.65476990]
[127.28876495 92.24137115]
[113.37197113 97.83824158]
[127.02821350 104.04364777]
[143.28878784 101.91626740]
[153.04528809 115.09741974]
[146.26106262 130.02746582]
[129.91513062 131.34765625]
[120.82279968 117.69989014]
[107.16656494 111.49448395]
[94.72711945 119.87662506]
[95.35109711 134.86364746]
[95.97507477 149.85066223]
[96.59905243 164.83767700]
[97.22303009 179.82469177]
[97.84700775 194.81170654]
[98.47098541 209.79872131]
[99.09496307 224.78573608]
[99.71894073 239.77275085]
[100.34291840 254.75976562]
[100.96689606 269.74679565]
[115.71990204 272.87722778]
[129.23052979 279.57897949]
[140.64952087 289.43078613]
[149.25903320 301.81329346]
[154.51788330 315.94821167]
[156.09548950 330.94692993]
[153.89266968 345.86666870]
[148.04792786 359.76953125]
[138.92864990 371.78158569]
[127.10807800 381.14776611]
[113.32926941 387.27923584]
[98.45836639 389.79064941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[27 103]
[28 102]
[29 101]
[30 100]
[33 97]
[34 96]
[35 66]
[36 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
