%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCACCAUCGGGGGGGGGGGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCxxxxxxxxxxACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCCCCCCCCCCCUCACCAUAG\
) } def
/len { sequence length } bind def

/coor [
[32.17887497 263.63168335]
[19.14724159 257.60031128]
[6.64698315 250.53318787]
[-5.23974752 242.47674561]
[-16.43482971 233.48393250]
[-26.86468697 223.61383057]
[-36.46077347 212.93133545]
[-45.16002274 201.50663757]
[-52.90525818 189.41481018]
[-59.64558411 176.73535156]
[-73.42796326 182.65531921]
[-87.21035004 188.57528687]
[-100.99272919 194.49525452]
[-114.77510834 200.41520691]
[-128.55749512 206.33517456]
[-142.33987427 212.25514221]
[-156.12225342 218.17509460]
[-169.90463257 224.09506226]
[-183.68701172 230.01502991]
[-197.46940613 235.93498230]
[-207.09571838 248.49064636]
[-221.84349060 246.40441895]
[-235.62586975 252.32438660]
[-238.06591797 267.55755615]
[-248.37132263 279.03808594]
[-263.25363159 283.10253906]
[-277.96401978 278.45401001]
[-287.80838013 266.57580566]
[-289.64544678 251.25820923]
[-282.88903809 237.38902283]
[-269.69506836 229.39384460]
[-254.27369690 229.82392883]
[-241.54583740 238.54200745]
[-227.76345825 232.62203979]
[-219.12294006 220.48980713]
[-203.38935852 222.15260315]
[-189.60697937 216.23265076]
[-175.82460022 210.31268311]
[-162.04222107 204.39271545]
[-148.25984192 198.47274780]
[-134.47744751 192.55279541]
[-120.69507599 186.63282776]
[-106.91268921 180.71286011]
[-93.13031006 174.79290771]
[-79.34793091 168.87294006]
[-65.56555176 162.95297241]
[-73.04058838 137.84153748]
[-76.72964478 111.90214539]
[-76.55198669 85.70234680]
[-72.51152039 59.81537247]
[-64.69663239 34.80760574]
[-53.27830887 11.22619629]
[-38.50637817 -10.41291142]
[-20.70403862 -29.63627243]
[-30.45169067 -41.03729248]
[-40.19934464 -52.43831253]
[-55.83263779 -57.39130020]
[-59.09514618 -73.46264648]
[-46.63068008 -84.11952209]
[-31.26161003 -78.39905548]
[-28.79832268 -62.18596649]
[-19.05067062 -50.78494644]
[-9.30301762 -39.38392258]
[-1.31700635 -45.29243851]
[6.98768711 -50.74394608]
[15.58494091 -55.72130966]
[24.44771385 -60.20886230]
[33.54813004 -64.19249725]
[42.85756302 -67.65968323]
[52.34672928 -70.59951019]
[61.98578644 -73.00273895]
[71.74441528 -74.86180115]
[81.59191132 -76.17085266]
[91.49731445 -76.92578125]
[101.42945862 -77.12420654]
[111.35710907 -76.76550293]
[121.24903870 -75.85080719]
[131.07412720 -74.38298798]
[140.80148315 -72.36666870]
[150.40049744 -69.80818176]
[159.84097290 -66.71558380]
[169.09323120 -63.09859848]
[178.12817383 -58.96860504]
[186.91735840 -54.33858871]
[195.43316650 -49.22311783]
[203.64878845 -43.63828278]
[211.53839111 -37.60165024]
[219.07717896 -31.13220215]
[226.24140930 -24.25029182]
[233.00856018 -16.97756577]
[239.35734558 -9.33689880]
[245.26780701 -1.35232449]
[250.72132874 6.95104361]
[255.70077515 15.54708767]
[260.19049072 24.40876961]
[264.17633057 33.50821686]
[267.64578247 42.81680298]
[270.58792114 52.30525589]
[272.99349976 61.94372940]
[274.85491943 71.70190430]
[276.16638184 81.54908752]
[276.92370605 91.45429993]
[277.12454224 101.38639832]
[276.76824951 111.31414032]
[275.85595703 121.20629120]
[274.39053345 131.03173828]
[289.03402710 134.28256226]
[298.15646362 133.08546448]
[303.94686890 137.75633240]
[318.51956177 141.31109619]
[333.09228516 144.86585999]
[347.66497803 148.42062378]
[362.23767090 151.97538757]
[372.31164551 140.45263672]
[386.59075928 134.94216919]
[401.79382324 136.71025085]
[414.42721558 145.35060120]
[421.58795166 158.87770081]
[421.63049316 174.18315125]
[414.54507446 187.74986267]
[401.95986938 196.46029663]
[386.76690674 198.31286621]
[372.45736694 192.88186646]
[362.31951904 181.41529846]
[358.68292236 166.54808044]
[344.11019897 162.99333191]
[329.53750610 159.43856812]
[314.96481323 155.88380432]
[300.39212036 152.32904053]
[285.78320312 148.92605591]
[271.13970947 145.67523193]
[266.87756348 159.38780212]
[261.51864624 172.71008301]
[255.09822083 185.55448914]
[247.65847778 197.83662415]
[239.24829102 209.47575378]
[229.92295837 220.39541626]
[219.74374390 230.52380371]
[208.77757263 239.79438782]
[197.09648132 248.14620972]
[184.77728271 255.52441406]
[171.90089417 261.88046265]
[158.55198669 267.17263794]
[144.81825256 271.36614990]
[130.78996277 274.43338013]
[116.55933380 276.35424805]
[102.21986389 277.11605835]
[87.86581421 276.71386719]
[73.59149933 275.15026855]
[59.49075317 272.43557739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[22 34]
[23 33]
[54 63]
[55 62]
[56 61]
[106 131]
[107 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
