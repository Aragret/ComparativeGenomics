%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAACCCCGGGGGGGGGGCUGCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCxxxxxxxxxxGCCACCAUGAAUAUUGUACGGUACCAUAAAUACUUGACCACCUGUAGUACCCCCCCCCCCAUAAAAACCC\
) } def
/len { sequence length } bind def

/coor [
[99.51928711 389.79638672]
[86.29908752 382.52392578]
[75.41228485 372.07693481]
[67.60115051 359.16766357]
[63.39827347 344.67636108]
[63.09020233 329.59100342]
[66.69794464 314.94018555]
[73.97551727 301.72280884]
[84.42671967 290.84002686]
[97.33898163 283.03390503]
[111.83192444 278.83660889]
[111.51986694 263.83984375]
[111.20780945 248.84309387]
[110.89575195 233.84634399]
[110.58369446 218.84959412]
[110.27163696 203.85284424]
[109.95958710 188.85607910]
[109.64752960 173.85932922]
[109.33547211 158.86257935]
[109.02341461 143.86582947]
[95.50469208 144.05474854]
[82.69851685 140.21922302]
[71.76073456 132.80046082]
[63.64979935 122.55860138]
[59.04302979 110.49556732]
[58.28063583 97.75743103]
[61.34210968 85.52561188]
[67.85646820 74.90734863]
[77.14461517 66.83544159]
[71.08159637 53.11539078]
[65.01858521 39.39533615]
[58.53042221 25.87114525]
[51.62342072 12.55599022]
[44.71642303 -0.75916529]
[37.80942535 -14.07432079]
[30.90242767 -27.38947678]
[16.89415741 -21.98285294]
[2.37612796 -18.15009880]
[-12.47542572 -15.93773746]
[-27.48022079 -15.37262726]
[-42.45610809 -16.46162796]
[-57.22130203 -19.19151878]
[-71.59655762 -23.52916145]
[-85.40737915 -29.42190170]
[-98.48611450 -36.79820633]
[-110.67399597 -45.56853867]
[-121.82308197 -55.62642670]
[-131.79801941 -66.84977722]
[-140.47773743 -79.10236359]
[-147.75686646 -92.23542786]
[-153.54704285 -106.08956909]
[-157.77796936 -120.49658966]
[-160.39831543 -135.28161621]
[-161.37623596 -150.26516724]
[-160.69987488 -165.26536560]
[-158.37745667 -180.10009766]
[-154.43716431 -194.58930969]
[-148.92681885 -208.55711365]
[-141.91331482 -221.83393860]
[-133.48179626 -234.25862122]
[-123.73461914 -245.68032837]
[-112.79009247 -255.96043396]
[-100.78107452 -264.97412109]
[-87.85335541 -272.61199951]
[-74.16384888 -278.78134155]
[-59.87874603 -283.40725708]
[-45.17144775 -286.43356323]
[-30.22049141 -287.82357788]
[-15.20736694 -287.56036377]
[-0.31431901 -285.64718628]
[14.27786446 -282.10720825]
[28.39204788 -276.98342896]
[41.85689545 -270.33807373]
[54.50896072 -262.25173950]
[66.19465637 -252.82266235]
[76.77212524 -242.16525269]
[86.11297607 -230.40890503]
[94.10381317 -217.69633484]
[100.64763641 -204.18183899]
[105.66500092 -190.02947998]
[109.09501648 -175.41105652]
[110.89604187 -160.50402832]
[111.04620361 -145.48934937]
[109.54368591 -130.54927063]
[106.40673065 -115.86518097]
[101.67341614 -101.61531067]
[95.40119934 -87.97263336]
[87.66621399 -75.10277557]
[78.56236267 -63.16196060]
[68.20015717 -52.29513550]
[56.70538712 -42.63421631]
[44.21758270 -34.29647446]
[51.12458038 -20.98131943]
[58.03157806 -7.66616392]
[64.93857574 5.64899206]
[71.84557343 18.96414757]
[75.14551544 20.37052917]
[77.90731812 23.48085022]
[79.32124329 28.01441383]
[78.73863983 33.33232117]
[84.80165100 47.05237579]
[90.86466980 60.77243042]
[100.92113495 59.23237610]
[111.16876984 60.26086426]
[120.95411682 63.85502243]
[129.63769531 69.84644318]
[136.63574219 77.90814972]
[141.45928955 87.57204437]
[143.74797058 98.25589752]
[143.29629517 109.29833984]
[140.07043457 119.99981689]
[154.48265076 124.15770721]
[168.89486694 128.31559753]
[183.30708313 132.47348022]
[189.90869141 131.23806763]
[195.30654907 133.26156616]
[198.22560120 137.11573792]
[212.45239258 141.86955261]
[227.39129639 136.02073669]
[241.20562744 144.17817688]
[243.29821777 160.08416748]
[232.06379700 171.53700256]
[216.12046814 169.75103760]
[207.69857788 156.09632874]
[193.47178650 151.34251404]
[179.14920044 146.88569641]
[164.73698425 142.72781372]
[150.32476807 138.56991577]
[135.91255188 134.41203308]
[124.02017212 143.55377197]
[124.33222198 158.55052185]
[124.64427948 173.54727173]
[124.95633698 188.54402161]
[125.26839447 203.54078674]
[125.58045197 218.53753662]
[125.89250946 233.53428650]
[126.20455933 248.53103638]
[126.51661682 263.52780151]
[126.82867432 278.52453613]
[141.48367310 282.11532593]
[154.70947266 289.37756348]
[165.60433960 299.81616211]
[173.42544556 312.71939087]
[177.63951111 327.20745850]
[177.95922852 342.29254150]
[174.36280823 356.94613647]
[167.09544373 370.16915894]
[156.65264893 381.05999756]
[143.74641418 388.87609863]
[129.25671387 393.08459473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[29 102]
[30 101]
[31 100]
[32 96]
[33 95]
[34 94]
[35 93]
[36 92]
[111 129]
[112 128]
[113 127]
[114 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
