%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAACAUGACUGGGGGGGGGGAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCxxxxxxxxxxAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUGGCCGUACGCCUAACCCCCCCCCCCCGCUAACAUUACU\
) } def
/len { sequence length } bind def

/coor [
[275.44616699 285.88662720]
[264.69534302 274.70010376]
[254.77070618 262.77416992]
[245.72302246 250.16970825]
[237.59848022 236.95109558]
[230.43862915 223.18579102]
[224.28005981 208.94409180]
[219.15422058 194.29872131]
[215.08735657 179.32446289]
[212.10025024 164.09776306]
[210.20819092 148.69639587]
[209.42088318 133.19900513]
[209.74237061 117.68473053]
[194.80471802 116.31851196]
[179.86706543 114.95229340]
[164.92941284 113.58607483]
[151.55032349 120.13200378]
[138.51222229 111.16992950]
[123.57457733 109.80371094]
[108.63692474 108.43749237]
[93.80989838 110.70891571]
[79.96629333 116.48425293]
[66.12268829 122.25959778]
[52.27908325 128.03494263]
[49.67967987 143.24174500]
[39.25465393 154.61373901]
[24.33058929 158.52217102]
[9.66970444 153.71987915]
[-0.04976624 141.73925781]
[-1.72637546 126.40326691]
[5.17487669 112.60557556]
[18.45182610 104.74897766]
[33.86784744 105.34047699]
[46.50374222 114.19133759]
[60.34734726 108.41599274]
[74.19094849 102.64064789]
[88.03455353 96.86530304]
[88.64193726 89.38993835]
[73.69120789 88.17517090]
[58.74049759 86.96017456]
[59.95573044 72.00948334]
[74.90598297 73.22444153]
[89.85671234 74.43920898]
[90.46409607 66.96384430]
[77.73442841 59.02938461]
[65.00476837 51.09492493]
[52.27510071 43.16046524]
[39.54543686 35.22600555]
[26.81577492 27.29154587]
[11.47915268 31.10777092]
[-2.02070260 22.89014053]
[-5.67456675 7.51402760]
[2.68533349 -5.89819145]
[18.09921646 -9.38928509]
[31.42230034 -0.88805062]
[34.75023651 14.56188107]
[47.47990036 22.49634171]
[60.20956421 30.43080139]
[72.93922424 38.36526108]
[85.66889191 46.29972076]
[98.39855194 54.23418045]
[110.00314331 93.49983978]
[124.94079590 94.86605835]
[139.87844849 96.23227692]
[154.32597351 89.78407288]
[166.29562378 98.64842987]
[181.23327637 100.01464081]
[196.17092896 101.38085938]
[211.10858154 102.74707794]
[213.41651917 88.39303589]
[216.67976379 74.22578430]
[220.88363647 60.30881882]
[226.00930786 46.70452118]
[232.03373718 33.47386932]
[238.92993164 20.67615891]
[246.66693115 8.36875153]
[255.21005249 -3.39319730]
[264.52096558 -14.55697536]
[274.55792236 -25.07255363]
[285.27587891 -34.89281082]
[296.62683105 -43.97374344]
[308.55984497 -52.27465820]
[321.02142334 -59.75837326]
[333.95568848 -66.39135742]
[347.30462646 -72.14389038]
[361.00842285 -76.99021912]
[375.00564575 -80.90863800]
[389.23348999 -83.88159943]
[403.62820435 -85.89580536]
[418.12527466 -86.94225311]
[432.65969849 -87.01626587]
[447.16632080 -86.11754608]
[461.58007812 -84.25014496]
[475.83642578 -81.42245483]
[489.87142944 -77.64717865]
[503.62216187 -72.94125366]
[517.02697754 -67.32581329]
[530.02587891 -60.82603836]
[542.56054688 -53.47109222]
[554.57476807 -45.29397202]
[566.01477051 -36.33134842]
[576.82928467 -26.62341499]
[586.96978760 -16.21371269]
[596.39086914 -5.14892149]
[605.05029297 6.52134371]
[612.90930176 18.74475288]
[619.93267822 31.46649933]
[626.08898926 44.62954330]
[631.35058594 58.17486572]
[635.69390869 72.04174042]
[639.09954834 86.16799927]
[641.55230713 100.49030304]
[643.04113770 114.94445801]
[643.55938721 129.46566772]
[643.10479736 143.98881531]
[641.67944336 158.44882202]
[639.28967285 172.78085327]
[653.88409424 176.24557495]
[668.47845459 179.71028137]
[682.83551025 172.55113220]
[697.32299805 179.44270325]
[700.82720947 195.09835815]
[690.66015625 207.50843811]
[674.62103271 207.15296936]
[665.01373291 194.30465698]
[650.41937256 190.83995056]
[635.82495117 187.37522888]
[631.19464111 202.17645264]
[625.51904297 216.60939026]
[618.82702637 230.60035706]
[611.15283203 244.07786560]
[602.53558350 256.97308350]
[593.01922607 269.22012329]
[582.65234375 280.75640869]
[571.48791504 291.52304077]
[559.58294678 301.46499634]
[546.99810791 310.53146362]
[533.79772949 318.67614746]
[520.04913330 325.85739136]
[505.82263184 332.03848267]
[491.19079590 337.18786621]
[476.22833252 341.27920532]
[461.01168823 344.29156494]
[445.61853027 346.20950317]
[430.12747192 347.02322388]
[414.61764526 346.72854614]
[399.16821289 345.32693481]
[383.85815430 342.82550049]
[368.76556396 339.23699951]
[353.96762085 334.57974243]
[339.53982544 328.87744141]
[325.55593872 322.15921021]
[312.08734131 314.45935059]
[299.20285034 305.81710815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 69]
[14 68]
[15 67]
[16 66]
[18 64]
[19 63]
[20 62]
[21 37]
[22 36]
[23 35]
[24 34]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
