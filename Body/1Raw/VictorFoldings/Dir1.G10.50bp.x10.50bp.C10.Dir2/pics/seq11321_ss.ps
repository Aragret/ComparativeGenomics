%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGCCCCCGGGGGGGGGGGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUAAAUxxxxxxxxxxGGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCCCCCCCCCCCAAAACCCCC\
) } def
/len { sequence length } bind def

/coor [
[84.98612213 351.71713257]
[71.14018250 345.70111084]
[59.43151855 336.17169189]
[50.72899246 323.83602905]
[45.67839432 309.60949707]
[44.65450287 294.54782104]
[47.73329926 279.76864624]
[54.68632126 266.36871338]
[64.99760437 255.34239197]
[77.90198517 247.50788879]
[92.44187164 243.44657898]
[92.44187164 228.44657898]
[92.44187164 213.44657898]
[92.44187164 198.44657898]
[92.44187164 183.44657898]
[92.44187164 168.44657898]
[92.44187164 153.44657898]
[92.44187164 138.44657898]
[92.44187164 123.44657135]
[92.44187164 108.44657135]
[80.82103729 117.93109894]
[65.87914276 116.61214447]
[56.09949875 105.23854828]
[57.03454590 90.26772308]
[68.15340424 80.19940948]
[83.14330292 80.74993134]
[93.49422455 91.60816956]
[95.36183929 76.72489166]
[87.80709839 59.96464157]
[98.86897278 46.37659836]
[100.42655182 31.45768547]
[101.98413849 16.53877449]
[103.54171753 1.61986172]
[88.75984192 -0.96411729]
[74.19146729 -4.56176186]
[59.90600967 -9.15592766]
[45.97154999 -14.72472191]
[32.45449066 -21.24160576]
[19.41924667 -28.67552185]
[6.92793989 -36.99104691]
[-4.95990276 -46.14854813]
[-16.18762970 -56.10439301]
[-26.70173645 -66.81112671]
[-36.45211792 -78.21773529]
[-45.39230728 -90.26985931]
[-53.47970200 -102.91006470]
[-60.67575836 -116.07810974]
[-66.94618988 -129.71124268]
[-72.26110840 -143.74450684]
[-76.59518433 -158.11100769]
[-79.92777252 -172.74229431]
[-82.24298096 -187.56863403]
[-83.52978516 -202.51937866]
[-83.78205109 -217.52328491]
[-82.99857330 -232.50883484]
[-81.18309021 -247.40463257]
[-78.34424591 -262.13967896]
[-74.49558258 -276.64376831]
[-69.65541840 -290.84774780]
[-63.84684372 -304.68399048]
[-57.09752274 -318.08648682]
[-49.43962860 -330.99142456]
[-40.90964890 -343.33728027]
[-31.54823494 -355.06521606]
[-21.39999962 -366.11935425]
[-10.51330566 -376.44702148]
[1.05996978 -385.99899292]
[13.26467228 -394.72973633]
[26.04264069 -402.59765625]
[39.33298111 -409.56524658]
[53.07236099 -415.59933472]
[67.19530487 -420.67114258]
[81.63450623 -424.75650024]
[96.32115173 -427.83593750]
[111.18526459 -429.89480591]
[126.15599823 -430.92324829]
[141.16201782 -430.91638184]
[156.13180542 -429.87426758]
[170.99403381 -427.80181885]
[185.67787170 -424.70898438]
[200.11332703 -420.61041260]
[214.23162842 -415.52572632]
[227.96548462 -409.47909546]
[241.24946594 -402.49935913]
[254.02023315 -394.61975098]
[266.21694946 -385.87786865]
[277.78149414 -376.31533813]
[288.65875244 -365.97772217]
[298.79687500 -354.91433716]
[308.14758301 -343.17782593]
[316.66629028 -330.82418823]
[324.31237793 -317.91226196]
[331.04946899 -304.50360107]
[336.84539795 -290.66207886]
[341.67257690 -276.45364380]
[345.50799561 -261.94607544]
[348.33337402 -247.20843506]
[350.13525391 -232.31097412]
[350.90502930 -217.32472229]
[350.63903809 -202.32106018]
[349.33859253 -187.37149048]
[347.00982666 -172.54727173]
[343.66387939 -157.91903687]
[339.31668091 -143.55648804]
[333.98895264 -129.52809143]
[327.70605469 -115.90069580]
[320.49798584 -102.73923492]
[312.39904785 -90.10642242]
[303.44784546 -78.06246948]
[293.68704224 -66.66477203]
[283.16314697 -55.96764755]
[271.92633057 -46.02206802]
[260.03012085 -36.87542725]
[247.53123474 -28.57131958]
[234.48921204 -21.14931488]
[220.96620178 -14.64478397]
[207.02665710 -9.08872318]
[192.73701477 -4.50761032]
[178.16534424 -0.92327672]
[163.38111877 1.64719641]
[148.45478821 3.19155979]
[133.45745850 3.70245337]
[118.46063232 3.17744279]
[116.90304565 18.09635544]
[115.34546661 33.01526642]
[113.78788757 47.93418121]
[121.17653656 57.56304932]
[119.95853424 70.04244995]
[110.24511719 78.59249878]
[108.37750244 93.47578430]
[107.44187164 108.44657135]
[107.44187164 123.44657135]
[107.44187164 138.44657898]
[107.44187164 153.44657898]
[107.44187164 168.44657898]
[107.44187164 183.44657898]
[107.44187164 198.44657898]
[107.44187164 213.44657898]
[107.44187164 228.44657898]
[107.44187164 243.44657898]
[121.98175812 247.50788879]
[134.88613892 255.34239197]
[145.19743347 266.36871338]
[152.15045166 279.76864624]
[155.22924805 294.54782104]
[154.20535278 309.60949707]
[149.15475464 323.83602905]
[140.45222473 336.17169189]
[128.74356079 345.70111084]
[114.89762878 351.71713257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[27 130]
[28 129]
[30 126]
[31 125]
[32 124]
[33 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
