%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCGACCCGGGGGGGGGGUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAxxxxxxxxxxCCUACUCCACUCAAGCACUAUAGUUGUAGCAGGAAUCUUCUUACUCAUCCCCCCCCCCCCGCUUCCACCC\
) } def
/len { sequence length } bind def

/coor [
[184.28273010 124.57049561]
[174.14784241 116.93687439]
[164.46478271 108.73753357]
[155.26510620 99.99916840]
[146.57875061 90.75021362]
[138.43402100 81.02077484]
[126.35404205 89.91312408]
[114.27404785 98.80547333]
[108.49156952 111.53553772]
[94.61830139 113.27451324]
[82.53831482 122.16686249]
[70.45832062 131.05921936]
[58.37833405 139.95156860]
[51.85145950 154.36372375]
[37.01491928 155.67764282]
[24.93493271 164.56999207]
[12.85494328 173.46234131]
[0.77495521 182.35470581]
[-11.30503273 191.24705505]
[-23.38502121 200.13940430]
[-29.46226883 215.37091064]
[-45.72838211 217.45552063]
[-55.45018005 204.24874878]
[-48.62670898 189.33660889]
[-32.27737045 188.05940247]
[-20.19738197 179.16705322]
[-8.11739445 170.27470398]
[3.96259379 161.38235474]
[16.04258156 152.49000549]
[28.12257004 143.59765625]
[33.78540421 129.82153320]
[49.48598480 127.87157440]
[61.56597137 118.97922516]
[73.64595795 110.08687592]
[85.72595215 101.19452667]
[91.50843048 88.46446228]
[105.38169861 86.72548676]
[117.46168518 77.83313751]
[129.54167175 68.94078827]
[119.27960205 52.45855331]
[110.49464417 35.14437103]
[103.25372314 17.13027763]
[97.61195374 -1.44635236]
[93.61228943 -20.44386482]
[91.28513336 -39.71740341]
[90.64815521 -59.12001419]
[91.70613098 -78.50376129]
[94.45091248 -97.72087860]
[98.86148834 -116.62485504]
[104.90415955 -135.07157898]
[112.53278351 -152.92044067]
[121.68911743 -170.03538513]
[132.30328369 -186.28596497]
[144.29429626 -201.54833984]
[157.57064819 -215.70617676]
[172.03109741 -228.65159607]
[187.56530762 -240.28596497]
[204.05482483 -250.52064514]
[221.37387085 -259.27767944]
[239.39036560 -266.49035645]
[257.96691895 -272.10375977]
[276.96188354 -276.07519531]
[296.23043823 -278.37445068]
[295.60644531 -293.36145020]
[294.98248291 -308.34848022]
[294.35848999 -323.33551025]
[293.73452759 -338.32250977]
[279.44885254 -343.51754761]
[268.24206543 -353.78771973]
[261.82308960 -367.56686401]
[261.17077637 -382.75378418]
[266.38461304 -397.03259277]
[276.66949463 -408.22589111]
[290.45709229 -414.62673950]
[305.64486694 -415.25906372]
[319.91680908 -410.02645874]
[331.09652710 -399.72686768]
[337.47924805 -385.93084717]
[338.09161377 -370.74227905]
[332.84024048 -356.47723389]
[322.52590942 -345.31103516]
[308.72152710 -338.94650269]
[309.34552002 -323.95947266]
[309.96948242 -308.97244263]
[310.59347534 -293.98544312]
[311.21743774 -278.99841309]
[323.89617920 -278.73800659]
[336.53952026 -277.75479126]
[349.10626221 -276.05203247]
[361.55554199 -273.63522339]
[373.84683228 -270.51223755]
[385.94003296 -266.69323730]
[397.79583740 -262.19061279]
[409.37557983 -257.01904297]
[420.64160156 -251.19535828]
[431.55718994 -244.73851013]
[442.08682251 -237.66949463]
[452.19613647 -230.01133728]
[461.85229492 -221.78894043]
[471.02380371 -213.02909851]
[479.68081665 -203.76031494]
[487.79510498 -194.01275635]
[495.34024048 -183.81816101]
[502.29165649 -173.20970154]
[508.62673950 -162.22192383]
[514.32482910 -150.89060974]
[519.36730957 -139.25262451]
[523.73785400 -127.34588623]
[527.42218018 -115.20914459]
[530.40820312 -102.88191223]
[532.68627930 -90.40432739]
[534.24896240 -77.81701660]
[535.09112549 -65.16095734]
[535.21008301 -52.47737503]
[534.60534668 -39.80755234]
[533.27893066 -27.19274902]
[531.23510742 -14.67403984]
[528.48052979 -2.29219031]
[525.02416992 9.91248226]
[520.87725830 21.90023613]
[516.05334473 33.63203049]
[510.56799316 45.06966782]
[504.43917847 56.17589569]
[497.68679810 66.91455078]
[490.33285522 77.25065613]
[482.40124512 87.15055084]
[473.91778564 96.58200073]
[464.91012573 105.51427460]
[455.40756226 113.91829681]
[445.44104004 121.76667786]
[435.04296875 129.03385925]
[424.24725342 135.69618225]
[413.08901978 141.73191833]
[401.60458374 147.12142944]
[389.83132935 151.84715271]
[377.80761719 155.89366150]
[365.57257080 159.24781799]
[353.16601562 161.89863586]
[340.62835693 163.83752441]
[328.00042725 165.05812073]
[315.32333374 165.55644226]
[302.63833618 165.33088684]
[289.98675537 164.38214111]
[277.40982056 162.71330261]
[264.94842529 160.32978821]
[252.64315796 157.23933411]
[240.53411865 153.45201111]
[228.66072083 148.98014832]
[217.06163025 143.83827209]
[205.77462769 138.04312134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[10 35]
[11 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
