%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUUUUAUAUCUGGGGGGGGGGUCUUCGAAACCACACUUAUCCCCACCUUGGCUAUCAUCACCCGAUGAGGCxxxxxxxxxxCUAGACCUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCCCCCCCCCCCACAUUUUAUUUCU\
) } def
/len { sequence length } bind def

/coor [
[85.10333252 172.49229431]
[70.81646729 168.01004028]
[57.72424316 160.74375916]
[46.36259460 150.99090576]
[37.19661713 139.15071106]
[30.60152435 125.70787811]
[26.84728813 111.21266937]
[26.08759117 96.25847626]
[28.35353088 81.45743561]
[33.55234909 67.41545105]
[41.47123337 54.70732117]
[51.78601837 43.85327148]
[64.07446289 35.29761124]
[77.83353424 29.39057350]
[92.50000000 26.37396431]
[92.50000000 11.37396336]
[92.50000000 -3.62603641]
[92.50000000 -18.62603569]
[92.50000000 -33.62603760]
[92.50000000 -48.62603760]
[92.50000000 -63.62603760]
[92.50000000 -78.62603760]
[92.50000000 -93.62603760]
[92.50000000 -108.62603760]
[77.51963043 -109.46720886]
[62.60999298 -111.14701080]
[47.81799698 -113.66016388]
[33.19018936 -116.99876404]
[18.77258873 -121.15229797]
[4.61056042 -126.10769653]
[-9.25133514 -131.84938049]
[-22.76948547 -138.35926819]
[-35.90135193 -145.61688232]
[-48.60562515 -153.59941101]
[-60.84232712 -162.28169250]
[-72.57295227 -171.63644409]
[-83.76060486 -181.63423157]
[-94.37007141 -192.24357605]
[-104.36797333 -203.43110657]
[-113.72285461 -215.16163635]
[-122.40528107 -227.39823914]
[-130.38793945 -240.10241699]
[-137.64570618 -253.23420715]
[-144.15574646 -266.75228882]
[-149.89758301 -280.61410522]
[-154.85314941 -294.77609253]
[-159.00683594 -309.19363403]
[-162.34559631 -323.82141113]
[-164.85891724 -338.61337280]
[-166.53887939 -353.52301025]
[-167.38021851 -368.50335693]
[-167.38027954 -383.50732422]
[-166.53904724 -398.48770142]
[-164.85919189 -413.39733887]
[-162.34597778 -428.18933105]
[-159.00732422 -442.81710815]
[-154.85374451 -457.23471069]
[-149.89828491 -471.39669800]
[-144.15655518 -485.25857544]
[-137.64662170 -498.77670288]
[-130.38894653 -511.90853882]
[-122.40638733 -524.61279297]
[-113.72404480 -536.84948730]
[-104.36925507 -548.58007812]
[-94.37142944 -559.76763916]
[-83.76204681 -570.37707520]
[-72.57447052 -580.37493896]
[-60.84391022 -589.72979736]
[-48.60727310 -598.41217041]
[-35.90306473 -606.39477539]
[-22.77124786 -613.65252686]
[-9.25314713 -620.16247559]
[4.60870600 -625.90429688]
[18.77069664 -630.85980225]
[33.18826675 -635.01342773]
[47.81605148 -638.35211182]
[62.60802841 -640.86541748]
[77.51765442 -642.54528809]
[92.49801636 -643.38659668]
[107.50198364 -643.38659668]
[122.48234558 -642.54528809]
[137.39196777 -640.86541748]
[152.18394470 -638.35211182]
[166.81173706 -635.01342773]
[181.22930908 -630.85980225]
[195.39129639 -625.90429688]
[209.25314331 -620.16247559]
[222.77124023 -613.65252686]
[235.90306091 -606.39477539]
[248.60726929 -598.41217041]
[260.84390259 -589.72979736]
[272.57446289 -580.37493896]
[283.76205444 -570.37707520]
[294.37142944 -559.76763916]
[304.36926270 -548.58007812]
[313.72406006 -536.84948730]
[322.40637207 -524.61279297]
[330.38894653 -511.90853882]
[337.64660645 -498.77670288]
[344.15655518 -485.25857544]
[349.89828491 -471.39669800]
[354.85375977 -457.23471069]
[359.00732422 -442.81710815]
[362.34597778 -428.18933105]
[364.85919189 -413.39733887]
[366.53906250 -398.48770142]
[367.38027954 -383.50732422]
[367.38021851 -368.50335693]
[366.53887939 -353.52301025]
[364.85891724 -338.61337280]
[362.34558105 -323.82141113]
[359.00683594 -309.19363403]
[354.85314941 -294.77609253]
[349.89758301 -280.61410522]
[344.15576172 -266.75228882]
[337.64569092 -253.23420715]
[330.38793945 -240.10241699]
[322.40527344 -227.39823914]
[313.72283936 -215.16163635]
[304.36798096 -203.43110657]
[294.37005615 -192.24357605]
[283.76058960 -181.63423157]
[272.57296753 -171.63644409]
[260.84231567 -162.28169250]
[248.60562134 -153.59941101]
[235.90135193 -145.61688232]
[222.76948547 -138.35926819]
[209.25134277 -131.84938049]
[195.38943481 -126.10769653]
[181.22741699 -121.15229797]
[166.80981445 -116.99876404]
[152.18200684 -113.66016388]
[137.39001465 -111.14701080]
[122.48036957 -109.46720886]
[107.50000000 -108.62603760]
[107.50000000 -93.62603760]
[107.50000000 -78.62603760]
[107.50000000 -63.62603760]
[107.50000000 -48.62603760]
[107.50000000 -33.62603760]
[107.50000000 -18.62603569]
[107.50000000 -3.62603641]
[107.50000000 11.37396336]
[107.50000000 26.37396431]
[122.16646576 29.39057350]
[135.92553711 35.29761124]
[148.21398926 43.85327148]
[158.52876282 54.70732117]
[166.44764709 67.41545105]
[171.64646912 81.45743561]
[173.91241455 96.25847626]
[173.15270996 111.21266937]
[169.39848328 125.70787811]
[162.80337524 139.15071106]
[153.63740540 150.99090576]
[142.27575684 160.74375916]
[129.18353271 168.01004028]
[114.89666748 172.49229431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
