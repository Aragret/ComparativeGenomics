%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAACAACAGGGGGGGGGGACCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCxxxxxxxxxxACUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACCCCCCCCCCCAUUAACAACA\
) } def
/len { sequence length } bind def

/coor [
[84.67888641 426.89089966]
[71.45869446 419.61840820]
[60.57188797 409.17141724]
[52.76075745 396.26217651]
[48.55787659 381.77084351]
[48.24980545 366.68551636]
[51.85754776 352.03469849]
[59.13512039 338.81729126]
[69.58632660 327.93453979]
[82.49858856 320.12838745]
[96.99152374 315.93109131]
[96.67946625 300.93435669]
[96.36741638 285.93759155]
[96.05535889 270.94082642]
[95.74330139 255.94407654]
[95.43124390 240.94732666]
[95.11918640 225.95057678]
[94.80712891 210.95382690]
[94.49507904 195.95706177]
[94.18302155 180.96031189]
[79.40694427 178.51329041]
[65.33200836 173.39305115]
[52.43744278 165.77395630]
[41.16227722 155.91540527]
[31.89040184 144.15306091]
[24.93750381 130.88740540]
[20.54031372 116.57009888]
[18.84854507 101.68862152]
[19.91980171 86.74964905]
[23.71760750 72.26181793]
[30.11265564 58.71841812]
[38.88721085 46.58055878]
[49.74251556 36.26150894]
[62.30897903 28.11260986]
[76.15872955 22.41131592]
[90.82022858 19.35173988]
[90.50817108 4.35498714]
[90.19611359 -10.64176655]
[89.88405609 -25.63852119]
[89.57199860 -40.63527298]
[74.59642792 -41.65009689]
[59.76915359 -43.98450851]
[45.20621490 -47.62022781]
[31.02159500 -52.52880859]
[17.32630730 -58.67182922]
[4.22753763 -66.00121307]
[-8.17219448 -74.45960236]
[-19.77584457 -83.98078156]
[-30.49259377 -94.49024963]
[-40.23857117 -105.90574646]
[-48.93749619 -118.13793182]
[-56.52128983 -131.09106445]
[-62.93059540 -144.66377258]
[-68.11524963 -158.74983215]
[-72.03468323 -173.23898315]
[-74.65820312 -188.01785278]
[-75.96529388 -202.97074890]
[-75.94571686 -217.98065186]
[-74.59963226 -232.93008423]
[-71.93756104 -247.70205688]
[-67.98035431 -262.18093872]
[-62.75897217 -276.25341797]
[-56.31428528 -289.80935669]
[-48.69673157 -302.74267578]
[-39.96592712 -314.95211792]
[-30.19020844 -326.34216309]
[-19.44608116 -336.82363892]
[-7.81763601 -346.31451416]
[4.60411739 -354.74053955]
[17.72196007 -362.03573608]
[31.43322563 -368.14300537]
[45.63059998 -373.01455688]
[60.20297241 -376.61230469]
[75.03629303 -378.90802002]
[90.01445770 -379.88378906]
[105.02024841 -379.53192139]
[119.93622589 -377.85522461]
[134.64564514 -374.86682129]
[149.03338623 -370.59005737]
[162.98683167 -365.05844116]
[176.39678955 -358.31524658]
[189.15829468 -350.41323853]
[201.17147827 -341.41430664]
[212.34233093 -331.38885498]
[222.58338928 -320.41531372]
[231.81452942 -308.57962036]
[239.96350098 -295.97439575]
[246.96652222 -282.69827271]
[252.76876831 -268.85516357]
[257.32485962 -254.55343628]
[260.59912109 -239.90498352]
[262.56591797 -225.02449036]
[263.20986938 -210.02838135]
[262.52590942 -195.03405762]
[260.51943970 -180.15885925]
[257.20611572 -165.51919556]
[252.61192322 -151.22966003]
[246.77276611 -137.40208435]
[239.73437500 -124.14468384]
[231.55181885 -111.56122589]
[222.28913879 -99.75019836]
[212.01884460 -88.80402374]
[200.82130432 -78.80838776]
[188.78416443 -69.84151459]
[176.00161743 -61.97358704]
[162.57373047 -55.26617813]
[148.60557556 -49.77178955]
[134.20648193 -45.53341675]
[119.48915100 -42.58423615]
[104.56875610 -40.94733047]
[104.88081360 -25.95057678]
[105.19287109 -10.95382309]
[105.50492096 4.04293060]
[105.81697845 19.03968430]
[120.59305573 21.48671532]
[134.66798401 26.60694504]
[147.56256104 34.22604370]
[158.83772278 44.08459473]
[168.10960388 55.84694290]
[175.06250000 69.11260223]
[179.45968628 83.42990112]
[181.15145874 98.31137848]
[180.08020020 113.25035095]
[176.28239441 127.73818207]
[169.88734436 141.28158569]
[161.11279297 153.41944885]
[150.25747681 163.73849487]
[137.69102478 171.88739014]
[123.84127045 177.58868408]
[109.17977142 180.64825439]
[109.49182892 195.64501953]
[109.80388641 210.64176941]
[110.11594391 225.63851929]
[110.42800140 240.63526917]
[110.74005127 255.63203430]
[111.05210876 270.62878418]
[111.36416626 285.62554932]
[111.67622375 300.62228394]
[111.98828125 315.61904907]
[126.64327240 319.20980835]
[139.86907959 326.47207642]
[150.76394653 336.91067505]
[158.58505249 349.81387329]
[162.79911804 364.30194092]
[163.11883545 379.38702393]
[159.52241516 394.04064941]
[152.25505066 407.26364136]
[141.81224060 418.15447998]
[128.90602112 425.97061157]
[114.41632843 430.17907715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
