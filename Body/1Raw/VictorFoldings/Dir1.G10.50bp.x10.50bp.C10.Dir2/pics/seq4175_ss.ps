%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACAACAUAGGGGGGGGGGUGACGCACUCUCCCCUGAACUCUACACAACAUAUUUUGUCACCAAGACCCxxxxxxxxxxAUAUUUUGUCACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCCCCCCCCCCCGAACAGCAUA\
) } def
/len { sequence length } bind def

/coor [
[70.91865540 343.38845825]
[59.03438187 334.11334229]
[49.71567154 322.26324463]
[43.50430679 308.52706909]
[40.76140594 293.70343018]
[41.64643478 278.65417480]
[46.10794067 264.25424194]
[53.88653946 251.34080505]
[64.52999115 240.66464233]
[77.41950226 232.84645081]
[91.80568695 228.34078979]
[90.87005615 213.36999512]
[89.93443298 198.39920044]
[88.99880219 183.42840576]
[88.06317139 168.45762634]
[87.12754059 153.48683167]
[86.19191742 138.51603699]
[85.25628662 123.54524994]
[85.72065735 96.85695648]
[74.84182739 86.52974701]
[63.96300507 76.20254517]
[53.08417892 65.87533569]
[42.20535278 55.54813385]
[31.32652855 45.22092819]
[19.98899460 55.06043243]
[7.75472784 63.75975800]
[-5.26203918 71.23767853]
[-18.93976974 77.42436981]
[-33.15075684 82.26207733]
[-47.76231003 85.70562744]
[-62.63800430 87.72286224]
[-77.63894653 88.29495239]
[-92.62506866 87.41654968]
[-107.45645142 85.09586334]
[-121.99461365 81.35456085]
[-136.10382080 76.22756958]
[-149.65231323 69.76276398]
[-162.51361084 62.02050781]
[-174.56761169 53.07308578]
[-185.70179749 43.00403595]
[-195.81216431 31.90738297]
[-204.80435181 19.88672829]
[-212.59439087 7.05431032]
[-219.10952759 -6.47005510]
[-224.28894043 -20.56009102]
[-228.08428955 -35.08423996]
[-230.46009827 -49.90689468]
[-231.39422607 -64.88964844]
[-230.87791443 -79.89260864]
[-228.91601562 -94.77570343]
[-225.52682495 -109.39996338]
[-220.74198914 -123.62883759]
[-214.60620117 -137.32948303]
[-207.17674255 -150.37396240]
[-198.52296448 -162.64048767]
[-188.72569275 -174.01454163]
[-177.87638855 -184.38989258]
[-166.07635498 -193.66969299]
[-153.43576050 -201.76730347]
[-140.07264709 -208.60708618]
[-126.11177063 -214.12519836]
[-111.68349457 -218.27011108]
[-96.92253113 -221.00312805]
[-81.96669769 -222.29873657]
[-66.95564270 -222.14483643]
[-52.02951813 -220.54284668]
[-37.32769012 -217.50775146]
[-22.98743439 -213.06787109]
[-9.14263821 -207.26466370]
[4.07742691 -200.15232849]
[16.54932594 -191.79725647]
[28.15660858 -182.27745056]
[38.79090118 -171.68182373]
[48.35290909 -160.10929871]
[56.75334930 -147.66790771]
[63.91379547 -134.47383118]
[69.76737976 -120.65026855]
[74.25946045 -106.32627869]
[77.34809113 -91.63560486]
[79.00442505 -76.71540833]
[79.21300507 -61.70501328]
[77.97187805 -46.74456406]
[75.29264069 -31.97373962]
[71.20029449 -17.53046227]
[65.73307037 -3.54958510]
[58.94200134 9.83835316]
[50.89049530 22.50834846]
[41.65373230 34.34210205]
[52.53255844 44.66930771]
[63.41138458 54.99651337]
[74.29020691 65.32371521]
[85.16903687 75.65092468]
[96.04785919 85.97812653]
[110.50254822 89.98587036]
[125.14604950 86.73503876]
[139.78955078 83.48421478]
[154.43304443 80.23339081]
[157.62396240 77.07434082]
[161.29412842 75.31340790]
[164.93174744 74.92655182]
[168.08796692 75.72165680]
[170.42759705 77.37498474]
[185.29064941 75.35264587]
[189.51202393 60.72049713]
[199.32485962 49.07453918]
[213.02899170 42.43250275]
[228.25010681 41.94515991]
[242.35105896 47.69695282]
[252.88876343 58.69133759]
[258.03750610 73.02348328]
[256.90524292 88.21025085]
[249.68812561 101.62043762]
[237.63658142 110.93065643]
[222.83860779 114.52785492]
[207.85804749 111.78878784]
[195.29035950 103.18802643]
[187.31297302 90.21569061]
[172.44993591 92.23802948]
[157.68388367 94.87689209]
[143.04037476 98.12771606]
[128.39688110 101.37854004]
[113.75337219 104.62937164]
[128.69281006 103.28279877]
[141.33056641 111.36283875]
[146.37794495 125.48813629]
[141.72270203 139.74746704]
[129.31298828 148.17355347]
[114.34204865 147.24020386]
[103.07499695 137.33799744]
[100.22708130 122.60961914]
[101.16270447 137.58041382]
[102.09833527 152.55120850]
[103.03396606 167.52198792]
[103.96958923 182.49278259]
[104.90522003 197.46357727]
[105.84085083 212.43437195]
[106.77648163 227.40516663]
[121.61170959 230.08457947]
[135.37434387 236.23709106]
[147.26423645 245.50497437]
[156.59013367 257.34942627]
[162.80981445 271.08184814]
[165.56170654 285.90380859]
[164.68580627 300.95358276]
[160.23303223 315.35623169]
[152.46226501 328.27438354]
[141.82528687 338.95700073]
[128.94052124 346.78298950]
[114.55706787 351.29739380]
[99.51116180 352.23770142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[94 122]
[95 121]
[96 120]
[97 119]
[102 118]
[103 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
