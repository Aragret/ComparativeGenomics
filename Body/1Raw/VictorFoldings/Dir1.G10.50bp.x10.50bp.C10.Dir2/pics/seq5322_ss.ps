%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUAAUUUGGGGGGGGGGAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAxxxxxxxxxxAUUUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGUAAGUUGCACCCCCCCCCCAUACUUAAUUU\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 363.13275146]
[71.01555634 357.57974243]
[58.81560135 348.71340942]
[49.20452881 337.09109497]
[42.78650284 323.44338989]
[39.96496582 308.62820435]
[40.91728210 293.57684326]
[45.58358765 279.23541260]
[53.67055511 266.50546265]
[64.66983032 256.18716431]
[77.88998413 248.92919922]
[92.50000000 245.18775940]
[92.50000000 230.18775940]
[92.50000000 215.18775940]
[92.50000000 200.18775940]
[92.50000000 185.18775940]
[92.50000000 170.18775940]
[92.50000000 155.18775940]
[92.50000000 140.18775940]
[92.50000000 125.18776703]
[92.50000000 110.18776703]
[92.03807068 95.19487762]
[91.11466217 80.22332764]
[90.19124603 65.25177765]
[89.26782990 50.28022766]
[74.26295471 50.27122498]
[59.28765869 49.32939148]
[44.39988327 47.45836258]
[29.65723228 44.66538620]
[15.11673737 40.96126556]
[0.83465487 36.36032867]
[-13.13376141 30.88037491]
[-26.73446846 24.54261017]
[-39.91484833 17.37154961]
[-52.62390900 9.39494038]
[-64.81247711 0.64364064]
[-76.43340302 -8.84849262]
[-87.44172668 -19.04473495]
[-97.79486084 -29.90563774]
[-107.45273590 -41.38918686]
[-116.37800598 -53.45094681]
[-124.53613281 -66.04425812]
[-131.89555359 -79.12039948]
[-138.42779541 -92.62877655]
[-144.10758972 -106.51713562]
[-148.91296387 -120.73174286]
[-152.82531738 -135.21759033]
[-155.82951355 -149.91865540]
[-157.91394043 -164.77806091]
[-159.07052612 -179.73829651]
[-159.29479980 -194.74150085]
[-158.58590698 -209.72962952]
[-156.94656372 -224.64469910]
[-154.38311768 -239.42898560]
[-150.90550232 -254.02531433]
[-146.52716064 -268.37719727]
[-141.26504517 -282.42910767]
[-135.13948059 -296.12670898]
[-128.17420959 -309.41699219]
[-120.39614868 -322.24853516]
[-111.83539581 -334.57168579]
[-102.52507782 -346.33877563]
[-92.50121307 -357.50427246]
[-81.80258179 -368.02502441]
[-70.47057343 -377.86026001]
[-58.54902649 -386.97198486]
[-46.08406830 -395.32489014]
[-33.12392426 -402.88671875]
[-19.71873283 -409.62817383]
[-5.92035580 -415.52322388]
[8.21782207 -420.54898071]
[22.64110184 -424.68606567]
[37.29368210 -427.91848755]
[52.11887741 -430.23367310]
[67.05933380 -431.62271118]
[82.05723572 -432.08020020]
[97.05457306 -431.60440063]
[111.99331665 -430.19714355]
[126.81568146 -427.86386108]
[141.46430969 -424.61358643]
[155.88252258 -420.45889282]
[170.01455688 -415.41586304]
[183.80574036 -409.50402832]
[197.20268250 -402.74618530]
[210.15359497 -395.16857910]
[222.60835266 -386.80044556]
[234.51876831 -377.67419434]
[245.83877563 -367.82513428]
[256.52456665 -357.29135132]
[266.53479004 -346.11361694]
[275.83074951 -334.33517456]
[284.37646484 -322.00158691]
[292.13885498 -309.16055298]
[299.08792114 -295.86178589]
[305.19674683 -282.15673828]
[310.44171143 -268.09838867]
[314.80255127 -253.74118042]
[318.26235962 -239.14062500]
[320.80773926 -224.35321045]
[322.42889404 -209.43617249]
[323.11950684 -194.44718933]
[322.87692261 -179.44425964]
[321.70208740 -164.48544312]
[319.59951782 -149.62860107]
[316.57739258 -134.93121338]
[312.64733887 -120.45014191]
[307.82464600 -106.24140930]
[302.12789917 -92.35999298]
[295.57919312 -78.85959625]
[288.20382690 -65.79244995]
[280.03033447 -53.20909882]
[271.09036255 -41.15823746]
[261.41845703 -29.68648148]
[251.05209351 -18.83821869]
[240.03134155 -8.65541744]
[228.39883423 0.82252890]
[216.19960022 9.55894947]
[203.48080444 17.52004623]
[190.29168701 24.67501831]
[176.68325806 30.99618340]
[162.70816040 36.45908737]
[148.42048645 41.04259491]
[133.87547302 44.72896957]
[119.12942505 47.50395584]
[104.23937988 49.35681534]
[105.16279602 64.32836151]
[106.08621216 79.29991150]
[107.00962067 94.27146149]
[109.56508636 97.25135040]
[110.76632690 101.35851288]
[110.13391113 105.94934082]
[107.50000000 110.18776703]
[107.50000000 125.18776703]
[107.50000000 140.18775940]
[107.50000000 155.18775940]
[107.50000000 170.18775940]
[107.50000000 185.18775940]
[107.50000000 200.18775940]
[107.50000000 215.18775940]
[107.50000000 230.18775940]
[107.50000000 245.18775940]
[122.11001587 248.92919922]
[135.33016968 256.18716431]
[146.32945251 266.50546265]
[154.41641235 279.23541260]
[159.08271790 293.57684326]
[160.03503418 308.62820435]
[157.21350098 323.44338989]
[150.79547119 337.09109497]
[141.18440247 348.71340942]
[128.98443604 357.57974243]
[114.96250153 363.13275146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 128]
[23 127]
[24 126]
[25 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
