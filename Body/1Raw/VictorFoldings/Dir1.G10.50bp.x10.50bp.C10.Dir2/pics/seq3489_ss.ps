%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUACCAUCGGGGGGGGGGACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUxxxxxxxxxxUGAUAAUCAUAUUUACCAAAUGCCCCUCAUUUACAUAAAUAUUAUACUAGCCCCCCCCCCCAUUUACCAUC\
) } def
/len { sequence length } bind def

/coor [
[43.80182266 238.25045776]
[33.94408798 233.82093811]
[24.43276215 228.68962097]
[15.31772614 222.88343811]
[6.64678097 216.43283081]
[-1.53460205 209.37161255]
[-9.18351746 201.73684692]
[-16.25985336 193.56854248]
[-22.72650146 184.90956116]
[-28.54954720 175.80528259]
[-41.83688736 182.76564026]
[-55.12422943 189.72599792]
[-68.41156769 196.68635559]
[-81.69891357 203.64669800]
[-94.98625183 210.60705566]
[-103.62046814 223.86454773]
[-118.48487091 222.91642761]
[-131.77221680 229.87678528]
[-140.40641785 243.13426208]
[-155.27082825 242.18614197]
[-154.70455933 257.43875122]
[-160.82009888 271.42312622]
[-172.40319824 281.36267090]
[-187.15403748 285.28387451]
[-202.14379883 282.40817261]
[-214.39627075 273.30654907]
[-221.47872925 259.78613281]
[-221.98492432 244.53141785]
[-215.81436157 230.57122803]
[-204.19219971 220.67738342]
[-189.42604065 216.81430054]
[-174.44772339 219.74899292]
[-162.23118591 228.89880371]
[-154.54736328 216.13917542]
[-138.73255920 216.58944702]
[-125.44522095 209.62908936]
[-117.76140594 196.86944580]
[-101.94660950 197.31971741]
[-88.65927124 190.35935974]
[-75.37192535 183.39900208]
[-62.08458710 176.43864441]
[-48.79724503 169.47830200]
[-35.50990295 162.51794434]
[-45.82625198 131.71955872]
[-49.23501205 99.41866302]
[-45.57470703 67.14530182]
[-35.01872635 36.42823029]
[-18.06709099 8.72246361]
[-29.45816422 -1.03681064]
[-40.84923935 -10.79608536]
[-55.30818176 -5.61587667]
[-70.41722107 -8.37494373]
[-82.11210632 -18.33111191]
[-87.24696350 -32.80622101]
[-84.44055176 -47.90653992]
[-74.44777679 -59.57015610]
[-59.95664215 -64.65962219]
[-44.86519623 -61.80588913]
[-33.23295593 -51.77660370]
[-28.18894196 -37.26958847]
[-31.08996391 -22.18715858]
[-19.69889069 -12.42788410]
[-8.30781651 -2.66860986]
[-0.43786362 -10.37962723]
[7.97955036 -17.48899269]
[16.89854431 -23.95795441]
[26.27050400 -29.75125313]
[36.04434204 -34.83731079]
[46.16679001 -39.18840408]
[56.58266830 -42.78081894]
[67.23519897 -45.59496689]
[78.06632996 -47.61551666]
[89.01701355 -48.83145142]
[100.02755737 -49.23614120]
[111.03795624 -48.82738495]
[121.98818970 -47.60740662]
[132.81857300 -45.58285522]
[143.47006226 -42.76477051]
[153.88461304 -39.16851425]
[164.00544739 -34.81368256]
[173.77742004 -29.72401428]
[183.14723206 -23.92725372]
[192.06384277 -17.45499802]
[200.47862244 -10.34252357]
[208.34573364 -2.62860060]
[215.62226868 5.64472532]
[222.26858521 14.43235779]
[228.24842834 23.68639755]
[233.52923584 33.35640335]
[238.08221436 43.38966751]
[252.22952271 38.40434647]
[266.37683105 33.41902542]
[280.52416992 28.43370247]
[294.67147827 23.44837952]
[308.81878662 18.46305847]
[322.96609497 13.47773647]
[330.20333862 -2.41596222]
[346.36798096 -8.07601070]
[361.33813477 -0.47354475]
[375.38012695 -5.74828625]
[389.42208862 -11.02302742]
[403.46405029 -16.29776955]
[417.50604248 -21.57251167]
[425.41912842 -35.52824402]
[441.28585815 -37.90038681]
[452.93460083 -26.86923218]
[451.42944336 -10.89694118]
[437.92504883 -2.23608613]
[422.78079224 -7.53053474]
[408.73880005 -2.25579309]
[394.69683838 3.01894855]
[380.65484619 8.29368973]
[366.61288452 13.56843185]
[362.96328735 25.96330070]
[352.67568970 34.09928894]
[339.38403320 34.81567001]
[327.95144653 27.62505341]
[313.80410767 32.61037445]
[299.65679932 37.59569550]
[285.50949097 42.58102036]
[271.36215210 47.56634140]
[257.21484375 52.55166245]
[243.06753540 57.53698349]
[245.76541138 68.00202942]
[247.69886780 78.63487244]
[248.85777283 89.37976074]
[249.23603821 100.18034363]
[248.83166504 110.97998047]
[247.64680481 121.72203827]
[245.68765259 132.35017395]
[242.96449280 142.80867004]
[239.49159241 153.04266357]
[235.28717041 162.99848938]
[230.37327576 172.62394714]
[224.77568054 181.86854553]
[218.52372742 190.68380737]
[211.65022278 199.02349854]
[204.19120789 206.84390259]
[196.18579102 214.10398865]
[187.67594910 220.76570129]
[178.70632935 226.79409790]
[169.32394409 232.15754700]
[159.57801819 236.82794189]
[149.51965332 240.78079224]
[139.20159912 243.99534607]
[128.67796326 246.45477295]
[118.00393677 248.14616394]
[107.23548889 249.06063843]
[96.42910004 249.19342041]
[85.64144135 248.54379272]
[74.92907715 247.11517334]
[64.34819031 244.91505432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[17 36]
[18 35]
[20 33]
[48 63]
[49 62]
[50 61]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
