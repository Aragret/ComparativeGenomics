%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUAACCAUGGGGGGGGGGUCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACxxxxxxxxxxAGUCUACCCUCCCUUAGCAGGGAACUACUCCCACCCUGGAGCCUCCGUAGCCCCCCCCCCACCUAACCAU\
) } def
/len { sequence length } bind def

/coor [
[97.97538757 373.28683472]
[84.12945557 367.27081299]
[72.42079163 357.74139404]
[63.71826553 345.40573120]
[58.66766357 331.17919922]
[57.64377213 316.11752319]
[60.72257233 301.33834839]
[67.67559052 287.93844604]
[77.98687744 276.91210938]
[90.89125824 269.07760620]
[105.43114471 265.01626587]
[105.43114471 250.01628113]
[105.43114471 235.01628113]
[105.43114471 220.01628113]
[105.43114471 205.01628113]
[105.43114471 190.01628113]
[105.43114471 175.01628113]
[105.43114471 160.01628113]
[105.43114471 145.01628113]
[105.43114471 130.01628113]
[99.68024445 125.20201874]
[85.59080505 130.34863281]
[88.17844391 115.57348633]
[82.42753601 110.75922394]
[67.66148376 113.39809418]
[52.89542770 116.03695679]
[38.12937164 118.67581940]
[25.90561104 128.72023010]
[12.01565838 123.34264374]
[-2.75039744 125.98150635]
[-17.51645279 128.62037659]
[-29.69894028 139.59848022]
[-45.21187973 134.28051758]
[-48.09688568 118.13713837]
[-35.38611603 107.77526855]
[-20.15531731 113.85431671]
[-5.38926172 111.21544647]
[9.37679386 108.57658386]
[20.54438782 98.72092438]
[35.49050903 103.90976715]
[50.25656509 101.27089691]
[65.02262115 98.63203430]
[79.78867340 95.99317169]
[83.37992859 89.40888214]
[68.63638306 86.64704132]
[66.70722198 71.77161407]
[80.25853729 65.34028625]
[90.56243896 76.24029541]
[94.15369415 69.65600586]
[88.37741852 55.81278992]
[82.60115051 41.96957016]
[67.82774353 44.85600281]
[52.77572632 44.70914078]
[38.06145859 41.53499603]
[24.28748131 35.46355057]
[12.01783276 26.74342155]
[1.75494611 15.73169804]
[-6.08091927 2.87930179]
[-11.16889000 -11.28747082]
[-13.30061626 -26.18849754]
[-12.38880634 -41.21359253]
[-8.47079754 -55.74748993]
[-1.70703018 -69.19503021]
[7.62552404 -81.00554657]
[19.14470291 -90.69540405]
[32.37880325 -97.86782074]
[46.78589630 -102.22907257]
[61.77602005 -103.60058594]
[76.73534393 -101.92618561]
[91.05128479 -97.27444458]
[104.13761902 -89.83583832]
[115.45846558 -79.91499329]
[124.55024719 -67.91814423]
[131.04066467 -54.33655548]
[134.66392517 -39.72639465]
[135.27166748 -24.68593025]
[132.83900452 -9.83106518]
[127.46556091 4.22990751]
[119.37136078 16.92119789]
[108.88786316 27.72310448]
[96.44436646 36.19329834]
[102.22063446 50.03651428]
[107.99691010 63.87973404]
[121.45287323 70.50823212]
[135.94847107 66.65106964]
[150.44406128 62.79391479]
[164.93966675 58.93675232]
[168.80734253 37.16574478]
[187.66764832 21.49817657]
[214.59808350 21.65598297]
[226.09989929 12.02745724]
[237.60169983 2.39893103]
[249.10350037 -7.22959518]
[260.60531616 -16.85812187]
[265.72064209 -32.43904877]
[281.82507324 -35.53419876]
[292.35171509 -22.95954895]
[286.47167969 -7.65081787]
[270.23382568 -5.35631800]
[258.73202515 4.27220821]
[247.23022461 13.90073490]
[235.72842407 23.52926064]
[224.22662354 33.15778732]
[226.60353088 40.27117538]
[240.83038330 35.51758194]
[245.58375549 49.74450684]
[231.35734558 54.49795532]
[233.73425293 61.61134338]
[248.71395874 62.39118958]
[263.69366455 63.17103577]
[278.67340088 63.95088196]
[290.24536133 53.18680573]
[306.03607178 53.84155273]
[316.67718506 65.52667236]
[315.85552979 81.30958557]
[304.05856323 91.82657623]
[288.28521729 90.83809662]
[277.89355469 78.93059540]
[262.91381836 78.15074921]
[247.93411255 77.37090302]
[232.95440674 76.59105682]
[222.83781433 87.39880371]
[210.08523560 93.54023743]
[196.62164307 94.60150909]
[184.30931091 90.89922333]
[174.69094849 83.37925720]
[168.79682922 73.43235016]
[154.30122375 77.28951263]
[139.80563354 81.14666748]
[125.31003571 85.00382996]
[120.43114471 130.01628113]
[120.43114471 145.01628113]
[120.43114471 160.01628113]
[120.43114471 175.01628113]
[120.43114471 190.01628113]
[120.43114471 205.01628113]
[120.43114471 220.01628113]
[120.43114471 235.01628113]
[120.43114471 250.01628113]
[120.43114471 265.01626587]
[134.97103882 269.07760620]
[147.87541199 276.91210938]
[158.18669128 287.93844604]
[165.13972473 301.33834839]
[168.21852112 316.11752319]
[167.19462585 331.17919922]
[162.14402771 345.40573120]
[153.44149780 357.74139404]
[141.73283386 367.27081299]
[127.88690186 373.28683472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 43]
[25 42]
[26 41]
[27 40]
[29 38]
[30 37]
[31 36]
[49 83]
[50 82]
[51 81]
[84 130]
[85 129]
[86 128]
[87 127]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[108 121]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
