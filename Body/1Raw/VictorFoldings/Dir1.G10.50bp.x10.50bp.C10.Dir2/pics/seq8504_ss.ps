%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUAGCCGGGGGGGGGGAUGGCCAUCCCCUUAUGAGCGGGCACAGUGAUUAUAGGCUUUCGCUCUAAxxxxxxxxxxCUGCACGACAACACAUAAUGACCCACCAAUCACAUGCCUAUCAUAUAGUACCCCCCCCCCAAACCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 364.64776611]
[71.19830322 358.63171387]
[59.48964310 349.10229492]
[50.78712082 336.76663208]
[45.73651886 322.54013062]
[44.71262741 307.47842407]
[47.79142761 292.69927979]
[54.74444962 279.29934692]
[65.05573273 268.27301025]
[77.96011353 260.43850708]
[92.50000000 256.37719727]
[92.50000000 241.37719727]
[92.50000000 226.37719727]
[92.50000000 211.37719727]
[92.50000000 196.37719727]
[92.50000000 181.37719727]
[92.50000000 166.37719727]
[92.50000000 151.37719727]
[92.50000000 136.37719727]
[92.50000000 121.37719727]
[89.53785706 120.09423065]
[86.78813171 118.40328217]
[84.30664062 116.33869934]
[70.92035675 123.10681152]
[62.40362167 137.12098694]
[46.01692963 136.48190308]
[38.61751175 121.84700012]
[47.81724930 108.27140045]
[64.15224457 109.72052765]
[77.53852844 102.95240784]
[81.89614105 86.38071442]
[96.61056519 77.60031128]
[99.40289307 62.86250305]
[102.04175568 48.09644699]
[104.52687836 33.30373764]
[107.01199341 18.51103210]
[109.49711609 3.71832514]
[111.98223114 -11.07438183]
[105.13329315 -22.05372047]
[107.55033112 -34.35725403]
[117.39290619 -41.45872879]
[120.18523407 -56.19653702]
[122.97755432 -70.93434143]
[125.76988220 -85.67214966]
[128.56221008 -100.40995026]
[121.94316101 -111.52940369]
[124.61563110 -123.77998352]
[134.60382080 -130.67515564]
[137.70213318 -145.35168457]
[140.80046082 -160.02821350]
[143.89878845 -174.70474243]
[146.99710083 -189.38127136]
[150.09542847 -204.05778503]
[139.86972046 -215.57911682]
[138.40599060 -230.73533630]
[146.05696106 -243.69398499]
[159.70802307 -249.59199524]
[162.80635071 -264.26852417]
[148.97627258 -273.71286011]
[142.00437927 -290.63757324]
[145.71621704 -310.15240479]
[160.55488586 -325.61022949]
[160.24282837 -340.60699463]
[159.93077087 -355.60372925]
[145.30953979 -359.36169434]
[132.24496460 -366.92605591]
[121.70652008 -377.73547363]
[114.47623444 -390.98785400]
[111.09063721 -405.69976807]
[111.80097198 -420.77947998]
[116.55451202 -435.10800171]
[124.99852753 -447.62203979]
[136.50640869 -457.39297485]
[150.22419739 -463.69577026]
[165.13392639 -466.06265259]
[180.12922668 -464.31802368]
[194.09732056 -458.59136963]
[206.00170898 -449.30758667]
[214.95896912 -437.15563965]
[220.30444336 -423.03726196]
[221.64144897 -408.00015259]
[218.87078857 -393.16012573]
[212.19802856 -379.61843872]
[202.11837769 -368.38000488]
[189.37977600 -360.27871704]
[174.92752075 -355.91580200]
[175.23957825 -340.91903687]
[175.55163574 -325.92230225]
[182.41166687 -322.89077759]
[194.52223206 -331.74145508]
[196.13171387 -316.82775879]
[202.99174500 -313.79626465]
[214.29074097 -323.66198730]
[216.80493164 -339.50680542]
[230.83097839 -347.29458618]
[245.60932922 -341.05117798]
[249.80328369 -325.56600952]
[240.19558716 -312.71798706]
[224.15646362 -312.36297607]
[212.85746765 -302.49725342]
[210.05964661 -279.58984375]
[195.77557373 -264.43453979]
[177.48287964 -261.17019653]
[174.38455200 -246.49366760]
[184.48680115 -235.58117676]
[186.24702454 -220.63574219]
[178.78204346 -207.36444092]
[164.77195740 -200.95947266]
[161.67362976 -186.28294373]
[158.57530212 -171.60641479]
[155.47698975 -156.92988586]
[152.37866211 -142.25337219]
[149.28034973 -127.57684326]
[155.63586426 -111.24872589]
[143.30001831 -97.61763000]
[140.50769043 -82.87982178]
[137.71536255 -68.14201355]
[134.92303467 -53.40421295]
[132.13070679 -38.66640472]
[138.82453918 -22.47404099]
[126.77494049 -8.58926392]
[124.28981781 6.20344353]
[121.80470276 20.99615097]
[119.31958008 35.78885651]
[116.83446503 50.58156586]
[118.84091187 57.74534988]
[114.14070129 65.65482330]
[111.34837341 80.39263153]
[121.73257446 93.60237122]
[120.16175079 110.33142853]
[107.50000000 121.37719727]
[107.50000000 136.37719727]
[107.50000000 151.37719727]
[107.50000000 166.37719727]
[107.50000000 181.37719727]
[107.50000000 196.37719727]
[107.50000000 211.37719727]
[107.50000000 226.37719727]
[107.50000000 241.37719727]
[107.50000000 256.37719727]
[122.03988647 260.43850708]
[134.94427490 268.27301025]
[145.25555420 279.29934692]
[152.20857239 292.69927979]
[155.28736877 307.47842407]
[154.26348877 322.54013062]
[149.21287537 336.76663208]
[140.51036072 349.10229492]
[128.80169678 358.63171387]
[114.95575714 364.64776611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 30]
[24 29]
[32 128]
[33 127]
[34 125]
[35 124]
[36 123]
[37 122]
[38 121]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[48 113]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[57 104]
[58 103]
[62 88]
[63 87]
[64 86]
[92 100]
[93 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
