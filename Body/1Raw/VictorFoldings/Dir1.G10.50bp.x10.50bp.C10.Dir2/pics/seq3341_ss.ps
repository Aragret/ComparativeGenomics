%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUUCUAAGGGGGGGGGGUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCUAGGCUAUAUAxxxxxxxxxxUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCUCCCCCCCCCCCCUCAUUCUAA\
) } def
/len { sequence length } bind def

/coor [
[89.38218689 474.72085571]
[77.49791718 465.44573975]
[68.17920685 453.59564209]
[61.96784210 439.85946655]
[59.22494125 425.03582764]
[60.10997009 409.98657227]
[64.57147980 395.58663940]
[72.35007477 382.67318726]
[82.99352264 371.99703979]
[95.88303375 364.17886353]
[110.26921844 359.67318726]
[109.33359528 344.70239258]
[108.39796448 329.73159790]
[107.46233368 314.76080322]
[106.52671051 299.79000854]
[105.59107971 284.81924438]
[104.65544891 269.84844971]
[103.71982574 254.87763977]
[102.62850952 239.91740417]
[101.38163757 224.96931458]
[100.13476562 210.02122498]
[98.88788605 195.07313538]
[97.48558807 180.13882446]
[95.92800140 165.21992493]
[93.37123871 162.70388794]
[91.93860626 158.79885864]
[92.28105927 154.06228638]
[94.76859283 149.32606506]
[94.14461517 134.33905029]
[93.52063751 119.35203552]
[82.11961365 109.60437775]
[67.21771240 111.31707001]
[52.31580734 113.02976227]
[37.27062988 120.84506226]
[25.59583473 108.55133820]
[34.17720413 93.92956543]
[50.60311890 98.12786102]
[65.50502014 96.41516876]
[80.40692139 94.70247650]
[88.65921021 82.17651367]
[84.35163116 67.80833435]
[80.04404449 53.44014740]
[75.73645782 39.07196426]
[71.42887115 24.70378113]
[56.40666962 22.23503113]
[43.99660492 13.52427387]
[36.62937546 0.34307200]
[35.71946716 -14.66802597]
[41.39389420 -28.52841187]
[52.47759628 -38.50924683]
[48.17000961 -52.87742996]
[43.86242676 -67.24561310]
[39.55484390 -81.61380005]
[35.24725723 -95.98197937]
[20.24174690 -94.74572754]
[5.30716038 -96.65670013]
[-8.90362549 -101.63135529]
[-21.76937675 -109.45223999]
[-32.72765732 -119.77743530]
[-41.29941940 -132.15559387]
[-47.10993958 -146.04556274]
[-49.90521240 -160.84016418]
[-49.56303406 -175.89262390]
[-46.09836578 -190.54492188]
[-39.66267014 -204.15650940]
[-30.53728676 -216.13237000]
[-19.12113571 -225.94894409]
[-5.91328478 -233.17710876]
[8.50887585 -237.50088501]
[23.51487160 -238.73123169]
[38.44870377 -236.81437683]
[52.65753174 -231.83413696]
[65.52021027 -224.00819397]
[76.47442627 -213.67868042]
[85.04131317 -201.29716492]
[90.84637451 -187.40489197]
[93.63582611 -172.60920715]
[93.28772736 -157.55686951]
[89.81729126 -142.90594482]
[83.37624359 -129.29687500]
[74.24614716 -117.32462311]
[62.82613373 -107.51253510]
[49.61544037 -100.28956604]
[53.92302704 -85.92137909]
[58.23060989 -71.55319977]
[62.53819656 -57.18501282]
[66.84577942 -42.81682968]
[81.59236145 -40.57992172]
[93.95619965 -32.12741089]
[101.45476532 -19.09159470]
[102.55432892 -4.03134346]
[96.98337555 10.07012653]
[85.79705811 20.39619637]
[90.10464478 34.76438141]
[94.41223145 49.13256454]
[98.71981049 63.50074768]
[103.02739716 77.86893463]
[116.48336029 84.49742889]
[130.50007629 79.15592194]
[144.51678467 73.81440735]
[158.53350830 68.47289276]
[164.76718140 53.94992065]
[179.47512817 48.16617584]
[193.93139648 54.55305099]
[199.55931091 69.32132721]
[193.01994324 83.70925140]
[178.19299316 89.18071747]
[163.87501526 82.48960876]
[149.85830688 87.83111572]
[135.84158325 93.17263031]
[121.82487488 98.51414490]
[136.71369934 96.69122314]
[149.66923523 104.25124359]
[155.40695190 118.11048126]
[151.58644104 132.61578369]
[139.76608276 141.85044861]
[124.76737976 142.04766846]
[112.70828247 133.12699890]
[108.50765228 118.72805786]
[109.13162994 133.71507263]
[109.75560760 148.70208740]
[110.84691620 163.66233826]
[112.40449524 178.58125305]
[116.43096924 186.85406494]
[113.83597565 193.82626343]
[115.08284760 208.77435303]
[116.32972717 223.72244263]
[117.57659912 238.67051697]
[121.43009949 247.02531433]
[118.69061279 253.94201660]
[119.62624359 268.91281128]
[120.56187439 283.88360596]
[121.49749756 298.85440063]
[122.43312836 313.82519531]
[123.36875916 328.79598999]
[124.30438232 343.76675415]
[125.24001312 358.73754883]
[140.07524109 361.41699219]
[153.83787537 367.56948853]
[165.72776794 376.83737183]
[175.05366516 388.68185425]
[181.27336121 402.41424561]
[184.02523804 417.23620605]
[183.14933777 432.28598022]
[178.69656372 446.68862915]
[170.92579651 459.60678101]
[160.28881836 470.28939819]
[147.40405273 478.11538696]
[133.02059937 482.62979126]
[117.97469330 483.57009888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 128]
[20 127]
[21 126]
[22 125]
[23 123]
[24 122]
[28 121]
[29 120]
[30 119]
[31 39]
[32 38]
[33 37]
[40 97]
[41 96]
[42 95]
[43 94]
[44 93]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[98 111]
[99 110]
[100 109]
[101 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
