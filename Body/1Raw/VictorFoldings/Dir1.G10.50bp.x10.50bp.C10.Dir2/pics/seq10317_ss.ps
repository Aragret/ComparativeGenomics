%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCAUUACUAGGGGGGGGGGUUCUGCCUAGCAAACUCAAACUACGAACGCACUCACAGUCGCAUCAUAAUxxxxxxxxxxCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUCCCCCCCCCCUUCUCAUUACUA\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 379.95901489]
[70.87159729 374.80398560]
[58.28185654 366.52178955]
[47.94191742 355.55902100]
[40.40940475 342.50689697]
[36.09054184 328.06930542]
[35.21823120 313.02484131]
[37.83952332 298.18484497]
[43.81304932 284.34960938]
[52.81666565 272.26525879]
[64.36482239 262.58346558]
[77.83473969 255.82640076]
[92.50000000 252.35841370]
[92.50000000 237.35841370]
[92.50000000 222.35841370]
[92.50000000 207.35841370]
[92.50000000 192.35841370]
[92.50000000 177.35841370]
[92.50000000 162.35841370]
[92.50000000 147.35841370]
[92.50000000 132.35841370]
[92.50000000 117.35842133]
[80.01908112 104.92510986]
[82.69467163 86.01702881]
[100.71971130 76.09269714]
[95.08495331 62.19127274]
[89.45020294 48.28985214]
[83.81544495 34.38842773]
[78.18068695 20.48700714]
[63.90187454 14.26179981]
[58.38546371 0.08351161]
[64.40824127 -13.49079227]
[58.77348709 -27.39221382]
[44.41910172 -23.00481033]
[29.73312950 -19.90322876]
[14.83050537 -18.11174583]
[-0.17213419 -17.64438057]
[-15.15737057 -18.50479126]
[-30.00792313 -20.68624306]
[-44.60756302 -24.17166519]
[-58.84202194 -28.93377686]
[-72.59990692 -34.93531036]
[-85.77352142 -42.12928772]
[-98.25978088 -50.45941544]
[-109.96095276 -59.86048889]
[-120.78546143 -70.25893402]
[-130.64859009 -81.57337189]
[-139.47312927 -93.71524048]
[-147.19003296 -106.58951569]
[-153.73890686 -120.09543610]
[-159.06846619 -134.12730408]
[-163.13703918 -148.57530212]
[-165.91275024 -163.32632446]
[-167.37390137 -178.26495361]
[-167.50904846 -193.27426147]
[-166.31710815 -208.23678589]
[-163.80744934 -223.03541565]
[-159.99969482 -237.55430603]
[-154.92364502 -251.67987061]
[-148.61901855 -265.30151367]
[-141.13517761 -278.31265259]
[-132.53068542 -290.61145020]
[-122.87289429 -302.10165405]
[-112.23737335 -312.69332886]
[-100.70737457 -322.30355835]
[-88.37313080 -330.85714722]
[-75.33117676 -338.28717041]
[-61.68359375 -344.53546143]
[-47.53718567 -349.55310059]
[-33.00267029 -353.30084229]
[-18.19380569 -355.74932861]
[-3.22649121 -356.87942505]
[11.78213120 -356.68228149]
[26.71459770 -355.15939331]
[41.45403671 -352.32275391]
[55.88508987 -348.19451904]
[69.89481354 -342.80703735]
[83.37356567 -336.20242310]
[96.21585083 -328.43237305]
[108.32115173 -319.55773926]
[119.59473419 -309.64794922]
[129.94836426 -298.78057861]
[139.30101013 -287.04064941]
[147.57948303 -274.52008057]
[154.71896362 -261.31686401]
[160.66360474 -247.53430176]
[165.36685181 -233.28027344]
[168.79191589 -218.66636658]
[170.91200256 -203.80693054]
[171.71047974 -188.81825256]
[171.18113708 -173.81767273]
[169.32809448 -158.92257690]
[166.16584778 -144.24955750]
[161.71917725 -129.91342163]
[156.02285767 -116.02639008]
[149.12149048 -102.69715118]
[141.06906128 -90.03001404]
[131.92863464 -78.12413788]
[121.77170563 -67.07268524]
[110.67778778 -56.96216202]
[98.73371124 -47.87169647]
[86.03295135 -39.87242889]
[72.67491150 -33.02696991]
[78.30966187 -19.12554741]
[92.08412933 -13.57579136]
[97.99659729 0.44195756]
[92.08210754 14.85225105]
[97.71686554 28.75367355]
[103.35162354 42.65509415]
[108.98638153 56.55651855]
[114.62113190 70.45793915]
[126.19818878 79.99584961]
[140.92097473 82.86627960]
[155.67210388 85.58735657]
[170.47535706 88.00891113]
[185.30238342 90.28032684]
[200.12940979 92.55174255]
[213.85955811 84.25341034]
[228.85752869 89.94908142]
[233.61813354 105.26952362]
[224.48947144 118.46221161]
[208.47425842 119.40683746]
[197.85798645 107.37876892]
[183.03096008 105.10735321]
[168.20393372 102.83593750]
[161.07406616 104.94416046]
[153.10066223 100.36529541]
[145.92953491 102.32859039]
[138.05055237 97.58907318]
[123.32776642 94.71865082]
[121.61496735 105.27172852]
[115.72521973 113.27445984]
[107.50000000 117.35842133]
[107.50000000 132.35841370]
[107.50000000 147.35841370]
[107.50000000 162.35841370]
[107.50000000 177.35841370]
[107.50000000 192.35841370]
[107.50000000 207.35841370]
[107.50000000 222.35841370]
[107.50000000 237.35841370]
[107.50000000 252.35841370]
[122.16526031 255.82640076]
[135.63517761 262.58346558]
[147.18333435 272.26525879]
[156.18695068 284.34960938]
[162.16047668 298.18484497]
[164.78176880 313.02484131]
[163.90945435 328.06930542]
[159.59059143 342.50689697]
[152.05809021 355.55902100]
[141.71813965 366.52178955]
[129.12840271 374.80398560]
[114.96779633 379.95901489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[25 111]
[26 110]
[27 109]
[28 108]
[29 107]
[32 104]
[33 103]
[112 130]
[113 129]
[114 127]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
