%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUAGGAGGCGGGGGGGGGGCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUxxxxxxxxxxAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCCCCCCCCCCCUAGUAGGC\
) } def
/len { sequence length } bind def

/coor [
[12.17756176 248.17811584]
[3.71488714 242.82405090]
[-4.42234516 236.98725891]
[-12.20663071 230.68743896]
[-19.61165810 223.94589233]
[-26.61240005 216.78541565]
[-33.18519211 209.23020935]
[-39.30781937 201.30580139]
[-51.81185532 209.59127808]
[-59.04189682 223.66384888]
[-73.92519379 224.24411011]
[-86.42922974 232.52958679]
[-98.93326569 240.81506348]
[-111.17622375 249.48165894]
[-117.52622986 263.97262573]
[-132.34558105 265.46801758]
[-144.31584167 274.50753784]
[-156.28610229 283.54705811]
[-168.25634766 292.58657837]
[-180.22660828 301.62609863]
[-186.11700439 316.93084717]
[-202.35638428 319.21435547]
[-212.23907471 306.12756348]
[-205.59861755 291.13302612]
[-189.26612854 289.65585327]
[-177.29586792 280.61633301]
[-165.32562256 271.57681274]
[-153.35536194 262.53729248]
[-141.38510132 253.49775696]
[-135.89128113 239.65336609]
[-120.21574402 237.51141357]
[-119.38129425 234.02558899]
[-116.78011322 230.78468323]
[-112.55282593 228.63163757]
[-107.21874237 228.31101990]
[-94.71470642 220.02554321]
[-82.21067047 211.74006653]
[-75.87500000 198.26014709]
[-60.09732819 197.08724976]
[-47.59329224 188.80177307]
[-62.30674744 157.67195129]
[-70.53466034 124.23765564]
[-71.94825745 89.83485413]
[-66.49105835 55.83823776]
[-54.38112259 23.60626221]
[-67.52275085 16.37455940]
[-80.66438293 9.14285660]
[-93.80601501 1.91115391]
[-110.18167114 2.78864622]
[-118.90145874 -11.10010338]
[-110.99520874 -25.46754074]
[-94.59619141 -25.53367615]
[-86.57431793 -11.23047733]
[-73.43268585 -3.99877501]
[-60.29105377 3.23292756]
[-47.14942169 10.46463013]
[-42.12080765 2.67985392]
[-36.68077087 -4.82319260]
[-30.84505844 -12.02278805]
[-24.63056755 -18.89809227]
[-18.05528450 -25.42919922]
[-11.13824749 -31.59720421]
[-3.89947796 -37.38425446]
[3.64006782 -42.77359009]
[11.45856380 -47.74961472]
[19.53337669 -52.29792023]
[27.84113121 -56.40534592]
[36.35777664 -60.05999374]
[45.05865860 -63.25128937]
[53.91858673 -65.96999359]
[62.91191864 -68.20822906]
[72.01261139 -69.95952606]
[81.19432831 -71.21881104]
[90.43048859 -71.98243713]
[99.69434357 -72.24819946]
[108.95908356 -72.01531982]
[118.19789124 -71.28447723]
[127.38402557 -70.05778503]
[136.49087524 -68.33879852]
[145.49209595 -66.13249207]
[154.36161804 -63.44524765]
[163.07377625 -60.28485489]
[171.60333252 -56.66045380]
[178.42691040 -70.01855469]
[185.25048828 -83.37664795]
[181.69641113 -99.02108002]
[191.82395935 -111.46344757]
[207.86412048 -111.15903473]
[217.51226807 -98.34136200]
[213.36717224 -82.84304810]
[198.60858154 -76.55307770]
[191.78500366 -63.19497681]
[184.96142578 -49.83687592]
[200.23376465 -40.08113861]
[214.39660645 -28.77480888]
[227.29315186 -16.04304123]
[238.78067017 -2.02676773]
[248.73197937 13.11886406]
[257.03695679 29.22620392]
[270.96768188 23.66426659]
[284.89837646 18.10232925]
[298.82910156 12.54039097]
[312.75982666 6.97845411]
[322.47857666 -6.23053932]
[338.74517822 -4.14965725]
[344.82592773 11.08046722]
[334.46545410 23.79238701]
[318.32174683 20.90917015]
[304.39105225 26.47110748]
[290.46032715 32.03304672]
[276.52960205 37.59498215]
[262.59887695 43.15691757]
[265.62744141 52.70211411]
[268.09613037 62.40717697]
[269.99670410 72.23930359]
[271.32266235 82.16526031]
[272.06958008 92.15149689]
[272.23486328 102.16426086]
[271.81802368 112.16971588]
[270.82043457 122.13403320]
[269.24545288 132.02352905]
[267.09844971 141.80479431]
[264.38665771 151.44476318]
[261.11923218 160.91084290]
[257.30722046 170.17105103]
[252.96350098 179.19407654]
[248.10278320 187.94943237]
[242.74147034 196.40750122]
[236.89768982 204.53973389]
[230.59120178 212.31861877]
[223.84332275 219.71786499]
[216.67684937 226.71246338]
[209.11599731 233.27877808]
[201.18635559 239.39460754]
[192.91468811 245.03929138]
[184.32897949 250.19374084]
[175.45823669 254.84053040]
[166.33244324 258.96395874]
[156.98243713 262.55010986]
[147.43984985 265.58682251]
[137.73690796 268.06387329]
[127.90641022 269.97283936]
[117.98159790 271.30731201]
[107.99600220 272.06277466]
[97.98338318 272.23666382]
[87.97757721 271.82839966]
[78.01240540 270.83935547]
[68.12155914 269.27285767]
[58.33845520 267.13421631]
[48.69617081 264.43069458]
[39.22729111 261.17138672]
[29.96382332 257.36730957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 40]
[9 39]
[11 37]
[12 36]
[13 35]
[14 31]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[45 56]
[46 55]
[47 54]
[48 53]
[83 93]
[84 92]
[85 91]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
