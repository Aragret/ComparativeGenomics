%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCACUCACGGGGGGGGGGCCUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCAxxxxxxxxxxUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGCUCACUAAACAUUCCCCCCCCCCCUACUACUCAC\
) } def
/len { sequence length } bind def

/coor [
[82.92515564 348.56118774]
[69.43627930 341.82965088]
[57.95077896 332.06509399]
[49.13640976 319.83520508]
[43.50562668 305.85101318]
[41.38579941 290.92553711]
[42.90016937 275.92654419]
[47.96069336 261.72601318]
[56.27315521 249.14959717]
[67.35428619 238.92845154]
[80.55984497 231.65679932]
[95.12207031 227.75744629]
[94.81408691 212.76060486]
[94.50611115 197.76376343]
[94.19813538 182.76692200]
[93.89015961 167.77009583]
[93.58217621 152.77325439]
[93.27420044 137.77641296]
[92.96622467 122.77957153]
[92.65824890 107.78273773]
[90.50966644 92.93741608]
[86.55305481 78.46864319]
[82.59644318 63.99987793]
[78.63983917 49.53111267]
[74.68322754 35.06234360]
[70.72661591 20.59357643]
[56.00866318 23.52116013]
[41.12086105 25.40325737]
[26.13738251 26.23049164]
[11.13287544 25.99874115]
[-3.81790709 24.70915985]
[-18.64048195 22.36817551]
[-33.26100159 18.98744774]
[-47.60662842 14.58381939]
[-61.60588837 9.17923069]
[-75.18904114 2.80060649]
[-88.28842163 -4.52027416]
[-100.83875275 -12.74693966]
[-112.77751923 -21.83840370]
[-124.04524994 -31.74937439]
[-134.58578491 -42.43047333]
[-144.34663391 -53.82848740]
[-153.27915955 -65.88663483]
[-161.33886719 -78.54483795]
[-168.48559570 -91.74003601]
[-174.68374634 -105.40648651]
[-179.90242004 -119.47610474]
[-184.11564636 -133.87879944]
[-187.30241394 -148.54281616]
[-189.44685364 -163.39511108]
[-190.53828430 -178.36166382]
[-190.57127380 -193.36791992]
[-189.54563904 -208.33912659]
[-187.46650696 -223.20068359]
[-184.34422302 -237.87857056]
[-180.19435120 -252.29965210]
[-175.03756714 -266.39208984]
[-168.89956665 -280.08563232]
[-161.81091309 -293.31213379]
[-153.80693054 -306.00564575]
[-144.92749023 -318.10293579]
[-135.21684265 -329.54376221]
[-124.72335052 -340.27108765]
[-113.49930573 -350.23147583]
[-101.60061646 -359.37533569]
[-89.08656311 -367.65710449]
[-76.01949310 -375.03549194]
[-62.46451187 -381.47375488]
[-48.48914337 -386.93981934]
[-34.16301346 -391.40646362]
[-19.55749512 -394.85144043]
[-4.74535561 -397.25756836]
[10.19961452 -398.61285400]
[25.20295715 -398.91055298]
[40.18992615 -398.14920044]
[55.08585739 -396.33255005]
[69.81653595 -393.46969604]
[84.30857849 -389.57489014]
[98.48978424 -384.66751099]
[112.28950500 -378.77203369]
[125.63898468 -371.91781616]
[138.47171021 -364.13900757]
[150.72377014 -355.47436523]
[162.33410645 -345.96704102]
[173.24488831 -335.66442871]
[183.40174866 -324.61782837]
[192.75408936 -312.88232422]
[201.25532532 -300.51629639]
[208.86308289 -287.58142090]
[215.53947449 -274.14215088]
[221.25123596 -260.26538086]
[225.96992493 -246.02026367]
[229.67201233 -231.47779846]
[232.33905029 -216.71040344]
[233.95777893 -201.79167175]
[234.52011108 -186.79591370]
[234.02325439 -171.79785156]
[232.46969604 -156.87219238]
[229.86714172 -142.09329224]
[226.22859192 -127.53479767]
[221.57214355 -113.26922607]
[215.92102051 -99.36765289]
[209.30337524 -85.89933777]
[201.75215149 -72.93137360]
[193.30500793 -60.52836990]
[184.00399780 -48.75211716]
[173.89546204 -37.66128922]
[163.02976990 -27.31113434]
[151.46105957 -17.75322151]
[139.24694824 -9.03516483]
[126.44829559 -1.20040059]
[113.12887573 5.71203995]
[99.35502625 11.66771889]
[85.19538116 16.63696480]
[89.15199280 31.10573387]
[93.10860443 45.57450104]
[97.06521606 60.04326630]
[101.02182770 74.51203918]
[104.97843170 88.98080444]
[110.15835571 74.90357208]
[120.85015869 64.38285828]
[135.00910950 59.43068314]
[149.92741394 60.99410248]
[162.75204468 68.77413177]
[171.03038025 81.28289032]
[173.17926025 96.12817383]
[168.78770447 110.47091675]
[158.69558716 121.56817627]
[144.83294678 127.29767609]
[129.85092163 126.56369781]
[116.61470795 119.50659943]
[107.65508270 107.47476196]
[107.96305847 122.47159576]
[108.27104187 137.46842957]
[108.57901764 152.46527100]
[108.88699341 167.46211243]
[109.19496918 182.45895386]
[109.50295258 197.45578003]
[109.81092834 212.45262146]
[110.11890411 227.44946289]
[124.82894135 230.74768066]
[138.32189941 237.47103882]
[149.81332397 247.22863770]
[158.63510132 259.45318604]
[164.27435303 273.43395996]
[166.40322876 288.35815430]
[164.89796448 303.35806274]
[159.84605408 317.56164551]
[151.54121399 330.14309692]
[140.46627808 340.37097168]
[127.26512909 347.65063477]
[112.70527649 351.55880737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 119]
[22 118]
[23 117]
[24 116]
[25 115]
[26 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
