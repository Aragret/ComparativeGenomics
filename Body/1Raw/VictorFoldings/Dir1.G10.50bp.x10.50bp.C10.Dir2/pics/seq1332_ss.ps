%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAAUAGCUAGGGGGGGGGGAGACCCAAACUGGGAUUAGAUACCCCACUAUGCUUAGCCCUAAACCUCAAxxxxxxxxxxGGACAAUGAACCAUAACCAAUACUACCAAUCAAUACUCAUCAUUAAUAAUCCCCCCCCCCCAUAAUAGCUA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 384.97680664]
[71.01555634 379.42379761]
[58.81560135 370.55746460]
[49.20452881 358.93515015]
[42.78650284 345.28744507]
[39.96496582 330.47225952]
[40.91728210 315.42086792]
[45.58358765 301.07946777]
[53.67055511 288.34948730]
[64.66983032 278.03121948]
[77.88998413 270.77325439]
[92.50000000 267.03182983]
[92.50000000 252.03181458]
[92.50000000 237.03181458]
[92.50000000 222.03181458]
[92.50000000 207.03181458]
[92.50000000 192.03181458]
[92.50000000 177.03181458]
[92.50000000 162.03181458]
[92.50000000 147.03181458]
[92.50000000 132.03181458]
[92.50000000 117.03181458]
[85.14553070 113.86295319]
[79.27695465 107.46545410]
[76.30664825 98.59254456]
[62.15933228 103.57786560]
[48.01201630 108.56318665]
[33.86470032 113.54850769]
[20.93548012 124.51535034]
[6.81806183 115.12734222]
[11.93109894 98.96277618]
[28.87937737 99.40119171]
[43.02669525 94.41587067]
[57.17401123 89.43054962]
[71.32132721 84.44522858]
[81.31242371 73.25692749]
[84.67168427 58.63792419]
[88.03094482 44.01891708]
[91.39019775 29.39990807]
[77.04532623 24.99281883]
[63.05585861 19.56211853]
[49.49472809 13.13612080]
[36.43263245 5.74832869]
[23.93767929 -2.56274128]
[12.07500935 -11.75375843]
[0.90646803 -21.77680397]
[-9.50971508 -32.57962418]
[-19.11923409 -44.10589218]
[-27.87198830 -56.29552078]
[-35.72234726 -69.08495331]
[-42.62937927 -82.40751648]
[-48.55707169 -96.19374847]
[-53.47452927 -110.37177277]
[-57.35610580 -124.86767578]
[-60.18156433 -139.60588074]
[-61.93618011 -154.50953674]
[-62.61080170 -169.50094604]
[-62.20190811 -184.50196838]
[-60.71163940 -199.43438721]
[-58.14775848 -214.22033691]
[-54.52363586 -228.78273010]
[-49.85816574 -243.04565430]
[-44.17567062 -256.93475342]
[-37.50577927 -270.37759399]
[-29.88326263 -283.30413818]
[-21.34786224 -295.64694214]
[-11.94408035 -307.34164429]
[-1.72094119 -318.32733154]
[9.26825428 -328.54669189]
[20.96621323 -337.94647217]
[33.31194687 -346.47763062]
[46.24108887 -354.09570312]
[59.68623352 -360.76095581]
[73.57728577 -366.43869019]
[87.84181213 -371.09924316]
[102.40546417 -374.71835327]
[117.19229126 -377.27716064]
[132.12521362 -378.76229858]
[147.12637329 -379.16601562]
[162.11755371 -378.48623657]
[177.02061462 -376.72650146]
[191.75784302 -373.89599609]
[206.25241089 -370.00942993]
[220.42874146 -365.08709717]
[234.21293640 -359.15466309]
[247.53311157 -352.24304199]
[260.31985474 -344.38830566]
[272.50646973 -335.63134766]
[284.02944946 -326.01788330]
[294.82867432 -315.59796143]
[304.84786987 -304.42599487]
[314.03482056 -292.56015015]
[322.34158325 -280.06234741]
[329.72488403 -266.99771118]
[336.14620972 -253.43437195]
[341.57211304 -239.44303894]
[345.97427368 -225.09664917]
[349.32974243 -210.47001648]
[351.62103271 -195.63937378]
[352.83621216 -180.68206787]
[352.96893311 -165.67607117]
[352.01849365 -150.69960022]
[349.98986816 -135.83076477]
[346.89361572 -121.14706421]
[342.74588013 -106.72506714]
[337.56829834 -92.63995361]
[331.38784790 -78.96515656]
[324.23678589 -65.77198792]
[316.15234375 -53.12921143]
[307.17672729 -41.10274887]
[297.35668945 -29.75530434]
[286.74340820 -19.14603424]
[275.39230347 -9.33025360]
[263.36245728 -0.35913739]
[250.71664429 7.72054338]
[237.52078247 14.86666393]
[223.84367371 21.04196739]
[209.75662231 26.21425819]
[195.33306885 30.35657120]
[180.64820862 33.44731140]
[165.77861023 35.47035980]
[150.80178833 36.41517258]
[135.79583740 36.27682114]
[120.83898163 35.05603409]
[106.00920868 32.75916672]
[102.64994812 47.37817383]
[99.29068756 61.99718094]
[95.93143463 76.61618805]
[115.70999146 84.56063843]
[119.95410919 103.83016205]
[107.50000000 117.03181458]
[107.50000000 132.03181458]
[107.50000000 147.03181458]
[107.50000000 162.03181458]
[107.50000000 177.03181458]
[107.50000000 192.03181458]
[107.50000000 207.03181458]
[107.50000000 222.03181458]
[107.50000000 237.03181458]
[107.50000000 252.03181458]
[107.50000000 267.03182983]
[122.11001587 270.77325439]
[135.33016968 278.03121948]
[146.32945251 288.34948730]
[154.41641235 301.07946777]
[159.08271790 315.42086792]
[160.03503418 330.47225952]
[157.21350098 345.28744507]
[150.79547119 358.93515015]
[141.18440247 370.55746460]
[128.98443604 379.42379761]
[114.96250153 384.97680664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[25 35]
[26 34]
[27 33]
[28 32]
[36 128]
[37 127]
[38 126]
[39 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
