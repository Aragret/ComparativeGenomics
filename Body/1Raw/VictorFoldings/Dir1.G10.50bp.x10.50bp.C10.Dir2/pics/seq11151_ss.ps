%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUUCCAAGGGGGGGGGGACAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUxxxxxxxxxxAACUAACCCCCUAAUAAAAUUAAUUAACCACUCAUUCAUCGACCUCCCCACCCCCCCCCCCCCCAUCCAA\
) } def
/len { sequence length } bind def

/coor [
[209.48779297 153.86930847]
[200.35224915 147.85751343]
[191.52770996 141.39773560]
[183.03611755 134.50601196]
[174.89862061 127.19950104]
[167.13542175 119.49636841]
[159.76585388 111.41574860]
[152.80824280 102.97773743]
[146.27989197 94.20332336]
[140.19703674 85.11431885]
[127.25897980 92.70422363]
[114.32092285 100.29412842]
[107.24782562 112.35493469]
[93.26898193 112.64392090]
[80.33092499 120.23383331]
[67.47252655 127.95791626]
[54.69516754 135.81533813]
[41.91781235 143.67277527]
[29.14045334 151.53019714]
[16.36309624 159.38761902]
[3.58573866 167.24504089]
[0.16454442 182.67459106]
[-13.20964527 191.09519958]
[-28.60216141 187.51106262]
[-36.88089752 174.04859924]
[-33.13422394 158.69483948]
[-19.58497810 150.55889893]
[-4.27168703 154.46768188]
[8.50567055 146.61026001]
[21.28302765 138.75283813]
[34.06038666 130.89541626]
[46.83774185 123.03798676]
[59.61510086 115.18055725]
[63.69166946 108.95744324]
[72.74102020 107.29577637]
[85.67907715 99.70587158]
[92.75217438 87.64506531]
[106.73101807 87.35607910]
[119.66907501 79.76616669]
[132.60713196 72.17626190]
[119.56404114 43.23260117]
[110.83710480 12.71128464]
[106.60855103 -18.74792862]
[106.96632385 -50.48572159]
[111.90225220 -81.83702850]
[121.31224060 -112.14499664]
[134.99847412 -140.77471924]
[152.67353821 -167.12652588]
[141.17173767 -176.75505066]
[129.66993713 -186.38357544]
[118.16812897 -196.01210022]
[106.66632843 -205.64062500]
[90.42848969 -207.93513489]
[84.54845428 -223.24386597]
[95.07509613 -235.81851196]
[111.17950439 -232.72335815]
[116.29485321 -217.14244080]
[127.79665375 -207.51391602]
[139.29846191 -197.88537598]
[150.80026245 -188.25685120]
[162.30206299 -178.62832642]
[169.80061340 -186.58096313]
[177.68634033 -194.14993286]
[185.93965149 -201.31642151]
[194.53999329 -208.06259155]
[203.46601868 -214.37167358]
[212.69551086 -220.22796631]
[222.20552063 -225.61689758]
[231.97242737 -230.52505493]
[241.97192383 -234.94026184]
[252.17913818 -238.85148621]
[262.56872559 -242.24903870]
[273.11480713 -245.12443542]
[283.79119873 -247.47052002]
[294.57135010 -249.28147888]
[305.42840576 -250.55276489]
[316.33541870 -251.28125000]
[327.26525879 -251.46507263]
[338.19073486 -251.10380554]
[349.08468628 -250.19833374]
[359.91998291 -248.75088501]
[370.66973877 -246.76507568]
[381.30718994 -244.24581909]
[391.80590820 -241.19938660]
[402.13973999 -237.63333130]
[412.28298950 -233.55653381]
[422.21047974 -228.97912598]
[431.89749146 -223.91246033]
[441.31991577 -218.36915588]
[450.45434570 -212.36297607]
[459.27804565 -205.90887451]
[467.76907349 -199.02287292]
[475.90631104 -191.72209167]
[483.66952515 -184.02468872]
[491.03936768 -175.94979858]
[497.99758911 -167.51750183]
[504.52679443 -158.74876404]
[510.61080933 -149.66537476]
[516.23443604 -140.28991699]
[521.38372803 -130.64572144]
[526.04589844 -120.75675964]
[530.20928955 -110.64762115]
[533.86358643 -100.34342957]
[536.99963379 -89.86982727]
[539.60968018 -79.25283813]
[541.68725586 -68.51887512]
[543.22711182 -57.69462204]
[544.22546387 -46.80699921]
[544.67980957 -35.88308334]
[544.58898926 -24.95003510]
[543.95324707 -14.03504372]
[542.77416992 -3.16525149]
[541.05468750 7.63230944]
[538.79907227 18.33078766]
[536.01287842 28.90357780]
[532.70300293 39.32438660]
[528.87780762 49.56729507]
[524.54669189 59.60683441]
[519.72039795 69.41802979]
[514.41101074 78.97648621]
[508.63168335 88.25843048]
[502.39675903 97.24077606]
[495.72180176 105.90118408]
[488.62335205 114.21810913]
[481.11904907 122.17087555]
[473.22756958 129.73968506]
[464.96856689 136.90573120]
[456.36251831 143.65116882]
[447.43084717 149.95924377]
[438.19577026 155.81423950]
[428.68023682 161.20161438]
[418.90789795 166.10794067]
[408.90307617 170.52102661]
[398.69061279 174.42988586]
[388.29592896 177.82479858]
[377.74487305 180.69731140]
[367.06369019 183.04028320]
[356.27890015 184.84786987]
[345.41735840 186.11557007]
[334.50604248 186.84024048]
[323.57211304 187.02006531]
[312.64276123 186.65457153]
[301.74511719 185.74468994]
[290.90637207 184.29266357]
[280.15338135 182.30210876]
[269.51296997 179.77795410]
[259.01153564 176.72647095]
[248.67521667 173.15524292]
[238.52973938 169.07315063]
[228.60029602 164.49032593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 40]
[11 39]
[12 38]
[14 36]
[15 35]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
