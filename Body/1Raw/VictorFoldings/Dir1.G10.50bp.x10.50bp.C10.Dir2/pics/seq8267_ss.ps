%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACCUCCGGGGGGGGGGAAAUAUCUCAUCAACAACCGACUAAUCACCACCCAACAAUGACUAAUCAAxxxxxxxxxxUCUUUACCUUUCACUUCAUCUUGCCCUUCAUUAUUGCAGCCCUAGCAACACCCCCCCCCCCUCCACCUCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 361.75650024]
[71.19830322 355.74047852]
[59.48964310 346.21105957]
[50.78712082 333.87539673]
[45.73651886 319.64886475]
[44.71262741 304.58718872]
[47.79142761 289.80801392]
[54.74444962 276.40811157]
[65.05573273 265.38177490]
[77.96011353 257.54727173]
[92.50000000 253.48594666]
[92.50000000 238.48594666]
[92.50000000 223.48594666]
[92.50000000 208.48594666]
[92.50000000 193.48594666]
[92.50000000 178.48594666]
[92.50000000 163.48594666]
[92.50000000 148.48594666]
[92.50000000 133.48594666]
[92.50000000 118.48594666]
[80.36169434 103.50959015]
[86.56143188 85.25601959]
[81.36601257 71.18450165]
[76.17060089 57.11297989]
[61.75460434 61.28153610]
[47.07539368 64.39899445]
[32.20949936 66.44910431]
[17.23442650 67.42117310]
[2.22824621 67.31013489]
[-12.73080349 66.11656952]
[-27.56473160 63.84669876]
[-42.19620132 60.51235580]
[-56.54893112 56.13092804]
[-70.54808807 50.72525406]
[-84.12068939 44.32351685]
[-97.19597626 36.95909500]
[-109.70577240 28.67038345]
[-121.58486176 19.50059509]
[-132.77130127 9.49753761]
[-143.20678711 -1.28663635]
[-152.83691406 -12.79570293]
[-161.61145020 -24.96965981]
[-169.48466492 -37.74503708]
[-176.41551208 -51.05522537]
[-182.36784363 -64.83083344]
[-187.31065369 -79.00004578]
[-191.21813965 -93.48897552]
[-194.06996155 -108.22209930]
[-195.85122681 -123.12259674]
[-196.55264282 -138.11279297]
[-196.17057800 -153.11451721]
[-194.70701599 -168.04956055]
[-192.16958618 -182.84007263]
[-188.57151794 -197.40893555]
[-183.93154907 -211.68017578]
[-178.27391052 -225.57942200]
[-171.62806702 -239.03417969]
[-164.02867126 -251.97430420]
[-155.51536560 -264.33236694]
[-146.13250732 -276.04388428]
[-135.92903137 -287.04782104]
[-124.95812988 -297.28683472]
[-113.27700043 -306.70748901]
[-100.94654083 -315.26071167]
[-88.03104401 -322.90188599]
[-74.59783936 -329.59118652]
[-60.71696472 -335.29373169]
[-46.46078873 -339.97979736]
[-31.90364075 -343.62496948]
[-17.12141037 -346.21020508]
[-2.19116926 -347.72204590]
[12.80924320 -348.15258789]
[27.80162048 -347.49963379]
[42.70780182 -345.76654053]
[57.45006561 -342.96237183]
[71.95156097 -339.10174561]
[86.13667297 -334.20477295]
[99.93144989 -328.29699707]
[113.26397705 -321.40921021]
[126.06473541 -313.57733154]
[138.26699829 -304.84219360]
[149.80712891 -295.24935913]
[160.62498474 -284.84878540]
[170.66415405 -273.69473267]
[179.87229919 -261.84533691]
[188.20141602 -249.36241150]
[195.60806274 -236.31100464]
[202.05363464 -222.75917053]
[207.50454712 -208.77755737]
[211.93234253 -194.43907166]
[215.31398010 -179.81845093]
[217.63179016 -164.99194336]
[218.87370300 -150.03681946]
[219.03326416 -135.03108215]
[218.10960388 -120.05294800]
[216.10755920 -105.18050385]
[213.03756714 -90.49128723]
[208.91564941 -76.06189728]
[203.76325989 -61.96754456]
[197.60728455 -48.28172302]
[190.47981262 -35.07578278]
[182.41799927 -22.41856956]
[173.46389771 -10.37607670]
[163.66415405 0.98891127]
[153.06990051 11.61714268]
[141.73632812 21.45320702]
[129.72256470 30.44582176]
[117.09122467 38.54810333]
[103.90816498 45.71781158]
[90.24211884 51.91756439]
[95.43753052 65.98908234]
[100.63294983 80.06060028]
[113.88455963 85.67522430]
[119.90993500 98.74519348]
[134.13671875 103.49900818]
[148.36349487 108.25282288]
[162.59027100 113.00663757]
[175.82470703 104.67694855]
[191.30998230 106.85416412]
[201.73442078 118.51028442]
[202.17593384 134.14163208]
[192.42604065 146.36756897]
[177.08834839 149.41539001]
[163.40484619 141.84599304]
[157.83645630 127.23342133]
[143.60968018 122.47960663]
[129.38290405 117.72579193]
[115.15612030 112.97197723]
[112.90869904 115.21005249]
[110.33496857 117.06365967]
[107.50000000 118.48594666]
[107.50000000 133.48594666]
[107.50000000 148.48594666]
[107.50000000 163.48594666]
[107.50000000 178.48594666]
[107.50000000 193.48594666]
[107.50000000 208.48594666]
[107.50000000 223.48594666]
[107.50000000 238.48594666]
[107.50000000 253.48594666]
[122.03988647 257.54727173]
[134.94427490 265.38177490]
[145.25555420 276.40811157]
[152.20857239 289.80801392]
[155.28736877 304.58718872]
[154.26348877 319.64886475]
[149.21287537 333.87539673]
[140.51036072 346.21105957]
[128.80169678 355.74047852]
[114.95575714 361.75650024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 112]
[23 111]
[24 110]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
