%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAUAAACGGGGGGGGGGAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGUUCCACxxxxxxxxxxUGAGUAGGCCUAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAACCCCCCCCCCAAAAAUAAAC\
) } def
/len { sequence length } bind def

/coor [
[130.85714722 462.21508789]
[117.01120758 456.19906616]
[105.30254364 446.66964722]
[96.60002136 434.33398438]
[91.54941559 420.10745239]
[90.52552795 405.04577637]
[93.60432434 390.26663208]
[100.55735016 376.86669922]
[110.86862946 365.84036255]
[123.77301025 358.00585938]
[138.31289673 353.94454956]
[138.31289673 338.94454956]
[138.31289673 323.94454956]
[138.31289673 308.94454956]
[138.31289673 293.94454956]
[138.31289673 278.94454956]
[138.31289673 263.94454956]
[138.31289673 248.94453430]
[138.31289673 233.94453430]
[138.31289673 218.94453430]
[135.36741638 204.23657227]
[123.32572937 195.47033691]
[125.15209961 179.75489807]
[119.37583160 165.91168213]
[113.59955597 152.06846619]
[107.82328796 138.22525024]
[102.04701233 124.38202667]
[96.27073669 110.53881073]
[90.35077667 96.75642395]
[84.14537048 83.10018921]
[77.79824066 69.50923920]
[71.45111084 55.91828537]
[65.10398102 42.32733536]
[58.75685120 28.73638344]
[52.40972137 15.14543152]
[44.59170151 27.94693756]
[29.73670006 30.02754593]
[18.70252037 19.86649704]
[19.55425644 4.89069891]
[31.66935730 -3.95375395]
[46.19215775 -0.20270279]
[41.29060745 -14.37926102]
[36.38905716 -28.55581856]
[31.48750496 -42.73237610]
[17.30407143 -54.42896271]
[21.22272682 -71.50655365]
[16.02731133 -85.57807159]
[1.29867983 -82.58343506]
[-13.71447277 -81.87232208]
[-28.66021729 -83.46140289]
[-43.18820190 -87.31342316]
[-56.95787430 -93.33808899]
[-69.64644623 -101.39418030]
[-80.95648956 -111.29283142]
[-90.62287140 -122.80202484]
[-98.41899872 -135.65196228]
[-104.16212463 -149.54141235]
[-107.71762085 -164.14480591]
[-109.00213623 -179.11979675]
[-107.98556519 -194.11535645]
[-104.69173431 -208.77998352]
[-99.19786072 -222.76989746]
[-91.63272095 -235.75717163]
[-82.17366028 -247.43734741]
[-71.04240417 -257.53665161]
[-58.49989700 -265.81829834]
[-44.84014511 -272.08819580]
[-30.38335228 -276.19934082]
[-15.46840858 -278.05538940]
[-0.44494161 -277.61282349]
[14.33487701 -274.88198853]
[28.52458763 -269.92694092]
[41.79156494 -262.86380005]
[53.82480621 -253.85816956]
[64.34223938 -243.12113953]
[73.09732056 -230.90438843]
[79.88481903 -217.49430847]
[84.54562378 -203.20523071]
[86.97048187 -188.37214661]
[87.10254669 -173.34274292]
[84.93872833 -158.46932983]
[80.52973938 -144.10057068]
[73.97894287 -130.57328796]
[65.43989563 -118.20457458]
[55.11276627 -107.28437042]
[43.23963928 -98.06866455]
[30.09883118 -90.77348328]
[35.29424667 -76.70196533]
[46.17733765 -71.32929230]
[50.59935760 -59.59623337]
[45.66406250 -47.63392639]
[50.56561279 -33.45737076]
[55.46716309 -19.28081131]
[60.36871719 -5.10425377]
[66.00067139 8.79830265]
[72.34780121 22.38925362]
[78.69493103 35.98020554]
[85.04206085 49.57115555]
[91.38919067 63.16210556]
[97.73632050 76.75305939]
[103.45328522 81.51351929]
[104.07083130 90.69341278]
[109.98773956 96.24987793]
[110.11396027 104.76253510]
[115.89022827 118.60575104]
[121.66650391 132.44897461]
[127.44277191 146.29219055]
[133.21903992 160.13540649]
[138.99531555 173.97862244]
[151.45016479 183.73503113]
[149.21063232 198.46031189]
[151.51672363 183.63862610]
[158.01402283 170.11883545]
[168.14634705 159.05827332]
[181.04629517 151.40379333]
[195.60958862 147.81065369]
[210.58952332 148.58645630]
[224.70372009 153.66477966]
[236.74392700 162.61090088]
[245.67947388 174.65898132]
[250.74539185 188.77764893]
[251.50802612 203.75823975]
[247.90208435 218.31837463]
[240.23626709 231.21159363]
[229.16680908 241.33418274]
[215.64129639 247.81961060]
[200.81761169 250.11265564]
[185.96470642 248.01704407]
[172.35411072 241.71217346]
[161.15093994 231.73776245]
[153.31289673 218.94453430]
[153.31289673 233.94453430]
[153.31289673 248.94453430]
[153.31289673 263.94454956]
[153.31289673 278.94454956]
[153.31289673 293.94454956]
[153.31289673 308.94454956]
[153.31289673 323.94454956]
[153.31289673 338.94454956]
[153.31289673 353.94454956]
[167.85278320 358.00585938]
[180.75717163 365.84036255]
[191.06845093 376.86669922]
[198.02146912 390.26663208]
[201.10028076 405.04577637]
[200.07638550 420.10745239]
[195.02578735 434.33398438]
[186.32325745 446.66964722]
[174.61459351 456.19906616]
[160.76866150 462.21508789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 111]
[23 109]
[24 108]
[25 107]
[26 106]
[27 105]
[28 104]
[29 102]
[30 100]
[31 99]
[32 98]
[33 97]
[34 96]
[35 95]
[41 94]
[42 93]
[43 92]
[44 91]
[46 88]
[47 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
