%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCUUUAGGGGGGGGGGGCAAUAAACGAAAGUUUAACUAAGCUAUACUAACCCCAGGGUUGGUCAAUxxxxxxxxxxAAAAAACAAUAGCCUCAUCAUCCCCACCAUCAUAGCCACCAUCACCCUCCCCCCCCCCCCUUAACCUCUA\
) } def
/len { sequence length } bind def

/coor [
[101.19693756 390.33813477]
[87.97673798 383.06564331]
[77.08993530 372.61865234]
[69.27880859 359.70941162]
[65.07592773 345.21807861]
[64.76785278 330.13275146]
[68.37559509 315.48193359]
[75.65316772 302.26452637]
[86.10437775 291.38177490]
[99.01663971 283.57562256]
[113.50957489 279.37832642]
[113.19751740 264.38159180]
[112.88545990 249.38482666]
[112.57340240 234.38807678]
[112.26135254 219.39132690]
[111.94929504 204.39457703]
[111.63723755 189.39781189]
[111.32518005 174.40106201]
[111.01312256 159.40431213]
[110.70106506 144.40756226]
[110.38901520 129.41079712]
[104.39559174 124.90203857]
[90.59288788 130.77445984]
[92.40876007 115.88450623]
[86.41534424 111.37574005]
[71.91974640 115.23290253]
[57.42415237 119.09006500]
[42.92855835 122.94721985]
[28.43296051 126.80438232]
[17.20519066 138.75717163]
[1.30388367 134.74711609]
[-2.91305804 118.89942932]
[8.89239311 107.51683807]
[24.57579994 112.30878448]
[39.07139587 108.45162201]
[53.56699371 104.59446716]
[68.06259155 100.73730469]
[82.55818939 96.88014221]
[83.02600098 89.39475250]
[68.05522156 88.45889282]
[68.99131775 73.48812866]
[83.96163177 74.42395782]
[84.42944336 66.93856049]
[70.52688599 61.30660629]
[55.25224686 66.21221161]
[41.97363663 57.20898819]
[40.87726593 41.20344162]
[52.80418015 30.47365570]
[68.60507202 33.25060272]
[76.15884399 47.40404892]
[90.06140137 53.03600693]
[78.66416931 43.28392792]
[76.74856567 28.40674782]
[85.30362701 16.08558846]
[99.91235352 12.68189335]
[113.03222656 19.95299530]
[117.88942719 34.14480972]
[111.97473907 47.93154144]
[121.95746613 36.73577499]
[131.94018555 25.54000854]
[141.92291260 14.34424210]
[151.90563965 3.14847660]
[161.65328979 -8.25254440]
[171.16165161 -19.85388565]
[180.67001343 -31.45522690]
[190.17837524 -43.05656815]
[179.76992798 -53.88248825]
[170.71498108 -65.86348724]
[163.14065552 -78.83137512]
[157.15328979 -92.60408783]
[152.83692932 -106.98829651]
[150.25216675 -121.78205872]
[149.43528748 -136.77769470]
[150.39776611 -151.76469421]
[153.12609863 -166.53263855]
[157.58195496 -180.87425232]
[163.70280457 -194.58816528]
[171.40272522 -207.48187256]
[180.57360840 -219.37435913]
[191.08670044 -230.09867859]
[202.79444885 -239.50428772]
[215.53245544 -247.45912170]
[229.12191772 -253.85151672]
[243.37207031 -258.59173584]
[258.08282471 -261.61325073]
[273.04772949 -262.87362671]
[288.05664062 -262.35516357]
[302.89889526 -260.06515503]
[317.36608887 -256.03573608]
[331.25515747 -250.32347107]
[344.37112427 -243.00856018]
[356.52987671 -234.19369507]
[367.56066895 -224.00262451]
[377.30865479 -212.57841492]
[385.63705444 -200.08143616]
[392.42886353 -186.68713379]
[397.58880615 -172.58354187]
[401.04440308 -157.96864319]
[402.74716187 -143.04762268]
[402.67318726 -128.02993774]
[400.82348633 -113.12641144]
[397.22402954 -98.54627991]
[391.92538452 -84.49420929]
[385.00189209 -71.16748047]
[376.55078125 -58.75317383]
[366.69067383 -47.42556763]
[355.55999756 -37.34368515]
[343.31500244 -28.64905930]
[330.12759399 -21.46375084]
[316.18292236 -15.88862896]
[301.67669678 -12.00195885]
[286.81262207 -9.85830498]
[271.79931641 -9.48775959]
[256.84756470 -10.89552402]
[242.16728210 -14.06183720]
[227.96453857 -18.94224930]
[214.43872070 -25.46824455]
[201.77970886 -33.54821014]
[192.27136230 -21.94686890]
[182.76300049 -10.34552765]
[173.25463867 1.25581408]
[172.83711243 6.07257509]
[169.34660339 10.66034412]
[163.10140991 13.13120270]
[153.11868286 24.32696915]
[143.13595581 35.52273560]
[133.15322876 46.71850204]
[123.17050171 57.91426468]
[125.38576508 129.09873962]
[125.69782257 144.09550476]
[126.00988007 159.09225464]
[126.32193756 174.08900452]
[126.63398743 189.08575439]
[126.94604492 204.08251953]
[127.25810242 219.07926941]
[127.57015991 234.07601929]
[127.88221741 249.07276917]
[128.19427490 264.06951904]
[128.50633240 279.06628418]
[143.16131592 282.65704346]
[156.38713074 289.91931152]
[167.28199768 300.35791016]
[175.10308838 313.26110840]
[179.31716919 327.74917603]
[179.63688660 342.83428955]
[176.04046631 357.48788452]
[168.77310181 370.71087646]
[158.33029175 381.60171509]
[145.42407227 389.41784668]
[130.93437195 393.62631226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[43 51]
[44 50]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 121]
[64 120]
[65 119]
[66 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
