%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCAGUACUGGGGGGGGGGGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCCAAAUAUCUCAUCAxxxxxxxxxxGACUCCCUAAAGCCCAUGUCGAAGCCCCCAUCGCUGGGUCAAUAGUACUUCCCCCCCCCCGCCGCAGUACU\
) } def
/len { sequence length } bind def

/coor [
[-10.80152416 269.14443970]
[-22.37177849 260.97195435]
[-33.34146881 252.00944519]
[-43.65676117 242.30093384]
[-53.26702499 231.89404297]
[-62.12509918 220.83985901]
[-70.18751526 209.19262695]
[-77.41469574 197.00952148]
[-83.77117920 184.35031128]
[-89.22576904 171.27713013]
[-93.75169373 157.85414124]
[-97.32673645 144.14723206]
[-99.93336487 130.22364807]
[-114.83781433 131.91404724]
[-129.74226379 133.60444641]
[-144.64671326 135.29484558]
[-159.55116272 136.98524475]
[-172.39147949 146.22843933]
[-185.90962219 139.97470093]
[-200.81405640 141.66510010]
[-215.71850586 143.35549927]
[-230.62295532 145.04589844]
[-245.52740479 146.73629761]
[-260.43185425 148.42669678]
[-275.33630371 150.11709595]
[-290.24075317 151.80749512]
[-293.24652100 166.63383484]
[-300.68850708 179.80470276]
[-311.83767700 190.02973938]
[-325.60171509 196.30720520]
[-340.63214111 198.02209473]
[-355.45648193 195.00640869]
[-368.62237549 187.55557251]
[-378.83993530 176.39956665]
[-385.10815430 162.63133240]
[-386.81298828 147.59973145]
[-383.78735352 132.77743530]
[-376.32769775 119.61654663]
[-365.16485596 109.40645599]
[-351.39242554 103.14744568]
[-336.35968018 101.45269775]
[-321.53942871 104.48825836]
[-308.38354492 111.95672607]
[-298.18093872 123.12641907]
[-291.93115234 136.90304565]
[-277.02670288 135.21264648]
[-262.12225342 133.52224731]
[-247.21780396 131.83184814]
[-232.31335449 130.14144897]
[-217.40890503 128.45104980]
[-202.50445557 126.76065826]
[-187.60002136 125.07025909]
[-175.82575989 115.94796753]
[-161.24154663 122.08079529]
[-146.33711243 120.39039612]
[-131.43266296 118.70000458]
[-116.52821350 117.00960541]
[-101.62376404 115.31920624]
[-102.20392609 99.37360382]
[-101.52497864 83.43190002]
[-99.59115601 67.59336090]
[-96.41449738 51.95661926]
[-92.01477814 36.61903763]
[-86.41939545 21.67612648]
[-79.66320038 7.22093105]
[-71.78825378 -6.65653658]
[-62.84359360 -19.86986351]
[-52.88492203 -32.33676910]
[-41.97425079 -43.97962570]
[-30.17951393 -54.72593307]
[-17.57416153 -64.50877380]
[-4.23668337 -73.26723480]
[9.74986744 -80.94676971]
[24.29839897 -87.49956512]
[39.31831741 -92.88481903]
[54.71609497 -97.06899261]
[70.39585114 -100.02603149]
[86.25995636 -101.73753357]
[102.20960999 -102.19282532]
[118.14550781 -101.38907623]
[133.96841431 -99.33129883]
[149.57980347 -96.03230286]
[164.88247681 -91.51262665]
[179.78111267 -85.80041504]
[194.18296814 -78.93124390]
[207.99835205 -70.94787598]
[221.14123535 -61.90003586]
[233.52978516 -51.84405518]
[245.08685303 -40.84255219]
[255.74047852 -28.96403694]
[265.42431641 -16.28247261]
[274.07809448 -2.87682676]
[281.64785767 11.16942501]
[288.08654785 25.76881790]
[302.23385620 20.78349495]
[316.38119507 15.79817390]
[330.52850342 10.81285191]
[337.63516235 4.97408867]
[345.01779175 5.87365961]
[352.24282837 0.18204033]
[359.60540771 1.23300040]
[373.94546509 -3.16729999]
[388.28552246 -7.56760025]
[393.19476318 -22.28762054]
[405.83819580 -31.28338051]
[421.35412598 -31.09582520]
[433.77639771 -21.79707527]
[438.32836914 -6.96268749]
[433.25973511 7.70321178]
[420.51950073 16.56128502]
[405.00650024 16.20542336]
[392.68582153 6.77246094]
[378.34576416 11.17276096]
[364.00570679 15.57306194]
[349.71157837 20.12035179]
[335.51382446 24.96016884]
[321.36651611 29.94548988]
[307.21917725 34.93081284]
[293.07186890 39.91613388]
[296.80468750 53.58092499]
[299.57165527 67.47352600]
[301.35919189 81.52575684]
[302.15850830 95.66865540]
[301.96566772 109.83281708]
[300.78167725 123.94871521]
[298.61227417 137.94708252]
[295.46817017 151.75921631]
[291.36474609 165.31732178]
[286.32217407 178.55488586]
[280.36517334 191.40690613]
[273.52301025 203.81034851]
[265.82922363 215.70429993]
[257.32162476 227.03042603]
[248.04191589 237.73312378]
[238.03565979 247.75985718]
[227.35197449 257.06143188]
[216.04328918 265.59219360]
[204.16508484 273.31027222]
[191.77568054 280.17782593]
[178.93585205 286.16110229]
[165.70864868 291.23074341]
[152.15895081 295.36187744]
[138.35328674 298.53424072]
[124.35938263 300.73226929]
[110.24593353 301.94512939]
[96.08219910 302.16693115]
[81.93769836 301.39654541]
[67.88183594 299.63778687]
[53.98360443 296.89923096]
[40.31120682 293.19436646]
[26.93174362 288.54138184]
[13.91087818 282.96307373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 58]
[14 57]
[15 56]
[16 55]
[17 54]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[94 119]
[95 118]
[96 117]
[97 116]
[99 115]
[101 114]
[102 113]
[103 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
