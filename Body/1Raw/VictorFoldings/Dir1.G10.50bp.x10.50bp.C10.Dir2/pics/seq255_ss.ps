%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAAAAAAGGGGGGGGGGUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAxxxxxxxxxxCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUCCCCCCCCCCUCACAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[11.29922771 272.58004761]
[1.28966796 267.05676270]
[-8.37724495 260.95361328]
[-17.66795540 254.29176331]
[-26.55021477 247.09431458]
[-34.99318695 239.38627625]
[-42.96756744 231.19439697]
[-50.44567490 222.54711914]
[-57.40155411 213.47444153]
[-63.81105423 204.00785828]
[-69.65192413 194.18025208]
[-83.03820801 200.94836426]
[-96.42449951 207.71647644]
[-109.73965454 214.62348938]
[-122.98223877 221.66860962]
[-136.22482300 228.71374512]
[-149.46740723 235.75888062]
[-162.70999146 242.80401611]
[-175.95257568 249.84915161]
[-189.19515991 256.89428711]
[-202.43774414 263.93942261]
[-215.68034363 270.98455811]
[-228.92292786 278.02969360]
[-234.96618652 292.89099121]
[-250.39331055 297.29370117]
[-263.36990356 287.86038208]
[-263.94146729 271.82751465]
[-251.66950989 261.49411011]
[-235.96806335 264.78710938]
[-222.72547913 257.74197388]
[-209.48287964 250.69683838]
[-196.24029541 243.65170288]
[-182.99771118 236.60656738]
[-169.75512695 229.56143188]
[-156.51254272 222.51629639]
[-143.26995850 215.47116089]
[-130.02737427 208.42602539]
[-116.78479004 201.38088989]
[-112.32798767 195.42416382]
[-103.19261169 194.33020020]
[-89.80632782 187.56208801]
[-76.42004395 180.79397583]
[-86.48335266 153.62515259]
[-92.38916016 125.26079559]
[-94.00580597 96.33326721]
[-91.29724121 67.48749542]
[-84.32385254 39.36655807]
[-73.24111176 12.59739876]
[-58.29608917 -12.22318935]
[-70.18846893 -21.36492348]
[-82.08084869 -30.50665665]
[-98.40007782 -32.12370300]
[-104.91184235 -47.17457962]
[-94.91739655 -60.17623901]
[-78.69817352 -57.75368881]
[-72.93911743 -42.39903641]
[-61.04673386 -33.25730133]
[-49.15435410 -24.11556816]
[-42.47401810 -31.73021889]
[-35.40540695 -38.98587036]
[-27.96778107 -45.86275482]
[-20.18141365 -52.34212875]
[-12.06752300 -58.40633392]
[-3.64822197 -64.03884125]
[5.05354452 -69.22431183]
[14.01406288 -73.94860077]
[23.20891380 -78.19883728]
[32.61303711 -81.96343994]
[42.20080948 -85.23214722]
[51.94609451 -87.99606323]
[61.82233810 -90.24763489]
[71.80262756 -91.98074341]
[81.85975647 -93.19065094]
[91.96632385 -93.87407684]
[102.09478760 -94.02914429]
[112.21754456 -93.65543365]
[122.30699921 -92.75397491]
[132.33566284 -91.32720947]
[142.27621460 -89.37903595]
[152.10154724 -86.91475677]
[161.78488159 -83.94109344]
[171.29985046 -80.46614075]
[180.62049866 -76.49938202]
[189.72145081 -72.05161285]
[198.57788086 -67.13497162]
[207.16566467 -61.76284409]
[215.46139526 -55.94987106]
[223.44247437 -49.71190262]
[233.42520142 -60.90766907]
[243.40791321 -72.10343170]
[243.92973328 -88.13800049]
[256.87701416 -97.61151123]
[272.31771851 -93.25670624]
[278.40704346 -78.41421509]
[270.47381592 -64.46992493]
[254.60368347 -62.12070847]
[244.62095642 -50.92494202]
[234.63822937 -39.72917557]
[247.02998352 -26.62495804]
[258.15151978 -12.42681694]
[267.90679932 2.74258852]
[276.21148682 18.75220871]
[282.99389648 35.46373367]
[288.19540405 52.73279572]
[291.77105713 70.41020203]
[306.67297363 68.69750977]
[321.57485962 66.98481750]
[336.47677612 65.27213287]
[349.32028198 55.07527542]
[364.47131348 61.35050964]
[366.34375000 77.64241028]
[353.01141357 87.19126892]
[338.18945312 80.17403412]
[323.28756714 81.88671875]
[308.38565063 83.59941101]
[293.48376465 85.31210327]
[294.01293945 96.73215485]
[293.86865234 108.16355133]
[293.05139160 119.56661224]
[291.56402588 130.90174866]
[289.41168213 142.12962341]
[286.60186768 153.21125793]
[283.14431763 164.10818481]
[279.05099487 174.78257751]
[274.33618164 185.19737244]
[269.01620483 195.31643677]
[263.10949707 205.10462952]
[256.63662720 214.52798462]
[249.62004089 223.55378723]
[242.08409119 232.15071106]
[234.05491638 240.28889465]
[225.56040955 247.94012451]
[216.63006592 255.07780457]
[207.29486084 261.67718506]
[197.58721924 267.71533203]
[187.54083252 273.17129517]
[177.19055176 278.02615356]
[166.57234192 282.26306152]
[155.72303772 285.86724854]
[144.68031311 288.82629395]
[133.48248291 291.12985229]
[122.16844177 292.76995850]
[110.77743530 293.74090576]
[99.34902954 294.03936768]
[87.92287445 293.66424561]
[76.53864288 292.61688232]
[65.23585510 290.90087891]
[54.05373383 288.52224731]
[43.03110886 285.48919678]
[32.20623398 281.81225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 42]
[12 41]
[13 40]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[49 58]
[50 57]
[51 56]
[88 98]
[89 97]
[90 96]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
