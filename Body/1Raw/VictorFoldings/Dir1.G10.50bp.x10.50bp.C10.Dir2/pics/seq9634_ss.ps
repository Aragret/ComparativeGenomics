%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUAACCCUGGGGGGGGGGCAACACCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUAGUCUxxxxxxxxxxCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCACCCCCCCCCCUCCUAACCCU\
) } def
/len { sequence length } bind def

/coor [
[62.89875793 258.97015381]
[53.12304306 256.36676025]
[43.52736282 253.16284180]
[34.14856339 249.37069702]
[25.02267075 245.00488281]
[16.18472862 240.08216858]
[7.66868019 234.62147522]
[-0.49276739 228.64376831]
[-8.26827049 222.17199707]
[-15.62796688 215.23101807]
[-22.54359245 207.84750366]
[-28.98858452 200.04978943]
[-41.25095367 208.68890381]
[-53.51332092 217.32801819]
[-65.77568817 225.96713257]
[-78.03805542 234.60626221]
[-84.86334991 248.87951660]
[-99.72400665 249.88450623]
[-111.98638153 258.52362061]
[-124.24874878 267.16271973]
[-128.39463806 282.66082764]
[-143.15354919 288.95004272]
[-157.20368958 281.20584106]
[-159.76701355 265.36886597]
[-148.87715149 253.58795166]
[-132.88786316 254.90036011]
[-120.62549591 246.26124573]
[-108.36312866 237.62213135]
[-102.41492462 223.96679688]
[-86.67717743 222.34388733]
[-74.41480255 213.70477295]
[-62.15243912 205.06565857]
[-49.89006805 196.42654419]
[-37.62770081 187.78742981]
[-49.66420364 165.18161011]
[-58.01695251 140.97143555]
[-62.48035049 115.75282288]
[-62.94454193 90.14647675]
[-59.39810181 64.78265381]
[-51.92831802 40.28565979]
[-40.71904755 17.25844193]
[-26.04619217 -3.73221803]
[-8.27090168 -22.16966629]
[12.16931343 -37.60009384]
[34.77134705 -49.64370728]
[58.97888565 -58.00406265]
[55.88056564 -72.68058777]
[52.78224182 -87.35711670]
[49.68392181 -102.03363800]
[46.58559799 -116.71016693]
[43.48727798 -131.38668823]
[40.38895416 -146.06321716]
[37.29063416 -160.73974609]
[34.19231033 -175.41625977]
[21.57555771 -188.78778076]
[27.59000969 -205.24458313]
[24.18703079 -219.85346985]
[20.78405380 -234.46237183]
[5.70617771 -234.79174805]
[-8.81586266 -238.86128235]
[-21.86920166 -246.41517639]
[-32.63329315 -256.97854614]
[-40.43149948 -269.88742065]
[-44.77362061 -284.33029175]
[-45.38669968 -299.39932251]
[-42.23220825 -314.14718628]
[-35.50843048 -327.64688110]
[-25.63803482 -339.04977417]
[-13.24148178 -347.63909912]
[0.90197223 -352.87487793]
[15.90325737 -354.42803955]
[30.81937981 -352.20089722]
[44.71269989 -346.33349609]
[56.70987320 -337.19464111]
[66.05673981 -325.35882568]
[72.16576385 -311.57000732]
[74.65290833 -296.69503784]
[73.36183929 -281.66894531]
[68.37371826 -267.43624878]
[60.00209427 -254.89166260]
[48.77321625 -244.82373047]
[35.39294434 -237.86534119]
[38.79592514 -223.25645447]
[42.19890213 -208.64756775]
[52.32836914 -201.96166992]
[55.25512314 -189.76933289]
[48.86883926 -178.51458740]
[51.96715927 -163.83805847]
[55.06547928 -149.16154480]
[58.16380310 -134.48501587]
[61.26212311 -119.80848694]
[64.36044312 -105.13195801]
[67.45877075 -90.45543671]
[70.55709076 -75.77890778]
[73.65541077 -61.10238647]
[83.68503571 -62.42486572]
[93.77731323 -63.12355423]
[103.89348602 -63.19576263]
[113.99471283 -62.64121246]
[124.04219055 -61.46203613]
[133.99732971 -59.66276169]
[143.82191467 -57.25029755]
[153.47817993 -54.23390961]
[162.92907715 -50.62518692]
[172.13829041 -46.43798447]
[181.07044983 -41.68838120]
[189.69126892 -36.39462280]
[197.96760559 -30.57703781]
[205.86772156 -24.25796700]
[213.36123657 -17.46168327]
[220.41938782 -10.21428490]
[227.01506042 -2.54360580]
[233.12292480 5.52089405]
[238.71954346 13.94824219]
[243.78340149 22.70607376]
[248.29504395 31.76075554]
[252.23716736 41.07751083]
[255.59461975 50.62055969]
[258.35452271 60.35325241]
[260.50622559 70.23820496]
[262.04153442 80.23746490]
[262.95449829 90.31261444]
[263.24163818 100.42497253]
[262.90185547 110.53570557]
[261.93643188 120.60596466]
[260.34909058 130.59709167]
[258.14593506 140.47071838]
[255.33540344 150.18890381]
[251.92831421 159.71434021]
[247.93774414 169.01043701]
[243.37899780 178.04150391]
[238.26962280 186.77285767]
[232.62919617 195.17095947]
[226.47943115 203.20353699]
[219.84390259 210.83976746]
[212.74810791 218.05032349]
[205.21931458 224.80749512]
[197.28640747 231.08535767]
[188.97988892 236.85977173]
[180.33163452 242.10856628]
[171.37486267 246.81159973]
[162.14396667 250.95079041]
[152.67440796 254.51026917]
[143.00256348 257.47631836]
[133.16555786 259.83761597]
[123.20118713 261.58502197]
[113.14770508 262.71188354]
[103.04373169 263.21380615]
[92.92806244 263.08892822]
[82.83956146 262.33770752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 34]
[13 33]
[14 32]
[15 31]
[16 30]
[18 28]
[19 27]
[20 26]
[46 95]
[47 94]
[48 93]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[56 84]
[57 83]
[58 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
