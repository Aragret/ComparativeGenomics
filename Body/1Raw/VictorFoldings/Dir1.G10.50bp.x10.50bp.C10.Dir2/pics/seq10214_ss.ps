%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACAUAGCCGGGGGGGGGGUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCAUxxxxxxxxxxCAUCCUCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACCCCCCCCCCCAACAAAUAGCC\
) } def
/len { sequence length } bind def

/coor [
[82.91947174 458.56872559]
[69.43058777 451.83718872]
[57.94508743 442.07263184]
[49.13071823 429.84274292]
[43.49993896 415.85855103]
[41.38010788 400.93307495]
[42.89447784 385.93405151]
[47.95500183 371.73355103]
[56.26746750 359.15713501]
[67.34859467 348.93597412]
[80.55415344 341.66433716]
[95.11637878 337.76498413]
[94.80839539 322.76812744]
[94.50041962 307.77130127]
[94.19244385 292.77447510]
[93.88446808 277.77761841]
[93.57649231 262.78079224]
[93.26850891 247.78395081]
[92.96053314 232.78710938]
[92.65255737 217.79026794]
[92.34458160 202.79342651]
[92.03659821 187.79660034]
[78.92153168 180.73538208]
[71.04943848 167.97270203]
[70.61970520 152.88357544]
[77.84783936 139.51754761]
[90.88072968 131.51185608]
[90.57274628 116.51501465]
[81.80399323 128.68501282]
[67.82637787 134.12802124]
[53.13663864 131.09298706]
[42.46059418 120.55628204]
[39.23282623 105.90767670]
[44.49173737 91.85976410]
[56.54548645 82.93188477]
[71.51627350 81.99621582]
[84.58954620 89.35550690]
[78.32014465 75.72853088]
[72.05073547 62.10154724]
[67.31062317 76.33290100]
[55.20365906 85.18848419]
[40.20508194 85.39492035]
[27.85898018 76.87589264]
[22.72898674 62.78039169]
[26.71135902 48.31869507]
[38.33404922 38.83644104]
[53.30082703 37.83866501]
[66.07864380 45.69336319]
[62.12203598 31.22459602]
[58.16542816 16.75582886]
[54.20881653 2.28706169]
[39.26001740 3.87751126]
[24.24967957 3.04927135]
[9.56661224 -0.17620417]
[-4.40886021 -5.71536827]
[-17.31473923 -13.42474270]
[-28.81673241 -23.10463715]
[-38.61690903 -34.50431824]
[-46.46141815 -47.32850647]
[-52.14707565 -61.24502182]
[-55.52660370 -75.89340210]
[-56.51246643 -90.89421082]
[-55.07912445 -105.85889435]
[-51.26371002 -120.39982605]
[-45.16504669 -134.14036560]
[-36.94110870 -146.72460938]
[-26.80491257 -157.82656860]
[-15.01901054 -167.15870667]
[-1.88868785 -174.47927856]
[12.24595070 -179.59866333]
[27.01878166 -182.38427734]
[42.04715729 -182.76394653]
[56.94179916 -180.72784424]
[71.31690979 -176.32870483]
[84.80013275 -169.68048096]
[97.04222107 -160.95536804]
[107.72607422 -150.37939453]
[116.57495880 -138.22647095]
[123.35966492 -124.81140900]
[127.90444946 -110.48168182]
[130.09159851 -95.60846710]
[129.86445618 -80.57701111]
[127.22890472 -65.77667236]
[122.25320435 -51.59081268]
[115.06625366 -38.38687897]
[105.85420227 -26.50688362]
[94.85566711 -16.25854874]
[82.35552979 -7.90733194]
[68.67758179 -1.66954863]
[72.63419342 12.79921913]
[76.59080505 27.26798630]
[80.54741669 41.73675537]
[85.67771912 55.83214188]
[91.94712067 69.45912170]
[98.21652985 83.08609772]
[111.64397430 89.77217865]
[126.29669952 86.56317902]
[140.94943237 83.35418701]
[155.60215759 80.14518738]
[170.25488281 76.93619537]
[182.08029175 66.42571259]
[196.16816711 71.26109314]
[210.82089233 68.05210114]
[214.29792786 53.19029999]
[223.88558960 41.31430435]
[237.68026733 34.78209686]
[252.94299316 34.89065170]
[266.64337158 41.61841583]
[276.06112671 53.62958527]
[279.32641602 68.53933716]
[275.79089355 83.38732147]
[266.15652466 95.22547150]
[252.33624268 101.70330811]
[237.07405090 101.53465271]
[223.40028381 94.75298309]
[214.02989197 82.70481873]
[199.37716675 85.91381836]
[188.59980774 96.19477081]
[173.46386719 91.58891296]
[158.81114197 94.79791260]
[144.15841675 98.00691223]
[129.50569153 101.21590424]
[114.85297394 104.42490387]
[105.56958771 116.20703888]
[105.87756348 131.20387268]
[119.22813416 138.66775513]
[126.99892426 151.72576904]
[127.18903351 166.81980896]
[119.84754944 179.89492798]
[107.03343964 187.48861694]
[107.34141541 202.48545837]
[107.64939117 217.48229980]
[107.95737457 232.47912598]
[108.26535034 247.47596741]
[108.57332611 262.47280884]
[108.88130188 277.46963501]
[109.18928528 292.46649170]
[109.49726105 307.46331787]
[109.80523682 322.46014404]
[110.11321259 337.45700073]
[124.82324982 340.75521851]
[138.31620789 347.47857666]
[149.80763245 357.23617554]
[158.62940979 369.46072388]
[164.26866150 383.44149780]
[166.39753723 398.36569214]
[164.89227295 413.36560059]
[159.84036255 427.56918335]
[151.53552246 440.15063477]
[140.46058655 450.37850952]
[127.25943756 457.65817261]
[112.69958496 461.56634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[27 125]
[28 124]
[37 95]
[38 94]
[39 93]
[48 92]
[49 91]
[50 90]
[51 89]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[102 117]
[103 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
