%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGUAAAAGGGGGGGGGGGGAACUCGGCAAAUCUUACCCCGCCUGUUUACCAAAAACAUCACCUCUAGxxxxxxxxxxCUAAAAAUAUUAAACACAAACUACCACCUACCUCCCUCACCAAAGCCCAUCCCCCCCCCCAAAAAUAAAA\
) } def
/len { sequence length } bind def

/coor [
[87.87910461 391.12600708]
[73.00820160 388.61459351]
[59.22939682 382.48309326]
[47.40882492 373.11694336]
[38.28954315 361.10488892]
[32.44479752 347.20202637]
[30.24199104 332.28228760]
[31.81959724 317.28353882]
[37.07844543 303.14865112]
[45.68795776 290.76611328]
[57.10693741 280.91433716]
[70.61757660 274.21258545]
[85.37057495 271.08212280]
[85.99455261 256.09512329]
[86.61853027 241.10810852]
[87.24250793 226.12109375]
[87.86648560 211.13407898]
[88.49046326 196.14704895]
[89.11444092 181.16003418]
[89.73841858 166.17301941]
[90.36239624 151.18600464]
[90.98637390 136.19898987]
[91.61035156 121.21197510]
[82.42948914 114.54686737]
[77.59494019 104.28338623]
[78.30259705 92.96035004]
[84.37740326 83.37866974]
[94.31668854 77.90850830]
[95.56356049 62.96042252]
[96.81043243 48.01233292]
[81.97052765 45.78984833]
[67.30775452 42.60153961]
[52.88489914 38.46106339]
[38.76372910 33.38615036]
[25.00470734 27.39852905]
[11.66675663 20.52384377]
[-1.19300878 12.79152870]
[-13.51952076 4.23469734]
[-25.25999451 -5.11000824]
[-36.36415482 -15.20257282]
[-46.78445435 -25.99977684]
[-56.47626877 -37.45538712]
[-65.39809418 -49.52034760]
[-73.51173401 -62.14299011]
[-80.78243256 -75.26927185]
[-87.17906189 -88.84297180]
[-92.67423248 -102.80596924]
[-97.24440765 -117.09848022]
[-100.87001801 -131.65928650]
[-103.53554535 -146.42605591]
[-105.22956085 -161.33552551]
[-105.94482422 -176.32388306]
[-105.67826843 -191.32691956]
[-104.43103027 -206.28039551]
[-102.20845795 -221.12030029]
[-99.02006531 -235.78305054]
[-94.87950897 -250.20587158]
[-89.80450439 -264.32702637]
[-83.81680298 -278.08599854]
[-76.94203949 -291.42391968]
[-69.20964813 -304.28363037]
[-60.65274811 -316.61010742]
[-51.30797195 -328.35052490]
[-41.21534348 -339.45462036]
[-30.41807556 -349.87484741]
[-18.96240807 -359.56658936]
[-6.89739656 -368.48834229]
[5.72529602 -376.60192871]
[18.85161591 -383.87252808]
[32.42535782 -390.26910400]
[46.38838959 -395.76419067]
[60.68092346 -400.33425903]
[75.24175262 -403.95980835]
[90.00852966 -406.62524414]
[104.91802216 -408.31915283]
[119.90637207 -409.03433228]
[134.90940857 -408.76770020]
[149.86288452 -407.52035522]
[164.70277405 -405.29769897]
[179.36550903 -402.10922241]
[193.78831482 -397.96856689]
[207.90942383 -392.89349365]
[221.66836548 -386.90573120]
[235.00624084 -380.03088379]
[247.86592102 -372.29840088]
[260.19232178 -363.74142456]
[271.93267822 -354.39657593]
[283.03674316 -344.30389404]
[293.45690918 -333.50656128]
[303.14859009 -322.05084229]
[312.07028198 -309.98577881]
[320.18374634 -297.36303711]
[327.45431519 -284.23666382]
[333.85076904 -270.66290283]
[339.34576416 -256.69982910]
[343.91577148 -242.40727234]
[347.54122925 -227.84642029]
[350.20657349 -213.07962036]
[351.90042114 -198.17012024]
[352.61550903 -183.18176270]
[352.34875488 -168.17872620]
[351.10134888 -153.22526550]
[348.87860107 -138.38539124]
[345.69003296 -123.72267914]
[341.54931641 -109.29989624]
[336.47415161 -95.17881012]
[330.48626709 -81.41989899]
[323.61135864 -68.08206940]
[315.87881470 -55.22243881]
[307.32177734 -42.89608002]
[297.97686768 -31.15577126]
[287.88409424 -20.05178833]
[277.08670044 -9.63168049]
[265.63092041 0.05993086]
[253.56581116 8.98154449]
[240.94302368 17.09495735]
[227.81660461 24.36542511]
[214.24279785 30.76181602]
[200.27969360 36.25673676]
[185.98710632 40.82666016]
[171.42623901 44.45201492]
[156.65942383 47.11727524]
[141.74992371 48.81103516]
[126.76155853 49.52603149]
[111.75852203 49.25920868]
[110.51165009 64.20729828]
[109.26477051 79.15538025]
[121.48537445 92.33756256]
[120.36415100 110.27790070]
[106.59736633 121.83595276]
[105.97338867 136.82296753]
[105.34941101 151.80998230]
[104.72543335 166.79699707]
[104.10145569 181.78401184]
[103.47747803 196.77102661]
[102.85350037 211.75805664]
[102.22952271 226.74507141]
[101.60555267 241.73208618]
[100.98157501 256.71908569]
[100.35759735 271.70611572]
[114.79932404 276.05206299]
[127.70611572 283.85369873]
[138.26664734 294.62060547]
[145.81706238 307.67593384]
[149.88275146 322.19906616]
[150.20812988 337.27700806]
[146.77275085 351.96200562]
[139.79255676 365.33093262]
[129.70632935 376.54336548]
[117.14810181 384.89453125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[28 127]
[29 126]
[30 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
