%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACAGCAGUGGGGGGGGGGCCUACUUCUCCUAUCUCUCCCAGUCCUAGCUGCUGGCAUCACUAUACUACxxxxxxxxxxUGCAUACACCACAUGAAACAUCCUAUCAUCUGUAGGCUCAUUCAUUUCUCCCCCCCCCCCUAACAGCAGU\
) } def
/len { sequence length } bind def

/coor [
[81.02531433 341.02270508]
[68.46709442 332.67156982]
[58.38086700 321.45910645]
[51.40067291 308.09020996]
[47.96529007 293.40521240]
[48.29066849 278.32723999]
[52.35635376 263.80413818]
[59.90677261 250.74879456]
[70.46730042 239.98188782]
[83.37409210 232.18026733]
[97.81582642 227.83430481]
[97.19184875 212.84729004]
[96.56787109 197.86027527]
[95.94389343 182.87326050]
[95.31991577 167.88624573]
[94.69593811 152.89923096]
[94.07196045 137.91221619]
[93.44798279 122.92520142]
[92.82400513 107.93817902]
[90.33889008 93.14547729]
[86.03130341 78.77729034]
[81.72371674 64.40910339]
[77.41613007 50.04092407]
[73.10855103 35.67273712]
[68.80096436 21.30455399]
[54.15585327 24.57777405]
[39.31454468 26.79787636]
[24.35267067 27.95355225]
[9.34647179 28.03890991]
[-5.62758112 27.05351448]
[-20.49318314 25.00238800]
[-35.17458344 21.89598274]
[-49.59696579 17.75012779]
[-63.68684006 12.58595085]
[-77.37240601 6.42976665]
[-90.58392334 -0.68705416]
[-103.25405884 -8.72824478]
[-115.31826782 -17.65283012]
[-126.71505737 -27.41533089]
[-137.38635254 -37.96599960]
[-147.27778625 -49.25107193]
[-156.33894348 -61.21303940]
[-164.52365112 -73.79094696]
[-171.79020691 -86.92070007]
[-178.10157776 -100.53540039]
[-183.42559814 -114.56565094]
[-187.73513794 -128.93997192]
[-191.00825500 -143.58511353]
[-193.22824097 -158.42643738]
[-194.38380432 -173.38832092]
[-194.46903992 -188.39451599]
[-193.48353577 -203.36856079]
[-191.43229675 -218.23414612]
[-188.32577515 -232.91552734]
[-184.17980957 -247.33787537]
[-179.01553345 -261.42770386]
[-172.85923767 -275.11322021]
[-165.74230957 -288.32467651]
[-157.70101929 -300.99478149]
[-148.77635193 -313.05889893]
[-139.01376343 -324.45562744]
[-128.46301270 -335.12683105]
[-117.17786407 -345.01818848]
[-105.21582794 -354.07925415]
[-92.63785553 -362.26385498]
[-79.50804138 -369.53030396]
[-65.89330292 -375.84158325]
[-51.86300278 -381.16549683]
[-37.48865128 -385.47491455]
[-22.84348869 -388.74792480]
[-8.00214767 -390.96780396]
[6.95974445 -392.12326050]
[21.96594429 -392.20837402]
[36.93998337 -391.22274780]
[51.80555344 -389.17138672]
[66.48690796 -386.06475830]
[80.90922546 -381.91870117]
[94.99902344 -376.75430298]
[108.68448639 -370.59790039]
[121.89589691 -363.48086548]
[134.56591797 -355.43948364]
[146.62998962 -346.51470947]
[158.02662659 -336.75204468]
[168.69776917 -326.20120239]
[178.58901978 -314.91598511]
[187.64999390 -302.95388794]
[195.83451843 -290.37585449]
[203.10086060 -277.24597168]
[209.41201782 -263.63119507]
[214.73582458 -249.60086060]
[219.04515076 -235.22647095]
[222.31803894 -220.58128357]
[224.53779602 -205.73992920]
[225.69313049 -190.77803040]
[225.77813721 -175.77182007]
[224.79240417 -160.79779053]
[222.74093628 -145.93223572]
[219.63418579 -131.25091553]
[215.48800659 -116.82862091]
[210.32350159 -102.73886871]
[204.16700745 -89.05344391]
[197.04988098 -75.84209442]
[189.00839233 -63.17213440]
[180.08354187 -51.10813522]
[170.32077026 -39.71156693]
[159.76986694 -29.04051018]
[148.48455811 -19.14933777]
[136.52238464 -10.08845520]
[123.94429016 -1.90403533]
[110.81436157 5.36221600]
[97.19952393 11.67327118]
[83.16914368 16.99696922]
[87.47673035 31.36515427]
[91.78431702 45.73333740]
[96.09190369 60.10152054]
[100.39948273 74.46970367]
[104.70706940 88.83789062]
[109.57488251 74.64971161]
[120.03071594 63.89445496]
[134.07583618 58.62809753]
[149.02539062 59.85735321]
[162.02160645 67.34723663]
[170.58013916 79.66598511]
[173.06492615 94.45874786]
[169.00100708 108.89773560]
[159.16520691 120.22280121]
[145.43775940 126.26905060]
[130.44279480 125.88066864]
[117.04673004 119.13191223]
[107.81101990 107.31420135]
[108.43499756 122.30122375]
[109.05897522 137.28823853]
[109.68295288 152.27525330]
[110.30693054 167.26226807]
[110.93090820 182.24928284]
[111.55488586 197.23629761]
[112.17886353 212.22331238]
[112.80284119 227.21032715]
[127.55584717 230.34077454]
[141.06648254 237.04252625]
[152.48545837 246.89431763]
[161.09497070 259.27685547]
[166.35382080 273.41174316]
[167.93142700 288.41049194]
[165.72862244 303.33023071]
[159.88388062 317.23309326]
[150.76458740 329.24514771]
[138.94401550 338.61129761]
[125.16521454 344.74279785]
[110.29431152 347.25418091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
