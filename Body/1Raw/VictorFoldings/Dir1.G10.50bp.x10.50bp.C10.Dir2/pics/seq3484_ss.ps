%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAUCUACCAGGGGGGGGGGUCACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUAxxxxxxxxxxCUCCUUAUUCGAGCCGAGCUGGGCCAGCCAGGCAACCUUCUAGGUAACGACCCCCCCCCCCCACAUCUACAA\
) } def
/len { sequence length } bind def

/coor [
[95.62660217 574.35296631]
[81.46599579 569.19793701]
[68.87625122 560.91577148]
[58.53631592 549.95300293]
[51.00380325 536.90081787]
[46.68494034 522.46325684]
[45.81262970 507.41879272]
[48.43392181 492.57879639]
[54.40744781 478.74356079]
[63.41106796 466.65921021]
[74.95922089 456.97741699]
[88.42913818 450.22036743]
[103.09439850 446.75238037]
[103.09439850 431.75238037]
[103.09439850 416.75238037]
[103.09439850 401.75238037]
[103.09439850 386.75238037]
[103.09439850 371.75238037]
[103.09439850 356.75238037]
[103.09439850 341.75238037]
[103.09439850 326.75238037]
[103.09439850 311.75238037]
[103.09439850 296.75238037]
[103.09439850 281.75238037]
[102.63843536 266.75930786]
[101.72692108 251.78703308]
[100.81540680 236.81475830]
[86.14415741 233.86450195]
[72.72624207 227.21195984]
[61.47897720 217.30522156]
[53.17302322 204.81507874]
[48.37957001 190.58964539]
[47.43106461 175.59666443]
[50.39815521 160.85780334]
[57.08447647 147.37893677]
[67.03961945 136.08154297]
[79.58948517 127.73970795]
[93.88191223 122.92704773]
[92.97039795 107.95477295]
[91.15074158 93.06555176]
[88.42966461 78.31442261]
[85.70858765 63.56329727]
[82.98751068 48.81217194]
[74.19329834 60.96378708]
[59.68813705 64.78482819]
[46.04856491 58.54286575]
[39.45866013 45.06795502]
[42.90623093 30.46952438]
[54.82817841 21.36638451]
[69.81918335 21.88582993]
[81.08228302 31.79208374]
[80.47440338 16.80440712]
[79.86651611 1.81672931]
[79.25863647 -13.17094803]
[69.47450256 -1.80122066]
[54.91274261 1.79811263]
[40.95828247 -3.70397711]
[32.77145767 -16.27282524]
[33.37974930 -31.26048470]
[42.55820847 -43.12454224]
[56.91265869 -47.47768402]
[71.13483429 -42.71012115]
[79.96498108 -30.58616638]
[81.78463745 -45.47538757]
[83.45331573 -60.38228226]
[84.97084045 -75.30532074]
[86.48836517 -90.22836304]
[72.24919128 -95.16220093]
[59.53199005 -103.24733734]
[49.02257156 -114.04775238]
[41.28770065 -126.98097992]
[36.74451065 -141.34956360]
[35.63800812 -156.37861633]
[38.02786255 -171.25762939]
[43.78519821 -185.18421936]
[52.59952164 -197.40733337]
[63.99549484 -207.26779175]
[77.35854340 -214.23382568]
[91.96801758 -217.92976379]
[107.03604126 -218.15631104]
[121.75002289 -214.90122986]
[135.31645203 -208.34007263]
[147.00370789 -198.82667542]
[156.18150330 -186.87406921]
[162.35490417 -173.12686157]
[165.19097900 -158.32641602]
[164.53678894 -143.27088928]
[160.42761230 -128.77221680]
[153.08505249 -115.61230469]
[142.90507507 -104.50083160]
[130.43667603 -96.03703308]
[116.35227203 -90.67736053]
[101.41139984 -88.71083832]
[99.89387512 -73.78779602]
[98.37635040 -58.86475754]
[100.84298706 -51.85081863]
[96.67385101 -43.65572739]
[94.85419464 -28.76651001]
[94.24631500 -13.77883148]
[94.85419464 1.20884562]
[95.46208191 16.19652367]
[96.06996155 31.18420029]
[97.73863983 46.09109497]
[100.45971680 60.84222412]
[103.18079376 75.59334564]
[105.90187073 90.34447479]
[115.57975769 78.88417053]
[130.50979614 77.43713379]
[142.20837402 86.82560730]
[144.02806091 101.71482086]
[134.93486023 113.64435577]
[120.09577179 115.83555603]
[107.94268036 107.04325867]
[108.85419464 122.01554108]
[123.62489319 125.05882263]
[137.09402466 131.81661987]
[148.34614563 141.82292175]
[156.61820984 154.39111328]
[161.35136414 168.66119385]
[162.22866821 183.65849304]
[159.19631958 198.36038208]
[152.46688843 211.76586914]
[142.50448608 222.96386719]
[129.99269104 231.19500732]
[115.78768158 235.90324402]
[116.69919586 250.87551880]
[117.61071014 265.84780884]
[120.56232452 270.29534912]
[121.38863373 274.96197510]
[120.37053680 278.98712158]
[118.09439850 281.75238037]
[118.09439850 296.75238037]
[118.09439850 311.75238037]
[118.09439850 326.75238037]
[118.09439850 341.75238037]
[118.09439850 356.75238037]
[118.09439850 371.75238037]
[118.09439850 386.75238037]
[118.09439850 401.75238037]
[118.09439850 416.75238037]
[118.09439850 431.75238037]
[118.09439850 446.75238037]
[132.75965881 450.22036743]
[146.22958374 456.97741699]
[157.77772522 466.65921021]
[166.78135681 478.74356079]
[172.75488281 492.57879639]
[175.37617493 507.41879272]
[174.50386047 522.46325684]
[170.18499756 536.90081787]
[162.65248108 549.95300293]
[152.31254578 560.91577148]
[139.72279358 569.19793701]
[125.56219482 574.35296631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 131]
[25 127]
[26 126]
[27 125]
[38 114]
[39 113]
[40 106]
[41 105]
[42 104]
[43 103]
[51 102]
[52 101]
[53 100]
[54 99]
[63 98]
[64 97]
[65 95]
[66 94]
[67 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
