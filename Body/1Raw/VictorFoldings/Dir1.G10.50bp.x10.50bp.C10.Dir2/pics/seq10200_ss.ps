%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCCCUGAGGGGGGGGGGCAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUxxxxxxxxxxUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCAUUCUCAUCCACCCCCCCCCCAACCCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[76.25772858 540.66772461]
[62.41178513 534.65167236]
[50.70312500 525.12225342]
[42.00059891 512.78662109]
[36.94999695 498.56008911]
[35.92610550 483.49841309]
[39.00490570 468.71923828]
[45.95792770 455.31933594]
[56.26921082 444.29299927]
[69.17359161 436.45849609]
[83.71347809 432.39715576]
[83.71347809 417.39715576]
[83.71347809 402.39715576]
[83.71347809 387.39715576]
[83.71347809 372.39715576]
[83.71347809 357.39715576]
[83.71347809 342.39715576]
[83.71347809 327.39715576]
[83.71347809 312.39715576]
[83.71347809 297.39715576]
[68.67300415 293.80014038]
[54.91567993 286.71777344]
[43.23646545 276.55462646]
[34.31134033 263.89346313]
[28.65819359 249.46170044]
[26.60677910 234.08981323]
[28.27946281 218.66336060]
[33.58395004 204.07205200]
[42.21836472 191.15844727]
[53.68841171 180.66925049]
[67.33570099 173.21221924]
[82.37550354 169.22082520]
[82.06344604 154.22407532]
[73.58176422 166.59585571]
[60.63242340 174.16650391]
[45.69081879 175.48880005]
[31.61318588 170.30996704]
[21.09060287 159.62001038]
[16.13456535 145.46240234]
[17.69246864 130.54353333]
[25.46650314 117.71526337]
[37.97058868 109.42986298]
[52.81444168 107.27116394]
[67.16051483 111.65181732]
[78.26641846 121.73442078]
[84.00888824 135.59013367]
[87.41186523 120.98123932]
[90.81484222 106.37234497]
[94.06566620 91.72884369]
[97.16399384 77.05232239]
[100.26231384 62.37579346]
[103.36063385 47.69926834]
[89.95417786 34.13610458]
[87.37386322 15.39100838]
[96.47284698 -1.02951586]
[113.46313477 -8.65762329]
[115.63996887 -23.49882889]
[117.81681061 -38.34003448]
[119.99364471 -53.18124008]
[122.17047882 -68.02244568]
[116.51780701 -82.79937744]
[126.02021027 -94.26905823]
[128.19705200 -109.11026764]
[130.37388611 -123.95146942]
[116.22338867 -129.08454895]
[103.39601898 -136.96131897]
[92.41704559 -147.25923157]
[83.73604584 -159.55659485]
[77.70851135 -173.34983826]
[74.58125305 -188.07414246]
[74.48233795 -203.12655640]
[77.41581726 -217.89068604]
[83.26156616 -231.76196289]
[91.78020477 -244.17234802]
[102.62289429 -254.61364746]
[115.34564209 -262.65832520]
[129.42744446 -267.97692871]
[144.29168701 -270.35165405]
[159.32966614 -269.68527222]
[173.92559814 -266.00509644]
[187.48178101 -259.46179199]
[199.44309998 -250.32330322]
[209.31973267 -238.96386719]
[216.70727539 -225.84864807]
[221.30317688 -211.51467896]
[222.91925049 -196.54893494]
[221.48931885 -181.56427002]
[217.07192993 -167.17428589]
[209.84797668 -153.96824646]
[200.11329651 -142.48693848]
[188.26647949 -133.20048523]
[174.79267883 -126.48919678]
[160.24362183 -122.62786865]
[145.21508789 -121.77463531]
[143.03825378 -106.93343353]
[140.86141968 -92.09222412]
[146.66979980 -78.37683105]
[137.01168823 -65.84561157]
[134.83485413 -51.00440216]
[132.65802002 -36.16319656]
[130.48117065 -21.32199097]
[128.30433655 -6.48078632]
[137.69702148 -0.26322234]
[144.09487915 9.07014751]
[146.52861023 20.17376709]
[144.60382080 31.42911720]
[138.56434631 41.18063736]
[129.26211548 47.97923660]
[118.03716278 50.79758835]
[114.93884277 65.47411346]
[111.84051514 80.15064240]
[108.74219513 94.82716370]
[110.29623413 102.79390717]
[105.42373657 109.77532196]
[102.02075958 124.38421631]
[98.61778259 138.99310303]
[97.06020355 153.91201782]
[97.37225342 168.90876770]
[111.62678528 171.94865417]
[124.83473969 178.09381104]
[136.32955933 187.03041077]
[145.53196716 198.30384827]
[151.97915649 211.34182739]
[155.34811401 225.48347473]
[155.47171021 240.01283264]
[152.34706116 254.19505310]
[146.13548279 267.31359863]
[137.15415955 278.70645142]
[125.85996246 287.79953003]
[112.82618713 294.13558960]
[98.71347809 297.39715576]
[98.71347809 312.39715576]
[98.71347809 327.39715576]
[98.71347809 342.39715576]
[98.71347809 357.39715576]
[98.71347809 372.39715576]
[98.71347809 387.39715576]
[98.71347809 402.39715576]
[98.71347809 417.39715576]
[98.71347809 432.39715576]
[113.25336456 436.45849609]
[126.15774536 444.29299927]
[136.46903992 455.31933594]
[143.42205811 468.71923828]
[146.50085449 483.49841309]
[145.47695923 498.56008911]
[140.42636108 512.78662109]
[131.72383118 525.12225342]
[120.01517487 534.65167236]
[106.16923523 540.66772461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[32 118]
[33 117]
[46 116]
[47 115]
[48 114]
[49 112]
[50 111]
[51 110]
[52 109]
[56 102]
[57 101]
[58 100]
[59 99]
[60 98]
[62 96]
[63 95]
[64 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
