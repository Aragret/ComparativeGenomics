%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCCAAACGGGGGGGGGGAUAUAACUGAACUCCUCACACCCAAUUGGACCAAUCUAUCACCCUAUAGAxxxxxxxxxxCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCCCCCCCCCCCAAUACCAAAC\
) } def
/len { sequence length } bind def

/coor [
[80.80942535 362.43234253]
[68.92514801 353.15722656]
[59.60644150 341.30712891]
[53.39507675 327.57095337]
[50.65217590 312.74731445]
[51.53720474 297.69805908]
[55.99871063 283.29812622]
[63.77730942 270.38467407]
[74.42076111 259.70852661]
[87.31027222 251.89035034]
[101.69645691 247.38467407]
[100.76082611 232.41387939]
[99.82520294 217.44308472]
[98.88957214 202.47230530]
[97.95394135 187.50151062]
[97.01831055 172.53071594]
[96.08268738 157.55992126]
[95.14705658 142.58912659]
[94.21142578 127.61833954]
[93.27580261 112.64755249]
[85.70394897 100.89346313]
[91.75341034 88.28807831]
[90.81777954 73.31728363]
[89.88214874 58.34649658]
[74.87726593 58.34973526]
[59.90121078 57.42011642]
[45.01191711 55.56123734]
[30.26698875 52.78029251]
[15.72347736 49.08803177]
[1.43764508 44.49874878]
[-12.53523731 39.03019714]
[-26.14111137 32.70352936]
[-39.32733917 25.54322624]
[-52.04290009 17.57698822]
[-64.23860931 8.83563614]
[-75.86727905 -0.64701235]
[-86.88391113 -10.83426952]
[-97.24590302 -21.68672371]
[-106.91314697 -33.16238785]
[-115.84825134 -45.21686172]
[-124.01665497 -57.80351257]
[-131.38673401 -70.87364197]
[-137.93000793 -84.37669373]
[-143.62112427 -98.26040649]
[-148.43807983 -112.47108459]
[-152.36225891 -126.95374298]
[-155.37844849 -141.65235901]
[-157.47500610 -156.51004028]
[-158.64379883 -171.46934509]
[-158.88031006 -186.47235107]
[-158.18363953 -201.46105957]
[-156.55647278 -216.37745667]
[-154.00509644 -231.16383362]
[-150.53938293 -245.76298523]
[-146.17276001 -260.11843872]
[-140.92210388 -274.17465210]
[-134.80772400 -287.87725830]
[-127.85328674 -301.17318726]
[-120.08570099 -314.01107788]
[-111.53501129 -326.34121704]
[-102.23429871 -338.11590576]
[-92.21954346 -349.28958130]
[-81.52949524 -359.81903076]
[-70.20551300 -369.66351318]
[-58.29140854 -378.78497314]
[-45.83327103 -387.14804077]
[-32.87929916 -394.72045898]
[-19.47961426 -401.47283936]
[-5.68605137 -407.37911987]
[8.44802094 -412.41644287]
[22.86791992 -416.56530762]
[37.51786041 -419.80963135]
[52.34115982 -422.13693237]
[67.28047180 -423.53814697]
[82.27799988 -424.00790405]
[97.27572632 -423.54431152]
[112.21561432 -422.14926147]
[127.03987122 -419.82806396]
[141.69114685 -416.58975220]
[156.11274719 -412.44683838]
[170.24890137 -407.41534424]
[184.04489136 -401.51473999]
[197.44735718 -394.76785278]
[210.40443420 -387.20077515]
[222.86601257 -378.84280396]
[234.78387451 -369.72628784]
[246.11190796 -359.88647461]
[256.80627441 -349.36141968]
[266.82565308 -338.19183350]
[276.13119507 -326.42098999]
[284.68695068 -314.09436035]
[292.45983887 -301.25970459]
[299.41973877 -287.96661377]
[305.53976440 -274.26654053]
[310.79620361 -260.21249390]
[315.16873169 -245.85882568]
[318.64044189 -231.26109314]
[321.19790649 -216.47576904]
[322.83123779 -201.56004333]
[323.53405762 -186.57164001]
[323.30374146 -171.56851196]
[322.14108276 -156.60874939]
[320.05065918 -141.75019836]
[317.04049683 -127.05034637]
[313.12228394 -112.56607056]
[308.31118774 -98.35341644]
[302.62576294 -84.46735382]
[296.08807373 -70.96161652]
[288.72335815 -57.88845062]
[280.56015015 -45.29843903]
[271.63000488 -33.24028778]
[261.96746826 -21.76064682]
[251.60995483 -10.90392876]
[240.59751892 -0.71213830]
[228.97274780 8.77529526]
[216.78063965 17.52166748]
[204.06835938 25.49313736]
[190.88508606 32.65886688]
[177.28181458 38.99113464]
[163.31118774 44.46543884]
[149.02723694 49.06060028]
[134.48524475 52.75884247]
[119.74147034 55.54586029]
[104.85294342 57.41086578]
[105.78857422 72.38166046]
[106.72419739 87.35244751]
[114.29605103 99.10653687]
[108.24658966 111.71192169]
[109.18222046 126.68271637]
[110.11785126 141.65350342]
[111.05347443 156.62429810]
[111.98910522 171.59509277]
[112.92473602 186.56588745]
[113.86035919 201.53666687]
[114.79598999 216.50746155]
[115.73162079 231.47825623]
[116.66725159 246.44905090]
[131.50248718 249.12846375]
[145.26512146 255.28097534]
[157.15501404 264.54885864]
[166.48089600 276.39331055]
[172.70059204 290.12573242]
[175.45248413 304.94769287]
[174.57656860 319.99746704]
[170.12379456 334.40011597]
[162.35302734 347.31826782]
[151.71604919 358.00088501]
[138.83128357 365.82687378]
[124.44783783 370.34127808]
[109.40193176 371.28158569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[22 126]
[23 125]
[24 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
