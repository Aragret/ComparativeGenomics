%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAUCGCCCUGGGGGGGGGGUACCACGCUACUCCUACCUAUCUCCCCUUUUAUACUAAUAAUCUUAUAGAxxxxxxxxxxAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUCCCCCCCCCCACUCAUCGCACU\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 429.02359009]
[70.87159729 423.86856079]
[58.28185654 415.58636475]
[47.94191742 404.62359619]
[40.40940475 391.57147217]
[36.09054184 377.13388062]
[35.21823120 362.08941650]
[37.83952332 347.24942017]
[43.81304932 333.41418457]
[52.81666565 321.32983398]
[64.36482239 311.64804077]
[77.83473969 304.89096069]
[92.50000000 301.42300415]
[92.50000000 286.42300415]
[92.50000000 271.42300415]
[92.50000000 256.42300415]
[92.50000000 241.42298889]
[92.50000000 226.42298889]
[92.50000000 211.42298889]
[92.50000000 196.42298889]
[92.50000000 181.42298889]
[92.50000000 166.42298889]
[77.90982819 163.08952332]
[64.42700195 156.59352112]
[52.72736740 147.26057434]
[43.39741898 135.55856323]
[36.90484238 122.07408142]
[33.57509613 107.48306274]
[33.57509613 92.51693726]
[36.90484238 77.92591858]
[43.39741898 64.44142914]
[52.72736740 52.73941803]
[64.42700195 43.40648651]
[77.90982819 36.91047287]
[92.50000000 33.57700729]
[92.50000000 18.57700539]
[92.50000000 3.57700539]
[92.50000000 -11.42299461]
[92.50000000 -26.42299461]
[77.54043579 -27.63033295]
[62.72652435 -30.03750801]
[48.15435410 -33.62891006]
[33.91843033 -38.38124847]
[20.11107254 -44.26369858]
[6.82183409 -51.23811340]
[-5.86310005 -59.25925827]
[-17.86146164 -68.27511597]
[-29.09543610 -78.22721100]
[-39.49216461 -89.05099487]
[-48.98421860 -100.67627716]
[-57.51004410 -113.02765656]
[-65.01433563 -126.02503967]
[-71.44844055 -139.58412170]
[-76.77061462 -153.61697388]
[-80.94634247 -168.03256226]
[-83.94855499 -182.73742676]
[-85.75777435 -197.63619995]
[-86.36225891 -212.63221741]
[-85.75810242 -227.62826538]
[-83.94921112 -242.52706909]
[-80.94732666 -257.23199463]
[-76.77191162 -271.64770508]
[-71.45005035 -285.68066406]
[-65.01625061 -299.23986816]
[-57.51223755 -312.23742676]
[-48.98668671 -324.58898926]
[-39.49488831 -336.21447754]
[-29.09839821 -347.03851318]
[-17.86464310 -356.99084473]
[-5.86648035 -366.00695801]
[6.81827688 -374.02838135]
[20.10736275 -381.00308228]
[33.91458893 -386.88586426]
[48.15040970 -391.63848877]
[62.72249985 -395.23022461]
[77.53635406 -397.63772583]
[92.49589539 -398.84539795]
[107.50410461 -398.84539795]
[122.46364594 -397.63772583]
[137.27749634 -395.23022461]
[151.84959412 -391.63848877]
[166.08541870 -386.88586426]
[179.89263916 -381.00308228]
[193.18171692 -374.02838135]
[205.86648560 -366.00695801]
[217.86463928 -356.99084473]
[229.09840393 -347.03851318]
[239.49488831 -336.21447754]
[248.98669434 -324.58898926]
[257.51223755 -312.23742676]
[265.01623535 -299.23986816]
[271.45004272 -285.68066406]
[276.77191162 -271.64770508]
[280.94732666 -257.23199463]
[283.94921875 -242.52706909]
[285.75808716 -227.62826538]
[286.36227417 -212.63221741]
[285.75778198 -197.63619995]
[283.94854736 -182.73742676]
[280.94635010 -168.03256226]
[276.77059937 -153.61697388]
[271.44842529 -139.58412170]
[265.01434326 -126.02503967]
[257.51004028 -113.02765656]
[248.98422241 -100.67627716]
[239.49215698 -89.05099487]
[229.09542847 -78.22721100]
[217.86146545 -68.27511597]
[205.86309814 -59.25925827]
[193.17816162 -51.23811340]
[179.88893127 -44.26369858]
[166.08157349 -38.38124847]
[151.84564209 -33.62891006]
[137.27346802 -30.03750801]
[122.45956421 -27.63033295]
[107.50000000 -26.42299461]
[107.50000000 -11.42299461]
[107.50000000 3.57700539]
[107.50000000 18.57700539]
[107.50000000 33.57700729]
[122.09017181 36.91047287]
[135.57299805 43.40648651]
[147.27262878 52.73941803]
[156.60258484 64.44142914]
[163.09515381 77.92591858]
[166.42491150 92.51693726]
[166.42491150 107.48306274]
[163.09515381 122.07408142]
[156.60258484 135.55856323]
[147.27262878 147.26057434]
[135.57299805 156.59352112]
[122.09017181 163.08952332]
[107.50000000 166.42298889]
[107.50000000 181.42298889]
[107.50000000 196.42298889]
[107.50000000 211.42298889]
[107.50000000 226.42298889]
[107.50000000 241.42298889]
[107.50000000 256.42300415]
[107.50000000 271.42300415]
[107.50000000 286.42300415]
[107.50000000 301.42300415]
[122.16526031 304.89096069]
[135.63517761 311.64804077]
[147.18333435 321.32983398]
[156.18695068 333.41418457]
[162.16047668 347.24942017]
[164.78176880 362.08941650]
[163.90945435 377.13388062]
[159.59059143 391.57147217]
[152.05809021 404.62359619]
[141.71813965 415.58636475]
[129.12840271 423.86856079]
[114.96779633 429.02359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
