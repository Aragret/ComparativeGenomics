%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUCACAACGGGGGGGGGGAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCUCUxxxxxxxxxxAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAACCCCCCCCCCUCAACACAAC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 354.01312256]
[71.19830322 347.99710083]
[59.48964310 338.46768188]
[50.78712082 326.13201904]
[45.73651886 311.90548706]
[44.71262741 296.84381104]
[47.79142761 282.06463623]
[54.74444962 268.66473389]
[65.05573273 257.63839722]
[77.96011353 249.80387878]
[92.50000000 245.74256897]
[92.50000000 230.74256897]
[92.50000000 215.74256897]
[92.50000000 200.74256897]
[92.50000000 185.74256897]
[92.50000000 170.74256897]
[92.50000000 155.74256897]
[92.50000000 140.74256897]
[92.50000000 125.74256897]
[92.50000000 110.74256897]
[91.87602234 95.75555420]
[90.62915039 80.80746460]
[89.38227081 65.85937500]
[88.13539886 50.91128922]
[86.88852692 35.96320343]
[85.64164734 21.01511765]
[70.63861847 21.28193855]
[55.65025330 20.56694221]
[40.74074173 18.87318611]
[25.97393417 16.20792389]
[11.41306019 12.58256817]
[-2.87952709 8.01264572]
[-16.84262466 2.51772404]
[-30.41643906 -3.87866592]
[-43.54284668 -11.14913368]
[-56.16563416 -19.26254654]
[-68.23075104 -28.18416023]
[-79.68653107 -37.87577057]
[-90.48392487 -48.29587936]
[-100.57668304 -59.39986420]
[-109.92159271 -71.14017487]
[-118.47864532 -83.46652985]
[-126.21118927 -96.32616425]
[-133.08610535 -109.66398621]
[-139.07397461 -123.42290497]
[-144.14913940 -137.54399109]
[-148.28987122 -151.96676636]
[-151.47843933 -166.62948608]
[-153.70118713 -181.46934509]
[-154.94859314 -196.42282104]
[-155.21533203 -211.42585754]
[-154.50024414 -226.41421509]
[-152.80639648 -241.32371521]
[-150.14105225 -256.09051514]
[-146.51560974 -270.65136719]
[-141.94560242 -284.94390869]
[-136.45060730 -298.90698242]
[-130.05412292 -312.48077393]
[-122.78358459 -325.60711670]
[-114.67009735 -338.22985840]
[-105.74841309 -350.29492188]
[-96.05673218 -361.75064087]
[-85.63655853 -372.54797363]
[-74.53251648 -382.64068604]
[-62.79215622 -391.98553467]
[-50.46574402 -400.54251099]
[-37.60607147 -408.27496338]
[-24.26819992 -415.14981079]
[-10.50925064 -421.13760376]
[3.61186194 -426.21267700]
[18.03466606 -430.35333252]
[32.69740295 -433.54180908]
[47.53728485 -435.76446533]
[62.49076080 -437.01177979]
[77.49379730 -437.27844238]
[92.48215485 -436.56326294]
[107.39163971 -434.86932373]
[122.15841675 -432.20388794]
[136.71925354 -428.57836914]
[151.01177979 -424.00827026]
[164.97482300 -418.51318359]
[178.54855347 -412.11663818]
[191.67488098 -404.84600830]
[204.29756165 -396.73245239]
[216.36257935 -387.81069946]
[227.81825256 -378.11895752]
[238.61550903 -367.69869995]
[248.70814514 -356.59460449]
[258.05291748 -344.85418701]
[266.60983276 -332.52774048]
[274.34222412 -319.66799927]
[281.21697998 -306.33010864]
[287.20468140 -292.57110596]
[292.27966309 -278.44998169]
[296.42022705 -264.02713013]
[299.60864258 -249.36437988]
[301.83120728 -234.52449036]
[303.07843018 -219.57101440]
[303.34500122 -204.56796265]
[302.62973022 -189.57962036]
[300.93572998 -174.67013550]
[298.27020264 -159.90338135]
[294.64459229 -145.34257507]
[290.07440186 -131.05006409]
[284.57922363 -117.08705902]
[278.18261719 -103.51335907]
[270.91189575 -90.38708496]
[262.79827881 -77.76443481]
[253.87643433 -65.69947815]
[244.18463135 -54.24386978]
[233.76432800 -43.44666290]
[222.66017151 -33.35409927]
[210.91969299 -24.00939369]
[198.59318542 -15.45256329]
[185.73341370 -7.72024870]
[172.39546204 -0.84556192]
[158.63644409 5.14205885]
[144.51527405 10.21697235]
[130.09242249 14.35744858]
[115.42964172 17.54575539]
[100.58973694 19.76824188]
[101.83660889 34.71632767]
[103.08348846 49.66441727]
[104.33036041 64.61250305]
[105.57723236 79.56059265]
[106.82411194 94.50867462]
[109.04457092 96.70036316]
[110.49360657 99.76873779]
[110.83758545 103.42081451]
[109.85923004 107.24191284]
[107.50000000 110.74256897]
[107.50000000 125.74256897]
[107.50000000 140.74256897]
[107.50000000 155.74256897]
[107.50000000 170.74256897]
[107.50000000 185.74256897]
[107.50000000 200.74256897]
[107.50000000 215.74256897]
[107.50000000 230.74256897]
[107.50000000 245.74256897]
[122.03988647 249.80387878]
[134.94427490 257.63839722]
[145.25555420 268.66473389]
[152.20857239 282.06463623]
[155.28736877 296.84381104]
[154.26348877 311.90548706]
[149.21287537 326.13201904]
[140.51036072 338.46768188]
[128.80169678 347.99710083]
[114.95575714 354.01312256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 126]
[22 125]
[23 124]
[24 123]
[25 122]
[26 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
