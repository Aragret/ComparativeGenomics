%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUCUAAACGGGGGGGGGGGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGxxxxxxxxxxGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCCCCCCCCCCCUUCCAAAC\
) } def
/len { sequence length } bind def

/coor [
[140.24539185 493.97747803]
[126.75650787 487.24594116]
[115.27100372 477.48138428]
[106.45663452 465.25146484]
[100.82585144 451.26727295]
[98.70602417 436.34179688]
[100.22039795 421.34280396]
[105.28091431 407.14230347]
[113.59338379 394.56588745]
[124.67451477 384.34472656]
[137.88006592 377.07308960]
[152.44229126 373.17370605]
[152.13432312 358.17687988]
[151.82633972 343.18002319]
[151.51835632 328.18319702]
[151.21038818 313.18637085]
[150.90240479 298.18951416]
[150.59442139 283.19268799]
[150.28645325 268.19586182]
[149.97846985 253.19900513]
[149.67050171 238.20217896]
[149.36251831 223.20533752]
[141.36553955 210.63960266]
[148.81785583 196.68348694]
[144.41755676 182.34341431]
[136.26089478 169.75497437]
[128.10423279 157.16653442]
[119.94756317 144.57809448]
[111.79089355 131.98966980]
[86.24312592 138.70138550]
[58.65082550 124.48321533]
[45.66935349 91.22825623]
[30.80275536 89.23220062]
[15.93615723 87.23614502]
[1.06955850 85.24008942]
[-7.28081751 98.01639557]
[-20.35211182 105.89700317]
[-35.54901123 107.31721497]
[-49.85416031 101.99504089]
[-60.42726135 90.98721313]
[-65.16901398 76.47933197]
[-63.13794327 61.35195923]
[-54.73731995 48.60863495]
[-41.63509369 40.77956390]
[-26.43271828 39.41920853]
[-12.14863968 44.79766846]
[-1.61897027 55.84704971]
[3.06561542 70.37348938]
[17.93221474 72.36954498]
[32.79881287 74.36560059]
[47.66541290 76.36165619]
[51.87211609 70.15250397]
[37.46176147 65.98816681]
[36.96942520 50.99624634]
[51.07551193 45.89542389]
[60.28552628 57.73418808]
[64.49223328 51.52503204]
[57.12599182 38.45833588]
[49.75975418 25.39164162]
[42.77563477 19.40683556]
[42.37956238 11.98017311]
[35.28315735 -1.23500943]
[21.06307030 -9.40330791]
[21.29756355 -25.80077934]
[35.74541092 -33.55910873]
[49.54390717 -24.69719505]
[48.49834061 -8.33141232]
[55.59474564 4.88376999]
[62.82644653 18.02540207]
[70.19268799 31.09209633]
[77.55892944 44.15879059]
[85.05260468 43.85087967]
[84.43677521 28.86352539]
[83.82095337 13.87617207]
[83.20512390 -1.11118114]
[82.58953094 -16.09854317]
[97.57690430 -16.71390724]
[98.19248199 -1.72700655]
[98.80830383 13.26034641]
[99.42413330 28.24769974]
[100.03995514 43.23505402]
[107.53363037 42.92713928]
[113.80303955 29.30016136]
[120.07244110 15.67318249]
[115.87908936 0.18785602]
[125.48726654 -12.65980816]
[141.52641296 -13.01418114]
[151.69265747 -0.60341829]
[148.18733215 15.05200481]
[133.69941711 21.94258690]
[127.43001556 35.56956482]
[121.16061401 49.19654465]
[138.45220947 68.35559082]
[143.66635132 91.10146332]
[137.72537231 111.11479187]
[124.37933350 123.83300018]
[132.53599548 136.42143250]
[140.69267273 149.00987244]
[148.84933472 161.59831238]
[157.00599670 174.18675232]
[156.60870361 159.19201660]
[159.38456726 144.45109558]
[165.20857239 130.62789917]
[173.81842041 118.34496307]
[184.82635498 108.15548706]
[197.73660278 100.51837158]
[211.96772766 95.77758026]
[226.87879944 94.14661407]
[241.79826355 95.69892883]
[256.05416870 100.36462402]
[269.00451660 107.93354797]
[280.06604004 118.06484222]
[288.74053955 130.30220032]
[294.63732910 144.09451294]
[297.49090576 158.82057190]
[297.17266846 173.81719971]
[293.69699097 188.40896606]
[287.22042847 201.93872070]
[278.03463745 213.79708862]
[266.55331421 223.45002747]
[253.29354858 230.46279907]
[238.85253906 234.51954651]
[223.88066101 235.43757629]
[209.05220032 233.17555237]
[195.03498840 227.83534241]
[182.46032715 219.65744019]
[171.89454651 209.01017761]
[163.81469727 196.37550354]
[171.83370972 210.01390076]
[164.35935974 222.89735413]
[164.66732788 237.89419556]
[164.97531128 252.89103699]
[165.28329468 267.88787842]
[165.59126282 282.88470459]
[165.89924622 297.88153076]
[166.20721436 312.87838745]
[166.51519775 327.87521362]
[166.82318115 342.87207031]
[167.13114929 357.86889648]
[167.43913269 372.86572266]
[182.14916992 376.16397095]
[195.64212036 382.88732910]
[207.13354492 392.64492798]
[215.95532227 404.86947632]
[221.59458923 418.85025024]
[223.72346497 433.77444458]
[222.21818542 448.77435303]
[217.16627502 462.97793579]
[208.86143494 475.55938721]
[197.78649902 485.78726196]
[184.58535767 493.06689453]
[170.02549744 496.97509766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[24 128]
[25 100]
[26 99]
[27 98]
[28 97]
[29 96]
[32 51]
[33 50]
[34 49]
[35 48]
[57 71]
[58 70]
[59 69]
[61 68]
[62 67]
[82 92]
[83 91]
[84 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
