%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUCACUAGGGGGGGGGGAACGUAAGCCUUCUCCUCACUCUCUCAAUCUUAUCCAUCAUAGCAGGCAGxxxxxxxxxxUUUUUGUAGCCACAGGCUUCCACGGACUUCACGUCAUUAUUGGCUCAACUCCCCCCCCCCUUCCUCACUA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 376.16180420]
[71.19830322 370.14578247]
[59.48964310 360.61636353]
[50.78712082 348.28070068]
[45.73651886 334.05416870]
[44.71262741 318.99249268]
[47.79142761 304.21331787]
[54.74444962 290.81338501]
[65.05573273 279.78707886]
[77.96011353 271.95254517]
[92.50000000 267.89123535]
[92.50000000 252.89123535]
[92.50000000 237.89123535]
[92.50000000 222.89123535]
[92.50000000 207.89123535]
[92.50000000 192.89123535]
[92.50000000 177.89123535]
[92.50000000 162.89123535]
[92.50000000 147.89123535]
[92.50000000 132.89123535]
[92.50000000 117.89124298]
[73.95881653 90.84976196]
[109.85523224 65.57870483]
[102.67272186 52.41012573]
[95.49021149 39.24154282]
[88.03530121 26.22523308]
[80.31121826 13.36683178]
[72.58713531 0.50842917]
[64.86304474 -12.34997368]
[57.13896179 -25.20837593]
[49.41487885 -38.06677628]
[35.85050583 -31.63446808]
[21.72096634 -26.56269073]
[7.16234016 -22.90029144]
[-7.68516350 -20.68254089]
[-22.67855072 -19.93079758]
[-37.67342377 -20.65230179]
[-52.52537155 -22.84010506]
[-67.09135437 -26.47313690]
[-81.23109436 -31.51640701]
[-94.80841064 -37.92134857]
[-107.69254303 -45.62627411]
[-119.75941467 -54.55697632]
[-130.89280701 -64.62744904]
[-140.98548889 -75.74070740]
[-149.94026184 -87.78971863]
[-157.67089844 -100.65844727]
[-164.10293579 -114.22294617]
[-169.17443848 -128.35258484]
[-172.83654785 -142.91128540]
[-175.05400085 -157.75883484]
[-175.80543518 -172.75224304]
[-175.08363342 -187.74710083]
[-172.89553833 -202.59899902]
[-169.26220703 -217.16491699]
[-164.21865845 -231.30455017]
[-157.81344604 -244.88172913]
[-150.10826111 -257.76571655]
[-141.17732239 -269.83239746]
[-131.10662842 -280.96560669]
[-119.99316406 -291.05804443]
[-107.94396973 -300.01260376]
[-95.07509613 -307.74298096]
[-81.51045990 -314.17474365]
[-67.38072205 -319.24594116]
[-52.82194901 -322.90777588]
[-37.97435760 -325.12493896]
[-22.98093796 -325.87606812]
[-7.98609400 -325.15396118]
[6.86576509 -322.96557617]
[21.43160248 -319.33197021]
[35.57114029 -314.28811646]
[49.14820099 -307.88262939]
[62.03202820 -300.17718506]
[74.09854126 -291.24600220]
[85.23152161 -281.17507935]
[95.32376099 -270.06143188]
[104.27806091 -258.01205444]
[112.00818634 -245.14302063]
[118.43968201 -231.57826233]
[123.51061249 -217.44842529]
[127.17213440 -202.88957214]
[129.38899231 -188.04194641]
[130.13984680 -173.04850769]
[129.41743469 -158.05368042]
[127.22874451 -143.20185852]
[123.59483337 -128.63609314]
[118.55072021 -114.49665833]
[112.14495850 -100.91973114]
[104.43926239 -88.03605652]
[95.50783539 -75.96972656]
[85.43669128 -64.83693695]
[74.32283020 -54.74492264]
[62.27328110 -45.79086304]
[69.99736786 -32.93246078]
[77.72145081 -20.07405853]
[85.44553375 -7.21565580]
[93.16961670 5.64274645]
[100.89370728 18.50114822]
[105.28889465 20.51555824]
[108.43412781 25.34658051]
[108.65879822 32.05903625]
[115.84130096 45.22761536]
[123.02381134 58.39619827]
[136.41009521 65.16431427]
[151.27314758 63.14197922]
[166.13618469 61.11964417]
[176.95275879 49.27138519]
[192.94987488 50.48457336]
[201.85592651 63.82856369]
[196.83892822 79.06697845]
[181.74752808 84.51022339]
[168.15852356 75.98268890]
[153.29548645 78.00502777]
[138.43243408 80.02735901]
[137.26687622 87.43624115]
[152.08460999 89.76757050]
[149.75303650 104.58525848]
[134.93577576 102.25399780]
[133.77021790 109.66287994]
[147.29441833 116.15103912]
[160.81860352 122.63920593]
[177.71467590 124.03887939]
[181.04699707 140.66210938]
[165.99589539 148.46598816]
[154.33044434 136.16339111]
[140.80624390 129.67523193]
[127.28205872 123.18706512]
[116.29842377 122.27625275]
[107.50000000 117.89124298]
[107.50000000 132.89123535]
[107.50000000 147.89123535]
[107.50000000 162.89123535]
[107.50000000 177.89123535]
[107.50000000 192.89123535]
[107.50000000 207.89123535]
[107.50000000 222.89123535]
[107.50000000 237.89123535]
[107.50000000 252.89123535]
[107.50000000 267.89123535]
[122.03988647 271.95254517]
[134.94427490 279.78707886]
[145.25555420 290.81338501]
[152.20857239 304.21331787]
[155.28736877 318.99249268]
[154.26348877 334.05416870]
[149.21287537 348.28070068]
[140.51036072 360.61636353]
[128.80169678 370.14578247]
[114.95575714 376.16180420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 104]
[24 103]
[25 102]
[26 99]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[105 115]
[106 114]
[107 113]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
