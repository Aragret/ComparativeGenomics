%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUUUCCCCGGGGGGGGGGCUCUAUUGAUCCCCACCUCCAAAUAUCUCAUCAACAACCGACUAAUCACCxxxxxxxxxxCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCUACUCCUAAUCACAUAACCCCCCCCCCCCUAUUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 363.07766724]
[71.19830322 357.06164551]
[59.48964310 347.53222656]
[50.78712082 335.19653320]
[45.73651886 320.97003174]
[44.71262741 305.90835571]
[47.79142761 291.12918091]
[54.74444962 277.72924805]
[65.05573273 266.70291138]
[77.96011353 258.86840820]
[92.50000000 254.80709839]
[92.50000000 239.80709839]
[92.50000000 224.80709839]
[92.50000000 209.80709839]
[92.50000000 194.80709839]
[92.50000000 179.80709839]
[92.50000000 164.80709839]
[92.50000000 149.80709839]
[92.50000000 134.80709839]
[92.50000000 119.80709839]
[82.51039124 111.94507599]
[78.82164764 99.77967834]
[82.76268005 87.69365692]
[92.91368866 80.04116058]
[93.22573853 65.04440308]
[93.53779602 50.04764938]
[93.69383240 35.04846191]
[93.69383240 20.04846382]
[93.69383240 5.04846287]
[93.69383240 -9.95153713]
[78.72291565 -10.97537899]
[63.85676193 -13.01848984]
[49.16469574 -16.07134438]
[34.71521378 -20.11970901]
[20.57568932 -25.14470673]
[6.81204844 -31.12290764]
[-6.51153851 -38.02644348]
[-19.33294868 -45.82312012]
[-31.59240150 -54.47658920]
[-43.23273849 -63.94650269]
[-54.19968796 -74.18871307]
[-64.44211578 -85.15544891]
[-73.91226196 -96.79560089]
[-82.56597900 -109.05487823]
[-90.36291504 -121.87613678]
[-97.26671600 -135.19958496]
[-103.24519348 -148.96310425]
[-108.27047729 -163.10252380]
[-112.31912994 -177.55192566]
[-115.37228394 -192.24392700]
[-117.41569519 -207.11004639]
[-118.43983459 -222.08094788]
[-118.43993378 -237.08683777]
[-117.41599274 -252.05773926]
[-115.37278748 -266.92388916]
[-112.31983185 -281.61593628]
[-108.27136993 -296.06536865]
[-103.24627686 -310.20486450]
[-97.26798248 -323.96847534]
[-90.36435699 -337.29202271]
[-82.56759644 -350.11337280]
[-73.91404724 -362.37277222]
[-64.44405365 -374.01303101]
[-54.20177460 -384.97991943]
[-43.23496246 -395.22229004]
[-31.59475136 -404.69235229]
[-19.33541298 -413.34597778]
[-6.51410675 -421.14282227]
[6.80938721 -428.04653931]
[20.57294846 -434.02493286]
[34.71240616 -439.05010986]
[49.16183090 -443.09866333]
[63.85385895 -446.15173340]
[78.71997833 -448.19503784]
[93.69088745 -449.21908569]
[108.69677734 -449.21908569]
[123.66768646 -448.19503784]
[138.53381348 -446.15173340]
[153.22583008 -443.09866333]
[167.67526245 -439.05010986]
[181.81471252 -434.02493286]
[195.57827759 -428.04653931]
[208.90177917 -421.14282227]
[221.72308350 -413.34597778]
[233.98242188 -404.69235229]
[245.62263489 -395.22229004]
[256.58944702 -384.97991943]
[266.83172607 -374.01303101]
[276.30172729 -362.37277222]
[284.95526123 -350.11337280]
[292.75201416 -337.29202271]
[299.65563965 -323.96847534]
[305.63394165 -310.20486450]
[310.65902710 -296.06536865]
[314.70748901 -281.61593628]
[317.76046753 -266.92388916]
[319.80364990 -252.05773926]
[320.82760620 -237.08683777]
[320.82751465 -222.08094788]
[319.80337524 -207.11004639]
[317.75994873 -192.24392700]
[314.70678711 -177.55192566]
[310.65814209 -163.10252380]
[305.63287354 -148.96310425]
[299.65438843 -135.19958496]
[292.75057983 -121.87613678]
[284.95364380 -109.05487823]
[276.29992676 -96.79560089]
[266.82977295 -85.15544891]
[256.58737183 -74.18871307]
[245.62040710 -63.94650269]
[233.98007202 -54.47658920]
[221.72061157 -45.82312012]
[208.89920044 -38.02644348]
[195.57562256 -31.12290764]
[181.81198120 -25.14470673]
[167.67245483 -20.11970901]
[153.22297668 -16.07134438]
[138.53089905 -13.01848984]
[123.66475677 -10.97537899]
[108.69383240 -9.95153713]
[108.69383240 5.04846287]
[108.69383240 20.04846382]
[108.69383240 35.04846191]
[111.85941315 41.78083038]
[108.53455353 50.35970688]
[108.22249603 65.35646057]
[107.91043854 80.35321808]
[119.59657288 91.96597290]
[119.42519379 108.43997192]
[107.50000000 119.80709839]
[107.50000000 134.80709839]
[107.50000000 149.80709839]
[107.50000000 164.80709839]
[107.50000000 179.80709839]
[107.50000000 194.80709839]
[107.50000000 209.80709839]
[107.50000000 224.80709839]
[107.50000000 239.80709839]
[107.50000000 254.80709839]
[122.03988647 258.86840820]
[134.94427490 266.70291138]
[145.25555420 277.72924805]
[152.20857239 291.12918091]
[155.28736877 305.90835571]
[154.26348877 320.97003174]
[149.21287537 335.19653320]
[140.51036072 347.53222656]
[128.80169678 357.06164551]
[114.95575714 363.07766724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 128]
[25 127]
[26 126]
[27 124]
[28 123]
[29 122]
[30 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
