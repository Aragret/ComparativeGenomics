%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAUCAUCGGGGGGGGGGCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGxxxxxxxxxxAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCAAAGACCCCCCCCCCCCACAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[107.42240906 457.41296387]
[93.57646942 451.39694214]
[81.86780548 441.86752319]
[73.16528320 429.53186035]
[68.11467743 415.30532837]
[67.09078979 400.24365234]
[70.16958618 385.46447754]
[77.12261200 372.06454468]
[87.43389130 361.03823853]
[100.33827209 353.20370483]
[114.87815857 349.14239502]
[114.87815857 334.14239502]
[114.87815857 319.14239502]
[114.87815857 304.14239502]
[114.87815857 289.14239502]
[114.87815857 274.14239502]
[114.87815857 259.14239502]
[114.87815857 244.14241028]
[114.87815857 229.14241028]
[114.87815857 214.14241028]
[99.14344788 204.76902771]
[92.14170837 188.87908936]
[95.46645355 172.80569458]
[106.81057739 162.29692078]
[103.40760040 147.68801880]
[100.00462341 133.07913208]
[81.17853546 129.95619202]
[66.05255127 116.34490967]
[60.27569580 95.51653290]
[66.95544434 73.63169098]
[85.29507446 57.92060471]
[75.54741669 46.51958466]
[65.79976654 35.11856461]
[53.29205704 43.43207932]
[39.87343979 50.17730331]
[25.73959732 55.25587082]
[11.09664249 58.59372330]
[-3.84188652 60.14218140]
[-18.85814095 59.87866211]
[-33.73314285 57.80701828]
[-48.24996567 53.95745087]
[-62.19691849 48.38610077]
[-75.37060547 41.17421341]
[-87.57891846 32.42696381]
[-98.64382935 22.27190971]
[-108.40397644 10.85714149]
[-116.71702576 -1.65087950]
[-123.46174622 -15.06974983]
[-128.53977966 -29.20378304]
[-131.87709045 -43.84686279]
[-133.42498779 -58.78544617]
[-133.16090393 -73.80169678]
[-131.08869934 -88.67661285]
[-127.23859406 -103.19329834]
[-121.66672516 -117.14003754]
[-114.45434570 -130.31346130]
[-105.70664215 -142.52145386]
[-95.55117035 -153.58598328]
[-84.13603973 -163.34568787]
[-71.62770844 -171.65827942]
[-58.20858383 -178.40249634]
[-44.07436371 -183.48001099]
[-29.43115807 -186.81675720]
[-14.49251461 -188.36410522]
[0.52372092 -188.09945679]
[15.39856625 -186.02670288]
[29.91510201 -182.17605591]
[43.86163712 -176.60365295]
[57.03478622 -169.39079285]
[69.24244690 -160.64262390]
[80.30659485 -150.48674011]
[90.06588745 -139.07124329]
[98.37799835 -126.56259918]
[105.12171936 -113.14322662]
[110.19869995 -99.00881195]
[113.53491211 -84.36548615]
[115.08169556 -69.42678070]
[114.81649017 -54.41055679]
[112.74317932 -39.53578949]
[108.89198303 -25.01939774]
[103.31906891 -11.07307243]
[96.10570526 2.09980679]
[87.35708618 14.30714130]
[77.20079041 25.37091255]
[86.94844055 36.77193451]
[96.69609070 48.17295456]
[111.68310547 47.54897690]
[120.44931793 35.37714005]
[121.55636597 19.01540184]
[136.39672852 12.03717709]
[149.70391846 21.62106514]
[147.78862000 37.90798187]
[132.62115479 44.14334488]
[123.85494232 56.31518173]
[133.60260010 67.71620178]
[146.98887634 60.94808960]
[160.37516785 54.17997360]
[173.76145935 47.41186142]
[187.14773560 40.64374542]
[193.49887085 25.91137505]
[209.01423645 21.83058929]
[221.79177856 31.53181458]
[222.02966309 47.57310486]
[209.54541016 57.64895248]
[193.91584778 54.03002930]
[180.52957153 60.79814529]
[167.14328003 67.56626129]
[153.75700378 74.33437347]
[140.37071228 81.10248566]
[141.93196106 94.62032318]
[139.31185913 107.25946808]
[133.19401550 117.82534027]
[124.57161713 125.45303345]
[114.61351776 129.67614746]
[118.01649475 144.28504944]
[121.41947174 158.89393616]
[142.48626709 167.87213135]
[149.06124878 192.62829590]
[162.58544922 199.11645508]
[176.10963440 205.60462952]
[190.27819824 198.98753357]
[205.37190247 203.07585144]
[214.26394653 215.93919373]
[212.75579834 231.50387573]
[201.55955505 242.42074585]
[185.96173096 243.53518677]
[173.32714844 234.32098389]
[169.62147522 219.12881470]
[156.09727478 212.64065552]
[142.57308960 206.15248108]
[129.87815857 214.14241028]
[129.87815857 229.14241028]
[129.87815857 244.14241028]
[129.87815857 259.14239502]
[129.87815857 274.14239502]
[129.87815857 289.14239502]
[129.87815857 304.14239502]
[129.87815857 319.14239502]
[129.87815857 334.14239502]
[129.87815857 349.14239502]
[144.41804504 353.20370483]
[157.32243347 361.03823853]
[167.63371277 372.06454468]
[174.58673096 385.46447754]
[177.66552734 400.24365234]
[176.64164734 415.30532837]
[171.59103394 429.53186035]
[162.88851929 441.86752319]
[151.17985535 451.39694214]
[137.33392334 457.41296387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 116]
[25 115]
[26 114]
[31 86]
[32 85]
[33 84]
[87 94]
[88 93]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[118 130]
[119 129]
[120 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
