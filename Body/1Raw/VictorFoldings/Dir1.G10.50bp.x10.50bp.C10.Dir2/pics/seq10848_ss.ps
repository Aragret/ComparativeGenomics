%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCUAGGGGGGGGGGGCAGCAGCAGGCAAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAxxxxxxxxxxACCGCACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACCCCCCCCCCCUCCUCCUAG\
) } def
/len { sequence length } bind def

/coor [
[83.16418457 399.45446777]
[70.29091644 391.55157471]
[60.16661835 380.34106445]
[53.61203766 366.73171997]
[51.15851593 351.82681274]
[53.00495148 336.83456421]
[59.00166321 322.97036743]
[68.66252899 311.35809326]
[81.20437622 302.93914795]
[95.61049652 298.39599609]
[95.29843903 283.39923096]
[94.98638153 268.40249634]
[94.67432404 253.40573120]
[94.36227417 238.40898132]
[94.05021667 223.41221619]
[93.73815918 208.41546631]
[93.42610168 193.41871643]
[93.11404419 178.42196655]
[92.80198669 163.42520142]
[84.27196503 154.79119873]
[83.92671204 142.25726318]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[92.50000000 37.43565369]
[92.50000000 22.43565369]
[77.71820831 19.65450859]
[63.70289993 14.20589542]
[50.93086243 6.27674532]
[39.83630371 -3.86165547]
[30.79607773 -15.86294174]
[24.11689758 -29.31750488]
[20.02492142 -43.76647186]
[18.65810013 -58.71735764]
[20.06152153 -73.66085052]
[24.18593407 -88.08815002]
[30.88946152 -101.50830841]
[39.94248962 -113.46494293]
[51.03553772 -123.55172729]
[63.78981781 -131.42622375]
[77.77018738 -136.82148743]
[92.50000000 -139.55514526]
[92.50000000 -154.55514526]
[92.50000000 -169.55514526]
[92.50000000 -184.55514526]
[92.50000000 -199.55514526]
[92.50000000 -214.55514526]
[77.59819031 -216.43646240]
[63.04969025 -220.17068481]
[49.08395004 -225.69891357]
[35.92123032 -232.93395996]
[23.76912498 -241.76173401]
[12.81928921 -252.04299927]
[3.24441957 -263.61560059]
[-4.80447531 -276.29702759]
[-11.20045280 -289.88726807]
[-15.84263802 -304.17199707]
[-18.65781975 -318.92590332]
[-19.60159492 -333.91632080]
[-18.65908051 -348.90679932]
[-15.84514236 -363.66098022]
[-11.20415878 -377.94607544]
[-4.80932522 -391.53686523]
[3.23850226 -404.21896362]
[12.81239796 -415.79235840]
[23.76136780 -426.07455444]
[35.91273117 -434.90335083]
[49.07484436 -442.13952637]
[63.04011536 -447.66891479]
[77.58830261 -451.40435791]
[92.48995209 -453.28692627]
[107.51004791 -453.28692627]
[122.41169739 -451.40435791]
[136.95988464 -447.66891479]
[150.92515564 -442.13952637]
[164.08726501 -434.90335083]
[176.23863220 -426.07455444]
[187.18760681 -415.79235840]
[196.76150513 -404.21896362]
[204.80932617 -391.53686523]
[211.20416260 -377.94607544]
[215.84513855 -363.66098022]
[218.65908813 -348.90679932]
[219.60159302 -333.91632080]
[218.65782166 -318.92590332]
[215.84263611 -304.17199707]
[211.20045471 -289.88726807]
[204.80447388 -276.29702759]
[196.75558472 -263.61560059]
[187.18070984 -252.04299927]
[176.23088074 -241.76173401]
[164.07876587 -232.93395996]
[150.91604614 -225.69891357]
[136.95030212 -220.17068481]
[122.40180969 -216.43646240]
[107.50000000 -214.55514526]
[107.50000000 -199.55514526]
[107.50000000 -184.55514526]
[107.50000000 -169.55514526]
[107.50000000 -154.55514526]
[107.50000000 -139.55514526]
[122.22981262 -136.82148743]
[136.21018982 -131.42622375]
[148.96446228 -123.55172729]
[160.05751038 -113.46494293]
[169.11053467 -101.50830841]
[175.81407166 -88.08815002]
[179.93847656 -73.66085052]
[181.34190369 -58.71735764]
[179.97508240 -43.76647186]
[175.88310242 -29.31750488]
[169.20391846 -15.86294174]
[160.16369629 -3.86165547]
[149.06913757 6.27674532]
[136.29710388 14.20589542]
[122.28179169 19.65450859]
[107.50000000 22.43565369]
[107.50000000 37.43565369]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[117.08272552 148.25355530]
[107.79874420 163.11315918]
[108.11080170 178.10990906]
[108.42285919 193.10665894]
[108.73490906 208.10340881]
[109.04696655 223.10017395]
[109.35902405 238.09692383]
[109.67108154 253.09367371]
[109.98313904 268.09042358]
[110.29519653 283.08718872]
[110.60724640 298.08392334]
[125.18988800 302.02389526]
[138.07109070 309.91384888]
[148.20664978 321.11416626]
[154.77490234 334.71691895]
[157.24339294 349.61935425]
[155.41201782 364.61346436]
[149.42922974 378.48367310]
[139.78004456 390.10562134]
[127.24666595 398.53717041]
[112.84511566 403.09481812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[22 129]
[23 128]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[46 105]
[47 104]
[48 103]
[49 102]
[50 101]
[51 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
