%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUACAAACAAGGGGGGGGGGCUAACCUGCCACUAAUAGUUAUGUCAUCCCUCUUAUUAAUCAUCAUCCUAxxxxxxxxxxCCUAAUCACAUAACCUAUUCCCCCGAGCAAUCUCAAUUACAAUAUAUACACCCCCCCCCCCCAACAAACAA\
) } def
/len { sequence length } bind def

/coor [
[82.41821289 544.44378662]
[68.39627075 538.89074707]
[56.19631195 530.02441406]
[46.58523941 518.40209961]
[40.16721344 504.75442505]
[37.34567642 489.93923950]
[38.29799271 474.88784790]
[42.96429825 460.54641724]
[51.05126572 447.81646729]
[62.05054092 437.49819946]
[75.27069855 430.24023438]
[89.88071442 426.49877930]
[89.88071442 411.49877930]
[89.88071442 396.49877930]
[89.88071442 381.49877930]
[89.88071442 366.49877930]
[89.88071442 351.49877930]
[89.88071442 336.49877930]
[89.88071442 321.49877930]
[89.88071442 306.49877930]
[89.88071442 291.49877930]
[75.76935577 288.23767090]
[62.73666763 281.90264893]
[51.44310760 272.81106567]
[42.46183395 261.41998291]
[36.24963379 248.30329895]
[33.12366104 234.12283325]
[33.24526215 219.59489441]
[36.61166000 205.45410156]
[43.05590439 192.41625977]
[52.25516129 181.14210510]
[63.74687958 172.20384216]
[76.95204926 166.05610657]
[91.20437622 163.01278687]
[91.51235199 148.01594543]
[91.82033539 133.01910400]
[92.12831116 118.02227020]
[75.94037628 98.73590851]
[91.38639069 72.81262207]
[85.68173218 58.93974686]
[79.97706604 45.06686401]
[74.27239990 31.19398308]
[68.56774139 17.32110405]
[62.86307526 3.44822264]
[57.15841293 -10.42465782]
[42.60294342 -6.69847488]
[27.67053413 -5.03436136]
[12.65184784 -5.46470976]
[-2.16077209 -7.98114300]
[-16.47899246 -12.53467846]
[-30.02410698 -19.03668022]
[-42.53245544 -27.36058426]
[-53.76055527 -37.34436417]
[-63.48985291 -48.79368210]
[-71.53096771 -61.48567581]
[-77.72736359 -75.17328644]
[-81.95844269 -89.59008789]
[-84.14183807 -104.45545197]
[-84.23504639 -119.48001099]
[-82.23625183 -134.37132263]
[-78.18437195 -148.83950806]
[-72.15827179 -162.60293579]
[-64.27525330 -175.39372253]
[-54.68875122 -186.96287537]
[-43.58538437 -197.08518982]
[-31.18127441 -205.56364441]
[-17.71787453 -212.23320007]
[-3.45725155 -216.96403503]
[11.32300663 -219.66404724]
[26.33519745 -220.28070068]
[41.28710556 -218.80198669]
[55.88768387 -215.25668335]
[69.85272980 -209.71379089]
[82.91041565 -202.28123474]
[94.80656433 -193.10365295]
[105.30960846 -182.35972595]
[114.21511078 -170.25856018]
[121.34972382 -157.03572083]
[126.57456970 -142.94859314]
[129.78793335 -128.27139282]
[130.92727661 -113.28980255]
[129.97042847 -98.29544830]
[126.93600464 -83.58020782]
[121.88307190 -69.43050385]
[114.90998840 -56.12177658]
[106.15248871 -43.91308212]
[95.78102875 -33.04206085]
[83.99751282 -23.72032356]
[71.03129578 -16.12932205]
[76.73595428 -2.25644064]
[82.44062042 11.61643982]
[88.14528656 25.48932076]
[93.84994507 39.36220169]
[99.55461121 53.23508072]
[105.25926971 67.10796356]
[106.90397644 52.19840240]
[104.97960663 37.32235336]
[111.12317657 23.63818359]
[123.51858521 15.19106483]
[138.50163269 14.47805119]
[151.64317322 21.70991707]
[159.05844116 34.74884796]
[158.55541992 49.74041367]
[150.28279114 62.25295258]
[136.68670654 68.58752441]
[124.97171783 77.95551300]
[139.74383545 75.35079193]
[154.51596069 72.74607086]
[166.72378540 61.79614639]
[182.22439575 67.14996338]
[185.07206726 83.29996490]
[172.33738708 93.63242340]
[157.12068176 87.51818848]
[142.34855652 90.12290955]
[127.57644653 92.72763062]
[121.46828461 110.93507385]
[107.12514496 118.33024597]
[106.81716919 133.32708740]
[106.50919342 148.32392883]
[106.20121765 163.32075500]
[121.24337769 167.30857849]
[134.89363098 174.76303101]
[146.36694336 185.25067139]
[155.00460815 198.16375732]
[160.31204224 212.75543213]
[161.98715210 228.18299866]
[159.93746948 243.55650330]
[154.28530884 257.99008179]
[145.36041260 270.65307617]
[133.68074036 280.81777954]
[119.92246246 287.90127563]
[104.88071442 291.49877930]
[104.88071442 306.49877930]
[104.88071442 321.49877930]
[104.88071442 336.49877930]
[104.88071442 351.49877930]
[104.88071442 366.49877930]
[104.88071442 381.49877930]
[104.88071442 396.49877930]
[104.88071442 411.49877930]
[104.88071442 426.49877930]
[119.49072266 430.24023438]
[132.71087646 437.49819946]
[143.71015930 447.81646729]
[151.79711914 460.54641724]
[156.46342468 474.88784790]
[157.41574097 489.93923950]
[154.59420776 504.75442505]
[148.17617798 518.40209961]
[138.56510925 530.02441406]
[126.36515045 538.89074707]
[112.34320831 544.44378662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[34 120]
[35 119]
[36 118]
[37 117]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 89]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
