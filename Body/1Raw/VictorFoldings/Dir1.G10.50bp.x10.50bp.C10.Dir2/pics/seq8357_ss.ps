%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAUCAAAGGGGGGGGGGCUAACCUCAAAACAAAUGAUAACCAUACACAACACUAAAGGACGAACCUGxxxxxxxxxxGCAGGAAUCUUCUUACUCAUCCGCUUCCACCCCCUAGCAGAAAAUAGCCCCCCCCCCCCCACUAAUCCAA\
) } def
/len { sequence length } bind def

/coor [
[84.58554077 422.85327148]
[72.70127106 413.57815552]
[63.38256454 401.72805786]
[57.17119980 387.99188232]
[54.42829514 373.16824341]
[55.31332397 358.11898804]
[59.77483368 343.71905518]
[67.55342865 330.80560303]
[78.19688416 320.12945557]
[91.08638763 312.31127930]
[105.47257996 307.80560303]
[104.53694916 292.83480835]
[103.60131836 277.86401367]
[102.66569519 262.89321899]
[101.73006439 247.92242432]
[100.79443359 232.95164490]
[99.85881042 217.98085022]
[98.92317963 203.01005554]
[97.98754883 188.03926086]
[97.05192566 173.06846619]
[96.11629486 158.09768677]
[95.18066406 143.12689209]
[94.24503326 128.15609741]
[78.15699768 118.67534637]
[71.29161835 101.30938721]
[56.64812088 98.05856323]
[42.00461960 94.80773926]
[34.67991638 108.00730896]
[23.94342995 118.59740448]
[10.67127323 125.72586823]
[-4.05690002 128.82250977]
[-19.04572296 127.64474487]
[-33.08113480 122.29653931]
[-45.02871704 113.21930695]
[-53.92537308 101.15550995]
[-59.05697632 87.08789062]
[-60.01568604 72.15945435]
[-74.65918732 68.90862274]
[-85.54165649 79.84367371]
[-100.61341095 83.13699341]
[-115.06509399 77.73769379]
[-124.28522491 65.36867523]
[-125.33171082 49.97684479]
[-117.87059784 36.47368240]
[-104.28272247 29.16799355]
[-88.90391541 30.39100075]
[-76.64149475 39.75244522]
[-71.40836334 54.26512527]
[-56.76485825 57.51594925]
[-49.57936096 44.39551163]
[-38.97720337 33.82075119]
[-25.81156540 26.65473175]
[-11.14534569 23.48571205]
[3.83467865 24.57886887]
[17.91386604 29.85413742]
[29.94820404 38.89200211]
[38.95726776 50.96684265]
[44.20409393 65.10520172]
[45.25544357 80.16423798]
[59.89894485 83.41506195]
[74.54244995 86.66588593]
[79.98298645 76.61169434]
[89.44025421 68.91352081]
[101.84637451 65.17145538]
[102.47035217 50.18443680]
[93.54856873 34.11018372]
[103.44264984 19.64964867]
[103.75470734 4.65289450]
[104.06676483 -10.34385967]
[104.37882233 -25.34061241]
[90.94667816 -32.67792511]
[82.47257996 -45.42344666]
[80.90381622 -60.64834595]
[86.60087585 -74.85405731]
[98.25460815 -84.77620697]
[113.18708038 -88.13475800]
[127.96691895 -84.15794373]
[139.19781494 -73.75960541]
[144.29901123 -59.32920456]
[142.09826660 -44.18273926]
[133.10130310 -31.80076218]
[119.37557220 -25.02855682]
[119.06351471 -10.03180313]
[118.75146484 4.96495056]
[118.43940735 19.96170425]
[126.60288239 28.94306946]
[126.42644501 41.48052597]
[117.45736694 50.80841446]
[116.83338928 65.79543304]
[128.72576904 74.93716431]
[143.04837036 70.48034668]
[157.37097168 66.02353668]
[171.69355774 61.56671906]
[157.92251587 55.62044525]
[149.42973328 43.25627136]
[148.82156372 28.26860619]
[156.28462219 15.25697136]
[169.52861023 8.21447277]
[184.48912048 9.30236244]
[196.57493591 18.18678093]
[202.07710266 32.14121628]
[199.30705261 46.88322449]
[189.11421204 57.88909149]
[204.01611328 56.17640305]
[218.91801453 54.46371078]
[224.95481873 40.34094620]
[237.25386047 31.14151764]
[252.50672913 29.34003067]
[266.61050415 35.42107391]
[275.77133179 47.74887848]
[277.52499390 63.00732803]
[271.39978027 77.09197235]
[259.04333496 86.21411896]
[243.77944946 87.91994476]
[229.71408081 81.75060272]
[220.63070679 69.36561584]
[205.72880554 71.07830811]
[190.82690430 72.79099274]
[176.15037537 75.88931274]
[161.82777405 80.34613037]
[147.50518799 84.80294800]
[133.18258667 89.25976562]
[132.13624573 106.71855164]
[123.03775787 120.41948700]
[109.21582794 127.22047424]
[110.15145874 142.19126892]
[111.08708191 157.16204834]
[112.02271271 172.13284302]
[112.95834351 187.10363770]
[113.89397430 202.07443237]
[114.82959747 217.04522705]
[115.76522827 232.01600647]
[116.70085907 246.98680115]
[117.63648224 261.95758057]
[118.57211304 276.92837524]
[119.50774384 291.89916992]
[120.44336700 306.86996460]
[135.27861023 309.54937744]
[149.04124451 315.70190430]
[160.93113708 324.96978760]
[170.25701904 336.81423950]
[176.47671509 350.54666138]
[179.22860718 365.36862183]
[178.35269165 380.41839600]
[173.89991760 394.82104492]
[166.12915039 407.73919678]
[155.49217224 418.42181396]
[142.60740662 426.24780273]
[128.22395325 430.76220703]
[113.17805481 431.70251465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[25 61]
[26 60]
[27 59]
[37 49]
[38 48]
[64 89]
[65 88]
[67 85]
[68 84]
[69 83]
[70 82]
[90 122]
[91 121]
[92 120]
[93 119]
[103 118]
[104 117]
[105 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
