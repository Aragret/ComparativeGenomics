%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAACCCCACGGGGGGGGGGUAAAACACUCACCAAGACCUCAACCCCUGACCCCCAUGCCUCAGGAUACUxxxxxxxxxxACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACCCCCCCCCCCUAAACCCAC\
) } def
/len { sequence length } bind def

/coor [
[85.18793488 152.87287903]
[71.47409821 146.91706848]
[59.87530518 137.48262024]
[51.25152969 125.26905060]
[46.24217987 111.18192291]
[45.21867371 96.26571655]
[48.25689697 81.62638092]
[55.13158417 68.34934998]
[65.33300781 57.41903687]
[78.10480499 49.64586639]
[92.50000000 45.60617065]
[92.50000000 30.60617256]
[92.50000000 15.60617256]
[92.50000000 0.60617250]
[92.50000000 -14.39382744]
[92.50000000 -29.39382744]
[92.50000000 -44.39382935]
[92.50000000 -59.39382935]
[92.50000000 -74.39382935]
[92.50000000 -89.39382935]
[92.50000000 -104.39382935]
[92.50000000 -119.39382935]
[92.50000000 -134.39382935]
[77.52191162 -135.28257751]
[62.62277985 -137.05706787]
[47.85493851 -139.71109009]
[33.27025986 -143.23529053]
[18.91997147 -147.61732483]
[4.85448170 -152.84178162]
[-8.87680435 -158.89031982]
[-22.22565460 -165.74168396]
[-35.14517975 -173.37181091]
[-47.59000015 -181.75389099]
[-59.51640320 -190.85850525]
[-70.88249207 -200.65365601]
[-81.64835358 -211.10493469]
[-91.77616119 -222.17564392]
[-101.23033905 -233.82687378]
[-109.97769165 -246.01773071]
[-117.98748016 -258.70538330]
[-125.23158264 -271.84524536]
[-131.68453979 -285.39117432]
[-137.32369995 -299.29559326]
[-142.12924194 -313.50964355]
[-146.08428955 -327.98342896]
[-149.17495728 -342.66610718]
[-151.39038086 -357.50607300]
[-152.72277832 -372.45123291]
[-153.16748047 -387.44906616]
[-152.72291565 -402.44692993]
[-151.39064026 -417.39208984]
[-149.17533875 -432.23208618]
[-146.08480835 -446.91479492]
[-142.12988281 -461.38861084]
[-137.32446289 -475.60272217]
[-131.68544006 -489.50717163]
[-125.23259735 -503.05316162]
[-117.98860931 -516.19311523]
[-109.97892761 -528.88079834]
[-101.23168945 -541.07171631]
[-91.77760315 -552.72308350]
[-81.64989471 -563.79382324]
[-70.88413239 -574.24523926]
[-59.51812363 -584.04046631]
[-47.59180069 -593.14520264]
[-35.14705276 -601.52740479]
[-22.22759438 -609.15759277]
[-8.87880516 -616.00909424]
[4.85242748 -622.05773926]
[18.91787148 -627.28234863]
[33.26811981 -631.66448975]
[47.85276794 -635.18884277]
[62.62059021 -637.84295654]
[77.51970673 -639.61761475]
[92.49778748 -640.50646973]
[107.50221252 -640.50646973]
[122.48029327 -639.61761475]
[137.37940979 -637.84295654]
[152.14723206 -635.18884277]
[166.73187256 -631.66448975]
[181.08212280 -627.28234863]
[195.14756775 -622.05773926]
[208.87879944 -616.00909424]
[222.22760010 -609.15759277]
[235.14704895 -601.52740479]
[247.59179688 -593.14520264]
[259.51812744 -584.04046631]
[270.88412476 -574.24523926]
[281.64990234 -563.79382324]
[291.77761841 -552.72308350]
[301.23168945 -541.07171631]
[309.97894287 -528.88079834]
[317.98861694 -516.19311523]
[325.23260498 -503.05316162]
[331.68542480 -489.50717163]
[337.32446289 -475.60272217]
[342.12988281 -461.38861084]
[346.08480835 -446.91479492]
[349.17535400 -432.23208618]
[351.39062500 -417.39208984]
[352.72290039 -402.44692993]
[353.16748047 -387.44906616]
[352.72277832 -372.45123291]
[351.39038086 -357.50607300]
[349.17495728 -342.66610718]
[346.08428955 -327.98342896]
[342.12924194 -313.50964355]
[337.32369995 -299.29559326]
[331.68453979 -285.39117432]
[325.23156738 -271.84524536]
[317.98748779 -258.70538330]
[309.97769165 -246.01773071]
[301.23034668 -233.82687378]
[291.77615356 -222.17564392]
[281.64834595 -211.10493469]
[270.88250732 -200.65365601]
[259.51638794 -190.85850525]
[247.58999634 -181.75389099]
[235.14517212 -173.37181091]
[222.22564697 -165.74168396]
[208.87680054 -158.89031982]
[195.14552307 -152.84178162]
[181.08003235 -147.61732483]
[166.72973633 -143.23529053]
[152.14506531 -139.71109009]
[137.37721252 -137.05706787]
[122.47808838 -135.28257751]
[107.50000000 -134.39382935]
[107.50000000 -119.39382935]
[107.50000000 -104.39382935]
[107.50000000 -89.39382935]
[107.50000000 -74.39382935]
[107.50000000 -59.39382935]
[107.50000000 -44.39382935]
[107.50000000 -29.39382744]
[107.50000000 -14.39382744]
[107.50000000 0.60617250]
[107.50000000 15.60617256]
[107.50000000 30.60617256]
[107.50000000 45.60617065]
[121.89519501 49.64586639]
[134.66699219 57.41903687]
[144.86842346 68.34934998]
[151.74310303 81.62638092]
[154.78132629 96.26571655]
[153.75781250 111.18192291]
[148.74847412 125.26905060]
[140.12469482 137.48262024]
[128.52589417 146.91706848]
[114.81206512 152.87287903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
