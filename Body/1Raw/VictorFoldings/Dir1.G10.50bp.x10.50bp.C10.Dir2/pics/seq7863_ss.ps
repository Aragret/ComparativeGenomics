%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCGUCCUAGGGGGGGGGGGAAUUAAUUCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACCCUAUAxxxxxxxxxxUGAUAUAUAAACUCAGACCCAAACAUUAAUCAGUUCUUCAAAUAUCUACUCCCCCCCCCCCAUCUUCCUA\
) } def
/len { sequence length } bind def

/coor [
[70.51223755 346.59664917]
[58.62796402 337.32156372]
[49.30925369 325.47146606]
[43.09788895 311.73529053]
[40.35498810 296.91165161]
[41.24001694 281.86239624]
[45.70152283 267.46246338]
[53.48012161 254.54901123]
[64.12357330 243.87286377]
[77.01308441 236.05467224]
[91.39926910 231.54901123]
[90.46363831 216.57821655]
[89.52801514 201.60742188]
[88.59238434 186.63662720]
[87.65675354 171.66583252]
[86.72113037 156.69505310]
[85.78549957 141.72425842]
[72.61691284 134.54174805]
[59.52376175 141.86085510]
[46.43060684 149.17996216]
[33.33745193 156.49906921]
[20.24429893 163.81816101]
[7.15114450 171.13726807]
[-0.77525234 185.49360657]
[-17.17434311 185.53674316]
[-25.17614937 171.22230530]
[-16.54909897 157.27575684]
[-0.16796130 158.04411316]
[12.92519283 150.72500610]
[26.01834679 143.40591431]
[39.11150360 136.08680725]
[52.20465469 128.76770020]
[65.29781342 121.44859314]
[60.81394958 107.53596497]
[61.57394791 93.26065826]
[67.24910736 80.49122620]
[76.88235474 70.81764984]
[89.04145813 65.35382843]
[102.02890015 64.61169434]
[106.03664398 50.15700150]
[102.26779175 34.79125214]
[113.12431335 24.59394073]
[117.13205719 10.13925171]
[121.13979340 -4.31543636]
[125.14753723 -18.77012444]
[129.15527344 -33.22481155]
[133.16302490 -47.67950058]
[129.91218567 -62.32300186]
[120.16454315 -73.72402191]
[110.41688538 -85.12504578]
[100.66923523 -96.52606964]
[90.92158508 -107.92708588]
[81.17393494 -119.32810974]
[66.08855438 -116.44246674]
[51.58668900 -121.50128174]
[41.56927109 -133.14373779]
[38.73093033 -148.23808289]
[43.83517075 -162.72402954]
[55.50897598 -172.70489502]
[70.61214447 -175.49591064]
[85.08201599 -170.34628296]
[95.02624512 -158.64126587]
[97.76990509 -143.52941895]
[92.57495117 -129.07575989]
[102.32260132 -117.67473602]
[112.07025909 -106.27371979]
[121.81790924 -94.87269592]
[131.56556702 -83.47167969]
[141.31321716 -72.07065582]
[138.22477722 -86.74926758]
[128.89741516 -98.49661255]
[126.59089661 -113.31821442]
[131.90742493 -127.34442139]
[143.45896912 -136.91323853]
[158.22958374 -139.52641296]
[172.36296082 -134.50167847]
[182.16909790 -123.15093231]
[185.08779907 -108.43762970]
[180.35705566 -94.20317078]
[169.21296692 -84.16442871]
[163.73533630 -70.20034027]
[175.23715210 -79.82887268]
[186.73895264 -89.45739746]
[198.24075317 -99.08592224]
[200.06809998 -104.11388397]
[203.33985901 -107.55596924]
[207.19183350 -109.12567902]
[210.77357483 -108.92905426]
[222.85356140 -117.82140350]
[234.93354797 -126.71375275]
[230.93061829 -141.35414124]
[232.49060059 -156.45152283]
[239.40254211 -169.96409607]
[250.73162842 -180.06440735]
[264.94570923 -185.38644409]
[280.12246704 -185.21047974]
[294.20932007 -179.56028748]
[305.30117798 -169.20002747]
[311.89794922 -155.53082275]
[313.10748291 -140.40133667]
[308.76617432 -125.85768890]
[299.46115112 -113.86680603]
[286.45086670 -106.05035400]
[271.49484253 -103.46543884]
[256.61578369 -106.46164703]
[243.82589722 -114.63376617]
[231.74591064 -105.74141693]
[219.66592407 -96.84906769]
[207.86927795 -87.58412170]
[196.36747742 -77.95558929]
[184.86567688 -68.32706451]
[173.36387634 -58.69853973]
[169.68899536 -52.59468460]
[164.80732727 -47.91304016]
[159.18405151 -44.84935760]
[153.30090332 -43.46093369]
[147.61770630 -43.67176056]
[143.60997009 -29.21707344]
[139.60221863 -14.76238441]
[135.59448242 -0.30769622]
[131.58674622 14.14699268]
[127.57900238 28.60168076]
[131.63452148 42.93353653]
[120.49133301 54.16474533]
[116.48358917 68.61943054]
[128.98881531 78.08892059]
[136.43215942 92.33623505]
[137.09475708 108.78585815]
[130.51918030 124.30144501]
[117.65945435 135.78381348]
[100.75629425 140.78862000]
[101.69191742 155.75941467]
[102.62754822 170.73020935]
[103.56317902 185.70100403]
[104.49880219 200.67179871]
[105.43443298 215.64257812]
[106.37006378 230.61337280]
[121.20529175 233.29280090]
[134.96792603 239.44529724]
[146.85781860 248.71319580]
[156.18371582 260.55764771]
[162.40341187 274.29006958]
[165.15528870 289.11203003]
[164.27938843 304.16180420]
[159.82661438 318.56445312]
[152.05584717 331.48260498]
[141.41886902 342.16522217]
[128.53410339 349.99121094]
[114.15065002 354.50561523]
[99.10474396 355.44592285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[39 125]
[40 124]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[81 112]
[82 111]
[83 110]
[84 109]
[88 108]
[89 107]
[90 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
