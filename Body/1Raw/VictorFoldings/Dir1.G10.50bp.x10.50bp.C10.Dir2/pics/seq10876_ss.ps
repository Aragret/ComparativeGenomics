%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCCUGACGGGGGGGGGGUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCAxxxxxxxxxxCAACGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCCCCCCCCCCCAACCCUGAC\
) } def
/len { sequence length } bind def

/coor [
[-18.72644234 265.92031860]
[-32.28314972 255.32769775]
[-44.89922714 243.63055420]
[-56.48496246 230.91210938]
[-66.95797729 217.26277161]
[-76.24378967 202.77961731]
[-84.27638245 187.56561279]
[-90.99863434 171.72895813]
[-105.22541809 176.48277283]
[-119.45219421 181.23660278]
[-130.08888245 192.94862366]
[-144.61219788 189.64369202]
[-158.83897400 194.39750671]
[-173.06576538 199.15132141]
[-187.29254150 203.90513611]
[-197.92922974 215.61717224]
[-212.45254517 212.31224060]
[-226.67932129 217.06605530]
[-240.90609741 221.81987000]
[-255.13287354 226.57368469]
[-262.33645630 232.29736328]
[-269.70535278 231.27507019]
[-284.02792358 235.73188782]
[-290.73580933 246.79797363]
[-302.80630493 250.19241333]
[-313.58483887 244.61294556]
[-327.99707031 248.77084351]
[-334.16848755 263.13912964]
[-348.15502930 270.13275146]
[-363.35266113 266.44955444]
[-372.58551025 253.82861328]
[-371.49417114 238.22915649]
[-360.59387207 227.01678467]
[-345.03143311 225.48561096]
[-332.15493774 234.35862732]
[-317.74273682 230.20072937]
[-306.31265259 216.92091370]
[-288.48474121 221.40928650]
[-274.16217041 216.95248413]
[-259.88668823 212.34690857]
[-245.65991211 207.59309387]
[-231.43313599 202.83927917]
[-217.20635986 198.08546448]
[-207.58726501 186.71347046]
[-192.04635620 189.67835999]
[-177.81958008 184.92454529]
[-163.59278870 180.17073059]
[-149.36601257 175.41691589]
[-139.74691772 164.04492188]
[-124.20600891 167.00981140]
[-109.97923279 162.25599670]
[-95.75244904 157.50218201]
[-98.91022491 145.38992310]
[-101.31930542 133.10679626]
[-102.97061920 120.69906616]
[-103.85794830 108.21342468]
[-103.97795868 95.69686890]
[-103.33019257 83.19651031]
[-101.91709137 70.75939941]
[-99.74397278 58.43234634]
[-96.81901550 46.26175690]
[-93.15322876 34.29343796]
[-88.76042175 22.57243729]
[-83.65711212 11.14287663]
[-77.86251831 0.04777379]
[-71.39845276 -10.67110825]
[-64.28923798 -20.97342491]
[-56.56164169 -30.82039642]
[-48.24474335 -40.17496109]
[-39.36985397 -49.00190353]
[-29.97037506 -57.26800537]
[-20.08168793 -64.94214630]
[-9.74101162 -71.99544525]
[1.01272953 -78.40135956]
[12.13905907 -84.13575745]
[23.59609795 -89.17707825]
[35.34072113 -93.50633240]
[47.32872391 -97.10723114]
[59.51497650 -99.96621704]
[71.85362244 -102.07252502]
[84.29820251 -103.41822815]
[96.80188751 -103.99827576]
[109.31761169 -103.81046295]
[121.79826355 -102.85551453]
[134.19686890 -101.13700867]
[146.46675110 -98.66143036]
[158.56173706 -95.43808746]
[170.43629456 -91.47911072]
[182.04573059 -86.79941559]
[193.34635925 -81.41659546]
[204.29560852 -75.35092926]
[214.85231018 -68.62523651]
[224.97668457 -61.26484299]
[234.63066101 -53.29744720]
[243.77789307 -44.75304031]
[252.38392639 -35.66378021]
[260.41641235 -26.06388092]
[267.84506226 -15.98947716]
[274.64196777 -5.47848845]
[280.78149414 5.42952156]
[286.24057007 16.69349480]
[290.99862671 28.27103424]
[305.22540283 23.51721954]
[315.68576050 10.88736820]
[331.80624390 13.89776230]
[337.00347900 29.45156479]
[325.93099976 41.54835892]
[309.97921753 37.74399948]
[295.75244141 42.49781418]
[300.11383057 60.25098801]
[302.86853027 78.32329559]
[303.99450684 96.56964111]
[303.48266602 114.84352112]
[301.33712769 132.99822998]
[297.57513428 150.88801575]
[292.22686768 168.36923218]
[285.33529663 185.30152893]
[298.72158813 192.06964111]
[312.10787964 198.83775330]
[325.49414062 205.60588074]
[339.23587036 198.39862061]
[354.58459473 200.67832947]
[365.63836670 211.56840515]
[368.14682007 226.88137817]
[361.14538574 240.72911072]
[347.32629395 247.78686523]
[332.00320435 245.34078979]
[321.06823730 234.33145142]
[318.72604370 218.99215698]
[305.33975220 212.22404480]
[291.95346069 205.45593262]
[278.56716919 198.68782043]
[269.61782837 213.38127136]
[259.46240234 227.26849365]
[248.17304993 240.25074768]
[235.83007812 252.23571777]
[222.52125549 263.13818359]
[208.34121704 272.88061523]
[193.39080811 281.39370728]
[177.77630615 288.61700439]
[161.60874939 294.49905396]
[145.00312805 298.99810791]
[128.07748413 302.08209229]
[110.95220184 303.72915649]
[93.74903870 303.92755127]
[76.59031677 302.67587280]
[59.59806442 299.98300171]
[42.89309311 295.86813354]
[26.59419632 290.36047363]
[10.81727028 283.49920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 52]
[9 51]
[10 50]
[12 48]
[13 47]
[14 46]
[15 45]
[17 43]
[18 42]
[19 41]
[20 40]
[22 39]
[23 38]
[26 36]
[27 35]
[102 109]
[103 108]
[117 132]
[118 131]
[119 130]
[120 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
