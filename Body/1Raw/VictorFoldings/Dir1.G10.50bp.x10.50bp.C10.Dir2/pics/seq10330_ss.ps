%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAACUCAAACGGGGGGGGGGUACGAACGCACUCACAGUCGCAUCAUAAUCCUCUCUCAAGGACUUCAAACxxxxxxxxxxUCUUCUUACUCAUCCGCUUCCACCCCCUAGCAGAAAAUAGCCCACUAAUCCCCCCCCCCCCAAACUCUAAC\
) } def
/len { sequence length } bind def

/coor [
[83.76523590 389.46823120]
[70.27635193 382.73669434]
[58.79085159 372.97213745]
[49.97648239 360.74224854]
[44.34570312 346.75805664]
[42.22587204 331.83258057]
[43.74024200 316.83355713]
[48.80076599 302.63305664]
[57.11323166 290.05664062]
[68.19435883 279.83547974]
[81.39991760 272.56384277]
[95.96214294 268.66448975]
[95.65416718 253.66763306]
[95.34618378 238.67080688]
[95.03820801 223.67396545]
[94.73023224 208.67712402]
[94.42225647 193.68028259]
[94.11427307 178.68345642]
[93.80629730 163.68661499]
[93.49832153 148.68977356]
[93.19034576 133.69293213]
[84.06169128 133.33978271]
[74.76094055 130.42782593]
[66.01726532 124.87238312]
[58.58477020 116.79720306]
[43.71817017 118.79325867]
[35.25388336 128.57893372]
[22.78752518 129.90606689]
[13.09502792 122.60417175]
[-1.80941927 124.29457092]
[-16.69572639 126.13789368]
[-31.56232643 128.13395691]
[-46.42892456 130.13000488]
[-61.32260513 138.23030090]
[-73.22930908 126.16104889]
[-64.92784119 111.37856293]
[-48.42498016 115.26341248]
[-33.55838394 113.26735687]
[-18.69178391 111.27130127]
[-12.44238949 107.23926544]
[-3.49981689 109.39012146]
[11.40463066 107.69972992]
[24.89548302 96.51753235]
[41.72211456 103.92665863]
[56.58871078 101.93060303]
[58.86235809 94.78353882]
[44.56830215 90.23600769]
[49.11606598 75.94203186]
[63.40964890 80.48941040]
[65.68329620 73.34233856]
[54.70249176 63.12363434]
[43.72168732 52.90492630]
[32.74088669 42.68622208]
[16.95778847 43.50439835]
[5.27501917 32.86069489]
[4.62375641 17.06982803]
[15.39038277 5.50024366]
[31.18725014 5.01596785]
[42.64235687 15.90431404]
[42.95959091 31.70541763]
[53.94039536 41.92412567]
[64.92119598 52.14283371]
[75.90200043 62.36153793]
[103.99685669 58.11459351]
[127.17761230 71.39189148]
[135.84422302 59.14893723]
[122.01904297 64.96824646]
[107.05979919 66.07326508]
[92.52960968 62.34852982]
[79.94676208 54.18324661]
[70.62604523 42.43061447]
[65.54140472 28.31868935]
[65.22414398 13.32204437]
[69.70741272 -0.99229586]
[78.52273560 -13.12860489]
[90.74900055 -21.81873894]
[105.10866547 -26.15465546]
[120.10125732 -25.68328476]
[134.16018677 -20.45388222]
[145.81639099 -11.01287746]
[153.85192871 1.65322530]
[157.42713928 16.22092628]
[156.16844177 31.16802216]
[150.20762634 44.93224716]
[162.53890991 36.39178848]
[174.87019348 27.85132790]
[187.20147705 19.31086922]
[172.27908325 17.78698349]
[160.45886230 8.55214024]
[155.36999512 -5.55826187]
[158.57493591 -20.21187401]
[169.08966064 -30.90956497]
[183.68580627 -34.36679459]
[197.88189697 -29.52208328]
[207.31925964 -17.86291313]
[209.10032654 -2.96902895]
[202.67945862 10.58528900]
[216.37008667 4.45611477]
[230.06071472 -1.67305923]
[231.55494690 -16.95909309]
[240.50505066 -29.44072342]
[254.50350952 -35.76045227]
[269.78479004 -34.21831131]
[282.23828125 -25.22911835]
[288.51412964 -11.21092987]
[286.92407227 4.06543636]
[277.89590454 16.49071312]
[263.85809326 22.72256279]
[248.58680725 21.08465195]
[236.18988037 12.01756668]
[222.49925232 18.14673996]
[208.80863953 24.27591324]
[195.74194336 31.64215279]
[183.41065979 40.18261337]
[171.07937622 48.72307205]
[158.74809265 57.26353073]
[148.08717346 67.81554413]
[139.42056274 80.05850220]
[143.82087708 94.39855957]
[157.86285400 99.67330170]
[171.90481567 104.94804382]
[187.98591614 101.73397064]
[198.60519409 114.23049164]
[192.83843994 129.58226013]
[176.61801147 131.99668884]
[166.63008118 118.99002075]
[152.58810425 113.71527863]
[138.54612732 108.44053650]
[131.43971252 120.92105865]
[120.72402191 129.52130127]
[108.18717957 133.38496399]
[108.49515533 148.38179016]
[108.80313873 163.37863159]
[109.11111450 178.37547302]
[109.41909027 193.37231445]
[109.72706604 208.36915588]
[110.03504944 223.36598206]
[110.34302521 238.36282349]
[110.65100098 253.35966492]
[110.95897675 268.35650635]
[125.66901398 271.65472412]
[139.16197205 278.37808228]
[150.65339661 288.13568115]
[159.47517395 300.36022949]
[165.11442566 314.34100342]
[167.24331665 329.26519775]
[165.73803711 344.26510620]
[160.68612671 358.46868896]
[152.38128662 371.05014038]
[141.30635071 381.27801514]
[128.10520935 388.55767822]
[113.54534912 392.46585083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[25 45]
[26 44]
[29 42]
[30 41]
[31 39]
[32 38]
[33 37]
[50 63]
[51 62]
[52 61]
[53 60]
[65 118]
[66 117]
[84 116]
[85 115]
[86 114]
[87 113]
[97 112]
[98 111]
[99 110]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
