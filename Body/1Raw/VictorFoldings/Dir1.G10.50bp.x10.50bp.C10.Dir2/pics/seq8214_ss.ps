%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAGGCCUGGGGGGGGGGACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUxxxxxxxxxxCCAAACAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUCCCCCCCCCCUCCUAGGACU\
) } def
/len { sequence length } bind def

/coor [
[50.07463837 256.85977173]
[40.78751373 253.59495544]
[31.71215248 249.78083801]
[22.88101006 245.43104553]
[14.32567024 240.56115723]
[6.07673120 235.18856812]
[-1.83630776 229.33248901]
[-9.38514614 223.01388550]
[-16.54278755 216.25535583]
[-27.63410378 226.35400391]
[-38.72541809 236.45265198]
[-43.72047043 251.46464539]
[-58.34037018 254.31207275]
[-69.43168640 264.41073608]
[-74.42673492 279.42272949]
[-89.04663086 282.27014160]
[-100.13794708 292.36880493]
[-111.22926331 302.46743774]
[-118.87039185 317.60183716]
[-135.52859497 314.44894409]
[-137.11036682 297.56893921]
[-121.32791138 291.37612915]
[-110.23659515 281.27749634]
[-99.14528656 271.17883301]
[-94.94355774 256.88916016]
[-79.53033447 253.31941223]
[-68.43901825 243.22076416]
[-64.23728943 228.93109131]
[-48.82406616 225.36132812]
[-37.73275375 215.26268005]
[-26.64143753 205.16403198]
[-47.08036041 173.92492676]
[-59.95491409 138.88385010]
[-64.60295105 101.84296417]
[-60.78542709 64.70729065]
[-48.69867325 29.38673592]
[-61.94125748 22.34160042]
[-75.18384552 15.29646587]
[-88.42642975 8.25133038]
[-101.66901398 1.20619571]
[-112.54090881 11.72556496]
[-126.13224792 18.36865807]
[-141.11149597 20.48465347]
[-156.01112366 17.86624527]
[-169.37144470 10.76996136]
[-179.88351440 -0.10897776]
[-186.51750183 -13.70476532]
[-188.62345886 -28.68542290]
[-185.99507141 -43.58330154]
[-178.88983154 -56.93885422]
[-168.00386047 -67.44364166]
[-154.40362549 -74.06851959]
[-139.42155457 -76.16443634]
[-124.52544403 -73.52606201]
[-111.17465973 -66.41188049]
[-100.67716217 -55.51886368]
[-94.06140900 -41.91419983]
[-91.97552490 -26.93073082]
[-94.62387848 -12.03639030]
[-81.38129425 -4.99125481]
[-68.13871002 2.05387998]
[-54.89612198 9.09901524]
[-41.65353775 16.14414978]
[-36.67069244 8.24679565]
[-31.24805260 0.64469433]
[-25.40307236 -6.63769245]
[-19.15455818 -13.57693100]
[-12.52261829 -20.15069008]
[-5.52859259 -26.33781815]
[1.80501342 -32.11840439]
[9.45460033 -37.47384644]
[17.39555359 -42.38691330]
[25.60231781 -46.84179688]
[34.04848480 -50.82415390]
[42.70687866 -54.32117844]
[51.54963684 -57.32161331]
[60.54830170 -59.81580353]
[69.67391968 -61.79572678]
[78.89711761 -63.25500488]
[88.18822479 -64.18894958]
[97.51734161 -64.59454346]
[106.85445404 -64.47049713]
[116.16950226 -63.81719971]
[125.43251801 -62.63675690]
[134.61369324 -60.93296814]
[143.68348694 -58.71131134]
[152.61271667 -55.97893906]
[161.37265015 -52.74464417]
[169.93507385 -49.01883316]
[178.27247620 -44.81349564]
[186.35798645 -40.14216232]
[194.16561890 -35.01986694]
[201.67022705 -29.46309280]
[208.84767151 -23.48972130]
[215.67486572 -17.11897087]
[222.12982178 -10.37134552]
[228.19178772 -3.26855612]
[233.84123230 4.16654015]
[239.05999756 11.91001797]
[243.83128357 19.93696022]
[248.13973999 28.22153664]
[251.97148132 36.73708725]
[255.31420898 45.45621490]
[258.15713501 54.35085678]
[260.49114990 63.39239120]
[262.30871582 72.55172729]
[263.60400391 81.79938507]
[264.37280273 91.10561371]
[264.61267090 100.44046021]
[264.32284546 109.77389526]
[263.50424194 119.07587433]
[262.15951538 128.31646729]
[276.80300903 131.56729126]
[291.44650269 134.81813049]
[306.08999634 138.06895447]
[320.73352051 141.31977844]
[336.20401001 135.87956238]
[348.47274780 146.76121521]
[344.91867065 162.77061462]
[329.19796753 167.43865967]
[317.48269653 155.96327209]
[302.83917236 152.71244812]
[288.19567871 149.46162415]
[273.55218506 146.21080017]
[258.90869141 142.95997620]
[256.05654907 152.38203430]
[252.64633179 161.61674500]
[248.69020081 170.63110352]
[244.20228577 179.39286804]
[239.19866943 187.87069702]
[233.69723511 196.03425598]
[227.71763611 203.85438538]
[221.28129578 211.30308533]
[214.41120911 218.35372925]
[207.13194275 224.98109436]
[199.46954346 231.16149902]
[191.45141602 236.87281799]
[183.10621643 242.09463501]
[174.46380615 246.80827332]
[165.55508423 250.99688721]
[156.41191101 254.64547729]
[147.06700134 257.74099731]
[137.55375671 260.27239990]
[127.90621185 262.23062134]
[118.15886688 263.60864258]
[108.34658051 264.40151978]
[98.50444031 264.60647583]
[88.66764832 264.22274780]
[78.87138367 263.25167847]
[69.15068817 261.69677734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 31]
[10 30]
[11 29]
[13 27]
[14 26]
[16 24]
[17 23]
[18 22]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
