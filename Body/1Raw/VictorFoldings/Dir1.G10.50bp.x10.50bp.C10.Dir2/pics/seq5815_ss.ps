%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCCCAUGGGGGGGGGGUCCUCCCCACACUCAUCGCCCUUACCACGCUACUCCUACCUAUCUCCCCUxxxxxxxxxxUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAAAACCCCCCCCCCCCCCCUCCCCAU\
) } def
/len { sequence length } bind def

/coor [
[73.45092773 153.45297241]
[60.99306107 145.17224121]
[50.98559952 134.05380249]
[44.05722046 120.79610443]
[40.64315414 106.23200226]
[40.95788193 91.27640533]
[44.98162460 76.86882019]
[52.46161652 63.91433716]
[62.92796326 53.22674942]
[75.72316742 45.47745132]
[90.04344940 41.15325165]
[89.41947174 26.16623497]
[88.79549408 11.17921829]
[88.17151642 -3.80779743]
[87.54753876 -18.79481316]
[86.92356110 -33.78182983]
[86.29958344 -48.76884460]
[85.67560577 -63.75586319]
[85.05162811 -78.74288177]
[84.42765045 -93.72989655]
[83.80367279 -108.71691132]
[68.80146027 -108.96535492]
[53.83907700 -110.08568573]
[38.96714783 -112.07410431]
[24.23599815 -114.92388916]
[9.69547081 -118.62538910]
[-4.60523176 -123.16609192]
[-18.61772156 -128.53062439]
[-32.29458237 -134.70083618]
[-45.58953857 -141.65585327]
[-58.45759964 -149.37213135]
[-70.85523224 -157.82357788]
[-82.74047089 -166.98158264]
[-94.07312012 -176.81515503]
[-104.81481934 -187.29103088]
[-114.92922211 -198.37376404]
[-124.38211060 -210.02583313]
[-133.14149475 -222.20783997]
[-141.17774963 -234.87855530]
[-148.46365356 -247.99508667]
[-154.97457886 -261.51306152]
[-160.68847656 -275.38677979]
[-165.58602905 -289.56921387]
[-169.65066528 -304.01245117]
[-172.86860657 -318.66757202]
[-175.22898865 -333.48501587]
[-176.72381592 -348.41464233]
[-177.34803772 -363.40591431]
[-177.09953308 -378.40814209]
[-175.97914124 -393.37051392]
[-173.99066162 -408.24243164]
[-171.14080811 -422.97357178]
[-167.43925476 -437.51409912]
[-162.89848328 -451.81475830]
[-157.53388977 -465.82723999]
[-151.36363220 -479.50405884]
[-144.40855408 -492.79901123]
[-136.69221497 -505.66702271]
[-128.24072266 -518.06463623]
[-119.08267975 -529.94982910]
[-109.24905396 -541.28240967]
[-98.77313232 -552.02410889]
[-87.69036865 -562.13842773]
[-76.03824615 -571.59130859]
[-63.85620880 -580.35064697]
[-51.18546677 -588.38684082]
[-38.06889725 -595.67266846]
[-24.55088425 -602.18353271]
[-10.67716694 -607.89739990]
[3.50530887 -612.79486084]
[17.94855499 -616.85943604]
[32.60369873 -620.07733154]
[47.42115402 -622.43768311]
[62.35078049 -623.93243408]
[77.34206390 -624.55657959]
[92.34426880 -624.30798340]
[107.30664062 -623.18756104]
[122.17855835 -621.19903564]
[136.90968323 -618.34912109]
[151.45018005 -614.64746094]
[165.75083923 -610.10668945]
[179.76329041 -604.74200439]
[193.44009399 -598.57171631]
[206.73500061 -591.61657715]
[219.60299683 -583.90014648]
[232.00054932 -575.44860840]
[243.88572693 -566.29052734]
[255.21829224 -556.45684814]
[265.95989990 -545.98089600]
[276.07421875 -534.89807129]
[285.52700806 -523.24591064]
[294.28628540 -511.06384277]
[302.32241821 -498.39306641]
[309.60824585 -485.27648926]
[316.11904907 -471.75845337]
[321.83282471 -457.88470459]
[326.73025513 -443.70220947]
[330.79476929 -429.25894165]
[334.01260376 -414.60379028]
[336.37286377 -399.78631592]
[337.86755371 -384.85668945]
[338.49166870 -369.86538696]
[338.24304199 -354.86318970]
[337.12252808 -339.90081787]
[335.13391113 -325.02893066]
[332.28393555 -310.29779053]
[328.58224487 -295.75732422]
[324.04138184 -281.45666504]
[318.67666626 -267.44424438]
[312.50628662 -253.76747131]
[305.55111694 -240.47259521]
[297.83465576 -227.60462952]
[289.38308716 -215.20710754]
[280.22491455 -203.32197571]
[270.39120483 -191.98945618]
[259.91519165 -181.24787903]
[248.83235168 -171.13362122]
[237.18014526 -161.68087769]
[224.99803162 -152.92163086]
[212.32722473 -144.88554382]
[199.21060181 -137.59980774]
[185.69253540 -131.08905029]
[171.81877136 -125.37532043]
[157.63624573 -120.47794342]
[143.19297791 -116.41349792]
[128.53779602 -113.19573212]
[113.72032928 -110.83553314]
[98.79068756 -109.34088898]
[99.41466522 -94.35387421]
[100.03864288 -79.36685181]
[100.66262054 -64.37983704]
[101.28659821 -49.39282227]
[101.91057587 -34.40580750]
[102.53455353 -19.41879082]
[103.15853119 -4.43177509]
[103.78250885 10.55524158]
[104.40648651 25.54225731]
[105.03046417 40.52927399]
[119.66062164 43.64813614]
[133.05570984 50.30701447]
[144.37423706 60.08759689]
[152.90518188 72.37547302]
[158.11264038 86.39871979]
[159.66944885 101.27639771]
[157.47784424 116.07389069]
[151.67549133 129.86163330]
[142.62687683 141.77345276]
[130.90046692 151.06108093]
[117.23287964 157.14106750]
[102.48272705 159.63143921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
