%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUCUCCGGGGGGGGGGUCCGCAUAAGCCUGCGUCAGAUUAAAACACUGAACUGACAAUUAACAGCCxxxxxxxxxxAACCCCCUUAUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCCCCCCCCCCCAAAAUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[79.98799896 349.28890991]
[68.10372925 340.01382446]
[58.78501892 328.16369629]
[52.57365417 314.42752075]
[49.83074951 299.60391235]
[50.71578217 284.55465698]
[55.17728806 270.15469360]
[62.95588684 257.24127197]
[73.59933472 246.56510925]
[86.48884583 238.74691772]
[100.87503052 234.24125671]
[99.93940735 219.27046204]
[99.00377655 204.29966736]
[98.06814575 189.32887268]
[97.13252258 174.35809326]
[96.19689178 159.38729858]
[95.26126099 144.41650391]
[94.32563019 129.44570923]
[93.39000702 114.47492218]
[82.83871460 103.81329346]
[67.87846375 102.72198486]
[52.91821671 101.63067627]
[38.05517197 103.65300751]
[23.93036842 108.70176697]
[9.80556488 113.75051880]
[-4.31923819 118.79927826]
[-10.85370159 133.18942261]
[-25.67879295 138.66593933]
[-39.99905014 131.97970581]
[-45.31851578 117.09753418]
[-38.48125076 102.84877014]
[-23.54367638 97.68694305]
[-9.36799431 104.67447662]
[4.75680876 99.62571716]
[18.88161087 94.57696533]
[33.00641632 89.52820587]
[32.69435883 74.53145599]
[18.37176132 70.07463837]
[4.04916382 65.61782074]
[-10.27343369 61.16100693]
[-22.02722168 71.15360260]
[-37.32056427 73.18268585]
[-51.27341461 66.60077667]
[-59.43346786 53.50814438]
[-59.19688034 38.08259583]
[-50.63914490 25.24636650]
[-36.49100876 19.09545517]
[-21.26708412 21.59259224]
[-9.82527447 31.94095039]
[-5.81661797 46.83840942]
[8.50597954 51.29522324]
[22.82857704 55.75204086]
[37.15117264 60.20885468]
[45.94400787 65.21717834]
[51.76530075 72.13740540]
[54.37575150 79.69380951]
[54.00952911 86.67042542]
[68.96977997 87.76173401]
[83.93002319 88.85305023]
[94.74510956 85.34690094]
[103.15101624 88.86095428]
[113.81264496 78.30966187]
[124.47427368 67.75837708]
[124.72397614 52.18354034]
[135.68669128 41.63491058]
[150.53337097 41.96895218]
[161.19500732 31.41766167]
[171.85662842 20.86637115]
[162.60305786 9.03894711]
[154.78517151 -3.78279757]
[148.50869751 -17.42546272]
[143.85850525 -31.70454979]
[140.89749146 -46.42694473]
[139.66571045 -61.39355087]
[140.17980957 -76.40195465]
[142.43284607 -91.24919128]
[146.39433289 -105.73445892]
[152.01071167 -119.66187286]
[159.20600891 -132.84307861]
[167.88293457 -145.09980774]
[177.92414856 -156.26631165]
[189.19383240 -166.19155884]
[201.53959656 -174.74134827]
[214.79444885 -181.80003357]
[228.77917480 -187.27215576]
[243.30462646 -191.08372498]
[258.17434692 -193.18316650]
[273.18725586 -193.54211426]
[288.14035034 -192.15571594]
[302.83132935 -189.04269409]
[317.06161499 -184.24517822]
[330.63867188 -177.82801819]
[343.37893677 -169.87803650]
[355.11007690 -160.50271606]
[365.67346191 -149.82885742]
[374.92623901 -138.00080872]
[382.74328613 -125.17854309]
[389.01885986 -111.53546143]
[393.66809082 -97.25606537]
[396.62811279 -82.53347015]
[397.85888672 -67.56678772]
[397.34378052 -52.55841446]
[395.08978271 -37.71133041]
[391.12731934 -23.22632027]
[385.51000977 -9.29928207]
[378.31384277 3.88143969]
[369.63607788 16.13759041]
[359.59411621 27.30342102]
[348.32379150 37.22792435]
[335.97744751 45.77688217]
[322.72210693 52.83468246]
[308.73703003 58.30587387]
[294.21133423 62.11646652]
[279.34146118 64.21492767]
[264.32852173 64.57287598]
[249.37554932 63.18547058]
[234.68475342 60.07147217]
[220.45480347 55.27299881]
[206.87817383 48.85494232]
[194.13844299 40.90410233]
[182.40791321 31.52799797]
[171.74629211 42.07928848]
[161.08467102 52.63057709]
[161.26425171 67.47993469]
[150.60214233 78.33232117]
[135.02555847 78.41999817]
[124.36393738 88.97129059]
[113.70230865 99.52258301]
[108.36079407 113.53929138]
[109.29642487 128.51008606]
[110.23205566 143.48088074]
[111.16767883 158.45167542]
[112.10330963 173.42245483]
[113.03894043 188.39324951]
[113.97457123 203.36404419]
[114.91019440 218.33483887]
[115.84582520 233.30561829]
[130.68106079 235.98504639]
[144.44369507 242.13755798]
[156.33358765 251.40544128]
[165.65946960 263.24990845]
[171.87916565 276.98229980]
[174.63105774 291.80426025]
[173.75515747 306.85406494]
[169.30236816 321.25671387]
[161.53160095 334.17486572]
[150.89463806 344.85745239]
[138.00985718 352.68347168]
[123.62641144 357.19784546]
[108.58050537 358.13818359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 59]
[21 58]
[22 57]
[23 36]
[24 35]
[25 34]
[26 33]
[37 53]
[38 52]
[39 51]
[40 50]
[61 128]
[62 127]
[63 126]
[66 123]
[67 122]
[68 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
