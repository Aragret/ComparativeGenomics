%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAUUAACGGGGGGGGGGGAAAAUAACCCCACCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGxxxxxxxxxxCUACACAAUCAAAGACGCCCUCGGCUUACUUCUCUUCCUUCUCUCCUUAACCCCCCCCCCUGACAUUAAC\
) } def
/len { sequence length } bind def

/coor [
[4.79024649 187.88072205]
[-0.69052213 181.54345703]
[-5.75024796 174.86523438]
[-10.36777306 167.87394714]
[-14.52378941 160.59884644]
[-18.20091820 153.07034302]
[-32.21763229 158.41184998]
[-46.23434448 163.75335693]
[-60.25105667 169.09487915]
[-70.39133453 181.23922729]
[-85.03955841 178.54132080]
[-99.05627441 183.88282776]
[-113.07299042 189.22434998]
[-127.08969879 194.56585693]
[-140.68064880 200.91299438]
[-153.77380371 208.23208618]
[-166.86695862 215.55119324]
[-179.88327026 223.00610352]
[-192.82131958 230.59602356]
[-205.75938416 238.18592834]
[-218.69743347 245.77583313]
[-221.12744141 261.22344971]
[-232.95236206 271.45602417]
[-248.58883667 271.64199829]
[-260.65380859 261.69360352]
[-263.45056152 246.30815125]
[-255.65853882 232.75018311]
[-240.95692444 227.42135620]
[-226.28735352 232.83778381]
[-213.34928894 225.24786377]
[-200.41123962 217.65795898]
[-187.47317505 210.06805420]
[-183.26802063 203.93109131]
[-174.18606567 202.45803833]
[-161.09291077 195.13893127]
[-147.99975586 187.81983948]
[-162.32061768 183.35742188]
[-170.56944275 170.82917786]
[-169.00944519 155.91052246]
[-158.34730530 145.35974121]
[-143.41308594 143.95645142]
[-130.97213745 152.33634949]
[-126.66032410 166.70326233]
[-132.43121338 180.54914856]
[-118.41449738 175.20762634]
[-104.39778900 169.86611938]
[-90.38107300 164.52461243]
[-81.24336243 152.76231384]
[-65.59256744 155.07815552]
[-51.57585526 149.73664856]
[-37.55914307 144.39514160]
[-23.54243088 139.05361938]
[-29.56763268 99.61752319]
[-23.30971336 60.21768951]
[-5.36192799 24.58924675]
[22.57425690 -3.89019203]
[14.32196808 -16.41615486]
[6.93840837 -21.90567970]
[6.03145838 -29.28965569]
[-1.95845795 -41.98458481]
[-15.51253796 -52.16904449]
[-9.47823143 -68.01276398]
[7.41677284 -66.60026550]
[10.73647213 -49.97450256]
[18.72638702 -37.27957153]
[26.84793091 -24.66844368]
[35.10021973 -12.14248085]
[41.78109741 -15.75179100]
[48.66194153 -18.96352959]
[55.71911240 -21.76666451]
[62.92837906 -24.15157127]
[70.26496887 -26.11005402]
[77.70369720 -27.63538933]
[85.21900177 -28.72233582]
[92.78507233 -29.36716080]
[100.37592316 -29.56765175]
[107.96549225 -29.32311630]
[115.52769470 -28.63439751]
[123.03656769 -27.50386047]
[130.46630859 -25.93538666]
[137.79141235 -23.93436241]
[144.98672485 -21.50766563]
[152.02751160 -18.66362572]
[158.88960266 -15.41201305]
[165.54942322 -11.76399708]
[171.98410034 -7.73210573]
[178.17153931 -3.33018875]
[184.09048462 1.42663515]
[189.72059631 6.52202797]
[195.04255676 11.93848801]
[200.03807068 17.65741158]
[204.68998718 23.65915680]
[217.30111694 15.53761578]
[229.91224670 7.41607332]
[237.32537842 -6.56091118]
[252.21498108 -6.94684362]
[264.82611084 -15.06838608]
[271.84158325 -29.89117432]
[288.20605469 -30.95711899]
[297.08514404 -17.16967010]
[289.34481812 -2.71217036]
[272.94766235 -2.45725775]
[260.33651733 5.66428471]
[253.82542419 19.06036186]
[238.03378296 20.02720070]
[225.42265320 28.14874458]
[212.81152344 36.27028656]
[216.69459534 43.69466782]
[220.08969116 51.35449600]
[222.98262024 59.21773529]
[225.36129761 67.25151062]
[227.21575928 75.42222595]
[228.53826904 83.69570923]
[229.32328796 92.03737640]
[229.56753540 100.41233826]
[229.26998901 108.78557587]
[228.43190002 117.12207031]
[227.05676270 125.38697052]
[225.15031433 133.54571533]
[222.72056580 141.56419373]
[219.77763367 149.40885925]
[216.33386230 157.04692078]
[212.40362549 164.44644165]
[208.00335693 171.57647705]
[203.15148926 178.40719604]
[197.86827087 184.91006470]
[192.17581177 191.05787659]
[186.09791565 196.82492065]
[179.66000366 202.18708801]
[172.88897705 207.12196350]
[165.81317139 211.60888672]
[158.46215820 215.62911987]
[150.86668396 219.16584778]
[143.05851746 222.20426941]
[135.07028198 224.73168945]
[126.93540955 226.73753357]
[118.68790436 228.21340942]
[110.36225128 229.15316772]
[101.99327087 229.55285645]
[93.61595154 229.41082764]
[85.26532745 228.72764587]
[76.97631836 227.50617981]
[68.78358459 225.75155640]
[60.72138596 223.47108459]
[52.82343292 220.67431641]
[45.12274933 217.37292480]
[37.65153885 213.58074951]
[30.44104195 209.31362915]
[23.52140999 204.58940125]
[16.92157555 199.42782593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 52]
[7 51]
[8 50]
[9 49]
[11 47]
[12 46]
[13 45]
[14 44]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[21 29]
[56 67]
[57 66]
[59 65]
[60 64]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
