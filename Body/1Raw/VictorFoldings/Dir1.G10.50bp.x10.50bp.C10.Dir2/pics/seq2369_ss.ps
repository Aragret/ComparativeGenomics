%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAGCUCAAGGGGGGGGGGCACCCACUACCUAAAAAAUCCCAAACAUAUAACUGAACUCCUCACACCCAxxxxxxxxxxUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGGGUGAGCACCCCCCCCCCUCAAACUCAA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 354.01312256]
[71.19830322 347.99710083]
[59.48964310 338.46768188]
[50.78712082 326.13201904]
[45.73651886 311.90548706]
[44.71262741 296.84381104]
[47.79142761 282.06463623]
[54.74444962 268.66473389]
[65.05573273 257.63839722]
[77.96011353 249.80387878]
[92.50000000 245.74256897]
[92.50000000 230.74256897]
[92.50000000 215.74256897]
[92.50000000 200.74256897]
[92.50000000 185.74256897]
[92.50000000 170.74256897]
[92.50000000 155.74256897]
[92.50000000 140.74256897]
[92.50000000 125.74256897]
[92.50000000 110.74256897]
[91.87602234 95.75555420]
[90.62915039 80.80746460]
[89.38227081 65.85937500]
[88.13539886 50.91128922]
[86.88852692 35.96320343]
[71.88607788 36.25004959]
[56.89608002 35.57509613]
[41.98012161 33.94111252]
[27.19950104 31.35481262]
[12.61495590 27.82682610]
[-1.71358490 23.37165070]
[-15.72724056 18.00759125]
[-29.36842537 11.75669384]
[-42.58108521 4.64464188]
[-55.31092834 -3.29933834]
[-67.50563812 -12.04260349]
[-79.11511230 -21.54922485]
[-90.09163666 -31.78013802]
[-100.39010620 -42.69330215]
[-109.96820831 -54.24386978]
[-118.78658295 -66.38437653]
[-126.80899048 -79.06494141]
[-134.00245667 -92.23345184]
[-140.33744812 -105.83579254]
[-145.78790283 -119.81607056]
[-150.33143616 -134.11683655]
[-153.94938660 -148.67932129]
[-156.62686157 -163.44369507]
[-158.35289001 -178.34928894]
[-159.12036133 -193.33483887]
[-158.92613220 -208.33876038]
[-157.77098083 -223.29942322]
[-155.65966797 -238.15533447]
[-152.60087585 -252.84544373]
[-148.60716248 -267.30938721]
[-143.69494629 -281.48776245]
[-137.88439941 -295.32226562]
[-131.19941711 -308.75604248]
[-123.66745758 -321.73391724]
[-115.31948090 -334.20254517]
[-106.18978119 -346.11071777]
[-96.31587982 -357.40945435]
[-85.73834229 -368.05236816]
[-74.50064850 -377.99569702]
[-62.64897156 -387.19860840]
[-50.23200989 -395.62326050]
[-37.30078888 -403.23501587]
[-23.90844536 -410.00265503]
[-10.11001396 -415.89834595]
[4.03780556 -420.89782715]
[18.47687531 -424.98059082]
[33.14786530 -428.12982178]
[47.99048233 -430.33264160]
[62.94373703 -431.57995605]
[77.94618988 -431.86663818]
[92.93618011 -431.19149780]
[107.85211945 -429.55734253]
[122.63271332 -426.97088623]
[137.21722412 -423.44274902]
[151.54571533 -418.98739624]
[165.55931091 -413.62319946]
[179.20042419 -407.37213135]
[192.41300964 -400.25994873]
[205.14276123 -392.31582642]
[217.33737183 -383.57241821]
[228.94673157 -374.06567383]
[239.92314148 -363.83462524]
[250.22149658 -352.92135620]
[259.79946899 -341.37069702]
[268.61770630 -329.23007202]
[276.63998413 -316.54943848]
[283.83331299 -303.38082886]
[290.16812134 -289.77844238]
[295.61843872 -275.79809570]
[300.16180420 -261.49728394]
[303.77960205 -246.93473816]
[306.45690918 -232.17033386]
[308.18276978 -217.26472473]
[308.95007324 -202.27917480]
[308.75567627 -187.27525330]
[307.60037231 -172.31460571]
[305.48889160 -157.45870972]
[302.42993164 -142.76863098]
[298.43606567 -128.30473328]
[293.52368164 -114.12642670]
[287.71298218 -100.29199219]
[281.02786255 -86.85827637]
[273.49575806 -73.88048553]
[265.14764404 -61.41194153]
[256.01782227 -49.50388718]
[246.14378357 -38.20524597]
[235.56613159 -27.56245613]
[224.32832336 -17.61924744]
[212.47654724 -8.41647816]
[200.05949402 0.00803276]
[187.12818909 7.61966848]
[173.73576355 14.38715076]
[159.93727112 20.28267097]
[145.78939819 25.28200150]
[131.35028076 29.36459923]
[116.67925262 32.51368713]
[101.83660889 34.71632767]
[103.08348846 49.66441727]
[104.33036041 64.61250305]
[105.57723236 79.56059265]
[106.82411194 94.50867462]
[109.04457092 96.70036316]
[110.49360657 99.76873779]
[110.83758545 103.42081451]
[109.85923004 107.24191284]
[107.50000000 110.74256897]
[107.50000000 125.74256897]
[107.50000000 140.74256897]
[107.50000000 155.74256897]
[107.50000000 170.74256897]
[107.50000000 185.74256897]
[107.50000000 200.74256897]
[107.50000000 215.74256897]
[107.50000000 230.74256897]
[107.50000000 245.74256897]
[122.03988647 249.80387878]
[134.94427490 257.63839722]
[145.25555420 268.66473389]
[152.20857239 282.06463623]
[155.28736877 296.84381104]
[154.26348877 311.90548706]
[149.21287537 326.13201904]
[140.51036072 338.46768188]
[128.80169678 347.99710083]
[114.95575714 354.01312256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 126]
[22 125]
[23 124]
[24 123]
[25 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
