%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUACUAUCAGGGGGGGGGGACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAACACAxxxxxxxxxxCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCCCCCCCCCCCUCAACUAUCA\
) } def
/len { sequence length } bind def

/coor [
[74.86119080 379.46304321]
[62.97691345 370.18795776]
[53.65820694 358.33782959]
[47.44684219 344.60165405]
[44.70393753 329.77804565]
[45.58897018 314.72879028]
[50.05047607 300.32882690]
[57.82907486 287.41540527]
[68.47252655 276.73922729]
[81.36203003 268.92105103]
[95.74822235 264.41537476]
[94.81259155 249.44459534]
[93.87696075 234.47380066]
[92.94133759 219.50300598]
[92.00570679 204.53221130]
[91.07007599 189.56143188]
[90.13445282 174.59063721]
[89.19882202 159.61984253]
[88.26319122 144.64904785]
[87.32756805 129.67826843]
[80.98010254 125.68330383]
[67.71318054 132.68251038]
[68.28517151 117.69338989]
[61.93770599 113.69842529]
[48.03514862 119.33038330]
[34.13259506 124.96234131]
[24.48040390 138.22006226]
[8.20354939 136.22105408]
[2.04626322 121.02171326]
[12.34263325 108.25782776]
[28.50063705 111.05978394]
[42.40319443 105.42782593]
[56.30574799 99.79587555]
[76.26584625 84.00373840]
[94.85693359 87.46585846]
[90.25136566 73.19039917]
[85.64580536 58.91493988]
[70.97051239 62.07949448]
[56.05305099 63.76712036]
[41.04169083 63.96103668]
[26.08561516 62.65932465]
[11.33347416 59.87491226]
[-3.06811690 55.63548279]
[-16.97602463 49.98316574]
[-30.25202370 42.97413635]
[-42.76416397 34.67805481]
[-54.38809586 25.17737961]
[-65.00828552 14.56653118]
[-74.51918793 2.95096731]
[-82.82627869 -9.55386734]
[-89.84699249 -22.82369041]
[-95.51155090 -36.72661972]
[-99.76365662 -51.12447357]
[-102.56105042 -65.87416077]
[-103.87592316 -80.82907867]
[-103.69522095 -95.84060669]
[-102.02072906 -110.75954437]
[-98.86908722 -125.43761444]
[-94.27162933 -139.72894287]
[-88.27404022 -153.49148560]
[-80.93593597 -166.58845520]
[-72.33023834 -178.88969421]
[-62.54247665 -190.27294922]
[-51.66993713 -200.62507629]
[-39.82067490 -209.84318542]
[-27.11245346 -217.83566284]
[-13.67158031 -224.52308655]
[0.36836028 -229.83897400]
[14.86783028 -233.73049927]
[29.68272400 -236.15899658]
[44.66579819 -237.10029602]
[59.66814423 -236.54508972]
[74.54065704 -234.49885559]
[89.13551331 -230.98194885]
[103.30767822 -226.02932739]
[116.91628265 -219.69020081]
[129.82608032 -212.02758789]
[141.90876770 -203.11763000]
[153.04423523 -193.04887390]
[163.12185669 -181.92141724]
[172.04142761 -169.84584045]
[179.71432495 -156.94213867]
[186.06428528 -143.33859253]
[191.02819824 -129.17037964]
[194.55671692 -114.57832336]
[196.61479187 -99.70744324]
[197.18196106 -84.70555115]
[196.25257874 -69.72172546]
[193.83587646 -54.90490723]
[189.95590210 -40.40234375]
[184.65119934 -26.35817337]
[177.97448730 -12.91197872]
[169.99212646 -0.19739887]
[160.78344727 11.65920067]
[150.43998718 22.53998184]
[139.06452942 32.33679962]
[126.77014923 40.95229340]
[113.67902374 48.30083084]
[99.92126465 54.30937576]
[104.52682495 68.58483887]
[109.13239288 82.86029816]
[121.48396301 91.37138367]
[136.46368408 90.59154510]
[151.44338989 89.81169891]
[166.42311096 89.03185272]
[181.39390564 88.09622192]
[196.35414124 87.00491333]
[211.31439209 85.91360474]
[221.45610046 73.79248810]
[237.20547485 72.47608185]
[249.21867371 82.74536896]
[250.36849976 98.50777435]
[239.97277832 110.41174316]
[224.19909668 111.39485168]
[212.40570068 100.87384796]
[197.44546509 101.96516418]
[182.48521423 103.05647278]
[176.00099182 106.70346832]
[167.20295715 104.01156616]
[152.22323608 104.79141235]
[137.24353027 105.57125854]
[122.26380920 106.35109711]
[117.27244568 111.94898224]
[131.00500488 117.98361206]
[129.50914001 132.90884399]
[114.85212708 136.09815979]
[107.28971863 123.14475250]
[102.29835510 128.74263000]
[103.23398590 143.71342468]
[104.16961670 158.68421936]
[105.10523987 173.65501404]
[106.04087067 188.62579346]
[106.97650146 203.59658813]
[107.91212463 218.56738281]
[108.84775543 233.53817749]
[109.78338623 248.50897217]
[110.71900940 263.47976685]
[125.55424500 266.15917969]
[139.31687927 272.31167603]
[151.20677185 281.57958984]
[160.53266907 293.42404175]
[166.75234985 307.15643311]
[169.50424194 321.97839355]
[168.62834167 337.02819824]
[164.17556763 351.43084717]
[156.40480042 364.34899902]
[145.76782227 375.03158569]
[132.88305664 382.85760498]
[118.49959564 387.37197876]
[103.45369720 388.31231689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[24 33]
[25 32]
[26 31]
[35 101]
[36 100]
[37 99]
[102 122]
[103 121]
[104 120]
[105 119]
[106 117]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
