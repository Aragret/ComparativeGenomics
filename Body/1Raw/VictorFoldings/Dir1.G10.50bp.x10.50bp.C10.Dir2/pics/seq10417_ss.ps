%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUCACUCUCGGGGGGGGGGCUACUUACAGGACUCAACAUACUAGUCACAGCCCUAUACUCCCUCUACAUxxxxxxxxxxCACAUCAUCGAAACCGCAAACAUAUCAUACACAAACGCCUGAGCCCUAUCCCCCCCCCCCUAUUACUCUC\
) } def
/len { sequence length } bind def

/coor [
[83.92584229 390.70120239]
[70.70565033 383.42874146]
[59.81884384 372.98171997]
[52.00771332 360.07247925]
[47.80483246 345.58117676]
[47.49676132 330.49581909]
[51.10450363 315.84500122]
[58.38207626 302.62762451]
[68.83328247 291.74484253]
[81.74554443 283.93869019]
[96.23847961 279.74142456]
[95.92642212 264.74465942]
[95.61437225 249.74790955]
[95.30231476 234.75115967]
[94.99025726 219.75440979]
[94.67819977 204.75764465]
[94.36614227 189.76089478]
[94.05408478 174.76414490]
[93.74203491 159.76739502]
[93.42997742 144.77062988]
[78.53746796 139.83634949]
[66.22492218 130.11343384]
[57.97239304 116.77066803]
[54.77189636 101.41193390]
[57.00815582 85.88347626]
[64.41236115 72.05192566]
[76.09445953 61.57994843]
[90.65019226 55.72634888]
[90.02621460 40.73933411]
[89.40223694 25.75231743]
[88.77825928 10.76530170]
[73.77846527 10.31856060]
[58.84876633 8.80287933]
[44.06523514 6.22598267]
[29.50320053 2.60100150]
[15.23687649 -2.05359244]
[1.33895791 -7.71407986]
[-12.11973381 -14.35161591]
[-25.07061577 -21.93237686]
[-37.44769287 -30.41773224]
[-49.18788910 -39.76444244]
[-60.23138428 -49.92487717]
[-70.52190399 -60.84726334]
[-80.00700378 -72.47594452]
[-88.63835144 -84.75165558]
[-96.37196350 -97.61183929]
[-103.16843414 -110.99098206]
[-108.99312592 -124.82088470]
[-113.81635284 -139.03108215]
[-117.61354828 -153.54916382]
[-120.36535645 -168.30113220]
[-122.05774689 -183.21183777]
[-122.68210602 -198.20529175]
[-122.23525238 -213.20507812]
[-120.71945953 -228.13476562]
[-118.14244843 -242.91827393]
[-114.51735687 -257.48028564]
[-109.86264801 -271.74658203]
[-104.20205688 -285.64443970]
[-97.56442261 -299.10308838]
[-89.98355865 -312.05389404]
[-81.49810791 -324.43090820]
[-72.15130615 -336.17105103]
[-61.99078751 -347.21447754]
[-51.06832123 -357.50488281]
[-39.43957138 -366.98989868]
[-27.16379547 -375.62115479]
[-14.30354595 -383.35467529]
[-0.92435813 -390.15103149]
[12.90559006 -395.97561646]
[27.11582375 -400.79873657]
[41.63393021 -404.59582520]
[56.38592911 -407.34753418]
[71.29664612 -409.03979492]
[86.29010010 -409.66406250]
[101.28987885 -409.21707153]
[116.21955872 -407.70117188]
[131.00305176 -405.12405396]
[145.56503296 -401.49884033]
[159.83128357 -396.84402466]
[173.72911072 -391.18331909]
[187.18769836 -384.54559326]
[200.13847351 -376.96463013]
[212.51541138 -368.47909546]
[224.25546265 -359.13220215]
[235.29881287 -348.97158813]
[245.58915710 -338.04904175]
[255.07408142 -326.42022705]
[263.70523071 -314.14437866]
[271.43865967 -301.28405762]
[278.23492432 -287.90481567]
[284.05938721 -274.07482910]
[288.88241577 -259.86456299]
[292.67938232 -245.34642029]
[295.43096924 -230.59440613]
[297.12313843 -215.68368530]
[297.74725342 -200.69021606]
[297.30017090 -185.69044495]
[295.78414917 -170.76077271]
[293.20690918 -155.97731018]
[289.58160400 -141.41535950]
[284.92666626 -127.14913940]
[279.26586914 -113.25135040]
[272.62802124 -99.79280853]
[265.04696655 -86.84210205]
[256.56134033 -74.46521759]
[247.21434021 -62.72523499]
[237.05364990 -51.68197632]
[226.13102722 -41.39170837]
[214.50213623 -31.90687561]
[202.22622681 -23.27580833]
[189.36585999 -15.54249191]
[175.98657227 -8.74633026]
[162.15652466 -2.92195773]
[147.94622803 1.90094674]
[133.42805481 5.69780588]
[118.67601776 8.44927216]
[103.76527405 10.14132404]
[104.38925171 25.12833977]
[105.01322937 40.11535645]
[105.63720703 55.10237122]
[119.24424744 59.04595184]
[130.96496582 67.00384521]
[139.65049744 78.19602966]
[144.44947815 91.52543640]
[144.89154053 105.68551636]
[140.93331909 119.28830719]
[132.96281433 131.00045776]
[121.76129150 139.67393494]
[108.42672729 144.45857239]
[108.73878479 159.45533752]
[109.05084229 174.45208740]
[109.36289978 189.44883728]
[109.67495728 204.44558716]
[109.98700714 219.44235229]
[110.29906464 234.43910217]
[110.61112213 249.43585205]
[110.92317963 264.43261719]
[111.23523712 279.42935181]
[125.89022827 283.02014160]
[139.11604309 290.28237915]
[150.01091003 300.72097778]
[157.83200073 313.62420654]
[162.04606628 328.11227417]
[162.36579895 343.19735718]
[158.76936340 357.85095215]
[151.50199890 371.07397461]
[141.05920410 381.96481323]
[128.15296936 389.78091431]
[113.66328430 393.98937988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[28 121]
[29 120]
[30 119]
[31 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
