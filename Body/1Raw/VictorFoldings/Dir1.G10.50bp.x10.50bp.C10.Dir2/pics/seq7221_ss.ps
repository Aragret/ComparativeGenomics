%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUACACCACAGGGGGGGGGGUGAAACAUCCUAUCAUCUGUAGGCUCAUUCAUUUCUCUAACAGCAGUAAUxxxxxxxxxxAUCACCACCCAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCCCCCCCCCCCAUACACAACA\
) } def
/len { sequence length } bind def

/coor [
[67.94773865 473.29748535]
[54.45885849 466.56594849]
[42.97335815 456.80139160]
[34.15898895 444.57147217]
[28.52820778 430.58728027]
[26.40838051 415.66180420]
[27.92274857 400.66281128]
[32.98327255 386.46231079]
[41.29573822 373.88589478]
[52.37686920 363.66473389]
[65.58242035 356.39309692]
[80.14464569 352.49371338]
[79.83666992 337.49688721]
[79.52869415 322.50003052]
[79.22071838 307.50320435]
[78.91273499 292.50637817]
[78.60475922 277.50952148]
[78.29678345 262.51269531]
[77.98880768 247.51585388]
[77.68082428 232.51901245]
[77.37284851 217.52218628]
[77.06487274 202.52534485]
[67.55194855 214.12294006]
[53.32468414 218.87530518]
[38.75130844 215.32330322]
[28.30632019 204.55751038]
[25.19666481 189.88339233]
[30.37711143 175.80635071]
[42.25709534 166.64851379]
[57.18907166 165.22161865]
[70.58844757 171.96377563]
[78.34069824 184.80316162]
[80.79362488 170.00508118]
[83.24655914 155.20700073]
[85.69948578 140.40892029]
[88.15241241 125.61083984]
[90.60533905 110.81275940]
[85.86887360 97.65762329]
[94.59658051 86.73431396]
[97.04950714 71.93623352]
[99.50243378 57.13815308]
[101.34576416 42.25184631]
[102.57637024 27.30241203]
[103.80698395 12.35297775]
[89.01791382 9.78595543]
[74.51848602 5.90357304]
[60.42545319 0.73708844]
[46.85227585 -5.67189932]
[33.90824509 -13.27178764]
[21.69757843 -22.00138474]
[10.31859303 -31.79040718]
[-0.13709396 -42.56003189]
[-9.58529758 -54.22355270]
[-17.94994354 -66.68705750]
[-25.16368484 -79.85019684]
[-31.16843987 -93.60697937]
[-35.91585922 -107.84664917]
[-39.36772156 -122.45455933]
[-41.49623108 -137.31307983]
[-42.28425217 -152.30258179]
[-41.72543716 -167.30238342]
[-39.82429123 -182.19171143]
[-36.59611130 -196.85066223]
[-32.06689835 -211.16123962]
[-26.27311897 -225.00819397]
[-19.26141739 -238.28005981]
[-11.08825302 -250.86996460]
[-1.81943035 -262.67654419]
[8.47042179 -273.60470581]
[19.69845200 -283.56652832]
[31.77426147 -292.48175049]
[44.60061646 -300.27859497]
[58.07424545 -306.89428711]
[72.08666229 -312.27557373]
[86.52505493 -316.37915039]
[101.27316284 -319.17190552]
[116.21224213 -320.63140869]
[131.22201538 -320.74591064]
[146.18161011 -319.51446533]
[160.97061157 -316.94699097]
[175.46990967 -313.06414795]
[189.56278992 -307.89724731]
[203.13577271 -301.48785400]
[216.07957458 -293.88757324]
[228.28997803 -285.15759277]
[239.66865540 -275.36822510]
[250.12402344 -264.59826660]
[259.57186890 -252.93446350]
[267.93612671 -240.47070312]
[275.14947510 -227.30734253]
[281.15380859 -213.55038452]
[285.90078735 -199.31056213]
[289.35220337 -184.70256042]
[291.48025513 -169.84396362]
[292.26782227 -154.85443115]
[291.70855713 -139.85466003]
[289.80694580 -124.96539307]
[286.57833862 -110.30653381]
[282.04867554 -95.99609375]
[276.25448608 -82.14931488]
[269.24237061 -68.87766266]
[261.06881714 -56.28801346]
[251.79963684 -44.48172379]
[241.50944519 -33.55385208]
[230.28111267 -23.59239197]
[218.20503235 -14.67754269]
[205.37843323 -6.88108444]
[191.90460205 -0.26579106]
[177.89202881 5.11507368]
[163.45350647 9.21818542]
[148.70532227 12.01050854]
[133.76618958 13.46955872]
[118.75642395 13.58359051]
[117.52581024 28.53302574]
[116.29519653 43.48246002]
[118.06722260 45.72988892]
[119.02725983 48.83594131]
[118.83554840 52.48423004]
[117.27710724 56.23853302]
[114.30051422 59.59108353]
[111.84758759 74.38916016]
[109.39466095 89.18724060]
[114.13112640 102.34237671]
[105.40341949 113.26568604]
[102.95049286 128.06376648]
[100.49756622 142.86184692]
[98.04463196 157.65992737]
[95.59170532 172.45800781]
[93.13877869 187.25608826]
[92.06170654 202.21736145]
[92.36968994 217.21420288]
[92.67766571 232.21104431]
[92.98564148 247.20787048]
[93.29361725 262.20471191]
[93.60160065 277.20153809]
[93.90957642 292.19839478]
[94.21755219 307.19522095]
[94.52552795 322.19207764]
[94.83351135 337.18890381]
[95.14148712 352.18572998]
[109.85152435 355.48397827]
[123.34448242 362.20733643]
[134.83589172 371.96493530]
[143.65768433 384.18948364]
[149.29693604 398.17025757]
[151.42581177 413.09445190]
[149.92054749 428.09436035]
[144.86862183 442.29794312]
[136.56378174 454.87939453]
[125.48885345 465.10726929]
[112.28771210 472.38690186]
[97.72785187 476.29510498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[39 122]
[40 121]
[41 120]
[42 115]
[43 114]
[44 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
