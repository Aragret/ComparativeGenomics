%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCAAACCGGGGGGGGGGCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCxxxxxxxxxxGCUUUAAUUUAUUAAUGCAAACAGUACCUAACAAACCCACAGGUCCUAAACCCCCCCCCCCUACCAAACC\
) } def
/len { sequence length } bind def

/coor [
[36.49363327 289.61593628]
[25.79189873 285.68902588]
[15.33131886 281.15869141]
[5.14588928 276.03964233]
[-4.73129082 270.34851074]
[-14.26812267 264.10379028]
[-23.43361473 257.32577515]
[-32.19797897 250.03649902]
[-40.53273773 242.25964355]
[-48.41080475 234.02049255]
[-59.91260910 243.64901733]
[-71.41441345 253.27754211]
[-82.91621399 262.90606689]
[-94.41801453 272.53460693]
[-105.91982269 282.16311646]
[-117.42162323 291.79165649]
[-128.92343140 301.42016602]
[-140.42523193 311.04870605]
[-151.92703247 320.67721558]
[-160.19111633 335.48065186]
[-176.70373535 331.63751221]
[-177.58195496 314.70632935]
[-161.55555725 309.17541504]
[-150.05375671 299.54690552]
[-138.55195618 289.91836548]
[-127.05014801 280.28985596]
[-115.54834747 270.66131592]
[-104.04654694 261.03280640]
[-92.54473877 251.40426636]
[-81.04293823 241.77574158]
[-69.54113770 232.14721680]
[-58.03932953 222.51869202]
[-77.79661560 191.51843262]
[-91.54527283 157.42530823]
[-98.82067871 121.39151764]
[-99.37695312 84.63478851]
[-114.27885437 82.92210388]
[-129.18075562 81.20941162]
[-144.00271606 88.22664642]
[-157.33505249 78.67778778]
[-155.46261597 62.38589096]
[-140.31159973 56.11065674]
[-127.46806335 66.30751038]
[-112.56616211 68.02019501]
[-97.66426086 69.73288727]
[-95.71989441 59.00020981]
[-93.19320679 48.38951492]
[-90.09173584 37.93237305]
[-86.42469788 27.65989494]
[-82.20300293 17.60264587]
[-77.43921661 7.79054689]
[-72.14750671 -1.74720883]
[-66.34362030 -10.98224354]
[-60.04482651 -19.88708115]
[-53.26985931 -28.43523026]
[-46.03888702 -36.60125351]
[-38.37341309 -44.36085892]
[-30.29624557 -51.69095993]
[-21.83141899 -58.56974411]
[-13.00411892 -64.97674561]
[-3.84060502 -70.89291382]
[5.63185740 -76.30062866]
[15.38508606 -81.18381500]
[25.39006233 -85.52793884]
[35.61701965 -89.32007599]
[46.03553391 -92.54894257]
[56.61460114 -95.20493317]
[67.32274628 -97.28014374]
[78.12812042 -98.76840973]
[88.99856567 -99.66529083]
[99.90174103 -99.96811676]
[110.80520630 -99.67600250]
[121.67652893 -98.78980255]
[132.48335266 -97.31216431]
[143.19354248 -95.24747467]
[153.77522278 -92.60188293]
[164.19689941 -89.38325500]
[174.42758179 -85.60117340]
[184.43681335 -81.26688385]
[194.19483948 -76.39328766]
[203.67260742 -70.99488068]
[211.92489624 -83.52084351]
[213.05595398 -99.30156708]
[226.51904297 -105.67295837]
[234.77133179 -118.19892120]
[243.02362061 -130.72488403]
[251.27590942 -143.25083923]
[251.70138550 -159.64447021]
[266.23861694 -167.23399353]
[279.93295288 -158.21195984]
[278.69683838 -141.85946655]
[263.80187988 -134.99855042]
[255.54957581 -122.47259521]
[247.29728699 -109.94663239]
[239.04499817 -97.42066956]
[238.50421143 -82.53588104]
[224.45086670 -75.26854706]
[216.19857788 -62.74258804]
[227.14498901 -54.34185791]
[237.48602295 -45.20624161]
[247.17242432 -35.37923431]
[256.15808105 -24.90762711]
[264.40017700 -13.84128380]
[271.85952759 -2.23289299]
[278.50054932 9.86227226]
[284.29168701 22.38662148]
[289.20529175 35.28052139]
[293.21804810 48.48257828]
[296.31079102 61.92993164]
[298.46881104 75.55855560]
[299.68185425 89.30355072]
[299.94412231 103.09947968]
[299.25436401 116.88064575]
[297.61587524 130.58143616]
[295.03643799 144.13662720]
[309.53204346 147.99378967]
[324.02764893 151.85093689]
[339.71105957 147.05899048]
[351.51651001 158.44158936]
[347.29956055 174.28927612]
[331.39825439 178.29933167]
[320.17047119 166.34654236]
[305.67489624 162.48937988]
[291.17929077 158.63221741]
[287.52758789 169.43095398]
[283.26647949 180.00407410]
[278.40982056 190.31718445]
[272.97335815 200.33680725]
[266.97479248 210.03034973]
[260.43359375 219.36631775]
[253.37103271 228.31439209]
[245.81005859 236.84547424]
[237.77525330 244.93183899]
[229.29269409 252.54722595]
[220.38998413 259.66687012]
[211.09603882 266.26763916]
[201.44105530 272.32809448]
[191.45642090 277.82852173]
[181.17457581 282.75103760]
[170.62893677 287.07968140]
[159.85377502 290.80038452]
[148.88409424 293.90100098]
[137.75556946 296.37152100]
[126.50433350 298.20388794]
[115.16697693 299.39212036]
[103.78032684 299.93240356]
[92.38139343 299.82296753]
[81.00721741 299.06414795]
[69.69476318 297.65841675]
[58.48079300 295.61035156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[36 45]
[37 44]
[38 43]
[81 98]
[82 97]
[84 95]
[85 94]
[86 93]
[87 92]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
