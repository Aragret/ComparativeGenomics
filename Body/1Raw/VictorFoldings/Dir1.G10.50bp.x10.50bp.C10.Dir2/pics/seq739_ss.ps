%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAUACCGGGGGGGGGGCCGAACCAACCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCxxxxxxxxxxCCAUAUCUAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCCCCCCCCCCCACCCCAUUCC\
) } def
/len { sequence length } bind def

/coor [
[83.73684692 409.27337646]
[71.85256958 399.99829102]
[62.53386307 388.14819336]
[56.32249832 374.41201782]
[53.57959747 359.58837891]
[54.46462631 344.53912354]
[58.92613220 330.13919067]
[66.70472717 317.22573853]
[77.34818268 306.54959106]
[90.23769379 298.73138428]
[104.62387848 294.22573853]
[103.68824768 279.25494385]
[102.75262451 264.28414917]
[101.81699371 249.31335449]
[100.88136292 234.34255981]
[99.94573975 219.37176514]
[99.01010895 204.40098572]
[98.07447815 189.43019104]
[97.13884735 174.45939636]
[96.20322418 159.48860168]
[80.99389648 156.49847412]
[67.06970978 149.68807983]
[55.37217712 139.51792908]
[46.69224167 126.67569733]
[41.61682129 112.02972412]
[40.48910141 96.57033539]
[43.38533020 81.34285736]
[50.10968018 67.37691498]
[60.20746613 55.61685181]
[72.99590302 46.85784531]
[87.61028290 41.69215393]
[86.36341095 26.74406815]
[85.11653137 11.79598141]
[83.86965942 -3.15210533]
[82.62278748 -18.10019302]
[67.61463165 -18.05983734]
[52.65189743 -19.22727776]
[37.83162308 -21.59494019]
[23.24992752 -25.14747047]
[9.00137806 -29.86182594]
[-4.82161617 -35.70743561]
[-18.12940598 -42.64638519]
[-30.83568573 -50.63367462]
[-42.85804749 -59.61750031]
[-54.11852264 -69.53959656]
[-64.54408264 -80.33562469]
[-74.06710052 -91.93554688]
[-82.62583160 -104.26415253]
[-90.16476440 -117.24147034]
[-96.63500214 -130.78335571]
[-101.99457550 -144.80195618]
[-106.20874023 -159.20635986]
[-109.25015259 -173.90316772]
[-111.09909058 -188.79705811]
[-111.74356842 -203.79142761]
[-111.17940521 -218.78901672]
[-109.41025543 -233.69259644]
[-106.44759369 -248.40547180]
[-102.31063843 -262.83224487]
[-97.02621460 -276.87936401]
[-90.62859344 -290.45568848]
[-83.15927887 -303.47320557]
[-74.66669464 -315.84747314]
[-65.20593262 -327.49822998]
[-54.83834457 -338.34994507]
[-43.63116837 -348.33218384]
[-31.65709305 -357.38027954]
[-18.99377251 -365.43551636]
[-5.72333431 -372.44561768]
[8.06815529 -378.36517334]
[22.29125214 -383.15576172]
[36.85371399 -386.78634644]
[51.66109467 -389.23333740]
[66.61736298 -390.48089600]
[81.62551880 -390.52093506]
[96.58822632 -389.35314941]
[111.40844727 -386.98516846]
[125.99006653 -383.43231201]
[140.23851013 -378.71765137]
[154.06137085 -372.87173462]
[167.36901855 -365.93249512]
[180.07511902 -357.94491577]
[192.09727478 -348.96081543]
[203.35752869 -339.03848267]
[213.78285217 -328.24221802]
[223.30561829 -316.64208984]
[231.86407471 -304.31329346]
[239.40272522 -291.33581543]
[245.87266541 -277.79379272]
[251.23193359 -263.77508545]
[255.44577026 -249.37057495]
[258.48687744 -234.67369080]
[260.33547974 -219.77976990]
[260.97961426 -204.78538513]
[260.41513062 -189.78779602]
[258.64566040 -174.88427734]
[255.68266296 -160.17144775]
[251.54539490 -145.74476624]
[246.26065063 -131.69776917]
[239.86273193 -118.12158203]
[232.39312744 -105.10424042]
[223.90028381 -92.73016357]
[214.43925476 -81.07961273]
[204.07142639 -70.22813416]
[192.86402893 -60.24612045]
[180.88975525 -51.19829941]
[168.22625732 -43.14335632]
[154.95567322 -36.13352585]
[141.16404724 -30.21427536]
[126.94084930 -25.42399025]
[112.37830353 -21.79373932]
[97.57086945 -19.34706688]
[98.81774902 -4.39897966]
[100.06462097 10.54910755]
[101.31149292 25.49719429]
[102.55837250 40.44528198]
[116.78484344 42.80228043]
[130.02902222 48.50662613]
[141.51583862 57.22448349]
[150.57304382 68.44566345]
[156.67060852 81.51347351]
[159.45167542 95.66315460]
[158.75349426 110.06664276]
[154.61691284 123.88101196]
[147.28402710 136.29780579]
[137.18397522 146.59036255]
[124.90782166 154.15634155]
[111.17401123 158.55297852]
[112.10964203 173.52377319]
[113.04527283 188.49456787]
[113.98089600 203.46534729]
[114.91652679 218.43614197]
[115.85215759 233.40693665]
[116.78778839 248.37773132]
[117.72341156 263.34851074]
[118.65904236 278.31930542]
[119.59467316 293.29010010]
[134.42990112 295.96951294]
[148.19253540 302.12203979]
[160.08242798 311.38992310]
[169.40832520 323.23437500]
[175.62800598 336.96679688]
[178.37989807 351.78875732]
[177.50399780 366.83853149]
[173.05122375 381.24118042]
[165.28045654 394.15933228]
[154.64347839 404.84194946]
[141.75871277 412.66793823]
[127.37525940 417.18234253]
[112.32935333 418.12265015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[31 116]
[32 115]
[33 114]
[34 113]
[35 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
