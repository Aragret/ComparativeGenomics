%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGCCUAAGGGGGGGGGGAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAxxxxxxxxxxUAGUUAUUAUCGAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUGGCCCCCCCCCCCCGUACGCCUAA\
) } def
/len { sequence length } bind def

/coor [
[83.12855530 354.38470459]
[69.90835571 347.11224365]
[59.02155304 336.66525269]
[51.21042252 323.75598145]
[47.00754166 309.26467896]
[46.69947052 294.17935181]
[50.30721283 279.52850342]
[57.58478546 266.31112671]
[68.03599548 255.42835999]
[80.94825745 247.62220764]
[95.44119263 243.42492676]
[95.12913513 228.42817688]
[94.81707764 213.43142700]
[94.50502014 198.43466187]
[94.19296265 183.43791199]
[93.88091278 168.44116211]
[93.56885529 153.44441223]
[93.25679779 138.44764709]
[92.94474030 123.45089722]
[92.63268280 108.45414734]
[80.30739594 117.00325012]
[65.87898254 112.90191650]
[59.89345169 99.14788055]
[66.72573853 85.79423523]
[81.38199615 82.60141754]
[93.14939117 91.90251923]
[94.39627075 76.95442963]
[95.64314270 62.00634384]
[96.89001465 47.05825806]
[82.04737091 44.85561752]
[67.37635040 41.70652771]
[52.93723679 37.62392807]
[38.78936005 32.62459946]
[24.99086380 26.72908020]
[11.59844685 19.96159744]
[-1.33285868 12.34996128]
[-13.74991417 3.92545009]
[-25.60169601 -5.27731848]
[-36.83950043 -15.22052765]
[-47.41714859 -25.86331749]
[-57.29117966 -37.16195679]
[-66.42101288 -49.07001495]
[-74.76912689 -61.53855896]
[-82.30123138 -74.51634979]
[-88.98636627 -87.95006561]
[-94.79705811 -101.78450012]
[-99.70943451 -115.96279907]
[-103.70330811 -130.42671204]
[-106.76226807 -145.11679077]
[-108.87374115 -159.97267151]
[-110.02905273 -174.93331909]
[-110.22345734 -189.93724060]
[-109.45615387 -204.92280579]
[-107.73029327 -219.82841492]
[-105.05297089 -234.59281921]
[-101.43518829 -249.15534973]
[-96.89180756 -263.45614624]
[-91.44150543 -277.43649292]
[-85.10667419 -291.03890991]
[-77.91334534 -304.20748901]
[-69.89108276 -316.88815308]
[-61.07284164 -329.02874756]
[-51.49486923 -340.57943726]
[-41.19651794 -351.49270630]
[-30.22010612 -361.72375488]
[-18.61074066 -371.23049927]
[-6.41612625 -379.97390747]
[6.31362677 -387.91802979]
[19.52620697 -395.03021240]
[33.16732407 -401.28125000]
[47.18091965 -406.64547729]
[61.50941086 -411.10079956]
[76.09391785 -414.62896729]
[90.87451172 -417.21542358]
[105.79045105 -418.84957886]
[120.78044128 -419.52468872]
[135.78288269 -419.23800659]
[150.73614502 -417.99069214]
[165.57876587 -415.78790283]
[180.24975586 -412.63864136]
[194.68882751 -408.55587769]
[208.83663940 -403.55639648]
[222.63507080 -397.66073608]
[236.02742004 -390.89309692]
[248.95863342 -383.28131104]
[261.37561035 -374.85665894]
[273.22729492 -365.65377808]
[284.46496582 -355.71044922]
[295.04251099 -345.06753540]
[304.91641235 -333.76876831]
[314.04611206 -321.86062622]
[322.39410400 -309.39199829]
[329.92605591 -296.41412354]
[336.61102295 -282.98031616]
[342.42156982 -269.14581299]
[347.33380127 -254.96746826]
[351.32751465 -240.50352478]
[354.38629150 -225.81340027]
[356.49761963 -210.95748901]
[357.65274048 -195.99684143]
[357.84698486 -180.99290466]
[357.07952881 -166.00735474]
[355.35348511 -151.10177612]
[352.67602539 -136.33740234]
[349.05807495 -121.77490997]
[344.51452637 -107.47413635]
[339.06408691 -93.49385834]
[332.72909546 -79.89151764]
[325.53561401 -66.72301483]
[317.51321411 -54.04244995]
[308.69482422 -41.90193939]
[299.11672974 -30.35137177]
[288.81826782 -19.43820953]
[277.84173584 -9.20729637]
[266.23226929 0.29932538]
[254.03755188 9.04259014]
[241.30770874 16.98657036]
[228.09506226 24.09862328]
[214.45387268 30.34952164]
[200.44021606 35.71357727]
[186.11167908 40.16875458]
[171.52713013 43.69674301]
[156.74650574 46.28303909]
[141.83055115 47.91702652]
[126.84055328 48.59197998]
[111.83810425 48.30513382]
[110.59123230 63.25321960]
[109.34435272 78.20130920]
[108.09748077 93.14939117]
[107.62944031 108.14208984]
[107.94149780 123.13883972]
[108.25354767 138.13558960]
[108.56560516 153.13235474]
[108.87766266 168.12910461]
[109.18972015 183.12585449]
[109.50177765 198.12260437]
[109.81383514 213.11936951]
[110.12588501 228.11611938]
[110.43794250 243.11286926]
[125.09293365 246.70364380]
[138.31874084 253.96589661]
[149.21360779 264.40447998]
[157.03471375 277.30770874]
[161.24877930 291.79577637]
[161.56849670 306.88085938]
[157.97207642 321.53448486]
[150.70471191 334.75747681]
[140.26191711 345.64831543]
[127.35568237 353.46441650]
[112.86598969 357.67291260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[26 129]
[27 128]
[28 127]
[29 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
