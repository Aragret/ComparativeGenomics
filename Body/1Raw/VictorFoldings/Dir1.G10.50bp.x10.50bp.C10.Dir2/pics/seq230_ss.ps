%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAGACAUGGGGGGGGGGCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGxxxxxxxxxxCAAUAUCUACAAUCAACCAACAAGUCAUUAUUACCCUCACUGUCAACCCACCCCCCCCCCACACAGGCAU\
) } def
/len { sequence length } bind def

/coor [
[-30.57164764 230.20568848]
[-37.22262192 223.17640686]
[-43.49567413 215.80789185]
[-49.37352371 208.12042236]
[-54.83998489 200.13517761]
[-59.87999725 191.87416077]
[-64.47969055 183.36010742]
[-68.62638092 174.61647034]
[-72.30866241 165.66734314]
[-75.51638794 156.53735352]
[-78.24073029 147.25164795]
[-92.88423157 150.50247192]
[-107.52773285 153.75329590]
[-122.13661957 157.15628052]
[-136.70932007 160.71104431]
[-151.28202820 164.26579285]
[-165.85473633 167.82055664]
[-180.42742920 171.37532043]
[-195.00013733 174.93008423]
[-209.57284546 178.48484802]
[-209.74536133 193.56533813]
[-213.66360474 208.12892151]
[-221.08129883 221.26013184]
[-231.53213501 232.13352966]
[-244.35919189 240.06559753]
[-258.75610352 244.55772400]
[-273.81793213 245.32752991]
[-288.59783936 242.32661438]
[-302.16671753 235.74363708]
[-313.67169189 225.99238586]
[-322.38949585 213.68585205]
[-327.77212524 199.59762573]
[-329.48123169 184.61331177]
[-327.40939331 169.67483521]
[-321.68682861 155.72122192]
[-312.67327881 143.62963867]
[-300.93530273 134.16015625]
[-287.21081543 127.90802765]
[-272.36251831 125.26627350]
[-257.32379150 126.40096283]
[-243.03997803 131.24076843]
[-230.40898132 139.48144531]
[-220.22479248 150.60498047]
[-213.12759399 163.91213989]
[-198.55490112 160.35737610]
[-183.98219299 156.80262756]
[-169.40950012 153.24786377]
[-154.83679199 149.69309998]
[-140.26408386 146.13833618]
[-125.69138336 142.58357239]
[-119.90099335 137.91270447]
[-110.77855682 139.10980225]
[-96.13505554 135.85897827]
[-81.49155426 132.60813904]
[-84.39337921 98.75186157]
[-81.03350067 64.93795776]
[-71.52602386 32.31470490]
[-56.19379425 1.98993373]
[-35.55748367 -25.00657272]
[-10.31786060 -47.75806046]
[18.66797829 -65.49192810]
[12.60496426 -79.21197510]
[6.54195118 -92.93202972]
[-7.01049328 -102.16584015]
[-5.52033663 -118.49714661]
[9.47947502 -125.12569427]
[22.55842209 -115.23261261]
[20.26200485 -98.99504852]
[26.32501793 -85.27499390]
[32.38803101 -71.55493927]
[41.48115921 -74.86572266]
[50.73545074 -77.69490814]
[60.12542343 -80.03469849]
[69.62521362 -81.87866211]
[79.20866394 -83.22171021]
[88.84937286 -84.06015015]
[98.52079010 -84.39167023]
[108.19628143 -84.21535492]
[117.84919739 -83.53169250]
[127.45295715 -82.34255981]
[136.98110962 -80.65124512]
[146.40740967 -78.46239471]
[155.70590210 -75.78204346]
[164.85098267 -72.61756897]
[173.81744385 -68.97769165]
[182.58061218 -64.87242889]
[191.11633301 -60.31309509]
[199.40112305 -55.31224060]
[207.41215515 -49.88364029]
[215.12734985 -44.04224396]
[222.52548218 -37.80414200]
[229.58616638 -31.18651390]
[236.28994751 -24.20758438]
[242.61837769 -16.88657570]
[248.55403137 -9.24364948]
[254.08055115 -1.29985523]
[259.18270874 6.92292929]
[263.84646606 15.40205765]
[268.05895996 24.11417580]
[271.80862427 33.03529358]
[275.08511353 42.14083862]
[277.87936401 51.40573120]
[280.18374634 60.80445862]
[281.99188232 70.31113434]
[283.29879761 79.89957428]
[284.10089111 89.54338074]
[284.39593506 99.21597290]
[284.18313599 108.89073181]
[283.46310425 118.54100800]
[282.23776245 128.14021301]
[280.51052856 137.66192627]
[278.28616333 147.07991028]
[275.57077026 156.36822510]
[272.37185669 165.50129700]
[268.69818115 174.45397949]
[264.55990601 183.20161438]
[259.96844482 191.72009277]
[254.93638611 199.98596191]
[249.47761536 207.97647095]
[243.60717773 215.66958618]
[237.34123230 223.04414368]
[230.69702148 230.07983398]
[223.69287109 236.75726318]
[216.34805298 243.05804443]
[208.68280029 248.96482849]
[200.71823120 254.46136475]
[192.47627258 259.53247070]
[183.97961426 264.16424561]
[175.25167847 268.34387207]
[166.31649780 272.05987549]
[157.19865417 275.30200195]
[147.92329407 278.06130981]
[138.51594543 280.33023071]
[129.00251770 282.10250854]
[119.40922546 283.37326050]
[109.76246643 284.13900757]
[100.08882141 284.39758301]
[90.41493988 284.14831543]
[80.76744843 283.39187622]
[71.17292786 282.13037109]
[61.65779877 280.36727905]
[52.24826813 278.10739136]
[42.97025299 275.35702515]
[33.84930038 272.12368774]
[24.91053581 268.41629028]
[16.17857361 264.24505615]
[7.67746449 259.62149048]
[-0.56937879 254.55831909]
[-8.53924370 249.06947327]
[-16.21018219 243.17007446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 54]
[12 53]
[13 52]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[61 70]
[62 69]
[63 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
