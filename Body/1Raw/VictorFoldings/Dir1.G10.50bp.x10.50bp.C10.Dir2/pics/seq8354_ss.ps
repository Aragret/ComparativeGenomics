%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUAAUCAAAGGGGGGGGGGCUAACCUCAAAACAAAUGAUAACCAUACACAACACUAAAGGACGAACCUGxxxxxxxxxxGUCCAUCAUCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGCCCCCCCCCCGACUACUCAAA\
) } def
/len { sequence length } bind def

/coor [
[85.11098480 388.81216431]
[71.08904266 383.25915527]
[58.88908386 374.39282227]
[49.27801514 362.77050781]
[42.85998917 349.12280273]
[40.03845215 334.30761719]
[40.99076843 319.25625610]
[45.65707397 304.91482544]
[53.74403763 292.18487549]
[64.74331665 281.86660767]
[77.96347046 274.60861206]
[92.57348633 270.86718750]
[92.57348633 255.86718750]
[92.57348633 240.86718750]
[92.57348633 225.86718750]
[92.57348633 210.86718750]
[92.57348633 195.86718750]
[92.57348633 180.86718750]
[92.57348633 165.86718750]
[92.57348633 150.86718750]
[92.57348633 135.86718750]
[92.57348633 120.86718750]
[92.57348633 105.86718750]
[89.76007843 101.36128235]
[89.70711517 95.59590149]
[92.89411163 90.25452423]
[93.50993347 75.26716614]
[94.12576294 60.27981567]
[79.20167542 58.72377777]
[64.40475464 56.23371506]
[49.79337311 52.81945801]
[35.42521286 48.49447632]
[21.35697556 43.27584457]
[7.64417839 37.18415451]
[-5.65905762 30.24345016]
[-18.50023079 22.48112106]
[-30.82866096 13.92780304]
[-42.59569550 4.61725187]
[-53.75489426 -5.41378784]
[-64.26221466 -16.12572670]
[-74.07619476 -27.47629166]
[-83.15809631 -39.42068481]
[-91.47208405 -51.91176987]
[-98.98533630 -64.90024567]
[-105.66820526 -78.33485413]
[-111.49432373 -92.16257477]
[-116.44068909 -106.32883453]
[-120.48778534 -120.77772522]
[-123.61963654 -135.45222473]
[-125.82389069 -150.29441833]
[-127.09183502 -165.24572754]
[-127.41847992 -180.24716187]
[-126.80252838 -195.23950195]
[-125.24641418 -210.16357422]
[-122.75627899 -224.96047974]
[-119.34194183 -239.57183838]
[-115.01688385 -253.93998718]
[-109.79817963 -268.00817871]
[-103.70642090 -281.72094727]
[-96.76564789 -295.02416992]
[-89.00325012 -307.86529541]
[-80.44986725 -320.19366455]
[-71.13925171 -331.96066284]
[-61.10815811 -343.11981201]
[-50.39616013 -353.62707520]
[-39.04554749 -363.44097900]
[-27.10110474 -372.52282715]
[-14.60997868 -380.83676147]
[-1.62146389 -388.34994507]
[11.81317902 -395.03274536]
[25.64093018 -400.85879517]
[39.80721664 -405.80508423]
[54.25613022 -409.85208130]
[68.93064880 -412.98388672]
[83.77285004 -415.18804932]
[98.72417450 -416.45590210]
[113.72560120 -416.78247070]
[128.71792603 -416.16644287]
[143.64199829 -414.61026001]
[158.43890381 -412.12005615]
[173.05024719 -408.70562744]
[187.41835022 -404.38049316]
[201.48654175 -399.16171265]
[215.19927979 -393.06988525]
[228.50244141 -386.12905884]
[241.34352112 -378.36657715]
[253.67187500 -369.81314087]
[265.43881226 -360.50247192]
[276.59790039 -350.47131348]
[287.10510254 -339.75924683]
[296.91897583 -328.40859985]
[306.00076294 -316.46411133]
[314.31460571 -303.97293091]
[321.82772827 -290.98437500]
[328.51046753 -277.54971313]
[334.33642578 -263.72192383]
[339.28265381 -249.55560303]
[343.32958984 -235.10667419]
[346.46127319 -220.43214417]
[348.66537476 -205.58992004]
[349.93316650 -190.63859558]
[350.25967407 -175.63716125]
[349.64355469 -160.64483643]
[348.08728027 -145.72077942]
[345.59698486 -130.92388916]
[342.18249512 -116.31256866]
[337.85729980 -101.94447327]
[332.63845825 -87.87631989]
[326.54653931 -74.16362000]
[319.60562134 -60.86048889]
[311.84310913 -48.01943970]
[303.28958130 -35.69113922]
[293.97885132 -23.92425156]
[283.94763184 -12.76521015]
[273.23553467 -2.25805569]
[261.88482666 7.55574465]
[249.94027710 16.63745880]
[237.44906616 24.95124817]
[224.46047974 32.46429825]
[211.02575684 39.14695740]
[197.19795227 44.97285843]
[183.03161621 49.91900253]
[168.58265686 53.96587372]
[153.90811157 57.09749603]
[139.06587219 59.30151749]
[124.11454773 60.56923294]
[109.11311340 60.89564133]
[108.49729156 75.88299561]
[107.88146210 90.87034607]
[107.57348633 105.86718750]
[107.57348633 120.86718750]
[107.57348633 135.86718750]
[107.57348633 150.86718750]
[107.57348633 165.86718750]
[107.57348633 180.86718750]
[107.57348633 195.86718750]
[107.57348633 210.86718750]
[107.57348633 225.86718750]
[107.57348633 240.86718750]
[107.57348633 255.86718750]
[107.57348633 270.86718750]
[122.18349457 274.60861206]
[135.40365601 281.86660767]
[146.40293884 292.18487549]
[154.48989868 304.91482544]
[159.15620422 319.25625610]
[160.10852051 334.30761719]
[157.28698730 349.12280273]
[150.86895752 362.77050781]
[141.25788879 374.39282227]
[129.05792236 383.25915527]
[115.03598785 388.81216431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[26 129]
[27 128]
[28 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
