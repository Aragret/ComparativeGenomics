%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAAACCCCGGGGGGGGGGUACGCAUUUAUAUAGAGGAGACAAGUCGUAACAUGGUAAGUGUACUGGAAxxxxxxxxxxCCCCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUCCCCCCCCCCACUAAACCCCC\
) } def
/len { sequence length } bind def

/coor [
[37.17343521 778.66491699]
[23.15149117 773.11193848]
[10.95153427 764.24560547]
[1.34046245 752.62329102]
[-5.07756281 738.97558594]
[-7.89909983 724.16040039]
[-6.94678402 709.10900879]
[-2.28047872 694.76757812]
[5.80648804 682.03765869]
[16.80576324 671.71936035]
[30.02592087 664.46136475]
[44.63593292 660.71997070]
[44.63593292 645.71997070]
[44.63593292 630.71997070]
[44.63593292 615.71997070]
[44.63593292 600.71997070]
[44.63593292 585.71997070]
[44.63593292 570.71997070]
[44.63593292 555.71997070]
[44.63593292 540.71997070]
[44.63593292 525.71997070]
[31.64850426 522.56713867]
[19.69567680 516.57012939]
[9.39172268 508.03289795]
[1.26711333 497.39016724]
[-4.25879288 485.18511963]
[-6.89939547 472.04180908]
[-6.51571178 458.63305664]
[-3.12369013 445.64624023]
[3.10641980 433.74786377]
[11.85860634 423.54949951]
[22.68712616 415.57623291]
[35.03919983 410.23971558]
[48.28322983 407.81686401]
[49.20664597 392.84530640]
[50.13005829 377.87377930]
[43.19093704 364.69433594]
[51.76311111 351.39663696]
[52.68652725 336.42507935]
[45.74740219 323.24563599]
[54.31958008 309.94796753]
[45.03849030 303.18981934]
[40.14730072 292.67016602]
[40.97846985 280.97824097]
[47.43982315 271.05471802]
[58.00854111 265.45199585]
[59.54583359 250.53096008]
[61.08312607 235.60995483]
[62.62041855 220.68893433]
[50.09954834 228.94894409]
[35.36827469 226.12237549]
[26.79384995 213.81468201]
[29.24648857 199.01655579]
[41.33310699 190.13320923]
[56.18859482 192.21034241]
[65.37535858 204.06889343]
[68.73461914 189.44987488]
[72.09387207 174.83087158]
[70.32812500 170.33294678]
[71.41322327 164.67517090]
[75.90281677 159.68656921]
[79.85942841 145.21780396]
[83.81604004 130.74903870]
[87.77265167 116.28026581]
[75.68149567 107.26848602]
[71.39679718 89.69655609]
[80.32545471 70.54293823]
[80.32545471 55.54293823]
[80.32545471 40.54293823]
[66.26827240 34.75813675]
[55.49839783 24.03068352]
[49.65816498 9.99643517]
[49.63816833 -5.20448732]
[55.44145584 -19.25405312]
[66.18306732 -30.00980568]
[80.22499084 -35.83156967]
[95.42592621 -35.83156967]
[109.46784210 -30.00980568]
[120.20945740 -19.25405312]
[126.01274109 -5.20448732]
[125.99274445 9.99643517]
[120.15251923 24.03068352]
[109.38264465 34.75813675]
[95.32545471 40.54293823]
[95.32545471 55.54293823]
[95.32545471 70.54293823]
[102.31900024 73.25225067]
[116.30608368 78.67087555]
[123.29962158 81.38018799]
[133.40505981 70.29505920]
[143.51049805 59.20992279]
[142.53031921 43.43605804]
[153.05352783 31.64463043]
[168.83686829 30.83128548]
[180.51638794 41.47856522]
[181.16281128 57.26963043]
[170.39263916 68.83591461]
[154.59562683 69.31535339]
[144.49018860 80.40048981]
[134.38475037 91.48562622]
[122.87953949 115.95263672]
[102.24141693 120.23687744]
[98.28480530 134.70564270]
[94.32820129 149.17440796]
[90.37158966 163.64317322]
[86.71288300 178.19013977]
[83.35362244 192.80914307]
[79.99436188 207.42814636]
[77.54143524 222.22622681]
[76.00414276 237.14724731]
[74.46685028 252.06825256]
[72.92955780 266.98928833]
[85.43278503 281.15814209]
[83.70307159 299.65652466]
[69.29113007 310.87136841]
[76.16419983 325.12167358]
[67.65807343 337.34851074]
[66.73466492 352.32003784]
[73.60773468 366.57037354]
[65.10160828 378.79718018]
[64.17819214 393.76873779]
[63.25477982 408.74029541]
[79.08987427 414.20172119]
[92.76280975 423.85473633]
[103.19303894 436.92733765]
[109.55882263 452.37765503]
[111.36199188 468.97698975]
[108.46687317 485.40747070]
[101.11053467 500.36676025]
[89.88333130 512.67126465]
[75.68156433 521.34973145]
[59.63593292 525.71997070]
[59.63593292 540.71997070]
[59.63593292 555.71997070]
[59.63593292 570.71997070]
[59.63593292 585.71997070]
[59.63593292 600.71997070]
[59.63593292 615.71997070]
[59.63593292 630.71997070]
[59.63593292 645.71997070]
[59.63593292 660.71997070]
[74.24594879 664.46136475]
[87.46610260 671.71936035]
[98.46537781 682.03765869]
[106.55234528 694.76757812]
[111.21865082 709.10900879]
[112.17096710 724.16040039]
[109.34943390 738.97558594]
[102.93140411 752.62329102]
[93.32033539 764.24560547]
[81.12037659 773.11193848]
[67.09843445 778.66491699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[34 122]
[35 121]
[36 120]
[38 118]
[39 117]
[41 115]
[46 112]
[47 111]
[48 110]
[49 109]
[56 108]
[57 107]
[58 106]
[61 105]
[62 104]
[63 103]
[64 102]
[67 86]
[68 85]
[69 84]
[89 100]
[90 99]
[91 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
