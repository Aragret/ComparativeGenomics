%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACAGUCAGGGGGGGGGGCCCCCCAACUAACACAUUAUUUUCCCCUCCCACUCCCAUACUACUAAUCUxxxxxxxxxxACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAACCCCCCCCCCCUUUACAGUCA\
) } def
/len { sequence length } bind def

/coor [
[-283.94940186 355.53918457]
[-301.69064331 350.69088745]
[-318.86972046 344.12463379]
[-335.32073975 335.90399170]
[-350.88482666 326.10845947]
[-365.41165161 314.83273315]
[-375.62515259 325.81838989]
[-385.83862305 336.80407715]
[-386.15963745 349.74047852]
[-394.94683838 358.68496704]
[-407.07290649 359.20025635]
[-417.51272583 369.97103882]
[-427.95254517 380.74185181]
[-438.39236450 391.51266479]
[-448.83215332 402.28347778]
[-459.27197266 413.05429077]
[-462.74176025 429.08215332]
[-478.43771362 433.83282471]
[-490.21319580 422.41925049]
[-485.95458984 406.58267212]
[-470.04278564 402.61447144]
[-459.60296631 391.84365845]
[-449.16314697 381.07284546]
[-438.72335815 370.30206299]
[-428.28353882 359.53125000]
[-417.84371948 348.76043701]
[-414.52523804 331.55615234]
[-396.82427979 326.59057617]
[-386.61080933 315.60491943]
[-376.39733887 304.61926270]
[-385.03256226 295.31268311]
[-393.01690674 285.44180298]
[-400.31359863 275.05203247]
[-406.88900757 264.19119263]
[-412.71282959 252.90927124]
[-417.75827026 241.25822449]
[-422.00204468 229.29167175]
[-425.42462158 217.06468201]
[-428.01016235 204.63356018]
[-429.74676514 192.05554199]
[-430.62643433 179.38850403]
[-430.64505005 166.69079590]
[-429.80255127 154.02087402]
[-428.10275269 141.43705750]
[-425.55343628 128.99729919]
[-422.16638184 116.75886536]
[-417.95712280 104.77812958]
[-412.94497681 93.11023712]
[-407.15307617 81.80893707]
[-400.60800171 70.92626953]
[-393.33987427 60.51234436]
[-385.38217163 50.61513138]
[-376.77145386 41.28020859]
[-367.54742432 32.55057144]
[-357.75244141 24.46643639]
[-347.43167114 17.06503868]
[-336.63256836 10.38047791]
[-325.40484619 4.44355059]
[-313.80017090 -0.71838617]
[-301.87200928 -5.08154297]
[-289.67523193 -8.62580681]
[-277.26599121 -11.33483601]
[-264.70141602 -13.19613171]
[-252.03935242 -14.20110035]
[-239.33810425 -14.34508896]
[-226.65614319 -13.62740803]
[-214.05184937 -12.05133724]
[-201.58328247 -9.62410831]
[-189.30783081 -6.35686970]
[-177.28201294 -2.26464009]
[-165.56123352 2.63376403]
[-154.19943237 8.31581402]
[-143.24896240 14.75537109]
[-132.76022339 21.92280960]
[-122.78154755 29.78515053]
[-113.35887909 38.30621719]
[-104.53562927 47.44679642]
[-96.35242462 57.16481781]
[-88.84696198 67.41556549]
[-82.05383301 78.15184784]
[-76.00432587 89.32424927]
[-70.72631073 100.88134766]
[-66.24411774 112.76995087]
[-62.57840347 124.93531799]
[-47.93490219 121.68448639]
[-33.29140091 118.43366241]
[-18.64789963 115.18283844]
[-4.00439739 111.93201447]
[10.63910389 108.68118286]
[13.94260216 105.15097046]
[19.52138519 103.69891357]
[25.95902634 105.61315155]
[40.72508240 102.97428894]
[55.49113846 100.33541870]
[70.25719452 97.69655609]
[77.30853271 77.02640533]
[97.74513245 65.32372284]
[122.49873352 70.36442566]
[135.88502502 63.59630966]
[149.27130127 56.82819748]
[160.67829895 44.28559113]
[175.88850403 51.77465057]
[172.90272522 68.46360779]
[156.03941345 70.21447754]
[142.65313721 76.98259735]
[129.26684570 83.75070953]
[133.42474365 98.16292572]
[148.35903931 96.76062012]
[159.65913391 85.37257385]
[175.59193420 87.25016785]
[183.93516541 100.95307922]
[178.28863525 115.96961212]
[162.98385620 120.78035736]
[149.76135254 111.69493103]
[134.82704163 113.09723663]
[128.80839539 122.06288147]
[120.64459229 128.71286011]
[111.14450073 132.58929443]
[101.19434357 133.49882507]
[91.67559052 131.51724243]
[83.38699341 126.96990967]
[76.97751617 120.39042664]
[72.89605713 112.46261597]
[58.13000107 115.10147858]
[43.36394501 117.74034119]
[28.59789085 120.37920380]
[13.88992977 123.32468414]
[-0.75357175 126.57551575]
[-15.39707279 129.82633972]
[-30.04057503 133.07716370]
[-44.68407440 136.32798767]
[-59.32757568 139.57881165]
[-56.96184540 157.82974243]
[-56.39915848 176.22415161]
[-57.64483643 194.58438110]
[-60.68672943 212.73304749]
[-65.49533844 230.49490356]
[-72.02410126 247.69836426]
[-80.20985413 264.17733765]
[-89.97340393 279.77264404]
[-101.22035217 294.33370972]
[-113.84195709 307.72000122]
[-127.71622467 319.80221558]
[-142.70904541 330.46377563]
[-158.67553711 339.60180664]
[-175.46141052 347.12808228]
[-192.90446472 352.97003174]
[-210.83616638 357.07135010]
[-229.08328247 359.39251709]
[-247.46952820 359.91125488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 30]
[7 29]
[8 28]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[92 126]
[93 125]
[94 124]
[95 123]
[98 106]
[99 105]
[100 104]
[107 115]
[108 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
