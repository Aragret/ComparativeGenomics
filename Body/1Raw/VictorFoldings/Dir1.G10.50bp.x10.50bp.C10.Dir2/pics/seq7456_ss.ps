%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGUAGGUCUGGGGGGGGGGACAAGACGCUACUUCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCxxxxxxxxxxGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGCAAAUCAGCCCCCCCCCCCCCAAUUAGGUCU\
) } def
/len { sequence length } bind def

/coor [
[82.22869110 448.40875244]
[69.30953217 440.65039062]
[58.52823639 430.12136841]
[50.46622086 417.38949585]
[45.55826187 403.14138794]
[44.06903839 388.14541626]
[46.07886124 373.21029663]
[51.47934723 359.14151001]
[59.97925186 346.69769287]
[71.12018585 336.54995728]
[84.30133057 329.24557495]
[98.81185150 325.17843628]
[98.19602203 310.19110107]
[97.58020020 295.20373535]
[96.96437073 280.21640015]
[96.34854889 265.22903442]
[95.73271942 250.24168396]
[95.11689758 235.25431824]
[94.50107574 220.26696777]
[93.88524628 205.27961731]
[93.26942444 190.29226685]
[89.83121490 183.69749451]
[92.79801178 174.99153137]
[84.27127075 166.35690308]
[83.92769623 153.82481384]
[92.50000000 144.13362122]
[92.50000000 129.13362122]
[77.56111908 120.03781891]
[70.20677185 104.16906738]
[55.30232620 102.47866821]
[40.39787674 100.78826904]
[31.45530510 102.93912506]
[25.20591164 98.90709686]
[10.33931255 96.91104126]
[-4.52728605 94.91498566]
[-19.39388466 92.91892242]
[-28.71137047 105.12876129]
[-42.89163971 111.02922821]
[-58.12026978 109.03313446]
[-70.30083466 99.67742920]
[-76.15682983 85.47872925]
[-74.11301422 70.25643158]
[-64.71916962 58.10525131]
[-50.50218964 52.29379272]
[-35.28636932 54.38531113]
[-23.16469383 63.81719971]
[-17.39782715 78.05233002]
[-2.53122902 80.04838562]
[12.33537006 82.04444122]
[27.20196915 84.04049683]
[42.08827591 85.88381958]
[56.99272537 87.57421875]
[71.89717102 89.26461792]
[74.01188660 80.62014771]
[78.85214996 72.42144775]
[86.30093384 65.53412628]
[78.40445709 52.78087234]
[70.50797272 40.02761459]
[62.61148834 27.27435684]
[47.11027527 25.21366692]
[36.59846115 13.63628483]
[36.03940201 -1.99130142]
[45.69706726 -14.29022503]
[61.01140213 -17.45331001]
[74.75144958 -9.98704433]
[80.42957306 4.58322954]
[75.36474609 19.37787437]
[83.26123047 32.13113022]
[91.15770721 44.88438797]
[99.05419159 57.63764572]
[98.23861694 42.65983200]
[90.99951172 29.52227974]
[91.18106079 14.52337837]
[98.73605347 1.56490076]
[111.69914246 -5.98217249]
[126.69815063 -6.15456820]
[139.83128357 1.09256113]
[147.68211365 13.87396717]
[148.20837402 28.86473274]
[141.27313232 42.16520309]
[128.67906189 50.31591415]
[120.87462616 63.12570572]
[133.86500549 55.62570572]
[146.85539246 48.12570572]
[159.84576416 40.62570572]
[158.30015564 28.60385132]
[160.91767883 16.80465126]
[167.36477661 6.62287045]
[176.85661316 -0.74612927]
[188.25260925 -4.44670773]
[200.19343567 -4.06225300]
[211.26319885 0.33805075]
[220.15724182 8.21022892]
[233.58468628 1.52415335]
[242.48928833 -11.55325985]
[257.33108521 -10.30014610]
[270.75854492 -16.98622131]
[284.18597412 -23.67229652]
[297.61343384 -30.35837173]
[311.04089355 -37.04444885]
[315.82507324 -52.10721588]
[329.89721680 -59.30097580]
[344.90856934 -54.35779572]
[351.95315552 -40.21037674]
[346.85153198 -25.25213051]
[332.63043213 -18.35752106]
[317.72695923 -23.61699867]
[304.29949951 -16.93092346]
[290.87207031 -10.24484730]
[277.44461060 -3.55877209]
[264.01715088 3.12730336]
[256.07299805 15.72648430]
[240.27076721 14.95160294]
[226.84332275 21.63767815]
[226.59899902 39.68920517]
[217.23078918 55.22014236]
[201.22891235 63.93702316]
[182.93086243 63.37994003]
[167.34576416 53.61608505]
[154.35539246 61.11608505]
[141.36500549 68.61608124]
[128.37461853 76.11608124]
[134.66723633 93.15111542]
[131.98942566 110.23221588]
[121.85285950 123.14962006]
[107.50000000 129.13362122]
[107.50000000 144.13362122]
[117.08235931 159.82466125]
[107.79484558 174.68354797]
[108.25677490 189.67643738]
[108.87259674 204.66378784]
[109.48842621 219.65115356]
[110.10424805 234.63850403]
[110.72007751 249.62585449]
[111.33589935 264.61322021]
[111.95172882 279.60055542]
[112.56755066 294.58792114]
[113.18338013 309.57525635]
[113.79920197 324.56262207]
[128.59448242 327.42559814]
[142.33044434 333.62396240]
[154.26635742 342.82345581]
[163.75849915 354.52798462]
[170.29499817 368.10632324]
[173.52334595 382.82617188]
[173.26940918 397.89376831]
[169.54692078 412.49649048]
[162.55662537 425.84686279]
[152.67547607 437.22491455]
[140.43637085 446.01699829]
[126.49935150 451.74902344]
[111.61601257 454.11184692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[26 127]
[27 126]
[29 53]
[30 52]
[31 51]
[33 50]
[34 49]
[35 48]
[36 47]
[56 70]
[57 69]
[58 68]
[59 67]
[82 122]
[83 121]
[84 120]
[85 119]
[93 114]
[94 113]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
