%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUGCCCGGGGGGGGGGCUACUCCUCCUAGACCUAACCUGACUAGAAAAGCUAUUACCUAAAACAAUxxxxxxxxxxACACAUCAACUGCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACCCCCCCCCCCAAACCUACCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 385.58282471]
[71.19830322 379.56680298]
[59.48964310 370.03738403]
[50.78712082 357.70172119]
[45.73651886 343.47518921]
[44.71262741 328.41351318]
[47.79142761 313.63436890]
[54.74444962 300.23443604]
[65.05573273 289.20809937]
[77.96011353 281.37359619]
[92.50000000 277.31228638]
[92.50000000 262.31228638]
[92.50000000 247.31227112]
[92.50000000 232.31227112]
[92.50000000 217.31227112]
[92.50000000 202.31227112]
[92.50000000 187.31227112]
[92.50000000 172.31227112]
[92.50000000 157.31227112]
[92.50000000 142.31227112]
[78.48901367 137.20021057]
[67.06925964 127.60697174]
[59.61638260 114.68816376]
[57.02816391 100.00000000]
[59.61638260 85.31183624]
[67.06925964 72.39302826]
[78.48901367 62.79978561]
[92.50000000 57.68772507]
[92.50000000 42.68772507]
[92.50000000 27.68772507]
[92.50000000 12.68772507]
[92.50000000 -2.31227446]
[92.50000000 -17.31227493]
[77.53327179 -18.40745735]
[62.68641281 -20.59222412]
[48.03863907 -23.85491943]
[33.66810608 -28.17813492]
[19.65148735 -33.53880310]
[6.06356716 -39.90832520]
[-7.02315760 -47.25271606]
[-19.53886032 -55.53278351]
[-31.41676712 -64.70436096]
[-42.59349823 -74.71849823]
[-53.00942612 -85.52178192]
[-62.60897446 -97.05656433]
[-71.34091949 -109.26129150]
[-79.15868378 -122.07086182]
[-86.02054596 -135.41691589]
[-91.88989258 -149.22825623]
[-96.73542023 -163.43119812]
[-100.53126526 -177.94993591]
[-103.25717926 -192.70703125]
[-104.89861298 -207.62373352]
[-105.44681549 -222.62046814]
[-104.89886475 -237.61720276]
[-103.25766754 -252.53393555]
[-100.53199768 -267.29107666]
[-96.73638916 -281.80987549]
[-91.89109802 -296.01287842]
[-86.02198029 -309.82434082]
[-79.16033173 -323.17050171]
[-71.34278107 -335.98019409]
[-62.61103439 -348.18505859]
[-53.01167679 -359.72000122]
[-42.59592819 -370.52346802]
[-31.41936111 -380.53778076]
[-19.54160500 -389.70956421]
[-7.02603817 -397.98983765]
[6.06056547 -405.33444214]
[19.64838219 -411.70419312]
[33.66491318 -417.06506348]
[48.03537369 -421.38851929]
[62.68309402 -424.65145874]
[77.52991486 -426.83648682]
[92.49662781 -427.93191528]
[107.50337219 -427.93191528]
[122.47008514 -426.83648682]
[137.31690979 -424.65145874]
[151.96463013 -421.38851929]
[166.33508301 -417.06506348]
[180.35162354 -411.70419312]
[193.93943787 -405.33444214]
[207.02603149 -397.98983765]
[219.54161072 -389.70956421]
[231.41935730 -380.53778076]
[242.59593201 -370.52346802]
[253.01167297 -359.72000122]
[262.61102295 -348.18505859]
[271.34277344 -335.98019409]
[279.16033936 -323.17050171]
[286.02197266 -309.82434082]
[291.89111328 -296.01287842]
[296.73638916 -281.80987549]
[300.53201294 -267.29107666]
[303.25765991 -252.53393555]
[304.89886475 -237.61720276]
[305.44680786 -222.62046814]
[304.89862061 -207.62373352]
[303.25717163 -192.70703125]
[300.53128052 -177.94993591]
[296.73541260 -163.43119812]
[291.88989258 -149.22825623]
[286.02053833 -135.41691589]
[279.15869141 -122.07086182]
[271.34091187 -109.26129150]
[262.60897827 -97.05656433]
[253.00942993 -85.52178192]
[242.59350586 -74.71849823]
[231.41676331 -64.70436096]
[219.53886414 -55.53278351]
[207.02316284 -47.25271606]
[193.93643188 -39.90832520]
[180.34851074 -33.53880310]
[166.33189392 -28.17813492]
[151.96136475 -23.85491943]
[137.31358337 -20.59222412]
[122.46672821 -18.40745735]
[107.50000000 -17.31227493]
[107.50000000 -2.31227446]
[107.50000000 12.68772507]
[107.50000000 27.68772507]
[107.50000000 42.68772507]
[107.50000000 57.68772507]
[121.51098633 62.79978561]
[132.93074036 72.39302826]
[140.38362122 85.31183624]
[142.97183228 100.00000000]
[140.38362122 114.68816376]
[132.93074036 127.60697174]
[121.51098633 137.20021057]
[107.50000000 142.31227112]
[107.50000000 157.31227112]
[107.50000000 172.31227112]
[107.50000000 187.31227112]
[107.50000000 202.31227112]
[107.50000000 217.31227112]
[107.50000000 232.31227112]
[107.50000000 247.31227112]
[107.50000000 262.31228638]
[107.50000000 277.31228638]
[122.03988647 281.37359619]
[134.94427490 289.20809937]
[145.25555420 300.23443604]
[152.20857239 313.63436890]
[155.28736877 328.41351318]
[154.26348877 343.47518921]
[149.21287537 357.70172119]
[140.51036072 370.03738403]
[128.80169678 379.56680298]
[114.95575714 385.58282471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[33 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
