%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAAUUACGGGGGGGGGGCCCCAUACUCCUUACACUAUUCCUCAUCACCCAACUAAAAAUAUUAAACAxxxxxxxxxxCCGCUAUGUAUUUCGUACAUUACUGCCAGCCACCAUGAAUAUUGUACGGUCCCCCCCCCCACCAUAAAUAC\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 384.74191284]
[71.01555634 379.18890381]
[58.81560135 370.32257080]
[49.20452881 358.70025635]
[42.78650284 345.05255127]
[39.96496582 330.23736572]
[40.91728210 315.18597412]
[45.58358765 300.84454346]
[53.67055511 288.11459351]
[64.66983032 277.79632568]
[77.88998413 270.53836060]
[92.50000000 266.79690552]
[92.50000000 251.79692078]
[92.50000000 236.79692078]
[92.50000000 221.79692078]
[92.50000000 206.79692078]
[92.50000000 191.79692078]
[92.50000000 176.79692078]
[92.50000000 161.79692078]
[92.50000000 146.79692078]
[92.50000000 131.79692078]
[80.92313385 126.52106476]
[72.23933411 117.22322083]
[67.76552582 105.31341553]
[68.18016815 92.59781647]
[73.42039490 81.00478363]
[63.54468536 69.71450043]
[53.66897964 58.42422104]
[43.79327393 47.13394165]
[31.53680229 55.80474854]
[18.45373726 63.16935730]
[4.68277025 69.14969635]
[-9.63012123 73.68237305]
[-24.33321190 76.71934509]
[-39.27064133 78.22840118]
[-54.28406143 78.19356537]
[-69.21432495 76.61518860]
[-83.90316010 73.51000977]
[-98.19486237 68.91094971]
[-111.93791962 62.86676025]
[-124.98666382 55.44150925]
[-137.20275879 46.71390915]
[-148.45671082 36.77647781]
[-158.62922668 25.73455620]
[-167.61247253 13.70519733]
[-175.31120300 0.81591946]
[-181.64382935 -12.79664516]
[-186.54321289 -26.98819542]
[-189.95741272 -41.60829544]
[-191.85023499 -56.50195694]
[-192.20162964 -71.51130676]
[-191.00785828 -86.47723389]
[-188.28158569 -101.24108887]
[-184.05171204 -115.64636993]
[-178.36305237 -129.54037476]
[-171.27593994 -142.77581787]
[-162.86549377 -155.21238708]
[-153.22085571 -166.71826172]
[-142.44429016 -177.17146301]
[-130.65000916 -186.46118164]
[-117.96304321 -194.48895264]
[-104.51789093 -201.16966248]
[-90.45707703 -206.43249512]
[-75.92964172 -210.22167969]
[-61.08960342 -212.49702454]
[-46.09426117 -213.23442078]
[-31.10257912 -212.42604065]
[-16.27347374 -210.08047485]
[-1.76414549 -206.22257996]
[12.27160072 -200.89323425]
[25.68497658 -194.14895630]
[38.33379364 -186.06121826]
[50.08396912 -176.71575928]
[60.81093979 -166.21166992]
[70.40100098 -154.66026306]
[78.75248718 -142.18402100]
[85.77686310 -128.91517639]
[91.39968109 -114.99440765]
[95.56132507 -100.56926727]
[98.21767426 -85.79267120]
[99.34058380 -70.82125854]
[98.91814423 -55.81373978]
[96.95483398 -40.92920303]
[93.47146606 -26.32543182]
[88.50495911 -12.15723228]
[82.10797119 1.42520249]
[74.34830475 14.27789211]
[65.30822754 26.26459122]
[55.08355331 37.25823212]
[64.95925903 48.54851532]
[74.83496857 59.83879471]
[84.71067047 71.12907410]
[102.74286652 67.44588470]
[119.90456390 74.09436035]
[130.74916077 88.96447754]
[145.65361023 87.27408600]
[160.55805969 85.58368683]
[175.46250916 83.89328766]
[190.36695862 82.20288849]
[205.27140808 80.51249695]
[207.34255981 65.57391357]
[213.06448364 51.62004471]
[222.07748413 39.52803802]
[233.81500244 30.05801010]
[247.53919983 23.80524826]
[262.38739014 21.16281319]
[277.42614746 22.29680634]
[291.71017456 27.13594437]
[304.34155273 35.37603760]
[314.52627563 46.49910355]
[321.62408447 59.80593872]
[325.18884277 74.46006775]
[324.99642944 89.54030609]
[321.05895996 104.09871674]
[313.62396240 117.22013092]
[303.15878296 128.07974243]
[290.32128906 135.99487305]
[275.91845703 140.46801758]
[260.85565186 141.21795654]
[246.07971191 138.19755554]
[232.51950073 131.59667969]
[221.02742004 121.83026886]
[212.32585144 109.51225281]
[206.96180725 95.41693878]
[192.05735779 97.10733795]
[177.15290833 98.79773712]
[162.24845886 100.48813629]
[147.34400940 102.17852783]
[132.43955994 103.86892700]
[128.26110840 116.38913727]
[119.46956635 126.23413086]
[107.50000000 131.79692078]
[107.50000000 146.79692078]
[107.50000000 161.79692078]
[107.50000000 176.79692078]
[107.50000000 191.79692078]
[107.50000000 206.79692078]
[107.50000000 221.79692078]
[107.50000000 236.79692078]
[107.50000000 251.79692078]
[107.50000000 266.79690552]
[122.11001587 270.53836060]
[135.33016968 277.79632568]
[146.32945251 288.11459351]
[154.41641235 300.84454346]
[159.08271790 315.18597412]
[160.03503418 330.23736572]
[157.21350098 345.05255127]
[150.79547119 358.70025635]
[141.18440247 370.32257080]
[128.98443604 379.18890381]
[114.96250153 384.74191284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[26 92]
[27 91]
[28 90]
[29 89]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
