%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACUACUCGGGGGGGGGGCGGAAAAAAAGAACCAUUUGGAUACAUAGGUAUGGUCUGAGCUAUGAUAUxxxxxxxxxxAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCCCCCCCCCCCUUACUACAC\
) } def
/len { sequence length } bind def

/coor [
[53.42559433 447.84957886]
[40.86737442 439.49844360]
[30.78114891 428.28598022]
[23.80095673 414.91708374]
[20.36557198 400.23208618]
[20.69094849 385.15411377]
[24.75663376 370.63101196]
[32.30705261 357.57565308]
[42.86758041 346.80877686]
[55.77437592 339.00714111]
[70.21610260 334.66119385]
[69.59212494 319.67416382]
[68.96814728 304.68716431]
[68.34416962 289.70013428]
[67.72019958 274.71313477]
[67.09622192 259.72610474]
[66.47224426 244.73908997]
[65.84826660 229.75207520]
[65.22428894 214.76506042]
[64.60031128 199.77804565]
[56.34027100 187.38365173]
[63.49680710 173.27355957]
[62.87282944 158.28654480]
[62.24885178 143.29953003]
[61.62487411 128.31251526]
[49.73249435 119.17077637]
[35.08899307 122.42160034]
[20.44549179 125.67242432]
[14.38593006 139.95742798]
[1.06981134 147.92364502]
[-14.38254452 146.50790405]
[-26.02939034 136.25457764]
[-29.39227867 121.10629272]
[-23.17810631 106.88786316]
[-9.77635384 99.06657410]
[5.65973473 100.64986420]
[17.19466782 111.02892303]
[31.83816910 107.77809906]
[46.48167038 104.52727509]
[53.24978256 91.14099121]
[47.18677139 77.42093658]
[38.54765701 65.15856934]
[27.66882896 54.83136368]
[16.79000473 44.50415802]
[5.80433989 34.29067612]
[-5.28697538 24.19202805]
[-16.37829018 14.09337807]
[-27.46960640 3.99472833]
[-38.56092072 -6.10392094]
[-53.97414398 -9.67367268]
[-58.17587280 -23.96334457]
[-73.34368896 -20.68966484]
[-87.52529907 -26.98740196]
[-95.26758575 -40.43495178]
[-93.59348297 -55.86145401]
[-83.14672089 -67.33510590]
[-67.94428253 -70.44405365]
[-53.83182144 -63.99284363]
[-46.23587036 -50.46209717]
[-48.07722092 -35.05466080]
[-33.45732498 -32.20723343]
[-28.46227264 -17.19523621]
[-17.37095642 -7.09658718]
[-6.27964115 3.00206256]
[4.81167412 13.10071182]
[15.90298939 23.19936180]
[23.01224709 25.39118767]
[27.11721039 33.62533188]
[37.99603653 43.95253754]
[48.87485886 54.27974319]
[44.99323273 39.79067612]
[45.47140884 24.79830170]
[50.26845169 10.58604050]
[58.97371292 -1.62945998]
[70.84197235 -10.80248737]
[84.85723877 -16.14778137]
[99.81974030 -17.20775604]
[114.44860840 -13.89167118]
[127.49151611 -6.48340273]
[137.83193970 4.38286209]
[144.58467102 17.77691269]
[147.17164612 32.55214691]
[145.37139893 47.44372559]
[139.33805847 61.17685318]
[129.58808899 72.57588959]
[116.95614624 80.66503143]
[102.52359772 84.75179291]
[87.52594757 84.48632812]
[73.24707794 79.89136505]
[60.90682602 71.35792542]
[66.96984100 85.07797241]
[82.22631836 68.39698792]
[104.40836334 63.99699402]
[124.89234161 73.59890747]
[138.41653442 67.11074066]
[151.94071960 60.62257385]
[165.46490479 54.13441086]
[178.98910522 47.64624405]
[181.64990234 32.35900116]
[192.81155396 21.57953262]
[208.18218994 19.45275879]
[221.85148621 26.79647255]
[228.56330872 40.78686523]
[225.73683167 56.04434204]
[214.45889282 66.70209503]
[199.06608582 68.66200256]
[185.47726440 61.17043686]
[171.95307922 67.65859985]
[158.42889404 74.14676666]
[144.90469360 80.63493347]
[131.38050842 87.12309265]
[133.86563110 101.91580200]
[148.76753235 103.62849426]
[163.66943359 105.34117889]
[180.09533691 101.14288330]
[188.67671204 115.76466370]
[177.00192261 128.05838013]
[161.95674133 120.24308777]
[147.05484009 118.53039551]
[132.15293884 116.81770325]
[121.70146942 129.06794739]
[106.98204041 135.58656311]
[90.89591217 135.09303284]
[76.61189270 127.68852997]
[77.23587036 142.67555237]
[77.85984802 157.66256714]
[78.48382568 172.64958191]
[86.78849030 186.11595154]
[79.58732605 199.15406799]
[80.21130371 214.14108276]
[80.83528137 229.12809753]
[81.45925903 244.11511230]
[82.08323669 259.10211182]
[82.70721436 274.08914185]
[83.33119202 289.07617188]
[83.95516968 304.06317139]
[84.57914734 319.05020142]
[85.20312500 334.03720093]
[99.95612335 337.16766357]
[113.46675873 343.86941528]
[124.88574219 353.72119141]
[133.49525452 366.10372925]
[138.75410461 380.23861694]
[140.33171082 395.23736572]
[138.12890625 410.15710449]
[132.28416443 424.05996704]
[123.16487885 436.07202148]
[111.34430695 445.43817139]
[97.56549072 451.56967163]
[82.69459534 454.08105469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[22 127]
[23 126]
[24 125]
[25 124]
[26 39]
[27 38]
[28 37]
[40 91]
[41 90]
[42 70]
[43 69]
[44 68]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[51 60]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
