%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUACUACUGGGGGGGGGGAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCxxxxxxxxxxCCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACGCCUUCUUCAAAGCCCCCCCCCCCCAUACUAUU\
) } def
/len { sequence length } bind def

/coor [
[-50.79410553 308.89862061]
[-62.39969254 300.00961304]
[-73.48242950 290.47662354]
[-84.00663757 280.33041382]
[-93.93842316 269.60360718]
[-103.24582672 258.33078003]
[-111.89886475 246.54818726]
[-119.86968994 234.29377747]
[-127.13263702 221.60700989]
[-133.66432190 208.52871704]
[-147.44670105 214.44868469]
[-161.22909546 220.36865234]
[-175.01147461 226.28860474]
[-184.63778687 238.84426880]
[-199.38555908 236.75804138]
[-213.16793823 242.67800903]
[-226.95031738 248.59796143]
[-240.73271179 254.51792908]
[-254.51509094 260.43789673]
[-253.35923767 275.53567505]
[-257.17065430 290.19006348]
[-265.53594971 302.81152344]
[-277.54766846 312.03091431]
[-291.90286255 316.84823608]
[-307.04443359 316.74090576]
[-321.32992554 311.72058105]
[-333.20974731 302.33181763]
[-341.39523315 289.59304810]
[-344.99853516 274.88607788]
[-343.62878418 259.80618286]
[-337.43450928 245.98918152]
[-327.08767700 234.93377686]
[-313.71063232 227.83921814]
[-298.75436401 225.47503662]
[-283.84127808 228.09768677]
[-270.58901978 235.42269897]
[-260.43505859 246.65551758]
[-246.65266418 240.73554993]
[-232.87028503 234.81558228]
[-219.08790588 228.89562988]
[-205.30552673 222.97566223]
[-196.66502380 210.84342957]
[-180.93142700 212.50622559]
[-167.14904785 206.58625793]
[-153.36666870 200.66630554]
[-139.58428955 194.74633789]
[-144.82670593 180.23332214]
[-149.19087219 165.43251038]
[-152.66113281 150.39695740]
[-155.22505188 135.18063354]
[-156.87341309 119.83811188]
[-157.60032654 104.42441559]
[-157.40316772 88.99485779]
[-156.28263855 73.60476685]
[-154.24278259 58.30937195]
[-151.29089355 43.16352463]
[-147.43757629 28.22156334]
[-142.69665527 13.53708553]
[-137.08511353 -0.83723062]
[-130.62310791 -14.84982204]
[-123.33380890 -28.45042229]
[-115.24335480 -41.59024429]
[-106.38078308 -54.22215271]
[-96.77787781 -66.30082703]
[-86.46909332 -77.78295135]
[-75.49139404 -88.62732697]
[-63.88417816 -98.79505920]
[-51.68907166 -108.24967194]
[-38.94982529 -116.95724487]
[-25.71213531 -124.88655090]
[-12.02348900 -132.00914001]
[2.06700993 -138.29945374]
[16.50881577 -143.73493958]
[31.25012016 -148.29609680]
[46.23804855 -151.96656799]
[61.41883087 -154.73318481]
[76.73800659 -156.58601379]
[92.14064026 -157.51840210]
[107.57145691 -157.52703857]
[122.97511292 -156.61186218]
[138.29635620 -154.77615356]
[153.48022461 -152.02651978]
[168.47224426 -148.37280273]
[183.21864319 -143.82814026]
[197.66651917 -138.40879822]
[211.76403809 -132.13423157]
[225.46063232 -125.02695465]
[238.70718384 -117.11245728]
[251.45616150 -108.41912842]
[263.66183472 -98.97815704]
[275.28039551 -88.82341003]
[286.27020264 -77.99131012]
[296.59182739 -66.52072144]
[306.20825195 -54.45278549]
[318.47061157 -63.09189987]
[330.73297119 -71.73101807]
[337.12579346 -86.83280945]
[353.43173218 -88.57856750]
[362.87667847 -75.17240906]
[355.74444580 -60.40543747]
[339.37210083 -59.46865082]
[327.10971069 -50.82953262]
[314.84735107 -42.19041824]
[322.56628418 -29.77579117]
[329.56863403 -16.94334793]
[335.83187866 -3.73440194]
[341.33584595 9.80852127]
[346.06286621 23.64181900]
[349.99765015 37.72095490]
[353.12756348 52.00059891]
[355.44250488 66.43477631]
[356.93505859 80.97702026]
[357.60040283 95.58051300]
[357.43640137 110.19822693]
[356.44354248 124.78311157]
[354.62509155 139.28820801]
[351.98684692 153.66680908]
[348.53732300 167.87263489]
[344.28762817 181.85993958]
[339.25146484 195.58369446]
[333.44497681 208.99971008]
[326.88693237 222.06480408]
[319.59841919 234.73690796]
[311.60290527 246.97521973]
[302.92611694 258.74032593]
[293.59600830 269.99438477]
[283.64260864 280.70111084]
[273.09796143 290.82608032]
[261.99600220 300.33670044]
[250.37252808 309.20230103]
[238.26490784 317.39437866]
[225.71212769 324.88653564]
[212.75463867 331.65469360]
[199.43411255 337.67700195]
[185.79345703 342.93411255]
[171.87658691 347.40908813]
[157.72831726 351.08752441]
[143.39418030 353.95758057]
[128.92033386 356.00997925]
[114.35338593 357.23818970]
[99.74021912 357.63818359]
[85.12789154 357.20870972]
[70.56344604 355.95114136]
[56.09376907 353.86953735]
[41.76544952 350.97058105]
[27.62462044 347.26364136]
[13.71680546 342.76058960]
[0.08678292 337.47601318]
[-13.22156620 331.42681885]
[-26.16539383 324.63256836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
