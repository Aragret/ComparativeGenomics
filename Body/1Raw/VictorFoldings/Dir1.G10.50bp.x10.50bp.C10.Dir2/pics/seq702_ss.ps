%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAGCACAGGGGGGGGGGCACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCAAAGACAxxxxxxxxxxCAGCCCAAUAUCUACAAUCAACCAACAAGUCAUUAUUACCCUCACUGUCACCCCCCCCCCACCCAACACA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 357.70864868]
[71.19830322 351.69262695]
[59.48964310 342.16320801]
[50.78712082 329.82754517]
[45.73651886 315.60101318]
[44.71262741 300.53933716]
[47.79142761 285.76016235]
[54.74444962 272.36026001]
[65.05573273 261.33392334]
[77.96011353 253.49940491]
[92.50000000 249.43809509]
[92.50000000 234.43809509]
[92.50000000 219.43809509]
[92.50000000 204.43809509]
[92.50000000 189.43809509]
[92.50000000 174.43809509]
[92.50000000 159.43809509]
[92.50000000 144.43809509]
[92.50000000 129.43809509]
[92.50000000 114.43809509]
[83.73101807 100.16924286]
[92.20125580 85.72106171]
[91.88919830 70.72430420]
[91.57714081 55.72755432]
[76.58456421 55.12471771]
[61.65662384 53.60899734]
[46.84885406 51.18602371]
[32.21633911 47.86481476]
[17.81351852 43.65772247]
[3.69397020 38.58040237]
[-10.08978176 32.65173721]
[-23.48645782 25.89378738]
[-36.44622421 18.33168983]
[-48.92086792 9.99357700]
[-60.86398315 0.91046661]
[-72.23114014 -8.88385010]
[-82.98004913 -19.35293770]
[-93.07072449 -30.45785141]
[-102.46562958 -42.15727997]
[-111.12981415 -54.40769577]
[-119.03105164 -67.16353607]
[-126.13993835 -80.37733459]
[-132.43003845 -93.99994659]
[-137.87794495 -107.98069000]
[-142.46337891 -122.26755524]
[-146.16931152 -136.80738831]
[-148.98194885 -151.54611206]
[-150.89080811 -166.42889404]
[-151.88880920 -181.40036011]
[-151.97222900 -196.40483093]
[-151.14076233 -211.38647461]
[-149.39749146 -226.28955078]
[-146.74891663 -241.05863953]
[-143.20487976 -255.63877869]
[-138.77856445 -269.97573853]
[-133.48645020 -284.01620483]
[-127.34820557 -297.70791626]
[-120.38667297 -310.99993896]
[-112.62776184 -323.84283447]
[-104.10031891 -336.18884277]
[-94.83608246 -347.99200439]
[-84.86949921 -359.20843506]
[-74.23766327 -369.79638672]
[-62.98011017 -379.71649170]
[-51.13872528 -388.93182373]
[-38.75756454 -397.40811157]
[-25.88268089 -405.11386108]
[-12.56197262 -412.02032471]
[1.15500677 -418.10189819]
[15.21722889 -423.33590698]
[29.57238197 -427.70288086]
[44.16706085 -431.18655396]
[58.94697571 -433.77404785]
[73.85713959 -435.45565796]
[88.84209442 -436.22512817]
[103.84608459 -436.07965088]
[118.81329346 -435.01974487]
[133.68804932 -433.04934692]
[148.41500854 -430.17578125]
[162.93939209 -426.40972900]
[177.20718384 -421.76522827]
[191.16526794 -416.25955200]
[204.76174927 -409.91314697]
[217.94602966 -402.74966431]
[230.66908264 -394.79574585]
[242.88356018 -386.08096313]
[254.54402161 -376.63775635]
[265.60711670 -366.50122070]
[276.03164673 -355.70910645]
[285.77886963 -344.30154419]
[294.81250000 -332.32095337]
[303.09893799 -319.81192017]
[310.60736084 -306.82101440]
[317.30984497 -293.39648438]
[323.18145752 -279.58831787]
[328.20031738 -265.44790649]
[332.34780884 -251.02780151]
[335.60845947 -236.38168335]
[337.97015381 -221.56401062]
[339.42413330 -206.62992859]
[339.96493530 -191.63497925]
[339.59060669 -176.63496399]
[338.30249023 -161.68565369]
[336.10540771 -146.84268188]
[333.00750732 -132.16127014]
[329.02035522 -117.69602966]
[324.15872192 -103.50076294]
[318.44076538 -89.62828064]
[311.88769531 -76.13020325]
[304.52392578 -63.05672455]
[296.37686157 -50.45649338]
[287.47674561 -38.37638092]
[277.85675049 -26.86132050]
[267.55264282 -15.95415688]
[256.60275269 -5.69546127]
[245.04783630 3.87660193]
[232.93083191 12.72642422]
[220.29685974 20.82108307]
[207.19290161 28.13046455]
[193.66770935 34.62738037]
[179.77159119 40.28765869]
[165.55624390 45.09024429]
[151.07455444 49.01726913]
[136.38038635 52.05412292]
[121.52841949 54.18951416]
[106.57389832 55.41549683]
[106.88595581 70.41224670]
[107.19801331 85.40900421]
[115.12266541 93.99886322]
[115.24423218 105.68522644]
[107.50000000 114.43809509]
[107.50000000 129.43809509]
[107.50000000 144.43809509]
[107.50000000 159.43809509]
[107.50000000 174.43809509]
[107.50000000 189.43809509]
[107.50000000 204.43809509]
[107.50000000 219.43809509]
[107.50000000 234.43809509]
[107.50000000 249.43809509]
[122.03988647 253.49940491]
[134.94427490 261.33392334]
[145.25555420 272.36026001]
[152.20857239 285.76016235]
[155.28736877 300.53933716]
[154.26348877 315.60101318]
[149.21287537 329.82754517]
[140.51036072 342.16320801]
[128.80169678 351.69262695]
[114.95575714 357.70864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 128]
[23 127]
[24 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
