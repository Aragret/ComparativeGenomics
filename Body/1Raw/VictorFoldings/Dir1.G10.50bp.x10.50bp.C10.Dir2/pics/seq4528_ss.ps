%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCUUAUUGGGGGGGGGGUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUCCGUxxxxxxxxxxCCUACCAUGAGCCCUACAAACAACUAACCUGCCACUAAUAGUUAUGUCAUCCCCCCCCCCCCCUCUUAUU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 373.23522949]
[71.19830322 367.21920776]
[59.48964310 357.68978882]
[50.78712082 345.35412598]
[45.73651886 331.12759399]
[44.71262741 316.06591797]
[47.79142761 301.28674316]
[54.74444962 287.88681030]
[65.05573273 276.86050415]
[77.96011353 269.02597046]
[92.50000000 264.96466064]
[92.50000000 249.96467590]
[92.50000000 234.96467590]
[92.50000000 219.96467590]
[92.50000000 204.96467590]
[92.50000000 189.96467590]
[92.50000000 174.96467590]
[92.50000000 159.96467590]
[92.50000000 144.96467590]
[92.50000000 129.96467590]
[75.66947937 119.03042603]
[69.11104584 100.06173706]
[75.59360504 81.06697845]
[66.32865143 69.27033997]
[57.06370544 57.47369766]
[47.79875565 45.67705917]
[33.18995285 39.60306168]
[31.41372681 24.81474495]
[22.14877701 13.01810551]
[12.76161575 1.31848180]
[3.25325704 -10.28285980]
[-6.25510120 -21.88420105]
[-16.00275421 -33.28522110]
[-25.98547935 -44.48098755]
[-38.22468948 -37.04021072]
[-51.57617188 -31.86348534]
[-65.62527466 -29.11023140]
[-79.93592072 -28.86462212]
[-94.06414032 -31.13302231]
[-107.57183838 -35.84381104]
[-120.04039001 -42.84966278]
[-131.08360291 -51.93214417]
[-140.35971069 -62.80851364]
[-147.58187866 -75.14054871]
[-152.52714539 -88.54503632]
[-155.04330444 -102.60571289]
[-155.05351257 -116.88614655]
[-152.55873108 -130.94334412]
[-147.63758850 -144.34141541]
[-140.44393921 -156.66516113]
[-131.20201111 -167.53289795]
[-140.71037292 -179.13424683]
[-150.21873474 -190.73558044]
[-159.72708130 -202.33692932]
[-169.23544312 -213.93826294]
[-178.74380493 -225.53961182]
[-194.50245667 -228.54696655]
[-201.84878540 -242.80920410]
[-195.14729309 -257.38552856]
[-179.53880310 -261.09426880]
[-166.99681091 -251.09036255]
[-167.14245605 -235.04797363]
[-157.63410950 -223.44662476]
[-148.12574768 -211.84529114]
[-138.61738586 -200.24394226]
[-129.10902405 -188.64260864]
[-119.60066986 -177.04125977]
[-105.79512024 -184.54981995]
[-90.79519653 -189.25245667]
[-75.16503906 -190.97048950]
[-59.49284363 -189.63752747]
[-44.36872482 -185.30203247]
[-30.36249924 -178.12553406]
[-18.00220680 -168.37664795]
[-7.75421476 -156.42098999]
[-0.00561445 -142.70753479]
[4.95039654 -127.75161743]
[6.92560959 -112.11573029]
[5.84395123 -96.38824463]
[1.74441361 -81.16133118]
[-5.22035170 -67.00864410]
[-14.78971386 -54.46371460]
[-4.80698776 -43.26794815]
[-0.11363428 -42.10693359]
[3.87594581 -37.94585800]
[5.34624004 -31.39255905]
[14.85459805 -19.79121780]
[24.36295700 -8.18987656]
[31.07887077 -4.98954153]
[33.94541931 3.75315619]
[43.21036530 15.54979610]
[57.15647888 20.78001976]
[59.59539413 36.41210938]
[68.86034393 48.20875168]
[78.12528992 60.00539017]
[87.39024353 71.80203247]
[100.57455444 69.11632538]
[113.64985657 72.29056549]
[124.13519287 80.72245026]
[130.04106140 92.81211090]
[145.04025269 92.96814728]
[160.03944397 93.12418365]
[175.03863525 92.96814728]
[190.03132629 92.50010681]
[205.02403259 92.03206635]
[220.01672363 91.56401825]
[226.15969849 77.59167480]
[237.76228333 67.67488098]
[252.52078247 63.78264236]
[267.50488281 66.68775177]
[279.73947144 75.81340790]
[286.79534912 89.34770203]
[287.27160645 104.60338593]
[281.07366943 118.55143738]
[269.43209839 128.42245483]
[254.65840149 132.25654602]
[239.68586731 129.29244995]
[227.48730469 120.11869049]
[220.48475647 106.55671692]
[205.49206543 107.02475739]
[190.49937439 107.49280548]
[175.50666809 107.96084595]
[171.60375977 110.81439209]
[165.85217285 111.20254517]
[159.88340759 108.12337494]
[144.88421631 107.96733856]
[129.88502502 107.81130219]
[126.75792694 115.43194580]
[121.72793579 121.95514679]
[115.15276337 126.91700745]
[107.50000000 129.96467590]
[107.50000000 144.96467590]
[107.50000000 159.96467590]
[107.50000000 174.96467590]
[107.50000000 189.96467590]
[107.50000000 204.96467590]
[107.50000000 219.96467590]
[107.50000000 234.96467590]
[107.50000000 249.96467590]
[107.50000000 264.96466064]
[122.03988647 269.02597046]
[134.94427490 276.86050415]
[145.25555420 287.88681030]
[152.20857239 301.28674316]
[155.28736877 316.06591797]
[154.26348877 331.12759399]
[149.21287537 345.35412598]
[140.51036072 357.68978882]
[128.80169678 367.21920776]
[114.95575714 373.23522949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 96]
[24 95]
[25 94]
[26 93]
[28 91]
[29 90]
[30 88]
[31 87]
[32 86]
[33 83]
[34 82]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[100 127]
[101 126]
[102 125]
[103 122]
[104 121]
[105 120]
[106 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
