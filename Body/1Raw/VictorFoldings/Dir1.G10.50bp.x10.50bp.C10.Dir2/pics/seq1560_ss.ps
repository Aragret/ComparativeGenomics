%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCACCACCGGGGGGGGGGUCUUGCUCAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUAxxxxxxxxxxAAUACGCAAAACUAACCCCCUAAUAAAAUUAAUUAACCACUCAUUCAUCGCCCCCCCCCCACCUCCCCACC\
) } def
/len { sequence length } bind def

/coor [
[86.96421051 377.19180298]
[72.94226074 371.63879395]
[60.74230576 362.77246094]
[51.13123703 351.15014648]
[44.71321106 337.50247192]
[41.89167404 322.68725586]
[42.84399033 307.63589478]
[47.51029587 293.29446411]
[55.59725952 280.56451416]
[66.59653473 270.24624634]
[79.81669617 262.98825073]
[94.42670441 259.24682617]
[94.42670441 244.24682617]
[94.42670441 229.24682617]
[94.42670441 214.24682617]
[94.42670441 199.24682617]
[94.42670441 184.24682617]
[94.42670441 169.24682617]
[94.42670441 154.24682617]
[94.42670441 139.24682617]
[94.42670441 124.24682617]
[94.42670441 109.24682617]
[88.88666534 109.93177032]
[82.72017670 107.93011475]
[67.73993683 107.16045380]
[52.75969315 106.39079285]
[37.77945328 105.62113190]
[22.79921150 104.85147095]
[6.63715458 113.61608887]
[-7.72561550 103.57839203]
[-22.71850204 103.11647034]
[-28.60755348 117.10516357]
[-39.15504074 128.01913452]
[-52.93450546 134.38238525]
[-68.08238220 135.33430481]
[-82.55005646 130.74617004]
[-94.38088226 121.23849487]
[-101.97484589 108.09709930]
[-104.30491638 93.09925842]
[-101.05598450 78.27330780]
[-92.66742706 65.62432861]
[-80.27374268 56.86300278]
[-65.55105591 53.17421341]
[-50.49051285 55.05685043]
[-37.12891006 62.25629807]
[-27.27330017 73.79888916]
[-22.25657463 88.12358093]
[-7.26368999 88.58551025]
[1.79708052 80.51304626]
[14.33029270 80.81295776]
[23.56887245 89.87123108]
[38.54911423 90.64089203]
[53.52935410 91.41055298]
[68.50959778 92.18021393]
[83.48983765 92.94987488]
[71.97518158 83.33671570]
[71.30625916 68.35163879]
[81.91856384 57.75074387]
[96.90290833 58.43579483]
[106.50366974 69.96078491]
[104.47045898 84.82193756]
[115.02247620 74.16102600]
[125.57449341 63.50011826]
[136.12651062 52.83920670]
[146.67852783 42.17829895]
[157.23052979 31.51738930]
[161.43940735 16.26629066]
[175.89173889 12.66361237]
[166.46859741 0.97239488]
[158.41374207 -11.70038414]
[151.82847595 -25.19535065]
[146.79559326 -39.34279251]
[143.37838745 -53.96479034]
[141.61985779 -68.87745667]
[141.54209900 -83.89324188]
[143.14610291 -98.82331848]
[146.41168213 -113.47991943]
[151.29779053 -127.67872620]
[157.74295044 -141.24116516]
[165.66613770 -153.99668884]
[174.96769714 -165.78486633]
[185.53063965 -176.45745850]
[197.22213745 -185.88023376]
[209.89515686 -193.93470764]
[223.39031982 -200.51959229]
[237.53790283 -205.55204773]
[252.16000366 -208.96881104]
[267.07272339 -210.72689819]
[282.08853149 -210.80419922]
[297.01855469 -209.19975281]
[311.67504883 -205.93373108]
[325.87371826 -201.04721069]
[339.43594360 -194.60162354]
[352.19125366 -186.67807007]
[363.97912598 -177.37615967]
[374.65142822 -166.81289673]
[384.07385254 -155.12112427]
[392.12792969 -142.44786072]
[398.71240234 -128.95249939]
[403.74444580 -114.80475616]
[407.16076660 -100.18255615]
[408.91842651 -85.26978302]
[408.99526978 -70.25399017]
[407.39038086 -55.32400513]
[404.12393188 -40.66759872]
[399.23696899 -26.46908951]
[392.79098511 -12.90703297]
[384.86703491 -0.15199000]
[375.56478882 11.63563156]
[365.00119019 22.30759048]
[353.30914307 31.72967529]
[340.63565063 39.78339386]
[327.14007568 46.36745834]
[312.99218750 51.39907455]
[298.36987305 54.81495667]
[283.45706177 56.57215500]
[268.44125366 56.64856339]
[253.51133728 55.04322052]
[238.85502625 51.77632141]
[224.65666199 46.88894653]
[211.09478760 40.44256210]
[198.33999634 32.51823807]
[186.55264282 23.21562767]
[183.09852600 37.70418549]
[167.89144897 42.06940460]
[157.33943176 52.73031235]
[146.78741455 63.39122391]
[136.23539734 74.05213165]
[125.68338776 84.71304321]
[115.13137054 95.37394714]
[109.42670441 109.24682617]
[109.42670441 124.24682617]
[109.42670441 139.24682617]
[109.42670441 154.24682617]
[109.42670441 169.24682617]
[109.42670441 184.24682617]
[109.42670441 199.24682617]
[109.42670441 214.24682617]
[109.42670441 229.24682617]
[109.42670441 244.24682617]
[109.42670441 259.24682617]
[124.03672028 262.98825073]
[137.25688171 270.24624634]
[148.25614929 280.56451416]
[156.34312439 293.29446411]
[161.00942993 307.63589478]
[161.96174622 322.68725586]
[159.14019775 337.50247192]
[152.72218323 351.15014648]
[143.11111450 362.77246094]
[130.91114807 371.63879395]
[116.88920593 377.19180298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[30 48]
[31 47]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[68 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
