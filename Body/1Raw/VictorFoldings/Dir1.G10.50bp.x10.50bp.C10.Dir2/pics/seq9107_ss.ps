%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAACAACCGGGGGGGGGGGAAACCAAAUAAUUCAAGCACUGCUUAUUACAAUUUUACUGGGUCUCUAUxxxxxxxxxxUUCUCACCCUAACAGGUCAACCUCGCUUCCCCACCCUUACUAACAUUAACCCCCCCCCCCGAAAAUAACC\
) } def
/len { sequence length } bind def

/coor [
[109.93579102 439.27359009]
[96.08985138 433.25756836]
[84.38118744 423.72814941]
[75.67866516 411.39248657]
[70.62805939 397.16595459]
[69.60417175 382.10427856]
[72.68296814 367.32513428]
[79.63599396 353.92520142]
[89.94727325 342.89886475]
[102.85165405 335.06436157]
[117.39154053 331.00305176]
[117.39154053 316.00305176]
[117.39154053 301.00305176]
[117.39154053 286.00305176]
[117.39154053 271.00305176]
[117.39154053 256.00305176]
[117.39154053 241.00303650]
[117.39154053 226.00303650]
[117.39154053 211.00303650]
[117.39154053 196.00303650]
[117.39154053 181.00303650]
[117.07949066 166.00628662]
[116.45551300 151.01927185]
[111.55396271 136.84271240]
[102.78775024 124.67087555]
[94.02154541 112.49903870]
[81.24418640 104.64160919]
[66.42642975 102.31050873]
[51.60867310 99.97940063]
[36.79091263 97.64830017]
[21.90763283 95.78068542]
[6.97332621 94.37837982]
[-7.96098137 92.97607422]
[-14.21722221 95.41881561]
[-19.89740181 94.43552399]
[-23.48291397 91.19213104]
[-38.34596252 89.16979218]
[-53.20900726 87.14746094]
[-68.07205200 85.12512207]
[-84.58175659 88.98078918]
[-92.85707855 74.18365479]
[-80.92905426 62.13547516]
[-66.04972076 70.26207733]
[-51.18667603 72.28440857]
[-36.32362747 74.30674744]
[-21.46058083 76.32907867]
[-6.55867815 78.04177094]
[8.37562943 79.44407654]
[23.30993652 80.84637451]
[26.27904510 78.83345032]
[30.38936615 78.19551849]
[34.96647263 79.46141052]
[39.12201691 82.83054352]
[53.93977737 85.16164398]
[68.75753021 87.49274445]
[83.57529449 89.82385254]
[89.22479248 84.89099121]
[79.35924530 73.59183502]
[90.65855408 63.72645950]
[100.52379608 75.02526855]
[106.17330170 70.09240723]
[105.86124420 55.09565353]
[105.54918671 40.09889984]
[105.23712921 25.10214424]
[90.61589813 21.34419441]
[77.55132294 13.77984047]
[67.01288605 2.97040844]
[59.78260040 -10.28197002]
[56.39700317 -24.99388123]
[57.10733414 -40.07360458]
[61.86087799 -54.40211868]
[70.30489349 -66.91616058]
[81.81277466 -76.68710327]
[95.53055573 -82.98987579]
[110.44029999 -85.35676575]
[125.43559265 -83.61214447]
[139.40368652 -77.88546753]
[151.30807495 -68.60169220]
[160.26533508 -56.44974518]
[165.61080933 -42.33137131]
[166.94781494 -27.29425049]
[164.17715454 -12.45423889]
[157.50439453 1.08743823]
[147.42474365 12.32589722]
[134.68614197 20.42716980]
[120.23388672 24.79008865]
[120.54594421 39.78684235]
[120.85800171 54.78359604]
[121.17005157 69.78034973]
[124.24523926 79.18769836]
[124.21302032 88.03377533]
[121.58569336 95.42966461]
[117.10504150 100.71377563]
[111.66002655 103.50565338]
[106.19338226 103.73282623]
[114.95958710 115.90466309]
[123.72579956 128.07650757]
[122.70692444 113.11114502]
[124.76289368 98.25271606]
[129.80720520 84.12632751]
[137.62763977 71.32629395]
[147.89518738 60.39113998]
[160.17785645 51.78092194]
[173.95892334 45.85788345]
[188.65856934 42.87121201]
[203.65838623 42.94656754]
[218.32728577 46.08078003]
[232.04814148 52.14198303]
[244.24368286 60.87517548]
[254.40084839 71.91293335]
[262.09228516 84.79089355]
[266.99441528 98.96725464]
[268.90097046 113.84559631]
[267.73181152 128.79995728]
[263.53604126 143.20118713]
[256.49023438 156.44342041]
[246.89080811 167.96952820]
[235.14161682 177.29457092]
[221.73698425 184.02626038]
[207.24082947 187.88136292]
[192.26306152 188.69769287]
[177.43380737 186.44090271]
[163.37695312 181.20596313]
[150.68388367 173.21307373]
[139.88862610 162.79855347]
[131.44252014 150.39529419]
[132.06649780 165.38230896]
[135.33041382 171.25209045]
[135.12191772 177.01298523]
[132.39154053 181.00303650]
[132.39154053 196.00303650]
[132.39154053 211.00303650]
[132.39154053 226.00303650]
[132.39154053 241.00303650]
[132.39154053 256.00305176]
[132.39154053 271.00305176]
[132.39154053 286.00305176]
[132.39154053 301.00305176]
[132.39154053 316.00305176]
[132.39154053 331.00305176]
[146.93142700 335.06436157]
[159.83581543 342.89886475]
[170.14709473 353.92520142]
[177.10011292 367.32513428]
[180.17890930 382.10427856]
[179.15502930 397.16595459]
[174.10443115 411.39248657]
[165.40190125 423.72814941]
[153.69323730 433.25756836]
[139.84730530 439.27359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 127]
[23 126]
[24 97]
[25 96]
[26 95]
[27 56]
[28 55]
[29 54]
[30 53]
[31 49]
[32 48]
[33 47]
[36 46]
[37 45]
[38 44]
[39 43]
[61 89]
[62 88]
[63 87]
[64 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
