%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUAGGCUGGGGGGGGGGUUCGCUCUAAGAUUAAAAAUGCCCUAGCCCACUUCUUACCACAAGGCACAxxxxxxxxxxUCUACGGCUCAACAUUUUUUGUAGCCACAGGCUUCCACGGACUUCACGUCCCCCCCCCCCAUUAUUGGCU\
) } def
/len { sequence length } bind def

/coor [
[80.19188690 487.93502808]
[66.97168732 480.66256714]
[56.08488083 470.21554565]
[48.27375412 457.30630493]
[44.07086945 442.81500244]
[43.76279831 427.72964478]
[47.37054062 413.07882690]
[54.64811325 399.86145020]
[65.09931946 388.97866821]
[78.01158142 381.17251587]
[92.50451660 376.97525024]
[92.19245911 361.97848511]
[91.88040924 346.98171997]
[91.56835175 331.98498535]
[91.25629425 316.98822021]
[90.94423676 301.99145508]
[90.63217926 286.99472046]
[90.32012177 271.99795532]
[90.00807190 257.00122070]
[89.69601440 242.00445557]
[81.16598511 233.37045288]
[80.82073212 220.83650208]
[89.39402008 211.14358521]
[89.39402008 196.14358521]
[79.71183777 189.96736145]
[74.18229675 179.76481628]
[74.29541779 168.04045105]
[80.13941956 157.73721313]
[90.34941101 151.49790955]
[90.97338867 136.51087952]
[91.59736633 121.52387238]
[78.88742065 112.43434906]
[74.33410645 96.53773499]
[80.99217224 80.41178131]
[97.02108765 71.46420288]
[91.82567596 57.39268494]
[86.63025665 43.32116699]
[81.43484497 29.24964714]
[76.23942566 15.17812729]
[71.04401398 1.10660756]
[65.84859467 -12.96491146]
[52.30555344 -15.71902275]
[41.98480988 -24.74649811]
[37.52392578 -37.59760666]
[39.99204254 -50.86485672]
[48.63591003 -61.08637619]
[43.73435974 -75.26293945]
[38.83280945 -89.43949127]
[33.93125534 -103.61605072]
[19.10727310 -101.10620117]
[4.07236004 -101.07068634]
[-10.76331711 -103.51046753]
[-24.99503136 -108.35898590]
[-38.23453140 -115.48397827]
[-50.12063217 -124.69107056]
[-60.32907486 -135.72908020]
[-68.58135986 -148.29687500]
[-74.65236664 -162.05160522]
[-78.37647247 -176.61804199]
[-79.65207672 -191.59878540]
[-78.44438171 -206.58515930]
[-74.78633118 -221.16831970]
[-68.77772522 -234.95042419]
[-60.58248138 -247.55549622]
[-50.42417145 -258.63964844]
[-38.57991791 -267.90051270]
[-25.37284660 -275.08544922]
[-11.16325283 -279.99841309]
[3.66121483 -282.50540161]
[18.69613457 -282.53802490]
[33.53134155 -280.09539795]
[47.76211929 -275.24411011]
[61.00024796 -268.11657715]
[72.88457489 -258.90719604]
[83.09088898 -247.86723328]
[91.34075928 -235.29783630]
[97.40911102 -221.54193115]
[101.13040924 -206.97479248]
[102.40312958 -191.99380493]
[101.19254303 -177.00765991]
[97.53168488 -162.42520142]
[91.52042389 -148.64425659]
[83.32275391 -136.04075623]
[73.16230774 -124.95856476]
[61.31627274 -115.69998169]
[48.10781479 -108.51760101]
[53.00936508 -94.34104156]
[57.91091537 -80.16448975]
[62.81246948 -65.98793030]
[78.63706207 -61.73499298]
[88.92985535 -48.77256775]
[89.49748230 -32.06450653]
[79.92011261 -18.16032791]
[85.11553192 -4.08880806]
[90.31094360 9.98271179]
[95.50636292 24.05423164]
[100.70177460 38.12575150]
[105.89719391 52.19726944]
[111.09260559 66.26879120]
[124.03066254 73.85869598]
[138.84841919 71.52759552]
[153.66618347 69.19648743]
[168.40399170 66.40416718]
[183.04748535 63.15333939]
[197.69099426 59.90251160]
[212.33448792 56.65168762]
[226.48680115 47.31636429]
[239.37506104 58.33132935]
[232.35838318 73.76514435]
[215.58531189 71.29518890]
[200.94181824 74.54601288]
[186.29830933 77.79683685]
[171.65481567 81.04766846]
[169.44715881 83.87499237]
[165.73124695 85.74413300]
[160.98655701 85.94473267]
[155.99728394 84.01424408]
[141.17951965 86.34535217]
[126.36177063 88.67645264]
[126.50006104 104.18959045]
[118.78204346 116.45030212]
[106.58438110 122.14785004]
[105.96040344 137.13485718]
[105.33642578 152.12188721]
[118.68063354 165.49839783]
[118.08792877 184.06575012]
[104.39402008 196.14358521]
[104.39402008 211.14358521]
[113.97674561 226.83279419]
[104.69276428 241.69239807]
[105.00482178 256.68914795]
[105.31687927 271.68591309]
[105.62893677 286.68264771]
[105.94099426 301.67941284]
[106.25304413 316.67617798]
[106.56510162 331.67291260]
[106.87715912 346.66967773]
[107.18921661 361.66641235]
[107.50127411 376.66317749]
[122.15626526 380.25393677]
[135.38208008 387.51620483]
[146.27694702 397.95480347]
[154.09803772 410.85800171]
[158.31210327 425.34606934]
[158.63183594 440.43118286]
[155.03540039 455.08477783]
[147.76803589 468.30776978]
[137.32524109 479.19860840]
[124.41900635 487.01473999]
[109.92932129 491.22320557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[23 128]
[24 127]
[29 124]
[30 123]
[31 122]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[40 94]
[41 93]
[46 89]
[47 88]
[48 87]
[49 86]
[100 119]
[101 118]
[102 117]
[103 113]
[104 112]
[105 111]
[106 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
