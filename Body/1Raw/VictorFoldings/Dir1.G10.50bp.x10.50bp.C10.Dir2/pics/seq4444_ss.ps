%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUCUCCAGGGGGGGGGGGCAUUCCCCCUCAAACCUAAGAAAUAUGUCUGAUAAAAGAGUUACUUUGAxxxxxxxxxxAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUACCCCCCCCCCACAAGCUCCA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 364.81317139]
[71.19830322 358.79714966]
[59.48964310 349.26773071]
[50.78712082 336.93206787]
[45.73651886 322.70553589]
[44.71262741 307.64385986]
[47.79142761 292.86468506]
[54.74444962 279.46475220]
[65.05573273 268.43844604]
[77.96011353 260.60391235]
[92.50000000 256.54260254]
[92.50000000 241.54261780]
[92.50000000 226.54261780]
[92.50000000 211.54261780]
[92.50000000 196.54261780]
[92.50000000 181.54261780]
[92.50000000 166.54261780]
[92.50000000 151.54261780]
[92.50000000 136.54261780]
[92.50000000 121.54261017]
[79.22592926 109.42189026]
[78.85197449 91.45043945]
[91.61035156 78.78802490]
[90.98637390 63.80101013]
[90.36239624 48.81399155]
[77.60707092 40.17641449]
[72.44396210 25.85175705]
[76.65593719 11.40449905]
[88.42649841 2.31648755]
[87.80252075 -12.67052841]
[87.17854309 -27.65754509]
[86.55456543 -42.64456177]
[85.93058777 -57.63157654]
[70.93177032 -58.12930298]
[56.01208878 -59.74650574]
[41.25498199 -62.47414017]
[26.74297714 -66.29695129]
[12.55723095 -71.19357300]
[-1.22292137 -77.13660431]
[-14.52041531 -84.09281158]
[-27.26088524 -92.02330017]
[-39.37308121 -100.88371277]
[-50.78926468 -110.62450409]
[-61.44559097 -121.19119263]
[-71.28246307 -132.52468872]
[-80.24488068 -144.56159973]
[-88.28269958 -157.23463440]
[-95.35099030 -170.47288513]
[-101.41020966 -184.20234680]
[-106.42648315 -198.34622192]
[-110.37174225 -212.82542419]
[-113.22393799 -227.55895996]
[-114.96710968 -242.46444702]
[-115.59151459 -257.45852661]
[-115.09365845 -272.45733643]
[-113.47631836 -287.37701416]
[-110.74855804 -302.13409424]
[-106.92561340 -316.64605713]
[-102.02886963 -330.83175659]
[-96.08571625 -344.61184692]
[-89.12939453 -357.90930176]
[-81.19879150 -370.64968872]
[-72.33827209 -382.76181030]
[-62.59738159 -394.17791748]
[-52.03059769 -404.83413696]
[-40.69701767 -414.67092896]
[-28.66001892 -423.63320923]
[-15.98692322 -431.67092896]
[-2.74860120 -438.73910522]
[10.98091125 -444.79821777]
[25.12483215 -449.81436157]
[39.60406494 -453.75949097]
[54.33762741 -456.61154175]
[69.24313354 -458.35458374]
[84.23721313 -458.97885132]
[99.23602295 -458.48086548]
[114.15567017 -456.86340332]
[128.91273499 -454.13549805]
[143.42466736 -450.31243896]
[157.61033630 -445.41558838]
[171.39038086 -439.47229004]
[184.68774414 -432.51586914]
[197.42808533 -424.58514404]
[209.54011536 -415.72451782]
[220.95613098 -405.98352051]
[231.61227417 -395.41665649]
[241.44894409 -384.08297729]
[250.41114807 -372.04589844]
[258.44873047 -359.37274170]
[265.51678467 -346.13433838]
[271.57577515 -332.40478516]
[276.59179688 -318.26083374]
[280.53680420 -303.78155518]
[283.38873291 -289.04797363]
[285.13165283 -274.14245605]
[285.75579834 -259.14834595]
[285.25765991 -244.14955139]
[283.64007568 -229.22991943]
[280.91204834 -214.47288513]
[277.08883667 -199.96098328]
[272.19186401 -185.77536011]
[266.24847412 -171.99536133]
[259.29190063 -158.69805908]
[251.36106873 -145.95779419]
[242.50033569 -133.84584045]
[232.75924683 -122.42990875]
[222.19227600 -111.77386475]
[210.85852051 -101.93728638]
[198.82136536 -92.97519684]
[186.14813232 -84.93770599]
[172.90968323 -77.86976624]
[159.18005371 -71.81091309]
[145.03605652 -66.79501343]
[130.55674744 -62.85013580]
[115.82313538 -59.99833298]
[100.91760254 -58.25555420]
[101.54158020 -43.26853943]
[102.16555786 -28.28152275]
[102.78953552 -13.29450607]
[103.41351318 1.69251013]
[115.89877319 9.77064133]
[121.29709625 23.81777954]
[117.34259796 38.52204132]
[105.34941101 48.19001389]
[105.97338867 63.17703247]
[106.59736633 78.16404724]
[116.30049133 84.04293060]
[121.97146606 93.86901855]
[122.20748138 105.21169281]
[116.95017242 115.26518250]
[107.50000000 121.54261017]
[107.50000000 136.54261780]
[107.50000000 151.54261780]
[107.50000000 166.54261780]
[107.50000000 181.54261780]
[107.50000000 196.54261780]
[107.50000000 211.54261780]
[107.50000000 226.54261780]
[107.50000000 241.54261780]
[107.50000000 256.54260254]
[122.03988647 260.60391235]
[134.94427490 268.43844604]
[145.25555420 279.46475220]
[152.20857239 292.86468506]
[155.28736877 307.64385986]
[154.26348877 322.70553589]
[149.21287537 336.93206787]
[140.51036072 349.26773071]
[128.80169678 358.79714966]
[114.95575714 364.81317139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 126]
[24 125]
[25 124]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
