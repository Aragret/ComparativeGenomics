%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACCCUCCUGGGGGGGGGGACAAGCCUCAGAGUACUUCGAGUCUCCCUUCACCAUUUCCGACGGCAUCUxxxxxxxxxxAGGCCUAUAUUACGGAUCAUUUCUCUACUCAGAAACCUGAAACAUCGGCACCCCCCCCCCUUAUCCUCCU\
) } def
/len { sequence length } bind def

/coor [
[86.54476929 505.80969238]
[72.69882965 499.79367065]
[60.99016953 490.26425171]
[52.28764343 477.92855835]
[47.23704147 463.70205688]
[46.21315002 448.64038086]
[49.29195023 433.86120605]
[56.24497223 420.46127319]
[66.55625916 409.43493652]
[79.46063995 401.60043335]
[94.00052643 397.53912354]
[94.00052643 382.53912354]
[94.00052643 367.53912354]
[94.00052643 352.53912354]
[94.00052643 337.53912354]
[94.00052643 322.53912354]
[94.00052643 307.53912354]
[94.00052643 292.53912354]
[94.00052643 277.53912354]
[94.00052643 262.53912354]
[86.69652557 257.29571533]
[82.59592438 249.13903809]
[82.74882507 239.87266541]
[87.24844360 231.61288452]
[95.18071747 226.30545044]
[96.11634064 211.33465576]
[97.05197144 196.36386108]
[97.05197144 181.36386108]
[96.11634064 166.39306641]
[95.18071747 151.42227173]
[94.24508667 136.45149231]
[90.66574097 129.92968750]
[93.44902039 121.16011810]
[92.82504272 106.17310333]
[89.82456970 101.78563690]
[89.53304291 96.02371216]
[92.50000000 90.55237579]
[92.50000000 75.55237579]
[92.50000000 60.55237579]
[92.34396362 45.55318451]
[92.03190613 30.55643272]
[91.71984863 15.55967808]
[91.40779114 0.56292456]
[78.43981171 -1.99368465]
[66.24254608 -7.07127380]
[55.30051804 -14.46570683]
[46.04790497 -23.88086510]
[38.85129929 -34.94050217]
[33.99520874 -47.20327377]
[31.67078972 -60.18037033]
[31.96832466 -73.35497284]
[34.87372589 -86.20285797]
[40.26918793 -98.21324158]
[47.93794250 -108.90910339]
[57.57299805 -117.86611176]
[68.78939056 -124.72947693]
[81.13961029 -129.22799683]
[94.13140106 -131.18475342]
[95.06703186 -146.15553284]
[96.00266266 -161.12632751]
[96.93828583 -176.09712219]
[97.25034332 -191.09387207]
[87.34329987 -206.58033752]
[96.31613922 -221.62985229]
[95.69216156 -236.61686707]
[95.06818390 -251.60388184]
[80.61315155 -256.16766357]
[68.59265900 -265.40255737]
[60.45823669 -278.19345093]
[57.19215393 -292.99575806]
[59.18880463 -308.02206421]
[66.20708466 -321.45782471]
[77.39950562 -331.68060303]
[91.41452026 -337.45599365]
[106.55976105 -338.08654785]
[121.00635529 -333.49615479]
[133.00981140 -324.23910522]
[141.12065125 -311.43325806]
[144.35945129 -296.62493896]
[142.33511353 -281.60235596]
[135.29208374 -268.17956543]
[124.08083344 -257.97741699]
[110.05519867 -252.22785950]
[110.67917633 -237.24084473]
[111.30315399 -222.25382996]
[120.01094818 -213.79914856]
[120.61688232 -201.27510071]
[112.24710083 -191.40592957]
[114.24393463 -189.35166931]
[115.51988220 -186.35734558]
[115.70302582 -182.70381165]
[114.53385925 -178.80456543]
[111.90908051 -175.16149902]
[110.97344971 -160.19070435]
[110.03782654 -145.21990967]
[109.10219574 -130.24911499]
[125.23610687 -125.20582581]
[139.56352234 -116.21699524]
[151.13809204 -103.87036133]
[159.19378662 -88.97566986]
[163.19560242 -72.51152039]
[162.87504578 -55.56110382]
[158.24816895 -39.24092102]
[149.61485291 -24.62725449]
[137.53935242 -12.68517685]
[122.81346893 -4.20482826]
[106.40454865 0.25086835]
[106.71660614 15.24762249]
[107.02866364 30.24437523]
[107.34071350 45.24113083]
[110.64566803 51.90618134]
[107.50000000 60.55237579]
[107.50000000 75.55237579]
[107.50000000 90.55237579]
[107.81205750 105.54912567]
[108.43603516 120.53614044]
[109.21588135 135.51585388]
[110.15150452 150.48664856]
[111.08713531 165.45744324]
[112.02276611 180.42823792]
[123.02937317 170.23731995]
[138.02444458 170.62170410]
[148.49447632 181.36314392]
[148.49505615 196.36314392]
[138.02586365 207.10539246]
[123.03081512 207.49093628]
[112.02276611 197.29948425]
[111.08713531 212.27027893]
[110.15150452 227.24107361]
[120.90932465 245.72534180]
[109.00052643 262.53912354]
[109.00052643 277.53912354]
[109.00052643 292.53912354]
[109.00052643 307.53912354]
[109.00052643 322.53912354]
[109.00052643 337.53912354]
[109.00052643 352.53912354]
[109.00052643 367.53912354]
[109.00052643 382.53912354]
[109.00052643 397.53912354]
[123.54041290 401.60043335]
[136.44479370 409.43493652]
[146.75607300 420.46127319]
[153.70909119 433.86120605]
[156.78790283 448.64038086]
[155.76400757 463.70205688]
[150.71340942 477.92855835]
[142.01087952 490.26425171]
[130.30221558 499.79367065]
[116.45627594 505.80969238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[25 129]
[26 128]
[27 127]
[28 120]
[29 119]
[30 118]
[31 117]
[33 116]
[34 115]
[37 114]
[38 113]
[39 112]
[40 110]
[41 109]
[42 108]
[43 107]
[58 96]
[59 95]
[60 94]
[61 93]
[62 88]
[64 85]
[65 84]
[66 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
