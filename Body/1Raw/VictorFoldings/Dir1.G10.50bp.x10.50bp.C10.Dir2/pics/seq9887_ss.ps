%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCCCCUCCGGGGGGGGGGUAAUACUAACUACCUGACUCCUACCCCUCACAAUCAUGGCAAGCCAACGCxxxxxxxxxxCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUACCCCCCCCCCAACACCCCUCC\
) } def
/len { sequence length } bind def

/coor [
[85.15901947 157.80845642]
[71.25035095 152.30229187]
[59.14772797 143.51051331]
[49.61143875 131.98539734]
[43.24055481 118.45097351]
[40.43529129 103.75745392]
[41.37187576 88.82789612]
[45.99147034 74.60016632]
[54.00387573 61.96804810]
[64.90574646 51.72509384]
[78.01223755 44.51476669]
[92.50000000 40.79000854]
[92.50000000 25.79001045]
[92.50000000 10.79001045]
[92.50000000 -4.20998955]
[92.50000000 -19.20998955]
[92.50000000 -34.20999146]
[92.50000000 -49.20999146]
[92.50000000 -64.20999146]
[92.50000000 -79.20999146]
[92.50000000 -94.20999146]
[92.50000000 -109.20999146]
[92.50000000 -124.20999146]
[92.50000000 -139.20999146]
[77.52191162 -140.09873962]
[62.62277985 -141.87322998]
[47.85493851 -144.52725220]
[33.27025986 -148.05145264]
[18.91997147 -152.43348694]
[4.85448170 -157.65794373]
[-8.87680435 -163.70648193]
[-22.22565460 -170.55784607]
[-35.14517975 -178.18797302]
[-47.59000015 -186.57005310]
[-59.51640320 -195.67466736]
[-70.88249207 -205.46981812]
[-81.64835358 -215.92109680]
[-91.77616119 -226.99180603]
[-101.23033905 -238.64303589]
[-109.97769165 -250.83389282]
[-117.98748016 -263.52154541]
[-125.23158264 -276.66140747]
[-131.68453979 -290.20733643]
[-137.32369995 -304.11175537]
[-142.12924194 -318.32580566]
[-146.08428955 -332.79959106]
[-149.17495728 -347.48226929]
[-151.39038086 -362.32223511]
[-152.72277832 -377.26739502]
[-153.16748047 -392.26522827]
[-152.72291565 -407.26309204]
[-151.39064026 -422.20825195]
[-149.17533875 -437.04824829]
[-146.08480835 -451.73095703]
[-142.12988281 -466.20477295]
[-137.32446289 -480.41888428]
[-131.68544006 -494.32333374]
[-125.23259735 -507.86932373]
[-117.98860931 -521.00927734]
[-109.97892761 -533.69696045]
[-101.23168945 -545.88787842]
[-91.77760315 -557.53924561]
[-81.64989471 -568.60998535]
[-70.88413239 -579.06140137]
[-59.51812363 -588.85662842]
[-47.59180069 -597.96136475]
[-35.14705276 -606.34356689]
[-22.22759438 -613.97375488]
[-8.87880516 -620.82525635]
[4.85242748 -626.87390137]
[18.91787148 -632.09851074]
[33.26811981 -636.48065186]
[47.85276794 -640.00500488]
[62.62059021 -642.65911865]
[77.51970673 -644.43377686]
[92.49778748 -645.32263184]
[107.50221252 -645.32263184]
[122.48029327 -644.43377686]
[137.37940979 -642.65911865]
[152.14723206 -640.00500488]
[166.73187256 -636.48065186]
[181.08212280 -632.09851074]
[195.14756775 -626.87390137]
[208.87879944 -620.82525635]
[222.22760010 -613.97375488]
[235.14704895 -606.34356689]
[247.59179688 -597.96136475]
[259.51812744 -588.85662842]
[270.88412476 -579.06140137]
[281.64990234 -568.60998535]
[291.77761841 -557.53924561]
[301.23168945 -545.88787842]
[309.97894287 -533.69696045]
[317.98861694 -521.00927734]
[325.23260498 -507.86932373]
[331.68542480 -494.32333374]
[337.32446289 -480.41888428]
[342.12988281 -466.20477295]
[346.08480835 -451.73095703]
[349.17535400 -437.04824829]
[351.39062500 -422.20825195]
[352.72290039 -407.26309204]
[353.16748047 -392.26522827]
[352.72277832 -377.26739502]
[351.39038086 -362.32223511]
[349.17495728 -347.48226929]
[346.08428955 -332.79959106]
[342.12924194 -318.32580566]
[337.32369995 -304.11175537]
[331.68453979 -290.20733643]
[325.23156738 -276.66140747]
[317.98748779 -263.52154541]
[309.97769165 -250.83389282]
[301.23034668 -238.64303589]
[291.77615356 -226.99180603]
[281.64834595 -215.92109680]
[270.88250732 -205.46981812]
[259.51638794 -195.67466736]
[247.58999634 -186.57005310]
[235.14517212 -178.18797302]
[222.22564697 -170.55784607]
[208.87680054 -163.70648193]
[195.14552307 -157.65794373]
[181.08003235 -152.43348694]
[166.72973633 -148.05145264]
[152.14506531 -144.52725220]
[137.37721252 -141.87322998]
[122.47808838 -140.09873962]
[107.50000000 -139.20999146]
[107.50000000 -124.20999146]
[107.50000000 -109.20999146]
[107.50000000 -94.20999146]
[107.50000000 -79.20999146]
[107.50000000 -64.20999146]
[107.50000000 -49.20999146]
[107.50000000 -34.20999146]
[107.50000000 -19.20998955]
[107.50000000 -4.20998955]
[107.50000000 10.79001045]
[107.50000000 25.79001045]
[107.50000000 40.79000854]
[121.98776245 44.51476669]
[135.09425354 51.72509384]
[145.99612427 61.96804810]
[154.00852966 74.60016632]
[158.62812805 88.82789612]
[159.56471252 103.75745392]
[156.75944519 118.45097351]
[150.38856506 131.98539734]
[140.85227966 143.51051331]
[128.74964905 152.30229187]
[114.84098053 157.80845642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
