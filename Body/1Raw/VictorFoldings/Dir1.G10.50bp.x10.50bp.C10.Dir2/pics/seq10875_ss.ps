%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCCCUGACGGGGGGGGGGUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCAxxxxxxxxxxAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCCCCCCCCCCCACCCCUCAC\
) } def
/len { sequence length } bind def

/coor [
[273.61380005 174.96591187]
[263.33508301 164.03559875]
[253.69714355 152.53631592]
[244.73139954 140.50556946]
[236.46711731 127.98260498]
[228.93121338 115.00825500]
[222.14830017 101.62484741]
[216.14050293 87.87603760]
[210.92739868 73.80667877]
[196.58734131 78.20697784]
[182.24726868 82.60727692]
[172.34971619 93.73775482]
[156.88693237 90.38919067]
[142.54687500 94.78948975]
[128.20680237 99.18979645]
[113.86674500 103.59009552]
[104.20198059 113.69374847]
[90.53355408 110.74996948]
[76.19349670 115.15026855]
[61.85343170 119.55056763]
[47.51337051 123.95086670]
[40.17298889 129.49295044]
[32.83353424 128.29104614]
[18.40615082 132.39598083]
[11.43083191 143.29316711]
[-0.71687782 146.39227295]
[-11.35534191 140.55401611]
[-25.86396790 144.36187744]
[-32.38132858 158.57658386]
[-46.53302765 165.22966003]
[-61.63706589 161.17971802]
[-70.56178284 148.33901978]
[-69.09319305 132.77055359]
[-57.92472076 121.82527161]
[-42.32978058 120.67119598]
[-29.67182541 129.85325623]
[-15.16320038 126.04539490]
[-3.41318560 113.04609680]
[14.30120468 117.96859741]
[28.72859001 113.86365509]
[43.11307144 109.61080933]
[57.45313263 105.21051025]
[71.79319000 100.81020355]
[86.13325500 96.40990448]
[95.79801941 86.30625153]
[109.46644592 89.25003052]
[123.80650330 84.84973145]
[138.14656067 80.44943237]
[152.48663330 76.04913330]
[163.40988159 64.60391235]
[177.84696960 68.26721954]
[192.18704224 63.86691666]
[206.52709961 59.46661377]
[202.95153809 44.89476395]
[200.21369934 30.14255714]
[198.32252502 15.25810623]
[197.28416443 0.28996548]
[197.10200500 -14.71304226]
[197.77665710 -29.70198059]
[199.30590820 -44.62796021]
[201.68478394 -59.44229126]
[204.90550232 -74.09665680]
[208.95758057 -88.54325104]
[213.82777405 -102.73495483]
[219.50022888 -116.62548065]
[225.95642090 -130.16952515]
[233.17530823 -143.32289124]
[241.13333130 -156.04269409]
[249.80453491 -168.28742981]
[259.16064453 -180.01718140]
[269.17111206 -191.19364929]
[279.80331421 -201.78042603]
[291.02258301 -211.74293518]
[302.79226685 -221.04872131]
[315.07403564 -229.66738892]
[327.82781982 -237.57086182]
[341.01199341 -244.73333740]
[354.58355713 -251.13146973]
[368.49826050 -256.74438477]
[382.71069336 -261.55374146]
[397.17449951 -265.54391479]
[411.84252930 -268.70184326]
[426.66690063 -271.01724243]
[441.59930420 -272.48254395]
[456.59100342 -273.09298706]
[471.59307861 -272.84658813]
[486.55664062 -271.74411011]
[501.43286133 -269.78921509]
[516.17321777 -266.98822021]
[530.72961426 -263.35028076]
[545.05456543 -258.88726807]
[559.10137939 -253.61372375]
[572.82427979 -247.54687500]
[586.17840576 -240.70648193]
[599.12023926 -233.11488342]
[611.60754395 -224.79684448]
[623.59960938 -215.77946472]
[635.05737305 -206.09217834]
[645.94342041 -195.76658630]
[656.22216797 -184.83634949]
[665.86022949 -173.33714294]
[674.82604980 -161.30647278]
[683.09045410 -148.78355408]
[690.62646484 -135.80926514]
[697.40948486 -122.42591858]
[703.41735840 -108.67715454]
[708.63061523 -94.60783386]
[713.03210449 -80.26383972]
[716.60754395 -65.69196320]
[719.34527588 -50.93973160]
[721.23632812 -36.05526733]
[722.27459717 -21.08711815]
[722.45660400 -6.08410788]
[721.78186035 8.90482521]
[720.25250244 23.83079147]
[717.87347412 38.64510345]
[714.65264893 53.29944229]
[710.60046387 67.74600983]
[705.73016357 81.93767548]
[700.05761719 95.82815552]
[693.60125732 109.37214661]
[686.38232422 122.52545929]
[678.42419434 135.24519348]
[669.75286865 147.48986816]
[660.39666748 159.21954346]
[650.38610840 170.39593506]
[639.75384521 180.98262024]
[628.53448486 190.94505310]
[616.76470947 200.25073242]
[604.48291016 208.86932373]
[591.72906494 216.77268982]
[578.54486084 223.93505859]
[564.97320557 230.33308411]
[551.05847168 235.94587708]
[536.84600830 240.75514221]
[522.38214111 244.74519348]
[507.71411133 247.90299988]
[492.88970947 250.21827698]
[477.95730591 251.68347168]
[462.96560669 252.29380798]
[447.96353149 252.04728699]
[432.99996948 250.94470215]
[418.12377930 248.98966980]
[403.38345337 246.18855286]
[388.82708740 242.55050659]
[374.50213623 238.08737183]
[360.45535278 232.81373596]
[346.73254395 226.74678040]
[333.37847900 219.90629578]
[320.43670654 212.31459045]
[307.94943237 203.99644470]
[295.95739746 194.97897339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 53]
[10 52]
[11 51]
[13 49]
[14 48]
[15 47]
[16 46]
[18 44]
[19 43]
[20 42]
[21 41]
[23 40]
[24 39]
[27 37]
[28 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
