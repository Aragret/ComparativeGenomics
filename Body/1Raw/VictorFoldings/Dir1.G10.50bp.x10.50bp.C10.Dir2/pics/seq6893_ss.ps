%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGGAAUAGGGGGGGGGGGACGUAGACACACGAGCAUAUUUCACCUCCGCUACCAUAAUCAUCGCUAUxxxxxxxxxxCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUAUGCCUCCCCCCCCCCAGAAGGAAUA\
) } def
/len { sequence length } bind def

/coor [
[85.32066345 390.99642944]
[70.83097076 386.78796387]
[57.92473984 378.97183228]
[47.48193741 368.08099365]
[40.21457291 354.85800171]
[36.61814880 340.20440674]
[36.93787003 325.11929321]
[41.15193939 310.63122559]
[48.97303772 297.72802734]
[59.86790466 287.28942871]
[73.09371185 280.02716064]
[87.74871063 276.43640137]
[88.06076050 261.43963623]
[88.37281799 246.44288635]
[88.68487549 231.44613647]
[88.99693298 216.44938660]
[89.30899048 201.45263672]
[89.62104797 186.45587158]
[89.93309784 171.45912170]
[90.24515533 156.46237183]
[90.55721283 141.46562195]
[90.86927032 126.46886444]
[78.51770020 117.95777130]
[64.61514282 123.58972931]
[50.71258545 129.22167969]
[44.78238678 143.87120056]
[30.19794083 149.95967102]
[15.61194229 143.87492371]
[9.67800426 129.22692871]
[15.91662693 114.70606995]
[30.62654686 108.92733002]
[45.08062744 115.31912994]
[58.98318481 109.68717194]
[72.88574219 104.05521393]
[81.50041199 86.21643829]
[97.35652161 81.46353149]
[101.36426544 67.00884247]
[105.37200165 52.55415344]
[109.37974548 38.09946442]
[113.38748169 23.64477539]
[99.26166534 18.57836723]
[85.54859161 12.48256207]
[72.32315826 5.39065266]
[59.65760422 -2.65862632]
[47.62109756 -11.62131214]
[36.27938080 -21.44845390]
[25.69440269 -32.08637619]
[15.92397022 -43.47698212]
[7.02144957 -55.55805588]
[-0.96453726 -68.26361847]
[-7.99037266 -81.52426910]
[-14.01768398 -95.26758575]
[-19.01354980 -109.41850281]
[-22.95068741 -123.89973450]
[-25.80759239 -138.63220215]
[-27.56865883 -153.53541565]
[-28.22426987 -168.52798462]
[-27.77084541 -183.52804565]
[-26.21086121 -198.45364380]
[-23.55283737 -213.22328186]
[-19.81129265 -227.75628662]
[-15.00665951 -241.97326660]
[-9.16518116 -255.79660034]
[-2.31876206 -269.15075684]
[5.49520445 -281.96282959]
[14.23404121 -294.16284180]
[23.85001945 -305.68411255]
[34.29061890 -316.46377563]
[45.49881363 -326.44293213]
[57.41339493 -335.56707764]
[69.96928406 -343.78637695]
[83.09790039 -351.05596924]
[96.72754669 -357.33609009]
[110.78377533 -362.59246826]
[125.18981934 -366.79641724]
[139.86698914 -369.92495728]
[154.73513794 -371.96099854]
[169.71304321 -372.89340210]
[184.71891785 -372.71713257]
[199.67079163 -371.43307495]
[214.48699951 -369.04830933]
[229.08663940 -365.57583618]
[243.38993835 -361.03460693]
[257.31878662 -355.44946289]
[270.79714966 -348.85086060]
[283.75137329 -341.27487183]
[296.11068726 -332.76287842]
[307.80761719 -323.36132812]
[318.77828979 -313.12164307]
[328.96276855 -302.09967041]
[338.30541992 -290.35565186]
[346.75524902 -277.95370483]
[354.26605225 -264.96160889]
[360.79687500 -251.45028687]
[366.31198120 -237.49354553]
[370.78128052 -223.16760254]
[374.18038940 -208.55072021]
[376.49069214 -193.72271729]
[377.69961548 -178.76458740]
[377.80050659 -163.75801086]
[376.79287720 -148.78497314]
[374.68215942 -133.92724609]
[371.47994995 -119.26597595]
[367.20370483 -104.88122559]
[361.87677002 -90.85157776]
[355.52822876 -77.25365448]
[348.19281006 -64.16172028]
[339.91055298 -51.64728165]
[330.72665405 -39.77868652]
[320.69134521 -28.62075806]
[309.85937500 -18.23443985]
[298.28991699 -8.67645836]
[286.04617310 0.00098328]
[273.19500732 7.75049210]
[259.80661011 14.52974224]
[245.95411682 20.30170822]
[231.71318054 25.03486443]
[217.16157532 28.70335770]
[202.37876892 31.28715515]
[187.44551086 32.77214432]
[172.44337463 33.15021515]
[157.45426941 32.41929626]
[142.56008911 30.58338928]
[127.84217072 27.65251541]
[123.83443451 42.10720444]
[119.82669067 56.56189346]
[115.81895447 71.01657867]
[111.81121063 85.47126770]
[122.44397736 105.33754730]
[105.86602020 126.78092194]
[105.55397034 141.77767944]
[105.24191284 156.77442932]
[104.92985535 171.77117920]
[104.61779785 186.76792908]
[104.30574036 201.76469421]
[103.99368286 216.76144409]
[103.68163300 231.75819397]
[103.36957550 246.75494385]
[103.05751801 261.75170898]
[102.74546051 276.74844360]
[117.23839569 280.94573975]
[130.15066528 288.75189209]
[140.60186768 299.63464355]
[147.87944031 312.85205078]
[151.48718262 327.50286865]
[151.17910767 342.58819580]
[146.97622681 357.07952881]
[139.16510010 369.98876953]
[128.27828979 380.43576050]
[115.05809784 387.70825195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 34]
[24 33]
[25 32]
[36 128]
[37 127]
[38 126]
[39 125]
[40 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
