%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAACCUCUCCGGGGGGGGGGACCCUUAUCACAACACAAGAACACCUCUGAUUACUCCUGCCAUCAUGACCxxxxxxxxxxACAAAAAACAAUAGCCUCAUCAUCCCCACCAUCAUAGCCACCAUCACCCUCCCCCCCCCCCCUUAACCUCUAC\
) } def
/len { sequence length } bind def

/coor [
[85.11811066 167.61401367]
[70.93198395 162.83450317]
[58.10485077 155.11734009]
[47.23641968 144.82331848]
[38.83480835 132.43370056]
[33.29281235 118.52771759]
[30.86953545 103.75553131]
[31.67826843 88.80776215]
[35.68120193 74.38325500]
[42.69119263 61.15639114]
[52.38050461 49.74555969]
[64.29613495 40.68423843]
[77.88101196 34.39606857]
[92.50000000 31.17503929]
[92.50000000 16.17503929]
[92.50000000 1.17503905]
[92.50000000 -13.82496071]
[92.50000000 -28.82496071]
[92.50000000 -43.82496262]
[92.50000000 -58.82496262]
[92.50000000 -73.82495880]
[92.50000000 -88.82495880]
[92.50000000 -103.82495880]
[92.50000000 -118.82495880]
[77.52034760 -119.68141174]
[62.61402512 -121.39163971]
[47.82964325 -123.95006561]
[33.21543503 -127.34834290]
[18.81906128 -131.57539368]
[4.68748665 -136.61741638]
[-9.13319683 -142.45797729]
[-22.59790993 -149.07801819]
[-35.66273117 -156.45594788]
[-48.28504562 -164.56770325]
[-60.42368698 -173.38682556]
[-72.03905487 -182.88453674]
[-83.09326172 -193.02987671]
[-93.55025482 -203.78974915]
[-103.37592316 -215.12904358]
[-112.53822327 -227.01078796]
[-121.00725555 -239.39620972]
[-128.75541687 -252.24493408]
[-135.75741577 -265.51501465]
[-141.99041748 -279.16320801]
[-147.43408203 -293.14498901]
[-152.07067871 -307.41473389]
[-155.88507080 -321.92587280]
[-158.86480713 -336.63113403]
[-161.00018311 -351.48251343]
[-162.28421021 -366.43161011]
[-162.71273804 -381.42959595]
[-162.28433228 -396.42758179]
[-161.00041199 -411.37667847]
[-158.86515808 -426.22805786]
[-155.88552856 -440.93334961]
[-152.07125854 -455.44454956]
[-147.43478394 -469.71432495]
[-141.99121094 -483.69613647]
[-135.75831604 -497.34436035]
[-128.75642395 -510.61450195]
[-121.00836945 -523.46331787]
[-112.53942871 -535.84881592]
[-103.37722778 -547.73059082]
[-93.55164337 -559.06994629]
[-83.09473419 -569.82989502]
[-72.04060364 -579.97534180]
[-60.42531586 -589.47314453]
[-48.28674698 -598.29235840]
[-35.66449356 -606.40423584]
[-22.59972954 -613.78228760]
[-9.13506889 -620.40240479]
[4.68556929 -626.24310303]
[18.81710434 -631.28521729]
[33.21344376 -635.51239014]
[47.82762909 -638.91076660]
[62.61198807 -641.46929932]
[77.51830292 -643.17962646]
[92.49794006 -644.03619385]
[107.50205994 -644.03619385]
[122.48169708 -643.17962646]
[137.38801575 -641.46929932]
[152.17237854 -638.91076660]
[166.78656006 -635.51239014]
[181.18289185 -631.28521729]
[195.31443787 -626.24310303]
[209.13507080 -620.40240479]
[222.59973145 -613.78228760]
[235.66448975 -606.40423584]
[248.28674316 -598.29235840]
[260.42532349 -589.47314453]
[272.04061890 -579.97534180]
[283.09472656 -569.82989502]
[293.55163574 -559.06994629]
[303.37722778 -547.73059082]
[312.53942871 -535.84881592]
[321.00836182 -523.46331787]
[328.75640869 -510.61450195]
[335.75833130 -497.34436035]
[341.99121094 -483.69613647]
[347.43478394 -469.71432495]
[352.07125854 -455.44454956]
[355.88552856 -440.93334961]
[358.86514282 -426.22805786]
[361.00039673 -411.37667847]
[362.28433228 -396.42758179]
[362.71273804 -381.42959595]
[362.28421021 -366.43161011]
[361.00018311 -351.48251343]
[358.86480713 -336.63113403]
[355.88507080 -321.92587280]
[352.07067871 -307.41473389]
[347.43408203 -293.14498901]
[341.99041748 -279.16320801]
[335.75741577 -265.51501465]
[328.75540161 -252.24493408]
[321.00726318 -239.39620972]
[312.53820801 -227.01078796]
[303.37591553 -215.12904358]
[293.55026245 -203.78974915]
[283.09326172 -193.02987671]
[272.03906250 -182.88453674]
[260.42367554 -173.38682556]
[248.28504944 -164.56770325]
[235.66273499 -156.45594788]
[222.59791565 -149.07801819]
[209.13319397 -142.45797729]
[195.31251526 -136.61741638]
[181.18093872 -131.57539368]
[166.78456116 -127.34834290]
[152.17034912 -123.95006561]
[137.38597107 -121.39163971]
[122.47965240 -119.68141174]
[107.50000000 -118.82495880]
[107.50000000 -103.82495880]
[107.50000000 -88.82495880]
[107.50000000 -73.82495880]
[107.50000000 -58.82496262]
[107.50000000 -43.82496262]
[107.50000000 -28.82496071]
[107.50000000 -13.82496071]
[107.50000000 1.17503905]
[107.50000000 16.17503929]
[107.50000000 31.17503929]
[122.11898804 34.39606857]
[135.70385742 40.68423843]
[147.61949158 49.74555969]
[157.30880737 61.15639114]
[164.31880188 74.38325500]
[168.32173157 88.80776215]
[169.13046265 103.75553131]
[166.70718384 118.52771759]
[161.16519165 132.43370056]
[152.76358032 144.82331848]
[141.89514160 155.11734009]
[129.06802368 162.83450317]
[114.88188934 167.61401367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
