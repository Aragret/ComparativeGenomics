%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUAGCAGUGGGGGGGGGGAAACUAAGAGUAGAGUGCUUAGUUGAACAGGGCCCUGAAGCGCGUACACAxxxxxxxxxxAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAACAACCUCCCCCCCCCCAUUUAGCUGU\
) } def
/len { sequence length } bind def

/coor [
[193.21405029 606.47204590]
[179.36811829 600.45599365]
[167.65945435 590.92657471]
[158.95692444 578.59094238]
[153.90632629 564.36437988]
[152.88243103 549.30273438]
[155.96122742 534.52355957]
[162.91426086 521.12365723]
[173.22554016 510.09732056]
[186.12992859 502.26278687]
[200.66981506 498.20147705]
[200.66981506 483.20147705]
[200.66981506 468.20147705]
[200.66981506 453.20147705]
[200.66981506 438.20147705]
[200.66981506 423.20147705]
[200.66981506 408.20147705]
[200.66981506 393.20147705]
[200.66981506 378.20147705]
[200.66981506 363.20147705]
[200.66981506 348.20147705]
[197.72431946 333.49353027]
[191.94805908 319.65029907]
[178.11769104 314.24136353]
[172.06253052 300.28463745]
[177.82971191 285.81475830]
[172.05343628 271.97155762]
[160.01174927 263.20529175]
[161.83811951 247.48986816]
[156.06184387 233.64665222]
[150.28558350 219.80343628]
[144.50930786 205.96022034]
[138.73303223 192.11700439]
[132.95675659 178.27378845]
[127.18048859 164.43055725]
[120.55198669 150.97459412]
[113.09707642 137.95828247]
[105.64216614 124.94197845]
[98.18725586 111.92566681]
[90.46317291 99.06726837]
[82.47325897 86.37233734]
[74.48334503 73.67740631]
[66.49342346 60.98247910]
[56.98506546 49.38113785]
[46.10624313 39.05393219]
[30.77061844 35.16430283]
[26.86707878 20.79030991]
[15.98825455 10.46310425]
[7.55182981 6.79178429]
[4.99336052 -0.19390728]
[-10.25802517 -4.40173531]
[-13.86168575 -18.85382462]
[-24.52331161 -29.40511513]
[-40.32409668 -29.07229233]
[-51.67429733 -40.06995010]
[-51.84004593 -55.87336731]
[-40.72300339 -67.10666656]
[-24.91871643 -67.10531616]
[-13.80358505 -55.87013245]
[-13.97202206 -40.06674194]
[-3.31039572 -29.51545143]
[11.17839909 -26.06232262]
[15.54465103 -10.85553360]
[26.31545830 -0.41572106]
[37.19428253 9.91148376]
[51.75178146 13.06244469]
[56.43344498 28.17510796]
[67.31227112 38.50231171]
[64.48489380 23.77119064]
[68.21269226 9.24178791]
[77.78305054 -2.30845714]
[91.36650848 -8.67160130]
[106.36645508 -8.63126755]
[119.91550446 -2.19516420]
[129.42361450 9.40638256]
[133.07321167 23.95562363]
[130.16665649 38.67132568]
[121.25955200 50.74044037]
[108.05458069 57.85583496]
[93.07601166 58.65732956]
[79.18835449 52.99256134]
[87.17826843 65.68749237]
[95.16819000 78.38242340]
[103.15810394 91.07735443]
[107.94232178 93.39337921]
[111.05893707 98.24842072]
[111.20356750 104.47075653]
[118.65847778 117.48706818]
[126.11338806 130.50337219]
[133.56829834 143.51968384]
[138.93856812 129.51396179]
[152.55998230 123.23246002]
[166.69891357 128.24151611]
[173.32792664 141.69723511]
[168.68338013 155.96005249]
[155.40223694 162.93222046]
[141.02371216 158.65429688]
[146.79997253 172.49751282]
[152.57624817 186.34072876]
[158.35252380 200.18394470]
[164.12879944 214.02716064]
[169.90507507 227.87037659]
[175.68133545 241.71359253]
[188.13618469 251.47000122]
[185.89665222 266.19528198]
[191.67292786 280.03848267]
[206.01451111 286.11770630]
[211.67526245 300.23898315]
[205.79127502 313.87402344]
[211.56755066 327.71725464]
[213.87362671 312.89556885]
[220.37092590 299.37576294]
[230.50325012 288.31521606]
[243.40321350 280.66073608]
[257.96649170 277.06759644]
[272.94641113 277.84341431]
[287.06060791 282.92172241]
[299.10083008 291.86785889]
[308.03637695 303.91592407]
[313.10229492 318.03457642]
[313.86492920 333.01519775]
[310.25900269 347.57531738]
[302.59317017 360.46853638]
[291.52371216 370.59112549]
[277.99819946 377.07653809]
[263.17449951 379.36959839]
[248.32162476 377.27398682]
[234.71101379 370.96911621]
[223.50784302 360.99472046]
[215.66981506 348.20147705]
[215.66981506 363.20147705]
[215.66981506 378.20147705]
[215.66981506 393.20147705]
[215.66981506 408.20147705]
[215.66981506 423.20147705]
[215.66981506 438.20147705]
[215.66981506 453.20147705]
[215.66981506 468.20147705]
[215.66981506 483.20147705]
[215.66981506 498.20147705]
[230.20970154 502.26278687]
[243.11407471 510.09732056]
[253.42535400 521.12365723]
[260.37838745 534.52355957]
[263.45718384 549.30273438]
[262.43328857 564.36437988]
[257.38269043 578.59094238]
[248.68016052 590.92657471]
[236.97149658 600.45599365]
[223.12556458 606.47204590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 110]
[23 109]
[26 106]
[27 105]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[36 90]
[37 89]
[38 88]
[39 87]
[40 84]
[41 83]
[42 82]
[43 81]
[44 68]
[45 67]
[47 65]
[48 64]
[50 63]
[52 61]
[53 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
