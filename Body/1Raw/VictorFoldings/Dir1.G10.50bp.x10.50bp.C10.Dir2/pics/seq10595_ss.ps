%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACUACUAGGGGGGGGGGUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCxxxxxxxxxxUCAUGAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCCCCCCCCCCCACUACUA\
) } def
/len { sequence length } bind def

/coor [
[79.18245697 153.38011169]
[66.07752228 146.17436218]
[55.28377151 135.82269287]
[47.53659821 123.03036499]
[43.36383057 108.66895294]
[43.04976654 93.71691132]
[46.61579895 79.19294739]
[53.81896973 66.08659363]
[64.16851807 55.29081345]
[76.95932007 47.54112625]
[91.31991577 43.36553574]
[91.00785828 28.36878395]
[90.69580078 13.37202930]
[90.38374329 -1.62472427]
[90.07168579 -16.62147713]
[89.75962830 -31.61823082]
[89.44757843 -46.61498642]
[89.13552094 -61.61174011]
[88.82346344 -76.60848999]
[88.51140594 -91.60524750]
[88.19934845 -106.60199738]
[73.20533752 -107.15448761]
[58.26805496 -108.56990051]
[43.43712997 -110.84352875]
[28.76182747 -113.96781921]
[14.29089737 -117.93239594]
[0.07241056 -122.72409058]
[-13.84640026 -128.32698059]
[-27.41929817 -134.72247314]
[-40.60119629 -141.88928223]
[-53.34830093 -149.80363464]
[-65.61827087 -158.43923950]
[-77.37034607 -167.76739502]
[-88.56549072 -177.75711060]
[-99.16650391 -188.37521362]
[-109.13818359 -199.58642578]
[-118.44740295 -211.35351562]
[-127.06322479 -223.63737488]
[-134.95704651 -236.39721680]
[-142.10261536 -249.59063721]
[-148.47624207 -263.17379761]
[-154.05670166 -277.10162354]
[-158.82550049 -291.32781982]
[-162.76676941 -305.80511475]
[-165.86741638 -320.48541260]
[-168.11715698 -335.32000732]
[-169.50851440 -350.25952148]
[-170.03684998 -365.25442505]
[-169.70042419 -380.25482178]
[-168.50036621 -395.21096802]
[-166.44062805 -410.07308960]
[-163.52807617 -424.79190063]
[-159.77238464 -439.31842041]
[-155.18603516 -453.60446167]
[-149.78424072 -467.60256958]
[-143.58496094 -481.26617432]
[-136.60879517 -494.54995728]
[-128.87890625 -507.40975952]
[-120.42096710 -519.80285645]
[-111.26309204 -531.68811035]
[-101.43568420 -543.02600098]
[-90.97140503 -553.77886963]
[-79.90501404 -563.91107178]
[-68.27326202 -573.38879395]
[-56.11479950 -582.18072510]
[-43.47001266 -590.25756836]
[-30.38090324 -597.59246826]
[-16.89095306 -604.16107178]
[-3.04497766 -609.94165039]
[11.11102962 -614.91485596]
[25.53004456 -619.06433105]
[40.16416550 -622.37609863]
[54.96478271 -624.83935547]
[69.88272858 -626.44580078]
[84.86844635 -627.19012451]
[99.87215424 -627.06982422]
[114.84400940 -626.08532715]
[129.73428345 -624.23992920]
[144.49349976 -621.53973389]
[159.07264709 -617.99371338]
[173.42327881 -613.61364746]
[187.49772644 -608.41406250]
[201.24925232 -602.41229248]
[214.63215637 -595.62817383]
[227.60197449 -588.08435059]
[240.11564636 -579.80584717]
[252.13159180 -570.82012939]
[263.60989380 -561.15710449]
[274.51242065 -550.84881592]
[284.80294800 -539.92956543]
[294.44729614 -528.43554688]
[303.41345215 -516.40502930]
[311.67160034 -503.87789917]
[319.19433594 -490.89581299]
[325.95660400 -477.50189209]
[331.93603516 -463.74063110]
[337.11270142 -449.65774536]
[341.46942139 -435.29998779]
[344.99172974 -420.71511841]
[347.66790771 -405.95150757]
[349.48910522 -391.05825806]
[350.44921875 -376.08480835]
[350.54510498 -361.08093262]
[349.77642822 -346.09646606]
[348.14572144 -331.18115234]
[345.65844727 -316.38455200]
[342.32281494 -301.75582886]
[338.14993286 -287.34359741]
[333.15368652 -273.19567871]
[327.35061646 -259.35913086]
[320.76004028 -245.87988281]
[313.40383911 -232.80271912]
[305.30648804 -220.17109680]
[296.49481201 -208.02694702]
[286.99813843 -196.41062927]
[276.84799194 -185.36073303]
[266.07809448 -174.91395569]
[254.72422791 -165.10501099]
[242.82411194 -155.96647644]
[230.41726685 -147.52870178]
[217.54490662 -139.81974792]
[204.24980164 -132.86518860]
[190.57611084 -126.68814087]
[176.56925964 -121.30912781]
[162.27577209 -116.74600983]
[147.74313354 -113.01395416]
[133.01962280 -110.12535095]
[118.15415955 -108.08979797]
[103.19610596 -106.91405487]
[103.50816345 -91.91730499]
[103.82021332 -76.92054749]
[104.13227081 -61.92379379]
[104.44432831 -46.92704010]
[104.75638580 -31.93028831]
[105.06844330 -16.93353462]
[105.38050079 -1.93678057]
[105.69255066 13.05997276]
[106.00460815 28.05672646]
[106.31666565 43.05348206]
[120.83852386 46.62807846]
[133.94062805 53.83897781]
[144.73031616 64.19489288]
[152.47245789 76.99025726]
[156.63957214 91.35330963]
[156.94775391 106.30547333]
[153.37602234 120.82803345]
[146.16769409 133.93154907]
[135.81390381 144.72326660]
[123.02005768 152.46792603]
[108.65782166 156.63787842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
