%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUUCCUCAGGGGGGGGGGCGCAAGCAACCGCAUCCAUAAUCCUUCUAAUAGCUAUCCUCUUCAACAAUxxxxxxxxxxCACCACACACCACCUGUCCAAAAAGGCCUUCGAUACGGGAUAAUCCUAUUCCCCCCCCCCUAUUACCUCA\
) } def
/len { sequence length } bind def

/coor [
[76.41384888 354.67874146]
[63.19365311 347.40628052]
[52.30684662 336.95925903]
[44.49571609 324.05001831]
[40.29283524 309.55871582]
[39.98476410 294.47335815]
[43.59250641 279.82254028]
[50.87007904 266.60516357]
[61.32128525 255.72238159]
[74.23355103 247.91624451]
[88.72648621 243.71894836]
[88.41442871 228.72219849]
[88.10237122 213.72544861]
[87.79031372 198.72869873]
[87.47825623 183.73194885]
[87.16620636 168.73518372]
[86.85414886 153.73843384]
[86.54209137 138.74168396]
[86.23003387 123.74492645]
[72.91487885 116.83792877]
[60.47543716 125.22006989]
[53.76984406 140.18559265]
[37.43109512 141.59175110]
[28.26709366 127.99201202]
[35.70497894 113.37660980]
[52.09329605 112.78063202]
[64.53273773 104.39849091]
[74.57435608 90.58123016]
[87.56198120 86.31970215]
[97.46675110 90.46633911]
[96.53112030 75.49554443]
[95.59549713 60.52475357]
[87.01247406 47.23406982]
[93.94084167 34.04896164]
[93.00521088 19.07817268]
[92.06958008 4.10738039]
[78.75421906 -0.73122281]
[68.32853699 -10.25951672]
[62.35107803 -23.00820923]
[61.69821167 -37.03007507]
[66.43582916 -50.19736481]
[75.81433868 -60.52466965]
[88.38710022 -66.46829224]
[87.76312256 -81.45531464]
[87.13914490 -96.44232941]
[86.51516724 -111.42934418]
[71.53362274 -112.42961884]
[56.74805450 -115.04385376]
[42.33181381 -119.24138641]
[28.45392799 -124.97300720]
[15.27710438 -132.17152405]
[2.95583630 -140.75251770]
[-8.36541557 -150.61540222]
[-18.55391693 -161.64453125]
[-27.49021149 -173.71060181]
[-35.06952667 -186.67213440]
[-41.20299530 -200.37715149]
[-45.81871414 -214.66499329]
[-48.86255646 -229.36813354]
[-50.29883957 -244.31417847]
[-50.11072540 -259.32791138]
[-48.30041504 -274.23327637]
[-44.88913727 -288.85552979]
[-39.91688538 -303.02322388]
[-33.44195557 -316.57028198]
[-25.54026794 -329.33786011]
[-16.30446243 -341.17620850]
[-5.84282207 -351.94662476]
[5.72199249 -361.52273560]
[18.25439072 -369.79232788]
[31.60743713 -376.65844727]
[45.62457657 -382.04055786]
[60.14145660 -385.87557983]
[74.98788452 -388.11853027]
[89.98979187 -388.74313354]
[104.97128296 -387.74203491]
[119.75670624 -385.12701416]
[134.17271423 -380.92871094]
[148.05029297 -375.19631958]
[161.22673035 -367.99710083]
[173.54754639 -359.41543579]
[184.86825562 -349.55194092]
[195.05616760 -338.52227783]
[203.99182129 -326.45571899]
[211.57043457 -313.49380493]
[217.70317078 -299.78842163]
[222.31811523 -285.50033569]
[225.36116028 -270.79705811]
[226.79664612 -255.85092163]
[226.60772705 -240.83720398]
[224.79661560 -225.93193054]
[221.38455200 -211.30986023]
[216.41152954 -197.14242554]
[209.93586731 -183.59571838]
[202.03349304 -170.82858276]
[192.79705811 -158.99070740]
[182.33483887 -148.22088623]
[170.76950073 -138.64537048]
[158.23666382 -130.37644958]
[144.88323975 -123.51106262]
[130.86581421 -118.12970734]
[116.34873199 -114.29547882]
[101.50218201 -112.05332184]
[102.12615967 -97.06630707]
[102.75013733 -82.07928467]
[103.37411499 -67.09226990]
[118.14155579 -61.06542969]
[128.85279846 -49.16899872]
[133.33488464 -33.74083328]
[130.64578247 -17.84256363]
[121.27174377 -4.65206766]
[107.04037476 3.17175174]
[107.97600555 18.14254379]
[108.91162872 33.11333466]
[117.42773438 45.33320618]
[110.56628418 59.58912277]
[111.50191498 74.55991364]
[112.43754578 89.53070831]
[120.68983459 102.05667114]
[134.07611084 108.82478333]
[147.46240234 115.59289551]
[160.84869385 122.36101532]
[177.18368530 120.91188812]
[186.38342285 134.48748779]
[178.98399353 149.12239075]
[162.59730530 149.76147461]
[154.08056641 135.74729919]
[140.69429016 128.97918701]
[127.30799866 122.21106720]
[113.92171478 115.44295502]
[101.22679138 123.43286896]
[101.53884125 138.42962646]
[101.85089874 153.42637634]
[102.16295624 168.42312622]
[102.47501373 183.41989136]
[102.78707123 198.41664124]
[103.09912872 213.41339111]
[103.41117859 228.41014099]
[103.72323608 243.40690613]
[118.37822723 246.99766541]
[131.60403442 254.25991821]
[142.49890137 264.69851685]
[150.32000732 277.60174561]
[154.53407288 292.08978271]
[154.85379028 307.17489624]
[151.25737000 321.82849121]
[143.99000549 335.05151367]
[133.54721069 345.94235229]
[120.64097595 353.75845337]
[106.15128326 357.96691895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 27]
[21 26]
[30 118]
[31 117]
[32 116]
[34 114]
[35 113]
[36 112]
[43 106]
[44 105]
[45 104]
[46 103]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
