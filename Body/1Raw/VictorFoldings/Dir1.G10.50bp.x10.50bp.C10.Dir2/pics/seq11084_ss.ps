%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUGACAAGGGGGGGGGGGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCUCGCxxxxxxxxxxCAUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGCCCCCCCCCCUCCCUAACAA\
) } def
/len { sequence length } bind def

/coor [
[85.86035919 416.88229370]
[71.37066650 412.67382812]
[58.46443558 404.85769653]
[48.02163696 393.96685791]
[40.75427246 380.74386597]
[37.15784454 366.09027100]
[37.47756577 351.00515747]
[41.69163895 336.51708984]
[49.51273346 323.61389160]
[60.40760422 313.17529297]
[73.63341522 305.91302490]
[88.28840637 302.32226562]
[88.60046387 287.32550049]
[88.91251373 272.32876587]
[89.22457123 257.33200073]
[89.53662872 242.33525085]
[89.84868622 227.33850098]
[90.16074371 212.34175110]
[90.47280121 197.34498596]
[90.78485107 182.34823608]
[91.09690857 167.35148621]
[91.40896606 152.35473633]
[91.72102356 137.35797119]
[73.37355042 127.48075867]
[62.92201614 109.45425415]
[63.46577454 88.62414551]
[74.84357452 71.16748047]
[67.38866425 58.15117264]
[59.93375397 45.13486481]
[46.36107635 37.00510406]
[46.74977112 22.11557007]
[39.29486084 9.09926033]
[25.72218513 0.96949780]
[26.11087990 -13.92003441]
[18.65596962 -26.93634415]
[11.20106030 -39.95265198]
[-2.59507608 -34.02269745]
[-16.97726059 -29.70406723]
[-31.75798988 -27.05306625]
[-46.74456787 -26.10425568]
[-61.74161148 -26.87000656]
[-76.55361176 -29.34033394]
[-90.98744965 -33.48303223]
[-104.85496521 -39.24409485]
[-117.97535706 -46.54841232]
[-130.17758179 -55.30075455]
[-141.30255127 -65.38702393]
[-151.20523071 -76.67572021]
[-159.75651550 -89.01967621]
[-166.84492493 -102.25796509]
[-172.37805176 -116.21798706]
[-176.28376770 -130.71775818]
[-178.51112366 -145.56822205]
[-179.03111267 -160.57580566]
[-177.83692932 -175.54483032]
[-174.94416809 -190.28015137]
[-170.39051819 -204.58966064]
[-164.23536682 -218.28680420]
[-156.55894470 -231.19302368]
[-147.46134949 -243.14004517]
[-137.06115723 -253.97212219]
[-125.49397278 -263.54803467]
[-112.91059875 -271.74291992]
[-99.47507477 -278.44998169]
[-85.36257935 -283.58175659]
[-70.75708008 -287.07135010]
[-55.84899902 -288.87326050]
[-40.83268738 -288.96398926]
[-25.90392113 -287.34234619]
[-11.25732231 -284.02951050]
[2.91615963 -279.06866455]
[16.43174362 -272.52444458]
[29.11322784 -264.48217773]
[40.79528046 -255.04675293]
[51.32560349 -244.34115601]
[60.56691360 -232.50494385]
[68.39873505 -219.69242859]
[74.71894836 -206.07066345]
[79.44517517 -191.81721497]
[82.51579285 -177.11793518]
[83.89076233 -162.16442871]
[83.55216980 -147.15165710]
[81.50441742 -132.27536011]
[77.77421570 -117.72945404]
[72.41018677 -103.70358276]
[65.48226166 -90.38060760]
[57.08075714 -77.93422699]
[47.31521225 -66.52668762]
[36.31293869 -56.30672073]
[24.21736908 -47.40756226]
[31.67227936 -34.39125443]
[39.12718964 -21.37494469]
[52.16664124 -14.17619610]
[52.31117249 1.64434981]
[59.76608276 14.66065884]
[72.80553436 21.85940742]
[72.95006561 37.67995453]
[80.40497589 50.69626236]
[87.85988617 63.71257401]
[96.41227722 61.90422440]
[105.15191650 62.08407211]
[113.62267303 64.24272919]
[121.38247681 68.26753235]
[128.02633667 73.94844055]
[133.20753479 80.98895264]
[136.65563965 89.02165222]
[138.19070435 97.62729645]
[153.05375671 99.64962769]
[167.91679382 101.67196655]
[175.54400635 88.52304077]
[187.62553406 79.29779816]
[202.31904602 75.40302277]
[217.38388062 77.43263245]
[230.52275085 85.07712555]
[239.73208618 97.17078400]
[243.60754395 111.86940002]
[241.55812073 126.93154907]
[233.89634705 140.06036377]
[221.79058838 149.25378418]
[207.08688354 153.10989380]
[192.02743530 151.04064941]
[178.90872192 143.36161804]
[169.73123169 131.24377441]
[165.89447021 116.53501129]
[151.03141785 114.51268005]
[136.16836548 112.49034119]
[129.59748840 124.25177765]
[119.35747528 133.00679016]
[106.71777344 137.67002869]
[106.40572357 152.66677856]
[106.09366608 167.66354370]
[105.78160858 182.66029358]
[105.46955109 197.65704346]
[105.15749359 212.65379333]
[104.84543610 227.65055847]
[104.53338623 242.64730835]
[104.22132874 257.64407349]
[103.90927124 272.64080811]
[103.59721375 287.63757324]
[103.28515625 302.63430786]
[117.77809143 306.83160400]
[130.69035339 314.63775635]
[141.14157104 325.52050781]
[148.41914368 338.73791504]
[152.02687073 353.38873291]
[151.71881104 368.47406006]
[147.51593018 382.96539307]
[139.70478821 395.87463379]
[128.81799316 406.32165527]
[115.59779358 413.59411621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[27 99]
[28 98]
[29 97]
[31 95]
[32 94]
[34 92]
[35 91]
[36 90]
[107 126]
[108 125]
[109 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
