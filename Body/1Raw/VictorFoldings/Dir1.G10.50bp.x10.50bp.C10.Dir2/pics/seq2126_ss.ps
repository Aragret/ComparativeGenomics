%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAAAUAAGGGGGGGGGGCUUUGCAAGGAGAGCCAAAGCUAAGACCCCCGAAACCAGACGAGCUACCUxxxxxxxxxxUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCCCCCCCCCCCUAGCAAUAA\
) } def
/len { sequence length } bind def

/coor [
[92.60636902 381.45867920]
[79.38616943 374.18618774]
[68.49936676 363.73919678]
[60.68823242 350.82995605]
[56.48535156 336.33862305]
[56.17728043 321.25329590]
[59.78502274 306.60247803]
[67.06259155 293.38507080]
[77.51380157 282.50231934]
[90.42606354 274.69616699]
[104.91899872 270.49887085]
[104.60694122 255.50213623]
[104.29489136 240.50537109]
[103.98283386 225.50862122]
[103.67077637 210.51187134]
[103.35871887 195.51512146]
[103.04666138 180.51835632]
[102.73460388 165.52160645]
[102.42255402 150.52485657]
[102.11049652 135.52810669]
[84.88590240 130.90696716]
[72.61768341 118.80624390]
[68.09065247 102.80421448]
[71.91706848 87.23925781]
[82.52269745 76.03622437]
[77.03565979 62.07583237]
[71.54862976 48.11544037]
[66.06159973 34.15505219]
[60.57456970 20.19466209]
[55.08753586 6.23427248]
[49.60050583 -7.72611761]
[38.07572174 -13.61111546]
[33.81210327 -25.40266037]
[38.59259796 -36.55856323]
[33.39718246 -50.63008118]
[28.20176506 -64.70159912]
[14.61226654 -69.06023407]
[6.27475643 -80.33181000]
[6.09163570 -94.09937286]
[-6.17073250 -102.73848724]
[-18.43309975 -111.37760162]
[-30.69546890 -120.01672363]
[-27.67598915 -105.32377625]
[-33.72294235 -91.59663391]
[-46.60210037 -83.90721130]
[-61.55487442 -85.09658813]
[-73.05650330 -94.72531891]
[-76.85737610 -109.23577881]
[-71.55313873 -123.26663971]
[-59.10359955 -131.63377380]
[-44.10944748 -131.24598694]
[-54.77107239 -141.79728699]
[-70.06194305 -139.15739441]
[-83.96929932 -146.03961182]
[-91.14548492 -159.79759216]
[-88.83111572 -175.14109802]
[-77.91610718 -186.17024231]
[-62.59749985 -188.64410400]
[-48.76561737 -181.61141968]
[-41.73909760 -167.77641296]
[-44.21978378 -152.45890808]
[-33.55815506 -141.90762329]
[-22.05635262 -132.27908325]
[-9.79398441 -123.63997650]
[2.46838355 -115.00085449]
[14.73075199 -106.36174011]
[20.04475021 -109.11629486]
[25.90080261 -110.35435486]
[29.90854263 -124.80904388]
[33.91628265 -139.26373291]
[20.83705139 -146.77268982]
[10.03670502 -157.29901123]
[2.19416332 -170.18098450]
[-2.19758487 -184.60885620]
[-2.86247087 -199.67565918]
[0.24130094 -214.43429565]
[6.91862440 -227.95703125]
[16.74975777 -239.39379883]
[29.11670876 -248.02568054]
[43.24207687 -253.31005859]
[58.23793411 -254.91477966]
[73.16162872 -252.73893738]
[87.07503510 -246.91934204]
[99.10355377 -237.82177734]
[108.49106598 -226.01815796]
[114.64745331 -212.25045776]
[117.18572998 -197.38412476]
[115.94632721 -182.35365295]
[111.00716400 -168.10391235]
[102.67871857 -155.53060913]
[91.48452759 -145.42413330]
[78.12825775 -138.41978455]
[63.44949722 -134.95787048]
[48.37097168 -135.25599670]
[44.36323166 -120.80130005]
[40.35549164 -106.34661102]
[50.38159561 -88.90561676]
[42.27328491 -69.89701843]
[47.46870041 -55.82549667]
[52.66411591 -41.75397873]
[66.74031830 -31.32036018]
[63.56089401 -13.21314907]
[69.04792786 0.74724096]
[74.53495789 14.70763111]
[80.02198792 28.66802025]
[85.50901794 42.62841034]
[90.99605560 56.58879852]
[96.48308563 70.54918671]
[111.80004883 71.17938232]
[125.47652435 79.61954498]
[133.63208008 94.32167816]
[133.55090332 111.87591553]
[147.87348938 116.33273315]
[157.57374573 104.62915802]
[171.01669312 97.53300476]
[186.15240479 96.12638855]
[200.67279053 100.62380981]
[212.36360168 110.33943939]
[219.44206238 123.79172516]
[220.82876587 138.92927551]
[216.31225586 153.44374084]
[206.58125305 165.12174988]
[193.11967468 172.18251038]
[177.98030090 173.54930115]
[163.47180176 169.01368713]
[151.80659485 159.26733398]
[144.76354980 145.79647827]
[143.41667175 130.65533447]
[129.09408569 126.19851685]
[117.10724640 135.21604919]
[117.41930389 150.21279907]
[117.73136139 165.20954895]
[118.04341888 180.20629883]
[118.35547638 195.20306396]
[118.66752625 210.19981384]
[118.97958374 225.19656372]
[119.29164124 240.19331360]
[119.60369873 255.19007874]
[119.91575623 270.18682861]
[134.57073975 273.77758789]
[147.79655457 281.03985596]
[158.69142151 291.47845459]
[166.51252747 304.38165283]
[170.72659302 318.86972046]
[171.04631042 333.95483398]
[167.44989014 348.60842896]
[160.18252563 361.83142090]
[149.73971558 372.72225952]
[136.83349609 380.53839111]
[122.34380341 384.74685669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[34 100]
[35 99]
[36 98]
[39 66]
[40 65]
[41 64]
[42 63]
[51 62]
[52 61]
[68 96]
[69 95]
[70 94]
[112 129]
[113 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
