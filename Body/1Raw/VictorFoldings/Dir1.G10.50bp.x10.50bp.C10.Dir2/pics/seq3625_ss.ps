%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAACCCCCUGGGGGGGGGGGGUCAACCUCAACCUAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUAGxxxxxxxxxxAUCAUGACCCUUGGCCAUAAUAUGAUUUAUCUCCACACUAGCAGAGACCACCCCCCCCCCACCGAACCCCCU\
) } def
/len { sequence length } bind def

/coor [
[83.14099121 364.65783691]
[69.43883514 358.39697266]
[57.47372055 349.24362183]
[47.84580994 337.65695190]
[41.03802872 324.21810913]
[37.39186096 309.60122681]
[37.09019470 294.53948975]
[40.14815903 279.78833008]
[46.41236877 266.08767700]
[55.56861496 254.12478638]
[67.15762329 244.49967957]
[80.59809113 237.69515991]
[95.21585083 234.05253601]
[94.91184998 219.05561829]
[94.60784149 204.05870056]
[94.30384064 189.06178284]
[93.99983978 174.06486511]
[93.69583130 159.06793213]
[93.39183044 144.07101440]
[93.08782196 129.07409668]
[92.78382111 114.07717896]
[86.59033203 100.41553497]
[75.51122284 90.30348969]
[64.43211365 80.19145203]
[53.35300827 70.07940674]
[42.27389908 59.96736908]
[31.19479179 49.85532761]
[15.52698898 59.44022369]
[-2.29182005 63.82791519]
[-20.58676720 62.61598206]
[-37.64125443 55.92786026]
[-51.85801697 44.40036011]
[-61.90872192 29.12303925]
[-66.85807037 11.53522491]
[-66.25084686 -6.70958853]
[-60.15373611 -23.89918900]
[-72.37771606 -32.59253693]
[-84.60169983 -41.28588486]
[-96.82567596 -49.97923279]
[-109.04965973 -58.67257690]
[-121.27364349 -67.36592865]
[-132.59915161 -57.42462158]
[-145.91229248 -50.36366272]
[-160.49508667 -46.56383514]
[-175.56111145 -46.23006439]
[-190.29788208 -49.38034439]
[-203.91065979 -55.84478760]
[-215.66532898 -65.27478027]
[-224.92796326 -77.16175842]
[-231.19903564 -90.86469269]
[-234.14038086 -105.64458466]
[-233.59335327 -120.70437622]
[-229.58744812 -135.23191833]
[-222.33872986 -148.44375610]
[-212.23808289 -159.62739563]
[-199.83024597 -168.17971802]
[-185.78433228 -173.63949585]
[-170.85783386 -175.71229553]
[-155.85572815 -174.28633118]
[-141.58703613 -169.43850708]
[-128.82127380 -161.43026733]
[-118.24687195 -150.69348145]
[-110.43408966 -137.80715942]
[-105.80426788 -123.46625519]
[-104.60708618 -108.44416046]
[-106.90711212 -93.55098724]
[-112.58029175 -79.58990479]
[-100.35630798 -70.89656067]
[-88.13233185 -62.20321274]
[-75.90834808 -53.50986481]
[-63.68436813 -44.81651688]
[-51.46038818 -36.12316895]
[-42.55853271 -44.06515884]
[-32.24626160 -50.07559967]
[-20.93656349 -53.91087341]
[-9.08296490 -55.41453934]
[2.83868003 -54.52370453]
[14.34927464 -51.27165222]
[24.98574257 -45.78660583]
[34.31965256 -38.28667831]
[41.97447586 -29.07119560]
[47.64078140 -18.50875282]
[51.08873367 -7.02247190]
[52.17742157 4.92695141]
[50.86061096 16.85972023]
[47.18870926 28.29620361]
[41.30683136 38.77621841]
[52.38594055 48.88825989]
[63.46504593 59.00030136]
[74.54415894 69.11234283]
[85.62326050 79.22438049]
[96.70236969 89.33642578]
[104.56619263 85.12322998]
[115.58087158 87.52178955]
[130.45088196 85.55133820]
[145.32090759 83.58088684]
[139.41609192 64.80100250]
[150.62994385 42.02482224]
[163.19618225 33.83399963]
[175.76242065 25.64317703]
[185.73002625 11.92882633]
[201.66770935 17.71037102]
[200.52410889 34.62570190]
[183.95324707 38.20941925]
[171.38700867 46.40024185]
[158.82077026 54.59106445]
[160.33050537 61.93753815]
[173.37127686 54.52549362]
[184.45034790 64.63757324]
[178.25679016 78.29919434]
[163.34997559 76.63048553]
[164.85972595 83.97695923]
[179.63766479 86.54840851]
[194.41561890 89.11985779]
[209.19355774 91.69130707]
[218.97782898 79.85223389]
[233.37637329 74.50646973]
[248.51608276 77.09200287]
[260.32443237 86.91333008]
[265.62503052 101.32857513]
[262.99206543 116.46009827]
[253.13375854 128.23759460]
[238.70198059 133.49299622]
[223.57878113 130.81260681]
[211.83224487 120.91744232]
[206.62210083 106.46925354]
[191.84416199 103.89780426]
[177.06622314 101.32635498]
[162.28826904 98.75490570]
[147.29135132 98.45090485]
[132.42134094 100.42135620]
[117.55132294 102.39180756]
[107.78073883 113.77317810]
[108.08473969 128.77009583]
[108.38874817 143.76701355]
[108.69274902 158.76393127]
[108.99675751 173.76084900]
[109.30075836 188.75776672]
[109.60476685 203.75468445]
[109.90876770 218.75161743]
[110.21277618 233.74853516]
[124.96614838 236.79577637]
[138.67132568 243.05001831]
[150.64088440 252.19757080]
[160.27441406 263.77957153]
[167.08869934 277.21508789]
[170.74194336 291.83020020]
[171.05091858 306.89181519]
[168.00010681 321.64447021]
[161.74253845 335.34811401]
[152.59208679 347.31546021]
[141.00773621 356.94616699]
[127.57057190 363.75720215]
[112.95457458 367.40692139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[36 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[94 132]
[95 131]
[96 130]
[98 106]
[99 105]
[100 104]
[112 129]
[113 128]
[114 127]
[115 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
