%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCAAAAAACAGGGGGGGGGGCAUAAUUUGAAUCAACACAACCACCCACAGCCUAAUUAUUAGCAUCAUCCxxxxxxxxxxGCCUAUUCGCAGGAUUUCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCCCCCCCCCCCUUCCAAACAACA\
) } def
/len { sequence length } bind def

/coor [
[57.76121140 163.65519714]
[46.15485764 154.19226074]
[36.61752701 142.64695740]
[29.51569748 129.46292114]
[25.12225914 115.14675140]
[23.60603142 100.24857330]
[25.02527618 85.34083557]
[29.32546043 70.99639130]
[36.34134293 57.76641464]
[45.80334091 46.15928650]
[57.34786606 36.62101364]
[70.53132629 29.51810646]
[84.84712219 25.12349701]
[83.32959747 10.20045757]
[81.81207275 -4.72258186]
[80.29454803 -19.64562225]
[78.77702332 -34.56866074]
[77.25949860 -49.49170303]
[75.74197388 -64.41474152]
[74.22444916 -79.33778381]
[72.70692444 -94.26081848]
[71.18939972 -109.18386078]
[56.19868469 -108.54444122]
[41.19627762 -108.78588867]
[26.23390198 -109.90738678]
[11.36313152 -111.90505219]
[-3.36476827 -114.77201080]
[-17.89902687 -118.49837494]
[-32.18954468 -123.07130432]
[-46.18705368 -128.47502136]
[-59.84330368 -134.69091797]
[-73.11122131 -141.69754028]
[-85.94506073 -149.47076416]
[-98.30059052 -157.98377991]
[-110.13521576 -167.20722961]
[-121.40814209 -177.10934448]
[-132.08049011 -187.65596008]
[-142.11550903 -198.81074524]
[-151.47856140 -210.53523254]
[-160.13740540 -222.78900146]
[-168.06216431 -235.52983093]
[-175.22554016 -248.71377563]
[-181.60284424 -262.29541016]
[-187.17205811 -276.22787476]
[-191.91403198 -290.46319580]
[-195.81237793 -304.95227051]
[-198.85366821 -319.64517212]
[-201.02743530 -334.49121094]
[-202.32617188 -349.43927002]
[-202.74539185 -364.43774414]
[-202.28367615 -379.43499756]
[-200.94258118 -394.37930298]
[-198.72677612 -409.21911621]
[-195.64385986 -423.90332031]
[-191.70446777 -438.38131714]
[-186.92219543 -452.60314941]
[-181.31350708 -466.51977539]
[-174.89776611 -480.08328247]
[-167.69706726 -493.24688721]
[-159.73622131 -505.96520996]
[-151.04270935 -518.19439697]
[-141.64645386 -529.89233398]
[-131.57989502 -541.01861572]
[-120.87768555 -551.53497314]
[-109.57675934 -561.40509033]
[-97.71604919 -570.59497070]
[-85.33644104 -579.07293701]
[-72.48062897 -586.80975342]
[-59.19291306 -593.77874756]
[-45.51910400 -599.95593262]
[-31.50634003 -605.32000732]
[-17.20292473 -609.85241699]
[-2.65816641 -613.53753662]
[12.07779694 -616.36279297]
[26.95416832 -618.31829834]
[41.91966248 -619.39739990]
[56.92269135 -619.59637451]
[71.91153717 -618.91442871]
[86.83453369 -617.35406494]
[101.64022827 -614.92059326]
[116.27758789 -611.62237549]
[130.69615173 -607.47082520]
[144.84622192 -602.48022461]
[158.67901611 -596.66778564]
[172.14685059 -590.05358887]
[185.20329285 -582.66033936]
[197.80332947 -574.51361084]
[209.90354919 -565.64147949]
[221.46221924 -556.07446289]
[232.43951416 -545.84558105]
[242.79756165 -534.99011230]
[252.50068665 -523.54547119]
[261.51541138 -511.55108643]
[269.81069946 -499.04833984]
[277.35791016 -486.08029175]
[284.13104248 -472.69168091]
[290.10675049 -458.92861938]
[295.26446533 -444.83862305]
[299.58636475 -430.47018433]
[303.05755615 -415.87289429]
[305.66607666 -401.09701538]
[307.40295410 -386.19354248]
[308.26217651 -371.21380615]
[308.24078369 -356.20947266]
[307.33886719 -341.23226929]
[305.55950928 -326.33380127]
[302.90887451 -311.56542969]
[299.39608765 -296.97808838]
[295.03326416 -282.62203979]
[289.83541870 -268.54675293]
[283.82049561 -254.80081177]
[277.00921631 -241.43156433]
[269.42507935 -228.48509216]
[261.09420776 -216.00602722]
[252.04531860 -204.03739929]
[242.30961609 -192.62045288]
[231.92065430 -181.79455566]
[220.91426086 -171.59701538]
[209.32836914 -162.06300354]
[197.20291138 -153.22535706]
[184.57969666 -145.11457825]
[171.50222778 -137.75860596]
[158.01559448 -131.18278503]
[144.16629028 -125.40981293]
[130.00205994 -120.45957184]
[115.57171631 -116.34913635]
[100.92501068 -113.09265900]
[86.11244202 -110.70138550]
[87.62996674 -95.77834320]
[89.14749146 -80.85530853]
[90.66501617 -65.93226624]
[92.18254089 -51.00922775]
[93.70006561 -36.08618546]
[95.21759033 -21.16314697]
[96.73511505 -6.24010658]
[98.25263977 8.68293285]
[99.77016449 23.60597229]
[114.67755127 25.02887344]
[129.02095032 29.33257484]
[142.24919128 36.35170364]
[153.85400391 45.81654739]
[163.38945007 57.36341476]
[170.48912048 70.54860687]
[174.88021851 84.86548615]
[176.39401245 99.76392365]
[174.97232056 114.67142487]
[170.66979980 129.01516724]
[163.65174866 142.24398804]
[154.18785095 153.84957886]
[142.64176941 163.38595581]
[129.45715332 170.48670959]
[115.14063263 174.87898254]
[100.24232483 176.39398193]
[85.33470917 174.97352600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
