%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACAGGCAGGGGGGGGGGUGCUCAUAAGGAAAGGUUAAAAAAAGUAAAAGGAACUCGGCAAAUCUUACxxxxxxxxxxUCCCCACCUUGGCUAUCAUCACCCGAUGAGGCAACCAGCCAGAACGCCUGCCCCCCCCCCAACGCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[91.60279083 366.46835327]
[77.75685120 360.45233154]
[66.04818726 350.92291260]
[57.34566498 338.58724976]
[52.29506302 324.36071777]
[51.27117157 309.29904175]
[54.34997177 294.51986694]
[61.30299377 281.11993408]
[71.61428070 270.09359741]
[84.51866150 262.25909424]
[99.05854797 258.19778442]
[99.05854797 243.19778442]
[99.05854797 228.19778442]
[99.05854797 213.19778442]
[99.05854797 198.19778442]
[99.05854797 183.19778442]
[99.05854797 168.19778442]
[99.05854797 153.19778442]
[99.05854797 138.19778442]
[99.05854797 123.19779205]
[86.28118896 115.34036255]
[77.45677948 128.47201538]
[62.60759354 127.30975342]
[49.22130966 134.07786560]
[40.70457077 148.09204102]
[24.31788254 147.45295715]
[16.91846085 132.81805420]
[26.11819839 119.24245453]
[42.45319366 120.69158173]
[55.83947754 113.92346191]
[63.70640945 101.27590942]
[79.51307678 101.95407867]
[83.37023163 87.45848083]
[75.11794281 74.93251801]
[66.86565399 62.40655899]
[58.61336517 49.88059616]
[50.36107635 37.35463333]
[36.88210297 43.98188782]
[22.67878151 48.86746979]
[7.97512197 51.93432999]
[-6.99697828 53.13410187]
[-22.00138855 52.44785690]
[-36.80146408 49.88642502]
[-51.16379166 45.49020004]
[-64.86185455 39.32851791]
[-77.67961121 31.49855804]
[-89.41491699 22.12380791]
[-99.88267517 11.35212231]
[-108.91780853 -0.64661473]
[-116.37780762 -13.68316460]
[-122.14501953 -27.55192375]
[-126.12849426 -42.03416061]
[-128.26539612 -56.90146637]
[-128.52204895 -71.91937256]
[-126.89436340 -86.85101318]
[-123.40804291 -101.46089935]
[-118.11806488 -115.51860809]
[-111.10784912 -128.80244446]
[-102.48796844 -141.10289001]
[-92.39436340 -152.22593689]
[-80.98622894 -161.99618530]
[-68.44348145 -170.25953674]
[-54.96395111 -176.88565063]
[-40.76021957 -181.77003479]
[-26.05630302 -184.83566284]
[-11.08410168 -186.03416443]
[3.92024994 -185.34666443]
[18.72011185 -182.78398132]
[33.08206940 -178.38655090]
[46.77961349 -172.22370911]
[59.59671402 -164.39266968]
[71.33122253 -155.01693726]
[81.79808044 -144.24436951]
[90.83219910 -132.24487305]
[98.29109955 -119.20769501]
[104.05715179 -105.33845520]
[108.03940582 -90.85588074]
[110.17506409 -75.98839569]
[110.43043518 -60.97047043]
[108.80150604 -46.03896713]
[105.31394958 -31.42937279]
[100.02278137 -17.37210274]
[93.01145172 -4.08886337]
[84.39053345 8.21085262]
[74.29599762 19.33305931]
[62.88703918 29.10234642]
[71.13932800 41.62830734]
[79.39161682 54.15427017]
[87.64390564 66.68022919]
[95.89619446 79.20619202]
[109.61624908 85.26920319]
[124.43400574 82.93810272]
[139.25177002 80.60700226]
[147.15113831 60.46668625]
[167.91558838 50.13151550]
[191.75733948 56.79521942]
[205.28153992 50.30705261]
[218.80572510 43.81888962]
[232.32991028 37.33072281]
[245.85411072 30.84255791]
[254.66055298 17.00859261]
[271.03039551 17.98843956]
[278.12374878 32.77412033]
[268.64358521 46.15539169]
[252.34226990 44.36674881]
[238.81808472 50.85491180]
[225.29388428 57.34307861]
[211.76969910 63.83124542]
[198.24551392 70.31941223]
[201.03784180 85.05721283]
[215.99807739 86.14852142]
[230.95832825 87.23983765]
[243.98896790 77.88129425]
[259.39050293 82.37260437]
[265.34823608 97.26841736]
[257.29187012 111.14193726]
[241.40156555 113.35058594]
[229.86701965 102.20008087]
[214.90676880 101.10877228]
[199.94651794 100.01746368]
[191.02491760 109.67237091]
[179.54107666 115.18325806]
[167.24147034 116.04340363]
[155.88069153 112.42955017]
[146.97131348 105.13622284]
[141.58287048 95.42475891]
[126.76511383 97.75585938]
[111.94734955 100.08696747]
[115.99414825 105.78106689]
[117.06887054 113.98445129]
[114.05854797 123.19779205]
[114.05854797 138.19778442]
[114.05854797 153.19778442]
[114.05854797 168.19778442]
[114.05854797 183.19778442]
[114.05854797 198.19778442]
[114.05854797 213.19778442]
[114.05854797 228.19778442]
[114.05854797 243.19778442]
[114.05854797 258.19778442]
[128.59843445 262.25909424]
[141.50280762 270.09359741]
[151.81410217 281.11993408]
[158.76712036 294.51986694]
[161.84591675 309.29904175]
[160.82202148 324.36071777]
[155.77142334 338.58724976]
[147.06890869 350.92291260]
[135.36024475 360.45233154]
[121.51429749 366.46835327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 32]
[23 30]
[24 29]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[91 128]
[92 127]
[93 126]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
