%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAGCCCUGGGGGGGGGGACUCCACUCAAGCACUAUAGUUGUAGCAGGAAUCUUCUUACUCAUCCGCUxxxxxxxxxxCAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACCCCCCCCCCCUCACAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[86.56348419 517.46032715]
[73.34328461 510.18786621]
[62.45648193 499.74087524]
[54.64535141 486.83163452]
[50.44247055 472.34030151]
[50.13439560 457.25497437]
[53.74213791 442.60415649]
[61.01971054 429.38674927]
[71.47091675 418.50399780]
[84.38317871 410.69784546]
[98.87611389 406.50054932]
[98.56406403 391.50378418]
[98.25200653 376.50704956]
[97.93994904 361.51028442]
[97.62789154 346.51354980]
[97.31583405 331.51678467]
[97.00377655 316.52001953]
[96.69172668 301.52328491]
[96.37966919 286.52651978]
[96.06761169 271.52975464]
[81.52607727 267.99520874]
[68.38491821 260.81140137]
[57.54281616 250.46281433]
[49.74297714 237.65052795]
[45.52222061 223.24476624]
[45.17403030 208.22586060]
[48.72814178 193.61743164]
[55.94812012 180.41673279]
[66.34706879 169.52647400]
[79.22048187 161.69316101]
[93.69393158 157.45590210]
[93.38187408 142.45915222]
[79.26757050 137.63967896]
[67.65071869 128.28608704]
[59.93069077 115.52511597]
[57.03746414 100.89397430]
[59.31955338 86.15514374]
[66.50205994 73.08408356]
[77.71976471 63.25534821]
[91.62136841 57.85290909]
[91.30931091 42.85615540]
[90.99725342 27.85940361]
[90.68520355 12.86264992]
[90.37314606 -2.13410378]
[80.29516602 -8.58447361]
[74.66677094 -19.00704765]
[74.79758453 -30.73124123]
[80.53818512 -40.81653976]
[90.34676361 -46.79000473]
[90.65881348 -61.78675842]
[90.97087097 -76.78350830]
[91.28292847 -91.78026581]
[76.42831421 -94.00933838]
[61.98071671 -98.11972046]
[48.17738342 -104.04393005]
[35.24497223 -111.68468475]
[23.39584541 -120.91650391]
[12.82458019 -131.58781433]
[3.70476413 -143.52336121]
[-3.81384730 -156.52716064]
[-9.60779190 -170.38566589]
[-13.58192730 -184.87133789]
[-15.67099380 -199.74629211]
[-15.84068871 -214.76626587]
[-14.08822441 -229.68461609]
[-10.44237804 -244.25636292]
[-4.96301889 -258.24224854]
[2.25987887 -271.41259766]
[11.10770798 -283.55114746]
[21.43517876 -294.45855713]
[33.07270432 -303.95571899]
[45.82918549 -311.88671875]
[59.49515533 -318.12127686]
[73.84619904 -322.55703735]
[88.64665985 -325.12112427]
[103.65350342 -325.77151489]
[118.62030029 -324.49743652]
[133.30128479 -321.31985474]
[147.45538330 -316.29098511]
[160.85017395 -309.49331665]
[173.26570129 -301.03857422]
[184.49809265 -291.06552124]
[194.36288452 -279.73791504]
[202.69810486 -267.24182129]
[209.36688232 -253.78242493]
[214.25971985 -239.58071899]
[217.29623413 -224.86990356]
[218.42660522 -209.89157104]
[217.63224792 -194.89166260]
[214.92622375 -180.11648560]
[210.35293579 -165.80867004]
[203.98751831 -152.20317078]
[195.93447876 -139.52339172]
[186.32604980 -127.97754669]
[175.32002258 -117.75522614]
[163.09712219 -109.02429962]
[149.85806274 -101.92813873]
[135.82023621 -96.58325195]
[121.21416473 -93.07742310]
[106.27968597 -91.46820831]
[105.96762848 -76.47145844]
[105.65557098 -61.47470093]
[105.34351349 -46.47794724]
[118.78319550 -34.11782837]
[118.98950195 -15.54217720]
[105.36989594 -2.44616008]
[105.68195343 12.55059338]
[105.99401093 27.54734802]
[106.30606842 42.54410172]
[106.61812592 57.54085541]
[120.73242950 62.36032867]
[132.34928894 71.71392059]
[140.06930542 84.47488403]
[142.96253967 99.10602570]
[140.68045044 113.84485626]
[133.49794006 126.91591644]
[122.28023529 136.74465942]
[108.37863159 142.14709473]
[108.69068909 157.14384460]
[123.32787323 160.77536011]
[136.51599121 168.06637573]
[147.35896301 178.51463318]
[155.12182617 191.40356445]
[159.28054810 205.85150146]
[159.55741882 220.87188721]
[155.93957520 235.44075012]
[148.67945862 248.56642151]
[138.27722168 259.35705566]
[125.44628143 267.08129883]
[111.06436157 271.21771240]
[111.37641907 286.21447754]
[111.68847656 301.21121216]
[112.00053406 316.20797729]
[112.31259155 331.20474243]
[112.62464905 346.20147705]
[112.93669891 361.19824219]
[113.24875641 376.19497681]
[113.56081390 391.19174194]
[113.87287140 406.18850708]
[128.52786255 409.77926636]
[141.75367737 417.04153442]
[152.64854431 427.48010254]
[160.46963501 440.38333130]
[164.68370056 454.87139893]
[165.00343323 469.95648193]
[161.40699768 484.61010742]
[154.13963318 497.83309937]
[143.69683838 508.72393799]
[130.79060364 516.54003906]
[116.30091858 520.74853516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[31 119]
[32 118]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[49 103]
[50 102]
[51 101]
[52 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
