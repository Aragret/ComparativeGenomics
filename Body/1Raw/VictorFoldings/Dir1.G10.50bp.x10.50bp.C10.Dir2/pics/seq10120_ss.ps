%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCACUCUCAGGGGGGGGGGCUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGACUAGCUxxxxxxxxxxUAGUACUUGCCGCAGUACUCUUAAAACUAGGCGGCUAUGGUAUAAUACGCCCCCCCCCCCCUCACACUCA\
) } def
/len { sequence length } bind def

/coor [
[93.79794312 439.44024658]
[80.57774353 432.16778564]
[69.69094086 421.72076416]
[61.87981033 408.81152344]
[57.67692947 394.32022095]
[57.36885452 379.23486328]
[60.97659683 364.58404541]
[68.25417328 351.36666870]
[78.70537567 340.48388672]
[91.61763763 332.67776489]
[106.11057281 328.48046875]
[105.79852295 313.48370361]
[105.48646545 298.48696899]
[105.17440796 283.49020386]
[104.86235046 268.49343872]
[104.55029297 253.49668884]
[104.23823547 238.49993896]
[103.92618561 223.50318909]
[103.61412811 208.50643921]
[103.30207062 193.50967407]
[102.99001312 178.51292419]
[101.74314117 163.56483459]
[99.56629944 148.72363281]
[97.38946533 133.88243103]
[95.21263123 119.04122162]
[77.56993103 103.11799622]
[87.19415283 77.76655579]
[76.98066711 66.78089142]
[66.76718903 55.79522324]
[51.70404434 50.95660400]
[48.70468903 36.36711884]
[38.49120712 25.38145256]
[28.27772903 14.39578819]
[18.06424904 3.41012311]
[6.17186928 -5.73161125]
[-7.07071638 -12.77674580]
[-20.31330299 -19.82188034]
[-30.36681175 -8.58843231]
[-42.81692123 -0.08794998]
[-56.93980026 5.18535852]
[-71.91436005 6.92491055]
[-86.86999512 5.02957010]
[-100.93721008 -0.39046949]
[-113.29815674 -9.02009487]
[-123.23418427 -20.35758972]
[-130.16763306 -33.74380875]
[-133.69537354 -48.40049362]
[-133.61233521 -63.47552490]
[-129.92333984 -78.09246063]
[-122.84286499 -91.40148163]
[-112.78254700 -102.62883759]
[-100.32728577 -111.12177277]
[-86.20121002 -116.38651276]
[-71.22560120 -118.11698914]
[-56.27111435 -116.21257782]
[-42.20718765 -110.78401184]
[-29.85147285 -102.14689636]
[-19.92232132 -90.80337524]
[-12.99699879 -77.41295624]
[-9.47813416 -62.75413895]
[-9.57031059 -47.67916107]
[-13.26816750 -33.06446838]
[-0.02558153 -26.01933098]
[13.21700382 -18.97419739]
[5.82736921 -32.02767563]
[3.25317025 -46.80514145]
[5.79370785 -61.58843231]
[13.15359592 -74.65870667]
[24.47710609 -84.49629211]
[38.44766235 -89.95738220]
[53.44092178 -90.40702820]
[67.71363068 -85.79293823]
[79.60630798 -76.65159607]
[87.73621368 -64.04585266]
[91.15807343 -49.44137573]
[89.47404480 -34.53620529]
[82.87992859 -21.06336021]
[72.14240265 -10.58931446]
[58.50992584 -4.33187628]
[43.56752777 -3.01859331]
[29.04991341 -6.80335665]
[39.26339340 4.18230820]
[49.47687149 15.16797256]
[59.69035339 26.15363693]
[74.02296448 30.20648956]
[77.75285339 45.58174515]
[87.96633148 56.56740952]
[98.17981720 67.55307770]
[112.94586945 70.19194031]
[126.33215332 63.42382431]
[139.71844482 56.65570831]
[153.10472107 49.88759232]
[166.49101257 43.11948013]
[179.73359680 36.07434464]
[192.82675171 28.75523949]
[205.91990662 21.43613243]
[206.76496887 6.03193235]
[215.82254028 -6.45662498]
[230.20236206 -12.04448605]
[245.31590271 -8.94858360]
[256.34045410 1.84318972]
[259.75817871 16.88721848]
[254.47843933 31.38300896]
[242.18600464 40.70500565]
[226.80334473 41.87859726]
[213.23901367 34.52928925]
[200.14585876 41.84839249]
[187.05270386 49.16749954]
[184.90213013 53.49769211]
[179.97532654 56.49065781]
[173.25912476 56.50576401]
[159.87283325 63.27388000]
[146.48655701 70.04199219]
[133.10026550 76.81011200]
[119.71398163 83.57822418]
[123.32371521 93.73028564]
[122.32185364 103.81635284]
[117.43225098 111.95856476]
[110.05383301 116.86438751]
[112.23067474 131.70559692]
[114.40750885 146.54679871]
[116.58434296 161.38800049]
[126.70574188 150.31744385]
[141.68087769 149.45402527]
[153.00753784 159.28797913]
[154.25500488 174.23600769]
[144.71498108 185.81134033]
[129.80387878 187.44201660]
[117.98677063 178.20086670]
[118.29882050 193.19763184]
[118.61087799 208.19438171]
[118.92293549 223.19113159]
[119.23499298 238.18788147]
[119.54705048 253.18464661]
[119.85910797 268.18139648]
[120.17115784 283.17816162]
[120.48321533 298.17489624]
[120.79527283 313.17166138]
[121.10733032 328.16839600]
[135.76232910 331.75918579]
[148.98812866 339.02142334]
[159.88299561 349.46002197]
[167.70410156 362.36325073]
[171.91816711 376.85131836]
[172.23788452 391.93640137]
[168.64146423 406.58999634]
[161.37409973 419.81301880]
[150.93130493 430.70385742]
[138.02507019 438.51995850]
[123.53537750 442.72842407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 122]
[23 121]
[24 120]
[25 119]
[27 88]
[28 87]
[29 86]
[31 84]
[32 83]
[33 82]
[34 81]
[35 64]
[36 63]
[37 62]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[94 108]
[95 107]
[96 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
