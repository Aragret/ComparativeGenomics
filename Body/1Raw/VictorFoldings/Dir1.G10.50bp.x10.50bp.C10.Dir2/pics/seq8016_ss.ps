%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACCCCCAUACUGGGGGGGGGGCCUUACACUAUUCCUCAUCACCCAACUAAAAAUAUUAAACACAAACUACCxxxxxxxxxxGAUUAAAAAUGCCCUAGCCCACUUCUUACCACAAGGCACACCUACACCCCCCCCCCCCCCUUAUCCCCAUACU\
) } def
/len { sequence length } bind def

/coor [
[78.46566772 377.32806396]
[66.39205170 368.35351562]
[56.17325211 357.31311035]
[48.15731812 344.58282471]
[42.61727142 330.59631348]
[39.74180222 315.82992554]
[39.62885284 300.78659058]
[42.28226471 285.97869873]
[47.61166763 271.91058350]
[55.43553925 259.06137085]
[65.48740387 247.86875916]
[77.42490387 238.71394348]
[90.84144592 231.90872192]
[105.28006744 227.68487549]
[103.78180695 212.75988770]
[102.28354645 197.83489990]
[100.78529358 182.90991211]
[99.28703308 167.98492432]
[97.78877258 153.05995178]
[96.29051971 138.13496399]
[94.79225922 123.20996857]
[93.29399872 108.28498840]
[90.45969391 93.55519867]
[86.31231689 79.13995361]
[82.16493225 64.72470856]
[78.01755524 50.30946732]
[73.87017059 35.89422607]
[59.19475937 39.02743912]
[44.33653259 41.12931061]
[29.36788177 42.18959808]
[14.36173153 42.20314026]
[-0.60880882 41.16986847]
[-15.47080326 39.09481430]
[-30.15184593 35.98809433]
[-44.58041000 31.86483574]
[-58.68620300 26.74513245]
[-72.40049744 20.65392685]
[-85.65648651 13.62089252]
[-98.38957977 5.68029547]
[-110.53774261 -3.12917781]
[-122.04179382 -12.76460838]
[-132.84568787 -23.17905235]
[-142.89677429 -34.32177353]
[-152.14610291 -46.13848114]
[-160.54861450 -58.57160950]
[-168.06335449 -71.56058502]
[-174.65371704 -85.04212189]
[-180.28759766 -98.95053864]
[-184.93756104 -113.21807861]
[-188.58091736 -127.77522278]
[-191.19995117 -142.55105591]
[-192.78189087 -157.47360229]
[-193.31903076 -172.47013855]
[-192.80874634 -187.46762085]
[-191.25352478 -202.39297485]
[-188.66094971 -217.17347717]
[-185.04365540 -231.73712158]
[-180.41925049 -246.01296997]
[-174.81028748 -259.93145752]
[-168.24406433 -273.42477417]
[-160.75259399 -286.42715454]
[-152.37237549 -298.87530518]
[-143.14421082 -310.70855713]
[-133.11308289 -321.86926270]
[-122.32785034 -332.30303955]
[-110.84107208 -341.95904541]
[-98.70870209 -350.79025269]
[-85.98984528 -358.75363159]
[-72.74647522 -365.81039429]
[-59.04310608 -371.92614746]
[-44.94650269 -377.07110596]
[-30.52534294 -381.22018433]
[-15.84988689 -384.35317993]
[-0.99163115 -386.45486450]
[13.97703552 -387.51492310]
[28.98318481 -387.52825928]
[43.95371246 -386.49475098]
[58.81567764 -384.41949463]
[73.49667358 -381.31256104]
[87.92517853 -377.18911743]
[102.03089905 -372.06921387]
[115.74510956 -365.97778320]
[129.00099182 -358.94458008]
[141.73397827 -351.00378418]
[153.88200378 -342.19415283]
[165.38592529 -332.55856323]
[176.18966675 -322.14395142]
[186.24060059 -311.00109863]
[195.48976135 -299.18423462]
[203.89208984 -286.75100708]
[211.40664673 -273.76190186]
[217.99681091 -260.28027344]
[223.63049316 -246.37178040]
[228.28024292 -232.10418701]
[231.92340088 -217.54698181]
[234.54222107 -202.77110291]
[236.12394714 -187.84854126]
[236.66087341 -172.85198975]
[236.15037537 -157.85452271]
[234.59494019 -142.92919922]
[232.00215149 -128.14872742]
[228.38464355 -113.58513641]
[223.76004028 -99.30935669]
[218.15087891 -85.39095306]
[211.58445740 -71.89773560]
[204.09280396 -58.89543533]
[195.71240234 -46.44740295]
[186.48406982 -34.61428452]
[176.45278931 -23.45373154]
[165.66740417 -13.02011299]
[154.18048096 -3.36426520]
[142.04798889 5.46677113]
[129.32902527 13.42997074]
[116.08554840 20.48653793]
[102.38208771 26.60209274]
[88.28541565 31.74684334]
[92.43279266 46.16208649]
[96.58017731 60.57732773]
[100.72756195 74.99256897]
[104.87493896 89.40781403]
[111.04453278 75.73535156]
[123.54833984 67.44953918]
[138.54418945 67.09645844]
[151.42411804 74.78459167]
[158.23036194 88.15152740]
[156.87149048 103.08985138]
[147.76506042 115.00928497]
[133.70932007 120.24721527]
[119.02331543 117.19411469]
[108.21898651 106.78672791]
[109.71724701 121.71171570]
[111.21549988 136.63670349]
[112.71376038 151.56169128]
[114.21202087 166.48667908]
[115.71028137 181.41166687]
[117.20853424 196.33663940]
[118.70679474 211.26162720]
[120.20505524 226.18661499]
[135.19514465 227.45623779]
[149.69664001 231.45887756]
[163.21563721 238.05822754]
[175.29167175 247.02951050]
[185.51344299 258.06716919]
[193.53280640 270.79525757]
[199.07662964 284.78030396]
[201.95606995 299.54589844]
[202.07307434 314.58920288]
[199.42366028 329.39782715]
[194.09805298 343.46737671]
[186.27764893 356.31869507]
[176.22879028 367.51400757]
[164.29376221 376.67205811]
[150.87905884 383.48089600]
[136.44157410 387.70861816]
[121.47305298 389.21124268]
[106.48330688 387.93759155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
