%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAACACCGGGGGGGGGGUCUUUACAGUGAAAUGCCCCAACUAAAUACUACCGUAUGGCCCACCAUAAxxxxxxxxxxCCCUCUCCUUCAUAAAUUAUUCAGCUUCCUACACUAUUAAAGUUUACCACCCCCCCCCCCAACCACCACC\
) } def
/len { sequence length } bind def

/coor [
[83.46591949 368.59823608]
[70.24572754 361.32577515]
[59.35892105 350.87875366]
[51.54779053 337.96951294]
[47.34490967 323.47821045]
[47.03683853 308.39285278]
[50.64457703 293.74203491]
[57.92214966 280.52465820]
[68.37335968 269.64187622]
[81.28562164 261.83572388]
[95.77855682 257.63845825]
[95.46649933 242.64169312]
[95.15444183 227.64494324]
[94.84239197 212.64819336]
[94.53033447 197.65144348]
[94.21827698 182.65467834]
[93.90621948 167.65792847]
[93.59416199 152.66117859]
[93.28210449 137.66442871]
[92.97005463 122.66767120]
[92.65799713 107.67091370]
[91.41111755 92.72282410]
[89.23428345 77.88162231]
[87.05744934 63.04041672]
[84.88060760 48.19921112]
[82.70377350 33.35800552]
[70.94563293 19.22555542]
[77.97487640 3.17595267]
[75.48975372 -11.61675453]
[73.00463867 -26.40946198]
[70.51951599 -41.20216751]
[55.57261276 -39.85577011]
[40.56650162 -39.65750504]
[25.58924103 -40.60853195]
[10.72872925 -42.70327759]
[-3.92782593 -45.92943954]
[-18.29441261 -50.26809311]
[-32.28672409 -55.69377518]
[-45.82264328 -62.17464447]
[-58.82273483 -69.67266846]
[-71.21070862 -78.14384460]
[-82.91387177 -87.53845978]
[-93.86353302 -97.80137634]
[-103.99545288 -108.87238312]
[-113.25015259 -120.68649292]
[-121.57333374 -133.17437744]
[-128.91613770 -146.26277161]
[-135.23550415 -159.87484741]
[-140.49430847 -173.93072510]
[-144.66171265 -188.34791565]
[-147.71327209 -203.04180908]
[-149.63104248 -217.92619324]
[-150.40380859 -232.91371155]
[-150.02700806 -247.91641235]
[-148.50285339 -262.84622192]
[-145.84031677 -277.61557007]
[-142.05497742 -292.13775635]
[-137.16909790 -306.32757568]
[-131.21131897 -320.10174561]
[-124.21661377 -333.37942505]
[-116.22603607 -346.08270264]
[-107.28646088 -358.13705444]
[-97.45037079 -369.47167969]
[-86.77547455 -380.02011108]
[-75.32442474 -389.72042847]
[-63.16441345 -398.51571655]
[-50.36680984 -406.35433960]
[-37.00671387 -413.19030762]
[-23.16252327 -418.98352051]
[-8.91549015 -423.69995117]
[5.65078163 -427.31195068]
[20.45080948 -429.79827881]
[35.39773941 -431.14440918]
[50.40385818 -431.34237671]
[65.38109589 -430.39108276]
[80.24156952 -428.29605103]
[94.89806366 -425.06961060]
[109.26457214 -420.73068237]
[123.25677490 -415.30471802]
[136.79257202 -408.82360840]
[149.79252625 -401.32534790]
[162.18034363 -392.85391235]
[173.88331604 -383.45907593]
[184.83279419 -373.19595337]
[194.96449280 -362.12475586]
[204.21897888 -350.31048584]
[212.54191589 -337.82241821]
[219.88447571 -324.73391724]
[226.20356750 -311.12170410]
[231.46212769 -297.06573486]
[235.62925720 -282.64846802]
[238.68052673 -267.95449829]
[240.59802246 -253.07008362]
[241.37049866 -238.08255005]
[240.99340820 -223.07986450]
[239.46897888 -208.15007019]
[236.80615234 -193.38076782]
[233.02055359 -178.85865784]
[228.13439941 -164.66893005]
[222.17636108 -150.89488220]
[215.18141174 -137.61732483]
[207.19058228 -124.91419983]
[198.25077820 -112.86003876]
[188.41447449 -101.52558899]
[177.73937988 -90.97736359]
[166.28814697 -81.27725983]
[154.12796021 -72.48221588]
[141.33021545 -64.64382935]
[127.96998596 -57.80810928]
[114.12568665 -52.01516724]
[99.87856293 -47.29900360]
[85.31222534 -43.68728638]
[87.79734039 -28.89458084]
[90.28246307 -14.10187340]
[92.76757812 0.69083422]
[102.46028900 7.99553633]
[104.62084961 20.34668922]
[97.54497528 31.18116760]
[99.72181702 46.02237320]
[101.89865112 60.86357880]
[104.07548523 75.70478821]
[106.25232697 90.54598999]
[116.37371826 79.47542572]
[131.34884644 78.61201477]
[142.67552185 88.44596100]
[143.92297363 103.39399719]
[134.38296509 114.96932220]
[119.47186279 116.59999847]
[107.65474701 107.35885620]
[107.96680450 122.35561371]
[108.27886200 137.35237122]
[108.59091949 152.34912109]
[108.90297699 167.34587097]
[109.21502686 182.34262085]
[109.52708435 197.33938599]
[109.83914185 212.33613586]
[110.15119934 227.33288574]
[110.46325684 242.32963562]
[110.77531433 257.32638550]
[125.43030548 260.91717529]
[138.65611267 268.17941284]
[149.55097961 278.61801147]
[157.37207031 291.52124023]
[161.58615112 306.00927734]
[161.90586853 321.09439087]
[158.30944824 335.74798584]
[151.04208374 348.97100830]
[140.59927368 359.86184692]
[127.69304657 367.67794800]
[113.20335388 371.88641357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[28 115]
[29 114]
[30 113]
[31 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
