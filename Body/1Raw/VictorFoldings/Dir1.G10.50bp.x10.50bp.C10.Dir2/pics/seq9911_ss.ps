%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUAACUACGGGGGGGGGGCUGACUCCUACCCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGxxxxxxxxxxAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUCCCCCCCCCCUACUAACAAC\
) } def
/len { sequence length } bind def

/coor [
[93.60584259 553.90588379]
[79.75990295 547.88983154]
[68.05123901 538.36041260]
[59.34871674 526.02478027]
[54.29811478 511.79821777]
[53.27422333 496.73654175]
[56.35302353 481.95739746]
[63.30604553 468.55746460]
[73.61733246 457.53112793]
[86.52171326 449.69662476]
[101.06159973 445.63531494]
[101.06159973 430.63531494]
[101.06159973 415.63531494]
[101.06159973 400.63531494]
[101.06159973 385.63531494]
[101.06159973 370.63531494]
[101.06159973 355.63531494]
[101.06159973 340.63531494]
[101.06159973 325.63531494]
[101.06159973 310.63531494]
[93.32429504 297.90802002]
[101.06159973 284.10784912]
[101.06159973 269.10784912]
[101.06159973 254.10786438]
[89.15279388 237.29406738]
[99.91061401 218.80981445]
[98.97498322 203.83901978]
[98.03936005 188.86822510]
[97.10372925 173.89743042]
[82.67570496 171.89637756]
[68.91975403 167.10617065]
[56.36952972 159.71266174]
[45.51190186 150.00265503]
[36.76807404 138.35287476]
[30.47725677 125.21522522]
[26.88349724 111.09938049]
[26.12620926 96.55294800]
[28.23476982 82.14024353]
[33.12738037 68.42037964]
[40.61424255 55.92562103]
[50.40490341 45.14067459]
[62.11955261 36.48393250]
[75.30372620 30.29122353]
[89.44596863 26.80278969]
[88.82199097 11.81577301]
[88.19801331 -3.17124343]
[87.57403564 -18.15826035]
[78.60496521 -27.48614883]
[78.42852020 -40.02360535]
[86.59200287 -49.00497055]
[86.27994537 -64.00172424]
[85.96788788 -78.99848175]
[85.65583038 -93.99523163]
[76.88275146 -103.50769043]
[76.96717834 -116.04610443]
[85.31573486 -124.85569763]
[85.31573486 -139.85569763]
[81.76097107 -154.42840576]
[74.85397339 -167.74356079]
[67.94697571 -181.05871582]
[61.03997803 -194.37387085]
[46.24233627 -200.57139587]
[42.00037384 -216.04348755]
[51.56815720 -228.92124939]
[67.60610199 -229.32598877]
[77.81127167 -216.94721985]
[74.35513306 -201.28086853]
[81.26213074 -187.96571350]
[88.16912842 -174.65055847]
[95.07612610 -161.33540344]
[96.07048798 -176.30239868]
[100.68847656 -190.57385254]
[108.65065765 -203.28619385]
[119.47525024 -213.67022705]
[132.50727844 -221.09762573]
[146.95819092 -225.11897278]
[161.95356750 -225.49093628]
[176.58609009 -222.19100952]
[189.97033691 -215.41886902]
[201.29646301 -205.58427429]
[209.87911987 -193.28233337]
[215.19898987 -179.25740051]
[216.93418884 -164.35809326]
[214.97972107 -149.48597717]
[209.45382690 -135.54092407]
[200.69088745 -123.36672974]
[189.22113037 -113.70005035]
[175.73858643 -107.12579346]
[161.05905151 -104.04176331]
[146.07075500 -104.63456726]
[131.68064880 -108.86833954]
[118.75944519 -116.48690033]
[108.08898926 -127.02925110]
[100.31573486 -139.85569763]
[100.31573486 -124.85569763]
[109.90684509 -110.19245911]
[100.65258789 -94.30728912]
[100.96464539 -79.31053162]
[101.27670288 -64.31378174]
[101.58875275 -49.31702805]
[111.48283386 -34.85649109]
[102.56105804 -18.78223610]
[103.18503571 -3.79522085]
[103.80901337 11.19179535]
[104.43298340 26.17881203]
[119.61033630 28.69324112]
[133.93907166 34.29339218]
[146.79913330 42.73692322]
[157.63401794 53.65845108]
[165.97485352 66.58535767]
[171.46069336 80.95824432]
[173.85415649 96.15514374]
[173.05166626 111.51842499]
[169.08793640 126.38326263]
[162.13450623 140.10638428]
[152.49227905 152.09396362]
[140.57849121 161.82720947]
[126.90872955 168.88497925]
[112.07452393 172.96180725]
[113.01014709 187.93260193]
[113.94577789 202.90339661]
[114.88140869 217.87417603]
[122.81367493 223.18162537]
[127.31329346 231.44139099]
[127.46619415 240.70777893]
[123.36559296 248.86445618]
[116.06159973 254.10786438]
[116.06159973 269.10784912]
[116.06159973 284.10784912]
[123.79889679 297.90802002]
[116.06159973 310.63531494]
[116.06159973 325.63531494]
[116.06159973 340.63531494]
[116.06159973 355.63531494]
[116.06159973 370.63531494]
[116.06159973 385.63531494]
[116.06159973 400.63531494]
[116.06159973 415.63531494]
[116.06159973 430.63531494]
[116.06159973 445.63531494]
[130.60148621 449.69662476]
[143.50585938 457.53112793]
[153.81715393 468.55746460]
[160.77017212 481.95739746]
[163.84896851 496.73654175]
[162.82507324 511.79821777]
[157.77447510 526.02478027]
[149.07196045 538.36041260]
[137.36329651 547.88983154]
[123.51734924 553.90588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 129]
[23 128]
[24 127]
[26 122]
[27 121]
[28 120]
[29 119]
[44 105]
[45 104]
[46 103]
[47 102]
[50 100]
[51 99]
[52 98]
[53 97]
[56 95]
[57 94]
[58 70]
[59 69]
[60 68]
[61 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
