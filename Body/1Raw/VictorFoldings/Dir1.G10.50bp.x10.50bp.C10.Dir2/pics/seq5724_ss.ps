%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUACUCCCCAGGGGGGGGGGUAUCUAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCxxxxxxxxxxUUGGCGCCUGCCUGAUCCUCCAAAUCACCACAGGACUAUUCCUAGCCAUGCCCCCCCCCCCACUACUCACCA\
) } def
/len { sequence length } bind def

/coor [
[103.87583160 380.35504150]
[89.71523285 375.20004272]
[77.12548828 366.91781616]
[66.78554535 355.95504761]
[59.25303650 342.90292358]
[54.93416977 328.46533203]
[54.06186295 313.42086792]
[56.68315506 298.58087158]
[62.65668106 284.74563599]
[71.66030121 272.66128540]
[83.20845795 262.97952271]
[96.67836761 256.22244263]
[111.34362793 252.75445557]
[111.34362793 237.75445557]
[111.34362793 222.75445557]
[111.34362793 207.75445557]
[111.34362793 192.75445557]
[111.34362793 177.75445557]
[111.34362793 162.75445557]
[111.34362793 147.75445557]
[111.34362793 132.75445557]
[111.34362793 117.75445557]
[99.72503662 119.64525604]
[89.76130676 115.07767487]
[84.46908569 106.41530609]
[69.50681305 105.35211182]
[55.19293594 112.09180450]
[43.04609299 103.47185516]
[28.08381844 102.40866089]
[13.12154579 101.34546661]
[7.86215830 115.50581360]
[-1.17472398 127.61000824]
[-13.25652218 136.67680359]
[-27.40381813 141.97120667]
[-42.46975327 143.06401062]
[-57.23300171 139.86665344]
[-70.49677277 132.63830566]
[-81.18582916 121.96493530]
[-88.43366241 108.71179962]
[-91.65271759 93.95326233]
[-90.58204651 78.88573456]
[-85.30843353 64.73067474]
[-76.25939941 52.63557053]
[-64.16849518 43.58091354]
[-50.01588821 38.30072784]
[-34.94886017 37.22305298]
[-20.18883324 40.43524933]
[-6.93233013 47.67692184]
[3.74600005 58.36101913]
[10.98051357 71.62142944]
[14.18474102 86.38319397]
[29.14701462 87.44638824]
[44.10928726 88.50958252]
[57.35296631 81.69384766]
[70.57001495 90.38983917]
[85.53228760 91.45303345]
[102.27385712 81.20069885]
[120.17183685 93.91758728]
[129.94242859 82.53621674]
[115.71965027 87.30200195]
[100.77520752 88.59178925]
[85.94619751 86.33334351]
[72.06327820 80.65316010]
[59.90409088 71.86941528]
[50.14973068 60.47413254]
[43.34658432 47.10561752]
[39.87573624 32.51269913]
[39.93159866 17.51280403]
[43.51104355 2.94614482]
[50.41357422 -10.37132931]
[60.25254059 -21.69364166]
[72.47681427 -30.38657379]
[86.40165710 -35.96319580]
[101.24707794 -38.11113358]
[116.18149567 -36.71006775]
[130.36837769 -31.83848000]
[143.01304626 -23.76925278]
[153.40721130 -12.95438194]
[160.96862793 0.00033927]
[165.27377319 14.36925507]
[166.08148193 29.34749222]
[163.34651184 44.09605026]
[157.22206116 57.78878784]
[148.05418396 69.65564728]
[162.01199341 64.16205597]
[175.96980286 58.66846848]
[189.92762756 53.17487717]
[203.39468384 46.56896591]
[216.20410156 38.76391602]
[228.93377686 30.82945633]
[241.66343689 22.89499664]
[254.39309692 14.96053600]
[258.01275635 -2.12553382]
[272.56774902 -11.15492916]
[288.83065796 -6.97573805]
[301.39688110 -15.16656017]
[313.96313477 -23.35738182]
[326.52935791 -31.54820442]
[328.22915649 -47.09313202]
[339.55902100 -57.87124252]
[355.16940308 -58.79344559]
[367.68951416 -49.42430496]
[371.20776367 -34.18763733]
[364.06292725 -20.27773666]
[349.62857056 -14.26243019]
[334.72018433 -18.98196220]
[322.15396118 -10.79114056]
[309.58770752 -2.60031819]
[297.02145386 5.59050369]
[296.14355469 18.47996712]
[287.86437988 28.65049362]
[275.04565430 32.23036957]
[262.32754517 27.69019890]
[249.59790039 35.62466049]
[236.86822510 43.55912018]
[224.13856506 51.49357986]
[220.10195923 57.73741150]
[211.06953430 59.45682144]
[225.72734070 62.64250183]
[235.82940674 73.73070526]
[237.63999939 88.62103271]
[230.48954773 101.80705261]
[217.02230835 108.41259766]
[202.21841431 105.99494934]
[191.55235291 95.44814301]
[188.96841431 80.67237091]
[195.42120361 67.13269043]
[181.46339417 72.62628174]
[167.50558472 78.11986542]
[153.54777527 83.61345673]
[141.32379150 92.30680847]
[131.55320740 103.68817902]
[126.34362793 117.75445557]
[126.34362793 132.75445557]
[126.34362793 147.75445557]
[126.34362793 162.75445557]
[126.34362793 177.75445557]
[126.34362793 192.75445557]
[126.34362793 207.75445557]
[126.34362793 222.75445557]
[126.34362793 237.75445557]
[126.34362793 252.75445557]
[141.00889587 256.22244263]
[154.47880554 262.97952271]
[166.02696228 272.66128540]
[175.03057861 284.74563599]
[181.00410461 298.58087158]
[183.62539673 313.42086792]
[182.75309753 328.46533203]
[178.43421936 342.90292358]
[170.90171814 355.95504761]
[160.56178284 366.91781616]
[147.97203064 375.20004272]
[133.81143188 380.35504150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[25 56]
[26 55]
[28 53]
[29 52]
[30 51]
[58 132]
[59 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 118]
[89 116]
[90 115]
[91 114]
[92 113]
[95 109]
[96 108]
[97 107]
[98 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
