%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCACUACAGGGGGGGGGGAUCUUCCUAGGAACAACAUAUGACGCACUCUCCCCUGAACUCUACACAACxxxxxxxxxxAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACUUCCCCCCCCCCUCACCGCUACA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 392.10595703]
[71.01555634 386.55294800]
[58.81560135 377.68661499]
[49.20452881 366.06430054]
[42.78650284 352.41659546]
[39.96496582 337.60140991]
[40.91728210 322.55004883]
[45.58358765 308.20861816]
[53.67055511 295.47866821]
[64.66983032 285.16040039]
[77.88998413 277.90240479]
[92.50000000 274.16098022]
[92.50000000 259.16098022]
[92.50000000 244.16098022]
[92.50000000 229.16098022]
[92.50000000 214.16098022]
[92.50000000 199.16098022]
[92.50000000 184.16098022]
[92.50000000 169.16098022]
[92.50000000 154.16098022]
[92.50000000 139.16098022]
[92.50000000 124.16097260]
[80.84619141 116.52677917]
[75.00112152 103.88054657]
[76.73739624 90.05746460]
[85.52847290 79.24964142]
[80.98117828 64.95550537]
[76.43389130 50.66137695]
[65.32707214 44.02494812]
[61.85533905 31.97843742]
[67.36322021 21.16522789]
[63.11037064 6.78074789]
[58.85752487 -7.60373354]
[54.60467911 -21.98821449]
[40.13064194 -27.26158714]
[31.63637161 -39.89886475]
[32.20542526 -54.93682098]
[41.41013718 -66.61634064]
[37.15729141 -81.00082397]
[32.90444565 -95.38530731]
[21.57197380 -106.42549133]
[25.38330269 -120.82420349]
[21.13045502 -135.20869446]
[6.33271933 -132.65065002]
[-8.66193104 -131.82786560]
[-23.65071106 -132.75144958]
[-38.43091202 -135.40890503]
[-52.80265427 -139.76432800]
[-66.57157135 -145.75877380]
[-79.55145264 -153.31120300]
[-91.56677246 -162.31945801]
[-102.45501709 -172.66172791]
[-112.06895447 -184.19813538]
[-120.27855682 -196.77267456]
[-126.97280121 -210.21528625]
[-132.06115723 -224.34416199]
[-135.47480774 -238.96823120]
[-137.16758728 -253.88972473]
[-137.11659241 -268.90686035]
[-135.32254028 -283.81649780]
[-131.80967712 -298.41705322]
[-126.62550354 -312.51107788]
[-119.84013367 -325.90789795]
[-111.54534149 -338.42642212]
[-101.85329437 -349.89727783]
[-90.89507294 -360.16537476]
[-78.81887054 -369.09185791]
[-65.78800201 -376.55596924]
[-51.97870255 -382.45678711]
[-37.57772064 -386.71450806]
[-22.77981567 -389.27154541]
[-7.78511000 -390.09335327]
[7.20360804 -389.16876221]
[21.98363304 -386.51031494]
[36.35508347 -382.15393066]
[50.12360001 -376.15856934]
[63.10298157 -368.60528564]
[75.11769104 -359.59622192]
[86.00524902 -349.25320435]
[95.61841583 -337.71615601]
[103.82717896 -325.14108276]
[110.52052307 -311.69802856]
[115.60794067 -297.56881714]
[119.02060699 -282.94451904]
[120.71239471 -268.02291870]
[120.66040802 -253.00578308]
[118.86535645 -238.09625244]
[115.35151672 -223.49592590]
[110.16640472 -209.40226746]
[103.38014221 -196.00588989]
[95.08451080 -183.48793030]
[85.39170074 -172.01771545]
[74.43279266 -161.75035095]
[62.35599518 -152.82467651]
[49.32463074 -145.36143494]
[35.51493454 -139.46153259]
[39.76778412 -125.07704926]
[50.79606247 -115.06574249]
[47.28892517 -99.63815308]
[51.54177475 -85.25366974]
[55.79462051 -70.86918640]
[69.87055206 -66.07271576]
[78.52542114 -53.76185608]
[78.26865387 -38.53728867]
[68.98915863 -26.24106026]
[73.24200439 -11.85657978]
[77.49485016 2.52790093]
[81.74769592 16.91238213]
[95.10266876 28.25650978]
[90.72801971 46.11408615]
[95.27531433 60.40821838]
[99.82260132 74.70234680]
[117.61098480 81.83806610]
[125.29111481 99.39826965]
[139.71850586 103.50321960]
[149.81283569 92.05475616]
[163.87814331 86.12772369]
[179.12176514 86.89894104]
[192.51705933 94.21527863]
[201.40438843 106.62406921]
[204.01914978 121.66155243]
[199.84220886 136.34201050]
[189.70286560 147.75062561]
[175.61433411 153.62222290]
[160.37385559 152.79098511]
[147.00747681 145.42195129]
[138.16908264 132.97825623]
[135.61355591 117.93060303]
[121.18617249 113.82565308]
[115.24561310 120.18846130]
[107.50000000 124.16097260]
[107.50000000 139.16098022]
[107.50000000 154.16098022]
[107.50000000 169.16098022]
[107.50000000 184.16098022]
[107.50000000 199.16098022]
[107.50000000 214.16098022]
[107.50000000 229.16098022]
[107.50000000 244.16098022]
[107.50000000 259.16098022]
[107.50000000 274.16098022]
[122.11001587 277.90240479]
[135.33016968 285.16040039]
[146.32945251 295.47866821]
[154.41641235 308.20861816]
[159.08271790 322.55004883]
[160.03503418 337.60140991]
[157.21350098 352.41659546]
[150.79547119 366.06430054]
[141.18440247 377.68661499]
[128.98443604 386.55294800]
[114.96250153 392.10595703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[26 112]
[27 111]
[28 110]
[31 108]
[32 107]
[33 106]
[34 105]
[38 101]
[39 100]
[40 99]
[42 97]
[43 96]
[114 129]
[115 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
