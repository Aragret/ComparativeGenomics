%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCUAUUUGGGGGGGGGGCCCCCUCUAUUGAUCCCCACCUCCAAAUAUCUCAUCAACAACCGACUAAUxxxxxxxxxxCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACGCCUUCUUCAAAGCCCCCCCCCCCCAUACUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-74.79341888 265.60159302]
[-84.43193817 254.79498291]
[-93.40342712 243.42851257]
[-101.67543030 231.54331970]
[-109.21804047 219.18237305]
[-116.00396729 206.39036560]
[-129.66020203 212.59577942]
[-143.31645203 218.80117798]
[-156.97268677 225.00659180]
[-170.62893677 231.21200562]
[-184.28517151 237.41740417]
[-197.94142151 243.62281799]
[-211.59765625 249.82821655]
[-225.25389099 256.03363037]
[-238.91014099 262.23904419]
[-248.27316284 274.99224854]
[-263.06115723 273.21328735]
[-276.71737671 279.41867065]
[-290.37362671 285.62408447]
[-304.02987671 291.82949829]
[-303.48107910 307.02050781]
[-308.79208374 321.26345825]
[-319.15304565 332.38638306]
[-332.98391724 338.69311523]
[-348.17565918 339.22192383]
[-362.41162109 333.89218140]
[-373.52090454 323.51663208]
[-379.80941772 309.67745972]
[-380.31823730 294.48501587]
[-374.96978760 280.25610352]
[-364.57962036 269.16049194]
[-350.73217773 262.89016724]
[-335.53909302 262.40130615]
[-321.31723022 267.76849365]
[-310.23529053 278.17324829]
[-296.57904053 271.96783447]
[-282.92279053 265.76245117]
[-269.26657104 259.55703735]
[-260.88031006 247.24768066]
[-245.11553955 248.58279419]
[-231.45930481 242.37738037]
[-217.80307007 236.17198181]
[-204.14682007 229.96656799]
[-190.49058533 223.76116943]
[-176.83433533 217.55575562]
[-163.17810059 211.35035706]
[-149.52185059 205.14494324]
[-135.86561584 198.93952942]
[-122.20937347 192.73413086]
[-127.74659729 178.15440369]
[-132.32836914 163.24679565]
[-135.93544006 148.07385254]
[-138.55268860 132.69921875]
[-140.16914368 117.18740082]
[-140.77801514 101.60348511]
[-140.37675476 86.01283264]
[-138.96704102 70.48086548]
[-136.55477905 55.07274246]
[-133.15011597 39.85309982]
[-128.76730347 24.88579178]
[-123.42475128 10.23361111]
[-117.14486694 -4.04197311]
[-109.95398712 -17.88107109]
[-101.88229370 -31.22562218]
[-92.96364594 -44.01964188]
[-83.23545074 -56.20945740]
[-72.73853302 -67.74392700]
[-61.51692200 -78.57466125]
[-49.61770248 -88.65621948]
[-37.09078979 -97.94630432]
[-23.98874092 -106.40595245]
[-10.36652088 -113.99966431]
[3.71871877 -120.69557953]
[18.20788765 -126.46561432]
[33.04019928 -131.28555298]
[48.15342712 -135.13519287]
[63.48416519 -137.99835205]
[78.96810150 -139.86305237]
[94.54026794 -140.72145081]
[110.13534546 -140.56994629]
[125.68789673 -139.40917969]
[141.13267517 -137.24401855]
[156.40490723 -134.08355713]
[171.44049072 -129.94104004]
[186.17636108 -124.83384705]
[200.55068970 -118.78341675]
[214.50318909 -111.81511688]
[227.97531128 -103.95819092]
[240.91053772 -95.24560547]
[253.25460815 -85.71389771]
[264.95571899 -75.40306854]
[275.96478271 -64.35636902]
[286.23565674 -52.62014771]
[298.12802124 -61.76188278]
[310.02041626 -70.90361786]
[315.77944946 -86.25827026]
[331.99868774 -88.68081665]
[341.99313354 -75.67916107]
[335.48135376 -60.62828064]
[319.16213989 -59.01123810]
[307.26974487 -49.86950302]
[295.37738037 -40.72776794]
[303.48345947 -28.72879601]
[310.85360718 -16.26425171]
[317.46118164 -3.37921286]
[323.28222656 9.87971687]
[328.29577637 23.46458435]
[332.48361206 37.32625961]
[335.83062744 51.41460419]
[338.32470703 65.67866516]
[339.95684814 80.06686401]
[340.72116089 94.52714539]
[340.61483765 109.00722504]
[339.63827515 123.45473480]
[337.79501343 137.81741333]
[335.09173584 152.04330444]
[331.53817749 166.08097839]
[327.14721680 179.87966919]
[321.93475342 193.38945007]
[315.91961670 206.56146240]
[309.12356567 219.34808350]
[301.57116699 231.70304871]
[293.28973389 243.58169556]
[284.30923462 254.94104004]
[274.66217041 265.74002075]
[264.38339233 275.93954468]
[253.51007080 285.50277710]
[242.08157349 294.39508057]
[230.13919067 302.58435059]
[217.72615051 310.04089355]
[204.88732910 316.73779297]
[191.66914368 322.65081787]
[178.11943054 327.75860596]
[164.28718567 332.04263306]
[150.22242737 335.48742676]
[135.97604370 338.08056641]
[121.59952545 339.81259155]
[107.14489746 340.67733765]
[92.66442871 340.67160034]
[78.21049500 339.79541016]
[63.83536148 338.05197144]
[49.59102249 335.44757080]
[35.52900314 331.99163818]
[21.70015144 327.69662476]
[8.15448952 322.57812500]
[-5.05899525 316.65463257]
[-17.89251328 309.94757080]
[-30.29965019 302.48117065]
[-42.23553085 294.28247070]
[-53.65699005 285.38110352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 49]
[7 48]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[17 38]
[18 37]
[19 36]
[20 35]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
