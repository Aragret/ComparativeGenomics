%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUAAAAGGGGGGGGGGCUUUACAGUCAGAGGUUCAAUUCCUCUUCUUAACAACAUACCCAUGGCCAxxxxxxxxxxUCACUUUCCUAGGACUUCUAACAGCCCUAGACCUCAACUACCUAACCAACCCCCCCCCCCAAACUUAAAA\
) } def
/len { sequence length } bind def

/coor [
[83.94391632 391.56945801]
[70.72371674 384.29699707]
[59.83691025 373.84997559]
[52.02577972 360.94073486]
[47.82289886 346.44943237]
[47.51482773 331.36407471]
[51.12257004 316.71325684]
[58.40014267 303.49588013]
[68.85134888 292.61309814]
[81.76361084 284.80694580]
[96.25654602 280.60968018]
[95.94448853 265.61291504]
[95.63243866 250.61616516]
[95.32038116 235.61940002]
[95.00832367 220.62265015]
[94.69626617 205.62590027]
[94.38420868 190.62915039]
[94.07215118 175.63238525]
[93.76010132 160.63563538]
[93.44804382 145.63888550]
[76.57965088 139.71553040]
[63.23261261 127.82076263]
[55.41371155 111.74302673]
[54.29855728 93.89967346]
[60.05481720 76.97353363]
[71.81700897 63.50952148]
[87.81664276 55.53201675]
[86.25905609 40.61310196]
[84.70147705 25.69419098]
[75.16803741 16.94391441]
[74.20991516 4.44187593]
[81.79727936 -5.03119946]
[80.55040741 -19.97928619]
[79.30353546 -34.92737198]
[78.05665588 -49.87546158]
[76.80978394 -64.82354736]
[61.80113602 -64.81497955]
[46.84304810 -66.04586029]
[32.03769302 -68.50777435]
[17.48621178 -72.18389893]
[3.28800559 -77.04913330]
[-10.45993423 -83.07023621]
[-23.66369438 -90.20607758]
[-36.23307800 -98.40791321]
[-48.08222580 -107.61971283]
[-59.13018799 -117.77855682]
[-69.30149841 -128.81503296]
[-78.52667999 -140.65377808]
[-86.74270630 -153.21388245]
[-93.89346313 -166.40957642]
[-99.93008423 -180.15071106]
[-104.81135559 -194.34341431]
[-108.50391388 -208.89073181]
[-110.98255157 -223.69329834]
[-112.23032379 -238.64997864]
[-112.23870850 -253.65863037]
[-111.00765228 -268.61669922]
[-108.54556274 -283.42202759]
[-104.86926270 -297.97348022]
[-100.00386047 -312.17160034]
[-93.98258972 -325.91949463]
[-86.84659576 -339.12316895]
[-78.64460754 -351.69244385]
[-69.43266296 -363.54147339]
[-59.27369308 -374.58932495]
[-48.23709106 -384.76049805]
[-36.39824677 -393.98553467]
[-23.83803558 -402.20141602]
[-10.64225960 -409.35202026]
[3.09894276 -415.38848877]
[17.29170227 -420.26959229]
[31.83906555 -423.96197510]
[46.64165878 -426.44042969]
[61.59836578 -427.68801880]
[76.60700989 -427.69622803]
[91.56507111 -426.46499634]
[106.37036896 -424.00271606]
[120.92176056 -420.32626343]
[135.11985779 -415.46069336]
[148.86764526 -409.43923950]
[162.07124329 -402.30310059]
[174.64042664 -394.10095215]
[186.48934937 -384.88888550]
[197.53707886 -374.72976685]
[207.70812988 -363.69305420]
[216.93302917 -351.85409546]
[225.14875793 -339.29379272]
[232.29919434 -326.09793091]
[238.33549500 -312.35665894]
[243.21641541 -298.16381836]
[246.90863037 -283.61642456]
[249.38691711 -268.81378174]
[250.63432312 -253.85707092]
[250.64236450 -238.84843445]
[249.41094971 -223.89038086]
[246.94850159 -209.08511353]
[243.27185059 -194.53376770]
[238.40611267 -180.33573914]
[232.38452148 -166.58801270]
[225.24819946 -153.38450623]
[217.04591370 -140.81541443]
[207.83369446 -128.96659851]
[197.67445374 -117.91899872]
[186.63761902 -107.74807739]
[174.79855347 -98.52332306]
[162.23814392 -90.30774689]
[149.04219055 -83.15746307]
[135.30085754 -77.12133026]
[121.10797882 -72.24057007]
[106.56052399 -68.54852295]
[91.75787354 -66.07041931]
[93.00474548 -51.12233353]
[94.25161743 -36.17424774]
[95.49849701 -21.22616005]
[96.74536896 -6.27807379]
[107.52216339 7.53715754]
[99.62039185 24.13661003]
[101.17797089 39.05552292]
[102.73554993 53.97443390]
[114.62714386 56.27492142]
[125.50933075 61.59283829]
[134.63113403 69.56120300]
[141.36308289 79.63012695]
[145.24058533 91.10475159]
[145.99607849 103.19323730]
[143.57742310 115.06135559]
[138.15151978 125.89010620]
[130.09281921 134.93220520]
[119.95742798 141.56364441]
[108.44479370 145.32682800]
[108.75685120 160.32357788]
[109.06890869 175.32032776]
[109.38096619 190.31709290]
[109.69302368 205.31384277]
[110.00507355 220.31059265]
[110.31713104 235.30734253]
[110.62918854 250.30410767]
[110.94124603 265.30084229]
[111.25330353 280.29760742]
[125.90829468 283.88836670]
[139.13410950 291.15063477]
[150.02897644 301.58923340]
[157.85006714 314.49243164]
[162.06413269 328.98049927]
[162.38386536 344.06561279]
[158.78742981 358.71920776]
[151.52006531 371.94219971]
[141.07727051 382.83303833]
[128.17103577 390.64916992]
[113.68135071 394.85763550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[27 119]
[28 118]
[29 117]
[32 115]
[33 114]
[34 113]
[35 112]
[36 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
