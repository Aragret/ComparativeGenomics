%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAGCUGCGGGGGGGGGGUGGCAUCACUAUACUACUAACAGACCGCAACCUCAACACCACCUUCUUCGxxxxxxxxxxCAAACAACAAAGCAUAAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACCCCCCCCCCCUCCUAGCCGC\
) } def
/len { sequence length } bind def

/coor [
[64.82075500 354.91714478]
[50.97481918 348.90112305]
[39.26615906 339.37170410]
[30.56363297 327.03604126]
[25.51303101 312.80950928]
[24.48913956 297.74783325]
[27.56793785 282.96868896]
[34.52096176 269.56875610]
[44.83224487 258.54241943]
[57.73662567 250.70790100]
[72.27651215 246.64659119]
[72.27651215 231.64659119]
[72.27651215 216.64659119]
[72.27651215 201.64659119]
[72.27651215 186.64659119]
[72.27651215 171.64659119]
[72.27651215 156.64659119]
[72.27651215 141.64659119]
[72.27651215 126.64659882]
[72.27651215 111.64659882]
[70.09967804 96.80538940]
[65.79209137 82.43720245]
[61.48450470 68.06902313]
[57.17692184 53.70083618]
[42.53729630 56.99721146]
[27.70338821 59.26434326]
[12.74746609 60.49118805]
[-2.25760341 60.67176437]
[-17.23871803 59.80519867]
[-32.12289047 57.89570618]
[-46.83760452 54.95259476]
[-61.31117249 50.99020004]
[-75.47307587 46.02782822]
[-89.25432587 40.08965683]
[-102.58777618 33.20461655]
[-115.40847015 25.40624428]
[-127.65394592 16.73254204]
[-139.26454163 7.22576237]
[-150.18368530 -3.06777644]
[-160.35818481 -14.09792519]
[-169.73847961 -25.81094551]
[-178.27885437 -38.14977264]
[-185.93771362 -51.05429077]
[-192.67774963 -64.46163177]
[-198.46609497 -78.30648041]
[-203.27456665 -92.52136993]
[-207.07975769 -107.03706360]
[-209.86309814 -121.78283691]
[-211.61103821 -136.68684387]
[-212.31507874 -151.67646790]
[-211.97177124 -166.67869568]
[-210.58277893 -181.62043762]
[-208.15489197 -196.42887878]
[-204.69993591 -211.03189087]
[-200.23472595 -225.35832214]
[-194.78103638 -239.33837891]
[-188.36541748 -252.90394592]
[-181.01914978 -265.98895264]
[-172.77799988 -278.52960205]
[-163.68212891 -290.46484375]
[-153.77586365 -301.73651123]
[-143.10743713 -312.28970337]
[-131.72885132 -322.07296753]
[-119.69553375 -331.03866577]
[-107.06610870 -339.14312744]
[-93.90210724 -346.34686279]
[-80.26766205 -352.61477661]
[-66.22920227 -357.91632080]
[-51.85512543 -362.22567749]
[-37.21545029 -365.52185059]
[-22.38150978 -367.78875732]
[-7.42557144 -369.01541138]
[7.57950068 -369.19577026]
[22.56060219 -368.32897949]
[37.44474792 -366.41928101]
[52.15942001 -363.47595215]
[66.63292694 -359.51333618]
[80.79476929 -354.55078125]
[94.57592773 -348.61239624]
[107.90928650 -341.72717285]
[120.72986603 -333.92861938]
[132.97520447 -325.25473022]
[144.58566284 -315.74780273]
[155.50466919 -305.45410156]
[165.67901611 -294.42379761]
[175.05914307 -282.71066284]
[183.59933472 -270.37170410]
[191.25801086 -257.46707153]
[197.99784851 -244.05963135]
[203.78599548 -230.21470642]
[208.59428406 -215.99974060]
[212.39924622 -201.48399353]
[215.18238831 -186.73818970]
[216.93011475 -171.83415222]
[217.63392639 -156.84451294]
[217.29040527 -141.84228516]
[215.90121460 -126.90057373]
[213.47311401 -112.09216309]
[210.01794434 -97.48919678]
[205.55252075 -83.16282654]
[200.09863281 -69.18285370]
[193.68283081 -55.61737442]
[186.33636475 -42.53248978]
[178.09503174 -29.99194527]
[168.99899292 -18.05683708]
[159.09255981 -6.78531313]
[148.42399597 3.76771283]
[137.04527283 13.55082607]
[125.01181793 22.51636505]
[112.38227844 30.62064934]
[99.21817780 37.82419586]
[85.58364105 44.09190750]
[71.54510498 49.39325333]
[75.85269165 63.76143646]
[80.16027832 78.12962341]
[84.46785736 92.49780273]
[102.53845978 84.44170380]
[114.16487885 98.19853973]
[127.82112122 104.40394592]
[141.47737122 110.60935974]
[156.18482971 104.82436371]
[170.64161682 111.21000671]
[176.27079773 125.97780609]
[169.73266602 140.36628723]
[154.90617371 145.83901978]
[140.58763123 139.14912415]
[135.27195740 124.26559448]
[121.61571503 118.06018829]
[107.95947266 111.85478210]
[98.12634277 115.65227509]
[87.27651215 111.64659882]
[87.27651215 126.64659882]
[87.27651215 141.64659119]
[87.27651215 156.64659119]
[87.27651215 171.64659119]
[87.27651215 186.64659119]
[87.27651215 201.64659119]
[87.27651215 216.64659119]
[87.27651215 231.64659119]
[87.27651215 246.64659119]
[101.81639862 250.70790100]
[114.72077942 258.54241943]
[125.03206635 269.56875610]
[131.98509216 282.96868896]
[135.06388855 297.74783325]
[134.03999329 312.80950928]
[128.98939514 327.03604126]
[120.28686523 339.37170410]
[108.57820892 348.90112305]
[94.73226929 354.91714478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 116]
[22 115]
[23 114]
[24 113]
[118 129]
[119 128]
[120 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
