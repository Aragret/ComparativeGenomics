%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUAACACAGGGGGGGGGGUUAUUUUCCCCUCCCACUCCCAUACUACUAAUCUCAUCAAUACAACCCCCxxxxxxxxxxUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCUUGUAGUAUACCCCCCCCCCAACUAAUACA\
) } def
/len { sequence length } bind def

/coor [
[96.26117706 389.41741943]
[82.41523743 383.40139771]
[70.70658112 373.87197876]
[62.00405121 361.53631592]
[56.95344925 347.30978394]
[55.92956161 332.24810791]
[59.00835800 317.46896362]
[65.96138000 304.06903076]
[76.27266693 293.04269409]
[89.17704773 285.20819092]
[103.71693420 281.14688110]
[103.71693420 266.14688110]
[103.71693420 251.14686584]
[103.71693420 236.14686584]
[103.71693420 221.14686584]
[103.71693420 206.14686584]
[103.71693420 191.14686584]
[103.71693420 176.14686584]
[103.71693420 161.14686584]
[103.71693420 146.14686584]
[103.71693420 131.14686584]
[82.16497803 123.32123566]
[72.94134521 103.98627472]
[79.45416260 85.16450500]
[70.43663025 73.17767334]
[61.41910172 61.19083786]
[52.40157318 49.20400620]
[43.38404083 37.21717453]
[30.57303238 45.04235840]
[17.06657982 51.59455490]
[2.99079752 56.81258774]
[-11.52289104 60.64773560]
[-26.33897400 63.06418610]
[-41.31911087 64.03938293]
[-56.32343292 63.56421661]
[-71.21185303 61.64312363]
[-85.84534454 58.29404449]
[-100.08728790 53.54824829]
[-113.80470276 47.45004272]
[-126.86950684 40.05636978]
[-139.15971375 31.43626404]
[-150.56057739 21.67020988]
[-160.96565247 10.84939194]
[-170.27777100 -0.92515397]
[-178.40998840 -13.54349136]
[-185.28639221 -26.88780212]
[-190.84275818 -40.83349228]
[-195.02722168 -55.25035095]
[-197.80070496 -70.00376892]
[-199.13731384 -84.95599365]
[-199.02456665 -99.96741486]
[-197.46351624 -114.89787292]
[-194.46873474 -129.60797119]
[-190.06819153 -143.96034241]
[-184.30296326 -157.82099915]
[-177.22689819 -171.06051636]
[-168.90605164 -183.55526733]
[-159.41812134 -195.18861389]
[-148.85168457 -205.85191345]
[-137.30541992 -215.44561768]
[-124.88710785 -223.88014221]
[-111.71271515 -231.07673645]
[-97.90525055 -236.96820068]
[-83.59362793 -241.49954224]
[-68.91148376 -244.62843323]
[-53.99588776 -246.32566833]
[-38.98611832 -246.57540894]
[-24.02231979 -245.37530518]
[-9.24420738 -242.73657227]
[5.21023655 -238.68385315]
[19.20605087 -233.25497437]
[32.61256027 -226.50064087]
[45.30458450 -218.48390198]
[57.16362000 -209.27961731]
[68.07894135 -198.97373962]
[77.94862366 -187.66246033]
[86.68053436 -175.45143127]
[94.19312286 -162.45465088]
[100.41625214 -148.79345703]
[105.29182434 -134.59541321]
[108.77429962 -119.99308777]
[110.83118439 -105.12282562]
[111.44325256 -90.12345886]
[110.60480499 -75.13504791]
[108.32365417 -60.29753494]
[104.62111664 -45.74945068]
[99.53175354 -31.62663460]
[93.10308838 -18.06095314]
[85.39513397 -5.17906570]
[76.47987366 6.89874983]
[66.44054413 18.05972290]
[55.37087631 28.19964409]
[64.38840485 40.18647766]
[73.40593719 52.17330933]
[82.42346191 64.16014099]
[91.44099426 76.14697266]
[102.03861237 73.53111267]
[113.26251984 75.62168121]
[123.03216553 82.44834900]
[129.36988831 93.12980652]
[130.79391479 105.97314453]
[145.75415039 107.06445312]
[160.71440125 108.15576172]
[175.67465210 109.24707794]
[190.63490295 110.33838654]
[205.60569763 111.27401733]
[220.58540344 112.05385590]
[235.56512451 112.83370209]
[241.71434021 110.13282776]
[247.43049622 110.87899017]
[251.14782715 113.97042084]
[266.08212280 115.37272644]
[281.01644897 116.77503204]
[295.68920898 109.45095825]
[309.21731567 118.72039032]
[307.68420410 135.04771423]
[292.66702271 141.63679504]
[279.61413574 131.70933533]
[264.67984009 130.30703735]
[249.74552917 128.90472412]
[234.78527832 127.81341553]
[219.80555725 127.03357697]
[204.82585144 126.25373077]
[197.93800354 129.06501770]
[189.54359436 125.29863739]
[174.58334351 124.20732117]
[159.62309265 123.11601257]
[144.66284180 122.02470398]
[129.70259094 120.93339539]
[118.71693420 131.14686584]
[118.71693420 146.14686584]
[118.71693420 161.14686584]
[118.71693420 176.14686584]
[118.71693420 191.14686584]
[118.71693420 206.14686584]
[118.71693420 221.14686584]
[118.71693420 236.14686584]
[118.71693420 251.14686584]
[118.71693420 266.14688110]
[118.71693420 281.14688110]
[133.25682068 285.20819092]
[146.16119385 293.04269409]
[156.47248840 304.06903076]
[163.42550659 317.46896362]
[166.50430298 332.24810791]
[165.48040771 347.30978394]
[160.42980957 361.53631592]
[151.72729492 373.87197876]
[140.01863098 383.40139771]
[126.17269135 389.41741943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 123]
[107 122]
[108 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
