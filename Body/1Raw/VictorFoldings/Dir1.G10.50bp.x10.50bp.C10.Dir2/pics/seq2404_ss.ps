%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACUACCUAAAAGGGGGGGGGGAAUCCCAAACAUAUAACUGAACUCCUCACACCCAAUUGGACCAAUCUAUCxxxxxxxxxxUCUCAUUACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCCCCCCCCCCCUCUACCUAAAA\
) } def
/len { sequence length } bind def

/coor [
[73.63345337 174.23854065]
[60.06080627 167.90740967]
[47.93153000 159.12216187]
[37.68396759 148.20028687]
[29.68845558 135.53649902]
[24.23394585 121.58843994]
[21.51755905 106.86019897]
[21.63746643 91.88403320]
[24.58933067 77.20117188]
[30.26647568 63.34223938]
[38.46373367 50.80809402]
[48.88486099 40.05170059]
[61.15325165 31.46179199]
[74.82553101 25.34879875]
[89.40759277 21.93363953]
[88.81499481 6.94534969]
[88.22239685 -8.04294014]
[87.62979889 -23.03122902]
[87.03720093 -38.01951981]
[86.44459534 -53.00780869]
[85.85199738 -67.99610138]
[85.25939941 -82.98439026]
[84.66680145 -97.97267914]
[84.07420349 -112.96096802]
[83.48160553 -127.94925690]
[68.47994232 -128.22911072]
[53.51993942 -129.38076782]
[38.65220642 -131.40031433]
[23.92705536 -134.28092957]
[9.39430904 -138.01286316]
[-4.89685583 -142.58349609]
[-18.89808273 -147.97735596]
[-32.56199646 -154.17619324]
[-45.84236145 -161.15902710]
[-58.69424057 -168.90223694]
[-71.07415009 -177.37960815]
[-82.94019318 -186.56246948]
[-94.25222778 -196.41975403]
[-104.97196960 -206.91809082]
[-115.06314850 -218.02197266]
[-124.49162292 -229.69381714]
[-133.22549438 -241.89413452]
[-141.23518372 -254.58163452]
[-148.49362183 -267.71340942]
[-154.97622681 -281.24499512]
[-160.66107178 -295.13061523]
[-165.52891541 -309.32330322]
[-169.56329346 -323.77499390]
[-172.75056458 -338.43682861]
[-175.07991028 -353.25918579]
[-176.54348755 -368.19192505]
[-177.13630676 -383.18444824]
[-176.85639954 -398.18612671]
[-175.70468140 -413.14611816]
[-173.68507385 -428.01385498]
[-170.80439758 -442.73898315]
[-167.07238770 -457.27172852]
[-162.50170898 -471.56286621]
[-157.10778809 -485.56405640]
[-150.90890503 -499.22796631]
[-143.92601013 -512.50830078]
[-136.18275452 -525.36010742]
[-127.70532227 -537.73999023]
[-118.52240753 -549.60601807]
[-108.66507721 -560.91802979]
[-98.16669464 -571.63769531]
[-87.06277466 -581.72882080]
[-75.39088440 -591.15728760]
[-63.19053650 -599.89105225]
[-50.50299835 -607.90075684]
[-37.37120438 -615.15911865]
[-23.83959007 -621.64166260]
[-9.95394039 -627.32641602]
[4.23875809 -632.19421387]
[18.69048119 -636.22857666]
[33.35233307 -639.41577148]
[48.17469406 -641.74505615]
[63.10741806 -643.20855713]
[78.09997559 -643.80133057]
[93.10163116 -643.52136230]
[108.06162262 -642.36956787]
[122.92933655 -640.34991455]
[137.65446472 -637.46917725]
[152.18717957 -633.73712158]
[166.47831726 -629.16632080]
[180.47949219 -623.77239990]
[194.14335632 -617.57342529]
[207.42366028 -610.59045410]
[220.27548218 -602.84716797]
[232.65531921 -594.36968994]
[244.52128601 -585.18670654]
[255.83323669 -575.32934570]
[266.55288696 -564.83093262]
[276.64398193 -553.72698975]
[286.07235718 -542.05505371]
[294.80612183 -529.85467529]
[302.81570435 -517.16705322]
[310.07403564 -504.03524780]
[316.55651855 -490.50360107]
[322.24127197 -476.61795044]
[327.10900879 -462.42523193]
[331.14324951 -447.97348022]
[334.33038330 -433.31161499]
[336.65963745 -418.48925781]
[338.12307739 -403.55651855]
[338.71578979 -388.56396484]
[338.43572998 -373.56231689]
[337.28390503 -358.60232544]
[335.26416016 -343.73461914]
[332.38336182 -329.00949097]
[328.65124512 -314.47677612]
[324.08044434 -300.18566895]
[318.68640137 -286.18450928]
[312.48739624 -272.52069092]
[305.50439453 -259.24041748]
[297.76104736 -246.38862610]
[289.28350830 -234.00881958]
[280.10049438 -222.14288330]
[270.24307251 -210.83097839]
[259.74459839 -200.11135864]
[248.64059448 -190.02032471]
[236.96862793 -180.59199524]
[224.76820374 -171.85827637]
[212.08059692 -163.84873962]
[198.94874573 -156.59046936]
[185.41708374 -150.10803223]
[171.53138733 -144.42335510]
[157.33863831 -139.55569458]
[142.88688660 -135.52148438]
[128.22500610 -132.33441162]
[113.40262604 -130.00523376]
[98.46989441 -128.54185486]
[99.06249237 -113.55356598]
[99.65509033 -98.56527710]
[100.24768829 -83.57698822]
[100.84028625 -68.58869934]
[101.43289185 -53.60040665]
[102.02548981 -38.61211777]
[102.61808777 -23.62382889]
[103.21068573 -8.63553905]
[103.80328369 6.35275030]
[104.39588165 21.34103966]
[119.20205688 23.59426308]
[133.31428528 28.60872841]
[146.22256470 36.20321655]
[157.46040344 46.10326767]
[166.62165833 57.95110321]
[173.37527466 71.31855011]
[177.47715759 85.72252655]
[178.77908325 100.64247131]
[177.23399353 115.53920746]
[172.89772034 129.87435913]
[165.92700195 143.12988281]
[156.57371521 154.82672119]
[145.17591858 164.54217529]
[132.14549255 171.92512512]
[117.95335388 176.70875549]
[103.11239624 178.72019958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
