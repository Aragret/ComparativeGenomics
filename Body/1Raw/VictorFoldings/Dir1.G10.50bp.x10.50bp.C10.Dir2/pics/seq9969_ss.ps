%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUCUACCGGGGGGGGGGUCUCUAUACUAAUCUCCCUACAAAUCUCCUUAAUUAUAACAUUCACAGCCxxxxxxxxxxCUUCUUACUCAUCCGCUUCCACCCCCUAGCAGAAAAUAGCCCACUAAUCCCCCCCCCCCCAAACUCUAAC\
) } def
/len { sequence length } bind def

/coor [
[73.45092773 153.45297241]
[60.99306107 145.17224121]
[50.98559952 134.05380249]
[44.05722046 120.79610443]
[40.64315414 106.23200226]
[40.95788193 91.27640533]
[44.98162460 76.86882019]
[52.46161652 63.91433716]
[62.92796326 53.22674942]
[75.72316742 45.47745132]
[90.04344940 41.15325165]
[89.41947174 26.16623497]
[88.79549408 11.17921829]
[88.17151642 -3.80779743]
[87.54753876 -18.79481316]
[86.92356110 -33.78182983]
[86.29958344 -48.76884460]
[85.67560577 -63.75586319]
[85.05162811 -78.74288177]
[84.42765045 -93.72989655]
[69.42533875 -93.96247101]
[54.46077347 -95.05113983]
[39.58276367 -96.99234009]
[24.83983994 -99.77974701]
[10.28009033 -103.40426636]
[-4.04899359 -107.85407257]
[-18.10067368 -113.11466217]
[-31.82911491 -119.16886139]
[-45.18953705 -125.99692535]
[-58.13836288 -133.57659912]
[-70.63335419 -141.88313293]
[-82.63375854 -150.88945007]
[-94.10043335 -160.56616211]
[-104.99597168 -170.88172913]
[-115.28482819 -181.80247498]
[-124.93345642 -193.29278564]
[-133.91038513 -205.31520081]
[-142.18630981 -217.83047485]
[-149.73426819 -230.79782104]
[-156.52961731 -244.17491150]
[-162.55020142 -257.91812134]
[-167.77638245 -271.98263550]
[-172.19111633 -286.32257080]
[-175.77998352 -300.89114380]
[-178.53131104 -315.64083862]
[-180.43609619 -330.52355957]
[-181.48812866 -345.49075317]
[-181.68399048 -360.49359131]
[-181.02304077 -375.48312378]
[-179.50743103 -390.41049194]
[-177.14210510 -405.22698975]
[-173.93478394 -419.88430786]
[-169.89590454 -434.33459473]
[-165.03868103 -448.53076172]
[-159.37892151 -462.42645264]
[-152.93510437 -475.97637939]
[-145.72825623 -489.13635254]
[-137.78186035 -501.86340332]
[-129.12185669 -514.11608887]
[-119.77648163 -525.85437012]
[-109.77622223 -537.03997803]
[-99.15369415 -547.63647461]
[-87.94355011 -557.60925293]
[-76.18235016 -566.92578125]
[-63.90847015 -575.55566406]
[-51.16193008 -583.47076416]
[-37.98431015 -590.64532471]
[-24.41859818 -597.05584717]
[-10.50903988 -602.68145752]
[3.69899368 -607.50384521]
[18.15915871 -611.50720215]
[32.82429123 -614.67852783]
[47.64655304 -617.00750732]
[62.57759857 -618.48645020]
[77.56872559 -619.11059570]
[92.57102966 -618.87786865]
[107.53559113 -617.78912354]
[122.41358185 -615.84777832]
[137.15649414 -613.06024170]
[151.71620178 -609.43560791]
[166.04525757 -604.98571777]
[180.09689331 -599.72503662]
[193.82528687 -593.67071533]
[207.18565369 -586.84252930]
[220.13442993 -579.26275635]
[232.62934875 -570.95611572]
[244.62968445 -561.94970703]
[256.09628296 -552.27294922]
[266.99172974 -541.95727539]
[277.28051758 -531.03643799]
[286.92904663 -519.54608154]
[295.90588379 -507.52359009]
[304.18170166 -495.00823975]
[311.72955322 -482.04083252]
[318.52481079 -468.66369629]
[324.54528809 -454.92041016]
[329.77136230 -440.85586548]
[334.18597412 -426.51589966]
[337.77474976 -411.94729614]
[340.52593994 -397.19757080]
[342.43060303 -382.31484985]
[343.48254395 -367.34765625]
[343.67828369 -352.34481812]
[343.01721191 -337.35528564]
[341.50149536 -322.42791748]
[339.13604736 -307.61145020]
[335.92858887 -292.95416260]
[331.88961792 -278.50390625]
[327.03228760 -264.30776978]
[321.37240601 -250.41212463]
[314.92849731 -236.86224365]
[307.72152710 -223.70233154]
[299.77502441 -210.97532654]
[291.11492920 -198.72273254]
[281.76947021 -186.98451233]
[271.76913452 -175.79896545]
[261.14651489 -165.20257568]
[249.93629456 -155.22988892]
[238.17501831 -145.91346741]
[225.90106201 -137.28366089]
[213.15446472 -129.36863708]
[199.97679138 -122.19421387]
[186.41102600 -115.78379059]
[172.50143433 -110.15827942]
[158.29335022 -105.33602142]
[143.83316040 -101.33275604]
[129.16799927 -98.16153717]
[114.34571838 -95.83271027]
[99.41466522 -94.35387421]
[100.03864288 -79.36685181]
[100.66262054 -64.37983704]
[101.28659821 -49.39282227]
[101.91057587 -34.40580750]
[102.53455353 -19.41879082]
[103.15853119 -4.43177509]
[103.78250885 10.55524158]
[104.40648651 25.54225731]
[105.03046417 40.52927399]
[119.66062164 43.64813614]
[133.05570984 50.30701447]
[144.37423706 60.08759689]
[152.90518188 72.37547302]
[158.11264038 86.39871979]
[159.66944885 101.27639771]
[157.47784424 116.07389069]
[151.67549133 129.86163330]
[142.62687683 141.77345276]
[130.90046692 151.06108093]
[117.23287964 157.14106750]
[102.48272705 159.63143921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
