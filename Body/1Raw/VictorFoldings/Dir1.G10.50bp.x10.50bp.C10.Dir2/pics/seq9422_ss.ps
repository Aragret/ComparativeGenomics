%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUCUUCUUAGGGGGGGGGGGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCxxxxxxxxxxUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGACCCCCCCCCCAUAAUUCUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[85.02796173 382.96652222]
[70.75619507 378.15707397]
[57.85220718 370.39169312]
[46.91955185 360.03353882]
[38.46956635 347.56710815]
[32.89747238 333.57546997]
[30.46388245 318.71304321]
[31.28262329 303.67498779]
[35.31539917 289.16461182]
[42.37359238 275.86062622]
[52.12707901 264.38528442]
[64.11966705 255.27528381]
[77.79044342 248.95674133]
[92.50000000 245.72518921]
[92.50000000 230.72518921]
[92.50000000 215.72518921]
[92.50000000 200.72518921]
[92.50000000 185.72518921]
[92.50000000 170.72518921]
[92.50000000 155.72518921]
[92.50000000 140.72518921]
[92.50000000 125.72518921]
[92.50000000 110.72518921]
[91.89985657 95.73719788]
[90.70053101 80.78521729]
[86.87649536 72.42670441]
[89.62985229 65.52258301]
[88.72993469 50.54959869]
[87.83001709 35.57661819]
[86.93010712 20.60363960]
[86.03018951 5.63065815]
[71.02484894 5.51784611]
[56.06135941 4.39228010]
[41.20799255 2.25909662]
[26.53252411 -0.87197119]
[12.10191536 -4.98663712]
[-2.01798987 -10.06612682]
[-15.76276588 -16.08726311]
[-29.06969643 -23.02257347]
[-41.87806702 -30.84041214]
[-54.12943268 -39.50510788]
[-65.76789856 -48.97712708]
[-76.74034882 -59.21324921]
[-86.99672699 -70.16677094]
[-96.49024200 -81.78771210]
[-105.17755890 -94.02304077]
[-113.01905060 -106.81694794]
[-119.97894287 -120.11103821]
[-126.02546692 -133.84466553]
[-131.13104248 -147.95515442]
[-135.27236938 -162.37814331]
[-138.43054199 -177.04779053]
[-140.59117126 -191.89720154]
[-141.74438477 -206.85858154]
[-141.88491821 -221.86369324]
[-141.01214600 -236.84403992]
[-139.13003540 -251.73130798]
[-136.24717712 -266.45755005]
[-132.37673950 -280.95556641]
[-127.53636169 -295.15921021]
[-121.74813843 -309.00369263]
[-115.03847504 -322.42581177]
[-107.43799591 -335.36434937]
[-98.98137665 -347.76025391]
[-89.70719910 -359.55697632]
[-79.65778351 -370.70068359]
[-68.87898254 -381.14053345]
[-57.41997910 -390.82888794]
[-45.33305740 -399.72152710]
[-32.67337036 -407.77792358]
[-19.49867439 -414.96124268]
[-5.86909008 -421.23876953]
[8.15319633 -426.58184814]
[22.50420380 -430.96609497]
[37.11845016 -434.37149048]
[51.92925262 -436.78250122]
[66.86903381 -438.18817139]
[81.86962891 -438.58200073]
[96.86259460 -437.96228027]
[111.77951050 -436.33178711]
[126.55232239 -433.69796753]
[141.11361694 -430.07281494]
[155.39695740 -425.47293091]
[169.33718872 -419.91928101]
[182.87068176 -413.43719482]
[195.93568420 -406.05624390]
[208.47259521 -397.81008911]
[220.42420959 -388.73638916]
[231.73599243 -378.87655640]
[242.35633850 -368.27554321]
[252.23677063 -356.98175049]
[261.33221436 -345.04669189]
[269.60119629 -332.52481079]
[277.00592041 -319.47326660]
[283.51266479 -305.95162964]
[289.09173584 -292.02154541]
[293.71762085 -277.74661255]
[297.36926270 -263.19192505]
[300.02999878 -248.42395020]
[301.68768311 -233.51002502]
[302.33471680 -218.51821899]
[301.96820068 -203.51692200]
[300.58978271 -188.57461548]
[298.20574951 -173.75942993]
[294.82696533 -159.13900757]
[290.46890259 -144.78004456]
[285.15136719 -130.74804688]
[278.89868164 -117.10704041]
[271.73937988 -103.91928101]
[263.70605469 -91.24493408]
[254.83544922 -79.14183044]
[245.16799927 -67.66519928]
[234.74780273 -56.86739349]
[223.62242126 -46.79769516]
[211.84262085 -37.50204086]
[199.46214294 -29.02285004]
[186.53747559 -21.39880943]
[173.12759399 -14.66470623]
[159.29368591 -8.85126877]
[145.09887695 -3.98502088]
[130.60794067 -0.08816665]
[115.88697815 2.82151318]
[101.00316620 4.73074245]
[101.90308380 19.70372391]
[102.80300140 34.67670441]
[103.70291901 49.64968491]
[104.60282898 64.62266541]
[105.65250397 79.58589172]
[106.85182953 94.53787231]
[109.05596924 96.73218536]
[110.49047852 99.79444885]
[110.82601166 103.43354034]
[109.84836578 107.23859406]
[107.50000000 110.72518921]
[107.50000000 125.72518921]
[107.50000000 140.72518921]
[107.50000000 155.72518921]
[107.50000000 170.72518921]
[107.50000000 185.72518921]
[107.50000000 200.72518921]
[107.50000000 215.72518921]
[107.50000000 230.72518921]
[107.50000000 245.72518921]
[122.20955658 248.95674133]
[135.88034058 255.27528381]
[147.87292480 264.38528442]
[157.62640381 275.86062622]
[164.68460083 289.16461182]
[168.71737671 303.67498779]
[169.53611755 318.71304321]
[167.10252380 333.57546997]
[161.53042603 347.56710815]
[153.08044434 360.03353882]
[142.14779663 370.39169312]
[129.24380493 378.15707397]
[114.97203827 382.96652222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 129]
[25 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
