%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAUACCAAGGGGGGGGGGCACCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCxxxxxxxxxxGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAAAAAACUCUACCUCCCCCCCCCCCUCUAUACUAA\
) } def
/len { sequence length } bind def

/coor [
[86.60003662 572.00891113]
[73.37983704 564.73645020]
[62.49303436 554.28942871]
[54.68190384 541.38018799]
[50.47901917 526.88891602]
[50.17094803 511.80355835]
[53.77869034 497.15274048]
[61.05626297 483.93533325]
[71.50746918 473.05258179]
[84.41973114 465.24642944]
[98.91266632 461.04913330]
[98.60060883 446.05239868]
[98.28855896 431.05563354]
[97.97650146 416.05886841]
[97.66444397 401.06213379]
[97.35238647 386.06536865]
[97.04032898 371.06860352]
[96.72827148 356.07186890]
[96.41622162 341.07510376]
[96.10416412 326.07836914]
[82.46259308 323.14950562]
[69.81835175 317.23229980]
[58.81720734 308.62503052]
[50.02189636 297.76351929]
[43.88331985 285.19894409]
[40.71744156 271.57000732]
[40.68901443 257.57037354]
[43.80302429 243.91333008]
[49.90423965 231.29557800]
[58.68495560 220.36158752]
[69.70050812 211.67071533]
[82.39179993 205.66853333]
[96.11367035 202.66410828]
[96.42572021 187.66735840]
[96.73777771 172.67059326]
[97.04983521 157.67384338]
[97.36189270 142.67709351]
[97.67395020 127.68033600]
[97.98600769 112.68358612]
[93.01432800 112.29842377]
[88.13844299 109.89257812]
[84.18985748 105.52226257]
[81.95652771 99.58390808]
[82.04608917 92.78415680]
[84.76713562 86.05617523]
[90.04906464 80.43228149]
[88.18144989 65.54900360]
[86.31383514 50.66572189]
[83.98273468 35.84796524]
[81.19040680 21.11015892]
[78.39808655 6.37235355]
[75.60575867 -8.36545277]
[60.57779312 -7.96999168]
[45.68101883 -9.99044323]
[31.30129433 -14.37447357]
[17.81109238 -21.00852394]
[5.55984116 -29.72075844]
[-5.13512230 -40.28550720]
[-13.99677277 -52.42911911]
[-20.79557228 -65.83704376]
[-25.35541534 -80.16198730]
[-27.55819130 -95.03289795]
[-27.34684372 -110.06458282]
[-24.72684479 -124.86768341]
[-19.76606178 -139.05876160]
[-12.59298801 -152.27024841]
[-3.39342546 -164.15991211]
[7.59433603 -174.41979980]
[20.08568573 -182.78414917]
[33.75707245 -189.03630066]
[48.25436783 -193.01431274]
[63.20205688 -194.61514282]
[78.21296692 -193.79733276]
[92.89826965 -190.58206177]
[106.87758636 -185.05261230]
[119.78881836 -177.35220337]
[131.29753113 -167.68029785]
[141.10562134 -156.28742981]
[148.95904541 -143.46868896]
[154.65435791 -129.55612183]
[158.04406738 -114.91009521]
[159.04034424 -99.90998077]
[157.61740112 -84.94430542]
[153.81208801 -70.40071869]
[147.72297668 -56.65594864]
[139.50778198 -44.06600189]
[129.37930298 -32.95699692]
[117.59987640 -23.61667824]
[104.47464752 -16.28698540]
[90.34356689 -11.15777683]
[93.13588715 3.58002901]
[95.92821503 18.31783485]
[98.72054291 33.05564117]
[101.47760773 35.35043335]
[103.22988129 39.12285995]
[103.28234100 43.87150574]
[101.19712067 48.79811096]
[103.06472778 63.68138885]
[104.93234253 78.56466675]
[117.54347229 86.68621063]
[131.86607361 82.22939301]
[146.18865967 77.77258301]
[152.05984497 63.27901840]
[165.89785767 55.99592590]
[181.16882324 59.36216354]
[190.66226196 71.78829193]
[189.89566040 87.40707397]
[179.23098755 98.84379578]
[163.70376587 100.69839478]
[150.64547729 92.09517670]
[136.32289124 96.55199432]
[122.00028992 101.00881195]
[112.98275757 112.99564362]
[112.67070007 127.99239349]
[112.35864258 142.98915100]
[112.04659271 157.98590088]
[111.73453522 172.98265076]
[111.42247772 187.97941589]
[111.11042023 202.97616577]
[126.62838745 207.33798218]
[140.49609375 215.53402710]
[151.78573608 227.00959778]
[159.74363708 240.99075317]
[163.84053040 256.53659058]
[163.80680847 272.60247803]
[159.65022278 288.11035156]
[151.65498352 302.02096558]
[140.36239624 313.40353394]
[126.53413391 321.49813843]
[111.10091400 325.76629639]
[111.41297150 340.76306152]
[111.72502899 355.75979614]
[112.03708649 370.75656128]
[112.34914398 385.75332642]
[112.66119385 400.75006104]
[112.97325134 415.74682617]
[113.28530884 430.74356079]
[113.59736633 445.74032593]
[113.90942383 460.73709106]
[128.56440735 464.32785034]
[141.79022217 471.59011841]
[152.68508911 482.02871704]
[160.50619507 494.93191528]
[164.72026062 509.41998291]
[165.03997803 524.50506592]
[161.44355774 539.15869141]
[154.17619324 552.38171387]
[143.73338318 563.27252197]
[130.82716370 571.08862305]
[116.33747101 575.29711914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[33 119]
[34 118]
[35 117]
[36 116]
[37 115]
[38 114]
[39 113]
[46 99]
[47 98]
[48 97]
[49 93]
[50 92]
[51 91]
[52 90]
[100 112]
[101 111]
[102 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
