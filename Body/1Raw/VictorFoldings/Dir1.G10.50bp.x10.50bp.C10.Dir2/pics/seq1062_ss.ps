%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCUAGCCAGGGGGGGGGGCACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUxxxxxxxxxxAUGACAUUAACACUAUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUACCCCCCCCCCUACCCUAGCCA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 534.25402832]
[71.01555634 528.70098877]
[58.81560135 519.83465576]
[49.20452881 508.21234131]
[42.78650284 494.56463623]
[39.96496582 479.74945068]
[40.91728210 464.69808960]
[45.58358765 450.35665894]
[53.67055511 437.62670898]
[64.66983032 427.30844116]
[77.88998413 420.05044556]
[92.50000000 416.30902100]
[92.50000000 401.30902100]
[92.50000000 386.30902100]
[92.50000000 371.30902100]
[92.50000000 356.30902100]
[92.50000000 341.30902100]
[92.50000000 326.30902100]
[92.50000000 311.30902100]
[92.50000000 296.30902100]
[92.50000000 281.30902100]
[78.13413239 277.13778687]
[65.51298523 269.07937622]
[55.66399765 257.77969360]
[49.39180374 244.14881897]
[47.21248627 229.28791809]
[49.31111145 214.40007019]
[55.52607346 200.69305420]
[65.36148071 189.28121948]
[78.02671051 181.09500122]
[92.50000000 176.80502319]
[92.50000000 161.80502319]
[92.50000000 146.80502319]
[78.60697937 142.30009460]
[66.74485779 133.77951050]
[58.03974533 122.05213928]
[53.31803894 108.23129272]
[53.02798462 93.62902069]
[57.19711685 79.63156891]
[65.42964935 67.56774902]
[76.94404602 58.58282089]
[71.81374359 44.48743057]
[66.68344116 30.39204216]
[61.55313873 16.29665184]
[55.64172363 9.25030899]
[56.46545410 1.85885036]
[51.62563705 -12.33890247]
[46.78582001 -26.53665543]
[41.94600677 -40.73440552]
[27.13528442 -38.16749573]
[12.10535240 -37.94921875]
[-2.77366400 -40.08494949]
[-17.13535690 -44.52209854]
[-30.62605476 -51.15139008]
[-42.91353989 -59.80957794]
[-53.69522095 -70.28344727]
[-62.70558548 -82.31506348]
[-69.72274780 -95.60813904]
[-74.57391357 -109.83531952]
[-77.13960266 -124.64625549]
[-77.35663605 -139.67620850]
[-75.21968079 -154.55503845]
[-70.78134155 -168.91636658]
[-64.15093994 -182.40652466]
[-55.49173737 -194.69329834]
[-45.01698303 -205.47410583]
[-32.98462296 -214.48347473]
[-19.69096565 -221.49955750]
[-5.46338272 -226.34953308]
[9.34776211 -228.91400146]
[24.37772942 -229.12980652]
[39.25639343 -226.99160767]
[53.61735535 -222.55209351]
[67.10695648 -215.92057800]
[79.39301300 -207.26036072]
[90.17296600 -196.78471375]
[99.18134308 -184.75161743]
[106.19631958 -171.45738220]
[111.04512787 -157.22940063]
[113.60837555 -142.41804504]
[113.82292938 -127.38805389]
[111.68351746 -112.50956726]
[107.24281311 -98.14897156]
[100.61018372 -84.65991211]
[91.94895172 -72.37457275]
[81.47241974 -61.59548569]
[69.43856812 -52.58809662]
[56.14375687 -45.57422256]
[60.98357391 -31.37647057]
[65.82338715 -17.17871857]
[70.66320801 -2.98096609]
[75.64852905 11.16635036]
[80.77883148 25.26173973]
[85.90913391 39.35712814]
[91.03943634 53.45251846]
[107.23600769 51.48536301]
[123.69512177 55.17722702]
[138.43676758 64.45982361]
[151.57839966 57.22811890]
[164.72003174 49.99641418]
[172.74189758 35.69321442]
[189.14091492 35.75935364]
[197.04716492 50.12678909]
[188.32737732 64.01554108]
[171.95173645 63.13804626]
[158.81010437 70.36975098]
[145.66847229 77.60144806]
[150.21575928 91.89558411]
[165.12020874 90.20518494]
[180.02465820 88.51478577]
[195.08149719 80.72200012]
[206.73789978 93.03317261]
[198.13465881 107.64209747]
[181.71504211 103.41923523]
[166.81060791 105.10963440]
[151.90615845 106.80002594]
[146.00933838 122.26337433]
[135.76870728 134.75923157]
[122.43024445 143.15827942]
[107.50000000 146.80502319]
[107.50000000 161.80502319]
[107.50000000 176.80502319]
[121.97328949 181.09500122]
[134.63851929 189.28121948]
[144.47392273 200.69305420]
[150.68888855 214.40007019]
[152.78752136 229.28791809]
[150.60820007 244.14881897]
[144.33599854 257.77969360]
[134.48701477 269.07937622]
[121.86586761 277.13778687]
[107.50000000 281.30902100]
[107.50000000 296.30902100]
[107.50000000 311.30902100]
[107.50000000 326.30902100]
[107.50000000 341.30902100]
[107.50000000 356.30902100]
[107.50000000 371.30902100]
[107.50000000 386.30902100]
[107.50000000 401.30902100]
[107.50000000 416.30902100]
[122.11001587 420.05044556]
[135.33016968 427.30844116]
[146.32945251 437.62670898]
[154.41641235 450.35665894]
[159.08271790 464.69808960]
[160.03503418 479.74945068]
[157.21350098 494.56463623]
[150.79547119 508.21234131]
[141.18440247 519.83465576]
[128.98443604 528.70098877]
[114.96250153 534.25402832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[31 122]
[32 121]
[33 120]
[41 95]
[42 94]
[43 93]
[44 92]
[46 91]
[47 90]
[48 89]
[49 88]
[98 107]
[99 106]
[100 105]
[108 116]
[109 115]
[110 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
