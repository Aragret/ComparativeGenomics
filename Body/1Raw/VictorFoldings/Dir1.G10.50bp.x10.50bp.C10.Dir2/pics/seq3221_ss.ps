%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCUUCUUGGGGGGGGGGAACAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUxxxxxxxxxxCUUUCACUUCAUCUUGCCCUUCAUUAUUGCAGCCCUAGCAACACUCCACCCCCCCCCCCCUCCUAUUCUU\
) } def
/len { sequence length } bind def

/coor [
[84.49431610 424.34304810]
[71.93609619 415.99191284]
[61.84987259 404.77944946]
[54.86967850 391.41055298]
[51.43429565 376.72555542]
[51.75967026 361.64758301]
[55.82535553 347.12448120]
[63.37577438 334.06912231]
[73.93630219 323.30224609]
[86.84310150 315.50061035]
[101.28482819 311.15466309]
[100.66085052 296.16763306]
[100.03687286 281.18063354]
[99.41289520 266.19360352]
[98.78891754 251.20658875]
[98.16493988 236.21957397]
[97.54096222 221.23255920]
[96.91698456 206.24554443]
[96.29300690 191.25852966]
[95.66902924 176.27151489]
[80.87397766 173.96144104]
[66.81376648 168.80969238]
[54.02861786 161.01419067]
[43.00973892 150.87445068]
[34.18049622 138.78005981]
[27.88011742 125.19568634]
[24.35066986 110.64326477]
[23.72776222 95.68191528]
[26.03532410 80.88647461]
[31.18469810 66.82539368]
[38.97803879 54.03892517]
[49.11591339 43.01833725]
[61.20882034 34.18704987]
[74.79212952 27.88437462]
[89.34395599 24.35247040]
[88.71997833 9.36545372]
[88.09600067 -5.62156248]
[87.16036987 -20.59235382]
[85.91349792 -35.54043961]
[84.66661835 -50.48852921]
[69.65643311 -50.62582016]
[54.72294235 -52.14751053]
[39.99356079 -55.04061127]
[25.59396172 -59.28043747]
[11.64699459 -64.83081818]
[-1.72834599 -71.64440155]
[-14.41794300 -79.66305542]
[-26.31353188 -88.81835938]
[-37.31362152 -99.03220367]
[-47.32436371 -110.21745300]
[-56.26034164 -122.27867126]
[-64.04531860 -135.11294556]
[-70.61287689 -148.61079407]
[-75.90698242 -162.65704346]
[-79.88246155 -177.13185120]
[-82.50540924 -191.91172791]
[-83.75342560 -206.87057495]
[-83.61588287 -221.88076782]
[-82.09394836 -236.81423950]
[-79.20059967 -251.54356384]
[-74.96053314 -265.94308472]
[-69.40991974 -279.88995361]
[-62.59611511 -293.26519775]
[-54.57725143 -305.95465088]
[-45.42174911 -317.85009766]
[-35.20771790 -328.85000610]
[-24.02230453 -338.86056519]
[-11.96094036 -347.79635620]
[0.87346941 -355.58111572]
[14.37142372 -362.14843750]
[28.41776085 -367.44232178]
[42.89263916 -371.41754150]
[57.67256165 -374.04025269]
[72.63143158 -375.28802490]
[87.64161682 -375.15023804]
[102.57505035 -373.62805176]
[117.30433655 -370.73446655]
[131.70379639 -366.49414062]
[145.65057373 -360.94329834]
[159.02569580 -354.12927246]
[171.71502686 -346.11019897]
[183.61030579 -336.95449829]
[194.61006165 -326.74029541]
[204.62042236 -315.55468750]
[213.55599976 -303.49319458]
[221.34054565 -290.65866089]
[227.90765381 -277.16058350]
[233.20129395 -263.11416626]
[237.17630005 -248.63922119]
[239.79873657 -233.85925293]
[241.04626465 -218.90036011]
[240.90821838 -203.89018250]
[239.38578796 -188.95677185]
[236.49195862 -174.22752380]
[232.25140381 -159.82814026]
[226.70033264 -145.88145447]
[219.88607788 -132.50645447]
[211.86679077 -119.81725311]
[202.71089172 -107.92212677]
[192.49649048 -96.92254639]
[181.31074524 -86.91236115]
[169.24908447 -77.97698975]
[156.41441345 -70.19264984]
[142.91624451 -63.62576675]
[128.86973572 -58.33236313]
[114.39471436 -54.35760498]
[99.61470795 -51.73540115]
[100.86157990 -36.78731537]
[102.10845947 -21.83922768]
[105.16105652 -18.08994102]
[105.84770966 -12.36632252]
[103.08301544 -6.24554014]
[103.70699310 8.74147606]
[104.33097076 23.72849274]
[119.12602234 26.03855324]
[133.18623352 31.19030380]
[145.97138977 38.98580551]
[156.99026489 49.12554169]
[165.81950378 61.21994019]
[172.11988831 74.80431366]
[175.64932251 89.35673523]
[176.27223206 104.31808472]
[173.96467590 119.11352539]
[168.81530762 133.17460632]
[161.02195740 145.96107483]
[150.88407898 156.98165894]
[138.79118347 165.81295776]
[125.20787048 172.11563110]
[110.65604401 175.64753723]
[111.28002167 190.63455200]
[111.90399933 205.62156677]
[112.52797699 220.60858154]
[113.15195465 235.59559631]
[113.77593231 250.58261108]
[114.39990997 265.56964111]
[115.02388763 280.55664062]
[115.64786530 295.54367065]
[116.27184296 310.53067017]
[131.02484131 313.66113281]
[144.53549194 320.36288452]
[155.95446777 330.21466064]
[164.56398010 342.59719849]
[169.82283020 356.73208618]
[171.40043640 371.73083496]
[169.19763184 386.65057373]
[163.35287476 400.55343628]
[154.23359680 412.56549072]
[142.41302490 421.93164062]
[128.63421631 428.06314087]
[113.76331329 430.57452393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[35 114]
[36 113]
[37 112]
[38 109]
[39 108]
[40 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
