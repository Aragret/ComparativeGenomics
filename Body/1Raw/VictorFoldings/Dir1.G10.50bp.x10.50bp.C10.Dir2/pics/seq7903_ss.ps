%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUAUAGCAGGGGGGGGGGCCCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCxxxxxxxxxxACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCUCCAUAAUAUUCAUCCCCCCCCCCCCCUGUAGCA\
) } def
/len { sequence length } bind def

/coor [
[3.35183358 209.79571533]
[-2.95128965 203.90861511]
[-8.89648247 197.66024780]
[-14.46307373 191.07234192]
[-19.63171196 184.16781616]
[-24.38442612 176.97065735]
[-28.70469284 169.50588989]
[-32.57749176 161.79948425]
[-46.48004913 167.43142700]
[-60.38260651 173.06338501]
[-74.28516388 178.69534302]
[-84.17059326 191.04803467]
[-98.87178040 188.65544128]
[-112.77433777 194.28739929]
[-126.67689514 199.91935730]
[-140.13285828 206.54785156]
[-153.07090759 214.13775635]
[-166.00897217 221.72767639]
[-178.94702148 229.31758118]
[-191.88508606 236.90748596]
[-192.40950012 252.32592773]
[-201.20529175 265.00021362]
[-215.46575928 270.88601685]
[-230.64042664 268.10522461]
[-241.88713074 257.54513550]
[-245.61706543 242.57545471]
[-240.64004517 227.97296143]
[-228.54420471 218.39724731]
[-213.18928528 216.90390015]
[-199.47499084 223.96943665]
[-186.53692627 216.37951660]
[-173.59887695 208.78961182]
[-160.66082764 201.19970703]
[-147.72276306 193.60980225]
[-162.13336182 189.44628906]
[-170.64103699 177.09236145]
[-169.39173889 162.14447021]
[-158.95140076 151.37416077]
[-144.04962158 149.66049194]
[-131.43702698 157.77975464]
[-126.82725525 172.05386353]
[-132.30885315 186.01679993]
[-118.40629578 180.38484192]
[-104.50373840 174.75288391]
[-95.61270142 162.80303955]
[-79.91711426 164.79278564]
[-66.01456451 159.16082764]
[-52.11200714 153.52888489]
[-38.20944977 147.89692688]
[-46.07305145 107.65707397]
[-42.45969009 66.81561279]
[-27.65326881 28.58144379]
[-2.81712675 -4.04136419]
[-12.79985332 -15.23713017]
[-22.78257942 -26.43289566]
[-32.76530457 -37.62866211]
[-47.81938171 -45.42681122]
[-44.49336624 -62.05131149]
[-27.59782791 -63.45740128]
[-21.56954002 -47.61138916]
[-11.58681393 -36.41562271]
[-1.60408747 -25.21985626]
[8.37863922 -14.02409077]
[15.33835983 -19.28274727]
[22.59916496 -24.11719322]
[30.13523483 -28.51023865]
[37.91976547 -32.44625854]
[45.92507553 -35.91125488]
[54.12269211 -38.89290619]
[62.48346710 -41.38060760]
[70.97766113 -43.36551285]
[79.57506561 -44.84056473]
[88.24510956 -45.80051422]
[96.95696259 -46.24194717]
[105.67963409 -46.16329575]
[114.38210297 -45.56483841]
[123.03343201 -44.44870377]
[131.60284424 -42.81886292]
[140.05986023 -40.68111038]
[148.37442017 -38.04304886]
[156.51693726 -34.91405869]
[164.45846558 -31.30527115]
[172.17074585 -27.22951698]
[179.62637329 -22.70129395]
[186.79882812 -17.73670197]
[196.30718994 -29.33804321]
[205.81553650 -40.93938446]
[215.32389832 -52.54072571]
[212.25303650 -67.87381744]
[219.80184937 -81.56868744]
[234.40603638 -87.15902710]
[249.16992188 -82.00525665]
[257.12246704 -68.54082489]
[254.50872803 -53.12322617]
[242.56282043 -43.03218079]
[226.92524719 -43.03236771]
[217.41688538 -31.43102646]
[207.90852356 -19.82968521]
[198.40016174 -8.22834396]
[204.60786438 -2.24070358]
[210.45187378 4.10239697]
[215.91188049 10.77890491]
[220.96888733 17.76560783]
[225.60533142 25.03821564]
[229.80506897 32.57144165]
[233.55352783 40.33909988]
[236.83764648 48.31417847]
[239.64604187 56.46895599]
[241.96891785 64.77507782]
[243.79820251 73.20365906]
[245.12754822 81.72541046]
[245.95233154 90.31069183]
[246.26968384 98.92966461]
[246.07850647 107.55236053]
[245.37944031 116.14879608]
[244.17494202 124.68908691]
[242.46919250 133.14353943]
[240.26812744 141.48275757]
[237.57937622 149.67776489]
[234.41232300 157.70005798]
[230.77793884 165.52172852]
[226.68888855 173.11561584]
[222.15937805 180.45529175]
[217.20515442 187.51525879]
[211.84344482 194.27095032]
[206.09288025 200.69889832]
[199.97348022 206.77673340]
[193.50648499 212.48335266]
[186.71440125 217.79888916]
[179.62083435 222.70487976]
[172.25045776 227.18426514]
[164.62889099 231.22146606]
[156.78262329 234.80245972]
[148.73893738 237.91476440]
[140.52578735 240.54759216]
[132.17176819 242.69178772]
[123.70587921 244.33987427]
[115.15757751 245.48612976]
[106.55657959 246.12658691]
[97.93278503 246.25898743]
[89.31617737 245.88290405]
[80.73670959 244.99963379]
[72.22422028 243.61222839]
[63.80829620 241.72554016]
[55.51819992 239.34609985]
[47.38275528 236.48220825]
[39.43024445 233.14379883]
[31.68831635 229.34249878]
[24.18388748 225.09150696]
[16.94304848 220.40560913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 49]
[9 48]
[10 47]
[11 46]
[13 44]
[14 43]
[15 42]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[53 63]
[54 62]
[55 61]
[56 60]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
