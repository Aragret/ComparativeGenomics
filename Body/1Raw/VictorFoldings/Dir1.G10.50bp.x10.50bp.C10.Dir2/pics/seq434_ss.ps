%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGAACCCGGGGGGGGGGUAACACCAGCCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUxxxxxxxxxxUGUGCCUAGACCAAGAAGUUAUUAUCUCGAACUGACACUGAGCCACAACCCCCCCCCCCCCAAACAACCC\
) } def
/len { sequence length } bind def

/coor [
[98.15445709 433.56338501]
[85.59622955 425.21221924]
[75.51000977 413.99975586]
[68.52981567 400.63085938]
[65.09442902 385.94586182]
[65.41980743 370.86791992]
[69.48548889 356.34478760]
[77.03591156 343.28942871]
[87.59644318 332.52255249]
[100.50323486 324.72091675]
[114.94496155 320.37496948]
[114.32098389 305.38793945]
[113.69700623 290.40093994]
[113.07302856 275.41390991]
[112.44905090 260.42691040]
[111.82507324 245.43988037]
[111.20109558 230.45286560]
[110.57711792 215.46585083]
[109.95314789 200.47883606]
[109.32917023 185.49182129]
[108.70519257 170.50480652]
[103.95137787 156.27801514]
[95.44028473 143.92645264]
[86.92919159 131.57487488]
[74.66682434 122.93576050]
[60.17123032 119.07860565]
[45.67563248 115.22144318]
[36.51129532 116.03801727]
[30.92021561 111.13032532]
[16.50799942 106.97243500]
[2.09578419 102.81454468]
[-13.30834198 106.42335510]
[-23.39216614 95.46134186]
[-37.80438232 91.30345154]
[-44.40599442 92.53886414]
[-49.80384064 90.51535797]
[-52.72290802 86.66120148]
[-66.94968414 81.90738678]
[-81.17646790 77.15357208]
[-95.40324402 72.39975739]
[-106.84890747 82.64144897]
[-121.88526917 85.77247620]
[-136.46763611 80.95060730]
[-146.67340088 69.47290039]
[-149.75727844 54.42679214]
[-144.88972473 39.85962296]
[-133.38008118 29.68988037]
[-118.32438660 26.65317535]
[-103.77254486 31.56636810]
[-93.63892365 43.10783386]
[-90.64942932 58.17297363]
[-76.42265320 62.92678833]
[-62.19587326 67.68060303]
[-47.96909332 72.43441772]
[-33.64649582 76.89123535]
[-19.23427963 81.04912567]
[-4.86101103 77.14291382]
[6.25367165 88.40232849]
[20.66588783 92.56021881]
[35.07810211 96.71810913]
[49.53279114 100.72584534]
[64.02838898 104.58300781]
[78.52398682 108.44016266]
[75.03955078 97.60014343]
[77.14871979 85.47640228]
[85.19255829 74.97616577]
[85.19255829 59.97616196]
[85.19255829 44.97616196]
[85.19255829 29.97616196]
[71.41869354 23.40019989]
[61.86876678 11.49382877]
[58.43892670 -3.37893033]
[61.81016922 -18.26508141]
[71.31313324 -30.20896530]
[85.06100464 -36.83911896]
[100.32411957 -36.83911896]
[114.07198334 -30.20896530]
[123.57495117 -18.26508141]
[126.94619751 -3.37893033]
[123.51635742 11.49382877]
[113.96643066 23.40019989]
[100.19255829 29.97616196]
[100.19255829 44.97616196]
[100.19255829 59.97616196]
[100.19255829 74.97616577]
[114.46802521 79.58172607]
[123.23423004 67.40988922]
[120.44989777 51.85279846]
[129.55003357 38.93138504]
[145.13569641 36.31168747]
[157.96017456 45.54793549]
[160.41494751 61.16041946]
[151.04362488 73.88652802]
[135.40606689 76.17609406]
[126.63986206 88.34793091]
[126.17226410 106.93746185]
[114.98015594 120.10916901]
[99.28076935 123.06378937]
[107.79185486 135.41535950]
[116.30294800 147.76693726]
[115.54505157 132.78608704]
[117.96470642 117.98253632]
[123.45299530 104.02263641]
[131.76286316 91.53479767]
[142.52024841 81.08115387]
[155.24090576 73.13226318]
[169.35221863 68.04594421]
[184.21899414 66.05115509]
[199.17198181 67.23768616]
[213.53811646 71.55213165]
[226.67068481 78.80028534]
[237.97854614 88.65586090]
[246.95266724 100.67522430]
[253.18910217 114.31732178]
[256.40710449 128.96806335]
[256.46182251 143.96797180]
[253.35079956 158.64181519]
[247.21408081 172.32905579]
[238.32789612 184.41357422]
[227.09225464 194.35139465]
[214.01290894 201.69517517]
[199.67864990 206.11433411]
[184.73471069 207.40994263]
[169.85379028 205.52368164]
[155.70573425 200.54045105]
[142.92741394 192.68458557]
[132.09403992 182.30970764]
[123.69220734 169.88082886]
[124.31618500 184.86784363]
[124.94016266 199.85485840]
[125.56414032 214.84187317]
[126.18811798 229.82888794]
[126.81209564 244.81590271]
[127.43607330 259.80291748]
[128.06004333 274.78994751]
[128.68402100 289.77694702]
[129.30799866 304.76397705]
[129.93197632 319.75097656]
[144.68498230 322.88143921]
[158.19561768 329.58319092]
[169.61459351 339.43496704]
[178.22410583 351.81750488]
[183.48295593 365.95239258]
[185.06056213 380.95114136]
[182.85775757 395.87088013]
[177.01301575 409.77374268]
[167.89373779 421.78579712]
[156.07316589 431.15194702]
[142.29435730 437.28344727]
[127.42345428 439.79486084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 100]
[23 99]
[24 98]
[25 63]
[26 62]
[27 61]
[29 60]
[30 59]
[31 58]
[33 56]
[34 55]
[37 54]
[38 53]
[39 52]
[40 51]
[66 85]
[67 84]
[68 83]
[69 82]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
