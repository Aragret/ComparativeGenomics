%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACGACCAACGGGGGGGGGGUCAUACACCUCCUAUGAAAAAACUUCCUACCACUCACCCUAGCAUUACUUxxxxxxxxxxCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACAAGCUCCAUCUGCCCCCCCCCCCCUACGACAAAC\
) } def
/len { sequence length } bind def

/coor [
[83.23204803 362.79318237]
[69.74317169 356.06164551]
[58.25767136 346.29705811]
[49.44330215 334.06716919]
[43.81251907 320.08297729]
[41.69269180 305.15750122]
[43.20705795 290.15850830]
[48.26758194 275.95797729]
[56.58004761 263.38156128]
[67.66117859 253.16041565]
[80.86672974 245.88877869]
[95.42895508 241.98941040]
[95.12097931 226.99256897]
[94.81300354 211.99574280]
[94.50502777 196.99890137]
[94.19704437 182.00205994]
[93.88906860 167.00521851]
[93.58109283 152.00837708]
[93.27311707 137.01155090]
[92.96513367 122.01470947]
[92.65715790 107.01786804]
[89.33910370 99.61297607]
[92.50000000 91.71068573]
[92.50000000 76.71068573]
[77.52191162 75.82193756]
[62.62277985 74.04744720]
[47.85493851 71.39342499]
[33.27025986 67.86921692]
[18.91997147 63.48718262]
[4.85448170 58.26272202]
[-8.87680435 52.21419144]
[-22.22565460 45.36282730]
[-35.14517975 37.73270035]
[-47.59000015 29.35061264]
[-59.51640320 20.24600410]
[-70.88249207 10.45085621]
[-81.64835358 -0.00042489]
[-91.77616119 -11.07112885]
[-101.23033905 -22.72236824]
[-109.97769165 -34.91321945]
[-117.98748016 -47.60085678]
[-125.23158264 -60.74072266]
[-131.68453979 -74.28665161]
[-137.32369995 -88.19107056]
[-142.12924194 -102.40514374]
[-146.08428955 -116.87892914]
[-149.17495728 -131.56159973]
[-151.39038086 -146.40156555]
[-152.72277832 -161.34672546]
[-153.16748047 -176.34457397]
[-152.72291565 -191.34240723]
[-151.39064026 -206.28758240]
[-149.17533875 -221.12757874]
[-146.08480835 -235.81027222]
[-142.12988281 -250.28408813]
[-137.32446289 -264.49819946]
[-131.68544006 -278.40267944]
[-125.23259735 -291.94866943]
[-117.98860931 -305.08859253]
[-109.97892761 -317.77630615]
[-101.23168945 -329.96722412]
[-91.77760315 -341.61853027]
[-81.64989471 -352.68933105]
[-70.88413239 -363.14071655]
[-59.51812363 -372.93597412]
[-47.59180069 -382.04067993]
[-35.14705276 -390.42288208]
[-22.22759438 -398.05310059]
[-8.87880516 -404.90460205]
[4.85242748 -410.95324707]
[18.91787148 -416.17782593]
[33.26811981 -420.55999756]
[47.85276794 -424.08432007]
[62.62059021 -426.73846436]
[77.51970673 -428.51309204]
[92.49778748 -429.40197754]
[107.50221252 -429.40197754]
[122.48029327 -428.51309204]
[137.37940979 -426.73846436]
[152.14723206 -424.08432007]
[166.73187256 -420.55999756]
[181.08212280 -416.17782593]
[195.14756775 -410.95324707]
[208.87879944 -404.90460205]
[222.22760010 -398.05310059]
[235.14704895 -390.42288208]
[247.59179688 -382.04067993]
[259.51812744 -372.93597412]
[270.88412476 -363.14071655]
[281.64990234 -352.68933105]
[291.77761841 -341.61853027]
[301.23168945 -329.96722412]
[309.97894287 -317.77630615]
[317.98861694 -305.08859253]
[325.23260498 -291.94866943]
[331.68542480 -278.40267944]
[337.32446289 -264.49819946]
[342.12988281 -250.28408813]
[346.08480835 -235.81027222]
[349.17535400 -221.12757874]
[351.39062500 -206.28758240]
[352.72290039 -191.34240723]
[353.16748047 -176.34457397]
[352.72277832 -161.34672546]
[351.39038086 -146.40156555]
[349.17495728 -131.56159973]
[346.08428955 -116.87892914]
[342.12924194 -102.40514374]
[337.32369995 -88.19107056]
[331.68453979 -74.28665161]
[325.23156738 -60.74072266]
[317.98748779 -47.60085678]
[309.97769165 -34.91321945]
[301.23034668 -22.72236824]
[291.77615356 -11.07112885]
[281.64834595 -0.00042489]
[270.88250732 10.45085621]
[259.51638794 20.24600410]
[247.58999634 29.35061264]
[235.14517212 37.73270035]
[222.22564697 45.36282730]
[208.87680054 52.21419144]
[195.14552307 58.26272202]
[181.08003235 63.48718262]
[166.72973633 67.86921692]
[152.14506531 71.39342499]
[137.37721252 74.04744720]
[122.47808838 75.82193756]
[107.50000000 76.71068573]
[107.50000000 91.71068573]
[107.65399933 106.70989227]
[107.96197510 121.70673370]
[108.26995087 136.70356750]
[108.57792664 151.70040894]
[108.88591003 166.69725037]
[109.19388580 181.69407654]
[109.50186157 196.69091797]
[109.80983734 211.68775940]
[110.11782074 226.68460083]
[110.42579651 241.68142700]
[125.13583374 244.97966003]
[138.62878418 251.70301819]
[150.12020874 261.46060181]
[158.94198608 273.68515015]
[164.58125305 287.66595459]
[166.71012878 302.59011841]
[165.20484924 317.59005737]
[160.15293884 331.79364014]
[151.84809875 344.37509155]
[140.77316284 354.60296631]
[127.57202148 361.88259888]
[113.01216125 365.79080200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[23 130]
[24 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
