%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCUUCCUAGGGGGGGGGGGUCCUGUAUGCCCUUUUCCUAACACUCACAACAAAACUAACUAAUACUAAxxxxxxxxxxCCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUAAAUUAUCCCCCCCCCCUCAGCUUCCUA\
) } def
/len { sequence length } bind def

/coor [
[91.25541687 161.45137024]
[76.80460358 157.57353210]
[63.70156479 150.35038757]
[52.70764542 140.20162964]
[44.46165085 127.71695709]
[39.44271469 113.62179565]
[37.94246292 98.73513031]
[40.04806137 83.92196655]
[45.63717270 70.04301453]
[54.38504028 57.90471268]
[65.78336334 48.21236038]
[79.16984558 41.52912903]
[93.76666260 38.24335098]
[94.07463837 23.24651527]
[94.38262177 8.24967670]
[94.69059753 -6.74716139]
[94.99857330 -21.74399948]
[95.30654907 -36.74083710]
[95.61453247 -51.73767471]
[95.92250824 -66.73451233]
[96.23048401 -81.73135376]
[96.53845978 -96.72818756]
[81.57903290 -97.88432312]
[66.70896912 -99.88493347]
[51.97591019 -102.72361755]
[37.42704391 -106.39128113]
[23.10898018 -110.87616730]
[9.06758308 -116.16392517]
[-4.65216827 -122.23760986]
[-18.00632668 -129.07775879]
[-30.95211220 -136.66247559]
[-43.44805527 -144.96743774]
[-55.45413208 -153.96607971]
[-66.93187714 -163.62954712]
[-77.84452820 -173.92687988]
[-88.15712738 -184.82511902]
[-97.83663940 -196.28933716]
[-106.85205841 -208.28280640]
[-115.17449951 -220.76712036]
[-122.77731323 -233.70228577]
[-129.63613892 -247.04685974]
[-135.72900391 -260.75811768]
[-141.03640747 -274.79208374]
[-145.54132080 -289.10388184]
[-149.22933960 -303.64758301]
[-152.08862305 -318.37664795]
[-154.11003113 -333.24389648]
[-155.28709412 -348.20172119]
[-155.61602783 -363.20214844]
[-155.09577942 -378.19717407]
[-153.72801208 -393.13873291]
[-151.51712036 -407.97897339]
[-148.47018433 -422.67037964]
[-144.59695435 -437.16589355]
[-139.90983582 -451.41903687]
[-134.42385864 -465.38415527]
[-128.15658569 -479.01657104]
[-121.12809753 -492.27258301]
[-113.36090851 -505.10971069]
[-104.87989044 -517.48681641]
[-95.71221924 -529.36431885]
[-85.88726044 -540.70416260]
[-75.43647766 -551.46997070]
[-64.39336395 -561.62725830]
[-52.79328918 -571.14355469]
[-40.67340469 -579.98828125]
[-28.07253838 -588.13317871]
[-15.03105545 -595.55212402]
[-1.59073186 -602.22137451]
[12.20537853 -608.11956787]
[26.31308365 -613.22778320]
[40.68719101 -617.52966309]
[55.28165436 -621.01147461]
[70.04972839 -623.66198730]
[84.94409943 -625.47271729]
[99.91706085 -626.43798828]
[114.92064667 -626.55450439]
[129.90679932 -625.82208252]
[144.82751465 -624.24298096]
[159.63497925 -621.82226562]
[174.28178406 -618.56762695]
[188.72100830 -614.48962402]
[202.90637207 -609.60125732]
[216.79246521 -603.91815186]
[230.33479309 -597.45855713]
[243.48999023 -590.24310303]
[256.21588135 -582.29498291]
[268.47174072 -573.63964844]
[280.21829224 -564.30474854]
[291.41787720 -554.32025146]
[302.03469849 -543.71813965]
[312.03466797 -532.53234863]
[321.38577271 -520.79876709]
[330.05810547 -508.55487061]
[338.02380371 -495.83999634]
[345.25744629 -482.69479370]
[351.73577881 -469.16143799]
[357.43807983 -455.28320312]
[362.34609985 -441.10461426]
[366.44409180 -426.67105103]
[369.71893311 -412.02877808]
[372.16015625 -397.22467041]
[373.75991821 -382.30615234]
[374.51309204 -367.32101440]
[374.41729736 -352.31729126]
[373.47277832 -337.34301758]
[371.68264771 -322.44613647]
[369.05255127 -307.67440796]
[365.59097290 -293.07513428]
[361.30899048 -278.69509888]
[356.22027588 -264.58035278]
[350.34118652 -250.77607727]
[343.69055176 -237.32653809]
[336.28964233 -224.27481079]
[328.16220093 -211.66268921]
[319.33422852 -199.53057861]
[309.83401489 -187.91734314]
[299.69198608 -176.86018372]
[288.94067383 -166.39451599]
[277.61444092 -156.55387878]
[265.74966431 -147.36978149]
[253.38426208 -138.87164307]
[240.55789185 -131.08670044]
[227.31163025 -124.03987122]
[213.68791199 -117.75373840]
[199.73036194 -112.24844360]
[185.48371887 -107.54161835]
[170.99360657 -103.64833069]
[156.30642700 -100.58106232]
[141.46923828 -98.34963989]
[126.52958679 -96.96120453]
[111.53530121 -96.42021179]
[111.22732544 -81.42337036]
[110.91934204 -66.42653656]
[110.61136627 -51.42969894]
[110.30339050 -36.43286133]
[109.99541473 -21.43602180]
[109.68743134 -6.43918419]
[109.37945557 8.55765438]
[109.07147980 23.55449295]
[108.76350403 38.55133057]
[123.21311951 42.43360901]
[136.31393433 49.66078568]
[147.30473328 59.81292725]
[155.54687500 72.30013275]
[160.56147766 86.39685059]
[162.05714417 101.28397369]
[159.94699097 116.09648895]
[154.35360718 129.97372437]
[145.60200500 142.10932922]
[134.20069885 151.79817200]
[120.81215668 158.47727966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
