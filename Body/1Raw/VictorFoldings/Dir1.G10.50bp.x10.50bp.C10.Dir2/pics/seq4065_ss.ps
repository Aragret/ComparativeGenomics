%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCAUAGGGGGGGGGGGCCGAAUACACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCxxxxxxxxxxGAGUGCGGCUUCGACCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAACCCCCCCCCCAUUCUUCUUAG\
) } def
/len { sequence length } bind def

/coor [
[76.53100586 369.15615845]
[63.31278992 361.88009644]
[52.42882538 351.43011475]
[44.62120819 338.51876831]
[40.42226791 324.02630615]
[40.11829758 308.94088745]
[43.73002243 294.29104614]
[51.01119232 281.07562256]
[61.46535873 270.19570923]
[74.37974548 262.39306641]
[88.87381744 258.19973755]
[88.56584167 243.20288086]
[88.25786591 228.20603943]
[87.94989014 213.20921326]
[87.64190674 198.21237183]
[87.33393097 183.21553040]
[87.02595520 168.21868896]
[86.71797943 153.22186279]
[86.40999603 138.22502136]
[86.10202026 123.22817993]
[79.69304657 109.66628265]
[68.30197144 99.90701294]
[56.91089630 90.14773560]
[45.51982498 80.38845825]
[41.08464813 79.73357391]
[37.47758865 77.85935974]
[34.98565674 75.18783569]
[33.72455597 72.19136810]
[33.63738632 69.33069611]
[23.08537102 58.66978455]
[12.53335667 48.00887680]
[0.70656121 57.26325226]
[-12.11465263 65.08200836]
[-25.75689125 71.35942078]
[-40.03565979 76.01057434]
[-54.75785446 78.97258759]
[-69.72437286 80.20538330]
[-84.73281860 79.69230652]
[-99.58020020 77.44028473]
[-114.06574249 73.47978210]
[-127.99353790 67.86435699]
[-141.17523193 60.66994476]
[-153.43255615 51.99385071]
[-164.59973145 41.95340347]
[-174.52575684 30.68439102]
[-183.07638550 18.33921432]
[-190.13597107 5.08482838]
[-195.60903931 -8.89951801]
[-199.42158508 -23.42470360]
[-201.52204895 -38.29428864]
[-201.88201904 -53.30718231]
[-200.49662781 -68.26034546]
[-197.38461304 -82.95156860]
[-192.58805847 -97.18215179]
[-186.17182922 -110.75965118]
[-178.22270203 -123.50045013]
[-168.84819031 -135.23223877]
[-158.17504883 -145.79635620]
[-146.34764099 -155.04994202]
[-133.52589417 -162.86784363]
[-119.88323975 -169.14434814]
[-105.60416412 -173.79455566]
[-90.88176727 -176.75556946]
[-75.91516876 -177.98738098]
[-60.90676117 -177.47329712]
[-46.05952072 -175.22029114]
[-31.57424545 -171.25881958]
[-17.64682388 -165.64245605]
[-4.46561289 -158.44717407]
[7.79112816 -149.77024841]
[18.95763969 -139.72906494]
[28.88290977 -128.45939636]
[37.43270874 -116.11363983]
[44.49140930 -102.85878754]
[49.96355438 -88.87406921]
[53.77513504 -74.34863281]
[55.87460327 -59.47890854]
[56.23357391 -44.46599197]
[54.84718323 -29.51291656]
[51.73418427 -14.82190609]
[46.93667984 -0.59164065]
[40.51954651 12.98543262]
[32.56957245 25.72570038]
[23.19426537 37.45686340]
[33.74628067 48.11777115]
[44.29829407 58.77867889]
[55.27909851 68.99738312]
[66.67017365 78.75666046]
[78.06124878 88.51593781]
[89.45231628 98.27520752]
[84.02309418 89.04442596]
[85.79844666 75.80284119]
[96.63354492 63.41317368]
[115.45819092 57.28515244]
[129.38890076 51.72321701]
[143.31962585 46.16127777]
[142.30812073 31.06717110]
[146.01243591 16.39974976]
[154.06964111 3.59597707]
[165.69038391 -6.08976316]
[179.73617554 -11.70855999]
[194.83096313 -12.70994282]
[209.49589539 -8.99580479]
[222.29426575 -0.93001932]
[231.97221375 10.69720936]
[237.58160400 24.74676514]
[238.57286072 39.84221268]
[234.84890747 54.50465775]
[226.77455139 67.29762268]
[215.14083862 76.96778107]
[201.08752441 82.56774902]
[185.99140930 83.54889679]
[171.33146667 79.81510925]
[158.54391479 71.73218536]
[148.88156128 60.09199524]
[134.95083618 65.65393066]
[121.02012634 71.21586609]
[120.78916168 78.71231079]
[120.32723999 93.70520020]
[120.09627533 101.20163727]
[133.65817261 107.61061859]
[147.22006226 114.01959229]
[162.01240540 108.45523071]
[176.37208557 115.05639648]
[181.77973938 129.90673828]
[175.02711487 144.19581604]
[160.12042236 149.44616699]
[145.90354919 142.54284668]
[140.81109619 127.58148956]
[127.24919128 121.17251587]
[113.68730164 114.76353455]
[101.09886169 122.92020416]
[101.40683746 137.91703796]
[101.71481323 152.91387939]
[102.02278900 167.91072083]
[102.33077240 182.90756226]
[102.63874817 197.90438843]
[102.94672394 212.90122986]
[103.25469971 227.89807129]
[103.56268311 242.89491272]
[103.87065887 257.89175415]
[118.52467346 261.48651123]
[131.74850464 268.75234985]
[142.64053345 279.19390869]
[150.45811462 292.09924316]
[154.66825867 306.58847046]
[154.98387146 321.67364502]
[151.38345337 336.32626343]
[144.11250305 349.54730225]
[133.66673279 360.43530273]
[120.75838470 368.24789429]
[106.26754761 372.45242310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 90]
[22 89]
[23 88]
[24 87]
[29 86]
[30 85]
[31 84]
[94 117]
[95 116]
[96 115]
[120 131]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
