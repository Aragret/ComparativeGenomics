%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUGAACAGGGGGGGGGGUACAAAACCCACCCCAUUCCUCCCCACACUCAUCGCCCUUACCACGCUACxxxxxxxxxxUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCGAAUUGGUAUAUCCCCCCCCCCAGUUUAAACA\
) } def
/len { sequence length } bind def

/coor [
[58.17991257 250.30795288]
[49.74404526 247.70152283]
[41.46913147 244.62203979]
[33.38167191 241.07940674]
[25.50756645 237.08493042]
[17.87203789 232.65141296]
[10.49953556 227.79306030]
[3.41367483 222.52543640]
[-3.36285257 216.86538696]
[-9.80834389 210.83106995]
[-15.90215492 204.44180298]
[-21.62477112 197.71803284]
[-26.95786285 190.68130493]
[-39.56899261 198.80285645]
[-52.18011856 206.92439270]
[-64.79124451 215.04594421]
[-72.20437622 229.02291870]
[-87.09397888 229.40885925]
[-99.70510864 237.53039551]
[-112.31623840 245.65193176]
[-124.92736816 253.77348328]
[-129.71437073 269.08569336]
[-144.72212219 274.75552368]
[-158.43795776 266.43353271]
[-160.34027100 250.50367737]
[-148.96975708 239.18594360]
[-133.04890442 241.16235352]
[-120.43778229 233.04081726]
[-107.82665253 224.91926575]
[-95.21552277 216.79772949]
[-88.70442963 203.40164185]
[-72.91278839 202.43481445]
[-60.30166245 194.31326294]
[-47.69053268 186.19172668]
[-35.07940674 178.07019043]
[-45.31415939 156.79080200]
[-52.22035599 134.21055603]
[-55.63980103 110.84670258]
[-55.49417496 87.23439026]
[-51.78680801 63.91448593]
[-44.60261917 41.42115402]
[-34.10617447 20.26962471]
[-20.53790283 0.94439483]
[-4.20859814 -16.11187363]
[14.50770283 -30.50849152]
[35.18228531 -41.91569138]
[57.34157562 -50.07217789]
[53.93859863 -64.68106842]
[50.53562164 -79.28996277]
[47.13264465 -93.89885712]
[43.72966385 -108.50774384]
[40.32668686 -123.11663818]
[36.92370987 -137.72552490]
[24.03150749 -150.83168030]
[29.70229530 -167.41003418]
[25.99613380 -181.94497681]
[22.28997231 -196.47990417]
[7.21526575 -196.35084534]
[-7.45212221 -199.83381653]
[-20.85944939 -206.72634888]
[-32.22723389 -216.62771606]
[-40.89456177 -228.96224976]
[-46.35752869 -243.01286316]
[-48.29852676 -257.96264648]
[-46.60470963 -272.94244385]
[-41.37454987 -287.08135986]
[-32.91212463 -299.55737305]
[-21.70942497 -309.64511108]
[-8.41776562 -316.75814819]
[6.19009638 -320.48291016]
[21.26487732 -320.60284424]
[35.93015289 -317.11096191]
[49.33329773 -310.21029663]
[60.69507599 -300.30206299]
[69.35492706 -287.96228027]
[74.80937195 -273.90835571]
[76.74131012 -258.95739746]
[75.03840637 -243.97862244]
[69.79967499 -229.84289551]
[61.32968903 -217.37200928]
[50.12088013 -207.29104614]
[36.82490921 -200.18606567]
[40.53107071 -185.65113831]
[44.23723221 -171.11619568]
[54.50360107 -164.64248657]
[57.68336487 -152.51367188]
[51.53260040 -141.12850952]
[54.93558121 -126.51961517]
[58.33855820 -111.91072083]
[61.74153519 -97.30183411]
[65.14451599 -82.69293976]
[68.54749298 -68.08404541]
[71.95046997 -53.47515488]
[85.56060028 -55.34768295]
[99.28269958 -56.01565552]
[113.01035309 -55.47388840]
[126.63713074 -53.72658539]
[140.05735779 -50.78729248]
[153.16699219 -46.67879868]
[165.86436462 -41.43296814]
[178.05102539 -35.09047318]
[189.63249207 -27.70049286]
[200.51895142 -19.32032776]
[210.62597656 -10.01495838]
[219.87522888 0.14346112]
[228.19497681 11.07616329]
[235.52069092 22.69837761]
[241.79559326 34.91998291]
[246.97102356 47.64621735]
[251.00683594 60.77840042]
[253.87176514 74.21470642]
[255.54356384 87.85095215]
[256.00927734 101.58139801]
[255.26533508 115.29958344]
[253.31744385 128.89913940]
[250.18074036 142.27461243]
[264.40753174 147.02842712]
[278.63430786 151.78224182]
[293.57321167 145.93342590]
[307.38754272 154.09086609]
[309.48013306 169.99685669]
[298.24572754 181.44969177]
[282.30236816 179.66372681]
[273.88049316 166.00901794]
[259.65371704 161.25520325]
[245.42692566 156.50138855]
[241.99780273 164.63761902]
[238.11390686 172.56684875]
[233.78767395 180.26367188]
[229.03295898 187.70344543]
[223.86500549 194.86231995]
[218.30035400 201.71739197]
[212.35681152 208.24668884]
[206.05343628 214.42930603]
[199.41041565 220.24545288]
[192.44900513 225.67649841]
[185.19151306 230.70503235]
[177.66117859 235.31495667]
[169.88212585 239.49153137]
[161.87927246 243.22134399]
[153.67823792 246.49247742]
[145.30528259 249.29444885]
[136.78723145 251.61827087]
[128.15135193 253.45651245]
[119.42533112 254.80328369]
[110.63709259 255.65426636]
[101.81478119 256.00674438]
[92.98666382 255.85958862]
[84.18100739 255.21327209]
[75.42601013 254.06985474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 35]
[14 34]
[15 33]
[16 32]
[18 30]
[19 29]
[20 28]
[21 27]
[47 93]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[55 84]
[56 83]
[57 82]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
