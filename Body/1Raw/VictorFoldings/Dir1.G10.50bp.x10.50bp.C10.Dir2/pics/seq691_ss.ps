%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUACGGGGGGGGGGCCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCxxxxxxxxxxUCAUAAAUUAUUCAGCUUCCUACACUAUUAAAGUUUACCACAACCACCACCCCCCCCCCCCCCAUCAUAC\
) } def
/len { sequence length } bind def

/coor [
[246.45741272 207.48075867]
[235.83473206 196.80448914]
[225.92808533 185.46043396]
[216.77935791 173.49652100]
[208.42724609 160.96330261]
[200.90704346 147.91372681]
[194.25056458 134.40295410]
[188.48596191 120.48807526]
[183.63763428 106.22787476]
[179.72605896 91.68261719]
[165.01809692 94.62810516]
[150.31013489 97.57358551]
[135.60217285 100.51906586]
[120.89421082 103.46454620]
[112.09008789 117.38967896]
[95.97048187 120.79264832]
[82.28906250 111.61437988]
[67.64556122 114.86520386]
[53.00205612 118.11602783]
[38.35855484 121.36685944]
[29.85111427 134.41526794]
[14.95421124 137.50346375]
[2.56696892 129.31251526]
[-12.07653236 132.56333923]
[-26.72003365 135.81416321]
[-41.36353683 139.06498718]
[-44.79811478 153.93666077]
[-54.35183334 165.83998108]
[-68.12779999 172.41156006]
[-83.39077759 172.34658813]
[-97.11029816 165.65797424]
[-106.56233215 153.67373657]
[-109.87018585 138.77337646]
[-106.37706757 123.91535187]
[-96.77655029 112.04974365]
[-82.97480774 105.53247070]
[-67.71220398 105.65753937]
[-54.01913452 112.40013123]
[-44.61436081 124.42148590]
[-29.97085953 121.17066193]
[-15.32735825 117.91983795]
[-0.68385684 114.66901398]
[7.07383204 102.00592041]
[21.87811470 98.50051880]
[35.10773087 106.72335815]
[49.75123215 103.47252655]
[64.39472961 100.22170258]
[79.03823090 96.97087860]
[84.54843903 85.51481628]
[95.62527466 79.27723694]
[108.27816010 80.50530243]
[117.94873047 88.75659180]
[132.65669250 85.81110382]
[147.36465454 82.86562347]
[162.07261658 79.92014313]
[176.78057861 76.97465515]
[174.80061340 62.15726852]
[173.78034973 47.24319839]
[173.72399902 32.29454041]
[174.63179016 17.37352943]
[176.49990845 2.54228091]
[179.32057190 -12.13746071]
[183.08200073 -26.60458565]
[187.76850891 -40.79887009]
[193.36059570 -54.66122437]
[199.83493042 -68.13394928]
[207.16455078 -81.16096497]
[215.31893921 -93.68804169]
[224.26409912 -105.66304779]
[233.96279907 -117.03613281]
[244.37463379 -127.75997162]
[255.45625305 -137.78991699]
[267.16149902 -147.08424377]
[279.44161987 -155.60427856]
[292.24548340 -163.31454468]
[305.51980591 -170.18298340]
[319.20925903 -176.18101501]
[333.25686646 -181.28367615]
[347.60415649 -185.46975708]
[362.19140625 -188.72184753]
[376.95782471 -191.02641296]
[391.84194946 -192.37390137]
[406.78182983 -192.75871277]
[421.71530151 -192.17927551]
[436.58010864 -190.63801575]
[451.31445312 -188.14137268]
[465.85693359 -184.69975281]
[480.14706421 -180.32751465]
[494.12533569 -175.04287720]
[507.73355103 -168.86785889]
[520.91503906 -161.82820129]
[533.61505127 -153.95320129]
[545.78057861 -145.27569580]
[557.36108398 -135.83180237]
[568.30828857 -125.66086578]
[578.57672119 -114.80523682]
[588.12359619 -103.31013489]
[596.90917969 -91.22341919]
[604.89691162 -78.59542847]
[612.05358887 -65.47874451]
[618.34942627 -51.92798233]
[623.75823975 -37.99956894]
[628.25750732 -23.75149536]
[631.82849121 -9.24308586]
[646.59454346 -11.88195038]
[661.36059570 -14.52081394]
[671.67492676 -26.80877304]
[687.70867920 -26.26208878]
[697.16210938 -13.30012894]
[692.78332520 2.13379812]
[677.93145752 8.20010567]
[663.99945068 0.24524127]
[649.23339844 2.88410568]
[634.46734619 5.52296972]
[636.15161133 20.48276520]
[636.86022949 35.52054977]
[636.59027100 50.57276917]
[635.34289551 65.57581329]
[633.12322998 80.46626282]
[629.94073486 95.18119049]
[625.80877686 109.65839386]
[620.74487305 123.83669281]
[614.77032471 137.65614319]
[607.91040039 151.05834961]
[600.19409180 163.98664856]
[591.65393066 176.38638306]
[582.32604980 188.20515442]
[572.24981689 199.39297485]
[561.46777344 209.90257263]
[550.02557373 219.68949890]
[537.97149658 228.71237183]
[525.35650635 236.93304443]
[512.23388672 244.31675720]
[498.65902710 250.83229065]
[484.68936157 256.45208740]
[470.38394165 261.15237427]
[455.80316162 264.91323853]
[441.00866699 267.71881104]
[426.06295776 269.55715942]
[411.02923584 270.42056274]
[395.97100830 270.30529785]
[380.95190430 269.21182251]
[366.03543091 267.14477539]
[351.28463745 264.11285400]
[336.76184082 260.12884521]
[322.52844238 255.20957947]
[308.64459229 249.37580872]
[295.16900635 242.65217590]
[282.15859985 235.06707764]
[269.66842651 226.65255737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[17 48]
[18 47]
[19 46]
[20 45]
[23 42]
[24 41]
[25 40]
[26 39]
[104 114]
[105 113]
[106 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
