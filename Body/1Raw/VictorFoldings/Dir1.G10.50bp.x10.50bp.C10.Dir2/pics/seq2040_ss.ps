%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAUUAUAGGGGGGGGGGACCAAGCAUAAUAUAGCAAGGACUAACCCCUAUACCUUCUGCAUAAUGAAxxxxxxxxxxAGACUACGUACAUAACCUAAACCUACUCCAAUGCUAAAACUAAUCGUCCCCCCCCCCCCCAACAAUUAUA\
) } def
/len { sequence length } bind def

/coor [
[85.44290161 436.57165527]
[73.55863190 427.29656982]
[64.23992157 415.44644165]
[58.02855682 401.71029663]
[55.28565598 386.88665771]
[56.17068481 371.83740234]
[60.63219070 357.43743896]
[68.41078949 344.52401733]
[79.05423737 333.84786987]
[91.94374847 326.02966309]
[106.32993317 321.52401733]
[105.39431000 306.55322266]
[104.45867920 291.58242798]
[103.52304840 276.61163330]
[102.58742523 261.64083862]
[101.65179443 246.67004395]
[100.71616364 231.69924927]
[99.78054047 216.72846985]
[98.84490967 201.75767517]
[97.90927887 186.78688049]
[96.97365570 171.81608582]
[96.03802490 156.84529114]
[82.46209717 154.21722412]
[69.91893005 148.39642334]
[59.14715958 139.72569275]
[50.78111267 128.71560669]
[45.31344223 116.01454163]
[43.06612396 102.37041473]
[44.17149734 88.58670044]
[48.56446838 75.47509003]
[55.98635101 63.80768204]
[66.00008392 54.27155304]
[78.01598358 47.42825699]
[91.32646942 43.68077469]
[91.01441193 28.68402100]
[90.70236206 13.68726730]
[90.39030457 -1.30948615]
[90.07824707 -16.30624008]
[80.17120361 -31.79269600]
[89.14403534 -46.84222031]
[88.52005768 -61.82923508]
[87.89608765 -76.81625366]
[72.90612030 -77.61978912]
[58.06041336 -79.84459686]
[43.49341202 -83.47052002]
[29.33704567 -88.46471405]
[15.71951580 -94.78196716]
[2.76414776 -102.36505127]
[-9.41172981 -111.14530182]
[-20.69784737 -121.04319763]
[-30.99199295 -131.96910095]
[-40.20093918 -143.82405090]
[-48.24128723 -156.50070190]
[-55.04022217 -169.88424683]
[-60.53617096 -183.85348511]
[-64.67935181 -198.28187561]
[-67.43225098 -213.03878784]
[-68.76994324 -227.99055481]
[-68.68029785 -243.00177002]
[-67.16413116 -257.93649292]
[-64.23518372 -272.65948486]
[-59.91997528 -287.03735352]
[-54.25758743 -300.93997192]
[-47.29929352 -314.24133301]
[-39.10811996 -326.82107544]
[-29.75824547 -338.56518555]
[-19.33434296 -349.36737061]
[-7.93081903 -359.12976074]
[4.34905338 -367.76397705]
[17.39406395 -375.19180298]
[31.08606911 -381.34594727]
[45.30107498 -386.17071533]
[59.91033936 -389.62240601]
[74.78155518 -391.66976929]
[89.78005219 -392.29421997]
[104.76998901 -391.49011230]
[119.61561584 -389.26477051]
[134.18247986 -385.63833618]
[148.33866882 -380.64361572]
[161.95596313 -374.32586670]
[174.91105652 -366.74230957]
[187.08660889 -357.96160889]
[198.37237549 -348.06332397]
[208.66612244 -337.13702393]
[217.87463379 -325.28173828]
[225.91452026 -312.60479736]
[232.71296692 -299.22100830]
[238.20840454 -285.25158691]
[242.35105896 -270.82302856]
[245.10342407 -256.06600952]
[246.44056702 -241.11419678]
[246.35037231 -226.10298157]
[244.83366394 -211.16830444]
[241.90417480 -196.44543457]
[237.58845520 -182.06770325]
[231.92555237 -168.16532898]
[224.96678162 -154.86418152]
[216.77514648 -142.28475952]
[207.42483521 -130.54096985]
[197.00054932 -119.73917389]
[185.59666443 -109.97719574]
[173.31648254 -101.34343719]
[160.27119446 -93.91609955]
[146.57896423 -87.76243591]
[132.36378479 -82.93817902]
[117.75439453 -79.48703003]
[102.88310242 -77.44023132]
[103.50708008 -62.45321274]
[104.13105774 -47.46619797]
[112.83885193 -39.01152039]
[113.44478607 -26.48746872]
[105.07499695 -16.61829567]
[105.38705444 -1.62154233]
[105.69911194 13.37521172]
[106.01116943 28.37196541]
[106.32322693 43.36871719]
[121.91674042 47.40017700]
[135.75932312 55.63384628]
[146.74508667 67.41194153]
[153.99636841 81.79350281]
[156.93388367 97.62958527]
[155.32292175 113.65504456]
[149.29219055 128.58959961]
[139.32350159 141.24011230]
[126.21324921 150.59594727]
[111.00881195 155.90966797]
[111.94444275 170.88046265]
[112.88007355 185.85125732]
[113.81570435 200.82205200]
[114.75132751 215.79283142]
[115.68695831 230.76362610]
[116.62258911 245.73442078]
[117.55821228 260.70520020]
[118.49384308 275.67599487]
[119.42947388 290.64678955]
[120.36509705 305.61758423]
[121.30072784 320.58837891]
[136.13595581 323.26779175]
[149.89859009 329.42031860]
[161.78848267 338.68820190]
[171.11437988 350.53265381]
[177.33407593 364.26504517]
[180.08595276 379.08700562]
[179.21005249 394.13681030]
[174.75727844 408.53945923]
[166.98651123 421.45761108]
[156.34953308 432.14022827]
[143.46476746 439.96621704]
[129.08131409 444.48059082]
[114.03540802 445.42092896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[40 109]
[41 108]
[42 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
