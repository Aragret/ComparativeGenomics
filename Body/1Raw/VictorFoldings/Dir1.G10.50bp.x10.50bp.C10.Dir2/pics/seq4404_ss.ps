%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAGCAUUACUGGGGGGGGGGUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCAUUCCCCCUCAAAxxxxxxxxxxUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCCCCCCCCCCCUAGCAUUCCU\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 401.36047363]
[70.87159729 396.20547485]
[58.28185654 387.92324829]
[47.94191742 376.96047974]
[40.40940475 363.90835571]
[36.09054184 349.47076416]
[35.21823120 334.42630005]
[37.83952332 319.58630371]
[43.81304932 305.75106812]
[52.81666565 293.66671753]
[64.36482239 283.98492432]
[77.83473969 277.22784424]
[92.50000000 273.75988770]
[92.50000000 258.75988770]
[92.50000000 243.75988770]
[92.50000000 228.75988770]
[92.50000000 213.75988770]
[92.50000000 198.75988770]
[92.50000000 183.75988770]
[92.50000000 168.75988770]
[92.50000000 153.75988770]
[92.50000000 138.75988770]
[92.50000000 123.75988007]
[76.01139832 106.73268890]
[81.23215485 83.61250305]
[73.42710114 70.80308533]
[65.62204742 57.99367142]
[57.81700134 45.18425369]
[50.01195145 32.37483597]
[45.32356644 29.82302094]
[42.41154861 26.08400154]
[41.42985916 22.04981232]
[42.14926529 18.54125786]
[35.13703537 5.28121901]
[28.12480545 -7.97882032]
[14.21155071 -2.33857799]
[-0.20094052 1.86512494]
[-14.96477127 4.58915138]
[-29.92844009 5.80554867]
[-44.93839645 5.50183439]
[-59.84061050 3.68112516]
[-74.48216248 0.36210456]
[-88.71281433 -4.42116880]
[-102.38652039 -10.61961079]
[-115.36297607 -18.16961479]
[-127.50902557 -26.99370766]
[-138.70001221 -37.00133514]
[-148.82112122 -48.08980942]
[-157.76849365 -60.14533615]
[-165.45028687 -73.04421234]
[-171.78768921 -86.65406799]
[-176.71568298 -100.83525848]
[-180.18367004 -115.44223785]
[-182.15608215 -130.32513428]
[-182.61268616 -145.33122253]
[-181.54878235 -160.30650330]
[-178.97528076 -175.09732056]
[-174.91860962 -189.55187988]
[-169.42039490 -203.52186584]
[-162.53704834 -216.86392212]
[-154.33920288 -229.44113159]
[-144.91098022 -241.12445068]
[-134.34913635 -251.79396057]
[-122.76205444 -261.34017944]
[-110.26863098 -269.66519165]
[-96.99707794 -276.68350220]
[-83.08357239 -282.32312012]
[-68.67089844 -286.52621460]
[-53.90694809 -289.24957275]
[-38.94322586 -290.46530151]
[-23.93328285 -290.16094971]
[-9.03114700 -288.33956909]
[5.61026096 -285.01989746]
[19.84069633 -280.23602295]
[33.51413345 -274.03695679]
[46.49025726 -266.48638916]
[58.63591385 -257.66177368]
[69.82646942 -247.65364075]
[79.94709015 -236.56472778]
[88.89392090 -224.50880432]
[96.57514954 -211.60958862]
[102.91195679 -197.99945068]
[107.83931732 -183.81805420]
[111.30667114 -169.21092224]
[113.27843475 -154.32792664]
[113.73436737 -139.32182312]
[112.66980743 -124.34659576]
[110.09566498 -109.55589294]
[106.03835297 -95.10150909]
[100.53952026 -81.13175964]
[93.65557861 -67.79000854]
[85.45717621 -55.21315384]
[76.02844238 -43.53025818]
[65.46613312 -32.86120987]
[53.87863159 -23.31548882]
[41.38484573 -14.99104977]
[48.39707565 -1.73101008]
[55.40930176 11.52902889]
[62.82136917 24.56978416]
[70.62641907 37.37920380]
[78.43147278 50.18862152]
[86.23651886 62.99803925]
[94.04157257 75.80745697]
[103.66942596 75.35619354]
[112.74816132 78.59284210]
[119.91915131 85.03305054]
[124.10925293 93.71304321]
[139.09001160 94.47277832]
[154.07075500 95.23252106]
[145.15576172 83.16922760]
[147.19641113 68.30868530]
[159.03315735 59.09502029]
[173.94004822 60.76366806]
[183.44664001 72.36646271]
[182.15103149 87.31040955]
[170.78935242 97.10399628]
[185.56730652 99.67544556]
[198.34712219 90.37751007]
[213.94522095 92.92206573]
[223.10752869 105.79947662]
[220.39820862 121.36980438]
[207.42463684 130.39544678]
[191.88383484 127.52165222]
[182.99584961 114.45339203]
[168.21791077 111.88194275]
[153.31101990 110.21326447]
[138.33026123 109.45352936]
[123.34951782 108.69379425]
[120.79183960 113.72885132]
[117.16595459 118.05857086]
[112.65814209 121.46051025]
[107.50000000 123.75988007]
[107.50000000 138.75988770]
[107.50000000 153.75988770]
[107.50000000 168.75988770]
[107.50000000 183.75988770]
[107.50000000 198.75988770]
[107.50000000 213.75988770]
[107.50000000 228.75988770]
[107.50000000 243.75988770]
[107.50000000 258.75988770]
[107.50000000 273.75988770]
[122.16526031 277.22784424]
[135.63517761 283.98492432]
[147.18333435 293.66671753]
[156.18695068 305.75106812]
[162.16047668 319.58630371]
[164.78176880 334.42630005]
[163.90945435 349.47076416]
[159.59059143 363.90835571]
[152.05809021 376.96047974]
[141.71813965 387.92324829]
[129.12840271 396.20547485]
[114.96779633 401.36047363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[33 98]
[34 97]
[35 96]
[107 128]
[108 127]
[109 126]
[116 125]
[117 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
