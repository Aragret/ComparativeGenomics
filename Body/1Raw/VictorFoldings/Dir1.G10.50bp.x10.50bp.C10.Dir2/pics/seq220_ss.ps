%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUUCCACGGGGGGGGGGACAGACAUCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUxxxxxxxxxxGAAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCCCCCCCCCCCACCUUCCAC\
) } def
/len { sequence length } bind def

/coor [
[-11.59131241 205.40637207]
[-19.41848755 196.44868469]
[-26.52851295 186.91178894]
[-32.87868881 176.85295105]
[-38.43088531 166.33259583]
[-43.15175247 155.41389465]
[-47.01294327 144.16239929]
[-49.99127197 132.64569092]
[-52.06884766 120.93295288]
[-53.23320007 109.09449005]
[-68.23239136 109.25052643]
[-83.23157501 109.40656281]
[-98.23076630 109.56259918]
[-113.22994995 109.71863556]
[-128.22914124 109.87467194]
[-143.22589111 110.18672943]
[-158.21859741 110.65476990]
[-173.21128845 111.12281036]
[-188.20397949 111.59085846]
[-203.19668579 112.05889893]
[-205.41584778 126.93556213]
[-210.25587463 141.17683411]
[-217.56118774 154.32492065]
[-227.09695435 165.95716858]
[-238.55662537 175.69963074]
[-251.57182312 183.23915100]
[-265.72415161 188.33334351]
[-280.55871582 190.81848145]
[-295.59860229 190.61463928]
[-310.36035156 187.72840881]
[-324.36944580 182.25253296]
[-337.17553711 174.36306763]
[-348.36697388 164.31359863]
[-357.58398438 152.42720032]
[-364.53030396 139.08596802]
[-368.98260498 124.71875763]
[-370.79779053 109.78741455]
[-369.91748047 94.77192688]
[-366.36999512 80.15498352]
[-360.26937866 66.40644836]
[-351.81173706 53.96828079]
[-341.26892090 43.24032211]
[-328.97988892 34.56743240]
[-315.33963013 28.22840500]
[-300.78665161 24.42701530]
[-285.78875732 23.28546143]
[-270.82809448 24.84043884]
[-256.38555908 29.04196548]
[-242.92541504 35.75497437]
[-230.88037109 44.76367569]
[-220.63761902 55.77847290]
[-212.52641296 68.44528198]
[-206.80749512 82.35692596]
[-203.66471863 97.06620026]
[-188.67202759 96.59815979]
[-173.67933655 96.13011932]
[-158.68663025 95.66207886]
[-143.69393921 95.19403076]
[-137.06362915 91.81993103]
[-128.38517761 94.87548828]
[-113.38598633 94.71945190]
[-98.38680267 94.56341553]
[-83.38761139 94.40737915]
[-68.38842773 94.25133514]
[-53.38923645 94.09529877]
[-51.91866684 78.00360107]
[-48.76467133 62.15563583]
[-43.96219635 46.72703552]
[-37.56446457 31.88875580]
[-29.64236259 17.80522537]
[-20.28367996 4.63250303]
[-9.59212112 -7.48344135]
[2.31383967 -18.40834999]
[15.30227184 -28.02116203]
[29.22924805 -36.21535873]
[43.94044495 -42.90013885]
[59.27284241 -48.00142288]
[75.05654144 -51.46269226]
[91.11663818 -53.24558258]
[107.27517700 -53.33034515]
[123.35309601 -51.71603775]
[139.17224121 -48.42054749]
[154.55731201 -43.48039246]
[169.33782959 -36.95031357]
[183.35000610 -28.90267754]
[196.43856812 -19.42665482]
[206.42129517 -30.62242126]
[216.40402222 -41.81818771]
[212.16906738 -56.65290070]
[216.64851379 -71.41562653]
[228.41300964 -81.39562988]
[243.70851135 -83.40833282]
[257.65429688 -76.81148529]
[265.80032349 -63.71011734]
[265.54721069 -48.28482819]
[256.97573853 -35.45777512]
[242.82102966 -29.32201958]
[227.59979248 -31.83546066]
[217.61706543 -20.63969421]
[207.63433838 -9.44392872]
[222.87763977 7.99885607]
[235.32261658 27.53680611]
[244.68585205 48.72497940]
[250.75411987 71.08084869]
[253.38923645 94.09529877]
[268.38842773 94.25133514]
[283.38760376 94.40737915]
[298.38681030 94.56341553]
[313.38598633 94.71945190]
[322.52832031 82.18161011]
[337.30450439 77.44406891]
[352.03277588 82.32849884]
[361.04980469 94.95674133]
[360.88839722 110.47297668]
[351.61059570 122.91089630]
[336.78390503 127.48786926]
[322.10946655 122.44395447]
[313.22994995 109.71863556]
[298.23077393 109.56259918]
[283.23156738 109.40656281]
[268.23239136 109.25052643]
[253.23320007 109.09449005]
[252.06884766 120.93295288]
[249.99127197 132.64569092]
[247.01293945 144.16239929]
[243.15174866 155.41389465]
[238.43087769 166.33259583]
[232.87869263 176.85295105]
[226.52851868 186.91178894]
[219.41848755 196.44868469]
[211.59130859 205.40637207]
[203.09399414 213.73104858]
[193.97755432 221.37274170]
[184.29675293 228.28553772]
[174.10971069 234.42794800]
[163.47763062 239.76306152]
[152.46432495 244.25885010]
[141.13597107 247.88832092]
[129.56057739 250.62966919]
[117.80764771 252.46643066]
[105.94779205 253.38757324]
[94.05220795 253.38757324]
[82.19235229 252.46643066]
[70.43943024 250.62966919]
[58.86403275 247.88832092]
[47.53566742 244.25885010]
[36.52237320 239.76306152]
[25.89028358 234.42794800]
[15.70324707 228.28553772]
[6.02244329 221.37274170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[86 100]
[87 99]
[88 98]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
