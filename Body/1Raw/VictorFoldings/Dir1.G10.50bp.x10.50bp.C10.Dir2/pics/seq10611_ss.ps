%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUAACCCGGGGGGGGGGUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAxxxxxxxxxxACGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCACCCCCCCCCCACCCUGACCC\
) } def
/len { sequence length } bind def

/coor [
[85.05905151 395.13757324]
[71.21311188 389.12155151]
[59.50444794 379.59213257]
[50.80192184 367.25646973]
[45.75131989 353.02993774]
[44.72742844 337.96826172]
[47.80622864 323.18911743]
[54.75925064 309.78918457]
[65.07053375 298.76284790]
[77.97491455 290.92834473]
[92.51480103 286.86703491]
[92.51480103 271.86703491]
[92.51480103 256.86703491]
[92.51480103 241.86701965]
[92.51480103 226.86701965]
[92.51480103 211.86701965]
[92.51480103 196.86701965]
[92.51480103 181.86701965]
[92.51480103 166.86701965]
[92.51480103 151.86701965]
[92.51480103 136.86701965]
[92.51480103 121.86702728]
[92.51480103 106.86702728]
[89.34870911 99.39307404]
[92.67408752 91.55577850]
[92.98614502 76.55902863]
[93.29819489 61.56227112]
[92.36257172 46.59148026]
[90.18572998 31.75027466]
[88.00889587 16.90906906]
[85.83206177 2.06786370]
[70.86151886 3.11681795]
[55.85452271 3.03055811]
[40.89702988 1.80957830]
[26.07471657 -0.53912753]
[11.47248459 -4.00210619]
[-2.82602406 -8.55952168]
[-16.73890877 -14.18526936]
[-30.18647575 -20.84712601]
[-43.09169769 -28.50692940]
[-55.38065720 -37.12080765]
[-66.98295593 -46.63941956]
[-77.83214569 -57.00824356]
[-87.86607361 -68.16788483]
[-97.02727509 -80.05442810]
[-105.26326752 -92.59977722]
[-112.52687073 -105.73207855]
[-118.77649689 -119.37611389]
[-123.97633362 -133.45372009]
[-128.09658813 -147.88427734]
[-131.11369324 -162.58511353]
[-133.01033020 -177.47201538]
[-133.77565002 -192.45973206]
[-133.40527344 -207.46241760]
[-131.90132141 -222.39410400]
[-129.27239990 -237.16929626]
[-125.53356934 -251.70333862]
[-120.70625305 -265.91299438]
[-114.81809235 -279.71688843]
[-107.90282440 -293.03588867]
[-100.00005341 -305.79379272]
[-91.15504456 -317.91744995]
[-81.41847229 -329.33746338]
[-70.84609222 -339.98837280]
[-59.49847412 -349.80923462]
[-47.44061279 -358.74371338]
[-34.74157333 -366.74072266]
[-21.47410202 -373.75439453]
[-7.71418858 -379.74456787]
[6.45934868 -384.67691040]
[20.96532249 -388.52322388]
[35.72064590 -391.26144409]
[50.64080048 -392.87588501]
[65.64031982 -393.35729980]
[80.63329315 -392.70294189]
[95.53383636 -390.91653442]
[110.25659943 -388.00836182]
[124.71725464 -383.99502563]
[138.83296204 -378.89953613]
[152.52288818 -372.75106812]
[165.70858765 -365.58486938]
[178.31455994 -357.44195557]
[190.26858521 -348.36898804]
[201.50219727 -338.41793823]
[211.95104980 -327.64581299]
[221.55528259 -316.11428833]
[230.25988770 -303.88943481]
[238.01499939 -291.04125977]
[244.77621460 -277.64337158]
[250.50479126 -263.77249146]
[255.16792297 -249.50811768]
[258.73889160 -234.93191528]
[261.19726562 -220.12739563]
[262.52890015 -205.17935181]
[262.72625732 -190.17340088]
[261.78814697 -175.19551086]
[259.71994019 -160.33146667]
[256.53353882 -145.66639709]
[252.24711609 -131.28431702]
[246.88528442 -117.26761627]
[240.47872925 -103.69656372]
[233.06416321 -90.64889526]
[224.68405151 -78.19935608]
[215.38638306 -66.41925812]
[205.22442627 -55.37606812]
[194.25637817 -45.13304901]
[182.54508972 -35.74886703]
[170.15760803 -27.27728081]
[157.16490173 -19.76680946]
[143.64141846 -13.26047516]
[129.66458130 -7.79554701]
[115.31446075 -3.40332675]
[100.67326355 -0.10897326]
[102.85010529 14.73223209]
[105.02693939 29.57343864]
[107.20377350 44.41464233]
[115.78105927 32.10894394]
[129.89994812 27.04366302]
[144.34378052 31.09031868]
[153.77586365 42.75375748]
[154.71122742 57.72456360]
[146.80427551 70.47132874]
[132.97645569 76.28437042]
[118.33688354 73.01589203]
[108.29495239 61.87432861]
[107.98289490 76.87107849]
[107.67083740 91.86783600]
[107.51480103 106.86702728]
[107.51480103 121.86702728]
[107.51480103 136.86701965]
[107.51480103 151.86701965]
[107.51480103 166.86701965]
[107.51480103 181.86701965]
[107.51480103 196.86701965]
[107.51480103 211.86701965]
[107.51480103 226.86701965]
[107.51480103 241.86701965]
[107.51480103 256.86703491]
[107.51480103 271.86703491]
[107.51480103 286.86703491]
[122.05468750 290.92834473]
[134.95907593 298.76284790]
[145.27035522 309.78918457]
[152.22337341 323.18911743]
[155.30216980 337.96826172]
[154.27828979 353.02993774]
[149.22767639 367.25646973]
[140.52516174 379.59213257]
[128.81649780 389.12155151]
[114.97055817 395.13757324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[25 127]
[26 126]
[27 125]
[28 116]
[29 115]
[30 114]
[31 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
