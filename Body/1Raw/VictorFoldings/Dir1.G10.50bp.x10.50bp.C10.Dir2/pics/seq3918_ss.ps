%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCACAACGGGGGGGGGGACAAGAACACCUCUGAUUACUCCUGCCAUCAUGACCCUUGGCCAUAAUAUxxxxxxxxxxCCCUGACCCCUCUCCUUCAUAAAUUAUUCAGCUUCCUACACUAUUAAAGUCCCCCCCCCCUUACCACAAC\
) } def
/len { sequence length } bind def

/coor [
[108.01448822 491.80969238]
[94.16854858 485.79367065]
[82.45988464 476.26425171]
[73.75736237 463.92858887]
[68.70676422 449.70205688]
[67.68286896 434.64038086]
[70.76167297 419.86123657]
[77.71469116 406.46130371]
[88.02597809 395.43496704]
[100.93035889 387.60046387]
[115.47024536 383.53915405]
[115.47024536 368.53915405]
[115.47024536 353.53915405]
[115.47024536 338.53915405]
[115.47024536 323.53915405]
[115.47024536 308.53915405]
[115.47024536 293.53915405]
[115.47024536 278.53915405]
[115.47024536 263.53915405]
[115.47024536 248.53913879]
[115.47024536 233.53913879]
[115.47024536 218.53913879]
[113.29340363 203.69793701]
[108.98582458 189.32975769]
[104.67823792 174.96156311]
[97.21824646 187.97496033]
[83.20005798 193.31260681]
[68.97404480 188.55648804]
[60.98474121 175.86116028]
[62.85137177 160.97776794]
[73.72833252 150.64860535]
[88.68826294 149.55288696]
[100.95439148 158.18731689]
[98.77754974 143.34611511]
[96.60071564 128.50491333]
[94.42388153 113.66370392]
[91.08621216 128.28765869]
[80.10823059 138.50939941]
[65.28363037 140.79656982]
[51.73537827 134.35879517]
[44.14538193 121.42079163]
[45.13653183 106.45357513]
[54.36631393 94.62940216]
[68.64517212 90.03437805]
[83.03901672 94.25661469]
[71.14663696 85.11488342]
[59.25425720 75.97314453]
[47.36187744 66.83141327]
[33.19785690 72.77078247]
[17.96380424 70.81649780]
[5.75760555 61.49424744]
[-0.13733493 47.31167984]
[1.86469293 32.08382797]
[11.22515392 19.90690994]
[25.42613029 14.05645466]
[40.64763260 16.10620499]
[52.79515076 25.50478745]
[58.60106277 39.72403336]
[56.50361252 54.93903351]
[68.39598846 64.08077240]
[80.28836823 73.22250366]
[92.18074799 82.36423492]
[95.22944641 86.28653717]
[97.56736755 90.56080627]
[103.63037872 76.84075165]
[109.69338989 63.12069702]
[115.75640869 49.40064240]
[121.81941986 35.68058777]
[109.32646179 27.30818939]
[98.47727966 16.89346886]
[89.60157013 4.75291824]
[82.96906281 -8.74452305]
[78.78130341 -23.18868446]
[77.16555786 -38.14062500]
[78.17092133 -53.14596939]
[81.76684570 -67.74872589]
[87.84406281 -81.50512695]
[96.21787262 -93.99713898]
[106.63382721 -104.84513092]
[118.77538300 -113.71946716]
[132.27357483 -120.35044098]
[146.71821594 -124.53656769]
[161.67033386 -126.15061951]
[176.67556763 -125.14354706]
[191.27790833 -121.54596710]
[205.03363037 -115.46719360]
[217.52468872 -107.09195709]
[228.37150574 -96.67478180]
[237.24446106 -84.53221893]
[243.87390137 -71.03327179]
[248.05839539 -56.58816147]
[249.67074585 -41.63585663]
[248.66197205 -26.63073921]
[245.06272888 -12.02880096]
[238.98240662 1.72622359]
[230.60575867 14.21633434]
[220.18734741 25.06196976]
[208.04377747 33.93354416]
[194.54408264 40.56146240]
[180.09849548 44.74430847]
[165.14599609 46.35496902]
[150.14100647 45.34449768]
[135.53947449 41.74360275]
[129.47645569 55.46365738]
[123.41344452 69.18370819]
[117.35043335 82.90376282]
[111.28742218 96.62381744]
[109.26508331 111.48686218]
[111.44192505 126.32807159]
[113.61875916 141.16928101]
[115.79559326 156.01048279]
[119.04642487 170.65397644]
[123.35400391 185.02217102]
[127.66159058 199.39035034]
[132.05058289 185.04682922]
[141.51184082 173.40702820]
[154.65608215 166.18008423]
[169.55331421 164.42716980]
[184.01608276 168.40565491]
[195.92074585 177.53138733]
[203.51930237 190.46435547]
[205.69601440 205.30558777]
[202.13127136 219.87585449]
[193.34848022 232.03572083]
[180.63728333 239.99972534]
[165.86410522 242.59846497]
[151.19818115 239.45034790]
[138.79296875 231.01762390]
[130.47024536 218.53913879]
[130.47024536 233.53913879]
[130.47024536 248.53913879]
[130.47024536 263.53915405]
[130.47024536 278.53915405]
[130.47024536 293.53915405]
[130.47024536 308.53915405]
[130.47024536 323.53915405]
[130.47024536 338.53915405]
[130.47024536 353.53915405]
[130.47024536 368.53915405]
[130.47024536 383.53915405]
[145.01013184 387.60046387]
[157.91450500 395.43496704]
[168.22579956 406.46130371]
[175.17881775 419.86123657]
[178.25761414 434.64038086]
[177.23371887 449.70205688]
[172.18312073 463.92858887]
[163.48060608 476.26425171]
[151.77194214 485.79367065]
[137.92599487 491.80969238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 114]
[24 113]
[25 112]
[33 111]
[34 110]
[35 109]
[36 108]
[45 62]
[46 61]
[47 60]
[48 59]
[64 107]
[65 106]
[66 105]
[67 104]
[68 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
