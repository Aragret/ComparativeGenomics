%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAAGCGAAGGGGGGGGGGCUACUAUACUCAAUUGAUCCAAUAACUUGACCAACGGAACAAGUUACCCUxxxxxxxxxxCUCUAACAGCAGUAAUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCGCUCCCCCCCCCCUCGAAGCGAA\
) } def
/len { sequence length } bind def

/coor [
[92.75139618 485.25100708]
[78.90545654 479.23498535]
[67.19679260 469.70556641]
[58.49427032 457.36990356]
[53.44366837 443.14337158]
[52.41977692 428.08169556]
[55.49857712 413.30252075]
[62.45159531 399.90261841]
[72.76287842 388.87628174]
[85.66725922 381.04177856]
[100.20714569 376.98043823]
[100.20714569 361.98043823]
[100.20714569 346.98043823]
[100.20714569 331.98043823]
[100.20714569 316.98043823]
[100.20714569 301.98043823]
[100.20714569 286.98043823]
[100.20714569 271.98043823]
[100.20714569 256.98043823]
[100.20714569 241.98045349]
[89.83103943 238.92779541]
[81.01388550 232.98843384]
[74.51636505 224.80891418]
[70.85784912 215.22189331]
[70.27599335 205.16213989]
[72.71408081 195.57554626]
[77.83657074 187.33020020]
[85.07035065 181.13784790]
[93.66697693 177.49278259]
[92.73135376 162.52200317]
[91.79572296 147.55120850]
[90.86009216 132.58041382]
[89.92446899 117.60961914]
[79.04563904 107.28241730]
[64.04645538 107.12638092]
[49.04726410 106.97034454]
[33.14609146 112.85159302]
[23.09280396 99.19993591]
[33.42792130 85.76037598]
[49.20330048 91.97115326]
[64.20249176 92.12718964]
[79.20167542 92.28322601]
[84.39709473 78.21170807]
[72.89528656 68.58318329]
[61.39348602 58.95465851]
[49.89168167 49.32612991]
[38.38987732 39.69760513]
[26.88807487 30.06907845]
[15.38627243 20.44055176]
[-2.79517508 17.71752930]
[-8.22991562 1.06029296]
[-19.92953873 -8.32686901]
[-36.06752777 -13.52317524]
[-35.54173660 -30.46896744]
[-19.11263847 -34.65478516]
[-10.54237747 -20.02649307]
[1.15724611 -10.63933086]
[13.25312424 -11.63786030]
[23.08560753 -3.85703468]
[25.01479912 8.93874931]
[36.51660156 18.56727600]
[48.01840591 28.19580078]
[59.52021027 37.82432938]
[71.02201080 47.45285416]
[82.52381897 57.08137894]
[94.02561951 66.70990753]
[108.86682129 64.53306580]
[97.56230927 54.63753510]
[87.71057129 43.29482269]
[79.49515533 30.71623993]
[73.06910706 17.13611984]
[68.55213928 2.80745196]
[66.02839661 -12.00283146]
[65.54489899 -27.01882172]
[67.11065674 -41.96078110]
[70.69648743 -56.55035019]
[76.23560333 -70.51573944]
[83.62480927 -83.59677124]
[92.72644806 -95.54975891]
[103.37095642 -106.15203094]
[115.36004639 -115.20606232]
[128.47035217 -122.54319000]
[142.45765686 -128.02673340]
[157.06137085 -131.55451965]
[172.00944519 -133.06085205]
[187.02339172 -132.51763916]
[201.82351685 -129.93502808]
[216.13410950 -125.36111450]
[229.68856812 -118.88111877]
[242.23439026 -110.61575317]
[253.53782654 -100.71899414]
[263.38833618 -89.37521362]
[271.60238647 -76.79573822]
[278.02697754 -63.21492767]
[282.54238892 -48.88576889]
[285.06451416 -34.07521439]
[285.54638672 -19.05916977]
[283.97903442 -4.11737919]
[280.39160156 10.47180271]
[274.85098267 24.43658829]
[267.46035767 37.51681900]
[258.35745239 49.46882629]
[247.71177673 60.06994247]
[235.72171021 69.12268066]
[222.61061096 76.45838928]
[208.62271118 81.94041443]
[194.01861572 85.46662140]
[179.07038879 86.97132874]
[164.05648804 86.42649841]
[149.25663757 83.84228516]
[134.94654846 79.26682281]
[121.39278412 72.78536224]
[128.43087769 94.98321533]
[119.64952087 112.19065857]
[104.89525604 116.67399597]
[105.83088684 131.64479065]
[106.76651764 146.61557007]
[107.70214081 161.58636475]
[108.63777161 176.55715942]
[132.35049438 191.19917297]
[135.46430969 221.29739380]
[148.55746460 228.61650085]
[161.65061951 235.93560791]
[178.03175354 235.16723633]
[186.65881348 249.11378479]
[178.65699768 263.42822266]
[162.25790405 263.38510132]
[154.33151245 249.02874756]
[141.23835754 241.70965576]
[128.14520264 234.39054871]
[115.20714569 241.98045349]
[115.20714569 256.98043823]
[115.20714569 271.98043823]
[115.20714569 286.98043823]
[115.20714569 301.98043823]
[115.20714569 316.98043823]
[115.20714569 331.98043823]
[115.20714569 346.98043823]
[115.20714569 361.98043823]
[115.20714569 376.98043823]
[129.74703979 381.04177856]
[142.65141296 388.87628174]
[152.96270752 399.90261841]
[159.91572571 413.30252075]
[162.99452209 428.08169556]
[161.97062683 443.14337158]
[156.92002869 457.36990356]
[148.21749878 469.70556641]
[136.50885010 479.23498535]
[122.66290283 485.25100708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[29 119]
[30 118]
[31 117]
[32 116]
[33 115]
[34 42]
[35 41]
[36 40]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[51 57]
[52 56]
[67 112]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
