%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACACCUAGCGGGGGGGGGGAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUUAUCAxxxxxxxxxxCCUCCUCGGACUCCUGCCUCACUCAUUUACACCAACCACCCAACUAUCUACCCCCCCCCCUAAACCUAGC\
) } def
/len { sequence length } bind def

/coor [
[130.32771301 497.18374634]
[116.48177338 491.16772461]
[104.77311707 481.63830566]
[96.07058716 469.30264282]
[91.01998901 455.07611084]
[89.99609375 440.01443481]
[93.07489777 425.23526001]
[100.02791595 411.83535767]
[110.33920288 400.80902100]
[123.24358368 392.97451782]
[137.78346252 388.91317749]
[137.78346252 373.91317749]
[137.78346252 358.91317749]
[137.78346252 343.91317749]
[137.78346252 328.91317749]
[137.78346252 313.91317749]
[137.78346252 298.91317749]
[137.78346252 283.91317749]
[137.78346252 268.91317749]
[137.78346252 253.91319275]
[137.62742615 238.91400146]
[134.98857117 224.14794922]
[130.08702087 209.97138977]
[125.18546295 195.79483032]
[120.28391266 181.61827087]
[115.38236237 167.44171143]
[100.06228638 169.17367554]
[84.73911285 167.46931458]
[70.17405701 162.41325378]
[57.09066010 154.25671387]
[46.13887405 143.40484619]
[37.86274338 130.39677429]
[32.67340851 115.87866974]
[30.82865334 100.57176208]
[32.42012405 85.23645020]
[37.36875916 70.63455200]
[45.42872620 57.49143600]
[56.19963074 46.46001816]
[69.14640045 38.08830643]
[63.95098877 24.01678848]
[58.75557327 9.94526863]
[53.41405869 -4.07144451]
[41.16487885 -14.08484268]
[43.71026611 -28.76034164]
[38.22323227 -42.72073364]
[23.59915543 -39.26862335]
[8.63263321 -37.93295670]
[-6.37163067 -38.74093246]
[-21.10816956 -41.67609406]
[-35.27696609 -46.67868805]
[-48.58956528 -53.64686584]
[-60.77493286 -62.43876648]
[-71.58499908 -72.87540436]
[-80.79967499 -84.74428558]
[-88.23136902 -97.80379486]
[-93.72877502 -111.78804779]
[-97.17997742 -126.41233826]
[-98.51471710 -141.37893677]
[-97.70581818 -156.38316345]
[-94.76974487 -171.11950684]
[-89.76627350 -185.28799438]
[-82.79727173 -198.60017395]
[-74.00461578 -210.78498840]
[-63.56731033 -221.59440613]
[-51.69785309 -230.80834961]
[-38.63788605 -238.23924255]
[-24.65329552 -243.73577881]
[-10.02878952 -247.18608093]
[4.93789721 -248.51989746]
[19.94206047 -247.71006775]
[34.67823792 -244.77307129]
[48.84641647 -239.76872253]
[62.15814972 -232.79890442]
[74.34243011 -224.00549316]
[85.15119934 -213.56752014]
[94.36441040 -201.69749451]
[101.79448700 -188.63706970]
[107.29016113 -174.65213013]
[110.73955536 -160.02742004]
[112.07244110 -145.06063843]
[111.26168823 -130.05653381]
[108.32378387 -115.32054138]
[103.31856537 -101.15267181]
[96.34790802 -87.84136963]
[87.55374908 -75.65763092]
[77.11510468 -64.84950256]
[65.24450684 -55.63703156]
[52.18362427 -48.20776367]
[57.67065430 -34.24737549]
[69.52736664 -25.23251534]
[67.37445068 -9.55847645]
[72.78334808 -4.45068741]
[72.82709503 4.74985266]
[78.02250671 18.82137299]
[83.21792603 32.89289093]
[97.60105896 30.86790085]
[112.08996582 31.89100838]
[126.04582214 35.91710663]
[138.85328674 42.76867676]
[149.94767761 52.14363098]
[158.83982849 63.62861633]
[165.13766479 76.71725464]
[168.56353760 90.83244324]
[168.96636963 105.35184479]
[166.32841492 119.63527679]
[160.76597595 133.05296326]
[152.52430725 145.01332092]
[141.96679688 154.98899841]
[129.55892944 162.54016113]
[134.46047974 176.71672058]
[139.36203003 190.89328003]
[144.26358032 205.06983948]
[149.16513062 219.24639893]
[152.77960205 204.68838501]
[161.32601929 192.36123657]
[173.69140625 183.87022400]
[188.26548767 180.32112122]
[203.15034485 182.17608643]
[216.40759277 189.19357300]
[226.31082153 200.45971680]
[231.57037354 214.50740051]
[231.50131226 229.50723267]
[226.11264038 243.50588989]
[216.10609436 254.68037415]
[202.78477478 261.57546997]
[187.88346863 263.29330444]
[173.34268188 259.61016846]
[161.05601501 251.00566101]
[152.62419128 238.60194397]
[155.94905090 247.18083191]
[152.78346252 253.91319275]
[152.78346252 268.91317749]
[152.78346252 283.91317749]
[152.78346252 298.91317749]
[152.78346252 313.91317749]
[152.78346252 328.91317749]
[152.78346252 343.91317749]
[152.78346252 358.91317749]
[152.78346252 373.91317749]
[152.78346252 388.91317749]
[167.32334900 392.97451782]
[180.22773743 400.80902100]
[190.53901672 411.83535767]
[197.49205017 425.23526001]
[200.57084656 440.01443481]
[199.54695129 455.07611084]
[194.49635315 469.30264282]
[185.79382324 481.63830566]
[174.08515930 491.16772461]
[160.23922729 497.18374634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 129]
[22 113]
[23 112]
[24 111]
[25 110]
[26 109]
[39 95]
[40 94]
[41 93]
[42 91]
[44 89]
[45 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
