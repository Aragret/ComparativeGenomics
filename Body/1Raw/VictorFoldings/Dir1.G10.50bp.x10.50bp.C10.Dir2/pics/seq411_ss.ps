%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAAAACAGGGGGGGGGGAAGAACCCUAACACCAGCCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGxxxxxxxxxxCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCACACCCACCCCCCCCCCCCCAAGAACA\
) } def
/len { sequence length } bind def

/coor [
[57.67794418 309.95703125]
[47.11444092 299.21643066]
[39.20623779 286.39425659]
[34.35000229 272.13366699]
[32.78932571 257.14993286]
[34.60248566 242.19467163]
[39.69854355 228.01800537]
[47.82187271 215.33102417]
[58.56501770 204.77012634]
[71.38909912 196.86503601]
[85.65087891 192.01225281]
[84.09329987 177.09333801]
[82.53572083 162.17442322]
[80.97813416 147.25550842]
[79.42055511 132.33660889]
[71.83065033 119.39854431]
[59.56827927 110.75942993]
[47.30591202 102.12031555]
[35.04354095 93.48120117]
[22.78117371 84.84207916]
[10.51880646 76.20296478]
[-1.74356198 67.56385040]
[-14.00592995 58.92473602]
[-25.05935478 69.14239502]
[-37.99068832 76.83546448]
[-52.23345184 81.66976929]
[-67.16430664 83.43629456]
[-82.13031769 82.06024933]
[-96.47754669 77.60418701]
[-109.57957458 70.26522064]
[-120.86489868 60.36626053]
[-129.84184265 48.34182358]
[-136.11994934 34.71896362]
[-139.42701721 20.09415817]
[-139.62084961 5.10720921]
[-136.69543457 -9.58676434]
[-130.78100586 -23.34595299]
[-143.04338074 -31.98506927]
[-155.30574036 -40.62418365]
[-171.04348755 -42.24709702]
[-176.99169922 -55.90243149]
[-189.25405884 -64.54154968]
[-195.89697266 -65.53116608]
[-200.33728027 -69.20743561]
[-201.83666992 -73.80388641]
[-213.72904968 -82.94561768]
[-225.62142944 -92.08734894]
[-237.51380920 -101.22908783]
[-251.67782593 -95.28971863]
[-266.91189575 -97.24400330]
[-279.11807251 -106.56625366]
[-285.01303101 -120.74881744]
[-283.01098633 -135.97666931]
[-273.65054321 -148.15359497]
[-259.44955444 -154.00404358]
[-244.22805786 -151.95429993]
[-232.08053589 -142.55570984]
[-226.27462769 -128.33647156]
[-228.37207031 -113.12146759]
[-216.47969055 -103.97972870]
[-204.58731079 -94.83799744]
[-192.69493103 -85.69626617]
[-180.61494446 -76.80391693]
[-168.35258484 -68.16479492]
[-153.49191284 -67.15981293]
[-146.66662598 -52.88655472]
[-134.40426636 -44.24743652]
[-122.14189148 -35.60832214]
[-111.17620087 -45.80878067]
[-98.32421875 -53.50926590]
[-84.14646149 -58.37109756]
[-69.26185608 -60.17945862]
[-54.32073593 -58.85289001]
[-39.97639084 -54.44695663]
[-26.85654068 -47.15191650]
[-15.53584671 -37.28451920]
[-6.51073980 -25.27424240]
[-0.17765927 -11.64459896]
[3.18436694 3.00967336]
[3.42601132 18.04857063]
[0.53428012 32.81476974]
[-5.36681414 46.66236496]
[6.89555407 55.30148315]
[19.15792274 63.94059753]
[31.42028999 72.57971191]
[43.68265915 81.21883392]
[55.94502640 89.85794830]
[68.20739746 98.49706268]
[80.46976471 107.13617706]
[79.85414886 81.49515533]
[108.89797211 67.27156067]
[122.14055634 60.22642517]
[135.38313293 53.18128967]
[144.73341370 37.35244751]
[162.21250916 38.56951904]
[175.30566406 31.25041389]
[188.39881897 23.93130684]
[191.14965820 8.53757954]
[203.18490601 -1.44675922]
[218.82186890 -1.30740893]
[230.67724609 8.88983345]
[233.15332031 24.33014107]
[225.08093262 37.72307587]
[210.27163696 42.74489975]
[195.71792603 37.02446365]
[182.62477112 44.34356689]
[169.53161621 51.66267395]
[165.91552734 63.24849319]
[155.01222229 69.44018555]
[142.42826843 66.42387390]
[129.18568420 73.46900940]
[115.94309998 80.51414490]
[118.42822266 95.30685425]
[133.24598694 97.63795471]
[148.06373596 99.96906281]
[164.65007019 96.45769501]
[172.61576843 111.42378998]
[160.43968201 123.22121429]
[145.73263550 114.78681946]
[130.91487122 112.45571899]
[116.09711456 110.12461090]
[110.65770721 115.28821564]
[122.54392242 124.43796539]
[137.10363770 128.04554749]
[143.92605591 141.40425110]
[138.31280518 155.31436157]
[124.12953949 160.19648743]
[111.14379120 152.68847656]
[108.29829407 137.96125793]
[99.77887726 125.61541748]
[94.33946991 130.77902222]
[95.89704895 145.69793701]
[97.45462799 160.61685181]
[99.01220703 175.53575134]
[100.56979370 190.45466614]
[115.52637482 192.25695801]
[129.70674133 197.34271240]
[142.39962769 205.45681763]
[152.96832275 216.19227600]
[160.88275146 229.01062012]
[165.74589539 243.26885986]
[167.31382751 258.25183105]
[165.50791931 273.20797729]
[160.41873169 287.38711548]
[152.30154419 300.07803345]
[141.56352234 310.64413452]
[128.74327087 318.55545044]
[114.48384857 323.41513062]
[99.50049591 324.97943115]
[84.54478455 323.16989136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[22 83]
[23 82]
[37 68]
[38 67]
[39 66]
[41 64]
[42 63]
[45 62]
[46 61]
[47 60]
[48 59]
[91 112]
[92 111]
[93 110]
[95 107]
[96 106]
[97 105]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
