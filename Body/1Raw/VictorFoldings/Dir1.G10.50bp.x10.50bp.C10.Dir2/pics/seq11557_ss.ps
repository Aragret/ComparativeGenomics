%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACAUCAAGGGGGGGGGGGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCUAxxxxxxxxxxAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCCCCCCCCCCCACACAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-24.71028709 185.07409668]
[-19.38015556 171.05305481]
[-12.31799984 157.81954956]
[-3.63744640 145.58647156]
[6.52184105 134.55067444]
[17.99640465 124.88970184]
[30.60162926 116.75899506]
[44.13470078 110.28937531]
[58.37788391 105.58493805]
[73.10201263 102.72136688]
[88.07455444 101.74472809]
[75.46342468 93.62318420]
[62.85229492 85.50164032]
[50.24116898 77.38009644]
[37.63003922 69.25856018]
[25.01891136 61.13701248]
[12.40778351 53.01547241]
[-0.20334479 44.89392853]
[-12.81447315 36.77238846]
[-25.42560196 28.65084648]
[-34.75127792 40.41513443]
[-45.18516541 51.20868683]
[-56.62677765 60.92755127]
[-68.96591949 69.47812653]
[-82.08375549 76.77806854]
[-95.85395813 82.75706482]
[-110.14389801 87.35753632]
[-124.81596375 90.53517914]
[-139.72883606 92.25939178]
[-154.73890686 92.51356506]
[-169.70161438 91.29524994]
[-184.47283936 88.61618042]
[-198.91035461 84.50215912]
[-212.87509155 78.99280548]
[-226.23255920 72.14118195]
[-238.85412598 64.01327515]
[-250.61822510 54.68736267]
[-261.41156006 44.25326157]
[-271.13021851 32.81145477]
[-279.68054199 20.47214127]
[-286.98022461 7.35415697]
[-292.95892334 -6.41616154]
[-297.55911255 -20.70619583]
[-300.73648071 -35.37831879]
[-302.46038818 -50.29122925]
[-302.71426392 -65.30130768]
[-301.49563599 -80.26398468]
[-298.81628418 -95.03516388]
[-294.70196533 -109.47259521]
[-289.19235229 -123.43721771]
[-282.34045410 -136.79455566]
[-274.21228027 -149.41595459]
[-264.88613892 -161.17987061]
[-254.45182800 -171.97300720]
[-243.00982666 -181.69142151]
[-230.67033386 -190.24150085]
[-217.55221558 -197.54090881]
[-203.78176880 -203.51936340]
[-189.49163818 -208.11926270]
[-174.81945801 -211.29631042]
[-159.90650940 -213.01992798]
[-144.89642334 -213.27349854]
[-129.93377686 -212.05458069]
[-115.16265106 -209.37492371]
[-100.72530365 -205.26033020]
[-86.76078796 -199.75042725]
[-73.40359497 -192.89826965]
[-60.78235245 -184.76985168]
[-49.01861954 -175.44346619]
[-38.22569275 -165.00892639]
[-28.50751495 -153.56674194]
[-19.95767975 -141.22708130]
[-12.65852833 -128.10881042]
[-6.68035698 -114.33824921]
[-2.08074069 -100.04802704]
[1.09602249 -85.37577820]
[2.81933784 -70.46279907]
[3.07260847 -55.45271301]
[1.85339546 -40.49008179]
[-0.82655960 -25.71900940]
[-4.94144630 -11.28174877]
[-10.45163536 2.68265653]
[-17.30405807 16.03971672]
[-4.69293070 24.16126060]
[7.91819715 32.28280258]
[20.52932549 40.40434265]
[33.14045334 48.52588654]
[45.75158310 56.64742661]
[58.36270905 64.76896667]
[70.97383881 72.89051056]
[83.58496857 81.01205444]
[96.19609070 89.13359833]
[100.63588715 88.68114471]
[104.84405518 89.94562531]
[118.74661255 84.31366730]
[132.64916992 78.68170929]
[146.55172729 73.04975128]
[160.39494324 67.27348328]
[174.17732239 61.35351944]
[187.95970154 55.43355560]
[193.58386230 40.66384125]
[208.03848267 34.27327347]
[222.74790955 40.05326462]
[228.98529053 54.57464600]
[223.05010986 69.22214508]
[208.46359253 75.30564880]
[193.87966919 69.21593475]
[180.09729004 75.13590240]
[166.31491089 81.05586243]
[161.37837219 86.62149811]
[152.18368530 86.95230865]
[138.28112793 92.58426666]
[124.37857056 98.21622467]
[110.47601318 103.84818268]
[125.00088501 107.59360504]
[138.93476868 113.14757538]
[152.05351257 120.42073822]
[164.14599609 129.29608154]
[175.01770020 139.63078308]
[184.49368286 151.25857544]
[192.42149353 163.99238586]
[198.67356873 177.62731934]
[203.14932251 191.94401550]
[205.77674866 206.71211243]
[206.51356506 221.69400024]
[205.34791565 236.64863586]
[202.29855347 251.33541870]
[197.41455078 265.51803589]
[190.77449036 278.96829224]
[182.48518372 291.46978760]
[172.68002319 302.82138062]
[161.51676941 312.84045410]
[149.17500305 321.36578369]
[135.85333252 328.26019287]
[121.76606750 333.41275024]
[107.13987732 336.74060059]
[92.21008301 338.19015503]
[77.21689606 337.73812866]
[62.40154648 335.39175415]
[48.00240326 331.18881226]
[34.25114441 325.19689941]
[21.36901665 317.51245117]
[9.56328297 308.25909424]
[-0.97610807 297.58569336]
[-10.07958508 285.66400146]
[-17.60067749 272.68582153]
[-23.41837883 258.85998535]
[-27.43908310 244.40888977]
[-29.59809875 229.56507874]
[-29.86069298 214.56738281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 92]
[12 91]
[13 90]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[19 84]
[20 83]
[94 114]
[95 113]
[96 112]
[97 111]
[98 109]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
