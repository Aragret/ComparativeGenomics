%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACCCCCUGGGGGGGGGGAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACUACACAAxxxxxxxxxxGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCCCCCCCCCCCAAAACCCCCU\
) } def
/len { sequence length } bind def

/coor [
[87.94063568 382.22802734]
[74.72044373 374.95556641]
[63.83363724 364.50854492]
[56.02250671 351.59930420]
[51.81962585 337.10800171]
[51.51155472 322.02264404]
[55.11929321 307.37182617]
[62.39686966 294.15444946]
[72.84807587 283.27166748]
[85.76033783 275.46554565]
[100.25327301 271.26824951]
[99.94121552 256.27148438]
[99.62915802 241.27473450]
[99.31710815 226.27798462]
[99.00505066 211.28123474]
[98.69299316 196.28446960]
[98.38093567 181.28771973]
[98.06887817 166.29096985]
[97.75682068 151.29421997]
[97.44477081 136.29745483]
[97.13271332 121.30070496]
[84.96087646 112.53450012]
[70.63827515 116.99131775]
[56.31568146 121.44813538]
[41.99308395 125.90494537]
[27.67048645 130.36177063]
[22.81933594 145.10102844]
[10.21149349 154.14657593]
[-5.30506754 154.02021790]
[-17.76391220 144.77052307]
[-22.37436295 129.95419312]
[-17.36360359 115.26842499]
[-4.65837765 106.36017609]
[10.85589886 106.65486145]
[23.21367073 116.03916931]
[37.53626633 111.58235168]
[51.85886383 107.12553406]
[66.18146515 102.66871643]
[80.50405884 98.21190643]
[90.94387054 87.44109344]
[94.95161438 72.98640442]
[98.95935059 58.53171921]
[87.30738068 52.94691849]
[76.71118927 45.55763626]
[67.44767761 36.55816650]
[59.75874710 26.18484497]
[53.84494400 14.70988274]
[49.86026001 2.43419290]
[47.90811920 -10.32048416]
[48.03867340 -23.22002029]
[50.24753952 -35.92665100]
[54.47591782 -48.10781860]
[60.61217117 -59.44487381]
[68.49477386 -69.64141846]
[77.91654968 -78.43105316]
[88.63013458 -85.58432770]
[100.35443878 -90.91473389]
[112.78207397 -94.28357697]
[125.58735657 -95.60359192]
[138.43489075 -94.84117126]
[150.98831177 -92.01724243]
[156.76458740 -105.86045837]
[162.54086304 -119.70367432]
[168.31713867 -133.54689026]
[174.09341431 -147.39010620]
[179.86967468 -161.23333740]
[185.64595032 -175.07655334]
[190.54750061 -189.25311279]
[194.55523682 -203.70779419]
[198.56298828 -218.16247559]
[186.41458130 -209.36384583]
[171.50923157 -207.68136597]
[157.70515442 -213.55056763]
[148.57548523 -225.45220947]
[146.48342896 -240.30560303]
[151.97048950 -254.26599121]
[163.61634827 -263.71975708]
[178.40653992 -266.21981812]
[192.51264954 -261.11907959]
[202.28335571 -249.73780823]
[205.18954468 -235.02212524]
[212.09654236 -248.33728027]
[219.00354004 -261.65243530]
[212.83177185 -276.02056885]
[217.38906860 -290.97937012]
[230.52359009 -299.46569824]
[246.03364563 -297.47262573]
[256.59585571 -285.94119263]
[257.22305298 -270.31619263]
[247.61909485 -257.97528076]
[232.31869507 -254.74543762]
[225.41169739 -241.43028259]
[218.50469971 -228.11512756]
[213.01766968 -214.15473938]
[209.00993347 -199.70005798]
[205.00219727 -185.24536133]
[218.73466492 -191.28019714]
[232.78096008 -186.01698303]
[239.16624451 -172.44390869]
[234.26524353 -158.26716614]
[220.86051941 -151.53564453]
[206.56266785 -156.07119751]
[199.48916626 -169.30027771]
[193.71290588 -155.45706177]
[187.93663025 -141.61384583]
[182.16035461 -127.77062225]
[176.38407898 -113.92740631]
[170.60780334 -100.08419037]
[164.83154297 -86.24096680]
[179.11119080 -76.53476715]
[190.96325684 -63.97087860]
[199.82711792 -49.13988113]
[205.28269958 -32.73967361]
[207.07037354 -15.54263592]
[205.10334778 1.64074671]
[199.47183228 18.00007820]
[190.43890381 32.76327515]
[178.42825317 45.23300171]
[164.00427246 54.81961060]
[147.84559631 61.06902695]
[130.71307373 63.68424606]
[113.41403961 62.53945923]
[109.40630341 76.99414825]
[105.39855957 91.44883728]
[110.70208740 92.72888947]
[115.49263000 97.08651733]
[118.12135315 104.14760590]
[117.22982788 112.71868896]
[112.12946320 120.98865509]
[112.44152069 135.98541260]
[112.75357819 150.98216248]
[113.06563568 165.97891235]
[113.37769318 180.97566223]
[113.68974304 195.97242737]
[114.00180054 210.96917725]
[114.31385803 225.96592712]
[114.62591553 240.96267700]
[114.93797302 255.95944214]
[115.25003052 270.95617676]
[129.90501404 274.54696655]
[143.13082886 281.80920410]
[154.02569580 292.24780273]
[161.84678650 305.15103149]
[166.06086731 319.63909912]
[166.38058472 334.72418213]
[162.78416443 349.37777710]
[155.51679993 362.60079956]
[145.07398987 373.49163818]
[132.16777039 381.30773926]
[117.67807770 385.51620483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[40 124]
[41 123]
[42 122]
[61 109]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[68 96]
[69 95]
[70 94]
[81 93]
[82 92]
[83 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
