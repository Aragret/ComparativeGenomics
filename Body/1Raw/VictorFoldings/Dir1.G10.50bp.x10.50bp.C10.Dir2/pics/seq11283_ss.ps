%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAUCCUAACGGGGGGGGGGCCUACUCCUAAUCACAUAACCUAUUCCCCCGAGCAAUCUCAAUUACAAUAxxxxxxxxxxGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCCCCCCCCCCCUCAUCCUAGC\
) } def
/len { sequence length } bind def

/coor [
[83.35604858 369.54302979]
[69.86716461 362.81149292]
[58.38166428 353.04690552]
[49.56729507 340.81701660]
[43.93651581 326.83282471]
[41.81668472 311.90734863]
[43.33105469 296.90835571]
[48.39157867 282.70782471]
[56.70404434 270.13140869]
[67.78517151 259.91027832]
[80.99073029 252.63862610]
[95.55295563 248.73925781]
[95.24497223 233.74241638]
[94.93699646 218.74557495]
[94.62902069 203.74874878]
[94.32104492 188.75190735]
[94.01306915 173.75506592]
[93.70508575 158.75822449]
[93.39710999 143.76139832]
[93.08913422 128.76455688]
[92.78115845 113.76771545]
[88.38085175 99.42765045]
[80.22418976 86.83921814]
[72.06752014 74.25077820]
[63.91085815 61.66233444]
[50.68438339 68.75598907]
[36.91729355 74.73317719]
[22.70363045 79.55306244]
[8.14048672 83.18271637]
[-6.67265129 85.59735870]
[-21.63459587 86.78047943]
[-36.64313889 86.72399902]
[-51.59575272 85.42830658]
[-66.39029694 82.90225983]
[-80.92571259 79.16310120]
[-95.10269928 74.23638153]
[-108.82441711 68.15575409]
[-121.99713135 60.96276093]
[-134.53085327 52.70653152]
[-146.33996582 43.44346237]
[-157.34379578 33.23683929]
[-167.46719360 22.15638351]
[-176.64097595 10.27778149]
[-184.80249023 -2.31781864]
[-191.89599609 -15.54437637]
[-197.87301636 -29.31153870]
[-202.69273376 -43.52526093]
[-206.32220459 -58.08844376]
[-208.73667908 -72.90161133]
[-209.91961670 -87.86357117]
[-209.86296082 -102.87210846]
[-208.56709290 -117.82471466]
[-206.04086304 -132.61923218]
[-202.30152893 -147.15460205]
[-197.37464905 -161.33152771]
[-191.29385376 -175.05317688]
[-184.10070801 -188.22579956]
[-175.84431458 -200.75941467]
[-166.58111572 -212.56842041]
[-156.37435913 -223.57214355]
[-145.29377747 -233.69538879]
[-133.41506958 -242.86903381]
[-120.81937408 -251.03041077]
[-107.59273529 -258.12374878]
[-93.82550049 -264.10061646]
[-79.61171722 -268.92013550]
[-65.04849243 -272.54946899]
[-50.23529434 -274.96374512]
[-35.27332306 -276.14651489]
[-20.26478195 -276.08966064]
[-5.31219769 -274.79364014]
[9.48228836 -272.26721191]
[24.01761246 -268.52770996]
[38.19448471 -263.60067749]
[51.91605377 -257.51971436]
[65.08859253 -250.32640076]
[77.62212372 -242.06987000]
[89.43101501 -232.80651855]
[100.43460846 -222.59963989]
[110.55773163 -211.51893616]
[119.73123169 -199.64012146]
[127.89244843 -187.04432678]
[134.98564148 -173.81759644]
[140.96232605 -160.05029297]
[145.78170776 -145.83645630]
[149.41084290 -131.27317810]
[151.82495117 -116.45996094]
[153.00753784 -101.49797058]
[152.95051575 -86.48943329]
[151.65429688 -71.53686523]
[149.12771606 -56.74240875]
[145.38804626 -42.20712662]
[140.46081543 -28.03031731]
[134.37969971 -14.30881691]
[127.18622589 -1.13636243]
[118.92955017 11.39706421]
[109.66606140 23.20584679]
[99.45904541 34.20931625]
[88.37822723 44.33230972]
[76.49929810 53.50566864]
[84.65596008 66.09410858]
[92.81262970 78.68254852]
[100.96929169 91.27098846]
[107.90703583 83.95938873]
[119.45827484 81.30404663]
[134.23039246 78.69932556]
[149.00250244 76.09460449]
[163.77462769 73.48988342]
[175.98245239 62.53995514]
[191.48306274 67.89376831]
[194.33074951 84.04377747]
[181.59605408 94.37623596]
[166.37934875 88.26199341]
[151.60723877 90.86672211]
[136.83511353 93.47144318]
[122.06299591 96.07616425]
[136.27552795 100.87243652]
[150.48803711 105.66870880]
[165.47753906 106.22988129]
[178.77087402 113.17879486]
[187.78735352 125.16641998]
[190.77656555 139.86555481]
[187.15820312 154.42259216]
[177.63473511 166.01153564]
[164.05496216 172.38255310]
[149.05519104 172.29882812]
[135.54739380 165.77659607]
[126.15389252 154.08207703]
[122.69828033 139.48635864]
[115.23813629 126.47304535]
[107.77799225 113.45973969]
[108.08596802 128.45657349]
[108.39395142 143.45341492]
[108.70192719 158.45025635]
[109.00990295 173.44708252]
[109.31787872 188.44392395]
[109.62586212 203.44076538]
[109.93383789 218.43760681]
[110.24181366 233.43444824]
[110.54978943 248.43127441]
[125.25982666 251.72950745]
[138.75279236 258.45285034]
[150.24420166 268.21044922]
[159.06597900 280.43499756]
[164.70524597 294.41580200]
[166.83412170 309.33996582]
[165.32884216 324.33990479]
[160.27693176 338.54345703]
[151.97209167 351.12493896]
[140.89715576 361.35278320]
[127.69601440 368.63244629]
[113.13616180 372.54064941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 103]
[23 102]
[24 101]
[25 100]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
