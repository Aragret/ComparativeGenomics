%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCACACGGGGGGGGGGUCAUCGCCCUUACCACGCUACUCCUACCUAUCUCCCCUUUUAUACUAAUAxxxxxxxxxxAUACGCAAAACUAACCCCCUAAUAAAAUUAAUUAACCACUCAUUCAUCGACCCCCCCCCCCCUCCCCACCC\
) } def
/len { sequence length } bind def

/coor [
[85.15901947 157.80845642]
[71.25035095 152.30229187]
[59.14772797 143.51051331]
[49.61143875 131.98539734]
[43.24055481 118.45097351]
[40.43529129 103.75745392]
[41.37187576 88.82789612]
[45.99147034 74.60016632]
[54.00387573 61.96804810]
[64.90574646 51.72509384]
[78.01223755 44.51476669]
[92.50000000 40.79000854]
[92.50000000 25.79001045]
[92.50000000 10.79001045]
[92.50000000 -4.20998955]
[92.50000000 -19.20998955]
[92.50000000 -34.20999146]
[92.50000000 -49.20999146]
[92.50000000 -64.20999146]
[92.50000000 -79.20999146]
[92.50000000 -94.20999146]
[92.50000000 -109.20999146]
[92.50000000 -124.20999146]
[77.52111053 -125.08229065]
[62.61828232 -126.82405853]
[47.84194183 -129.42941284]
[33.24208832 -132.88951111]
[18.86812401 -137.19268799]
[4.76868677 -142.32434082]
[-9.00851727 -148.26713562]
[-22.41686821 -155.00093079]
[-35.41099548 -162.50297546]
[-47.94693756 -170.74787903]
[-59.98226547 -179.70771790]
[-71.47626495 -189.35220337]
[-82.39003754 -199.64869690]
[-92.68666077 -210.56234741]
[-102.33128357 -222.05621338]
[-111.29128265 -234.09143066]
[-119.53633118 -246.62727356]
[-127.03854370 -259.62130737]
[-133.77252197 -273.02957153]
[-139.71546936 -286.80670166]
[-144.84730530 -300.90606689]
[-149.15065002 -315.27999878]
[-152.61094666 -329.87979126]
[-155.21647644 -344.65609741]
[-156.95843506 -359.55892944]
[-157.83091736 -374.53781128]
[-157.83097839 -389.54205322]
[-156.95861816 -404.52096558]
[-155.21678162 -419.42376709]
[-152.61137390 -434.20010376]
[-149.15119934 -448.79992676]
[-144.84797668 -463.17388916]
[-139.71626282 -477.27331543]
[-133.77342224 -491.05047607]
[-127.03955078 -504.45880127]
[-119.53745270 -517.45288086]
[-111.29251099 -529.98883057]
[-102.33261108 -542.02410889]
[-92.68807983 -553.51806641]
[-82.39154816 -564.43176270]
[-71.47785950 -574.72839355]
[-59.98394012 -584.37292480]
[-47.94868469 -593.33288574]
[-35.41281509 -601.57788086]
[-22.41874695 -609.08001709]
[-9.01045227 -615.81396484]
[4.76670265 -621.75683594]
[18.86609840 -626.88861084]
[33.24002457 -631.19189453]
[47.83985138 -634.65216064]
[62.61616898 -637.25762939]
[77.51898193 -638.99951172]
[92.49786377 -639.87194824]
[107.50213623 -639.87194824]
[122.48101807 -638.99951172]
[137.38383484 -637.25762939]
[152.16015625 -634.65216064]
[166.75997925 -631.19189453]
[181.13389587 -626.88861084]
[195.23329163 -621.75683594]
[209.01045227 -615.81396484]
[222.41874695 -609.08001709]
[235.41281128 -601.57788086]
[247.94868469 -593.33288574]
[259.98394775 -584.37292480]
[271.47787476 -574.72839355]
[282.39154053 -564.43176270]
[292.68807983 -553.51806641]
[302.33261108 -542.02410889]
[311.29251099 -529.98883057]
[319.53744507 -517.45288086]
[327.03955078 -504.45880127]
[333.77340698 -491.05047607]
[339.71624756 -477.27331543]
[344.84799194 -463.17388916]
[349.15121460 -448.79992676]
[352.61138916 -434.20010376]
[355.21679688 -419.42376709]
[356.95861816 -404.52096558]
[357.83096313 -389.54205322]
[357.83090210 -374.53781128]
[356.95843506 -359.55892944]
[355.21646118 -344.65609741]
[352.61093140 -329.87979126]
[349.15066528 -315.27999878]
[344.84732056 -300.90606689]
[339.71548462 -286.80670166]
[333.77252197 -273.02957153]
[327.03854370 -259.62130737]
[319.53634644 -246.62727356]
[311.29129028 -234.09143066]
[302.33129883 -222.05621338]
[292.68664551 -210.56234741]
[282.39004517 -199.64869690]
[271.47625732 -189.35220337]
[259.98226929 -179.70771790]
[247.94692993 -170.74787903]
[235.41099548 -162.50297546]
[222.41687012 -155.00093079]
[209.00851440 -148.26713562]
[195.23130798 -142.32434082]
[181.13188171 -137.19268799]
[166.75790405 -132.88951111]
[152.15806580 -129.42941284]
[137.38171387 -126.82405853]
[122.47888947 -125.08229065]
[107.50000000 -124.20999146]
[107.50000000 -109.20999146]
[107.50000000 -94.20999146]
[107.50000000 -79.20999146]
[107.50000000 -64.20999146]
[107.50000000 -49.20999146]
[107.50000000 -34.20999146]
[107.50000000 -19.20998955]
[107.50000000 -4.20998955]
[107.50000000 10.79001045]
[107.50000000 25.79001045]
[107.50000000 40.79000854]
[121.98776245 44.51476669]
[135.09425354 51.72509384]
[145.99612427 61.96804810]
[154.00852966 74.60016632]
[158.62812805 88.82789612]
[159.56471252 103.75745392]
[156.75944519 118.45097351]
[150.38856506 131.98539734]
[140.85227966 143.51051331]
[128.74964905 152.30229187]
[114.84098053 157.80845642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
