%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUCCCUCGGGGGGGGGGUAGAGGAGCCUGUUCUGUAAUCGAUAAACCCCGAUCAACCUCACCACCUCxxxxxxxxxxCUACGACAAACAGACCUAAAAUCGCUCAUUGCAUACUCUUCAAUCAGCCACCCCCCCCCCCAUAGCCCUC\
) } def
/len { sequence length } bind def

/coor [
[119.96508789 483.28445435]
[106.11914825 477.26843262]
[94.41048431 467.73901367]
[85.70796204 455.40335083]
[80.65736389 441.17681885]
[79.63346863 426.11514282]
[82.71226501 411.33596802]
[89.66529083 397.93606567]
[99.97657776 386.90972900]
[112.88095856 379.07522583]
[127.42084503 375.01388550]
[127.42084503 360.01388550]
[127.42084503 345.01388550]
[127.42084503 330.01388550]
[127.42084503 315.01388550]
[127.42084503 300.01388550]
[127.42084503 285.01388550]
[127.42084503 270.01388550]
[127.42084503 255.01390076]
[127.42084503 240.01390076]
[127.42084503 225.01390076]
[125.86325836 210.09498596]
[122.76493835 195.41845703]
[119.66661835 180.74194336]
[116.56829834 166.06541443]
[112.26071167 151.69721985]
[106.77368164 137.73683167]
[101.28665161 123.77644348]
[95.79961395 109.81605530]
[88.89261627 96.50090027]
[80.64032745 83.97493744]
[72.38803864 71.44897461]
[64.13574982 58.92301559]
[55.49663544 46.66064835]
[46.47910309 34.67381287]
[38.76751328 29.65552902]
[37.40175247 22.34250259]
[28.63554382 10.17066669]
[19.86933708 -2.00117040]
[8.16971302 -11.38833237]
[-5.61266851 -17.30829620]
[-19.39505005 -23.22825813]
[-33.17743301 -29.14822197]
[-46.44285202 -21.09786415]
[-61.90386200 -22.41575623]
[-73.61538696 -32.59513855]
[-77.07410431 -47.72183228]
[-70.95006561 -61.97931671]
[-57.59809875 -69.88529205]
[-42.15229416 -68.39975739]
[-30.55188751 -58.09392929]
[-27.25746918 -42.93060303]
[-13.47508717 -37.01063919]
[0.30729440 -31.09067726]
[14.08967590 -25.17071342]
[5.43323755 -37.42086029]
[-0.33892319 -51.26579285]
[-2.94814229 -66.03711700]
[-2.26845360 -81.02170563]
[1.66732931 -95.49615479]
[8.66919708 -108.76166534]
[18.39912033 -120.17782593]
[30.38735962 -129.19348145]
[44.05516052 -135.37338257]
[58.74267578 -138.41918945]
[73.74082947 -138.18385315]
[88.32555389 -134.67874146]
[101.79273224 -128.07305908]
[113.49221039 -118.68571472]
[122.85916901 -106.96990967]
[129.44139099 -93.49124908]
[132.92111206 -78.90044403]
[133.13034058 -63.90190506]
[130.05895996 -49.21971512]
[123.85526276 -35.56269455]
[114.81874847 -23.59016991]
[103.38566589 -13.88014030]
[90.10798645 -6.90138006]
[75.62670898 -2.99080467]
[60.64095306 -2.33720708]
[45.87419510 -4.97214079]
[32.04117203 -10.76737785]
[40.80738068 1.40445924]
[49.57358932 13.57629585]
[58.46593857 25.65628433]
[67.48346710 37.64311600]
[70.97080231 38.48334885]
[74.20973969 41.09312439]
[76.35522461 45.32978439]
[76.66171265 50.67072678]
[84.91400146 63.19668579]
[93.16629028 75.72264862]
[101.41857910 88.24861145]
[102.78104401 73.31061554]
[111.31715393 60.97632599]
[124.81737518 54.43843079]
[139.78721619 55.38924789]
[152.35176086 63.58266068]
[159.25874329 76.89782715]
[158.72029114 91.88816071]
[150.87577820 104.67346191]
[137.75575256 111.94428253]
[122.75627899 111.81860352]
[109.76000977 104.32902527]
[115.24703979 118.28941345]
[120.73406982 132.24980164]
[126.22109985 146.21018982]
[131.78300476 132.27946472]
[144.38462830 124.14317322]
[159.36990356 124.80751038]
[171.20208740 134.02702332]
[175.50941467 148.39527893]
[170.70042419 162.60350037]
[158.55192566 171.40203857]
[143.55255127 171.53999329]
[131.24482727 162.96708679]
[134.34313965 177.64361572]
[137.44146729 192.32014465]
[140.53977966 206.99665833]
[147.27217102 193.59237671]
[159.72857666 185.23547363]
[174.68470764 184.08911133]
[188.26921082 190.45002747]
[196.96578979 202.67170715]
[198.52333069 217.59062195]
[192.53871155 231.34504700]
[180.56100464 240.37469482]
[165.69059753 242.34226990]
[151.77667236 236.73846436]
[142.42083740 225.01390076]
[142.42083740 240.01390076]
[142.42083740 255.01390076]
[142.42083740 270.01388550]
[142.42083740 285.01388550]
[142.42083740 300.01388550]
[142.42083740 315.01388550]
[142.42083740 330.01388550]
[142.42083740 345.01388550]
[142.42083740 360.01388550]
[142.42083740 375.01388550]
[156.96072388 379.07522583]
[169.86511230 386.90972900]
[180.17639160 397.93606567]
[187.12940979 411.33596802]
[190.20822144 426.11514282]
[189.18432617 441.17681885]
[184.13372803 455.40335083]
[175.43119812 467.73901367]
[163.72253418 477.26843262]
[149.87660217 483.28445435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 119]
[23 118]
[24 117]
[25 116]
[26 107]
[27 106]
[28 105]
[29 104]
[30 93]
[31 92]
[32 91]
[33 90]
[34 86]
[35 85]
[37 84]
[38 83]
[39 82]
[40 55]
[41 54]
[42 53]
[43 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
