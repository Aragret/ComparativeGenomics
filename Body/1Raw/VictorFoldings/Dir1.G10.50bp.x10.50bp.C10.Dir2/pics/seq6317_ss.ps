%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGACCACAUCGGGGGGGGGGUACAACGUUAUCGUCACAGCCCAUGCAUUUGUAAUAAUCUUCUUCAUAGUxxxxxxxxxxUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCCCCCCCCCCCAAAGACCACAUC\
) } def
/len { sequence length } bind def

/coor [
[83.20085144 407.42221069]
[69.99277496 400.18612671]
[58.64933014 390.27954102]
[49.70107651 378.16580200]
[43.56653976 364.41146851]
[40.53264236 349.65988159]
[40.74128342 334.60098267]
[44.18270493 319.93911743]
[50.69594955 306.36001587]
[59.97637558 294.49884033]
[71.58992767 284.91030884]
[84.99340820 278.04293823]
[99.55992126 274.21792603]
[98.95203400 259.23025513]
[98.34415436 244.24256897]
[97.73626709 229.25489807]
[97.12838745 214.26722717]
[96.52050018 199.27954102]
[95.91262054 184.29187012]
[95.30473328 169.30418396]
[94.69685364 154.31651306]
[94.08896637 139.32882690]
[86.85774231 137.53636169]
[80.08769226 134.42669678]
[74.01638794 130.10896301]
[68.85688019 124.73465729]
[64.79022217 118.49239349]
[50.43336105 122.83757019]
[36.07649994 127.18275452]
[25.25938225 139.50842285]
[9.23155594 136.03842163]
[4.48107576 120.34240723]
[15.89482784 108.56707764]
[31.73132133 112.82588959]
[46.08818054 108.48071289]
[60.44504166 104.13553619]
[60.61955261 94.44322205]
[63.13372421 85.08104706]
[67.83818817 76.60523224]
[74.45343781 69.51934814]
[82.58644867 64.24436188]
[78.67969513 49.76205444]
[65.26152039 41.85065079]
[61.50582504 27.10787582]
[69.13082886 14.36445045]
[65.22407532 -0.11785872]
[61.31732559 -14.60016823]
[57.41057205 -29.08247757]
[42.51437759 -27.13649368]
[27.49172211 -27.19340515]
[12.61070061 -29.25219727]
[-1.86311746 -33.27612686]
[-15.67142963 -39.19338608]
[-28.56781197 -46.89837265]
[-40.32210922 -56.25357819]
[-50.72455597 -67.09205627]
[-59.58950806 -79.22036743]
[-66.75875854 -92.42208862]
[-72.10436249 -106.46160126]
[-75.53092194 -121.08836365]
[-76.97729492 -136.04133606]
[-76.41765594 -151.05366516]
[-73.86199188 -165.85745239]
[-69.35592651 -180.18850708]
[-62.97986221 -193.79104614]
[-54.84759521 -206.42234802]
[-45.10424805 -217.85696411]
[-33.92370987 -227.89085388]
[-21.50550461 -236.34495544]
[-8.07125282 -243.06835938]
[6.13929653 -247.94111633]
[20.87253952 -250.87625122]
[35.86554337 -251.82138062]
[50.85074234 -250.75964355]
[65.56070709 -247.70997620]
[79.73291779 -242.72682190]
[93.11445618 -235.89909363]
[105.46651459 -227.34866333]
[116.56865692 -217.22808838]
[126.22275543 -205.71801758]
[134.25651550 -193.02383423]
[140.52656555 -179.37210083]
[144.92100525 -165.00642395]
[147.36141968 -150.18321228]
[147.80424500 -135.16697693]
[146.24159241 -120.22570801]
[142.70135498 -105.62604523]
[137.24668884 -91.62854004]
[129.97494507 -78.48300171]
[121.01591492 -66.42401123]
[110.52946472 -55.66679382]
[98.70274353 -46.40331268]
[85.74681091 -38.79888535]
[71.89288330 -32.98923111]
[75.79963684 -18.50691986]
[79.70639038 -4.02461100]
[83.61313629 10.45769882]
[96.61262512 17.63745499]
[100.78093719 32.26892090]
[93.16201019 45.85530090]
[97.06875610 60.33760834]
[123.37654877 67.82494354]
[138.62698364 90.53142548]
[153.60772705 89.77168274]
[168.58847046 89.01194763]
[183.56921387 88.25221252]
[192.03919983 84.67442322]
[198.86067200 87.63200378]
[213.85372925 87.17604065]
[228.84680176 86.72006989]
[243.83987427 86.26410675]
[252.46313477 73.36375427]
[267.03375244 68.02738190]
[281.94900513 72.30692291]
[291.47369385 84.55680847]
[291.94540405 100.06671906]
[283.18267822 112.87276459]
[268.55505371 118.05075836]
[253.68708801 113.60966492]
[244.29583740 101.25717163]
[229.30276489 101.71314240]
[214.30970764 102.16910553]
[199.31663513 102.62507629]
[184.32896423 103.23295593]
[169.34820557 103.99269867]
[154.36746216 104.75243378]
[139.38671875 105.51216888]
[135.99229431 116.91899872]
[129.37481689 126.81076813]
[120.12689209 134.30168152]
[109.07664490 138.72094727]
[109.68453217 153.70863342]
[110.29241180 168.69630432]
[110.90029907 183.68397522]
[111.50817871 198.67166138]
[112.11606598 213.65933228]
[112.72394562 228.64701843]
[113.33183289 243.63468933]
[113.93971252 258.62237549]
[114.54759979 273.61004639]
[129.37603760 276.24282837]
[143.29164124 282.00216675]
[155.64356995 290.61868286]
[165.85408020 301.68933105]
[173.44563293 314.69635010]
[178.06314087 329.03137207]
[179.49063110 344.02389526]
[177.66134644 358.97274780]
[172.66084290 373.17868042]
[164.72300720 385.97732544]
[154.21911621 396.77001953]
[141.64042664 405.05197144]
[127.57527924 410.43582153]
[112.68154144 412.66976929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[27 36]
[28 35]
[29 34]
[41 101]
[42 100]
[45 97]
[46 96]
[47 95]
[48 94]
[103 127]
[104 126]
[105 125]
[106 124]
[108 123]
[109 122]
[110 121]
[111 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
