%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGCCUUAAGGGGGGGGGGUUUUAAUAAUCAACACCCUCCUAGCCUUACUACUAAUAAUUAUUACAUUUxxxxxxxxxxCCGACAUCUGGUUCCUACUUCAGGGUCAUAAAGCCUAAAUAGCCCACACGCCCCCCCCCCUUCCCCUUAA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 365.86978149]
[71.19830322 359.85375977]
[59.48964310 350.32434082]
[50.78712082 337.98867798]
[45.73651886 323.76214600]
[44.71262741 308.70046997]
[47.79142761 293.92129517]
[54.74444962 280.52136230]
[65.05573273 269.49505615]
[77.96011353 261.66052246]
[92.50000000 257.59921265]
[92.50000000 242.59922791]
[92.50000000 227.59922791]
[92.50000000 212.59922791]
[92.50000000 197.59922791]
[92.50000000 182.59922791]
[92.50000000 167.59922791]
[92.50000000 152.59922791]
[92.50000000 137.59922791]
[92.50000000 122.59922028]
[92.50000000 107.59922028]
[90.94242096 92.68031311]
[87.84410095 78.00378418]
[84.74577332 63.32725906]
[81.64745331 48.65073395]
[66.60016632 47.44278717]
[52.51715469 42.04917526]
[40.53668213 32.91498947]
[31.62449455 20.78728676]
[26.49596977 6.65398550]
[25.55870056 -8.33659935]
[28.88011360 -22.96906090]
[36.18270111 -36.05944061]
[46.86717606 -46.55102539]
[60.06165314 -53.59964752]
[56.96332932 -68.27616882]
[53.86500931 -82.95269775]
[50.76668549 -97.62922668]
[47.66836548 -112.30574799]
[32.74673843 -110.65898132]
[17.73555183 -110.48273468]
[2.77937365 -111.77870941]
[-11.97775459 -114.53442383]
[-26.39371109 -118.72333527]
[-40.32965851 -124.30510712]
[-53.65138245 -131.22598267]
[-66.23058319 -139.41929626]
[-77.94611359 -148.80615234]
[-88.68514252 -159.29615784]
[-98.34425354 -170.78825378]
[-106.83040619 -183.17179871]
[-114.06188965 -196.32749939]
[-119.96904755 -210.12866211]
[-124.49498749 -224.44238281]
[-127.59612274 -239.13081360]
[-129.24259949 -254.05247498]
[-129.41854858 -269.06365967]
[-128.12226868 -284.01980591]
[-125.36625671 -298.77688599]
[-121.17705536 -313.19274902]
[-115.59500885 -327.12860107]
[-108.67386627 -340.45016479]
[-100.48029327 -353.02920532]
[-91.09320068 -364.74456787]
[-80.60299683 -375.48336792]
[-69.11069489 -385.14224243]
[-56.72699356 -393.62817383]
[-43.57114792 -400.85937500]
[-29.76985741 -406.76626587]
[-15.45604515 -411.29193115]
[-0.76756179 -414.39276123]
[14.15413094 -416.03894043]
[29.16532516 -416.21456909]
[44.12144852 -414.91799927]
[58.87846756 -412.16171265]
[73.29425812 -407.97219849]
[87.22998047 -402.38989258]
[100.55142975 -395.46847534]
[113.13030243 -387.27465820]
[124.84545898 -377.88732910]
[135.58407593 -367.39691162]
[145.24272156 -355.90441895]
[153.72837830 -343.52053833]
[160.95933533 -330.36456299]
[166.86593628 -316.56314087]
[171.39129639 -302.24923706]
[174.49185181 -287.56069946]
[176.13772583 -272.63897705]
[176.31307983 -257.62777710]
[175.01620483 -242.67167664]
[172.25959778 -227.91470337]
[168.06982422 -213.49900818]
[162.48721313 -199.56338501]
[155.56555176 -186.24208069]
[147.37147522 -173.66337585]
[137.98391724 -161.94841003]
[127.49327087 -151.21000671]
[116.00058746 -141.55158997]
[103.61654663 -133.06617737]
[90.46041107 -125.83547974]
[76.65888214 -119.92915344]
[62.34489059 -115.40406799]
[65.44321442 -100.72754669]
[68.54153442 -86.05101776]
[71.63985443 -71.37449646]
[74.73817444 -56.69796753]
[89.65583038 -55.58402252]
[103.66931152 -50.30635452]
[115.63990784 -41.28468704]
[124.59236145 -29.24333000]
[129.79428101 -15.15304184]
[130.81605530 -0.15277779]
[127.56637573 14.54238605]
[120.30023956 27.73966980]
[109.59902954 38.36541367]
[96.32398224 45.55241394]
[99.42230225 60.22893906]
[102.52062225 74.90546417]
[105.61894226 89.58198547]
[112.35132599 76.17769623]
[124.80773926 67.82079315]
[139.76387024 66.67443085]
[153.34837341 73.03534698]
[162.04493713 85.25703430]
[163.60249329 100.17594910]
[157.61787415 113.93037415]
[145.64015198 122.96002197]
[130.76976013 124.92758942]
[116.85583496 119.32378387]
[107.50000000 107.59922028]
[107.50000000 122.59922028]
[107.50000000 137.59922791]
[107.50000000 152.59922791]
[107.50000000 167.59922791]
[107.50000000 182.59922791]
[107.50000000 197.59922791]
[107.50000000 212.59922791]
[107.50000000 227.59922791]
[107.50000000 242.59922791]
[107.50000000 257.59921265]
[122.03988647 261.66052246]
[134.94427490 269.49505615]
[145.25555420 280.52136230]
[152.20857239 293.92129517]
[155.28736877 308.70046997]
[154.26348877 323.76214600]
[149.21287537 337.98867798]
[140.51036072 350.32434082]
[128.80169678 359.85375977]
[114.95575714 365.86978149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 119]
[23 118]
[24 117]
[25 116]
[35 106]
[36 105]
[37 104]
[38 103]
[39 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
