%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAAAAUCUUGGGGGGGGGGUGAAAUAGGGCCCGUAUUUACCCUAUAGCACCCCCUCUACCCCCUCUAGAxxxxxxxxxxGGCCCACCAUAAUUACCCCCAUACUCCUUACACUAUUCCUCAUCACCCAACCCCCCCCCCCUAAAAAUAUU\
) } def
/len { sequence length } bind def

/coor [
[228.13305664 259.55627441]
[218.76788330 247.83280945]
[210.14967346 235.54977417]
[202.31176758 222.75469971]
[195.28448486 209.49710083]
[189.09503174 195.82826233]
[183.76733398 181.80107117]
[179.32200623 167.46980286]
[175.77624512 152.88987732]
[173.14378357 138.11772156]
[171.43479919 123.21047211]
[170.65589905 108.22582245]
[155.65669250 108.07182312]
[140.65747070 107.91782379]
[125.65826416 107.76383209]
[110.65905762 107.60983276]
[95.66617584 108.07175446]
[80.70489502 109.14882660]
[65.74361420 110.22589874]
[50.78232956 111.30297089]
[35.82104874 112.38003540]
[20.85976791 113.45710754]
[5.89848757 114.53417969]
[-4.42361975 126.20001984]
[-19.61182976 127.07919312]
[-30.66981506 117.16674805]
[-45.63109589 118.24381256]
[-60.59237671 119.32088470]
[-75.55365753 120.39795685]
[-90.51493835 121.47502136]
[-105.47621918 122.55209351]
[-112.10847473 136.40521240]
[-124.78779602 145.07298279]
[-140.10351562 146.22384644]
[-153.93576050 139.54818726]
[-162.56375122 126.84176636]
[-163.66659546 111.52252197]
[-156.94763184 97.71125793]
[-144.21421814 89.12313080]
[-128.89158630 88.06832123]
[-115.10145569 94.83054352]
[-106.55329132 107.59081268]
[-91.59201050 106.51374817]
[-76.63072968 105.43667603]
[-61.66944504 104.35960388]
[-46.70816422 103.28253174]
[-31.74688339 102.20546722]
[-22.22277069 90.81130219]
[-7.06524849 89.50587463]
[4.82141781 99.57289886]
[19.78269958 98.49582672]
[34.74398041 97.41875458]
[49.70526123 96.34169006]
[64.66654205 95.26461792]
[79.62782288 94.18754578]
[94.58910370 93.11047363]
[96.80432129 90.91822815]
[99.88527679 89.50572968]
[103.53621674 89.20211029]
[107.34158325 90.21934509]
[110.81305695 92.61061859]
[125.81226349 92.76461792]
[140.81147766 92.91861725]
[155.81068420 93.07261658]
[170.80989075 93.22660828]
[171.89628601 78.26110840]
[173.91099548 63.39209747]
[176.84620667 48.67710114]
[180.69055176 34.17305374]
[185.42919922 19.93606377]
[191.04377747 6.02121639]
[197.51257324 -7.51765680]
[204.81057739 -20.62817574]
[212.90954590 -33.25961685]
[221.77813721 -45.36311340]
[231.38203430 -56.89184189]
[241.68411255 -67.80119324]
[252.64447021 -78.04895782]
[264.22073364 -87.59549713]
[276.36813354 -96.40387726]
[289.03964233 -104.44001770]
[302.18621826 -111.67282867]
[315.75704956 -118.07432556]
[329.69961548 -123.61974335]
[343.95996094 -128.28762817]
[358.48291016 -132.05990601]
[373.21231079 -134.92201233]
[388.09112549 -136.86285400]
[403.06185913 -137.87493896]
[418.06652832 -137.95431519]
[433.04711914 -137.10072327]
[447.94564819 -135.31742859]
[462.70449829 -132.61134338]
[477.26657104 -128.99293518]
[491.57550049 -124.47621918]
[505.57595825 -119.07864380]
[519.21374512 -112.82111359]
[532.43615723 -105.72782135]
[545.19195557 -97.82621765]
[557.43188477 -89.14686584]
[569.10852051 -79.72335815]
[580.17675781 -69.59214020]
[590.59368896 -58.79241562]
[600.31903076 -47.36595917]
[609.31518555 -35.35698318]
[617.54736328 -22.81194878]
[624.98370361 -9.77938843]
[631.59539795 3.69027615]
[637.35687256 17.54493332]
[642.24591064 31.73098373]
[646.24353027 46.19353867]
[649.33428955 60.87665176]
[651.50622559 75.72351074]
[652.75091553 90.67668152]
[653.06353760 105.67830658]
[652.44299316 120.67034912]
[650.89154053 135.59480286]
[648.41522217 150.39395142]
[645.02362061 165.01049805]
[640.72991943 179.38793945]
[635.55065918 193.47061157]
[629.50592041 207.20405579]
[622.61901855 220.53512573]
[614.91668701 233.41226196]
[606.42871094 245.78562927]
[597.18786621 257.60736084]
[587.22991943 268.83172607]
[576.59344482 279.41531372]
[565.31958008 289.31713867]
[553.45190430 298.49890137]
[541.03637695 306.92514038]
[528.12103271 314.56317139]
[514.75579834 321.38348389]
[500.99237061 327.35968018]
[486.88403320 332.46865845]
[472.48538208 336.69064331]
[457.85211182 340.00930786]
[443.04080200 342.41177368]
[428.10879517 343.88879395]
[413.11383057 344.43466187]
[398.11395264 344.04721069]
[383.16717529 342.72796631]
[368.33132935 340.48205566]
[353.66381836 337.31811523]
[339.22137451 333.24844360]
[325.05987549 328.28875732]
[311.23410034 322.45825195]
[297.79757690 315.77944946]
[284.80224609 308.27825928]
[272.29843140 299.98364258]
[260.33444214 290.92770386]
[248.95661926 281.14550781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
