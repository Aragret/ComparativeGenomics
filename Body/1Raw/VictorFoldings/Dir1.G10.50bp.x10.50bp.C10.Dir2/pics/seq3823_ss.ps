%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAUCAUUCUAGGGGGGGGGGCUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACxxxxxxxxxxCUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCCCCCCCCCCCGCCAUCAUCCUA\
) } def
/len { sequence length } bind def

/coor [
[78.29410553 406.26501465]
[65.59862518 398.17068481]
[54.86375427 387.61337280]
[46.55877686 375.05468750]
[41.04675674 361.04357910]
[38.56864929 346.19256592]
[39.23278809 331.15084839]
[43.01013947 316.57604980]
[49.73557663 303.10525513]
[59.11508942 291.32736206]
[70.73864746 281.75729370]
[84.09812164 274.81335449]
[98.60948181 270.79913330]
[97.69796753 255.82684326]
[96.78645325 240.85456848]
[95.87494659 225.88229370]
[94.96343231 210.91000366]
[94.05191803 195.93772888]
[93.14040375 180.96545410]
[92.22888947 165.99316406]
[91.31737518 151.02088928]
[90.40586090 136.04861450]
[89.49434662 121.07633209]
[78.32340240 97.00384521]
[66.27812195 88.06454468]
[54.24608612 98.50289917]
[40.21392441 106.02713776]
[24.87421417 110.26922607]
[8.98332596 111.02307892]
[-6.67586851 108.25452423]
[-21.33256340 102.10282898]
[-34.26596451 92.87374115]
[-44.84073257 81.02426910]
[-52.53819656 67.14004517]
[-56.98179626 51.90638733]
[-57.95549393 36.07448959]
[-55.41427612 20.42435837]
[-49.48624420 5.72639608]
[-61.88389969 -2.71742296]
[-74.28156281 -11.16124153]
[-86.67921448 -19.60506058]
[-99.24546051 -27.79588318]
[-111.97512054 -35.73034286]
[-124.70478821 -43.66480255]
[-137.43444824 -51.59926224]
[-149.77943420 -42.72966385]
[-164.58010864 -39.26430893]
[-179.57945251 -41.73164368]
[-192.49021912 -49.75541687]
[-201.34356689 -62.11205673]
[-204.78944397 -76.91726685]
[-202.30238342 -91.91336823]
[-194.26164246 -104.81355286]
[-181.89335632 -113.65064240]
[-167.08361816 -117.07704926]
[-152.09080505 -114.57025909]
[-139.20121765 -106.51255035]
[-130.38040161 -94.13265991]
[-126.97348022 -79.31842804]
[-129.49998474 -64.32892609]
[-116.77032471 -56.39446640]
[-104.04066467 -48.46000671]
[-91.31099701 -40.52554703]
[-86.48589325 -40.73034286]
[-81.49196625 -37.86566925]
[-78.23539734 -32.00271988]
[-65.83773804 -23.55889893]
[-53.44008255 -15.11508083]
[-41.04242325 -6.67126179]
[-30.90518188 -16.50902176]
[-19.02533340 -24.16152763]
[-5.86669111 -29.32758713]
[8.05653667 -31.80313301]
[22.19982529 -31.48927498]
[36.00964355 -28.39625740]
[48.94509888 -22.64313316]
[60.49914169 -14.45318413]
[70.21842957 -4.14525604]
[77.72112274 7.87865400]
[82.71186829 21.14907646]
[84.99345398 35.14739609]
[84.47457123 49.32612610]
[81.17350006 63.13031387]
[75.21742249 76.01925659]
[87.26271057 84.95856476]
[81.36325073 71.16739655]
[87.56624603 57.51005554]
[101.83319855 52.87822342]
[114.87555695 60.28747177]
[118.20202637 74.91397858]
[109.64727020 87.23485565]
[123.24545288 80.90323639]
[136.84364319 74.57161713]
[150.44181824 68.23999786]
[164.04000854 61.90837479]
[177.63818359 55.57675552]
[191.23637390 49.24513626]
[189.89900208 34.14589310]
[193.80952454 19.50063324]
[202.49574280 7.07784939]
[214.90872192 -1.62234819]
[229.54957581 -5.54936886]
[244.65031433 -4.22900534]
[258.38748169 2.17930222]
[269.10220337 12.90171909]
[275.50067139 26.64346123]
[276.81021118 41.74514771]
[272.87271118 56.38317490]
[264.16360474 68.78992462]
[251.73460388 77.46723175]
[237.08654785 81.36727142]
[221.98826599 80.01908112]
[208.26295471 73.58546448]
[197.56799316 62.84332275]
[183.96980286 69.17494202]
[170.37162781 75.50656128]
[156.77343750 81.83818054]
[143.17526245 88.16979980]
[129.57707214 94.50141907]
[115.97888947 100.83303833]
[130.39984131 96.70555115]
[144.64823914 101.39419556]
[153.80021667 113.27868652]
[154.69309998 128.25209045]
[147.01835632 141.13999939]
[133.42814636 147.48870850]
[118.61887360 145.10427856]
[107.70821381 134.81071472]
[104.46662903 120.16481781]
[105.37814331 135.13710022]
[106.28965759 150.10937500]
[107.20117188 165.08166504]
[108.11268616 180.05393982]
[109.02419281 195.02621460]
[109.93570709 209.99848938]
[110.84722137 224.97077942]
[111.75873566 239.94305420]
[112.67024994 254.91532898]
[113.58176422 269.88760376]
[128.47291565 272.11181641]
[142.57609558 277.38381958]
[155.27476501 285.47317505]
[166.01379395 296.02621460]
[174.32369995 308.58166504]
[179.84123230 322.59060669]
[182.32519531 337.44064331]
[181.66696167 352.48260498]
[177.89535522 367.05889893]
[171.17521667 380.53234863]
[161.80033875 392.31390381]
[150.18054199 401.88854980]
[136.82380676 408.83773804]
[122.31401825 412.85769653]
[107.28549194 413.77261353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[24 85]
[25 84]
[38 69]
[39 68]
[40 67]
[41 66]
[42 63]
[43 62]
[44 61]
[45 60]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
