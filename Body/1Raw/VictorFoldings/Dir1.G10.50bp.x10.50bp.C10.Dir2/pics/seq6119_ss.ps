%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAGCUAAGGGGGGGGGGGCACCCUAAUCAACUGGCUUCAAUCUACUUCUCCCGCCGCCGGGAAAAAAxxxxxxxxxxUAUCGAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUGGCCGUACGCCCCCCCCCCCCUAACCGCUAA\
) } def
/len { sequence length } bind def

/coor [
[87.15174866 437.67211914]
[73.93154907 430.39962769]
[63.04474640 419.95263672]
[55.23361588 407.04339600]
[51.03073502 392.55206299]
[50.72266388 377.46673584]
[54.33040237 362.81591797]
[61.60797501 349.59851074]
[72.05918121 338.71575928]
[84.97144318 330.90960693]
[99.46438599 326.71231079]
[99.15232849 311.71557617]
[98.84027100 296.71881104]
[98.52821350 281.72204590]
[98.21615601 266.72531128]
[97.90409851 251.72854614]
[97.59204865 236.73179626]
[97.27999115 221.73504639]
[96.96793365 206.73828125]
[96.65587616 191.74153137]
[96.34381866 176.74478149]
[96.03176117 161.74803162]
[95.40778351 146.76101685]
[94.47216034 131.79022217]
[77.71778107 123.33833313]
[68.49964142 106.99301147]
[69.93547058 88.28253174]
[81.53964996 73.53511047]
[76.05261993 59.57471848]
[70.56558990 45.61433029]
[55.39015579 44.40284348]
[42.29896164 36.75381851]
[33.86153793 24.23063660]
[31.70698357 9.34712601]
[36.20962906 -4.93697786]
[46.42531586 -15.80460167]
[40.93828201 -29.76499176]
[35.45125198 -43.72537994]
[29.96422005 -57.68577194]
[17.13873291 -56.92989349]
[4.64045668 -59.82745361]
[-6.51274967 -66.13202667]
[-15.41552448 -75.32016754]
[-21.34848976 -86.63482666]
[-23.83638382 -99.14772797]
[-22.68610382 -111.83555603]
[-18.00167084 -123.66358185]
[-10.17489910 -133.67010498]
[0.14735137 -141.04463196]
[-4.45821285 -155.32009888]
[-9.06377792 -169.59555054]
[-16.38288307 -182.68870544]
[-26.13053513 -194.08972168]
[-35.87818909 -205.49075317]
[-45.62583923 -216.89176941]
[-55.37349319 -228.29278564]
[-71.00679016 -233.24577332]
[-74.26929474 -249.31712341]
[-61.80482864 -259.97399902]
[-46.43576050 -254.25354004]
[-43.97246933 -238.04045105]
[-34.22481918 -226.63941956]
[-24.47716713 -215.23840332]
[-14.72951412 -203.83738708]
[-4.98186207 -192.43635559]
[-7.33798027 -207.25016785]
[-5.30560064 -222.11183167]
[0.94129419 -235.74914551]
[10.86793709 -246.99467468]
[23.62455368 -254.88572693]
[38.11911011 -258.74679565]
[53.11079025 -258.24734497]
[67.31623077 -253.43016052]
[79.51937103 -244.70758057]
[88.67555237 -232.82630920]
[94.00096130 -218.80348206]
[95.03971100 -203.83947754]
[91.70287323 -189.21534729]
[84.27611542 -176.18295288]
[73.39518738 -165.85795593]
[59.99157333 -159.12423706]
[45.21268463 -156.55822754]
[30.32367325 -158.37959290]
[16.59912109 -164.43240356]
[5.21168327 -174.20111084]
[9.81724739 -159.92565918]
[14.42281246 -145.65019226]
[31.68984222 -144.81192017]
[47.36066055 -137.43022156]
[59.04999161 -124.59911346]
[64.96733856 -108.24433899]
[64.19119263 -90.83428955]
[56.81243134 -75.00751495]
[43.92461014 -63.17280197]
[49.41164017 -49.21241379]
[54.89867401 -35.25202179]
[60.38570404 -21.29163361]
[75.26719666 -20.28827477]
[88.29085541 -12.89276218]
[96.84707642 -0.52537727]
[99.19470978 14.39135075]
[94.81522369 28.90710258]
[84.52597809 40.12729645]
[90.01300812 54.08768845]
[95.50003815 68.04808044]
[107.89930725 68.71460724]
[119.12877655 74.01413727]
[127.52548981 83.16188049]
[131.84600830 94.80315399]
[146.80624390 95.89446259]
[161.76649475 96.98577118]
[172.53253174 85.64440918]
[188.07563782 83.92806244]
[201.05683899 92.64714813]
[205.34681702 107.68476868]
[198.91995239 121.94063568]
[184.81083679 128.68354797]
[169.68136597 124.72972107]
[160.67518616 111.94602203]
[145.71493530 110.85471344]
[130.75468445 109.76340485]
[126.08171082 118.99787903]
[118.72554016 126.27792358]
[109.44294739 130.85458374]
[110.37857819 145.82537842]
[113.76390076 151.62599182]
[113.67529297 157.38996887]
[111.02851868 161.43597412]
[111.34057617 176.43272400]
[111.65263367 191.42947388]
[111.96468353 206.42622375]
[112.27674103 221.42298889]
[112.58879852 236.41973877]
[112.90085602 251.41648865]
[113.21291351 266.41323853]
[113.52497101 281.41000366]
[113.83702087 296.40673828]
[114.14907837 311.40350342]
[114.46113586 326.40026855]
[129.11613464 329.99102783]
[142.34193420 337.25329590]
[153.23680115 347.69189453]
[161.05790710 360.59509277]
[165.27197266 375.08316040]
[165.59169006 390.16824341]
[161.99526978 404.82186890]
[154.72790527 418.04486084]
[144.28511047 428.93569946]
[131.37887573 436.75180054]
[116.88918304 440.96029663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 125]
[24 124]
[28 105]
[29 104]
[30 103]
[36 97]
[37 96]
[38 95]
[39 94]
[49 87]
[50 86]
[51 85]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
