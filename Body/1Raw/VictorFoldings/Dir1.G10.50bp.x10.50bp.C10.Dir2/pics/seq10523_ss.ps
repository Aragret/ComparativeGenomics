%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAUCCCUGGGGGGGGGGCAACCCCGACAUCAUUACCGGGUUUUCCUCUUGUAAAUAUAGUUUAACCAxxxxxxxxxxCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCACCCCCCCCCCUCCUAACCCU\
) } def
/len { sequence length } bind def

/coor [
[85.44432831 352.36987305]
[71.59838867 346.35385132]
[59.88972473 336.82443237]
[51.18720245 324.48876953]
[46.13660049 310.26223755]
[45.11270905 295.20056152]
[48.19150925 280.42141724]
[55.14452744 267.02148438]
[65.45581055 255.99514771]
[78.36019135 248.16064453]
[92.90007782 244.09933472]
[92.90007782 229.09933472]
[92.90007782 214.09933472]
[92.90007782 199.09933472]
[92.90007782 184.09933472]
[92.90007782 169.09933472]
[92.90007782 154.09933472]
[92.90007782 139.09933472]
[92.90007782 124.09932709]
[92.90007782 109.09932709]
[87.89181519 112.76417542]
[82.15052032 115.50831604]
[67.44255829 118.45380402]
[52.73459244 121.39928436]
[38.02663040 124.34476471]
[23.31867027 127.29024506]
[20.01818848 142.15721130]
[10.95089245 154.39257812]
[-2.31225657 161.87648010]
[-17.47333527 163.31228638]
[-31.90559769 158.45124817]
[-43.10856628 148.13555908]
[-49.14125443 134.15248108]
[-48.95846939 118.92465973]
[-42.59187698 105.09041595]
[-31.14452744 95.04660797]
[-16.59974289 90.53338623]
[-1.47749650 92.33270264]
[11.60219288 100.13280487]
[20.37318802 112.58228302]
[35.08115005 109.63680267]
[49.78911209 106.69132233]
[64.49707031 103.74584198]
[79.20503235 100.80035400]
[64.22895050 101.64712524]
[51.36474609 93.93271637]
[45.05792236 80.32301331]
[47.48795319 65.52115631]
[57.81508255 54.64225769]
[72.47054291 51.44577026]
[86.38980865 57.03630447]
[94.76276398 69.48193359]
[94.69583893 84.48211670]
[96.87268066 69.64091492]
[99.04951477 54.79970932]
[101.22634888 39.95850372]
[99.41066742 35.85182953]
[99.07212067 31.79517365]
[100.00598145 28.25825500]
[101.87290192 25.59206200]
[104.25099182 23.99455643]
[107.65396881 9.38566303]
[111.05694580 -5.22322941]
[114.45992279 -19.83212280]
[117.86289978 -34.44101334]
[121.26587677 -49.04990768]
[124.66886139 -63.65879822]
[127.30772400 -78.42485809]
[129.17533875 -93.30813599]
[115.47404480 -99.72138977]
[104.42653656 -110.05617523]
[97.11512756 -123.29998779]
[94.25611877 -138.15533447]
[96.12960815 -153.16683960]
[102.55204773 -166.86381531]
[112.89422607 -177.90440369]
[126.14293671 -185.20693970]
[141.00018311 -188.05598450]
[156.01043701 -186.17243958]
[169.70310974 -179.74082947]
[180.73677063 -169.39125061]
[188.03042603 -156.13764954]
[190.86952209 -141.27848816]
[188.97590637 -126.26951599]
[182.53512573 -112.58114624]
[172.17816162 -101.55443573]
[158.91967773 -94.26966095]
[144.05860901 -91.44052124]
[142.19100952 -76.55724335]
[155.62648010 -83.22716522]
[169.30694580 -77.07536316]
[173.23309326 -62.59830093]
[164.53523254 -50.37754059]
[149.57077026 -49.34547043]
[139.27775574 -60.25582123]
[135.87477112 -45.64693069]
[132.47180176 -31.03803635]
[129.06881714 -16.42914391]
[125.66584015 -1.82025158]
[122.26286316 12.78864098]
[118.85988617 27.39753342]
[116.06755829 42.13533783]
[113.89072418 56.97654343]
[111.71388245 71.81774902]
[109.53704834 86.65895844]
[114.80497742 72.61441803]
[123.11661530 60.12776566]
[134.04010010 49.84780884]
[147.00782776 42.30870056]
[161.34597778 37.90218735]
[176.30953979 36.85723114]
[191.12098694 39.22813034]
[205.01069641 44.89169312]
[217.25694275 53.55363083]
[227.22343445 64.76386261]
[234.39225769 77.93989563]
[238.39094543 92.39709473]
[239.01170349 107.38423920]
[236.22229004 122.12259674]
[230.16764832 135.84634399]
[221.16236877 147.84237671]
[209.67437744 157.48738098]
[196.30059814 164.28019714]
[181.73596191 167.86784363]
[166.73724365 168.06391907]
[152.08378601 164.85821533]
[138.53701782 158.41734314]
[126.80082703 149.07594299]
[117.48503876 137.31941223]
[111.07370758 123.75862122]
[107.90007782 109.09932709]
[107.90007782 124.09932709]
[107.90007782 139.09933472]
[107.90007782 154.09933472]
[107.90007782 169.09933472]
[107.90007782 184.09933472]
[107.90007782 199.09933472]
[107.90007782 214.09933472]
[107.90007782 229.09933472]
[107.90007782 244.09933472]
[122.43997192 248.16064453]
[135.34434509 255.99514771]
[145.65563965 267.02148438]
[152.60865784 280.42141724]
[155.68745422 295.20056152]
[154.66355896 310.26223755]
[149.61296082 324.48876953]
[140.91043091 336.82443237]
[129.20178223 346.35385132]
[115.35583496 352.36987305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[53 105]
[54 104]
[55 103]
[56 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 89]
[69 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
