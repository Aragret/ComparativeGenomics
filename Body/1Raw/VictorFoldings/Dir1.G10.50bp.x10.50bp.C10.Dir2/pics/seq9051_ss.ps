%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUAGGAGGGGGGGGGGGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAAAUCCCCUAGAAGUCCCACxxxxxxxxxxCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCUAACACCCCCCCCCCAACUAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[74.74236298 331.56195068]
[70.58619690 316.98449707]
[71.66955566 301.86489868]
[77.86161804 288.02893066]
[88.41467285 277.14733887]
[102.05436707 270.53414917]
[100.49678802 255.61523438]
[96.64923859 249.24797058]
[99.06530762 240.37022400]
[97.81843567 225.42213440]
[96.57155609 210.47404480]
[95.32468414 195.52595520]
[94.07781219 180.57786560]
[92.83093262 165.62979126]
[91.58406067 150.68170166]
[90.33718872 135.73361206]
[76.95090485 128.96549988]
[64.17354584 136.82292175]
[51.39618683 144.68034363]
[38.61882782 152.53778076]
[25.84147263 160.39520264]
[13.06411457 168.25262451]
[5.74178076 182.92625427]
[-10.64132118 183.65153503]
[-19.23165894 169.68234253]
[-11.19223213 155.38900757]
[5.20668888 155.47526550]
[17.98404694 147.61784363]
[30.76140404 139.76042175]
[43.53876114 131.90298462]
[56.31611633 124.04556274]
[69.09347534 116.18814087]
[71.68355560 85.88234711]
[95.38399506 71.98589325]
[96.94157410 57.06697845]
[94.71072388 48.14088440]
[98.68989563 41.85504150]
[100.55751038 26.97176361]
[98.51284027 18.00119209]
[102.62191772 11.79949188]
[104.79875946 -3.04171324]
[106.97559357 -17.88291931]
[92.35986328 -21.29566765]
[78.08096313 -25.91947174]
[64.23905182 -31.72189522]
[50.93122864 -38.66223907]
[38.25083542 -46.69181824]
[26.28681755 -55.75431442]
[15.12309742 -65.78615570]
[4.83797884 -76.71697998]
[-4.49639225 -88.47010803]
[-12.81454182 -100.96310425]
[-20.05812263 -114.10833740]
[-26.17632484 -127.81359863]
[-31.12623596 -141.98275757]
[-34.87313080 -156.51641846]
[-37.39073181 -171.31263733]
[-38.66137695 -186.26763916]
[-38.67615128 -201.27650452]
[-37.43495560 -216.23397827]
[-34.94649124 -231.03514099]
[-31.22821999 -245.57614136]
[-26.30621910 -259.75500488]
[-20.21501160 -273.47229004]
[-12.99732685 -286.63177490]
[-4.70379162 -299.14111328]
[4.60741997 -310.91259766]
[14.87099648 -321.86364746]
[26.01494408 -331.91744995]
[37.96109390 -341.00347900]
[50.62565231 -349.05801392]
[63.91978455 -356.02456665]
[77.75024414 -361.85421753]
[92.02001190 -366.50613403]
[106.62899780 -369.94766235]
[121.47473145 -372.15463257]
[136.45306396 -373.11163330]
[151.45895386 -372.81188965]
[166.38713074 -371.25753784]
[181.13288879 -368.45947266]
[195.59278870 -364.43728638]
[209.66542053 -359.21926880]
[223.25204468 -352.84194946]
[236.25737000 -345.35009766]
[248.59017944 -336.79623413]
[260.16397095 -327.24038696]
[270.89755249 -316.74960327]
[280.71560669 -305.39743042]
[289.54931641 -293.26348877]
[297.33670044 -280.43292236]
[304.02313232 -266.99572754]
[309.56170654 -253.04615784]
[313.91357422 -238.68203735]
[317.04818726 -224.00415039]
[318.94360352 -209.11543274]
[319.58651733 -194.12031555]
[318.97238159 -179.12400818]
[317.10556030 -164.23167419]
[313.99911499 -149.54779053]
[309.67480469 -135.17535400]
[304.16302490 -121.21516418]
[297.50241089 -107.76515961]
[289.73968506 -94.91967773]
[280.92926025 -82.76882172]
[271.13299561 -71.39781952]
[260.41958618 -60.88643265]
[248.86415100 -51.30839920]
[236.54779053 -42.73089600]
[223.55685425 -35.21409225]
[209.98249817 -28.81071281]
[195.91992188 -23.56567383]
[181.46775818 -19.51576424]
[166.72740173 -16.68939400]
[151.80223083 -15.10638714]
[136.79695129 -14.77784824]
[121.81680298 -15.70608139]
[119.63996124 -0.86487633]
[117.46312714 13.97632885]
[115.44079590 28.83937645]
[113.57318115 43.72265625]
[111.86048889 58.62455750]
[110.30290985 73.54347229]
[117.90224457 77.04082489]
[124.32381439 82.72213745]
[128.94123840 90.19296265]
[131.25959778 98.88011932]
[130.96598816 108.07526398]
[127.96575165 116.99256134]
[122.40045166 124.83586884]
[114.64527893 130.86955261]
[105.28527069 134.48674011]
[106.53215027 149.43482971]
[107.77902222 164.38290405]
[109.02589417 179.33099365]
[110.27277374 194.27908325]
[111.51964569 209.22717285]
[112.76651764 224.17526245]
[114.01339722 239.12335205]
[115.41569519 254.05764771]
[116.97328186 268.97656250]
[131.68482971 272.62982178]
[144.25794983 281.09695435]
[153.17436218 293.35556030]
[157.35739136 307.92532349]
[156.30189514 323.04687500]
[150.13533020 336.89425659]
[139.60235596 347.79525757]
[125.97486877 354.43359375]
[110.89845276 356.00762939]
[96.19366455 352.32727051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[34 122]
[35 121]
[37 120]
[38 119]
[40 118]
[41 117]
[42 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
