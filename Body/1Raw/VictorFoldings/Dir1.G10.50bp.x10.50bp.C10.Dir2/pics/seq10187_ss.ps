%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCUCAACCGGGGGGGGGGCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCxxxxxxxxxxUCGCUCAUUGCAUACUCUUCAAUCAGCCACAUAGCCCUCGUAGUAACAGCCCCCCCCCCCCAUUCUCAUCC\
) } def
/len { sequence length } bind def

/coor [
[12.73985291 488.72717285]
[-0.74902654 481.99563599]
[-12.23452663 472.23107910]
[-21.04889679 460.00119019]
[-26.67967796 446.01699829]
[-28.79950714 431.09152222]
[-27.28513718 416.09252930]
[-22.22461510 401.89199829]
[-13.91214943 389.31558228]
[-2.83101821 379.09442139]
[10.37453651 371.82278442]
[24.93676186 367.92343140]
[24.62878418 352.92657471]
[24.32080650 337.92974854]
[24.01282883 322.93292236]
[23.70485115 307.93606567]
[23.39687347 292.93923950]
[23.08889580 277.94238281]
[22.78091812 262.94555664]
[22.47294044 247.94871521]
[22.16496277 232.95188904]
[21.85698509 217.95504761]
[14.15870285 230.82891846]
[4.13773918 241.99046326]
[-7.83504772 251.02664185]
[-21.31656647 257.60299683]
[-35.80788422 261.47619629]
[-50.77270889 262.50286865]
[-65.65721130 260.64505005]
[-79.91054535 255.97145081]
[-93.00521851 248.65505981]
[-104.45661163 238.96662903]
[-113.84094238 227.26473999]
[-120.81089783 213.98243713]
[-125.10854340 199.61126709]
[-126.57482147 184.68310547]
[-125.15547180 169.75041199]
[-120.90302277 155.36581421]
[-113.97484589 142.06166077]
[-104.62734985 130.33032227]
[-93.20645905 120.60595703]
[-80.13484955 113.24844360]
[-65.89627838 108.53006744]
[-51.01768875 106.62545776]
[-36.04970932 107.60508728]
[-21.54628754 111.43271637]
[-8.04416561 117.96668243]
[3.95696449 126.96517181]
[14.01296234 138.09516907]
[21.75167084 150.94477844]
[26.88669395 165.03845215]
[29.22799492 179.85459900]
[28.68835449 194.84918213]
[37.10176468 182.43086243]
[45.51517487 170.01254272]
[53.80065155 157.50851440]
[61.95731735 144.92007446]
[70.11398315 132.33163452]
[78.27064514 119.74319458]
[70.77804565 102.83477783]
[74.88100433 84.80149078]
[88.95143127 72.79912567]
[107.40603638 71.59033203]
[114.77227783 58.52363968]
[122.13851166 45.45694351]
[129.50476074 32.39024734]
[136.87098694 19.32355499]
[136.90795898 3.50239110]
[149.89816284 -3.78484726]
[157.26440430 -16.85154152]
[164.63064575 -29.91823769]
[152.77404785 -40.55157852]
[143.55818176 -53.53237915]
[137.43443298 -68.21977234]
[134.70156860 -83.88941956]
[135.49125671 -99.76926422]
[139.76167297 -115.07755280]
[147.29966736 -129.06130981]
[157.73149109 -141.03340149]
[170.54125977 -150.40628052]
[185.09649658 -156.72080994]
[200.67933655 -159.66879272]
[216.52194214 -159.10797119]
[231.84436035 -155.06893921]
[238.66792297 -168.42703247]
[235.11386108 -184.07147217]
[245.24139404 -196.51383972]
[261.28155518 -196.20942688]
[270.92971802 -183.39175415]
[266.78460693 -167.89343262]
[252.02603149 -161.60346985]
[245.20245361 -148.24536133]
[256.23510742 -139.41897583]
[265.31729126 -128.58918762]
[272.09191895 -116.17864990]
[276.29199219 -102.67223358]
[277.75109863 -88.59809113]
[276.41009521 -74.50700378]
[272.31948853 -60.95080185]
[265.63742065 -48.46078491]
[256.62371826 -37.52687836]
[245.62963867 -28.57842636]
[233.08433533 -21.96733093]
[219.47798157 -17.95421410]
[205.34265137 -16.69813919]
[191.23155212 -18.25031281]
[177.69732666 -22.55199814]
[170.33110046 -9.48530293]
[162.96485901 3.58139229]
[163.45477295 18.46793747]
[149.93768311 26.68979454]
[142.57144165 39.75648880]
[135.20521545 52.82318497]
[127.83896637 65.88987732]
[120.47273254 78.95657349]
[126.86286926 88.15327454]
[129.34451294 99.07365417]
[127.55658722 110.12880707]
[121.75923920 119.71024323]
[112.79596710 126.42388153]
[101.97090912 129.29290771]
[90.85908508 127.89985657]
[82.70242310 140.48829651]
[74.54575348 153.07673645]
[66.38909149 165.66517639]
[64.32840729 174.62896729]
[57.93349075 178.42596436]
[49.52008057 190.84426880]
[41.10667038 203.26258850]
[36.85382462 217.64706421]
[37.16180038 232.64390564]
[37.46977997 247.64074707]
[37.77775574 262.63757324]
[38.08573532 277.63442993]
[38.39371109 292.63125610]
[38.70168686 307.62808228]
[39.00966644 322.62493896]
[39.31764221 337.62176514]
[39.62562180 352.61862183]
[39.93359756 367.61544800]
[54.64363480 370.91366577]
[68.13659668 377.63702393]
[79.62801361 387.39462280]
[88.44979095 399.61917114]
[94.08905029 413.59994507]
[96.21792603 428.52413940]
[94.71265411 443.52404785]
[89.66074371 457.72763062]
[81.35590363 470.30908203]
[70.28096771 480.53695679]
[57.07982635 487.81661987]
[42.51996613 491.72479248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[53 129]
[54 128]
[55 127]
[56 125]
[57 124]
[58 123]
[59 122]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[69 109]
[70 108]
[71 107]
[84 92]
[85 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
