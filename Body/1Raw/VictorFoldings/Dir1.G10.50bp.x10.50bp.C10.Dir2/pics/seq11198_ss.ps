%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAACCAACGGGGGGGGGGAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUxxxxxxxxxxUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUCUCCGAUCCGUCCCCCCCCCCCCCUAACAAAC\
) } def
/len { sequence length } bind def

/coor [
[107.65230560 402.95886230]
[94.43211365 395.68640137]
[83.54531097 385.23937988]
[75.73417664 372.33013916]
[71.53129578 357.83880615]
[71.22322083 342.75347900]
[74.83096313 328.10266113]
[82.10853577 314.88525391]
[92.55974579 304.00250244]
[105.47200775 296.19635010]
[119.96494293 291.99905396]
[119.65288544 277.00231934]
[119.34083557 262.00555420]
[119.02877808 247.00880432]
[118.71672058 232.01205444]
[118.40466309 217.01530457]
[118.09260559 202.01853943]
[117.78054810 187.02178955]
[117.46849823 172.02503967]
[117.15644073 157.02828979]
[116.84438324 142.03152466]
[83.63223267 136.80871582]
[66.88700104 112.19280243]
[72.68369293 86.91371918]
[61.18188858 77.28519440]
[49.68008423 67.65666962]
[36.29380035 60.88855362]
[21.68490601 57.48557663]
[7.04140520 54.23474884]
[-7.60209608 50.98392487]
[-22.24559784 47.73310089]
[-36.88909912 44.48227310]
[-51.53260040 41.23144913]
[-66.17610168 37.98062134]
[-80.81960297 34.72979736]
[-95.46310425 31.47896957]
[-104.49119568 43.74328613]
[-117.73032379 51.26959610]
[-132.88673401 52.75392151]
[-147.33447266 47.93909454]
[-158.57040405 37.65931320]
[-164.64781189 23.69561005]
[-164.51376343 8.46728420]
[-158.19148254 -5.38726711]
[-146.77633667 -15.46765900]
[-132.24606323 -20.02740097]
[-117.11813354 -18.27649307]
[-104.01354980 -10.51828766]
[-95.20275879 1.90305710]
[-92.21228027 16.83546829]
[-77.56877899 20.08629417]
[-62.92527771 23.33712006]
[-48.28177643 26.58794594]
[-33.63827133 29.83877182]
[-18.99477196 33.08959961]
[-4.35127068 36.34042358]
[10.29223061 39.59124756]
[24.93573189 42.84207535]
[32.19414139 41.21078110]
[39.84856033 46.31585312]
[29.22575188 35.72548294]
[21.64228058 22.78365135]
[17.59585571 8.33974552]
[17.35204887 -6.65827322]
[20.92685890 -21.22607040]
[28.08567238 -34.40755081]
[38.35864639 -45.33760071]
[51.07155609 -53.29887390]
[65.39004517 -57.76886368]
[80.37438202 -58.45420456]
[95.04113007 -55.30991364]
[108.42769623 -48.54235077]
[119.65550995 -38.59568405]
[127.98767853 -26.12271500]
[132.87736511 -11.94205761]
[134.00363159 3.01559901]
[131.29258728 17.76857185]
[124.92214966 31.34861374]
[115.31040955 42.86445236]
[103.08820343 51.56029129]
[89.05767822 56.86542130]
[74.13967133 58.43165588]
[59.30860901 56.15486526]
[70.81041718 65.78339386]
[82.31221771 75.41191864]
[98.08516693 64.76551819]
[119.84188080 64.94168854]
[140.02813721 78.83090973]
[151.92051697 69.68917847]
[163.81289673 60.54743958]
[175.70527649 51.40570831]
[187.59765625 42.26397324]
[185.50021362 27.04897118]
[191.30612183 12.82972622]
[203.45364380 3.43114257]
[218.67514038 1.38139248]
[232.87612915 7.23184824]
[242.23658752 19.40876770]
[244.23861694 34.63661957]
[238.34367371 48.81918716]
[226.13746643 58.14143372]
[210.90341187 60.09571838]
[196.73939514 54.15635300]
[184.84701538 63.29808807]
[172.95463562 72.43981934]
[161.06225586 81.58155823]
[149.16987610 90.72328949]
[149.79331970 98.19733429]
[164.61264038 95.87621307]
[179.43196106 93.55509949]
[194.25129700 91.23398590]
[209.07061768 88.91287231]
[222.94245911 83.20566559]
[235.74090576 91.02869415]
[236.98721313 105.97682953]
[225.66096497 115.81125641]
[211.03651428 112.48083496]
[196.03742981 112.64698029]
[181.03834534 112.81312561]
[166.03927612 112.97927094]
[151.04019165 113.14541626]
[151.66363525 120.61946106]
[164.90621948 127.66459656]
[181.72943115 129.76591492]
[184.36737061 146.51336670]
[169.00466919 153.68438721]
[157.86108398 140.90718079]
[144.61849976 133.86204529]
[131.84114075 141.71946716]
[132.15319824 156.71623230]
[132.46525574 171.71298218]
[132.77729797 186.70973206]
[133.08935547 201.70648193]
[133.40141296 216.70324707]
[133.71347046 231.69999695]
[134.02552795 246.69674683]
[134.33758545 261.69351196]
[134.64964294 276.69024658]
[134.96170044 291.68701172]
[149.61668396 295.27777100]
[162.84249878 302.54003906]
[173.73736572 312.97863770]
[181.55847168 325.88183594]
[185.77253723 340.36990356]
[186.09225464 355.45501709]
[182.49583435 370.10861206]
[175.22846985 383.33160400]
[164.78565979 394.22244263]
[151.87944031 402.03857422]
[137.38973999 406.24703979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 85]
[25 84]
[26 83]
[27 60]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
