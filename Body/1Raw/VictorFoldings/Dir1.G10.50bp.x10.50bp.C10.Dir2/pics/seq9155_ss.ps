%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUUCACCAGGGGGGGGGGUUUCCGACGGCAUCUACGGCUCAACAUUUUUUGUAGCCACAGGCUUCCACxxxxxxxxxxUACAGUCAAAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCAGAUAGGGGCCCCCCCCCCUCCCUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[92.47797394 388.36883545]
[78.45603180 382.81582642]
[66.25607300 373.94949341]
[56.64500046 362.32717896]
[50.22697449 348.67947388]
[47.40543747 333.86428833]
[48.35775375 318.81292725]
[53.02405930 304.47149658]
[61.11102676 291.74154663]
[72.11029816 281.42327881]
[85.33045959 274.16528320]
[99.94046783 270.42385864]
[99.94046783 255.42385864]
[99.94046783 240.42385864]
[99.94046783 225.42385864]
[99.94046783 210.42385864]
[99.94046783 195.42385864]
[99.94046783 180.42385864]
[99.94046783 165.42385864]
[99.94046783 150.42385864]
[99.94046783 135.42385864]
[90.95364380 132.66168213]
[83.39884949 127.77571869]
[77.73188019 121.31626892]
[74.22318268 113.91652679]
[59.63943100 117.42569733]
[45.05568314 120.93486023]
[40.77808380 135.68606567]
[29.68687248 146.31059265]
[14.76552677 149.95050049]
[0.02781311 145.62669373]
[-10.56189728 134.50222778]
[-14.15502548 119.56954956]
[-9.78503799 104.84545898]
[1.37256098 94.29067230]
[16.31643295 90.74436951]
[31.02675056 95.16048431]
[41.54651260 106.35111237]
[56.13026428 102.84194946]
[70.71401215 99.33277893]
[77.55980682 81.17044830]
[94.25746155 71.27479553]
[95.18087006 56.30324554]
[96.10428619 41.33169556]
[88.73804474 28.26499939]
[75.45070648 21.30464363]
[62.16336441 14.34428692]
[46.48327255 17.73755455]
[34.14553452 7.48281097]
[34.61460495 -8.55338287]
[47.53065491 -18.06943130]
[62.98559570 -13.76543617]
[69.12371826 1.05694580]
[82.41106415 8.01730156]
[95.69840240 14.97765827]
[105.45767975 3.58658433]
[96.54152679 -8.47584724]
[87.62537384 -20.53827858]
[78.70922089 -32.60070801]
[64.43204498 -41.74393463]
[69.26563263 -57.99425125]
[86.21895599 -57.84809494]
[90.77165222 -41.51686096]
[99.68780518 -29.45442963]
[108.60395813 -17.39199829]
[117.52011108 -5.32956648]
[132.49165344 -6.25298023]
[139.85789490 -19.31967545]
[147.22413635 -32.38637161]
[154.59037781 -45.45306396]
[142.84703064 -54.83868790]
[132.76141357 -65.98662567]
[124.59477234 -78.60812378]
[118.55864716 -92.37625122]
[114.80937958 -106.93437958]
[113.44409180 -121.90542603]
[114.49814606 -136.90159607]
[117.94424438 -151.53445435]
[123.69311523 -165.42498779]
[131.59585571 -178.21336365]
[141.44775391 -189.56837463]
[152.99363708 -199.19587708]
[165.93443298 -206.84649658]
[179.93495178 -212.32205200]
[194.63252258 -215.48074341]
[209.64646912 -216.24072266]
[224.58789062 -214.58232117]
[239.06976318 -210.54850769]
[252.71694946 -204.24372864]
[265.17599487 -195.83132935]
[276.12414551 -185.52919006]
[285.27786255 -173.60417175]
[292.39996338 -160.36515808]
[297.30606079 -146.15507507]
[299.86901855 -131.34199524]
[300.02246094 -116.30960846]
[297.76242065 -101.44729614]
[293.14743042 -87.14002228]
[286.29702759 -73.75838470]
[277.38867188 -61.64899826]
[266.65310669 -51.12552261]
[254.36837769 -42.46054459]
[240.85272217 -35.87850952]
[226.45622253 -31.54990196]
[211.55177307 -29.58684731]
[196.52543640 -30.04019165]
[181.76643372 -32.89819336]
[167.65707397 -38.08682632]
[160.29083252 -25.02013016]
[152.92459106 -11.95343590]
[145.55834961 1.11325943]
[111.07583618 42.25510788]
[110.15242004 57.22665787]
[109.22901154 72.19821167]
[123.81658936 79.63386536]
[132.92909241 94.52909851]
[132.92073059 113.07973480]
[146.85144043 118.64167023]
[160.78215027 124.20360565]
[174.71287537 129.76554871]
[188.64358521 135.32748413]
[203.89335632 130.34509277]
[217.21708679 139.28138733]
[218.39398193 155.28121948]
[206.52120972 166.07087708]
[190.70654297 163.37345886]
[183.08164978 149.25819397]
[169.15093994 143.69625854]
[155.22021484 138.13432312]
[141.28950500 132.57238770]
[127.35878754 127.01045227]
[114.94046783 135.42385864]
[114.94046783 150.42385864]
[114.94046783 165.42385864]
[114.94046783 180.42385864]
[114.94046783 195.42385864]
[114.94046783 210.42385864]
[114.94046783 225.42385864]
[114.94046783 240.42385864]
[114.94046783 255.42385864]
[114.94046783 270.42385864]
[129.55049133 274.16528320]
[142.77064514 281.42327881]
[153.76991272 291.74154663]
[161.85688782 304.47149658]
[166.52319336 318.81292725]
[167.47550964 333.86428833]
[164.65396118 348.67947388]
[158.23594666 362.32717896]
[148.62487793 373.94949341]
[136.42491150 382.81582642]
[122.40296936 388.36883545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[25 40]
[26 39]
[27 38]
[42 114]
[43 113]
[44 112]
[45 55]
[46 54]
[47 53]
[56 66]
[57 65]
[58 64]
[59 63]
[67 111]
[68 110]
[69 109]
[70 108]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
