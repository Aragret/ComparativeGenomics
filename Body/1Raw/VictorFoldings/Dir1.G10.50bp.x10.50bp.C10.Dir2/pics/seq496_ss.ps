%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUUUAACGGGGGGGGGGAGUCACCCCCCAACUAACACAUUAUUUUCCCCUCCCACUCCCAUACUACUxxxxxxxxxxAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCUUACCCCCCCCCCCCCCCCACUAUUAAC\
) } def
/len { sequence length } bind def

/coor [
[80.07750702 367.28140259]
[69.51400757 356.54080200]
[61.60580444 343.71862793]
[56.74956894 329.45803833]
[55.18889236 314.47430420]
[57.00205231 299.51904297]
[62.09810638 285.34237671]
[70.22143555 272.65539551]
[80.96458435 262.09451294]
[93.78866577 254.18940735]
[108.05044556 249.33662415]
[106.49286652 234.41770935]
[104.93527985 219.49880981]
[103.37770081 204.57989502]
[101.82012177 189.66098022]
[100.26254272 174.74206543]
[98.70495605 159.82315063]
[97.14737701 144.90423584]
[95.58979797 129.98533630]
[94.03221893 115.06641388]
[88.25594330 101.22319794]
[78.74758911 89.62185669]
[69.23922729 78.02051544]
[59.73086929 66.41917419]
[50.22251129 54.81783295]
[37.79615784 63.23810959]
[24.65558815 70.49349976]
[10.90968704 76.52387238]
[-3.32763791 81.27927399]
[-17.93840981 84.72028351]
[-32.80155945 86.81840515]
[-47.79391861 87.55622864]
[-62.79125595 86.92766571]
[-77.66929626 84.93790436]
[-92.30475616 81.60343933]
[-106.57634735 76.95191193]
[-120.36582947 71.02185059]
[-133.55891418 63.86240387]
[-146.04629517 55.53289413]
[-157.72447205 46.10234833]
[-168.49670410 35.64891434]
[-178.27371216 24.25920677]
[-186.97447205 12.02760983]
[-194.52690125 -0.94451910]
[-200.86840820 -14.54968643]
[-205.94642639 -28.67515373]
[-209.71891785 -43.20387268]
[-212.15458679 -58.01544571]
[-213.23326111 -72.98714447]
[-212.94601440 -87.99489594]
[-211.29519653 -102.91435242]
[-208.29452515 -117.62187195]
[-203.96884155 -131.99559021]
[-198.35398865 -145.91638184]
[-191.49650574 -159.26892090]
[-183.45320129 -171.94253540]
[-174.29075623 -183.83222961]
[-164.08506775 -194.83946228]
[-152.92070007 -204.87301636]
[-140.89019775 -213.84977722]
[-128.09321594 -221.69532776]
[-114.63582611 -228.34466553]
[-100.62952423 -233.74270630]
[-86.19038391 -237.84471130]
[-71.43804932 -240.61666870]
[-56.49476242 -242.03564453]
[-41.48435593 -242.08984375]
[-26.53120995 -240.77885437]
[-11.75923634 -238.11351013]
[2.70915723 -234.11590576]
[16.75407982 -228.81916809]
[30.25914955 -222.26719666]
[43.11245346 -214.51428223]
[55.20748901 -205.62464905]
[66.44402313 -195.67198181]
[76.72895050 -184.73875427]
[85.97704315 -172.91555786]
[94.11166382 -160.30036926]
[101.06541443 -146.99771118]
[106.78066254 -133.11782837]
[111.21005249 -118.77572632]
[114.31687927 -104.09026337]
[116.07540131 -89.18312073]
[116.47104645 -74.17783356]
[115.50053406 -59.19873810]
[113.17190552 -44.36995697]
[109.50445557 -29.81436920]
[104.52857971 -15.65259361]
[98.28550720 -2.00197840]
[90.82697296 11.02436066]
[82.21478271 23.31848145]
[72.52029419 34.77850723]
[61.82385254 45.30947495]
[71.33220673 56.91081619]
[80.84056854 68.51216125]
[90.34893036 80.11350250]
[99.85728455 91.71484375]
[103.34755707 86.05395508]
[109.57069397 81.98668671]
[117.86060333 80.48587799]
[132.35620117 76.62872314]
[146.85179138 72.77156067]
[161.34739685 68.91440582]
[167.81639099 54.67761612]
[181.94538879 47.97647095]
[197.06311035 51.97504044]
[206.03143311 64.78532410]
[204.61576843 80.35869598]
[193.48457336 91.34188843]
[177.89364624 92.54897308]
[165.20455933 83.40999603]
[150.70895386 87.26715851]
[136.21336365 91.12432098]
[121.71776581 94.98147583]
[136.28807068 98.54605865]
[151.17871094 96.73806000]
[165.05703735 102.42945099]
[174.39083862 114.17169189]
[176.80451965 128.97622681]
[171.68377686 143.07508850]
[160.33190918 152.87992859]
[145.63810730 155.89529419]
[131.34216309 151.35371399]
[121.08258820 140.41108704]
[117.47054291 125.85466766]
[108.95112610 113.50883484]
[110.50871277 128.42774963]
[112.06629181 143.34666443]
[113.62387085 158.26557922]
[115.18144989 173.18447876]
[116.73903656 188.10339355]
[118.29661560 203.02230835]
[119.85419464 217.94122314]
[121.41177368 232.86013794]
[122.96936035 247.77905273]
[137.92594910 249.58132935]
[152.10630798 254.66708374]
[164.79919434 262.78118896]
[175.36788940 273.51666260]
[183.28230286 286.33499146]
[188.14546204 300.59323120]
[189.71339417 315.57620239]
[187.90748596 330.53234863]
[182.81829834 344.71148682]
[174.70111084 357.40240479]
[163.96308899 367.96850586]
[151.14283752 375.87982178]
[136.88340759 380.73950195]
[121.90006256 382.30380249]
[106.94435120 380.49426270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[100 114]
[101 113]
[102 112]
[103 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
