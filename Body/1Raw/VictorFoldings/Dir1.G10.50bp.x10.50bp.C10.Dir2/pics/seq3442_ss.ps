%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAACUCUGGGGGGGGGGUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUCxxxxxxxxxxUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACGACCCCCCCCCCAAAAAACUCU\
) } def
/len { sequence length } bind def

/coor [
[95.30909729 410.77035522]
[81.46315765 404.75430298]
[69.75450134 395.22488403]
[61.05197525 382.88922119]
[56.00137329 368.66271973]
[54.97748184 353.60104370]
[58.05627823 338.82186890]
[65.00930023 325.42193604]
[75.32058716 314.39559937]
[88.22496796 306.56109619]
[102.76485443 302.49978638]
[102.76485443 287.49978638]
[102.76485443 272.49978638]
[102.76485443 257.49978638]
[102.76485443 242.49978638]
[102.76485443 227.49978638]
[102.76485443 212.49978638]
[102.76485443 197.49978638]
[102.76485443 182.49978638]
[102.76485443 167.49978638]
[102.76485443 152.49978638]
[102.76485443 137.49978638]
[83.94365692 132.76791382]
[70.52293396 119.56473541]
[65.78739929 101.94368744]
[70.47578430 84.91110992]
[82.73113251 73.00586700]
[77.82958221 58.82930756]
[72.92803192 44.65274811]
[58.74459457 32.95616531]
[62.66324997 15.87857342]
[57.46783447 1.80705404]
[44.22275543 3.01419950]
[31.08864975 0.98790872]
[18.84255791 -4.14681482]
[8.20775127 -12.08121872]
[-0.18899640 -22.34136009]
[-5.85433722 -34.31641388]
[-8.45734215 -47.29504395]
[-7.84882116 -60.50764465]
[-4.06987143 -73.17198181]
[2.65086293 -84.53951263]
[11.91101360 -93.93961334]
[23.15857887 -100.81915283]
[18.85099411 -115.18733215]
[14.54340935 -129.55552673]
[10.23582458 -143.92370605]
[-4.62459946 -141.69917297]
[-19.65035057 -141.61221313]
[-34.53552246 -143.66462708]
[-48.97707748 -147.81460571]
[-62.68099594 -153.97766113]
[-75.36829376 -162.02833557]
[-86.78066254 -171.80271912]
[-96.68576813 -183.10182190]
[-104.88195038 -195.69560242]
[-111.20235443 -209.32766724]
[-115.51829529 -223.72048950]
[-117.74191284 -238.58105469]
[-117.82793427 -253.60681152]
[-115.77460480 -268.49185181]
[-111.62373352 -282.93316650]
[-105.45982361 -296.63668823]
[-97.40837097 -309.32348633]
[-87.63327789 -320.73526001]
[-76.33356476 -330.63964844]
[-63.73928070 -338.83505249]
[-50.10681915 -345.15463257]
[-35.71372986 -349.46966553]
[-20.85302925 -351.69238281]
[-5.82726765 -351.77746582]
[9.05765152 -349.72320557]
[23.49869156 -345.57144165]
[37.20184708 -339.40667725]
[49.88814545 -331.35446167]
[61.29930496 -321.57864380]
[71.20301056 -310.27832031]
[79.39764404 -297.68353271]
[85.71635437 -284.05068970]
[90.03051758 -269.65731812]
[92.25229645 -254.79649353]
[92.33645630 -239.77072144]
[90.28128052 -224.88592529]
[86.12862396 -210.44514465]
[79.96302032 -196.74237061]
[71.90998840 -184.05656433]
[62.13349152 -172.64601135]
[50.83255005 -162.74301147]
[38.23725128 -154.54916382]
[24.60400772 -148.23129272]
[28.91159248 -133.86309814]
[33.21917725 -119.49491882]
[37.52676392 -105.12673950]
[54.33266830 -105.12701416]
[70.34730530 -99.97251129]
[84.02682495 -90.14865875]
[94.04896545 -76.59159851]
[99.44090271 -60.59893799]
[99.67361450 -43.70557785]
[94.71379852 -27.53640366]
[85.02812958 -13.64999008]
[71.53935242 -3.38836145]
[76.73477173 10.68315792]
[87.61786652 16.05583000]
[92.03987885 27.78889275]
[87.10458374 39.75119781]
[92.00614166 53.92775345]
[96.90769196 68.10431671]
[108.07004547 68.03157043]
[118.89273071 71.85581970]
[128.02120972 79.32437897]
[134.23863220 89.71698761]
[136.62564087 101.91204071]
[134.69050598 114.50679779]
[148.91728210 119.26061249]
[163.14405823 124.01442719]
[177.37084961 128.76824951]
[190.60527039 120.43855286]
[206.09054565 122.61577606]
[216.51499939 134.27188110]
[216.95649719 149.90324402]
[207.20660400 162.12918091]
[191.86891174 165.17698669]
[178.18540955 157.60758972]
[172.61703491 142.99502563]
[158.39024353 138.24121094]
[144.16346741 133.48739624]
[129.93669128 128.73358154]
[117.76485443 137.49978638]
[117.76485443 152.49978638]
[117.76485443 167.49978638]
[117.76485443 182.49978638]
[117.76485443 197.49978638]
[117.76485443 212.49978638]
[117.76485443 227.49978638]
[117.76485443 242.49978638]
[117.76485443 257.49978638]
[117.76485443 272.49978638]
[117.76485443 287.49978638]
[117.76485443 302.49978638]
[132.30473328 306.56109619]
[145.20912170 314.39559937]
[155.52040100 325.42193604]
[162.47343445 338.82186890]
[165.55223083 353.60104370]
[164.52833557 368.66271973]
[159.47773743 382.88922119]
[150.77520752 395.22488403]
[139.06654358 404.75430298]
[125.22061157 410.77035522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[27 108]
[28 107]
[29 106]
[31 103]
[32 102]
[44 93]
[45 92]
[46 91]
[47 90]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
