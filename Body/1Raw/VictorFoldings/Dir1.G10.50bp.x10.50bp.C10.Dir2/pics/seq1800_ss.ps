%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACCCAACUGGGGGGGGGGUACACUUAGGAGAUUUCAACUUAACUUGACCGCUCUGAGCUAAACCUAGCxxxxxxxxxxUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCUCACUCAUUUACACCCCCCCCCCCCAACCACCCAACU\
) } def
/len { sequence length } bind def

/coor [
[75.49427795 413.68041992]
[62.28620148 406.44433594]
[50.94275665 396.53775024]
[41.99450302 384.42401123]
[35.85996628 370.66967773]
[32.82606506 355.91809082]
[33.03470993 340.85919189]
[36.47613144 326.19732666]
[42.98937607 312.61822510]
[52.26980209 300.75704956]
[63.88335037 291.16851807]
[77.28683472 284.30117798]
[91.85334778 280.47613525]
[91.24546051 265.48846436]
[90.63758087 250.50079346]
[90.02969360 235.51310730]
[89.42181396 220.52543640]
[88.81392670 205.53775024]
[88.20604706 190.55007935]
[87.59815979 175.56239319]
[86.99028015 160.57472229]
[86.38239288 145.58705139]
[85.77451324 130.59936523]
[78.14327240 121.59150696]
[74.73935699 111.37059784]
[75.37425995 101.64328766]
[79.24333954 93.81273651]
[85.11801910 88.77957916]
[91.59337616 86.83919525]
[97.34848022 87.68696594]
[94.03184509 73.05822754]
[90.71520233 58.42949295]
[87.39856720 43.80075836]
[84.08192444 29.17202187]
[74.87126923 27.51588631]
[66.65041351 21.88447952]
[61.13717270 12.86405849]
[59.71062851 1.77577293]
[45.11625671 -1.68894327]
[30.52188110 -5.15365934]
[15.92750835 -8.61837578]
[2.60628939 -0.11421896]
[-12.80835915 -3.60193253]
[-21.17120171 -17.01231766]
[-17.52070999 -32.38923264]
[-4.02265644 -40.60982132]
[11.31480217 -36.79695892]
[19.39222336 -23.21274948]
[33.98659897 -19.74803352]
[48.58097076 -16.28331757]
[63.17534637 -12.81860065]
[75.39932251 -21.51194763]
[76.91684723 -36.43498611]
[78.43437195 -51.35802841]
[69.22234344 -58.98328018]
[64.90511322 -70.00625610]
[66.45645142 -81.62113190]
[73.37194061 -90.93157196]
[83.82434845 -95.67298126]
[85.94538879 -110.52226257]
[83.67397308 -125.34928894]
[77.20487213 -138.88261414]
[70.73577881 -152.41592407]
[64.26667786 -165.94924927]
[50.44513702 -174.77517700]
[51.44805527 -191.14363098]
[66.24372101 -198.21614075]
[79.61161041 -188.71711731]
[77.79999542 -172.41835022]
[84.26909637 -158.88502502]
[90.73819733 -145.35169983]
[97.20729065 -131.81838989]
[98.77859497 -146.73585510]
[103.26704407 -161.04856873]
[110.49557495 -174.19195557]
[120.17906189 -185.64752197]
[131.93551636 -194.96340942]
[145.30117798 -201.77214050]
[159.74885559 -205.80513000]
[174.70860291 -206.90330505]
[189.59031677 -205.02331543]
[203.80699158 -200.23934937]
[216.79780579 -192.74009705]
[228.05032349 -182.82139587]
[237.12068176 -170.87448120]
[243.65107727 -157.37063599]
[247.38392639 -142.84252930]
[248.17195129 -127.86324310]
[245.98410034 -113.02365875]
[240.90666199 -98.90914154]
[233.13992310 -86.07646179]
[222.99024963 -75.03181458]
[210.85800171 -66.21088409]
[197.22178650 -59.96162033]
[182.61946106 -56.53052902]
[167.62707520 -56.05295563]
[152.83598328 -58.54774475]
[138.82968140 -63.91648102]
[126.16064453 -71.94738770]
[115.32862091 -82.32366943]
[106.76090240 -94.63603210]
[100.79467010 -108.40122223]
[98.67362976 -93.55194092]
[110.52186584 -79.65324402]
[108.47260284 -61.18533325]
[93.35741425 -49.84050369]
[91.83988953 -34.91746140]
[90.32236481 -19.99442291]
[111.02928925 2.03584838]
[98.71066284 25.85538292]
[102.02730560 40.48411942]
[105.34394073 55.11285400]
[108.66058350 69.74159241]
[111.97721863 84.37032318]
[123.35858917 94.14091492]
[136.37161255 84.75790405]
[151.78157043 89.22026062]
[157.76727295 104.10485077]
[149.73698425 117.99348450]
[133.85087585 120.23199463]
[122.29539490 109.10318756]
[116.91209412 114.32526398]
[129.53300476 122.43160248]
[143.04869080 128.93745422]
[145.45037842 143.74394226]
[134.68412781 154.18844604]
[119.95729828 151.33879089]
[113.86443329 137.63090515]
[106.14549255 124.76940918]
[100.76218414 129.99148560]
[101.37007141 144.97915649]
[101.97795868 159.96684265]
[102.58583832 174.95451355]
[103.19372559 189.94219971]
[103.80160522 204.92987061]
[104.40949249 219.91755676]
[105.01737213 234.90522766]
[105.62525940 249.89289856]
[106.23313904 264.88058472]
[106.84102631 279.86825562]
[121.66945648 282.50103760]
[135.58506775 288.26037598]
[147.93699646 296.87689209]
[158.14750671 307.94754028]
[165.73905945 320.95455933]
[170.35656738 335.28958130]
[171.78405762 350.28210449]
[169.95477295 365.23095703]
[164.95426941 379.43692017]
[157.01643372 392.23553467]
[146.51252747 403.02822876]
[133.93385315 411.31018066]
[119.86870575 416.69403076]
[104.97496796 418.92797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[38 51]
[39 50]
[40 49]
[41 48]
[52 108]
[53 107]
[54 106]
[59 103]
[60 102]
[61 72]
[62 71]
[63 70]
[64 69]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
