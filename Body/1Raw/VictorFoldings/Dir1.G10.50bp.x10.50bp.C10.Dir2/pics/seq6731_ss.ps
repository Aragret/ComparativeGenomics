%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUAGCUGCGGGGGGGGGGUGGCAUCACUAUACUACUAACAGACCGCAACCUCAACACCACCUUCUUCGxxxxxxxxxxAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCCCCCCCCCCCUCCUAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[81.83942413 360.57647705]
[69.28120422 352.22531128]
[59.19498062 341.01287842]
[52.21478653 327.64395142]
[48.77940369 312.95898438]
[49.10477829 297.88101196]
[53.17046356 283.35787964]
[60.72088242 270.30255127]
[71.28141022 259.53564453]
[84.18820953 251.73402405]
[98.62993622 247.38807678]
[98.00595856 232.40104675]
[97.38198090 217.41403198]
[96.75800323 202.42701721]
[96.13402557 187.44000244]
[95.51004791 172.45298767]
[94.88607025 157.46597290]
[94.26209259 142.47895813]
[93.63811493 127.49194336]
[93.01413727 112.50492859]
[85.68845367 100.59585571]
[91.99884796 88.11904907]
[91.37487030 73.13203430]
[90.75089264 58.14501953]
[75.74909973 57.84524918]
[60.79421234 56.62252045]
[45.94296646 54.48146820]
[31.25169182 51.43022156]
[16.77611923 47.48035049]
[2.57116294 42.64683914]
[-11.30929565 36.94802094]
[-24.81260109 30.40551567]
[-37.88753128 23.04414177]
[-50.48448944 14.89182281]
[-62.55569077 5.97948360]
[-74.05534363 -3.65906763]
[-84.93981934 -13.98726940]
[-95.16783905 -24.96594238]
[-104.70059967 -36.55344009]
[-113.50194550 -48.70580673]
[-121.53848267 -61.37694550]
[-128.77972412 -74.51879120]
[-135.19821167 -88.08148193]
[-140.76957703 -102.01358795]
[-145.47271729 -116.26223755]
[-149.28976440 -130.77340698]
[-152.20625305 -145.49201965]
[-154.21110535 -160.36225891]
[-155.29673767 -175.32772827]
[-155.45901489 -190.33163452]
[-154.69732666 -205.31707764]
[-153.01457214 -220.22720337]
[-150.41711426 -235.00546265]
[-146.91482544 -249.59579468]
[-142.52098083 -263.94284058]
[-137.25224304 -277.99218750]
[-131.12861633 -291.69052124]
[-124.17330933 -304.98593140]
[-116.41271973 -317.82791138]
[-107.87628174 -330.16781616]
[-98.59637451 -341.95877075]
[-88.60820770 -353.15609741]
[-77.94966125 -363.71731567]
[-66.66117859 -373.60232544]
[-54.78556442 -382.77368164]
[-42.36788177 -391.19656372]
[-29.45522881 -398.83898926]
[-16.09659004 -405.67205811]
[-2.34263945 -411.66973877]
[11.75444984 -416.80935669]
[26.14120293 -421.07141113]
[40.76304245 -424.43969727]
[55.56451035 -426.90145874]
[70.48944855 -428.44738770]
[85.48124695 -429.07156372]
[100.48303986 -428.77163696]
[115.43791199 -427.54876709]
[130.28913879 -425.40756226]
[144.98037720 -422.35617065]
[159.45591736 -418.40615845]
[173.66082764 -413.57250977]
[187.54122925 -407.87353516]
[201.04446411 -401.33090210]
[214.11932373 -393.96942139]
[226.71620178 -385.81695557]
[238.78730774 -376.90451050]
[250.28686523 -367.26583862]
[261.17123413 -356.93753052]
[271.39916992 -345.95877075]
[280.93182373 -334.37118530]
[289.73303223 -322.21871948]
[297.76943970 -309.54751587]
[305.01055908 -296.40557861]
[311.42889404 -282.84283447]
[317.00015259 -268.91067505]
[321.70312500 -254.66197205]
[325.52005005 -240.15077209]
[328.43637085 -225.43212891]
[330.44110107 -210.56185913]
[331.52658081 -195.59638977]
[331.68872070 -180.59246826]
[330.92687988 -165.60704041]
[329.24395752 -150.69692993]
[326.64636230 -135.91870117]
[323.14392090 -121.32840729]
[318.74993896 -106.98139954]
[313.48107910 -92.93210602]
[307.35729980 -79.23381805]
[300.40188599 -65.93849945]
[292.64117432 -53.09657669]
[284.10461426 -40.75677109]
[274.82458496 -28.96589088]
[264.83630371 -17.76866150]
[254.17765808 -7.20756054]
[242.88906860 2.67735243]
[231.01336670 11.84857845]
[218.59559631 20.27132988]
[205.68287659 27.91365242]
[192.32417297 34.74655914]
[178.57015991 40.74412918]
[164.47302246 45.88361359]
[150.08622742 50.14551544]
[135.46435547 53.51366425]
[120.66286469 55.97528458]
[105.73790741 57.52104187]
[106.36188507 72.50805664]
[106.98586273 87.49507141]
[114.31154633 99.40414429]
[108.00115204 111.88095093]
[108.62512970 126.86796570]
[109.24910736 141.85498047]
[109.87308502 156.84199524]
[110.49706268 171.82901001]
[111.12104034 186.81602478]
[111.74501801 201.80303955]
[112.36899567 216.79005432]
[112.99297333 231.77706909]
[113.61695099 246.76409912]
[128.36994934 249.89453125]
[141.88059998 256.59628296]
[153.29957581 266.44808960]
[161.90908813 278.83059692]
[167.16793823 292.96551514]
[168.74554443 307.96423340]
[166.54273987 322.88397217]
[160.69798279 336.78683472]
[151.57870483 348.79888916]
[139.75813293 358.16506958]
[125.97932434 364.29653931]
[111.10842133 366.80795288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[22 127]
[23 126]
[24 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
