%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCCCGAAGGGGGGGGGGACCAGACGAGCUACCUAAGAACAGCUAAAAGAGCACACCCGUCUAUGUAGxxxxxxxxxxUUAACCAAAUCAACAACAACCUAUUUAGCUGUUCCCCAACCUUUUCCUCCCCCCCCCCCCGACCCCCUAA\
) } def
/len { sequence length } bind def

/coor [
[85.28718567 443.38659668]
[72.72896576 435.03546143]
[62.64274216 423.82299805]
[55.66254807 410.45410156]
[52.22716141 395.76910400]
[52.55253983 380.69113159]
[56.61822510 366.16802979]
[64.16864777 353.11267090]
[74.72917175 342.34579468]
[87.63597107 334.54415894]
[102.07769775 330.19821167]
[101.45372009 315.21118164]
[100.82974243 300.22418213]
[100.20576477 285.23715210]
[99.58178711 270.25012207]
[98.95780945 255.26312256]
[98.33383179 240.27610779]
[97.70985413 225.28909302]
[97.08587646 210.30207825]
[96.46189880 195.31504822]
[95.83792114 180.32803345]
[82.40349579 178.48744202]
[69.46915436 174.41629028]
[57.40247726 168.23025513]
[46.54640579 160.10516357]
[37.20945358 150.27189636]
[29.65697670 139.00994873]
[24.10360909 126.63934326]
[20.70717812 113.51167297]
[19.56420708 100.00000000]
[20.70717812 86.48832703]
[24.10360909 73.36065674]
[29.65697670 60.99005508]
[37.20945358 49.72809982]
[46.54640579 39.89484406]
[57.40247726 31.76974297]
[69.46915436 25.58371162]
[82.40349579 21.51255035]
[95.83792114 19.67196083]
[96.46189880 4.68494511]
[97.08587646 -10.30207062]
[97.70985413 -25.28908730]
[98.33383179 -40.27610397]
[98.95780945 -55.26311874]
[99.58178711 -70.25013733]
[100.20576477 -85.23715210]
[100.82974243 -100.22416687]
[101.45372009 -115.21118164]
[102.07769775 -130.19819641]
[87.23884583 -132.49786377]
[72.75078583 -136.44451904]
[58.79571533 -141.98854065]
[45.54914474 -149.06019592]
[33.17765808 -157.57055664]
[21.83684158 -167.41261292]
[11.66931629 -178.46255493]
[2.80294991 -190.58145142]
[-4.65075350 -203.61688232]
[-10.59805489 -217.40490723]
[-14.96416187 -231.77212524]
[-17.69416618 -246.53787231]
[-18.75373268 -261.51641846]
[-18.12953949 -276.51943970]
[-15.82943344 -291.35821533]
[-11.88234329 -305.84616089]
[-6.33790636 -319.80108643]
[0.73414958 -333.04742432]
[9.24488544 -345.41867065]
[19.08727074 -356.75918579]
[30.13752747 -366.92639160]
[42.25668335 -375.79238892]
[55.29233170 -383.24569702]
[69.08053589 -389.19259644]
[83.44789124 -393.55825806]
[98.21371460 -396.28784180]
[113.19230652 -397.34695435]
[128.19529724 -396.72229004]
[143.03401184 -394.42175293]
[157.52183533 -390.47424316]
[171.47657776 -384.92938232]
[184.72271729 -377.85693359]
[197.09370422 -369.34582520]
[208.43392944 -359.50308228]
[218.60079956 -348.45254517]
[227.46643066 -336.33309937]
[234.91935730 -323.29724121]
[240.86582947 -309.50885010]
[245.23107910 -295.14138794]
[247.96020508 -280.37545776]
[249.01887512 -265.39685059]
[248.39378357 -250.39387512]
[246.09278870 -235.55522156]
[242.14483643 -221.06752014]
[236.59956360 -207.11294556]
[229.52671814 -193.86700439]
[221.01524353 -181.49629211]
[211.17218018 -170.15635681]
[200.12130737 -159.98982239]
[188.00161743 -151.12454224]
[174.96553040 -143.67201233]
[161.17697144 -137.72593689]
[146.80935669 -133.36112976]
[132.04336548 -130.63244629]
[117.06471252 -129.57421875]
[116.44073486 -114.58720398]
[115.81675720 -99.60018921]
[115.19277954 -84.61317444]
[114.56880188 -69.62615967]
[113.94482422 -54.63914108]
[113.32084656 -39.65212631]
[112.69686890 -24.66510963]
[112.07289124 -9.67809391]
[111.44891357 5.30892229]
[110.82493591 20.29593849]
[126.83216095 24.17156219]
[141.71443176 31.22629738]
[154.84783936 41.16437149]
[165.68174744 53.56913376]
[173.76193237 67.92050934]
[178.74964905 83.61682129]
[180.43579102 100.00000000]
[178.74964905 116.38317871]
[173.76193237 132.07948303]
[165.68174744 146.43086243]
[154.84783936 158.83563232]
[141.71443176 168.77369690]
[126.83216095 175.82843018]
[110.82493591 179.70405579]
[111.44891357 194.69107056]
[112.07289124 209.67810059]
[112.69686890 224.66511536]
[113.32084656 239.65213013]
[113.94482422 254.63914490]
[114.56880188 269.62615967]
[115.19277954 284.61315918]
[115.81675720 299.60018921]
[116.44073486 314.58721924]
[117.06471252 329.57421875]
[131.81771851 332.70465088]
[145.32835388 339.40643311]
[156.74732971 349.25820923]
[165.35684204 361.64074707]
[170.61569214 375.77563477]
[172.19329834 390.77438354]
[169.99049377 405.69409180]
[164.14575195 419.59698486]
[155.02647400 431.60903931]
[143.20590210 440.97518921]
[129.42707825 447.10668945]
[114.55618286 449.61807251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
[48 105]
[49 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
