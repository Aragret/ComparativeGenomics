%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAAACUCAGGGGGGGGGGGACCCAAACAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUUCCUAAUUACxxxxxxxxxxACUAUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCUUGUAGCCCCCCCCCCUAUAAACUAA\
) } def
/len { sequence length } bind def

/coor [
[87.07556915 375.95077515]
[72.58587646 371.74230957]
[59.67964935 363.92620850]
[49.23685074 353.03536987]
[41.96948624 339.81234741]
[38.37305832 325.15875244]
[38.69277954 310.07366943]
[42.90685272 295.58560181]
[50.72794724 282.68237305]
[61.62281418 272.24377441]
[74.84862518 264.98153687]
[89.50361633 261.39074707]
[89.81567383 246.39399719]
[90.12773132 231.39724731]
[90.43978882 216.40049744]
[90.75183868 201.40374756]
[91.06389618 186.40698242]
[91.37595367 171.41023254]
[91.68801117 156.41348267]
[92.00006866 141.41673279]
[92.31212616 126.41997528]
[77.26796722 104.12043762]
[88.81202698 85.02960968]
[85.40904999 70.42071533]
[82.00607300 55.81182480]
[78.60308838 41.20293045]
[63.04340363 41.05129623]
[47.97677612 37.19739151]
[34.27070618 29.86740494]
[22.71333694 19.48753929]
[13.96812820 6.65924311]
[8.53577518 -7.87564707]
[6.72554159 -23.27780151]
[8.63765621 -38.65886307]
[14.15777397 -53.13268661]
[22.96380234 -65.86640167]
[34.54469681 -76.12831116]
[48.23011017 -83.32997894]
[44.52394867 -97.86491394]
[40.81778717 -112.39984894]
[35.63336945 -120.00074768]
[37.18906784 -127.27573395]
[33.78609085 -141.88462830]
[30.38311195 -156.49351501]
[26.98013306 -171.10241699]
[23.57715607 -185.71130371]
[8.63234520 -184.20101929]
[-6.38289881 -184.61430359]
[-21.22200966 -186.94433594]
[-35.64131927 -191.15289307]
[-49.40404510 -197.17083740]
[-62.28419495 -204.89935303]
[-74.07025909 -214.21154785]
[-84.56871033 -224.95449829]
[-93.60714722 -236.95179749]
[-101.03714752 -250.00642395]
[-106.73670959 -263.90402222]
[-110.61223602 -278.41638184]
[-112.60009003 -293.30520630]
[-112.66763306 -308.32598877]
[-110.81375885 -323.23205566]
[-107.06889343 -337.77868652]
[-101.49454498 -351.72698975]
[-94.18224335 -364.84790039]
[-85.25206757 -376.92599487]
[-74.85066223 -387.76293945]
[-63.14881516 -397.18072510]
[-50.33868790 -405.02478027]
[-36.63063812 -411.16625977]
[-22.24976158 -415.50430298]
[-7.43220425 -417.96771240]
[7.57871532 -418.51599121]
[22.53650475 -417.14016724]
[37.19554138 -413.86282349]
[51.31511307 -408.73779297]
[64.66336060 -401.84921265]
[77.02110291 -393.31021118]
[88.18540192 -383.26098633]
[97.97293854 -371.86657715]
[106.22298431 -359.31408691]
[112.80007172 -345.80963135]
[117.59620667 -331.57498169]
[120.53261566 -316.84387207]
[121.56108856 -301.85818481]
[120.66474152 -286.86404419]
[117.85828400 -272.10760498]
[113.18781281 -257.83123779]
[106.73001099 -244.26933289]
[98.59091949 -231.64460754]
[88.90419769 -220.16436768]
[77.82890320 -210.01715088]
[65.54691315 -201.36953735]
[52.25989914 -194.36357117]
[38.18604660 -189.11428833]
[41.58902740 -174.50538635]
[44.99200439 -159.89649963]
[48.39498138 -145.28761292]
[51.79795837 -130.67871094]
[55.35272217 -116.10601044]
[59.05888367 -101.57107544]
[62.76504517 -87.03614044]
[77.24606323 -87.36260223]
[91.44123077 -84.44335938]
[104.63195801 -78.42274475]
[116.14973450 -69.60219574]
[125.41002655 -58.42511749]
[131.94189453 -45.45463943]
[135.41201782 -31.34521866]
[135.64160156 -16.80962181]
[132.61567688 -2.58291674]
[126.48399353 10.61469173]
[117.55359650 22.11433029]
[106.27347565 31.33234978]
[93.21198273 37.79995346]
[96.61495972 52.40884781]
[100.01794434 67.01773834]
[103.42092133 81.62663269]
[119.19059753 87.13748169]
[126.93539429 105.62165833]
[140.32168579 112.38977814]
[154.06341553 105.18252563]
[169.41210938 107.46223450]
[180.46588135 118.35231018]
[182.97433472 133.66528320]
[175.97291565 147.51301575]
[162.15380859 154.57077026]
[146.83074951 152.12469482]
[135.89575195 141.11535645]
[133.55355835 125.77606201]
[120.16728210 119.00794983]
[107.30887604 126.73203278]
[106.99681854 141.72879028]
[106.68476105 156.72554016]
[106.37271118 171.72229004]
[106.06065369 186.71903992]
[105.74859619 201.71580505]
[105.43653870 216.71255493]
[105.12448120 231.70930481]
[104.81242371 246.70605469]
[104.50037384 261.70281982]
[118.99330902 265.90008545]
[131.90556335 273.70623779]
[142.35678101 284.58901978]
[149.63435364 297.80639648]
[153.24209595 312.45721436]
[152.93402100 327.54257202]
[148.73114014 342.03387451]
[140.92001343 354.94311523]
[130.03320312 365.39013672]
[116.81300354 372.66259766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[23 117]
[24 116]
[25 115]
[26 114]
[38 101]
[39 100]
[40 99]
[42 98]
[43 97]
[44 96]
[45 95]
[46 94]
[119 130]
[120 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
