%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACUACUAGGGGGGGGGGUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCxxxxxxxxxxACAGGUCAACCUCGCUUCCCCACCCUUACUAACAUUAACGAAAAUAACCCCCCCCCCCCCCACCCUACUA\
) } def
/len { sequence length } bind def

/coor [
[67.99810028 153.18473816]
[56.20111465 143.98176575]
[46.94906998 132.22323608]
[40.77954865 118.59236908]
[38.05103302 103.88119507]
[38.92206573 88.94449615]
[43.34203339 74.65018463]
[51.05411530 61.82882690]
[61.61019897 51.22540283]
[74.39691925 43.45603180]
[88.67131042 38.97214508]
[87.73568726 24.00135422]
[86.80005646 9.03056335]
[85.86442566 -5.94022799]
[84.92880249 -20.91102028]
[83.99317169 -35.88180923]
[83.05754089 -50.85260391]
[82.12191772 -65.82339478]
[81.18628693 -80.79418945]
[80.25065613 -95.76497650]
[79.31503296 -110.73577118]
[64.31078339 -110.68021393]
[49.32913971 -111.50531769]
[34.42174149 -113.20823669]
[19.63997650 -115.78310394]
[5.03480482 -119.22104645]
[-9.34342861 -123.51020813]
[-23.44515800 -128.63580322]
[-37.22177124 -134.58015442]
[-50.62578201 -141.32278442]
[-63.61097336 -148.84043884]
[-76.13259125 -157.10722351]
[-88.14746857 -166.09460449]
[-99.61418915 -175.77163696]
[-110.49321747 -186.10493469]
[-120.74706268 -197.05889893]
[-130.34036255 -208.59574890]
[-139.24006653 -220.67573547]
[-147.41546631 -233.25718689]
[-154.83840942 -246.29676819]
[-161.48329163 -259.74951172]
[-167.32720947 -273.56903076]
[-172.35002136 -287.70767212]
[-176.53440857 -302.11676025]
[-179.86593628 -316.74658203]
[-182.33314514 -331.54669189]
[-183.92750549 -346.46609497]
[-184.64353943 -361.45333862]
[-184.47875977 -376.45678711]
[-183.43376160 -391.42468262]
[-181.51211548 -406.30548096]
[-178.72047424 -421.04785156]
[-175.06843567 -435.60095215]
[-170.56860352 -449.91464233]
[-165.23649597 -463.93960571]
[-159.09048462 -477.62744141]
[-152.15174866 -490.93099976]
[-144.44422913 -503.80438232]
[-135.99447632 -516.20324707]
[-126.83162689 -528.08489990]
[-116.98726654 -539.40826416]
[-106.49532318 -550.13439941]
[-95.39197540 -560.22625732]
[-83.71549988 -569.64910889]
[-71.50614166 -578.37048340]
[-58.80598450 -586.36029053]
[-45.65882111 -593.59094238]
[-32.10996246 -600.03753662]
[-18.20612335 -605.67791748]
[-3.99522591 -610.49255371]
[10.47373867 -614.46490479]
[25.15089226 -617.58129883]
[39.98563766 -619.83087158]
[54.92684174 -621.20599365]
[69.92299652 -621.70190430]
[84.92240143 -621.31683350]
[99.87335205 -620.05212402]
[114.72431946 -617.91217041]
[129.42410278 -614.90435791]
[143.92201233 -611.03900146]
[158.16809082 -606.32946777]
[172.11323547 -600.79199219]
[185.70935059 -594.44567871]
[198.90957642 -587.31231689]
[211.66841125 -579.41662598]
[223.94187927 -570.78570557]
[235.68766785 -561.44934082]
[246.86526489 -551.43981934]
[257.43615723 -540.79150391]
[267.36392212 -529.54113770]
[276.61431885 -517.72753906]
[285.15542603 -505.39144897]
[292.95785522 -492.57534790]
[299.99468994 -479.32342529]
[306.24166870 -465.68136597]
[311.67727661 -451.69619751]
[316.28271484 -437.41613770]
[320.04217529 -422.89038086]
[322.94268799 -408.16906738]
[324.97421265 -393.30288696]
[326.12976074 -378.34307861]
[326.40539551 -363.34127808]
[325.80010986 -348.34915161]
[324.31604004 -333.41836548]
[321.95825195 -318.60043335]
[318.73489380 -303.94641113]
[314.65707397 -289.50680542]
[309.73886108 -275.33142090]
[303.99722290 -261.46908569]
[297.45190430 -247.96763611]
[290.12551880 -234.87358093]
[282.04327393 -222.23205566]
[273.23306274 -210.08665466]
[263.72528076 -198.47923279]
[253.55264282 -187.44981384]
[242.75025940 -177.03642273]
[231.35534668 -167.27493286]
[219.40719604 -158.19902039]
[206.94700623 -149.83995056]
[194.01771545 -142.22656250]
[180.66387939 -135.38507080]
[166.93156433 -129.33909607]
[152.86808777 -124.10945129]
[138.52194214 -119.71417999]
[123.94256592 -116.16842651]
[109.18022919 -113.48441315]
[94.28582001 -111.67139435]
[95.22145081 -96.70060730]
[96.15708160 -81.72981262]
[97.09270477 -66.75902557]
[98.02833557 -51.78823090]
[98.96396637 -36.81744003]
[99.89958954 -21.84664726]
[100.83522034 -6.87585640]
[101.77085114 8.09493542]
[102.70647430 23.06572723]
[103.64210510 38.03651810]
[118.36370087 40.70824432]
[132.01826477 46.82511520]
[143.81242371 56.03171921]
[153.06085205 67.79309845]
[159.22616577 81.42586517]
[161.95016479 96.13787842]
[161.07452393 111.07430267]
[156.65016174 125.36724854]
[148.93412781 138.18623352]
[138.37478638 148.78640747]
[125.58567047 156.55184937]
[111.30989838 161.03134155]
[96.37696838 161.96459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
