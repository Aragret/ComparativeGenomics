%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUCCACCCUGGGGGGGGGGCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGxxxxxxxxxxAACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCCCCCCCCCCCUUCCACCCU\
) } def
/len { sequence length } bind def

/coor [
[31.76454735 257.25180054]
[22.23173714 252.76223755]
[12.99277973 247.69544983]
[4.08258581 242.07058716]
[-4.46517611 235.90890503]
[-12.61820698 229.23367310]
[-20.34570122 222.07011414]
[-27.61845970 214.44531250]
[-34.40900040 206.38807678]
[-40.69166565 197.92883301]
[-46.44271851 189.09956360]
[-51.64042282 179.93362427]
[-56.26514435 170.46565247]
[-70.19586182 176.02758789]
[-84.12657166 181.58952332]
[-98.05728912 187.15145874]
[-111.98800659 192.71339417]
[-121.93547058 205.01618958]
[-136.62442017 202.54966736]
[-150.55514526 208.11160278]
[-164.48585510 213.67353821]
[-178.41658020 219.23547363]
[-192.34729004 224.79740906]
[-206.27801514 230.35934448]
[-220.20872498 235.92127991]
[-234.13943481 241.48321533]
[-241.76432800 255.59848022]
[-257.57897949 258.29589844]
[-269.45178223 247.50624084]
[-268.27487183 231.50640869]
[-254.95114136 222.57011414]
[-239.70138550 227.55250549]
[-225.77066040 221.99057007]
[-211.83995056 216.42863464]
[-197.90922546 210.86669922]
[-183.97851562 205.30476379]
[-170.04779053 199.74281311]
[-156.11708069 194.18087769]
[-142.18637085 188.61894226]
[-133.23532104 176.71398926]
[-117.54994202 178.78268433]
[-103.61923218 173.22074890]
[-89.68851471 167.65879822]
[-75.75779724 162.09686279]
[-61.82707977 156.53492737]
[-68.06314850 133.74879456]
[-71.10717773 110.32167053]
[-70.90135193 86.69850159]
[-67.44959259 63.32797241]
[-60.81744003 40.65395737]
[-51.13087845 19.10710716]
[-38.57387161 -0.90334088]
[-23.38492393 -18.99732399]
[-33.71582413 -29.87263680]
[-44.04673004 -40.74795151]
[-59.98305130 -42.59541702]
[-68.35218811 -56.28253174]
[-62.73405838 -71.30970764]
[-47.43840027 -76.14939117]
[-34.19874191 -67.08898163]
[-33.17141342 -51.07885361]
[-22.84051132 -40.20354080]
[-12.50960922 -29.32822609]
[-4.62168789 -35.78845596]
[3.63635898 -41.76829910]
[12.23531628 -47.24660492]
[21.14476204 -52.20398712]
[30.33317757 -56.62290955]
[39.76805878 -60.48774338]
[49.41602325 -63.78480911]
[59.24294281 -66.50244904]
[69.21405029 -68.63104248]
[79.29406738 -70.16305542]
[89.44734192 -71.09308624]
[99.63794708 -71.41782379]
[109.82982635 -71.13613129]
[119.98693848 -70.24900818]
[130.07333374 -68.75958252]
[140.05334473 -66.67312622]
[149.89166260 -63.99702454]
[159.55346680 -60.74074554]
[169.00459290 -56.91580200]
[178.21159363 -52.53573227]
[187.14189148 -47.61602783]
[195.76391602 -42.17409897]
[204.68006897 -54.23653030]
[213.59622192 -66.29895782]
[208.02131653 -80.68381500]
[211.13082886 -95.79455566]
[221.93252563 -106.80939484]
[236.97962952 -110.21355438]
[251.47065735 -104.92076111]
[260.78158569 -92.61993408]
[261.94131470 -77.23622894]
[254.57978821 -63.67851639]
[241.04605103 -56.27302170]
[225.65864563 -57.38280869]
[216.74250793 -45.32037735]
[207.82635498 -33.25794601]
[226.62953186 -15.53857994]
[242.55601501 4.80553436]
[255.24397278 27.31222916]
[264.40518188 51.47020721]
[269.83151245 76.73065948]
[284.76751709 75.34663391]
[299.70352173 73.96260834]
[314.63955688 72.57858276]
[329.57556152 71.19456482]
[337.38296509 57.78472137]
[351.59497070 51.55583572]
[366.74673462 54.90304565]
[377.01208496 66.53927612]
[378.44381714 81.99015808]
[370.49139404 95.31451416]
[356.21267700 101.38885498]
[341.09811401 97.87747955]
[330.95959473 86.13057709]
[316.02355957 87.51460266]
[301.08755493 88.89862823]
[286.15155029 90.28264618]
[271.21554565 91.66667175]
[271.40405273 102.20209503]
[270.94494629 112.72919464]
[269.83987427 123.20819855]
[268.09304810 133.59950256]
[265.71109009 143.86384583]
[262.70297241 153.96244812]
[259.08004761 163.85716248]
[254.85604858 173.51057434]
[250.04692078 182.88621521]
[244.67080688 191.94868469]
[238.74804688 200.66369629]
[232.30102539 208.99835205]
[225.35409546 216.92114258]
[217.93348694 224.40214539]
[210.06727600 231.41308594]
[201.78515625 237.92745972]
[193.11843872 243.92066956]
[184.09985352 249.37007141]
[174.76350403 254.25505066]
[165.14465332 258.55715942]
[155.27963257 262.26016235]
[145.20574951 265.35006714]
[134.96104431 267.81515503]
[124.58424377 269.64614868]
[114.11454773 270.83612061]
[103.59151459 271.38058472]
[93.05490875 271.27746582]
[82.54454803 270.52716064]
[72.10015106 269.13250732]
[61.76116943 267.09875488]
[51.56667709 264.43362427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 45]
[14 44]
[15 43]
[16 42]
[17 41]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[53 63]
[54 62]
[55 61]
[85 99]
[86 98]
[87 97]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
