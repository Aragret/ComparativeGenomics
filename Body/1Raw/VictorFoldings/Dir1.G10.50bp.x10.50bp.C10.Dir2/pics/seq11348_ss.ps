%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUAUUAAAGGGGGGGGGGGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCAAUCxxxxxxxxxxCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAACCCCCCCCCCAAACUAUUAAA\
) } def
/len { sequence length } bind def

/coor [
[91.25541687 161.45137024]
[76.80460358 157.57353210]
[63.70156479 150.35038757]
[52.70764542 140.20162964]
[44.46165085 127.71695709]
[39.44271469 113.62179565]
[37.94246292 98.73513031]
[40.04806137 83.92196655]
[45.63717270 70.04301453]
[54.38504028 57.90471268]
[65.78336334 48.21236038]
[79.16984558 41.52912903]
[93.76666260 38.24335098]
[94.07463837 23.24651527]
[94.38262177 8.24967670]
[94.69059753 -6.74716139]
[94.99857330 -21.74399948]
[95.30654907 -36.74083710]
[95.61453247 -51.73767471]
[95.92250824 -66.73451233]
[96.23048401 -81.73135376]
[96.53845978 -96.72818756]
[96.84644318 -111.72502899]
[97.15441895 -126.72186279]
[97.46239471 -141.71870422]
[82.50630188 -142.92323303]
[67.64902496 -145.02005005]
[52.94372940 -148.00163269]
[38.44306946 -151.85733032]
[24.19894981 -156.57331848]
[10.26236248 -162.13273621]
[-3.31680226 -168.51567078]
[-16.48993492 -175.69926453]
[-29.20987892 -183.65782166]
[-41.43109894 -192.36282349]
[-53.10985184 -201.78314209]
[-64.20432281 -211.88504028]
[-74.67479706 -222.63235474]
[-84.48379517 -233.98660278]
[-93.59620667 -245.90715027]
[-101.97940063 -258.35131836]
[-109.60337830 -271.27456665]
[-116.44084167 -284.63064575]
[-122.46732330 -298.37173462]
[-127.66123199 -312.44860840]
[-132.00399780 -326.81091309]
[-135.48005676 -341.40725708]
[-138.07696533 -356.18533325]
[-139.78543091 -371.09225464]
[-140.59934998 -386.07467651]
[-140.51579285 -401.07894897]
[-139.53506470 -416.05139160]
[-137.66067505 -430.93838501]
[-134.89933777 -445.68661499]
[-131.26092529 -460.24331665]
[-126.75848389 -474.55636597]
[-121.40811157 -488.57452393]
[-115.22897339 -502.24765015]
[-108.24317932 -515.52673340]
[-100.47574615 -528.36425781]
[-91.95447540 -540.71429443]
[-82.70986938 -552.53265381]
[-72.77501678 -563.77691650]
[-62.18549728 -574.40698242]
[-50.97920609 -584.38464355]
[-39.19626617 -593.67431641]
[-26.87885094 -602.24267578]
[-14.07105923 -610.05908203]
[-0.81873703 -617.09552002]
[12.83067417 -623.32684326]
[26.82831383 -628.73065186]
[41.12407303 -633.28771973]
[55.66677475 -636.98168945]
[70.40436554 -639.79931641]
[85.28408051 -641.73052979]
[100.25265503 -642.76843262]
[115.25651550 -642.90924072]
[130.24192810 -642.15252686]
[145.15528870 -640.50097656]
[159.94316101 -637.96051025]
[174.55265808 -634.54022217]
[188.93144226 -630.25231934]
[203.02804565 -625.11218262]
[216.79203796 -619.13824463]
[230.17411804 -612.35180664]
[243.12637329 -604.77722168]
[255.60247803 -596.44158936]
[267.55773926 -587.37475586]
[278.94934082 -577.60919189]
[289.73654175 -567.17980957]
[299.88073730 -556.12402344]
[309.34558105 -544.48132324]
[318.09716797 -532.29339600]
[326.10424805 -519.60394287]
[333.33807373 -506.45834351]
[339.77279663 -492.90365601]
[345.38537598 -478.98837280]
[350.15573120 -464.76235962]
[354.06674194 -450.27655029]
[357.10446167 -435.58273315]
[359.25799561 -420.73358154]
[360.51962280 -405.78219604]
[360.88482666 -390.78210449]
[360.35229492 -375.78704834]
[358.92398071 -360.85067749]
[356.60494995 -346.02645874]
[353.40350342 -331.36743164]
[349.33111572 -316.92614746]
[344.40237427 -302.75424194]
[338.63491821 -288.90243530]
[332.04937744 -275.42037964]
[324.66934204 -262.35629272]
[316.52124023 -249.75692749]
[307.63421631 -237.66741943]
[298.04006958 -226.13102722]
[287.77319336 -215.18905640]
[276.87033081 -204.88067627]
[265.37048340 -195.24278259]
[253.31481934 -186.30987549]
[240.74652100 -178.11395264]
[227.71055603 -170.68432617]
[214.25361633 -164.04760742]
[200.42384338 -158.22755432]
[186.27076721 -153.24499512]
[171.84504700 -149.11776733]
[157.19831848 -145.86064148]
[142.38301086 -143.48529053]
[127.45216370 -142.00021362]
[112.45923615 -141.41072083]
[112.15125275 -126.41388702]
[111.84327698 -111.41705322]
[111.53530121 -96.42021179]
[111.22732544 -81.42337036]
[110.91934204 -66.42653656]
[110.61136627 -51.42969894]
[110.30339050 -36.43286133]
[109.99541473 -21.43602180]
[109.68743134 -6.43918419]
[109.37945557 8.55765438]
[109.07147980 23.55449295]
[108.76350403 38.55133057]
[123.21311951 42.43360901]
[136.31393433 49.66078568]
[147.30473328 59.81292725]
[155.54687500 72.30013275]
[160.56147766 86.39685059]
[162.05714417 101.28397369]
[159.94699097 116.09648895]
[154.35360718 129.97372437]
[145.60200500 142.10932922]
[134.20069885 151.79817200]
[120.81215668 158.47727966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
