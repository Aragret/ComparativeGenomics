%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUACCGUAGGGGGGGGGGCAACCCUAACAUAACCAUUCUUAAUUUAACUAUUUAUAUUAUCCUAACUAxxxxxxxxxxUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGACCCCCCCCCCUUCUACCCUA\
) } def
/len { sequence length } bind def

/coor [
[89.33878326 374.80581665]
[75.49284363 368.78976440]
[63.78418350 359.26034546]
[55.08166122 346.92468262]
[50.03105927 332.69818115]
[49.00716782 317.63647461]
[52.08596802 302.85733032]
[59.03899002 289.45739746]
[69.35027313 278.43106079]
[82.25465393 270.59655762]
[96.79454041 266.53524780]
[96.79454041 251.53524780]
[96.79454041 236.53524780]
[96.79454041 221.53524780]
[96.79454041 206.53524780]
[96.79454041 191.53524780]
[96.79454041 176.53524780]
[96.79454041 161.53524780]
[96.79454041 146.53524780]
[96.79454041 131.53524780]
[76.67514038 115.73144531]
[76.40522003 93.14479828]
[63.96577835 84.76265717]
[54.30018616 96.25215149]
[43.46807861 106.64914703]
[31.59218979 115.83583832]
[18.80707741 123.70813751]
[5.25761271 130.17683411]
[-8.90268230 135.16864014]
[-23.51335907 138.62699890]
[-38.40886688 140.51272583]
[-53.42042923 140.80444336]
[-68.37795258 139.49884033]
[-83.11195374 136.61073303]
[-97.45549774 132.17282104]
[-111.24604797 126.23542023]
[-124.32734680 118.86577606]
[-136.55117798 110.14740753]
[-147.77903748 100.17909241]
[-157.88371277 89.07379150]
[-166.75068665 76.95732117]
[-174.27951050 63.96697998]
[-180.38487244 50.24995804]
[-184.99758911 35.96167755]
[-188.06538391 21.26403618]
[-189.55352783 6.32356930]
[-189.44512939 -8.69043541]
[-187.74143982 -23.60785866]
[-184.46174622 -38.25967407]
[-179.64320374 -52.47986603]
[-173.34043884 -66.10730743]
[-165.62483215 -78.98758698]
[-156.58384705 -90.97476959]
[-146.31988525 -101.93302155]
[-134.94926453 -111.73818207]
[-122.60083008 -120.27915192]
[-109.41448975 -127.45915222]
[-95.53964996 -133.19683838]
[-81.13352966 -137.42718506]
[-66.35935974 -140.10224915]
[-51.38454437 -141.19175720]
[-36.37876129 -140.68331909]
[-21.51203156 -138.58273315]
[-6.95281076 -134.91378784]
[7.13393402 -129.71804810]
[20.58859062 -123.05438995]
[33.25870514 -114.99831390]
[45.00071716 -105.64111328]
[55.68158340 -95.08880615]
[65.18027496 -83.46095276]
[73.38916779 -70.88931274]
[80.21524811 -57.51632690]
[85.58117676 -43.49352646]
[89.42614746 -28.97979927]
[91.70658875 -14.13959503]
[92.39667511 0.85893470]
[91.48857880 15.84584427]
[88.99259186 30.65132141]
[84.93698883 45.10760498]
[79.36772919 59.05090332]
[72.34792328 72.32321930]
[84.78736115 80.70536041]
[100.00000000 75.42954254]
[115.21263885 80.70536041]
[127.65207672 72.32321930]
[140.09152222 63.94107437]
[152.53096008 55.55892944]
[164.97039795 47.17678833]
[177.40983582 38.79464340]
[189.84927368 30.41250038]
[202.28872681 22.03035736]
[214.72816467 13.64821434]
[212.04907227 -1.34319520]
[215.70545959 -16.12665558]
[225.06382751 -28.14084625]
[238.50279236 -35.30422974]
[253.69396973 -36.37571335]
[268.00540161 -31.16965294]
[278.95751953 -20.58802986]
[284.65283203 -6.46417332]
[284.10458374 8.75487041]
[277.40774536 22.43231201]
[265.72262573 32.19845200]
[251.07369995 36.36124802]
[235.99899292 34.19946671]
[223.11030579 26.08765411]
[210.67086792 34.46979904]
[198.23143005 42.85194016]
[185.79197693 51.23408508]
[173.35253906 59.61622620]
[160.91310120 67.99836731]
[148.47366333 76.38051605]
[136.03422546 84.76265717]
[123.59477997 93.14479828]
[128.13244629 100.30453491]
[130.24046326 109.50057220]
[144.02284241 115.42053986]
[157.80522156 121.34049988]
[170.53309631 112.62242126]
[185.95446777 112.19234467]
[199.14842224 120.18752289]
[205.90484619 134.05670166]
[204.06776428 149.37429810]
[194.22340393 161.25251770]
[179.51304626 165.90104675]
[164.63072205 161.83657837]
[154.32531738 150.35606384]
[151.88526917 135.12287903]
[138.10289001 129.20292664]
[124.32050323 123.28295898]
[111.79454041 131.53524780]
[111.79454041 146.53524780]
[111.79454041 161.53524780]
[111.79454041 176.53524780]
[111.79454041 191.53524780]
[111.79454041 206.53524780]
[111.79454041 221.53524780]
[111.79454041 236.53524780]
[111.79454041 251.53524780]
[111.79454041 266.53524780]
[126.33442688 270.59655762]
[139.23881531 278.43106079]
[149.55009460 289.45739746]
[156.50311279 302.85733032]
[159.58190918 317.63647461]
[158.55802917 332.69818115]
[153.50741577 346.92468262]
[144.80490112 359.26034546]
[133.09623718 368.78976440]
[119.25029755 374.80581665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 82]
[23 81]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[116 130]
[117 129]
[118 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
