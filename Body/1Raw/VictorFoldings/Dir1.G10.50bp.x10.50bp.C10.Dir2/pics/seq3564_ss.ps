%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUAUGAAGGGGGGGGGGCCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCUAxxxxxxxxxxUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCAUACACCCCCCCCCCCCUCCUAUGAA\
) } def
/len { sequence length } bind def

/coor [
[48.97078323 293.58679199]
[37.86124420 290.31182861]
[26.95968246 286.39993286]
[16.30258751 281.86413574]
[5.92562723 276.71963501]
[-4.13646698 270.98367310]
[-13.85001564 264.67541504]
[-23.18250847 257.81600952]
[-32.10271072 250.42837524]
[-40.58076477 242.53726196]
[-48.58829498 234.16906738]
[-60.09009933 243.79760742]
[-71.59190369 253.42613220]
[-83.09370422 263.05465698]
[-94.59551239 272.68316650]
[-106.09731293 282.31170654]
[-117.59911346 291.94021606]
[-129.10092163 301.56875610]
[-140.60272217 311.19729614]
[-148.86680603 326.00070190]
[-165.37942505 322.15759277]
[-166.25764465 305.22637939]
[-150.23124695 299.69546509]
[-138.72944641 290.06695557]
[-127.22764587 280.43841553]
[-115.72583771 270.80990601]
[-104.22403717 261.18136597]
[-92.72222900 251.55285645]
[-81.22042847 241.92431641]
[-69.71862793 232.29579163]
[-58.21682358 222.66726685]
[-70.17192841 205.45774841]
[-80.26272583 187.09289551]
[-88.37866974 167.77389526]
[-94.43083191 147.71238708]
[-98.35292816 127.12818909]
[-100.10197449 106.24678802]
[-99.65881348 85.29694366]
[-97.02830505 64.50817871]
[-92.23926544 44.10824585]
[-85.34415436 24.32063103]
[-76.41851807 5.36211634]
[-65.56013489 -12.55959797]
[-77.64012909 -21.45194817]
[-89.72011566 -30.34429741]
[-101.89195251 -39.11050415]
[-114.15431976 -47.74962234]
[-126.41668701 -56.38873672]
[-141.05888367 -51.25202179]
[-155.91426086 -55.73503876]
[-165.27061462 -68.11397552]
[-165.53025818 -83.62887573]
[-156.59333801 -96.31394958]
[-141.89628601 -101.29151917]
[-127.09041595 -96.64762115]
[-117.86888885 -84.16790771]
[-117.77757263 -68.65110779]
[-105.51520538 -60.01198959]
[-93.25283813 -51.37287140]
[-85.92599487 -50.08325958]
[-80.82776642 -42.42428589]
[-68.74777222 -33.53193665]
[-56.66778564 -24.63958549]
[-45.84675598 -37.14425278]
[-34.03062057 -48.71319580]
[-21.30000877 -59.26747894]
[-7.74177504 -68.73509216]
[6.55157232 -77.05144501]
[21.48250961 -84.15978241]
[36.94916916 -90.01161957]
[52.84601593 -94.56701660]
[69.06459045 -97.79489899]
[85.49423981 -99.67324829]
[102.02285004 -100.18923950]
[118.53766632 -99.33934784]
[134.92601013 -97.12938690]
[151.07603455 -93.57443237]
[166.87759399 -88.69873047]
[182.22283936 -82.53555298]
[197.00708008 -75.12694550]
[211.12947083 -66.52346802]
[224.49360657 -56.78380585]
[237.00834656 -45.97442627]
[248.58830261 -34.16907501]
[260.09008789 -43.79759979]
[271.59188843 -53.42612457]
[283.09371948 -63.05465317]
[287.70428467 -71.01671600]
[294.93640137 -72.76083374]
[306.63604736 -82.14799500]
[302.72006226 -96.86482239]
[305.13491821 -111.90105438]
[313.46221924 -124.65158081]
[326.25921631 -132.90728760]
[341.30874634 -135.23782349]
[356.00338745 -131.23942566]
[367.79721069 -121.60481262]
[374.64688110 -108.00325775]
[375.36560059 -92.79131317]
[369.82888794 -78.60453796]
[358.99600220 -67.90087128]
[344.74380493 -62.53479004]
[329.54156494 -63.43600464]
[316.02319336 -70.44837189]
[304.32357788 -61.06120682]
[292.72222900 -51.55284882]
[281.22042847 -41.92432404]
[269.71862793 -32.29579544]
[258.21682739 -22.66727066]
[265.04577637 -13.31245995]
[271.32232666 -3.57839346]
[277.02545166 6.50234985]
[282.13607788 16.89603043]
[286.63708496 27.56785774]
[290.51345825 38.48211670]
[293.75213623 49.60227585]
[296.34234619 60.89111710]
[298.27539062 72.31085205]
[299.54483032 83.82326508]
[300.14636230 95.38982391]
[300.07803345 106.97180939]
[299.34002686 118.53046417]
[297.93481445 130.02709961]
[295.86715698 141.42321777]
[293.14389038 152.68070984]
[289.77420044 163.76187134]
[285.76931763 174.62962341]
[281.14266968 185.24760437]
[275.90975952 195.58024597]
[270.08804321 205.59298706]
[263.69708252 215.25230408]
[256.75817871 224.52586365]
[249.29464722 233.38264465]
[241.33140564 241.79299927]
[232.89514160 249.72875977]
[224.01406860 257.16339111]
[214.71792603 264.07199097]
[205.03781128 270.43145752]
[195.00614929 276.22045898]
[184.65649414 281.41967773]
[174.02349854 286.01168823]
[163.14274597 289.98107910]
[152.05065918 293.31463623]
[140.78434753 296.00115967]
[129.38153076 298.03167725]
[117.88038635 299.39938354]
[106.31938934 300.09970093]
[94.73723602 300.13027954]
[83.17270660 299.49102783]
[71.66448975 298.18405151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[43 63]
[44 62]
[45 61]
[46 59]
[47 58]
[48 57]
[84 109]
[85 108]
[86 107]
[87 106]
[89 105]
[90 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
