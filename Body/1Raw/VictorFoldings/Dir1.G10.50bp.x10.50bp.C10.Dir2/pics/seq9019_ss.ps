%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUUACCAGGGGGGGGGGCUCCAGCCUAGCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGxxxxxxxxxxGUCCUUGUAGUAUAAACUAAUACACCAGUCUUGUAAACCGGAGAUGAAAACCCCCCCCCCCCUUUUUCCA\
) } def
/len { sequence length } bind def

/coor [
[34.44907379 227.85552979]
[26.93112373 223.71298218]
[19.67396355 219.12887573]
[12.70349407 214.11959839]
[6.04459620 208.70300293]
[-0.27896634 202.89845276]
[-6.24462318 196.72663879]
[-11.83108234 190.20959473]
[-17.01840591 183.37059021]
[-21.78807831 176.23402405]
[-26.12307739 168.82536316]
[-39.64726639 175.31353760]
[-53.17145538 181.80169678]
[-66.69564819 188.28985596]
[-80.21983337 194.77803040]
[-93.74402618 201.26618958]
[-107.13031006 208.03430176]
[-120.37289429 215.07943726]
[-133.61547852 222.12457275]
[-146.85806274 229.16970825]
[-160.10064697 236.21484375]
[-173.34324646 243.25997925]
[-176.41374207 258.59313965]
[-188.65408325 268.32495117]
[-204.28475952 267.86032104]
[-215.92544556 257.41864014]
[-218.07975769 241.93017578]
[-209.73049927 228.70806885]
[-194.81993103 223.99542236]
[-180.38838196 230.01739502]
[-167.14578247 222.97225952]
[-153.90319824 215.92712402]
[-140.66061401 208.88198853]
[-127.41802979 201.83685303]
[-114.17544556 194.79171753]
[-111.93525696 190.50720215]
[-106.94725037 187.61738586]
[-100.23219299 187.74200439]
[-86.70800018 181.25384521]
[-73.18381500 174.76567078]
[-59.65962219 168.27751160]
[-46.13543320 161.78933716]
[-32.61124039 155.30117798]
[-40.68775940 129.17047119]
[-43.66638565 101.98274994]
[-41.43918991 74.72319031]
[-34.08687592 48.37954330]
[-21.87585449 23.90638924]
[-5.24860382 2.19052649]
[-15.68841648 -8.58028221]
[-23.96481705 -12.59936714]
[-26.23047829 -19.68544006]
[-36.44395828 -30.67110443]
[-46.65743637 -41.65676880]
[-56.87091827 -52.64243317]
[-72.69671631 -56.94081116]
[-76.62494659 -72.86252594]
[-64.61457825 -84.02868652]
[-49.02084732 -78.95249939]
[-45.88525391 -62.85591507]
[-35.67177200 -51.87025070]
[-25.45829201 -40.88458252]
[-15.24481297 -29.89892006]
[-4.91760778 -19.02009392]
[5.52220440 -8.24928570]
[12.35314655 -13.85073948]
[19.51540947 -19.02181625]
[26.98192024 -23.74296761]
[34.72445297 -27.99634743]
[42.71373749 -31.76587677]
[50.91957855 -35.03730392]
[59.31095123 -37.79826736]
[67.85613251 -40.03833008]
[76.52282715 -41.74901962]
[85.27827454 -42.92387009]
[94.08936310 -43.55844116]
[102.92279816 -43.65033722]
[111.74519348 -43.19920349]
[120.52317810 -42.20675278]
[129.22358704 -40.67673492]
[137.81352234 -38.61493301]
[146.26051331 -36.02913666]
[154.53263855 -32.92912674]
[162.59861755 -29.32662201]
[170.42796326 -25.23523521]
[177.99107361 -20.67043686]
[185.25936890 -15.64948273]
[192.20535278 -10.19135094]
[202.41883850 -21.17701530]
[212.63232422 -32.16268158]
[222.84579468 -43.14834595]
[225.98139954 -59.24493027]
[241.57511902 -64.32112122]
[253.58549500 -53.15496063]
[249.65725708 -37.23324203]
[233.83146667 -32.93486404]
[223.61798096 -21.94919968]
[213.40449524 -10.96353531]
[203.19102478 0.02212906]
[224.67895508 28.59186554]
[238.44863892 61.58211136]
[253.09214783 58.33128357]
[267.73565674 55.08045959]
[282.37915039 51.82963181]
[289.43478394 37.87427139]
[303.83029175 31.76667023]
[318.76861572 36.39065552]
[327.19625854 49.56291962]
[325.13400269 65.06391907]
[313.55557251 75.57456207]
[297.92791748 76.13204193]
[285.62997437 66.47313690]
[270.98648071 69.72396088]
[256.34298706 72.97478485]
[241.69947815 76.22560883]
[242.86630249 84.72966003]
[243.52322388 93.28821564]
[243.66789246 101.87071991]
[243.29978943 110.44654846]
[242.42025757 118.98509216]
[241.03239441 127.45587921]
[239.14117432 135.82867432]
[236.75335693 144.07359314]
[233.87744141 152.16119385]
[230.52371216 160.06265259]
[226.70413208 167.74972534]
[222.43232727 175.19499207]
[217.72355652 182.37188721]
[212.59460449 189.25477600]
[207.06379700 195.81912231]
[201.15087891 202.04147339]
[194.87693787 207.89962769]
[188.26435852 213.37268066]
[181.33677673 218.44108582]
[174.11888123 223.08677673]
[166.63644409 227.29315186]
[158.91618347 231.04519653]
[150.98564148 234.32954407]
[142.87313843 237.13444519]
[134.60760498 239.44990540]
[126.21855927 241.26765442]
[117.73593140 242.58120728]
[109.19000244 243.38586426]
[100.61127472 243.67877197]
[92.03036499 243.45886230]
[83.47790527 242.72694397]
[74.98441315 241.48562622]
[66.58020020 239.73931885]
[58.29526520 237.49427795]
[50.15917969 234.75849915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 43]
[12 42]
[13 41]
[14 40]
[15 39]
[16 38]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
[88 99]
[89 98]
[90 97]
[91 96]
[101 115]
[102 114]
[103 113]
[104 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
