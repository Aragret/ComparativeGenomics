%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCACGUCAGGGGGGGGGGUUAUUGGCUCAACUUUCCUCACUAUCUGCUUCAUCCGCCAACUAAUAUUUxxxxxxxxxxCAGUCUGCGCCCUUACACAAAAUGACAUCAAAAAAAUCGUAGCCUUCUCCCCCCCCCCCCACUUCAAGUCA\
) } def
/len { sequence length } bind def

/coor [
[82.69417572 388.32431030]
[69.77501678 380.56594849]
[58.99371719 370.03692627]
[50.93170166 357.30505371]
[46.02374268 343.05694580]
[44.53451920 328.06100464]
[46.54434204 313.12588501]
[51.94482803 299.05706787]
[60.44472885 286.61325073]
[71.58566284 276.46554565]
[84.76681519 269.16116333]
[99.27732849 265.09402466]
[98.66150665 250.10667419]
[98.04567719 235.11930847]
[97.42985535 220.13195801]
[96.81402588 205.14460754]
[96.19820404 190.15725708]
[95.58237457 175.16990662]
[94.96655273 160.18254089]
[94.35072327 145.19519043]
[93.73490143 130.20783997]
[81.33779144 124.56597137]
[72.57833862 114.13568115]
[69.16394043 100.95005035]
[71.76013947 87.57923126]
[79.86088562 76.62947845]
[91.88716125 70.23513794]
[91.57918549 55.23830032]
[91.27120972 40.24146271]
[90.96322632 25.24462318]
[75.97404480 24.53938484]
[61.06667328 22.82383728]
[46.30912399 20.10580444]
[31.76873779 16.39768982]
[17.51185799 11.71641254]
[3.60353827 6.08333349]
[-9.89276218 -0.47584492]
[-22.91546059 -7.93119478]
[-35.40513992 -16.24869919]
[-47.30480957 -25.39040565]
[-58.56017303 -35.31460571]
[-69.11988068 -45.97601318]
[-78.93573761 -57.32598114]
[-87.96296692 -69.31272888]
[-96.16037750 -81.88155365]
[-103.49056244 -94.97511292]
[-109.92008209 -108.53366089]
[-115.41959381 -122.49533844]
[-119.96400452 -136.79643250]
[-123.53258514 -151.37168884]
[-126.10903931 -166.15461731]
[-127.68162537 -181.07774353]
[-128.24316406 -196.07299805]
[-127.79108429 -211.07194519]
[-126.32746124 -226.00616455]
[-123.85897064 -240.80749512]
[-120.39687347 -255.40841675]
[-115.95696259 -269.74230957]
[-110.55950165 -283.74374390]
[-104.22911835 -297.34884644]
[-96.99468994 -310.49557495]
[-88.88923645 -323.12390137]
[-79.94973755 -335.17620850]
[-70.21697998 -346.59750366]
[-59.73537064 -357.33572388]
[-48.55273819 -367.34179688]
[-36.72011185 -376.57009888]
[-24.29147339 -384.97854614]
[-11.32353497 -392.52874756]
[2.12453175 -399.18627930]
[15.99136639 -404.92071533]
[30.21369743 -409.70593262]
[44.72663116 -413.52005005]
[59.46395111 -416.34573364]
[74.35840607 -418.17004395]
[89.34204102 -418.98468018]
[104.34648895 -418.78588867]
[119.30328369 -417.57461548]
[134.14418030 -415.35635376]
[148.80146790 -412.14126587]
[163.20826721 -407.94396973]
[177.29884338 -402.78369141]
[191.00889587 -396.68389893]
[204.27587891 -389.67245483]
[217.03924561 -381.78137207]
[229.24076843 -373.04660034]
[240.82476807 -363.50805664]
[251.73838806 -353.20925903]
[261.93185425 -342.19714355]
[271.35861206 -330.52200317]
[279.97570801 -318.23709106]
[287.74377441 -305.39846802]
[294.62738037 -292.06472778]
[300.59509277 -278.29669189]
[305.61975098 -264.15716553]
[309.67837524 -249.71069336]
[312.75244141 -235.02319336]
[314.82797241 -220.16165161]
[315.89544678 -205.19390869]
[315.95001221 -190.18824768]
[314.99142456 -175.21311951]
[313.02404785 -160.33688354]
[310.05685425 -145.62741089]
[306.10342407 -131.15180969]
[301.18173218 -116.97612000]
[295.31430054 -103.16503906]
[288.52783203 -89.78157806]
[280.85336304 -76.88680267]
[272.32586670 -64.53955078]
[262.98425293 -52.79615784]
[252.87113953 -41.71021271]
[242.03271484 -31.33229065]
[230.51838684 -21.70975113]
[218.38070679 -12.88649464]
[205.67506409 -4.90278292]
[192.45944214 2.20495653]
[178.79411316 8.40429306]
[164.74143982 13.66693878]
[150.36555481 17.96888351]
[135.73204041 21.29049492]
[120.90766144 23.61662102]
[105.96006775 24.93664551]
[106.26804352 39.93348312]
[106.57601929 54.93032074]
[106.88400269 69.92716217]
[121.05201721 77.44832611]
[129.52882385 91.06612396]
[130.02278137 107.09910583]
[122.40038300 121.21291351]
[108.72225189 129.59201050]
[109.33808136 144.57937622]
[109.95390320 159.56672668]
[110.56973267 174.55407715]
[111.18555450 189.54142761]
[111.80138397 204.52877808]
[112.41720581 219.51612854]
[113.03303528 234.50349426]
[113.64885712 249.49084473]
[114.26468658 264.47821045]
[129.05995178 267.34115601]
[142.79592896 273.53952026]
[154.73184204 282.73904419]
[164.22398376 294.44357300]
[170.76048279 308.02188110]
[173.98881531 322.74176025]
[173.73489380 337.80935669]
[170.01240540 352.41207886]
[163.02210999 365.76245117]
[153.14096069 377.14047241]
[140.90185547 385.93258667]
[126.96482849 391.66461182]
[112.08148956 394.02743530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[27 125]
[28 124]
[29 123]
[30 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
