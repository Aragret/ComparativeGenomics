%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAUCUACAGGGGGGGGGGACGUUAUCGUCACAGCCCAUGCAUUUGUAAUAAUCUUCUUCAUAGUAAUAxxxxxxxxxxGGCUUUCGCUCUAAGAUUAAAAAUGCCCUAGCCCACUUCUUACCACAAGGCCCCCCCCCCCACACCUACA\
) } def
/len { sequence length } bind def

/coor [
[73.77893829 374.66754150]
[60.55873871 367.39508057]
[49.67193222 356.94805908]
[41.86080170 344.03881836]
[37.65792084 329.54751587]
[37.34984970 314.46215820]
[40.95759201 299.81134033]
[48.23516464 286.59396362]
[58.68637085 275.71118164]
[71.59863281 267.90502930]
[86.09156799 263.70776367]
[85.77951050 248.71099854]
[85.46746063 233.71424866]
[85.15540314 218.71749878]
[84.84334564 203.72073364]
[84.53128815 188.72398376]
[84.21923065 173.72723389]
[83.90717316 158.73048401]
[83.59512329 143.73371887]
[70.57881165 136.27880859]
[57.48565674 143.59791565]
[44.39250183 150.91702271]
[31.29934692 158.23612976]
[23.37295151 172.59246826]
[6.97386026 172.63558960]
[-1.02794611 158.32115173]
[7.59910440 144.37461853]
[23.98024178 145.14297485]
[37.07339478 137.82386780]
[50.16654968 130.50476074]
[63.25970459 123.18566132]
[58.03041840 104.18942261]
[61.76826859 85.43593597]
[73.16913605 70.81319427]
[89.39720154 63.11449814]
[88.15032196 48.16641235]
[74.35839081 41.55356216]
[65.78482819 29.00801468]
[64.64949799 13.95552635]
[71.15744781 0.44617772]
[83.47067261 -7.93535948]
[82.22379303 -22.88344574]
[80.97692108 -37.83153534]
[79.73004913 -52.77962112]
[78.48316956 -67.72770691]
[77.23629761 -82.67579651]
[68.37863922 -95.78504181]
[75.03120422 -109.11142731]
[71.97333527 -113.50108337]
[71.04380798 -118.15815735]
[71.97908783 -122.21117401]
[74.20269012 -125.02596283]
[73.89064026 -140.02272034]
[73.57858276 -155.01947021]
[73.26652527 -170.01622009]
[72.95446777 -185.01298523]
[72.64241028 -200.00973511]
[57.77171326 -202.23916626]
[43.49174881 -206.94985962]
[30.21337700 -214.00625610]
[18.31864548 -223.20535278]
[8.14978695 -234.28247070]
[-0.00061852 -246.91886902]
[-5.89806747 -260.75100708]
[-9.37287903 -275.38092041]
[-10.32507515 -290.38760376]
[-8.72725964 -305.33938599]
[-4.62540579 -319.80596924]
[1.86246896 -333.37121582]
[10.54969501 -345.64477539]
[21.18632507 -356.27349854]
[33.46632004 -364.95162964]
[47.03635788 -371.42944336]
[61.50600815 -375.52056885]
[76.45894623 -377.10726929]
[91.46494293 -376.14395142]
[106.09225464 -372.65829468]
[119.92001343 -366.75057983]
[132.55036926 -358.59078979]
[143.61993408 -348.41372681]
[152.81021118 -336.51217651]
[159.85675049 -323.22857666]
[164.55685425 -308.94509888]
[166.77525330 -294.07275391]
[166.44813538 -279.03942871]
[163.58491516 -264.27764893]
[158.26797485 -250.21217346]
[150.65026855 -237.24765015]
[140.95100403 -225.75712585]
[129.44923401 -216.07118225]
[116.47589874 -208.46852112]
[102.40425110 -203.16789246]
[87.63916779 -200.32179260]
[87.95122528 -185.32502747]
[88.26327515 -170.32827759]
[88.57533264 -155.33152771]
[88.88739014 -140.33477783]
[89.19944763 -125.33802032]
[89.97929382 -110.35830688]
[98.74777222 -98.31824493]
[92.18438721 -83.92266846]
[93.43125916 -68.97457886]
[94.67813110 -54.02649689]
[95.92501068 -39.07840729]
[97.17188263 -24.13032150]
[98.41875458 -9.18223381]
[111.95042419 -2.95651340]
[120.60659790 9.28794003]
[121.98077393 24.32050514]
[115.60416412 38.11310196]
[103.09841156 46.91953659]
[104.34528351 61.86762619]
[113.42862701 64.04681396]
[121.71648407 68.35581970]
[128.71788025 74.53938293]
[134.01806641 82.23119354]
[137.30308533 90.97560883]
[138.37831116 100.25460815]
[137.18006897 109.51853180]
[150.70425415 116.00669098]
[164.22843933 122.49485779]
[179.77932739 118.55156708]
[192.47050476 128.36550903]
[192.56639099 144.40827942]
[179.99342346 154.37322998]
[164.39651489 150.61610413]
[157.74028015 136.01904297]
[144.21609497 129.53088379]
[130.69189453 123.04271698]
[117.69167328 136.88877869]
[98.59187317 143.42166138]
[98.90393066 158.41842651]
[99.21598816 173.41517639]
[99.52804565 188.41192627]
[99.84009552 203.40867615]
[100.15215302 218.40544128]
[100.46421051 233.40219116]
[100.77626801 248.39894104]
[101.08832550 263.39569092]
[115.74331665 266.98648071]
[128.96913147 274.24871826]
[139.86399841 284.68731689]
[147.68508911 297.59051514]
[151.89915466 312.07858276]
[152.21888733 327.16369629]
[148.62245178 341.81729126]
[141.35508728 355.04031372]
[130.91229248 365.93115234]
[118.00605774 373.74725342]
[103.51637268 377.95571899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 31]
[21 30]
[22 29]
[23 28]
[35 112]
[36 111]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[48 99]
[52 98]
[53 97]
[54 96]
[55 95]
[56 94]
[57 93]
[119 129]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
