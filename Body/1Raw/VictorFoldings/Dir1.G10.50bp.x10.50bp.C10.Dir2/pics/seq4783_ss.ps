%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAAAAAAUGGGGGGGGGGAAACCCUCGUUCCACAGAAGCUGCCAUCAAGUAUUUCCUCACGCAAGCAAxxxxxxxxxxGCGCUAUCACCACUCUGUUCGCAGCAGUCUGCGCCCUUACACAAAAUGACCCCCCCCCCCAUCAAAAAAAU\
) } def
/len { sequence length } bind def

/coor [
[83.79882812 391.10403442]
[70.30994415 384.37249756]
[58.82444763 374.60794067]
[50.01007843 362.37802124]
[44.37929535 348.39382935]
[42.25946808 333.46835327]
[43.77383423 318.46936035]
[48.83435822 304.26885986]
[57.14682388 291.69244385]
[68.22795105 281.47128296]
[81.43350983 274.19964600]
[95.99573517 270.30026245]
[95.68775940 255.30343628]
[95.37977600 240.30659485]
[95.07180023 225.30975342]
[94.76382446 210.31291199]
[94.45584869 195.31608582]
[94.14786530 180.31924438]
[93.83988953 165.32240295]
[93.53191376 150.32556152]
[93.22393799 135.32873535]
[81.06282043 130.58459473]
[71.39537048 121.81305695]
[57.83347321 128.22203064]
[44.27157974 134.63101196]
[35.38439941 148.41323853]
[19.02055931 147.33769226]
[12.01377583 132.51078796]
[21.57202721 119.18518066]
[37.86260223 121.06910706]
[51.42449951 114.66013336]
[64.98639679 108.25115967]
[64.54134369 93.94047546]
[69.71346283 80.58970642]
[79.68340302 70.31381226]
[73.97873688 56.44092941]
[68.27407837 42.56804657]
[62.56941223 28.69516754]
[56.86474991 14.82228661]
[50.04117584 1.46418679]
[42.14469147 -11.28907013]
[34.24821091 -24.04232788]
[27.02427292 -29.73535347]
[26.32363319 -37.13949203]
[18.69066238 -50.05219269]
[4.66611242 -44.63353348]
[-10.05907345 -41.59729385]
[-25.08318138 -41.02630234]
[-39.99634552 -42.93613815]
[-54.39171600 -47.27469635]
[-67.87658691 -53.92361832]
[-80.08306885 -62.70152283]
[-90.67817688 -73.36893463]
[-99.37284851 -85.63484192]
[-105.92990875 -99.16461945]
[-110.17045593 -113.58916473]
[-111.97881317 -128.51496887]
[-111.30564880 -143.53485107]
[-108.16932678 -158.23904419]
[-102.65541077 -172.22640991]
[-94.91431427 -185.11537170]
[-85.15723419 -196.55430603]
[-73.65033722 -206.23115540]
[-60.70755005 -213.88191223]
[-46.68195724 -219.29786682]
[-31.95618629 -222.33126831]
[-16.93196869 -222.89936829]
[-2.01917434 -220.98664856]
[12.37536240 -216.64532471]
[25.85894966 -209.99380493]
[38.06374359 -201.21354675]
[48.65679169 -190.54409790]
[57.34910583 -178.27651978]
[63.90355301 -164.74546814]
[68.14132690 -150.32011414]
[69.94680786 -135.39395142]
[69.27075195 -120.37420654]
[66.13159943 -105.67061615]
[60.61498260 -91.68431091]
[52.87140656 -78.79683685]
[43.11211777 -67.35978699]
[31.60336113 -57.68516159]
[39.23633194 -44.77246475]
[47.00146484 -31.93881035]
[54.89794922 -19.18555260]
[62.79442978 -6.43229580]
[65.74974823 -21.13828278]
[76.67670441 -31.41455460]
[91.53623199 -33.46257401]
[104.83564758 -26.52530861]
[111.65892792 -13.16705894]
[109.48390961 1.67441392]
[99.11457825 12.51308823]
[84.38385010 15.34254360]
[70.73763275 9.11762333]
[76.44229126 22.99050331]
[82.14695740 36.86338425]
[87.85162354 50.73626328]
[93.55628204 64.60914612]
[115.49552155 61.93001556]
[137.69230652 73.22761536]
[152.03236389 68.82731628]
[166.37243652 64.42701721]
[180.71249390 60.02671814]
[195.05255127 55.62641525]
[205.82223511 43.25928879]
[221.86328125 46.66767883]
[226.67402649 62.34532928]
[215.30558777 74.16442108]
[199.45285034 69.96647644]
[185.11279297 74.36677551]
[170.77273560 78.76708221]
[156.43266296 83.16738129]
[142.09260559 87.56768036]
[141.63090515 95.05345154]
[156.60244751 95.97686768]
[171.57398987 96.90052795]
[170.65007019 111.87204742]
[155.67903137 110.94841766]
[140.70748901 110.02500153]
[140.24577332 117.51078033]
[153.93640137 123.63995361]
[169.37786865 119.28784180]
[182.32350159 128.76361084]
[182.84251404 144.79826355]
[170.53677368 155.09138489]
[154.84619141 151.74697876]
[147.80723572 137.33058167]
[134.11660767 131.20140076]
[120.78882599 135.45785522]
[108.22077179 135.02075195]
[108.52874756 150.01759338]
[108.83673096 165.01441956]
[109.14470673 180.01126099]
[109.45268250 195.00810242]
[109.76065826 210.00494385]
[110.06864166 225.00178528]
[110.37661743 239.99861145]
[110.68459320 254.99545288]
[110.99256897 269.99227905]
[125.70260620 273.29052734]
[139.19557190 280.01388550]
[150.68698120 289.77148438]
[159.50877380 301.99603271]
[165.14802551 315.97680664]
[167.27690125 330.90100098]
[165.77162170 345.90090942]
[160.71971130 360.10449219]
[152.41487122 372.68594360]
[141.33993530 382.91381836]
[128.13879395 390.19345093]
[113.57894135 394.10165405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[23 32]
[24 31]
[25 30]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[40 86]
[41 85]
[42 84]
[44 83]
[45 82]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
