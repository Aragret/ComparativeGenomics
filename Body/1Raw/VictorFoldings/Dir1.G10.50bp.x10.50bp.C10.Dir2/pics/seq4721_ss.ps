%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUUUUGGGGGGGGGGUUACCUGAGUAGGCCUAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAxxxxxxxxxxGUCUUUAGAUUUACAGUCCAAUGCUUCACUCAGCCAUUUUACCUCACCCCCCCCCCCCCCCACUGAUGUU\
) } def
/len { sequence length } bind def

/coor [
[132.20698547 563.48046875]
[120.99155426 553.41516113]
[112.40015411 541.03436279]
[106.89611053 527.00573730]
[104.77625275 512.08581543]
[106.15489960 497.07931519]
[110.95769501 482.79541016]
[118.92564392 470.00445557]
[129.62902832 459.39624023]
[142.49064636 451.54284668]
[156.81687927 446.86782837]
[155.57000732 431.91973877]
[154.32313538 416.97164917]
[153.07626343 402.02355957]
[151.82939148 387.07550049]
[150.58250427 372.12741089]
[149.33563232 357.17932129]
[148.08876038 342.23123169]
[146.84188843 327.28314209]
[145.59501648 312.33505249]
[144.34814453 297.38696289]
[141.70927429 282.62091064]
[128.65998840 275.53207397]
[124.38965607 260.93005371]
[131.91357422 247.29081726]
[127.90583038 232.83613586]
[123.89808655 218.38143921]
[119.89035034 203.92675781]
[115.88260651 189.47206116]
[111.87487030 175.01737976]
[98.71467590 163.44978333]
[103.38825989 145.66952515]
[99.08067322 131.30134583]
[94.77308655 116.93315887]
[75.64112091 93.46424866]
[67.38883209 80.93828583]
[58.87774277 68.58671570]
[50.11153412 56.41487503]
[41.34532928 44.24303818]
[30.25401306 34.14439011]
[17.31595612 26.55448151]
[4.37790060 18.96457291]
[-8.56015587 11.37466431]
[-21.49821091 3.78475642]
[-34.43626785 -3.80515194]
[-47.75057602 3.85152626]
[-63.10941315 3.80920148]
[-76.38131714 -3.92074108]
[-83.99622345 -17.25898552]
[-83.90576172 -32.61761093]
[-76.13425446 -45.86522675]
[-62.77220535 -53.43828583]
[-47.41394043 -53.29967880]
[-34.19075012 -45.48668671]
[-26.65961075 -32.10096359]
[-26.84635925 -16.74320793]
[-13.90830326 -9.15329933]
[-0.97024727 -1.56339121]
[11.96780872 6.02651691]
[24.90586472 13.61642551]
[37.84392166 21.20633316]
[30.73975372 7.99532270]
[27.56721497 -6.66533899]
[28.57389259 -21.63152122]
[33.68122482 -35.73524857]
[42.49063110 -47.87585831]
[54.31461716 -57.10588074]
[68.23043060 -62.70500183]
[83.15206909 -64.23625946]
[97.91503143 -61.58015823]
[111.36721039 -54.94397354]
[122.45877838 -44.84560394]
[130.32414246 -32.07313156]
[134.34948730 -17.62333679]
[134.22067261 -2.62389040]
[129.94773865 11.75463772]
[121.86416626 24.39013481]
[110.60079193 34.29651642]
[97.03662109 40.70067978]
[82.23021698 43.10284042]
[67.33708191 41.31552505]
[53.51716614 35.47683334]
[62.28337097 47.64867020]
[71.04957581 59.82050705]
[75.59700012 61.46259308]
[79.13293457 66.01544952]
[79.91479492 72.68599701]
[88.16708374 85.21195984]
[103.05036163 87.07957458]
[114.14167786 76.98091888]
[125.23299408 66.88227081]
[123.39163971 51.47483826]
[130.98759460 37.94409180]
[145.10005188 31.49287796]
[160.30249023 34.60182571]
[170.74925232 46.07547760]
[172.42335510 61.50197983]
[164.68107605 74.94953156]
[150.49946594 81.24726868]
[135.33164978 77.97358704]
[124.24032593 88.07223511]
[113.14900970 98.17088318]
[109.14127350 112.62557220]
[113.44886017 126.99375916]
[117.75643921 141.36193848]
[128.75215149 148.18457031]
[132.02084351 160.28971863]
[126.32955933 171.00964355]
[130.33729553 185.46432495]
[134.34503174 199.91900635]
[138.35278320 214.37370300]
[142.36051941 228.82838440]
[146.36825562 243.28308105]
[159.84132385 251.10063171]
[163.69982910 265.81683350]
[156.16395569 278.61315918]
[162.53703308 265.03436279]
[175.16018677 256.93151855]
[190.15953064 256.79129028]
[202.93196106 264.65673828]
[209.55778503 278.11401367]
[208.00361633 293.03329468]
[198.74641418 304.83599854]
[184.62709045 309.90005493]
[169.97868347 306.67138672]
[159.29621887 296.14007568]
[160.54310608 311.08816528]
[161.78997803 326.03625488]
[163.03684998 340.98434448]
[164.28372192 355.93243408]
[165.53059387 370.88052368]
[166.77746582 385.82861328]
[168.02435303 400.77670288]
[169.27122498 415.72479248]
[170.51809692 430.67288208]
[171.76496887 445.62097168]
[186.66775513 447.85787964]
[200.65272522 453.47189331]
[212.96571350 462.16021729]
[222.94268799 473.45431519]
[230.04559326 486.74511719]
[233.89138794 501.31585693]
[234.27267456 516.38079834]
[231.16886902 531.12738037]
[224.74739075 544.76049805]
[215.35452271 556.54486084]
[203.49679565 565.84490967]
[189.81372070 572.15917969]
[175.04316711 575.14709473]
[159.98171997 574.64758301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 126]
[22 116]
[25 113]
[26 112]
[27 111]
[28 110]
[29 109]
[30 108]
[32 105]
[33 104]
[34 103]
[35 88]
[36 87]
[37 84]
[38 83]
[39 82]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[89 102]
[90 101]
[91 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
