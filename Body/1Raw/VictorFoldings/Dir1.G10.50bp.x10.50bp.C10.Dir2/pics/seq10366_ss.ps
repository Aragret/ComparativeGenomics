%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACUAAUAGGGGGGGGGGGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCUUACCCCCCACxxxxxxxxxxCCCCAUCAUACUCUUUCACCCACAGCACCAAUCCUACCUCCAUCGCUAACCCCCCCCCCCCCCACUAAAA\
) } def
/len { sequence length } bind def

/coor [
[85.05905151 365.13757324]
[71.21311188 359.12155151]
[59.50444794 349.59213257]
[50.80192184 337.25646973]
[45.75131989 323.02993774]
[44.72742844 307.96826172]
[47.80622864 293.18911743]
[54.75925064 279.78918457]
[65.07053375 268.76284790]
[77.97491455 260.92834473]
[92.51480103 256.86703491]
[92.51480103 241.86701965]
[92.51480103 226.86701965]
[92.51480103 211.86701965]
[92.51480103 196.86701965]
[92.51480103 181.86701965]
[92.51480103 166.86701965]
[92.51480103 151.86701965]
[92.51480103 136.86701965]
[92.51480103 121.86702728]
[92.51480103 106.86702728]
[89.34870911 99.39307404]
[92.67408752 91.55577850]
[92.98614502 76.55902863]
[82.32555389 65.20166016]
[82.85565948 49.99726868]
[93.74887085 39.90402222]
[94.06092834 24.90726662]
[94.37297821 9.91051292]
[94.68503571 -5.08624029]
[94.99709320 -20.08299446]
[80.05158997 -21.42928696]
[65.23457336 -23.80348587]
[50.61666870 -27.19427299]
[36.26752472 -31.58549309]
[22.25553131 -36.95621490]
[8.64745712 -43.28084946]
[-4.49184561 -50.52925491]
[-17.09976387 -58.66688919]
[-29.11621284 -67.65497589]
[-40.48392868 -77.45066833]
[-51.14873886 -88.00730133]
[-61.05981827 -99.27456665]
[-70.16993713 -111.19875336]
[-78.43568420 -123.72305298]
[-85.81766510 -136.78778076]
[-92.28070831 -150.33067322]
[-97.79399872 -164.28718567]
[-102.33127594 -178.59080505]
[-105.87091827 -193.17338562]
[-108.39604950 -207.96542358]
[-109.89463806 -222.89642334]
[-110.35955048 -237.89524841]
[-109.78855896 -252.89039612]
[-108.18439484 -267.81042480]
[-105.55469513 -282.58422852]
[-101.91199493 -297.14141846]
[-97.27365112 -311.41259766]
[-91.66177368 -325.32977295]
[-85.10310364 -338.82659912]
[-77.62889862 -351.83877563]
[-69.27476501 -364.30429077]
[-60.08052826 -376.16375732]
[-50.08999634 -387.36062622]
[-39.35078049 -397.84155273]
[-27.91406059 -407.55661011]
[-15.83433628 -416.45944214]
[-3.16917324 -424.50769043]
[10.02107239 -431.66299438]
[23.67354202 -437.89120483]
[37.72317505 -443.16268921]
[52.10301971 -447.45230103]
[66.74454498 -450.73959351]
[81.57798004 -453.00894165]
[96.53263855 -454.24948120]
[111.53724670 -454.45532227]
[126.52030182 -453.62548828]
[141.41041565 -451.76391602]
[156.13661194 -448.87951660]
[170.62870789 -444.98599243]
[184.81767273 -440.10189819]
[198.63584900 -434.25054932]
[212.01742554 -427.45980835]
[224.89860535 -419.76202393]
[237.21800232 -411.19387817]
[248.91693115 -401.79623413]
[259.93960571 -391.61383057]
[270.23355103 -380.69525146]
[279.74966431 -369.09246826]
[288.44259644 -356.86080933]
[296.27096558 -344.05856323]
[303.19741821 -330.74673462]
[309.18896484 -316.98876953]
[314.21704102 -302.85018921]
[318.25769043 -288.39840698]
[321.29168701 -273.70230103]
[323.30453491 -258.83190918]
[324.28668213 -243.85806274]
[324.23339844 -228.85212708]
[323.14495850 -213.88563538]
[321.02655029 -199.02989197]
[317.88827515 -184.35569763]
[313.74508667 -169.93298340]
[308.61672974 -155.83049011]
[302.52764893 -142.11540222]
[295.50683594 -128.85308838]
[287.58776855 -116.10675049]
[278.80819702 -103.93713379]
[269.20993042 -92.40222931]
[258.83871460 -81.55700684]
[247.74400330 -71.45314789]
[235.97863770 -62.13881302]
[223.59870911 -53.65837479]
[210.66319275 -46.05225754]
[197.23373413 -39.35670090]
[183.37434387 -33.60361481]
[169.15106201 -28.82041740]
[154.63168335 -25.02990341]
[139.88537598 -22.25013351]
[124.98242188 -20.49435616]
[109.99385071 -19.77093697]
[109.68179321 -4.77418423]
[109.36973572 10.22256947]
[109.05767822 25.21932220]
[108.74562073 40.21607590]
[119.20953369 50.75372696]
[119.10670471 65.96701050]
[107.98289490 76.87107849]
[107.67083740 91.86783600]
[107.51480103 106.86702728]
[107.51480103 121.86702728]
[107.51480103 136.86701965]
[107.51480103 151.86701965]
[107.51480103 166.86701965]
[107.51480103 181.86701965]
[107.51480103 196.86701965]
[107.51480103 211.86701965]
[107.51480103 226.86701965]
[107.51480103 241.86701965]
[107.51480103 256.86703491]
[122.05468750 260.92834473]
[134.95907593 268.76284790]
[145.27035522 279.78918457]
[152.22337341 293.18911743]
[155.30216980 307.96826172]
[154.27828979 323.02993774]
[149.22767639 337.25646973]
[140.52516174 349.59213257]
[128.81649780 359.12155151]
[114.97055817 365.13757324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[24 128]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
