%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUCCCUAGGGGGGGGGGCUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUxxxxxxxxxxGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCCCCCCCCCCCAUCCUCCAUA\
) } def
/len { sequence length } bind def

/coor [
[142.27478027 570.11730957]
[131.05934143 560.05200195]
[122.46794891 547.67120361]
[116.96390533 533.64257812]
[114.84403992 518.72265625]
[116.22268677 503.71615601]
[121.02548981 489.43225098]
[128.99343872 476.64129639]
[139.69682312 466.03308105]
[152.55844116 458.17968750]
[166.88467407 453.50466919]
[165.63780212 438.55657959]
[164.39093018 423.60848999]
[163.14404297 408.66043091]
[161.89717102 393.71234131]
[160.65029907 378.76425171]
[159.40342712 363.81616211]
[158.15655518 348.86807251]
[156.90968323 333.91998291]
[155.66279602 318.97189331]
[144.88600159 305.15667725]
[152.78778076 288.55722046]
[151.23019409 273.63830566]
[149.67262268 258.71939087]
[137.97810364 249.56657410]
[136.18597412 234.45886230]
[145.86558533 222.25463867]
[144.30799866 207.33572388]
[142.75042725 192.41682434]
[141.19284058 177.49790955]
[135.99742126 163.42639160]
[127.48633575 151.07481384]
[118.97525024 138.72323608]
[110.46415710 126.37166595]
[101.95306396 114.02009583]
[89.09466553 106.29601288]
[74.19276428 104.58332062]
[59.29085922 102.87062836]
[44.46890259 109.88786316]
[31.13655663 100.33901215]
[33.00899887 84.04711151]
[48.16002274 77.77187347]
[61.00355148 87.96872711]
[75.90544891 89.68141937]
[90.80735779 91.39411163]
[99.82488251 79.40727997]
[94.04861450 65.56405640]
[88.27233887 51.72084045]
[73.61676025 55.08565521]
[58.60332108 55.92509460]
[43.66399002 54.21500397]
[29.22859955 50.00459290]
[15.71248913 43.41499710]
[3.50454092 34.63581848]
[-7.04399729 23.91964531]
[-15.62962341 11.57480717]
[-22.00531197 -2.04351139]
[-25.98762131 -16.54348373]
[-27.46197128 -31.50791931]
[-26.38594437 -46.50625992]
[-22.79049683 -61.10696793]
[-16.77908134 -74.88996124]
[-8.52465343 -87.45867157]
[1.73528695 -98.45146942]
[13.70554256 -107.55207062]
[27.04170418 -114.49864197]
[41.36006546 -119.09130096]
[56.24865723 -121.19792175]
[71.27910614 -120.75788116]
[86.01895142 -117.78385162]
[100.04410553 -112.36139679]
[112.95103455 -104.64652252]
[124.36838531 -94.86121368]
[133.96763611 -83.28701019]
[141.47262573 -70.25692749]
[146.66740417 -56.14585495]
[149.40251160 -41.35980606]
[149.59925842 -26.32420540]
[147.25196838 -11.47165489]
[142.42819214 2.77050781]
[135.26672363 15.99250793]
[125.97359467 27.81392097]
[114.81620026 37.89462280]
[102.11555481 45.94456863]
[107.89183044 59.78778458]
[113.66809845 73.63100433]
[114.30464172 105.50900269]
[122.81572723 117.86058044]
[131.32681274 130.21215820]
[139.83790588 142.56372070]
[148.34899902 154.91529846]
[147.48742676 139.94006348]
[150.16763306 125.18144989]
[156.23962402 111.46537018]
[165.36361694 99.55937958]
[177.02903748 90.12973785]
[190.58306885 83.70413971]
[205.26721191 80.64216614]
[220.25975037 81.11515808]
[234.72169495 85.09665680]
[247.84373474 92.36384583]
[258.89154053 102.51006317]
[267.24691772 114.96750641]
[272.44226074 129.03906250]
[274.18682861 143.93725586]
[272.38299561 158.82839966]
[267.13171387 172.87918091]
[258.72686768 185.30328369]
[247.63877869 195.40547180]
[234.48793030 202.62040710]
[220.01026917 206.54434204]
[205.01596069 206.95768738]
[190.34410095 203.83731079]
[176.81575012 197.35784912]
[165.18794250 187.88188171]
[156.11175537 175.94032288]
[157.66934204 190.85923767]
[159.22691345 205.77815247]
[160.78450012 220.69706726]
[172.77619934 230.63873291]
[174.14329529 245.79081726]
[164.59153748 257.16180420]
[166.14910889 272.08071899]
[167.70669556 286.99963379]
[177.24012756 295.74990845]
[178.19825745 308.25195312]
[170.61088562 317.72503662]
[171.85775757 332.67309570]
[173.10464478 347.62118530]
[174.35151672 362.56927490]
[175.59838867 377.51736450]
[176.84526062 392.46545410]
[178.09213257 407.41354370]
[179.33900452 422.36163330]
[180.58589172 437.30972290]
[181.83276367 452.25781250]
[196.73553467 454.49472046]
[210.72052002 460.10873413]
[223.03350830 468.79705811]
[233.01048279 480.09115601]
[240.11338806 493.38195801]
[243.95918274 507.95269775]
[244.34045410 523.01763916]
[241.23666382 537.76422119]
[234.81518555 551.39733887]
[225.42230225 563.18170166]
[213.56459045 572.48175049]
[199.88150024 578.79602051]
[185.11096191 581.78393555]
[170.04951477 581.28442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[22 124]
[23 123]
[24 122]
[27 119]
[28 118]
[29 117]
[30 116]
[31 91]
[32 90]
[33 89]
[34 88]
[35 87]
[36 45]
[37 44]
[38 43]
[46 86]
[47 85]
[48 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
