%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCCCUAGGGGGGGGGGGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGxxxxxxxxxxAAGAAGUUAUUAUCUCGAACUGACACUGAGCCACAACCCAAACAACCCAGCCCCCCCCCCCUCUCCCUAAG\
) } def
/len { sequence length } bind def

/coor [
[97.04662323 373.02685547]
[84.95659637 363.98617554]
[75.75497437 352.01818848]
[70.12455750 338.01101685]
[68.48316956 323.00405884]
[70.95261383 308.11096191]
[77.34963989 294.43688965]
[87.19954681 282.99652100]
[99.77140045 274.63882446]
[114.13229370 269.98400879]
[113.51646423 254.99664307]
[112.90064240 240.00929260]
[112.28481293 225.02194214]
[111.66899109 210.03459167]
[111.05316162 195.04724121]
[110.43733978 180.05987549]
[109.82151031 165.07252502]
[109.20568848 150.08517456]
[108.58985901 135.09782410]
[93.41649628 134.21963501]
[80.49578094 127.31124878]
[72.00067139 116.05178070]
[69.13903046 102.79931641]
[54.31654739 100.49843597]
[39.49406433 98.19756317]
[24.67158318 95.89669037]
[9.84910202 93.59581757]
[-5.12244844 94.51922607]
[-19.54983330 98.62417603]
[-30.57116890 110.76757050]
[-46.53884506 107.03054810]
[-51.02668381 91.25743103]
[-39.41798401 79.67424774]
[-23.65477753 84.19678497]
[-9.22739315 80.09184265]
[-9.07340431 72.59342194]
[-24.07024193 72.28544617]
[-36.90391159 64.52033997]
[-23.76226425 57.28860855]
[-8.76542664 57.59658432]
[-8.61143780 50.09816742]
[-22.85812950 45.40436554]
[-37.10482025 40.71056747]
[-52.01894379 46.62229919]
[-65.86753845 38.52317047]
[-68.02716064 22.62613869]
[-56.84111786 11.12604618]
[-40.89039993 12.84477997]
[-32.41102219 26.46387291]
[-18.16432953 31.15767479]
[-3.91763735 35.85147476]
[4.92682266 42.01233673]
[11.29069710 49.53931808]
[15.03865051 57.68133163]
[16.23584175 65.70024109]
[15.13468266 72.92048645]
[12.14997673 78.77333069]
[26.97245789 81.07420349]
[41.79494095 83.37508392]
[56.61742401 85.67595673]
[71.43990326 87.97682953]
[75.02175903 81.66088867]
[79.97502136 76.35183716]
[86.02773285 72.34116364]
[92.84757233 69.84907532]
[100.06011963 69.01239014]
[103.71882629 54.46543503]
[107.37753296 39.91847992]
[111.03623962 25.37152672]
[97.60733032 18.54420662]
[86.03467560 8.89944935]
[76.89874268 -3.07896900]
[70.65779114 -16.79021454]
[67.62487030 -31.54653931]
[67.95209503 -46.60776901]
[71.62306213 -61.21844101]
[78.45363617 -74.64569092]
[88.10119629 -86.21601105]
[100.08183289 -95.34903717]
[113.79458618 -101.58666992]
[128.55165100 -104.61602020]
[143.61279297 -104.28514099]
[158.22257996 -100.61063385]
[171.64817810 -93.77680969]
[183.21615601 -84.12644196]
[192.34628296 -72.14360046]
[198.58058167 -58.42932892]
[201.60635376 -43.67153549]
[201.27183533 -28.61046600]
[197.59378052 -14.00157547]
[190.75671387 -0.57763863]
[181.10354614 10.98800468]
[169.11848450 20.11522675]
[155.40270996 26.34620857]
[140.64418030 29.36840820]
[125.58319092 29.03023338]
[121.92448425 43.57718658]
[118.26577759 58.12414169]
[114.60707092 72.67109680]
[130.71429443 86.47407532]
[135.00778198 108.94973755]
[149.98802185 109.71939850]
[164.96826172 110.48905945]
[169.18415833 96.02106476]
[176.62348938 82.91559601]
[186.88505554 71.87943268]
[199.41546631 63.50773239]
[213.53898621 58.25196838]
[228.49392700 56.39558029]
[243.47381592 58.03868103]
[257.67077637 63.09266281]
[270.31921387 71.28496552]
[280.73699951 82.17378998]
[288.36233521 95.17191315]
[292.78393555 109.57836914]
[293.76342773 124.61623383]
[291.24792480 139.47453308]
[285.37313843 153.35197449]
[276.45584106 165.50016785]
[264.97695923 175.26397705]
[251.55552673 182.11685181]
[236.91534424 185.68922424]
[221.84593201 185.78845215]
[207.15998840 182.40916443]
[193.64949036 175.73361206]
[182.04302979 166.12179565]
[172.96655273 154.09207153]
[166.90953064 140.29318237]
[164.19860840 125.46929932]
[149.21836853 124.69963837]
[134.23812866 123.92997742]
[123.57721710 134.48199463]
[124.19303894 149.46934509]
[124.80886841 164.45669556]
[125.42469025 179.44406128]
[126.04051971 194.43141174]
[126.65634155 209.41876221]
[127.27217102 224.40611267]
[127.88799286 239.39346313]
[128.50381470 254.38082886]
[129.11964417 269.36816406]
[143.81401062 272.82913208]
[157.02915955 280.12725830]
[167.78443909 290.72094727]
[175.28172302 303.82412720]
[178.96469116 318.46441650]
[178.56001282 333.55545044]
[174.09774780 347.97732544]
[165.90899658 360.65988159]
[154.60144043 370.66195679]
[141.01416016 377.24136353]
[126.15543365 379.90982056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[23 61]
[24 60]
[25 59]
[26 58]
[27 57]
[28 35]
[29 34]
[41 51]
[42 50]
[43 49]
[66 99]
[67 98]
[68 97]
[69 96]
[101 131]
[102 130]
[103 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
