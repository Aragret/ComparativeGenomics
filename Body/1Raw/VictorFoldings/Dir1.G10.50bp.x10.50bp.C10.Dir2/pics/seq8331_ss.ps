%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACCACCCGGGGGGGGGGAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCAUACACAACxxxxxxxxxxUAAUCAUAUUUUAUAUCUUCUUCGAAACCACACUUAUCCCCACCUUGGCUCCCCCCCCCCAUCAUCACCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 372.70864868]
[71.19830322 366.69262695]
[59.48964310 357.16320801]
[50.78712082 344.82754517]
[45.73651886 330.60101318]
[44.71262741 315.53933716]
[47.79142761 300.76016235]
[54.74444962 287.36026001]
[65.05573273 276.33392334]
[77.96011353 268.49942017]
[92.50000000 264.43807983]
[92.50000000 249.43809509]
[92.50000000 234.43809509]
[92.50000000 219.43809509]
[92.50000000 204.43809509]
[92.50000000 189.43809509]
[92.50000000 174.43809509]
[92.50000000 159.43809509]
[92.50000000 144.43809509]
[92.50000000 129.43809509]
[92.50000000 114.43809509]
[83.73101807 100.16924286]
[92.20125580 85.72106171]
[91.88919830 70.72430420]
[91.57714081 55.72755432]
[76.58511353 55.10660934]
[61.66069031 53.55481339]
[46.86161041 51.07817459]
[32.24512863 47.68626785]
[17.86779976 43.39221573]
[3.78524017 38.21263504]
[-9.94806385 32.16756439]
[-23.27898026 25.28039169]
[-36.15593719 17.57775879]
[-48.52910995 9.08946800]
[-60.35063171 -0.15164134]
[-71.57476807 -10.10981655]
[-82.15809631 -20.74653053]
[-92.05966949 -32.02063370]
[-101.24118042 -43.88850784]
[-109.66710663 -56.30423355]
[-117.30484772 -69.21978760]
[-124.12485504 -82.58518982]
[-130.10073853 -96.34873199]
[-135.20939636 -110.45717621]
[-139.43104553 -124.85593414]
[-142.74937439 -139.48930359]
[-145.15151978 -154.30064392]
[-146.62818909 -169.23269653]
[-147.17369080 -184.22766113]
[-146.78590393 -199.22752380]
[-145.46632385 -214.17427063]
[-143.22006226 -229.01007080]
[-140.05580139 -243.67752075]
[-135.98579407 -258.11987305]
[-131.02577209 -272.28125000]
[-125.19494629 -286.10687256]
[-118.51585388 -299.54324341]
[-111.01435089 -312.53842163]
[-102.71945190 -325.04205322]
[-93.66324615 -337.00582886]
[-83.88076782 -348.38342285]
[-73.40988159 -359.13082886]
[-62.29107666 -369.20648193]
[-50.56737900 -378.57138062]
[-38.28414917 -387.18933105]
[-25.48890305 -395.02694702]
[-12.23114491 -402.05389404]
[1.43783343 -408.24304199]
[15.46514797 -413.57043457]
[29.79652977 -418.01544189]
[44.37653351 -421.56085205]
[59.14875412 -424.19296265]
[74.05603790 -425.90161133]
[89.04070282 -426.68017578]
[104.04479218 -426.52563477]
[119.01024628 -425.43859863]
[133.87916565 -423.42324829]
[148.59403992 -420.48739624]
[163.09793091 -416.64242554]
[177.33470154 -411.90316772]
[191.24931335 -406.28799438]
[204.78790283 -399.81860352]
[217.89811707 -392.52001953]
[230.52920532 -384.42053223]
[242.63230896 -375.55139160]
[254.16062927 -365.94699097]
[265.06951904 -355.64447021]
[275.31683350 -344.68365479]
[284.86285400 -333.10696411]
[293.67071533 -320.95919800]
[301.70629883 -308.28735352]
[308.93856812 -295.14044189]
[315.33947754 -281.56933594]
[320.88427734 -267.62652588]
[325.55154419 -253.36599731]
[329.32321167 -238.84286499]
[332.18466187 -224.11335754]
[334.12487793 -209.23443604]
[335.13629150 -194.26368713]
[335.21502686 -179.25900269]
[334.36077881 -164.27845764]
[332.57684326 -149.38000488]
[329.87014771 -134.62127686]
[326.25109863 -120.05936432]
[321.73376465 -105.75061798]
[316.33557129 -91.75039673]
[310.07745361 -78.11286163]
[302.98361206 -64.89077759]
[295.08145142 -52.13528824]
[286.40155029 -39.89575195]
[276.97753906 -28.21951675]
[266.84585571 -17.15175819]
[256.04568481 -6.73529530]
[244.61880493 2.98957229]
[232.60943604 11.98522091]
[220.06404114 20.21684837]
[207.03117371 27.65260696]
[193.56121826 34.26372910]
[179.70631409 40.02463913]
[165.52005005 44.91304779]
[151.05731201 48.91004181]
[136.37406921 52.00016022]
[121.52712250 54.17144394]
[106.57389832 55.41549683]
[106.88595581 70.41224670]
[107.19801331 85.40900421]
[115.12266541 93.99886322]
[115.24423218 105.68522644]
[107.50000000 114.43809509]
[107.50000000 129.43809509]
[107.50000000 144.43809509]
[107.50000000 159.43809509]
[107.50000000 174.43809509]
[107.50000000 189.43809509]
[107.50000000 204.43809509]
[107.50000000 219.43809509]
[107.50000000 234.43809509]
[107.50000000 249.43809509]
[107.50000000 264.43807983]
[122.03988647 268.49942017]
[134.94427490 276.33392334]
[145.25555420 287.36026001]
[152.20857239 300.76016235]
[155.28736877 315.53933716]
[154.26348877 330.60101318]
[149.21287537 344.82754517]
[140.51036072 357.16320801]
[128.80169678 366.69262695]
[114.95575714 372.70864868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 127]
[24 126]
[25 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
