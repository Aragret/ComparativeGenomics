%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUUACUACGGGGGGGGGGCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCGAUAGAAxxxxxxxxxxGAAGUUUAUAUUCUUAUCCUACCAGGCUUCGGAAUAAUCUCCCAUAUUGUCCCCCCCCCCAACUUACUAC\
) } def
/len { sequence length } bind def

/coor [
[90.57025146 452.47610474]
[76.72431183 446.46008301]
[65.01565552 436.93066406]
[56.31312943 424.59500122]
[51.26252747 410.36846924]
[50.23863602 395.30679321]
[53.31743622 380.52761841]
[60.27045822 367.12768555]
[70.58174133 356.10137939]
[83.48612213 348.26684570]
[98.02600861 344.20553589]
[98.02600861 329.20553589]
[98.02600861 314.20553589]
[98.02600861 299.20553589]
[98.02600861 284.20553589]
[98.02600861 269.20553589]
[98.02600861 254.20555115]
[98.02600861 239.20555115]
[98.02600861 224.20555115]
[98.02600861 209.20555115]
[95.74432373 206.43762207]
[94.72492981 202.40493774]
[95.55737305 197.72953796]
[98.52326202 193.27722168]
[99.45888519 178.30642700]
[100.39451599 163.33563232]
[101.33014679 148.36483765]
[100.08326721 133.41676331]
[96.68029022 118.80786896]
[84.43318176 111.06483459]
[81.14601898 96.95310974]
[88.71081543 84.59511566]
[85.30783844 69.98622131]
[81.90486145 55.37732697]
[78.50188446 40.76843643]
[63.47455978 41.41328049]
[48.58858490 39.28631973]
[34.35071564 34.46144104]
[21.24538422 27.10435677]
[9.71819878 17.46690369]
[0.16079707 5.87842512]
[-7.10245371 -7.26547575]
[-11.82547283 -21.51645088]
[-13.84879971 -36.38869095]
[-13.10497952 -51.37550354]
[-9.62080765 -65.96654510]
[-3.51636887 -79.66524506]
[4.99909830 -92.00565338]
[15.63437748 -102.56832886]
[28.02622986 -110.99457550]
[41.75180435 -116.99864197]
[38.34882736 -131.60754395]
[34.94585037 -146.21643066]
[31.54287148 -160.82531738]
[28.13989449 -175.43421936]
[17.47355652 -187.11923218]
[22.12174034 -201.26998901]
[7.05209637 -201.32049561]
[-7.59955311 -204.84553528]
[-21.04306221 -211.65499878]
[-32.55344009 -221.38165283]
[-41.50994873 -233.50097656]
[-47.42956924 -247.35935974]
[-49.99307251 -262.20944214]
[-49.06220245 -277.25039673]
[-44.68716431 -291.67108154]
[-37.10390091 -304.69375610]
[-26.72136497 -315.61621094]
[-14.09947395 -323.84933472]
[0.08108945 -328.94918823]
[15.05558491 -330.64068604]
[30.01645660 -328.83264160]
[44.15688705 -323.62255859]
[56.71429443 -315.29141235]
[67.01147461 -304.28845215]
[74.49311829 -291.20712280]
[78.75574493 -276.75280762]
[79.56948090 -261.70507812]
[76.89044189 -246.87538147]
[70.86310577 -233.06350708]
[61.81251144 -221.01429749]
[50.22675323 -211.37754822]
[36.73063278 -204.67295837]
[47.15356827 -194.03286743]
[42.74878693 -178.83718872]
[46.15176392 -164.22830200]
[49.55474091 -149.61940002]
[52.95772171 -135.01051331]
[56.36069870 -120.40161896]
[71.32662201 -121.08091736]
[86.16646576 -118.99798584]
[100.37464142 -114.22232056]
[113.46678925 -106.91516113]
[124.99631500 -97.32410431]
[134.56962585 -85.77465057]
[141.85955811 -72.65921021]
[146.61653137 -58.42374420]
[148.67718506 -43.55260086]
[147.96987915 -28.55204582]
[144.51721191 -13.93301964]
[138.43537903 -0.19374046]
[129.93014526 12.19728279]
[119.28997803 22.81722069]
[106.87620544 31.30335236]
[93.11077118 37.36545563]
[96.51374817 51.97434998]
[99.91673279 66.58324432]
[103.31970978 81.19213104]
[115.56681824 88.93516541]
[118.85398102 103.04689026]
[111.28918457 115.40488434]
[114.69216156 130.01377869]
[119.96730042 115.97195435]
[130.13615417 104.94496918]
[143.70559692 98.55197906]
[158.68315125 97.73168945]
[172.86958313 102.60455322]
[184.18185425 112.45505524]
[190.95892334 125.83681488]
[192.20567322 140.78491211]
[187.73904419 155.10444641]
[178.21487427 166.69282532]
[165.03167725 173.84844971]
[150.12516785 175.52064514]
[135.68417358 171.46386719]
[123.82910919 162.27378845]
[116.30093384 149.30047607]
[115.36531067 164.27127075]
[114.42967987 179.24205017]
[113.49404907 194.21284485]
[113.02600861 209.20555115]
[113.02600861 224.20555115]
[113.02600861 239.20555115]
[113.02600861 254.20555115]
[113.02600861 269.20553589]
[113.02600861 284.20553589]
[113.02600861 299.20553589]
[113.02600861 314.20553589]
[113.02600861 329.20553589]
[113.02600861 344.20553589]
[127.56589508 348.26684570]
[140.47027588 356.10137939]
[150.78155518 367.12768555]
[157.73458862 380.52761841]
[160.81338501 395.30679321]
[159.78948975 410.36846924]
[154.73889160 424.59500122]
[146.03636169 436.93066406]
[134.32769775 446.46008301]
[120.48176575 452.47610474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 112]
[29 111]
[32 108]
[33 107]
[34 106]
[35 105]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[57 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
