%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAAAACAGGGGGGGGGGUCACCUCUAGCAUCACCAGUAUUAGAGGCACCGCCUGCCCAGUGACACAUxxxxxxxxxxUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCCCCCCCCCCCACAAAAAACA\
) } def
/len { sequence length } bind def

/coor [
[87.25939178 402.98641968]
[74.03919983 395.71395874]
[63.15239334 385.26693726]
[55.34126282 372.35769653]
[51.13838196 357.86639404]
[50.83030701 342.78103638]
[54.43804932 328.13021851]
[61.71562195 314.91284180]
[72.16683197 304.03005981]
[85.07909393 296.22390747]
[99.57202911 292.02664185]
[99.25997162 277.02987671]
[98.94791412 262.03311157]
[98.63585663 247.03637695]
[98.32380676 232.03961182]
[98.01174927 217.04286194]
[97.69969177 202.04611206]
[97.38763428 187.04936218]
[97.07557678 172.05259705]
[96.76351929 157.05584717]
[95.98368073 142.07614136]
[94.73680115 127.12805176]
[82.04228973 121.00363922]
[74.01947784 109.41513824]
[59.05923080 110.50644684]
[44.09898376 111.59776306]
[29.13873291 112.68907166]
[14.17848492 113.78038025]
[-0.78176409 114.87168884]
[-5.90761280 129.21203613]
[-16.42774963 140.22323608]
[-30.51949501 145.99754333]
[-45.74137115 145.53451538]
[-59.45609283 138.91438293]
[-69.28750610 127.28410339]
[-73.53225708 112.65872192]
[-71.45491791 97.57215118]
[-63.41539383 84.63824463]
[-50.80659103 76.09786987]
[-35.81305313 73.43070984]
[-21.03250504 77.09885406]
[-9.02576637 86.46678162]
[-1.87307465 99.91144562]
[13.08717442 98.82012939]
[28.04742241 97.72882080]
[43.00767136 96.63751221]
[57.96791840 95.54620361]
[72.92816925 94.45488739]
[77.11723328 84.50770569]
[84.79714203 76.92391968]
[94.79629517 72.86047363]
[105.58929443 72.93725586]
[112.49629211 59.62210083]
[103.20105743 42.97003937]
[105.72291565 24.21698952]
[118.87838745 10.82451057]
[137.28910828 8.01322651]
[143.35212708 -5.70682669]
[149.41513062 -19.42687988]
[155.47814941 -33.14693451]
[161.54116821 -46.86698914]
[159.11772156 -65.09078217]
[173.61576843 -74.92982483]
[179.39204407 -88.77304077]
[167.10807800 -80.16464996]
[153.40332031 -74.06713867]
[138.78472900 -70.70608521]
[123.79307556 -70.20581055]
[108.98293304 -72.58481598]
[94.90216064 -77.75511169]
[82.07164764 -85.52542877]
[70.96601105 -95.60832977]
[61.99607468 -107.63082123]
[55.49365997 -121.14816284]
[51.69930267 -135.66032410]
[50.75336456 -150.63046265]
[52.69084167 -165.50482178]
[57.44005966 -179.73312378]
[64.82533264 -192.78907776]
[74.57346344 -204.18968201]
[86.32385254 -213.51322937]
[99.64182281 -220.41479492]
[114.03471375 -224.63909912]
[128.97010803 -226.02986145]
[143.89549255 -224.53562927]
[158.25875854 -220.21168518]
[171.52857971 -213.21798706]
[183.21408081 -203.81324768]
[192.88298035 -192.34536743]
[200.17759705 -179.23855591]
[204.82809448 -164.97766113]
[206.66244507 -150.09025574]
[205.61279297 -135.12701416]
[201.71797180 -120.64150238]
[195.12548828 -107.17514801]
[207.90283203 -115.03256989]
[220.68019104 -122.88999939]
[225.78471375 -138.09931946]
[240.90718079 -143.45570374]
[254.44691467 -134.85017395]
[256.01742554 -118.88417816]
[244.41390991 -107.80545044]
[228.53762817 -110.11264038]
[215.76026917 -102.25521851]
[202.98291016 -94.39778900]
[193.23526001 -82.99676514]
[187.45898438 -69.15354919]
[191.77127075 -57.80844116]
[187.02082825 -46.20446396]
[175.26121521 -40.80397415]
[169.19819641 -27.08392143]
[163.13519287 -13.36386681]
[157.07217407 0.35618639]
[151.00917053 14.07623959]
[158.39915466 22.57733345]
[162.07070923 33.28079224]
[161.44926453 44.63100052]
[156.58721924 54.96290207]
[148.16186523 62.74626923]
[137.38134766 66.81231689]
[125.81144714 66.52909851]
[118.90444946 79.84425354]
[127.36079407 96.12451935]
[123.75836945 114.11283112]
[109.68489075 125.88117218]
[110.93176270 140.82925415]
[113.98963165 145.21891785]
[114.91916656 149.87599182]
[113.98388672 153.92900085]
[111.76027679 156.74378967]
[112.07233429 171.74055481]
[112.38439178 186.73730469]
[112.69644165 201.73405457]
[113.00849915 216.73080444]
[113.32055664 231.72756958]
[113.63261414 246.72431946]
[113.94467163 261.72106934]
[114.25672913 276.71783447]
[114.56877899 291.71456909]
[129.22377014 295.30535889]
[142.44958496 302.56759644]
[153.34445190 313.00619507]
[161.16554260 325.90942383]
[165.37962341 340.39746094]
[165.69934082 355.48257446]
[162.10292053 370.13616943]
[154.83555603 383.35919189]
[144.39274597 394.25003052]
[131.48652649 402.06613159]
[116.99682617 406.27459717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 126]
[22 125]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[52 122]
[53 121]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[63 107]
[64 106]
[95 105]
[96 104]
[97 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
