%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUUGACCGGGGGGGGGGGCUCUGAGCUAAACCUAGCCCCAAACCCACUCCACCUUACUACCAGACAAxxxxxxxxxxAUGCUAAGACUUCACCAGUCAAAGCGAACUACUAUACUCAAUUGAUCCAACCCCCCCCCCUAACUUGACC\
) } def
/len { sequence length } bind def

/coor [
[78.93731689 442.57415771]
[64.44763184 438.36569214]
[51.54139709 430.54956055]
[41.09859848 419.65872192]
[33.83123398 406.43572998]
[30.23480797 391.78213501]
[30.55452919 376.69702148]
[34.76860046 362.20895386]
[42.58969498 349.30575562]
[53.48456573 338.86715698]
[66.71037292 331.60488892]
[81.36536407 328.01412964]
[81.67742157 313.01736450]
[81.98947906 298.02062988]
[82.30153656 283.02386475]
[82.61359406 268.02709961]
[82.92564392 253.03034973]
[83.23770142 238.03359985]
[83.54975891 223.03684998]
[83.86181641 208.04010010]
[84.17387390 193.04333496]
[72.80913544 185.96954346]
[66.38668823 174.10093689]
[66.68632507 160.50091553]
[73.73677826 148.74063110]
[85.78003693 141.96131897]
[86.40401459 126.97431183]
[75.10501099 117.10858917]
[60.33895874 119.74745178]
[45.57290268 122.38631439]
[30.80684662 125.02517700]
[18.62435913 136.00329590]
[3.11141992 130.68533325]
[0.22641151 114.54194641]
[12.93718243 104.18007660]
[28.16798210 110.25912476]
[42.93403625 107.62026215]
[57.70009232 104.98139954]
[72.46614838 102.34252930]
[77.36077118 89.28501129]
[87.28430176 81.48563385]
[98.51313782 80.18172455]
[103.11870575 65.90626526]
[107.72426605 51.63080215]
[94.37358856 43.74054337]
[83.10775757 33.09337234]
[74.48455048 20.22067833]
[68.92999268 5.76394320]
[66.71724701 -9.55724716]
[67.95323944 -24.98100281]
[72.57348633 -39.74102402]
[80.34540558 -53.10467148]
[90.88008881 -64.40933228]
[103.65171814 -73.09527588]
[118.02381897 -78.73336792]
[133.28099060 -81.04627228]
[148.66450500 -79.92207336]
[152.97209167 -94.29026031]
[141.84123230 -84.23520660]
[128.59252930 -77.20159912]
[114.02761841 -73.61502838]
[99.02781677 -73.69251251]
[84.50074005 -77.42936707]
[71.32540894 -84.59947968]
[60.29903030 -94.76899719]
[52.08880234 -107.32256317]
[47.19151688 -121.50059509]
[45.90349960 -136.44519043]
[48.30268860 -151.25209045]
[54.24391174 -165.02531433]
[63.36767197 -176.93148804]
[75.12190247 -186.25018311]
[88.79537201 -192.41752625]
[103.56072235 -195.06036377]
[118.52451324 -194.01875305]
[132.78131104 -189.35572815]
[145.46846008 -181.35345459]
[155.81826782 -170.49613953]
[163.20448303 -157.44073486]
[167.18019104 -142.97718811]
[167.50480652 -127.98070526]
[164.15937805 -113.36054230]
[174.59918213 -124.13135529]
[185.03900146 -134.90216064]
[195.47880554 -145.67297363]
[195.40444946 -161.24961853]
[206.14533997 -172.02403259]
[220.99575806 -171.99893188]
[231.43557739 -182.76974487]
[241.87538147 -193.54055786]
[252.31520081 -204.31135559]
[253.50357056 -220.31033325]
[266.83374023 -229.23706055]
[282.07992554 -224.24371338]
[287.54653931 -209.16076660]
[279.04010010 -195.55856323]
[263.08599854 -193.87155151]
[252.64619446 -183.10073853]
[242.20637512 -172.32992554]
[231.76657104 -161.55912781]
[232.25503540 -146.71672058]
[221.82101440 -135.64486694]
[206.24961853 -135.23315430]
[195.80981445 -124.46234894]
[185.36999512 -113.69154358]
[174.93017578 -102.92073059]
[167.34027100 -89.98267365]
[163.03268433 -75.61449432]
[175.76310730 -68.60794830]
[186.75393677 -59.09303284]
[195.51870728 -47.48754501]
[201.66879272 -34.30186081]
[204.93060303 -20.11654091]
[205.15776062 -5.55672646]
[202.33773804 8.73538208]
[196.59240723 22.12886620]
[188.17288208 34.03193283]
[177.44845581 43.91806793]
[164.89048767 51.34932709]
[151.05160522 55.99572372]
[136.54142761 57.64989853]
[121.99972534 56.23636627]
[117.39416504 70.51182556]
[112.78859711 84.78728485]
[122.51515961 107.56990814]
[101.39103699 127.59828949]
[100.76705933 142.58529663]
[114.15091705 152.87725830]
[118.74070740 168.95256042]
[112.92504120 184.44914246]
[99.17062378 193.35539246]
[98.85856628 208.35215759]
[98.54651642 223.34890747]
[98.23445892 238.34565735]
[97.92240143 253.34240723]
[97.61034393 268.33917236]
[97.29828644 283.33590698]
[96.98622894 298.33267212]
[96.67417908 313.32943726]
[96.36212158 328.32617188]
[110.85505676 332.52346802]
[123.76731873 340.32962036]
[134.21852112 351.21237183]
[141.49609375 364.42977905]
[145.10383606 379.08059692]
[144.79576111 394.16592407]
[140.59288025 408.65725708]
[132.78175354 421.56649780]
[121.89495087 432.01348877]
[108.67475128 439.28598022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[26 127]
[27 126]
[28 39]
[29 38]
[30 37]
[31 36]
[42 124]
[43 123]
[44 122]
[57 108]
[58 107]
[82 106]
[83 105]
[84 104]
[85 103]
[88 100]
[89 99]
[90 98]
[91 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
