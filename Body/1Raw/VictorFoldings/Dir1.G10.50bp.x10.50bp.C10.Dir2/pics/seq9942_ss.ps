%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACAAUCGGGGGGGGGGAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAAAAAACUxxxxxxxxxxUGCACAUUUUAUUUCUCCAACAUACUCGGAUUCUACCCUAGCAUCACACACCCCCCCCCCCCGCACAAUC\
) } def
/len { sequence length } bind def

/coor [
[93.50212860 385.01766968]
[79.65618896 379.00161743]
[67.94753265 369.47219849]
[59.24500656 357.13653564]
[54.19440460 342.91003418]
[53.17051315 327.84832764]
[56.24931335 313.06918335]
[63.20233536 299.66925049]
[73.51361847 288.64291382]
[86.41799927 280.80841064]
[100.95788574 276.74710083]
[100.95788574 261.74710083]
[100.95788574 246.74710083]
[100.95788574 231.74710083]
[100.95788574 216.74710083]
[100.95788574 201.74710083]
[100.95788574 186.74710083]
[100.95788574 171.74710083]
[100.95788574 156.74710083]
[100.95788574 141.74710083]
[82.71414948 132.77677917]
[72.88884735 117.65529633]
[58.76404953 122.70405579]
[44.63924408 127.75280762]
[30.51444244 132.80155945]
[26.28062248 147.72987366]
[14.05997467 157.29205322]
[-1.44841206 157.81126404]
[-14.28124619 149.08784485]
[-19.50404167 134.47613525]
[-15.10852718 119.59464264]
[-2.78486729 110.16558838]
[12.72823906 109.81465149]
[25.46568489 118.67676544]
[39.59048843 113.62800598]
[53.71529007 108.57924652]
[67.84009552 103.53049469]
[68.71282196 91.76371002]
[73.74687958 81.09239197]
[82.27271271 72.93586731]
[93.15635681 68.37899017]
[93.46841431 53.38223267]
[93.78046417 38.38547897]
[94.09252167 23.38872719]
[83.82894135 23.60827827]
[72.96140289 17.83001709]
[60.88141632 8.93766689]
[48.80142593 0.04531695]
[36.72143936 -8.84703255]
[21.56873322 -4.98315620]
[7.49992752 -11.80977249]
[1.15787971 -26.10356331]
[5.53711176 -41.11543655]
[18.56988335 -49.75724411]
[34.10251999 -47.94859314]
[44.80098343 -36.54346466]
[45.61378860 -20.92702103]
[57.69377518 -12.03467178]
[69.77376556 -3.14232159]
[81.85375214 5.75002813]
[95.57380676 -0.31298518]
[97.13138580 -15.23189735]
[98.68897247 -30.15081024]
[100.24655151 -45.06972122]
[101.64885712 -60.00402832]
[102.89572906 -74.95211792]
[104.14260101 -89.90019989]
[105.38948059 -104.84828949]
[91.43326569 -110.68604279]
[79.96540833 -120.55232239]
[72.10940552 -133.48052979]
[68.63491058 -148.20408630]
[69.88232422 -163.28051758]
[75.72942352 -177.23281860]
[85.60338593 -188.69406128]
[98.53684998 -196.54139709]
[113.26272583 -200.00602722]
[128.33833313 -198.74851990]
[142.28671265 -192.89205933]
[153.74133301 -183.01042175]
[161.58000183 -170.07170105]
[165.03475952 -155.34350586]
[163.76715088 -140.26875305]
[157.90135193 -126.32430267]
[148.01203918 -114.87630463]
[135.06806946 -107.04630280]
[120.33756256 -103.60141754]
[119.09069061 -88.65332794]
[117.84381866 -73.70523834]
[116.59693909 -58.75715637]
[119.19193268 -51.78495026]
[115.16545868 -43.51214218]
[113.60787964 -28.59322929]
[112.05030060 -13.67431641]
[110.49272156 1.24459577]
[119.04664612 -11.07735062]
[131.98039246 -18.67459106]
[146.90808105 -20.14566231]
[161.07600403 -15.21919823]
[171.87060547 -4.80398035]
[177.30058289 9.17869473]
[176.36430359 24.14944649]
[169.23446655 37.34661865]
[157.22630310 46.33573151]
[142.55497742 49.45856476]
[127.92689514 46.13904953]
[116.04049683 36.98953247]
[109.08927917 23.70078278]
[108.77722168 38.69753647]
[108.46516418 53.69429016]
[108.15310669 68.69104767]
[131.22645569 80.04940033]
[141.09103394 107.43403625]
[155.90878296 109.76513672]
[170.72654724 112.09624481]
[187.31288147 108.58487701]
[195.27857971 123.55097198]
[183.10249329 135.34838867]
[168.39544678 126.91400146]
[153.57768250 124.58290100]
[138.75993347 122.25179291]
[133.05941772 127.12561798]
[144.94563293 136.27537537]
[159.14202881 141.11917114]
[164.98103333 154.93605042]
[158.56059265 168.49252319]
[144.17134094 172.72915649]
[131.42921448 164.81471252]
[128.84977722 150.03701782]
[121.65839386 136.87327576]
[115.95788574 141.74710083]
[115.95788574 156.74710083]
[115.95788574 171.74710083]
[115.95788574 186.74710083]
[115.95788574 201.74710083]
[115.95788574 216.74710083]
[115.95788574 231.74710083]
[115.95788574 246.74710083]
[115.95788574 261.74710083]
[115.95788574 276.74710083]
[130.49777222 280.80841064]
[143.40216064 288.64291382]
[153.71343994 299.66925049]
[160.66645813 313.06918335]
[163.74525452 327.84832764]
[162.72137451 342.91003418]
[157.67076111 357.13653564]
[148.96824646 369.47219849]
[137.25958252 379.00161743]
[123.41364288 385.01766968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 37]
[23 36]
[24 35]
[25 34]
[41 111]
[42 110]
[43 109]
[44 108]
[46 60]
[47 59]
[48 58]
[49 57]
[61 95]
[62 94]
[63 93]
[64 92]
[65 90]
[66 89]
[67 88]
[68 87]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
