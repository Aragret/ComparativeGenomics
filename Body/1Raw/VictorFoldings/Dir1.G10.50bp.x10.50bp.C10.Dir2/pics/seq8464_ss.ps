%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAUUUACACGGGGGGGGGGCAACCACCCAACUAUCUAUAAACCUAGCCAUGGCCAUCCCCUUAUGAGCGxxxxxxxxxxACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACAUAAAACCCCCCCCCCCCCUCAUUCACAC\
) } def
/len { sequence length } bind def

/coor [
[82.97293854 395.10870361]
[70.05377960 387.35034180]
[59.27248764 376.82131958]
[51.21047211 364.08944702]
[46.30250931 349.84133911]
[44.81328583 334.84536743]
[46.82310867 319.91027832]
[52.22359467 305.84146118]
[60.72349930 293.39764404]
[71.86443329 283.24993896]
[85.04557800 275.94552612]
[99.55609894 271.87841797]
[98.94026947 256.89105225]
[98.32444763 241.90370178]
[97.70862579 226.91635132]
[97.09279633 211.92898560]
[96.47697449 196.94163513]
[95.86114502 181.95428467]
[95.24532318 166.96693420]
[94.62949371 151.97958374]
[94.01367188 136.99221802]
[82.84582520 133.31658936]
[73.36658478 126.36137390]
[66.50905609 116.81122589]
[62.94826508 105.60623932]
[47.96802521 104.83657837]
[32.98778534 104.06691742]
[28.64182281 118.50215149]
[20.96696472 131.47750854]
[10.40941620 142.23863220]
[-2.41702294 150.15985107]
[-16.76663971 154.78067017]
[-31.80516434 155.83242798]
[-46.65827942 153.25398254]
[-60.46244049 147.19522095]
[-72.41510010 138.00840759]
[-81.82133484 126.22766113]
[-88.13428497 112.53787994]
[-90.98692322 97.73497772]
[-90.21340179 82.67958069]
[-85.85868835 68.24697876]
[-78.17597198 55.27627182]
[-67.61190033 44.52156067]
[-54.78065872 36.60810852]
[-40.42824173 31.99599075]
[-25.38908386 30.95335197]
[-10.53753471 33.54080963]
[3.26295257 39.60793304]
[15.21003628 48.80198669]
[24.60912895 60.58843994]
[30.91378021 74.28204346]
[33.75744247 89.08667755]
[48.73768616 89.85633087]
[63.71792603 90.62599182]
[66.44348145 83.32004547]
[70.62205505 76.73635101]
[76.07271576 71.15999603]
[82.55944824 66.83242798]
[89.80136871 63.94103622]
[97.48489380 62.61103058]
[105.27732849 62.89999008]
[112.84124756 64.79541016]
[119.84913635 68.21520996]
[130.18003845 57.33989716]
[140.51094055 46.46458435]
[150.84184265 35.58927155]
[161.17274475 24.71395683]
[158.20666504 -2.04803181]
[182.08551025 -20.23897934]
[168.27729797 -26.34108543]
[156.62818909 -35.94321060]
[148.00262451 -48.33281708]
[143.04067993 -62.59050751]
[142.11058044 -77.65827179]
[145.28132629 -92.41797638]
[152.31764221 -105.77436066]
[162.69737244 -116.73628235]
[175.65026855 -124.49030304]
[190.21516418 -128.46101379]
[205.31121826 -128.35377502]
[219.81822205 -124.17653656]
[232.65966797 -116.23927307]
[242.88261414 -105.13098907]
[249.72845459 -91.67598724]
[252.68917847 -76.87272644]
[251.54510498 -61.81969833]
[246.38110352 -47.63394165]
[237.58039856 -35.36813354]
[225.79603577 -25.93247604]
[211.90252686 -20.02716064]
[196.93083191 -18.09039879]
[208.90109253 -9.05088043]
[222.59172058 -15.18005371]
[236.28234863 -21.30922699]
[249.97296143 -27.43840218]
[259.40695190 -40.13920975]
[274.18478394 -38.27782440]
[287.87542725 -44.40699768]
[288.24917603 -59.66553879]
[295.21401978 -73.24691772]
[307.38705444 -82.45454407]
[322.35128784 -85.46022797]
[337.13558960 -81.66720581]
[348.80453491 -71.82856750]
[355.04119873 -57.89779663]
[354.60736084 -42.64084625]
[347.58908081 -29.08699989]
[335.37991333 -19.92738342]
[320.40393066 -16.98064423]
[305.63467407 -20.83186150]
[294.00457764 -30.71637154]
[280.31396484 -24.58719826]
[271.85922241 -12.32478809]
[256.10214233 -13.74777603]
[242.41151428 -7.61860228]
[228.72088623 -1.48942828]
[215.03025818 4.63974571]
[214.46304321 16.56269455]
[209.67318726 27.06139565]
[201.61216736 34.75485611]
[191.63664246 38.75232315]
[181.28631592 38.75159073]
[172.04806519 35.04485703]
[161.71714783 45.92017365]
[151.38624573 56.79548645]
[141.05534363 67.67079926]
[130.72444153 78.54611206]
[137.44868469 101.36251831]
[129.08413696 123.62993622]
[109.00102234 136.37640381]
[109.61685181 151.36375427]
[110.23267365 166.35110474]
[110.84850311 181.33845520]
[111.46432495 196.32580566]
[112.08014679 211.31317139]
[112.69597626 226.30052185]
[113.31179810 241.28787231]
[113.92762756 256.27523804]
[114.54344940 271.26257324]
[129.33872986 274.12554932]
[143.07469177 280.32391357]
[155.01060486 289.52343750]
[164.50274658 301.22793579]
[171.03924561 314.80627441]
[174.26759338 329.52615356]
[174.01365662 344.59371948]
[170.29118347 359.19647217]
[163.30087280 372.54684448]
[153.41972351 383.92486572]
[141.18061829 392.71697998]
[127.24359894 398.44897461]
[112.36026001 400.81179810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[25 54]
[26 53]
[27 52]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[69 91]
[92 117]
[93 116]
[94 115]
[95 114]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
