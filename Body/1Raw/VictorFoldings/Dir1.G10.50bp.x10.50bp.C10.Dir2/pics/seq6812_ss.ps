%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUACCAACAGGGGGGGGGGCCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCAGxxxxxxxxxxAUUUCUCUACUCAGAAACCUGAAACAUCGGCAUUAUCCUCCUGCUUGCAACCCCCCCCCCCUAUAGCAACA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 374.87716675]
[71.01555634 369.32415771]
[58.81560135 360.45782471]
[49.20452881 348.83551025]
[42.78650284 335.18780518]
[39.96496582 320.37261963]
[40.91728210 305.32122803]
[45.58358765 290.97982788]
[53.67055511 278.24987793]
[64.66983032 267.93157959]
[77.88998413 260.67361450]
[92.50000000 256.93218994]
[92.50000000 241.93217468]
[92.50000000 226.93217468]
[92.50000000 211.93217468]
[92.50000000 196.93217468]
[92.50000000 181.93217468]
[92.50000000 166.93217468]
[92.50000000 151.93217468]
[92.50000000 136.93217468]
[92.50000000 121.93217468]
[84.66161346 118.12216187]
[78.61843872 111.55635834]
[75.31911469 103.04139709]
[75.36196136 93.70138550]
[78.89282990 84.82978821]
[85.56416321 77.71029663]
[94.56388092 73.43154907]
[104.71254730 72.72237396]
[100.45970154 58.33789062]
[96.20685577 43.95340729]
[91.95401001 29.56892776]
[80.62153625 18.52874374]
[84.43286133 4.13002586]
[80.18001556 -10.25445557]
[75.92716980 -24.63893700]
[71.67432404 -39.02341843]
[67.27402496 -53.36347961]
[62.72673416 -67.65760803]
[58.17944336 -81.95173645]
[46.69038391 -85.28187561]
[38.34142303 -93.67952728]
[35.14381409 -104.95636749]
[37.78736877 -116.25231934]
[45.49555588 -124.76084137]
[41.53894424 -139.22961426]
[37.58233261 -153.69837952]
[33.62572479 -168.16714478]
[18.72267342 -166.25790405]
[3.69894314 -166.44142151]
[-11.15302467 -168.71412659]
[-25.54413223 -173.03178406]
[-39.19425201 -179.31034851]
[-51.83768082 -187.42759705]
[-63.22830963 -197.22554016]
[-73.14441681 -208.51345825]
[-81.39299011 -221.07160950]
[-87.81345367 -234.65556335]
[-92.28083801 -249.00090027]
[-94.70819092 -263.82836914]
[-95.04825592 -278.84936523]
[-93.29441833 -293.77151489]
[-89.48081207 -308.30432129]
[-83.68167114 -322.16491699]
[-76.00988007 -335.08349609]
[-66.61476898 -346.80859375]
[-55.67921829 -357.11199951]
[-43.41609192 -365.79312134]
[-30.06409836 -372.68298340]
[-15.88313293 -377.64749146]
[-1.14923429 -380.58999634]
[13.85079765 -381.45324707]
[28.82498360 -380.22039795]
[43.48184586 -376.91546631]
[57.53608322 -371.60281372]
[70.71412659 -364.38580322]
[82.75946808 -355.40490723]
[93.43762970 -344.83502197]
[102.54076385 -332.88180542]
[109.89167786 -319.77798462]
[115.34728241 -305.77862549]
[118.80137634 -291.15618896]
[120.18673706 -276.19534302]
[119.47638702 -261.18728638]
[116.68415833 -246.42417908]
[111.86439514 -232.19335938]
[105.11093140 -218.77185059]
[96.55521393 -206.42091370]
[86.36378479 -195.38095093]
[74.73501587 -185.86685181]
[61.89527893 -178.06382751]
[48.09449005 -172.12374878]
[52.05110168 -157.65498352]
[56.00771332 -143.18621826]
[59.96432114 -128.71745300]
[76.36014557 -120.67668152]
[81.82521820 -102.91958618]
[72.47357178 -86.49903107]
[77.02086639 -72.20489502]
[81.56815338 -57.91077042]
[86.62412262 -52.45647049]
[86.05880737 -43.27626419]
[90.31165314 -28.89178276]
[94.56449890 -14.50730228]
[98.81734467 -0.12282079]
[109.84562683 9.88848877]
[106.33848572 25.31608009]
[110.59133911 39.70056152]
[114.84418488 54.08504105]
[119.09703064 68.46952057]
[130.07783508 78.68823242]
[144.73056030 81.89722443]
[159.38328552 85.10622406]
[168.37631226 72.81617737]
[181.59390259 65.25209045]
[196.74600220 63.72449112]
[211.20744324 68.49803925]
[222.47267151 78.74569702]
[228.58993530 92.69198608]
[228.49937439 107.92063141]
[222.21667480 121.79318237]
[210.83035278 131.90612793]
[196.31317139 136.50733948]
[181.18031311 134.79965210]
[168.05361938 127.07889557]
[159.20739746 114.68276215]
[156.17428589 99.75894928]
[141.52156067 96.54994965]
[126.86883545 93.34095764]
[125.35520172 106.52304840]
[118.11594391 116.76046753]
[107.50000000 121.93217468]
[107.50000000 136.93217468]
[107.50000000 151.93217468]
[107.50000000 166.93217468]
[107.50000000 181.93217468]
[107.50000000 196.93217468]
[107.50000000 211.93217468]
[107.50000000 226.93217468]
[107.50000000 241.93217468]
[107.50000000 256.93218994]
[122.11001587 260.67361450]
[135.33016968 267.93157959]
[146.32945251 278.24987793]
[154.41641235 290.97982788]
[159.08271790 305.32122803]
[160.03503418 320.37261963]
[157.21350098 335.18780518]
[150.79547119 348.83551025]
[141.18440247 360.45782471]
[128.98443604 369.32415771]
[114.96250153 374.87716675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[29 110]
[30 109]
[31 108]
[32 107]
[34 105]
[35 104]
[36 103]
[37 102]
[38 100]
[39 99]
[40 98]
[45 95]
[46 94]
[47 93]
[48 92]
[111 129]
[112 128]
[113 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
