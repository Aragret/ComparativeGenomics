%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCACCUUGGGGGGGGGGACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCGAxxxxxxxxxxCCCAGUCCUAGCUGCUGGCAUCACUAUACUACUAACAGACCGCAACCUCACCCCCCCCCCACACCACCUU\
) } def
/len { sequence length } bind def

/coor [
[63.38438797 339.09619141]
[50.82616425 330.74502563]
[40.73994064 319.53259277]
[33.75974655 306.16369629]
[30.32436371 291.47869873]
[30.64974213 276.40072632]
[34.71542740 261.87762451]
[42.26584625 248.82226562]
[52.82637405 238.05537415]
[65.73316956 230.25373840]
[80.17489624 225.90779114]
[79.55091858 210.92077637]
[78.92694092 195.93376160]
[78.30296326 180.94674683]
[77.67898560 165.95971680]
[77.05500793 150.97270203]
[76.43103027 135.98568726]
[75.80705261 120.99867249]
[68.90005493 107.68351746]
[57.00767899 98.54178619]
[45.11529922 89.40005493]
[33.22291946 80.25831604]
[21.33053780 71.11658478]
[9.74715424 81.30156708]
[-3.58899808 89.04190063]
[-18.16964340 94.04467010]
[-33.43947983 96.12123108]
[-48.81732178 95.19437408]
[-63.71823883 91.30116272]
[-77.57577515 84.59143829]
[-89.86351013 75.32210541]
[-100.11504364 63.84724426]
[-107.94169617 50.60461807]
[-113.04725647 36.09894943]
[-115.23917389 20.88270187]
[-114.43585205 5.53503656]
[-110.66963196 -9.36024380]
[-104.08556366 -23.23689079]
[-116.16555023 -32.12924194]
[-128.24554443 -41.02159119]
[-145.45571899 -38.06400681]
[-159.22859192 -48.24201965]
[-161.36759949 -64.89382172]
[-173.62995911 -73.53294373]
[-180.27285767 -74.52256012]
[-184.71316528 -78.19882965]
[-186.21257019 -82.79528046]
[-198.10494995 -91.93701172]
[-209.99732971 -101.07875061]
[-221.88970947 -110.22048187]
[-237.52610779 -107.92293549]
[-250.15727234 -117.42182922]
[-252.28938293 -133.08163452]
[-242.65747070 -145.61167908]
[-226.97599792 -147.57809448]
[-214.54849243 -137.81425476]
[-212.74797058 -122.11286163]
[-200.85559082 -112.97113037]
[-188.96321106 -103.82939148]
[-177.07083130 -94.68766022]
[-164.99084473 -85.79531097]
[-152.72846985 -77.15618896]
[-140.42697144 -81.11468506]
[-127.91094971 -77.18740845]
[-119.83967590 -66.60050201]
[-119.35318756 -53.10157776]
[-107.27320099 -44.20922852]
[-95.19321442 -35.31687927]
[-84.50095367 -45.26730347]
[-72.15144348 -53.07405472]
[-58.56872940 -58.46726227]
[-44.21957016 -61.25994873]
[-29.59734726 -61.35453796]
[-15.20512772 -58.74625015]
[-1.53834164 -53.52331924]
[10.93226433 -45.86401749]
[21.77684402 -36.03055191]
[30.62126923 -24.36011696]
[37.16003036 -11.25330544]
[41.16680145 2.83962822]
[42.50225830 17.43423843]
[41.11894226 32.02853775]
[37.06291962 46.12027359]
[30.47227287 59.22420120]
[42.36465073 68.36593628]
[54.25703049 77.50767517]
[66.14941406 86.64940643]
[78.04179382 95.79113770]
[95.75295258 80.50131989]
[114.30390930 89.82489777]
[129.06996155 87.18603516]
[142.82864380 74.99265289]
[159.08976746 81.51767731]
[173.79772949 78.57219696]
[188.50569153 75.62670898]
[196.36584473 70.84447479]
[203.55010986 72.77629089]
[218.31616211 70.13742828]
[219.75622559 55.10982513]
[225.19834900 41.02842712]
[234.23870850 28.93815994]
[246.20643616 19.73620605]
[260.21347046 14.10541248]
[275.22036743 12.46361923]
[290.11352539 14.93265915]
[303.78778076 21.32931328]
[315.22842407 31.17890739]
[323.58645630 43.75053406]
[328.24166870 58.11130142]
[328.84860229 73.19553375]
[325.36224365 87.88389587]
[318.04129028 101.08640289]
[307.42901611 111.82334137]
[294.31289673 119.29796600]
[279.66622925 122.95560455]
[264.57595825 122.52483368]
[250.16180420 118.03762817]
[237.49343872 109.82695770]
[227.51092529 98.50212097]
[220.95503235 84.90348053]
[206.18898010 87.54235077]
[191.45117188 90.33467102]
[176.74320984 93.28015900]
[162.03524780 96.22563934]
[155.03654480 106.14155579]
[142.75881958 108.68644714]
[131.70883179 101.95209503]
[116.94277191 104.59095764]
[112.76441193 114.28249359]
[103.15264130 120.51572418]
[90.79407501 120.37469482]
[91.41805267 135.36170959]
[92.04203033 150.34872437]
[92.66600037 165.33573914]
[93.28997803 180.32276917]
[93.91395569 195.30978394]
[94.53793335 210.29679871]
[95.16191101 225.28381348]
[109.91491699 228.41426086]
[123.42555237 235.11601257]
[134.84452820 244.96780396]
[143.45404053 257.35034180]
[148.71289062 271.48522949]
[150.29049683 286.48394775]
[148.08769226 301.40368652]
[142.24295044 315.30654907]
[133.12367249 327.31863403]
[121.30309296 336.68478394]
[107.52428436 342.81628418]
[92.65338898 345.32766724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[38 68]
[39 67]
[40 66]
[43 62]
[44 61]
[47 60]
[48 59]
[49 58]
[50 57]
[90 128]
[91 127]
[93 124]
[94 123]
[95 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
