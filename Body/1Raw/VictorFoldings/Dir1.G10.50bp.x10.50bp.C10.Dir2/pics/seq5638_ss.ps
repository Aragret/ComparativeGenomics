%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCUCCUUAACCGGGGGGGGGGUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCACACUACUCCCCxxxxxxxxxxACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCCCCCCCCCCCACCCUCGUUAACC\
) } def
/len { sequence length } bind def

/coor [
[79.27368164 173.52903748]
[65.32782745 168.07305908]
[52.71426010 160.00132751]
[41.91767120 149.62402344]
[33.35292435 137.33988953]
[27.34911919 123.62095642]
[24.13695717 108.99437714]
[23.83986664 94.02218628]
[26.46926308 79.27969360]
[31.92411232 65.33338928]
[39.99480820 52.71916580]
[50.37123108 41.92173004]
[62.65466309 33.35597610]
[76.37310028 27.35104942]
[90.99942017 24.13769150]
[90.70306396 9.14062023]
[90.40670776 -5.85645199]
[90.11034393 -20.85352325]
[89.81398773 -35.85059738]
[89.51763153 -50.84766769]
[89.22127533 -65.84474182]
[88.92491913 -80.84181213]
[88.62856293 -95.83888245]
[88.33220673 -110.83596039]
[88.03584290 -125.83303070]
[73.04241943 -126.40121460]
[58.10662842 -127.83226013]
[43.27809143 -130.12141418]
[28.60606766 -133.26106262]
[14.13929462 -137.24078369]
[-0.07416883 -142.04736328]
[-13.98710728 -147.66482544]
[-27.55330276 -154.07450867]
[-40.72769165 -161.25512695]
[-53.46650314 -169.18281555]
[-65.72743225 -177.83125305]
[-77.46973419 -187.17170715]
[-88.65441132 -197.17314148]
[-99.24430847 -207.80233765]
[-109.20424652 -219.02398682]
[-118.50113678 -230.80079651]
[-127.10409546 -243.09367371]
[-134.98455811 -255.86177063]
[-142.11631775 -269.06265259]
[-148.47570801 -282.65249634]
[-154.04159546 -296.58615112]
[-158.79548645 -310.81732178]
[-162.72160339 -325.29873657]
[-165.80688477 -339.98229980]
[-168.04109192 -354.81921387]
[-169.41680908 -369.76019287]
[-169.92945862 -384.75561523]
[-169.57733154 -399.75567627]
[-168.36160278 -414.71054077]
[-166.28631592 -429.57052612]
[-163.35836792 -444.28625488]
[-159.58746338 -458.80886841]
[-154.98616028 -473.09008789]
[-149.56971741 -487.08251953]
[-143.35614014 -500.73965454]
[-136.36607361 -514.01611328]
[-128.62271118 -526.86779785]
[-120.15181732 -539.25207520]
[-110.98149872 -551.12768555]
[-101.14223480 -562.45532227]
[-90.66670990 -573.19726562]
[-79.58971405 -583.31781006]
[-67.94805145 -592.78338623]
[-55.78038788 -601.56256104]
[-43.12715149 -609.62615967]
[-30.03037071 -616.94732666]
[-16.53355217 -623.50183105]
[-2.68153358 -629.26788330]
[11.47967243 -634.22631836]
[25.90302277 -638.36065674]
[40.54060364 -641.65716553]
[55.34379196 -644.10485840]
[70.26341248 -645.69567871]
[85.24989319 -646.42431641]
[100.25347137 -646.28833008]
[115.22428894 -645.28820801]
[130.11262512 -643.42718506]
[144.86900330 -640.71154785]
[159.44442749 -637.15026855]
[173.79046631 -632.75518799]
[187.85948181 -627.54089355]
[201.60470581 -621.52465820]
[214.98049927 -614.72662354]
[227.94241333 -607.16918945]
[240.44741821 -598.87762451]
[252.45394897 -589.87933350]
[263.92211914 -580.20428467]
[274.81384277 -569.88458252]
[285.09295654 -558.95452881]
[294.72528076 -547.45043945]
[303.67880249 -535.41052246]
[311.92385864 -522.87475586]
[319.43298340 -509.88482666]
[326.18124390 -496.48382568]
[332.14624023 -482.71630859]
[337.30816650 -468.62802124]
[341.64987183 -454.26571655]
[345.15689087 -439.67715454]
[347.81762695 -424.91076660]
[349.62322998 -410.01562500]
[350.56768799 -395.04116821]
[350.64785767 -380.03720093]
[349.86346436 -365.05352783]
[348.21716309 -350.13992310]
[345.71438599 -335.34594727]
[342.36346436 -320.72073364]
[338.17550659 -306.31286621]
[333.16442871 -292.17019653]
[327.34689331 -278.33972168]
[320.74221802 -264.86740112]
[313.37234497 -251.79794312]
[305.26174927 -239.17478943]
[296.43737793 -227.03987122]
[286.92852783 -215.43350220]
[276.76681519 -204.39424133]
[265.98599243 -193.95874023]
[254.62187195 -184.16168213]
[242.71218872 -175.03561401]
[230.29652405 -166.61083984]
[217.41610718 -158.91535950]
[204.11372375 -151.97471619]
[190.43357849 -145.81199646]
[176.42109680 -140.44764709]
[162.12284851 -135.89949036]
[147.58630371 -132.18264771]
[132.85978699 -129.30946350]
[117.99219513 -127.28946686]
[103.03292084 -126.12938690]
[103.32927704 -111.13231659]
[103.62563324 -96.13523865]
[103.92198944 -81.13816833]
[104.21834564 -66.14109802]
[104.51470184 -51.14402390]
[104.81106567 -36.14695358]
[105.10742188 -21.14988136]
[105.40377808 -6.15280914]
[105.70013428 8.84426308]
[105.99649048 23.84133530]
[120.73833466 26.47434807]
[134.68330383 31.93261719]
[147.29554749 40.00640488]
[158.09043884 50.38547516]
[166.65318298 62.67100906]
[172.65473938 76.39092255]
[175.86451721 91.01802826]
[176.15914917 105.99026489]
[173.52734375 120.73233032]
[168.07022095 134.67773438]
[159.99746704 147.29064941]
[149.61927795 158.08638000]
[137.33444214 166.65013123]
[123.61502075 172.65281677]
[108.98817444 175.86378479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 134]
[25 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
