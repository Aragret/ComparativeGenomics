%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAAAGUAAGGGGGGGGGGAAGGAACUCGGCAAAUCUUACCCCGCCUGUUUACCAAAAACAUCACCUCUxxxxxxxxxxAGUAUAAAUAGUACCGUUAACUUCCAAUUAACUAGUUUUGACAACAUUCACCCCCCCCCCAAAAAGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[68.13372040 450.89367676]
[54.64484406 444.16213989]
[43.15934372 434.39758301]
[34.34497452 422.16769409]
[28.71419144 408.18350220]
[26.59436226 393.25802612]
[28.10873222 378.25903320]
[33.16925430 364.05850220]
[41.48171997 351.48208618]
[52.56285095 341.26092529]
[65.76840210 333.98928833]
[80.33062744 330.08993530]
[80.02265167 315.09307861]
[79.71467590 300.09625244]
[79.40670013 285.09942627]
[79.09871674 270.10256958]
[78.79074097 255.10574341]
[78.48276520 240.10890198]
[78.17478943 225.11206055]
[77.86680603 210.11521912]
[77.40488434 195.12234497]
[76.78905487 180.13497925]
[76.17323303 165.14762878]
[84.10677338 93.22447205]
[74.70291138 81.53826904]
[60.02327728 75.63751984]
[58.07222748 60.87125015]
[48.66836929 49.18503952]
[39.26451492 37.49883270]
[10.27828217 39.94142532]
[-11.31306839 16.81467628]
[-26.29331017 16.04501534]
[-41.27355194 15.27535534]
[-48.54759979 28.69366264]
[-60.92829895 37.62008667]
[-75.95745087 40.28227615]
[-90.65101624 36.15165329]
[-102.09156036 26.04835892]
[-108.00756836 11.97840405]
[-107.22441101 -3.26460814]
[-99.89757538 -16.65416718]
[-87.48181915 -25.53176498]
[-72.44229889 -28.13475037]
[-57.76511765 -23.94629860]
[-46.36444473 -13.79802799]
[-40.50389099 0.29511437]
[-25.52364922 1.06477439]
[-10.54340839 1.83443451]
[-4.83874559 -12.03844643]
[-16.02704239 -22.02954292]
[-27.21533775 -32.02064133]
[-38.40363693 -42.01173782]
[-49.59193039 -52.00283432]
[-65.62609863 -52.53664398]
[-75.08992767 -65.49100494]
[-70.72357941 -80.92844391]
[-55.87653351 -87.00667572]
[-41.93818283 -79.06300354]
[-39.60083389 -63.19113159]
[-28.41253853 -53.20003510]
[-17.22424126 -43.20893478]
[-6.03594494 -33.21783829]
[5.15235138 -23.22674179]
[9.10841560 -22.91050148]
[12.83871555 -22.15926743]
[16.29870987 -21.01125908]
[15.37529659 -35.98281097]
[0.90290457 -40.55602646]
[-10.93771648 -50.05150604]
[-18.54521942 -63.18506241]
[-20.89075279 -78.18048859]
[-17.65710068 -93.00978851]
[-9.28159046 -105.66740417]
[3.10306048 -114.44150543]
[17.82192993 -118.14546204]
[32.88441086 -116.27835083]
[46.25342560 -109.09268188]
[56.12092972 -97.56025696]
[61.15241623 -83.24073792]
[60.66742325 -68.07073212]
[54.73154068 -54.10184479]
[44.14755249 -43.22326279]
[30.34684563 -36.90622330]
[31.27025986 -21.93467331]
[39.88394165 -19.13316536]
[47.35624695 -13.94833183]
[53.04171753 -6.80201483]
[56.44179535 1.71345925]
[57.24847031 10.88434887]
[55.37208557 19.93531609]
[50.95072174 28.09497452]
[60.35457993 39.78118515]
[69.75843811 51.46739197]
[83.76544952 56.53226471]
[86.38912201 72.13440704]
[95.79297638 83.82061768]
[110.33993530 87.47932434]
[124.15351868 81.63253784]
[137.96710205 75.78574371]
[151.78068542 69.93895721]
[165.59426880 64.09217072]
[170.00833130 49.09049988]
[183.06111145 40.47896194]
[198.58950806 42.32365799]
[209.26147461 53.75358200]
[210.03804016 69.37187195]
[200.55252075 81.80404663]
[185.28370667 85.18002319]
[171.44105530 77.90575409]
[157.62747192 83.75254059]
[143.81388855 89.59932709]
[130.00030518 95.44612122]
[116.18672180 101.29290771]
[116.72525787 108.77354431]
[117.80233002 123.73482513]
[118.34085846 131.21546936]
[132.84948730 135.02333069]
[147.35810852 138.83119202]
[161.88002014 132.01254272]
[176.20092773 139.24377441]
[179.33509827 154.97770691]
[168.87821960 167.14460754]
[152.85194397 166.41107178]
[143.55024719 153.33981323]
[129.04162598 149.53195190]
[114.53300476 145.72409058]
[108.68989563 150.42602539]
[91.16058350 164.53181458]
[91.77641296 179.51916504]
[92.39223480 194.50651550]
[95.88935089 203.01333618]
[92.86364746 209.80725098]
[93.17162323 224.80409241]
[93.47959900 239.80091858]
[93.78758240 254.79776001]
[94.09555817 269.79458618]
[94.40353394 284.79144287]
[94.71150970 299.78826904]
[95.01949310 314.78512573]
[95.32746887 329.78195190]
[110.03750610 333.08016968]
[123.53046417 339.80352783]
[135.02188110 349.56112671]
[143.84365845 361.78567505]
[149.48292542 375.76644897]
[151.61180115 390.69064331]
[150.10652161 405.69055176]
[145.05461121 419.89413452]
[136.74977112 432.47558594]
[125.67483521 442.70346069]
[112.47369385 449.98312378]
[97.91383362 453.89129639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 130]
[22 129]
[23 128]
[24 96]
[25 95]
[27 93]
[28 92]
[29 91]
[31 48]
[32 47]
[33 46]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[66 84]
[67 83]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
