%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUAGGCCUGGGGGGGGGGAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAxxxxxxxxxxAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACCCCCCCCCCCUACUAGGCCU\
) } def
/len { sequence length } bind def

/coor [
[84.62800598 424.44546509]
[71.40780640 417.17300415]
[60.52100372 406.72598267]
[52.70987320 393.81674194]
[48.50699234 379.32540894]
[48.19892120 364.24008179]
[51.80665970 349.58926392]
[59.08423233 336.37188721]
[69.53543854 325.48910522]
[82.44770050 317.68295288]
[96.94064331 313.48565674]
[96.62858582 298.48892212]
[96.31652832 283.49215698]
[96.00447083 268.49542236]
[95.69241333 253.49865723]
[95.38035583 238.50190735]
[95.06830597 223.50514221]
[94.75624847 208.50839233]
[94.44419098 193.51164246]
[94.13213348 178.51489258]
[79.00457764 175.88288879]
[64.67555237 170.36477661]
[51.69003677 162.17047119]
[40.54191589 151.61158752]
[31.65519905 139.08973694]
[25.36787224 125.08116913]
[21.91906738 110.11868286]
[21.43995476 94.77133942]
[23.94875526 79.62286377]
[29.35004997 65.24939728]
[37.43841171 52.19762421]
[47.90620804 40.96393967]
[60.35531616 31.97560310]
[74.31224823 25.57447433]
[89.24617767 22.00400734]
[88.62220001 7.01699114]
[87.99822235 -7.97002506]
[75.85345459 0.83364338]
[61.34283829 -2.96663928]
[55.07246780 -16.59317398]
[61.62547302 -30.08606720]
[76.21213531 -33.58310318]
[88.17047882 -24.52882004]
[89.10610962 -39.49961090]
[90.04174042 -54.47040176]
[90.97737122 -69.44119263]
[91.91299438 -84.41198730]
[92.84862518 -99.38277435]
[78.04778290 -101.90608978]
[63.59900665 -105.98837280]
[49.66601562 -111.58335876]
[36.40668106 -118.62765503]
[23.97123909 -127.04145050]
[12.50059700 -136.72940063]
[2.12472320 -147.58174133]
[-7.03881598 -159.47550964]
[-14.88618946 -172.27592468]
[-21.32848167 -185.83796692]
[-26.29269409 -200.00796509]
[-29.72258186 -214.62535095]
[-31.57927895 -229.52450562]
[-31.84174919 -244.53660583]
[-30.50701714 -259.49154663]
[-27.59020805 -274.21990967]
[-23.12437057 -288.55477905]
[-17.16010475 -302.33374023]
[-9.76499271 -315.40066528]
[-1.02282608 -327.60748291]
[8.96734047 -338.81588745]
[20.09230995 -348.89892578]
[32.22602844 -357.74227905]
[45.23101044 -365.24575806]
[58.95989990 -371.32440186]
[73.25714111 -375.90927124]
[87.96073151 -378.94842529]
[102.90406799 -380.40747070]
[117.91783142 -380.26980591]
[132.83190918 -378.53704834]
[147.47731018 -375.22882080]
[161.68807983 -370.38259888]
[175.30322266 -364.05328369]
[188.16844177 -356.31262207]
[200.13800049 -347.24829102]
[211.07623291 -336.96301270]
[220.85922241 -325.57330322]
[229.37611389 -313.20825195]
[236.53041077 -300.00793457]
[242.24105835 -286.12194824]
[246.44332886 -271.70761108]
[249.08961487 -256.92828369]
[250.14993286 -241.95135498]
[249.61227417 -226.94659424]
[247.48272705 -212.08398438]
[243.78543091 -197.53193665]
[238.56225586 -183.45535278]
[231.87239075 -170.01370239]
[223.79165649 -157.35929871]
[214.41159058 -145.63554382]
[203.83850098 -134.97525024]
[192.19216919 -125.49922943]
[179.60455322 -117.31484222]
[166.21829224 -110.51482391]
[152.18507385 -105.17623138]
[137.66387939 -101.35954285]
[122.81925964 -99.10800934]
[107.81941986 -98.44715118]
[106.88378906 -83.47635651]
[105.94815826 -68.50556183]
[105.01252747 -53.53477478]
[104.07690430 -38.56398392]
[103.14127350 -23.59319115]
[102.98523712 -8.59400272]
[103.60921478 6.39301395]
[104.23319244 21.38002968]
[118.67825317 23.51377678]
[132.48088074 28.27823448]
[145.16635132 35.50953293]
[156.29833984 44.95895386]
[165.49397278 56.30149078]
[172.43696594 69.14701843]
[176.88850403 83.05371857]
[178.69551086 97.54328156]
[177.79582214 112.11734009]
[174.22036743 126.27463531]
[168.09214783 139.52821350]
[159.62191772 151.42224121]
[149.10101318 161.54762268]
[136.89129639 169.55610657]
[123.41272736 175.17222595]
[109.12889099 178.20283508]
[109.44094086 193.19958496]
[109.75299835 208.19633484]
[110.06505585 223.19309998]
[110.37711334 238.18984985]
[110.68917084 253.18659973]
[111.00122833 268.18334961]
[111.31327820 283.18011475]
[111.62533569 298.17684937]
[111.93739319 313.17361450]
[126.59238434 316.76437378]
[139.81819153 324.02664185]
[150.71305847 334.46524048]
[158.53416443 347.36843872]
[162.74822998 361.85650635]
[163.06794739 376.94161987]
[159.47152710 391.59521484]
[152.20416260 404.81820679]
[141.76136780 415.70904541]
[128.85513306 423.52517700]
[114.36544037 427.73364258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[35 114]
[36 113]
[37 112]
[43 111]
[44 110]
[45 109]
[46 108]
[47 107]
[48 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
