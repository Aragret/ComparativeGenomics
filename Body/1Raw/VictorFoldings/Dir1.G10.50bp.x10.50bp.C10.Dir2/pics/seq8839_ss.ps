%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCUCAGCCGGGGGGGGGGCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCACUUCCACUCCAUAACxxxxxxxxxxAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCCCCCCCCCCCCCUCUUAGCC\
) } def
/len { sequence length } bind def

/coor [
[175.21942139 504.62518311]
[161.73052979 497.89364624]
[150.24504089 488.12908936]
[141.43066406 475.89920044]
[135.79988098 461.91500854]
[133.68005371 446.98953247]
[135.19442749 431.99050903]
[140.25494385 417.79000854]
[148.56741333 405.21359253]
[159.64854431 394.99243164]
[172.85409546 387.72079468]
[187.41632080 383.82141113]
[187.10835266 368.82458496]
[186.80036926 353.82775879]
[186.49238586 338.83090210]
[186.18441772 323.83407593]
[185.87643433 308.83721924]
[185.56845093 293.84039307]
[185.26048279 278.84356689]
[184.95249939 263.84671021]
[180.69966125 249.46223450]
[172.80317688 236.70898438]
[164.90669250 223.95571899]
[153.17260742 220.86158752]
[146.49971008 210.24821472]
[148.94764709 197.54344177]
[141.31468201 184.63073730]
[133.68170166 171.71804810]
[126.04873657 158.80534363]
[118.41576385 145.89265442]
[110.78279114 132.97994995]
[100.65988159 134.69165039]
[90.47919464 133.36614990]
[81.13204193 129.11950684]
[73.43674469 122.32350922]
[68.06700897 113.57312775]
[65.49295044 103.63444519]
[50.58850098 101.94404602]
[35.68405151 100.25364685]
[19.26443672 104.47650909]
[10.66120529 89.86758423]
[22.31759644 77.55641174]
[37.37445068 85.34919739]
[52.27889633 87.03959656]
[67.18334198 88.72999573]
[71.02474976 80.91123962]
[76.69258118 74.29571533]
[83.82956696 69.30043793]
[79.87296295 54.83167267]
[75.91635132 40.36290359]
[71.95973969 25.89413643]
[68.00312805 11.42536926]
[53.03738403 12.88636684]
[38.04001236 11.79695702]
[23.44251442 8.18848419]
[9.66489124 2.16477132]
[-2.89644766 -6.10086727]
[-13.88008690 -16.37061310]
[-22.97000694 -28.34898376]
[-29.90467072 -41.69133759]
[-34.48455429 -56.01379395]
[-36.57788849 -70.90425873]
[-36.12443924 -85.93431091]
[-33.13725662 -100.67149353]
[-27.70228577 -114.69181061]
[-19.97590256 -127.59185028]
[-10.18040943 -139.00045776]
[1.40235555 -148.58938599]
[14.43913460 -156.08274841]
[28.55483437 -161.26492310]
[43.34331512 -163.98684692]
[58.37908554 -164.17016602]
[73.22953796 -161.80963135]
[87.46739197 -156.97314453]
[100.68299103 -149.79988098]
[112.49610901 -140.49620056]
[122.56684875 -129.32981873]
[130.60546875 -116.62200165]
[136.38066101 -102.73837280]
[139.72627258 -88.07839203]
[140.54603577 -73.06386566]
[138.81639099 -58.12678909]
[134.58706665 -43.69692993]
[127.97977448 -30.18946266]
[119.18460846 -17.99302483]
[108.45462799 -7.45853233]
[96.09855652 1.11091554]
[82.47189331 7.46875906]
[86.42850494 21.93752670]
[90.38511658 36.40629578]
[94.34172821 50.87506104]
[98.29833984 65.34382629]
[118.45068359 70.61431885]
[131.95350647 86.47524261]
[133.94047546 107.21040344]
[123.69549561 125.34697723]
[131.32846069 138.25967407]
[138.96142578 151.17237854]
[146.59440613 164.08506775]
[154.22737122 176.99777222]
[161.86033630 189.91047668]
[178.09390259 198.54193115]
[177.65994263 216.05924988]
[185.55642700 228.81250000]
[193.45291138 241.56575012]
[193.32234192 226.56632996]
[196.47138977 211.90060425]
[202.74797058 198.27693176]
[211.84892273 186.35330200]
[223.33468628 176.70565796]
[236.65051270 169.79992676]
[251.15322876 165.96968079]
[266.14239502 165.39990234]
[280.89407349 168.11810303]
[294.69570923 173.99302673]
[306.88073730 182.74089050]
[316.86062622 193.93917847]
[324.15335083 207.04705811]
[328.40667725 221.43139648]
[329.41516113 236.39744568]
[327.13012695 251.22238159]
[321.66192627 265.19015503]
[313.27465820 277.62612915]
[302.37341309 287.92968750]
[289.48474121 295.60314941]
[275.23114014 300.27590942]
[260.30102539 301.72225952]
[245.41554260 299.87234497]
[231.29360962 294.81555176]
[218.61734009 286.79608154]
[207.99896240 276.20126343]
[199.94934082 263.53875732]
[200.25732422 278.53558350]
[200.56529236 293.53240967]
[200.87327576 308.52926636]
[201.18124390 323.52609253]
[201.48922729 338.52291870]
[201.79721069 353.51977539]
[202.10517883 368.51660156]
[202.41316223 383.51345825]
[217.12319946 386.81167603]
[230.61614990 393.53503418]
[242.10757446 403.29263306]
[250.92935181 415.51718140]
[256.56860352 429.49795532]
[258.69747925 444.42214966]
[257.19223022 459.42205811]
[252.14030457 473.62564087]
[243.83546448 486.20709229]
[232.76052856 496.43496704]
[219.55938721 503.71459961]
[204.99952698 507.62280273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 105]
[22 104]
[23 103]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[37 45]
[38 44]
[39 43]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
