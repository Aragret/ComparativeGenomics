%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACACAGACAUGGGGGGGGGGCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGxxxxxxxxxxUUUACCUCACCCCCACUGAUGUUCGCCGACCGUUGACUAUUCUCUACAAACCCCCCCCCCCCACAAAGACAU\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 385.68063354]
[70.87159729 380.52563477]
[58.28185654 372.24340820]
[47.94191742 361.28063965]
[40.40940475 348.22851562]
[36.09054184 333.79092407]
[35.21823120 318.74645996]
[37.83952332 303.90646362]
[43.81304932 290.07122803]
[52.81666565 277.98687744]
[64.36482239 268.30508423]
[77.83473969 261.54803467]
[92.50000000 258.08004761]
[92.50000000 243.08004761]
[92.50000000 228.08004761]
[92.50000000 213.08004761]
[92.50000000 198.08004761]
[92.50000000 183.08004761]
[92.50000000 168.08004761]
[92.50000000 153.08004761]
[92.50000000 138.08004761]
[92.50000000 123.08004761]
[76.29792023 112.84620667]
[71.37071228 92.28382874]
[83.16137695 72.38684845]
[107.38317871 65.75308990]
[100.37094879 52.49304962]
[93.35871887 39.23300934]
[86.34648895 25.97296906]
[72.53128815 31.83932114]
[58.26835251 36.51291656]
[43.66044617 39.96008682]
[28.81282616 42.15598679]
[13.83246708 43.08480453]
[-1.17269313 42.73983765]
[-16.09454155 41.12358093]
[-30.82556343 38.24767303]
[-45.25962067 34.13283920]
[-59.29270935 28.80872345]
[-72.82372284 22.31369209]
[-85.75517273 14.69453812]
[-97.99388123 6.00616026]
[-109.45166016 -3.68884039]
[-120.04596710 -14.32061005]
[-129.70046997 -25.81254578]
[-138.34558105 -38.08184433]
[-145.91905212 -51.04010773]
[-152.36627197 -64.59396362]
[-157.64082336 -78.64575958]
[-161.70468140 -93.09425354]
[-164.52856445 -107.83533478]
[-166.09214783 -122.76279449]
[-166.38414001 -137.76907349]
[-165.40245056 -152.74606323]
[-163.15414429 -167.58584595]
[-159.65544128 -182.18148804]
[-154.93151855 -196.42784119]
[-149.01643372 -210.22224426]
[-141.95280457 -223.46531677]
[-133.79153442 -236.06164551]
[-124.59140015 -247.92045593]
[-114.41870117 -258.95629883]
[-103.34674835 -269.08969116]
[-91.45529175 -278.24758911]
[-78.83003235 -286.36404419]
[-65.56192780 -293.38055420]
[-51.74657440 -299.24652100]
[-37.48351669 -303.91976929]
[-22.87552452 -307.36654663]
[-8.02784729 -309.56207275]
[6.95253563 -310.49050903]
[21.95768738 -310.14514160]
[36.87949371 -308.52850342]
[51.61043930 -305.65222168]
[66.04438782 -301.53701782]
[80.07734680 -296.21252441]
[93.60819244 -289.71716309]
[106.53944397 -282.09765625]
[118.77792358 -273.40896606]
[130.23545837 -263.71368408]
[140.82948303 -253.08163452]
[150.48368835 -241.58944702]
[159.12849426 -229.31991577]
[166.70161438 -216.36146545]
[173.14849854 -202.80743408]
[178.42268372 -188.75550842]
[182.48616028 -174.30691528]
[185.30967712 -159.56575012]
[186.87286377 -144.63825989]
[187.16447449 -129.63195801]
[186.18238831 -114.65499878]
[183.93371582 -99.81528473]
[180.43461609 -85.21972656]
[175.71034241 -70.97350311]
[169.79490662 -57.17924500]
[162.73092651 -43.93635559]
[154.56932068 -31.34024429]
[145.36888123 -19.48167038]
[135.19590759 -8.44607639]
[124.12368774 1.68702590]
[112.23199463 10.84462547]
[99.60652924 18.96074104]
[106.61875916 32.22077942]
[113.63098145 45.48081970]
[120.64321136 58.74085617]
[134.36692810 64.79558563]
[148.88809204 61.03579330]
[158.23301697 47.99540710]
[174.26164246 47.31495285]
[184.67814636 59.51642227]
[181.49189758 75.23989105]
[167.14710999 82.42365265]
[152.64787292 75.55695343]
[138.12670898 79.31674194]
[137.97470093 94.31597137]
[152.41668701 98.36928558]
[166.85865784 102.42259979]
[177.32254028 91.25274658]
[191.78254700 86.23609924]
[206.91587830 88.52545166]
[219.24499512 97.59471893]
[225.93675232 111.35985565]
[225.45343018 126.65773010]
[217.90611267 139.97300720]
[205.02911377 148.24592590]
[189.78146362 149.57543945]
[175.66694641 143.65603638]
[165.92901611 131.84794617]
[162.80534363 116.86457825]
[148.36335754 112.81125641]
[133.92138672 108.75794220]
[121.60131836 120.31153870]
[107.50000000 123.08004761]
[107.50000000 138.08004761]
[107.50000000 153.08004761]
[107.50000000 168.08004761]
[107.50000000 183.08004761]
[107.50000000 198.08004761]
[107.50000000 213.08004761]
[107.50000000 228.08004761]
[107.50000000 243.08004761]
[107.50000000 258.08004761]
[122.16526031 261.54803467]
[135.63517761 268.30508423]
[147.18333435 277.98687744]
[156.18695068 290.07122803]
[162.16047668 303.90646362]
[164.78176880 318.74645996]
[163.90945435 333.79092407]
[159.59059143 348.22851562]
[152.05809021 361.28063965]
[141.71813965 372.24340820]
[129.12840271 380.52563477]
[114.96779633 385.68063354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[26 105]
[27 104]
[28 103]
[29 102]
[106 114]
[107 113]
[115 131]
[116 130]
[117 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
