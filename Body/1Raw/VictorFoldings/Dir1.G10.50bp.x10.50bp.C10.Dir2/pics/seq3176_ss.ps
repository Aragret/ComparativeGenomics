%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCCAAGGGGGGGGGGGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAAxxxxxxxxxxAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCCCCCCCCCCCACCCCAG\
) } def
/len { sequence length } bind def

/coor [
[75.23433685 390.45129395]
[62.36106491 382.54843140]
[52.23677063 371.33792114]
[45.68218613 357.72857666]
[43.22866440 342.82363892]
[45.07510376 327.83139038]
[51.07181549 313.96719360]
[60.73267746 302.35494995]
[73.27452087 293.93600464]
[87.68064880 289.39282227]
[87.36859131 274.39608765]
[87.05653381 259.39932251]
[86.74447632 244.40257263]
[86.43241882 229.40582275]
[86.12036133 214.40905762]
[85.80831146 199.41230774]
[85.49625397 184.41555786]
[85.18419647 169.41880798]
[84.87213898 154.42204285]
[84.56008148 139.42529297]
[71.78272247 131.56787109]
[58.25853729 138.05603027]
[44.73434448 144.54420471]
[31.21015549 151.03236389]
[24.55391312 165.62942505]
[8.95700550 169.38655090]
[-3.61595631 159.42160034]
[-3.52007079 143.37882996]
[9.17110729 133.56488037]
[24.72199059 137.50817871]
[38.24618149 131.02000427]
[51.77037048 124.53184509]
[65.29456329 118.04367828]
[62.28622437 99.11124420]
[68.58905792 81.74018860]
[81.99902344 70.05246735]
[98.71849060 66.47475433]
[101.51081848 51.73694611]
[104.30313873 36.99914169]
[107.09546661 22.26133537]
[109.88778687 7.52353001]
[104.85470581 -7.47575760]
[114.82600403 -18.54022598]
[117.61833191 -33.27803040]
[120.41065216 -48.01583862]
[105.96764374 -52.10205460]
[91.94229889 -57.44876480]
[78.44438934 -64.01412964]
[65.57955170 -71.74675751]
[53.44847107 -80.58612823]
[42.14609528 -90.46306610]
[31.76088142 -101.30027008]
[22.37411118 -113.01292419]
[14.05924797 -125.50934601]
[6.88136864 -138.69174194]
[0.89665055 -152.45695496]
[-3.84806633 -166.69721985]
[-7.31564760 -181.30110168]
[-9.47895432 -196.15431213]
[-10.32105541 -211.14059448]
[-9.83536053 -226.14265442]
[-8.02567005 -241.04307556]
[-4.90614891 -255.72525024]
[-0.50121045 -270.07424927]
[5.15466928 -283.97781372]
[12.01722431 -297.32708740]
[20.03274536 -310.01757812]
[29.13849831 -321.95001221]
[39.26321793 -333.03097534]
[50.32766342 -343.17373657]
[62.24523544 -352.29891968]
[74.92266846 -360.33511353]
[88.26073456 -367.21942139]
[102.15504456 -372.89794922]
[116.49685669 -377.32626343]
[131.17391968 -380.46972656]
[146.07138062 -382.30368042]
[161.07263184 -382.81384277]
[176.06025696 -381.99615479]
[190.91696167 -379.85705566]
[205.52648926 -376.41329956]
[219.77447510 -371.69180298]
[233.54940796 -365.72952271]
[246.74348450 -358.57312012]
[259.25344849 -350.27865601]
[270.98138428 -340.91098022]
[281.83551025 -330.54342651]
[291.73083496 -319.25717163]
[300.58996582 -307.14053345]
[308.34356689 -294.28829956]
[314.93090820 -280.80111694]
[320.30047607 -266.78448486]
[324.41021729 -252.34815979]
[327.22799683 -237.60510254]
[328.73175049 -222.67070007]
[328.90966797 -207.66183472]
[327.76043701 -192.69598389]
[325.29296875 -177.89025879]
[321.52664185 -163.36056519]
[316.49087524 -149.22058105]
[310.22512817 -135.58100891]
[302.77841187 -122.54858398]
[294.20904541 -110.22530365]
[284.58404541 -98.70761871]
[273.97875977 -88.08567047]
[262.47622681 -78.44258881]
[250.16641235 -69.85385132]
[237.14570618 -62.38667297]
[223.51599121 -56.09949875]
[209.38395691 -51.04153824]
[194.86018372 -47.25236893]
[180.05836487 -44.76165390]
[165.09432983 -43.58888626]
[150.08520508 -43.74324036]
[135.14845276 -45.22351074]
[132.35614014 -30.48570633]
[129.56381226 -15.74790096]
[134.79661560 -1.80275965]
[124.62559509 10.31585407]
[121.83326721 25.05365944]
[119.04094696 39.79146576]
[116.24861908 54.52927399]
[113.45629883 69.26707458]
[124.73686218 76.17442322]
[132.69580078 87.12345886]
[135.93040466 100.58518982]
[133.71905518 114.56506348]
[126.16561127 126.89833832]
[114.21853638 135.58512878]
[99.55683899 139.11323547]
[99.86889648 154.11000061]
[100.18094635 169.10675049]
[100.49300385 184.10350037]
[100.80506134 199.10025024]
[101.11711884 214.09701538]
[101.42917633 229.09376526]
[101.74123383 244.09051514]
[102.05328369 259.08728027]
[102.36534119 274.08401489]
[102.67739868 289.08078003]
[117.26004028 293.02072144]
[130.14125061 300.91067505]
[140.27679443 312.11099243]
[146.84504700 325.71374512]
[149.31353760 340.61621094]
[147.48216248 355.61029053]
[141.49938965 369.48052979]
[131.85018921 381.10247803]
[119.31681061 389.53402710]
[104.91526031 394.09164429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 33]
[22 32]
[23 31]
[24 30]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[43 117]
[44 116]
[45 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
