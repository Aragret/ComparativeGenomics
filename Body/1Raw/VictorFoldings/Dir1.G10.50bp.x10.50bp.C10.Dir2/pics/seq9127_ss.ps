%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUUAUUAGGGGGGGGGGCAAUUUUACUGGGUCUCUAUUUUACCCUCCUACAAGCCUCAGAGUACUUCxxxxxxxxxxUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCCCCCCCCCCCUUCUUAUUA\
) } def
/len { sequence length } bind def

/coor [
[75.02099609 364.98831177]
[61.17505646 358.97229004]
[49.46639633 349.44287109]
[40.76387024 337.10720825]
[35.71326828 322.88067627]
[34.68937683 307.81900024]
[37.76817703 293.03985596]
[44.72119904 279.63992310]
[55.03248215 268.61358643]
[67.93686676 260.77908325]
[82.47675323 256.71777344]
[82.47675323 241.71777344]
[82.47675323 226.71777344]
[82.47675323 211.71777344]
[82.47675323 196.71777344]
[82.47675323 181.71777344]
[82.47675323 166.71777344]
[82.47675323 151.71777344]
[82.47675323 136.71777344]
[82.47675323 121.71776581]
[78.13821411 101.40296173]
[88.51018524 88.99800873]
[83.31476593 74.92648315]
[78.11935425 60.85496902]
[72.92393494 46.78344727]
[67.72852325 32.71192932]
[62.53310776 18.64040947]
[57.33769226 4.56889009]
[51.39203262 -2.45257568]
[52.18389511 -9.84977818]
[47.28234482 -24.02633667]
[42.38079453 -38.20289230]
[27.82172966 -34.55282211]
[12.99994183 -32.18555832]
[-1.97176707 -31.11911583]
[-16.97945023 -31.36161423]
[-31.90888786 -32.91120911]
[-46.64645767 -35.75610352]
[-61.07999420 -39.87464905]
[-75.09964752 -45.23549652]
[-88.59871674 -51.79784775]
[-101.47446442 -59.51176071]
[-113.62889862 -68.31852722]
[-124.96951294 -78.15111542]
[-135.41000366 -88.93469238]
[-144.87089539 -100.58719635]
[-153.28019714 -113.01993561]
[-160.57391357 -126.13829041]
[-166.69651794 -139.84240723]
[-171.60140991 -154.02801514]
[-175.25128174 -168.58712769]
[-177.61834717 -183.40895081]
[-178.68457031 -198.38067627]
[-178.44186401 -213.38835144]
[-176.89205933 -228.31777954]
[-174.04695129 -243.05529785]
[-169.92820740 -257.48876953]
[-164.56716919 -271.50836182]
[-158.00462341 -285.00732422]
[-150.29052734 -297.88296509]
[-141.48359680 -310.03729248]
[-131.65084839 -321.37777710]
[-120.86711884 -331.81811523]
[-109.21448517 -341.27883911]
[-96.78163147 -349.68795776]
[-83.66317749 -356.98147583]
[-69.95896149 -363.10391235]
[-55.77329254 -368.00860596]
[-41.21412659 -371.65826416]
[-26.39227104 -374.02511597]
[-11.42053223 -375.09112549]
[3.58714461 -374.84820557]
[18.51653862 -373.29818726]
[33.25402832 -370.45288086]
[47.68745041 -366.33395386]
[61.70695114 -360.97271729]
[75.20583344 -354.40997314]
[88.08136749 -346.69570923]
[100.23555756 -337.88858032]
[111.57589722 -328.05569458]
[122.01608276 -317.27182007]
[131.47665405 -305.61904907]
[139.88560486 -293.18606567]
[147.17893982 -280.06750488]
[153.30116272 -266.36322021]
[158.20567322 -252.17747498]
[161.85513306 -237.61825562]
[164.22177124 -222.79637146]
[165.28758240 -207.82461548]
[165.04444885 -192.81694031]
[163.49423218 -177.88757324]
[160.64871216 -163.15011597]
[156.52955627 -148.71676636]
[151.16812134 -134.69732666]
[144.60520935 -121.19853973]
[136.89074707 -108.32311249]
[128.08348083 -96.16905212]
[118.25040436 -84.82884979]
[107.46638489 -74.38881683]
[95.81349182 -64.92840576]
[83.38039398 -56.51962662]
[70.26173401 -49.22647095]
[56.55735397 -43.10444641]
[61.45890427 -28.92788696]
[66.36045074 -14.75132847]
[71.40921021 -0.62652564]
[76.60462952 13.44499397]
[81.80004120 27.51651382]
[86.99546051 41.58803177]
[92.19087219 55.65955353]
[97.38629150 69.73107147]
[102.58170319 83.80258942]
[104.34998322 68.90718079]
[114.86616516 58.21092987]
[129.72941589 56.19004059]
[142.71968079 63.69022751]
[148.40077209 77.57277679]
[144.39521790 92.02807617]
[132.37930298 101.00681305]
[117.38028717 100.75109863]
[130.62287903 107.79623413]
[143.86546326 114.84136963]
[159.56692505 111.54838562]
[171.83886719 121.88176727]
[171.26731873 137.91464233]
[158.29071045 147.34794617]
[142.86358643 142.94526672]
[136.82032776 128.08395386]
[123.57773590 121.03881836]
[110.33515167 113.99368286]
[97.47675323 121.71776581]
[97.47675323 136.71777344]
[97.47675323 151.71777344]
[97.47675323 166.71777344]
[97.47675323 181.71777344]
[97.47675323 196.71777344]
[97.47675323 211.71777344]
[97.47675323 226.71777344]
[97.47675323 241.71777344]
[97.47675323 256.71777344]
[112.01663971 260.77908325]
[124.92102051 268.61358643]
[135.23229980 279.63992310]
[142.18531799 293.03985596]
[145.26412964 307.81900024]
[144.24023438 322.88067627]
[139.18963623 337.10720825]
[130.48710632 349.44287109]
[118.77844238 358.97229004]
[104.93250275 364.98831177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[30 105]
[31 104]
[32 103]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
