%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUACUAUCGGGGGGGGGGAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAACACxxxxxxxxxxAACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCACCACGACCCCCCCCCCCCCUACUACUAUC\
) } def
/len { sequence length } bind def

/coor [
[99.02514648 379.10110474]
[87.14087677 369.82598877]
[77.82216644 357.97589111]
[71.61080170 344.23971558]
[68.86789703 329.41607666]
[69.75292969 314.36682129]
[74.21443939 299.96688843]
[81.99303436 287.05343628]
[92.63648224 276.37728882]
[105.52599335 268.55911255]
[119.91217804 264.05343628]
[118.97655487 249.08264160]
[118.04092407 234.11184692]
[117.10529327 219.14105225]
[116.16967010 204.17025757]
[115.23403931 189.19947815]
[114.29840851 174.22868347]
[113.36278534 159.25788879]
[112.42715454 144.28709412]
[111.49152374 129.31631470]
[105.22854614 125.19016266]
[96.97605133 137.71598816]
[84.45036316 129.46328735]
[92.70258331 116.93787384]
[86.43959808 112.81172943]
[72.31479645 117.86048889]
[58.18999481 122.90924072]
[47.99465942 135.75396729]
[31.81505013 133.07960510]
[26.29536247 117.63728333]
[37.11378098 105.31275940]
[53.14123917 108.78443909]
[67.26604462 103.73567963]
[81.39084625 98.68692780]
[91.13849640 87.28590393]
[93.93082428 72.54809570]
[96.72314453 57.81029129]
[99.51547241 43.07248688]
[85.01739502 39.19782257]
[70.84506989 34.26301193]
[57.07589340 28.29500961]
[43.78507233 21.32641220]
[31.04520035 13.39527988]
[18.92585754 4.54492855]
[7.49323320 -5.17630243]
[-3.19022846 -15.71531963]
[-13.06617737 -27.01456070]
[-22.08067513 -39.01231384]
[-30.18448639 -51.64304733]
[-37.33335114 -64.83778381]
[-43.48822403 -78.52444458]
[-48.61548615 -92.62828827]
[-52.68713760 -107.07228088]
[-55.68093872 -121.77752686]
[-57.58053970 -136.66372681]
[-58.37556458 -151.64955139]
[-58.06166840 -166.65318298]
[-56.64056778 -181.59263611]
[-54.12002563 -196.38636780]
[-50.51380920 -210.95353699]
[-45.84160995 -225.21458435]
[-40.12895203 -239.09164429]
[-33.40703201 -252.50891113]
[-25.71256256 -265.39309692]
[-17.08757210 -277.67385864]
[-7.57916498 -289.28408813]
[2.76072526 -300.16036987]
[13.87562466 -310.24334717]
[25.70482826 -319.47790527]
[38.18372726 -327.81362915]
[51.24416733 -335.20498657]
[64.81481171 -341.61160278]
[78.82154846 -346.99850464]
[93.18786621 -351.33624268]
[107.83531189 -354.60116577]
[122.68387604 -356.77539062]
[137.65246582 -357.84707642]
[152.65933228 -357.81036377]
[167.62249756 -356.66543579]
[182.46025085 -354.41857910]
[197.09153748 -351.08203125]
[211.43646240 -346.67404175]
[225.41667175 -341.21865845]
[238.95581055 -334.74572754]
[251.97991943 -327.29055786]
[264.41787720 -318.89385986]
[276.20175171 -309.60153198]
[287.26718140 -299.46429443]
[297.55371094 -288.53750610]
[307.00518799 -276.88088989]
[315.57000732 -264.55810547]
[323.20132446 -251.63639832]
[329.85751343 -238.18640137]
[335.50219727 -224.28155518]
[340.10455322 -209.99781799]
[343.63943481 -195.41317749]
[346.08755493 -180.60729980]
[347.43554688 -165.66105652]
[347.67602539 -150.65608215]
[346.80767822 -135.67431641]
[344.83526611 -120.79759216]
[341.76953125 -106.10717010]
[337.62725830 -91.68327332]
[332.43103027 -77.60469055]
[326.20925903 -63.94830704]
[318.99591064 -50.78871536]
[310.83038330 -38.19778442]
[301.75729370 -26.24428749]
[291.82617188 -14.99350834]
[281.09127808 -4.50689554]
[269.61120605 5.15827560]
[257.44869995 13.94921684]
[244.67018127 21.81791496]
[231.34541321 28.72139168]
[217.54721069 34.62194443]
[203.35090637 39.48734665]
[188.83404541 43.29101944]
[174.07591248 46.01219559]
[159.15711975 47.63600922]
[144.15913391 48.15359116]
[129.16389465 47.56211472]
[114.25327301 45.86481094]
[111.46095276 60.60261917]
[108.66862488 75.34042358]
[105.87630463 90.07823181]
[118.85270691 91.64257812]
[129.11138916 105.94807434]
[126.46231842 128.38067627]
[127.39794922 143.35147095]
[128.33357239 158.32226562]
[129.26919556 173.29306030]
[130.20483398 188.26383972]
[131.14045715 203.23463440]
[132.07608032 218.20542908]
[133.01171875 233.17622375]
[133.94734192 248.14701843]
[134.88298035 263.11779785]
[149.71820068 265.79721069]
[163.48083496 271.94973755]
[175.37072754 281.21762085]
[184.69662476 293.06207275]
[190.91632080 306.79449463]
[193.66821289 321.61645508]
[192.79229736 336.66622925]
[188.33952332 351.06887817]
[180.56875610 363.98703003]
[169.93177795 374.66964722]
[157.04701233 382.49563599]
[142.66355896 387.01004028]
[127.61765289 387.95034790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[25 34]
[26 33]
[27 32]
[35 125]
[36 124]
[37 123]
[38 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
