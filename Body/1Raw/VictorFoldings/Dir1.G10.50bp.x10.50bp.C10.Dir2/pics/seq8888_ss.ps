%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAACGCUCGGGGGGGGGGCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAUGAUGGCGxxxxxxxxxxCUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCCCCCCCCCCCAUAACCCUC\
) } def
/len { sequence length } bind def

/coor [
[72.22087097 383.46035767]
[58.37492752 377.44433594]
[46.66626740 367.91491699]
[37.96374130 355.57925415]
[32.91313934 341.35272217]
[31.88924980 326.29104614]
[34.96804810 311.51190186]
[41.92107010 298.11196899]
[52.23235321 287.08563232]
[65.13673401 279.25112915]
[79.67662048 275.18981934]
[79.67662048 260.18981934]
[79.67662048 245.18980408]
[79.67662048 230.18980408]
[79.67662048 215.18980408]
[79.67662048 200.18980408]
[79.67662048 185.18980408]
[79.67662048 170.18980408]
[79.67662048 155.18980408]
[79.67662048 140.18980408]
[72.56880951 107.09569550]
[90.37593842 93.46708679]
[81.35840607 81.48025513]
[66.87912750 75.10365295]
[65.41094208 60.28158569]
[50.93165970 53.90498734]
[49.46347046 39.08292007]
[40.44594193 27.09608650]
[31.42841148 15.10925293]
[22.41088295 3.12242055]
[13.39335251 -8.86441231]
[4.37582302 -20.85124397]
[-8.54311943 -13.19852448]
[-22.22552681 -7.01346779]
[-36.50530624 -2.37115598]
[-51.20911789 0.67205769]
[-66.15847015 2.07923126]
[-81.17188263 1.83328295]
[-96.06712341 -0.06280152]
[-110.66336060 -3.58600545]
[-124.78341675 -8.69356060]
[-138.25588989 -15.32346535]
[-150.91723633 -23.39523888]
[-162.61375427 -32.81089783]
[-173.20346069 -43.45614624]
[-182.55781555 -55.20175552]
[-190.56324768 -67.90515137]
[-197.12258911 -81.41211700]
[-202.15621948 -95.55870056]
[-205.60301208 -110.17317200]
[-207.42115784 -125.07812500]
[-207.58857727 -140.09262085]
[-206.10322571 -155.03440857]
[-202.98313904 -169.72209167]
[-198.26618958 -183.97740173]
[-192.00964355 -197.62725830]
[-184.28945923 -210.50599670]
[-175.19932556 -222.45726013]
[-164.84960938 -233.33598328]
[-153.36595154 -243.01010132]
[-140.88772583 -251.36218262]
[-127.56642914 -258.29083252]
[-113.56376648 -263.71197510]
[-99.04971313 -267.55975342]
[-84.20045471 -269.78747559]
[-69.19625854 -270.36813354]
[-54.21924591 -269.29464722]
[-39.45123672 -266.58004761]
[-25.07149696 -262.25726318]
[-11.25458145 -256.37884521]
[1.83178341 -249.01608276]
[14.02874088 -240.25837708]
[25.18823242 -230.21203613]
[35.17478943 -218.99900818]
[43.86718750 -206.75541687]
[51.15990448 -193.62989807]
[56.96442032 -179.78175354]
[61.21026611 -165.37911987]
[63.84590530 -150.59681702]
[64.83934784 -135.61428833]
[64.17852020 -120.61340332]
[61.87145996 -105.77626038]
[57.94616318 -91.28298187]
[52.45028305 -77.30948639]
[45.45053482 -64.02541351]
[37.03188705 -51.59200668]
[27.29653358 -40.16020203]
[16.36265564 -29.86877441]
[25.38018608 -17.88194275]
[34.39771652 -5.89510918]
[43.41524506 6.09172344]
[52.43277359 18.07855606]
[61.45030594 30.06538773]
[75.28459167 35.58460999]
[77.39777374 51.26405716]
[91.23205566 56.78327942]
[93.34523773 72.46272278]
[102.36277008 84.44956207]
[116.20598602 90.22583008]
[131.06903076 88.20349884]
[145.93208313 86.18115997]
[160.79513550 84.15882874]
[175.65817261 82.13648987]
[190.47593689 79.80538940]
[205.24198914 77.16652679]
[212.87203979 63.51674652]
[227.50917053 58.01326752]
[242.24218750 63.25465775]
[250.11460876 76.76609802]
[247.40931702 92.16789246]
[235.40367126 102.18779755]
[219.76635742 102.09470367]
[207.88085938 91.93257904]
[193.11479187 94.57144165]
[189.66731262 97.96118164]
[184.03294373 99.17991638]
[177.68051147 96.99954224]
[162.81745911 99.02187347]
[147.95442200 101.04421234]
[133.09136963 103.06654358]
[118.22832489 105.08887482]
[115.28283691 119.79683685]
[128.22090149 127.38674927]
[144.04574585 124.74977112]
[155.87721252 135.58470154]
[154.63922119 151.57992554]
[141.28143311 160.46525574]
[126.05081177 155.42463684]
[120.63098907 140.32479858]
[107.69293213 132.73489380]
[94.67662048 140.18980408]
[94.67662048 155.18980408]
[94.67662048 170.18980408]
[94.67662048 185.18980408]
[94.67662048 200.18980408]
[94.67662048 215.18980408]
[94.67662048 230.18980408]
[94.67662048 245.18980408]
[94.67662048 260.18981934]
[94.67662048 275.18981934]
[109.21650696 279.25112915]
[122.12088776 287.08563232]
[132.43217468 298.11196899]
[139.38519287 311.51190186]
[142.46398926 326.29104614]
[141.44010925 341.35272217]
[136.38949585 355.57925415]
[127.68698120 367.91491699]
[115.97831726 377.44433594]
[102.13237762 383.46035767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 98]
[23 97]
[25 95]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 114]
[105 113]
[122 130]
[123 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
