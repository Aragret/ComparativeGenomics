%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCCAUAAGGGGGGGGGGACAAAUAGGUUUGGUCCUAGCCUUUCUAUUAGCUCUUAGUAAGAUUACACxxxxxxxxxxCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCACUUCCCCCCCCCCCCACUCCAUAA\
) } def
/len { sequence length } bind def

/coor [
[73.97480774 401.75320435]
[60.75461197 394.48071289]
[49.86780548 384.03372192]
[42.05667496 371.12448120]
[37.85379410 356.63314819]
[37.54572296 341.54782104]
[41.15346527 326.89700317]
[48.43103790 313.67959595]
[58.88224411 302.79684448]
[71.79450989 294.99069214]
[86.28744507 290.79339600]
[85.97538757 275.79666138]
[85.66333008 260.79989624]
[85.35127258 245.80314636]
[85.03921509 230.80639648]
[84.72716522 215.80963135]
[84.41510773 200.81288147]
[84.10305023 185.81613159]
[83.79099274 170.81938171]
[83.47893524 155.82261658]
[83.16687775 140.82586670]
[70.47195435 132.83595276]
[56.81571198 139.04135132]
[43.15946960 145.24676514]
[29.50322723 151.45217896]
[20.41089439 165.09992981]
[4.06497288 163.77973938]
[-2.71925282 148.84970093]
[7.03724670 135.66854858]
[23.29782104 137.79592896]
[36.95406342 131.59053040]
[50.61030197 125.38511658]
[64.26654816 119.17971039]
[60.79167175 101.39385986]
[65.40790558 84.48824310]
[76.64850616 71.83222198]
[91.78473663 65.70406342]
[91.47267914 50.70730591]
[91.16062927 35.71055222]
[90.84857178 20.71380043]
[90.38052368 5.72110367]
[89.75654602 -9.26591206]
[74.76658630 -10.06945229]
[59.92087936 -12.29425716]
[45.35387802 -15.92017746]
[31.19751167 -20.91437721]
[17.57998085 -27.23162460]
[4.62461376 -34.81471252]
[-7.55126333 -43.59495926]
[-18.83738136 -53.49285507]
[-29.13152695 -64.41875458]
[-38.34047318 -76.27371216]
[-46.38082123 -88.95037079]
[-53.17975616 -102.33390808]
[-58.67570496 -116.30313873]
[-62.81888962 -130.73153687]
[-65.57178497 -145.48844910]
[-66.90947723 -160.44021606]
[-66.81983185 -175.45143127]
[-65.30367279 -190.38615417]
[-62.37472153 -205.10913086]
[-58.05950928 -219.48703003]
[-52.39712143 -233.38961792]
[-45.43882751 -246.69100952]
[-37.24765396 -259.27072144]
[-27.89777946 -271.01486206]
[-17.47387695 -281.81704712]
[-6.07035303 -291.57943726]
[6.20951939 -300.21362305]
[19.25452995 -307.64144897]
[32.94653702 -313.79562378]
[47.16154099 -318.62039185]
[61.77080536 -322.07208252]
[76.64202118 -324.11941528]
[91.64051819 -324.74386597]
[106.63045502 -323.93978882]
[121.47608185 -321.71444702]
[136.04293823 -318.08798218]
[150.19912720 -313.09326172]
[163.81643677 -306.77551270]
[176.77151489 -299.19195557]
[188.94708252 -290.41128540]
[200.23283386 -280.51296997]
[210.52658081 -269.58670044]
[219.73509216 -257.73138428]
[227.77497864 -245.05445862]
[234.57342529 -231.67065430]
[240.06886292 -217.70123291]
[244.21153259 -203.27267456]
[246.96388245 -188.51567078]
[248.30102539 -173.56385803]
[248.21084595 -158.55264282]
[246.69413757 -143.61796570]
[243.76464844 -128.89509583]
[239.44891357 -114.51737213]
[233.78601074 -100.61498260]
[226.82723999 -87.31385040]
[218.63560486 -74.73442078]
[209.28530884 -62.99063492]
[198.86100769 -52.18883896]
[187.45712280 -42.42685699]
[175.17694092 -33.79310226]
[162.13166809 -26.36575890]
[148.43942261 -20.21209526]
[134.22424316 -15.38784313]
[119.61486053 -11.93668938]
[104.74356842 -9.88988972]
[105.36754608 5.09712648]
[108.81044006 11.69198227]
[105.84532166 20.40174294]
[106.15737915 35.39849854]
[106.46943665 50.39525223]
[106.78149414 65.39200592]
[117.00266266 69.10321045]
[125.60729980 75.75194550]
[131.77731323 84.70606995]
[134.92608643 95.11427307]
[134.75425720 105.98698425]
[148.65679932 111.61894226]
[162.55935669 117.25090027]
[178.71736145 114.44894409]
[189.01373291 127.21282959]
[182.85644531 142.41217041]
[166.57958984 144.41117859]
[156.92739868 131.15345764]
[143.02485657 125.52149963]
[129.12229919 119.88954163]
[116.93730927 133.91688538]
[98.16363525 140.51380920]
[98.47569275 155.51055908]
[98.78775024 170.50732422]
[99.09980011 185.50407410]
[99.41185760 200.50082397]
[99.72391510 215.49757385]
[100.03597260 230.49433899]
[100.34803009 245.49108887]
[100.66008759 260.48785400]
[100.97213745 275.48458862]
[101.28419495 290.48135376]
[115.93918610 294.07211304]
[129.16499329 301.33438110]
[140.05986023 311.77297974]
[147.88096619 324.67617798]
[152.09503174 339.16424561]
[152.41474915 354.24932861]
[148.81832886 368.90295410]
[141.55096436 382.12594604]
[131.10816956 393.01678467]
[118.20193481 400.83291626]
[103.71224213 405.04138184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 33]
[23 32]
[24 31]
[25 30]
[37 113]
[38 112]
[39 111]
[40 110]
[41 108]
[42 107]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
