%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGGAAAAAGGGGGGGGGGACCUUGUAGAGAGAGUAAAAAAUUUAACACCCAUAGUAGGCCUAAAAGCAxxxxxxxxxxCCGAAUACACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCCCCCCCCCCCUAGGAACAA\
) } def
/len { sequence length } bind def

/coor [
[88.23017883 489.17535400]
[75.00998688 481.90289307]
[64.12318420 471.45587158]
[56.31204987 458.54663086]
[52.10916901 444.05532837]
[51.80109787 428.96997070]
[55.40883636 414.31915283]
[62.68640900 401.10177612]
[73.13761902 390.21899414]
[86.04988098 382.41284180]
[100.54281616 378.21557617]
[100.23075867 363.21881104]
[99.91870117 348.22204590]
[99.60665131 333.22531128]
[99.29459381 318.22854614]
[98.98253632 303.23178101]
[98.67047882 288.23504639]
[98.35842133 273.23828125]
[98.04636383 258.24154663]
[97.73431396 243.24478149]
[97.42225647 228.24803162]
[84.80827332 217.16897583]
[84.06410217 200.05960083]
[96.13402557 187.44000244]
[95.51004791 172.45298767]
[94.88607025 157.46597290]
[94.26209259 142.47895813]
[93.63811493 127.49194336]
[93.01413727 112.50492859]
[85.68845367 100.59585571]
[91.99884796 88.11904907]
[81.77176666 72.84204865]
[90.42957306 57.60911560]
[89.49394989 42.63832474]
[88.55831909 27.66753387]
[73.55251312 27.41094589]
[58.61452866 25.96294785]
[43.83880997 23.33269310]
[29.31877518 19.53681183]
[15.14622784 14.59930325]
[1.41077089 8.55138493]
[-11.80075359 1.43129313]
[-24.40481758 -6.71595526]
[-36.32173157 -15.83885098]
[-47.47615814 -25.87971306]
[-57.79756546 -36.77506256]
[-67.22070312 -48.45601273]
[-75.68598938 -60.84870911]
[-83.13990784 -73.87480927]
[-89.53533173 -87.45194244]
[-94.83182526 -101.49427795]
[-98.99590302 -115.91304016]
[-102.00123596 -130.61705017]
[-103.82882690 -145.51336670]
[-104.46711731 -160.50778198]
[-103.91207123 -175.50550842]
[-102.16719818 -190.41174316]
[-99.24353027 -205.13221741]
[-95.15955353 -219.57385254]
[-89.94108582 -233.64538574]
[-83.62113190 -247.25781250]
[-76.23963165 -260.32507324]
[-67.84326172 -272.76458740]
[-58.48511124 -284.49765015]
[-48.22433853 -295.45013428]
[-37.12582397 -305.55276489]
[-25.25973320 -314.74166870]
[-12.70108700 -322.95874023]
[0.47071141 -330.15206909]
[14.17238522 -336.27612305]
[28.31730652 -341.29223633]
[42.81604767 -345.16864014]
[57.57693481 -347.88088989]
[72.50665283 -349.41177368]
[87.51080322 -349.75164795]
[102.49452972 -348.89837646]
[117.36309052 -346.85733032]
[132.02249146 -343.64138794]
[146.38003540 -339.27093506]
[160.34497070 -333.77359009]
[173.82897949 -327.18408203]
[186.74682617 -319.54409790]
[199.01683044 -310.90194702]
[210.56143188 -301.31222534]
[221.30761719 -290.83563232]
[231.18745422 -279.53833008]
[240.13848877 -267.49179077]
[248.10412598 -254.77217102]
[255.03399658 -241.45988464]
[260.88427734 -227.63909912]
[265.61801147 -213.39718628]
[269.20523071 -198.82420349]
[271.62329102 -184.01228333]
[272.85690308 -169.05505371]
[272.89822388 -154.04711914]
[271.74703979 -139.08332825]
[269.41061401 -124.25831604]
[265.90371704 -109.66578674]
[261.24850464 -95.39802551]
[255.47444153 -81.54521942]
[248.61801147 -68.19496155]
[240.72256470 -55.43165207]
[231.83801270 -43.33599091]
[222.02055359 -31.98444939]
[211.33224487 -21.44879723]
[199.84065247 -11.79564381]
[187.61842346 -3.08602142]
[174.74285889 4.62500429]
[161.29534912 11.28868103]
[147.36091614 16.86287880]
[133.02766418 21.31235504]
[118.38620758 24.60897827]
[103.52911377 26.73190498]
[104.46473694 41.70269775]
[105.40036774 56.67348862]
[114.28217316 64.94518280]
[115.14851379 77.45391846]
[106.98586273 87.49507141]
[114.31154633 99.40414429]
[108.00115204 111.88095093]
[108.62512970 126.86796570]
[109.24910736 141.85498047]
[109.87308502 156.84199524]
[110.49706268 171.82901001]
[111.12104034 186.81602478]
[122.04379272 194.76280212]
[126.31316376 207.37232971]
[122.57597351 219.94642639]
[112.41900635 227.93597412]
[112.73106384 242.93272400]
[113.04312134 257.92947388]
[113.35517883 272.92623901]
[113.66723633 287.92297363]
[113.97928619 302.91973877]
[114.29134369 317.91650391]
[114.60340118 332.91323853]
[114.91545868 347.91000366]
[115.22751617 362.90673828]
[115.53957367 377.90350342]
[130.19456482 381.49426270]
[143.42036438 388.75653076]
[154.31524658 399.19512939]
[162.13633728 412.09832764]
[166.35040283 426.58639526]
[166.67013550 441.67150879]
[163.07369995 456.32510376]
[155.80633545 469.54809570]
[145.36354065 480.43893433]
[132.45730591 488.25506592]
[117.96761322 492.46353149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[24 125]
[25 124]
[26 123]
[27 122]
[28 121]
[29 120]
[31 118]
[33 115]
[34 114]
[35 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
