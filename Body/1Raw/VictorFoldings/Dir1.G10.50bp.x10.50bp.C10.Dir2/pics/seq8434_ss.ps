%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAACUAAGGGGGGGGGGCCUCCUCGGACUCCUGCCUCACUCAUUUACACCAACCACCCAACUAUCUAxxxxxxxxxxGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCCCCCCCCCCCACAACAAA\
) } def
/len { sequence length } bind def

/coor [
[83.25137329 358.28744507]
[70.03117371 351.01498413]
[59.14437103 340.56799316]
[51.33324051 327.65872192]
[47.13035965 313.16741943]
[46.82228851 298.08209229]
[50.43002701 283.43124390]
[57.70760345 270.21386719]
[68.15880585 259.33111572]
[81.07106781 251.52494812]
[95.56401062 247.32766724]
[95.25195312 232.33091736]
[94.93989563 217.33416748]
[94.62783813 202.33740234]
[94.31578064 187.34065247]
[94.00372314 172.34390259]
[93.69167328 157.34715271]
[93.37961578 142.35038757]
[93.06755829 127.35363770]
[92.75550079 112.35688782]
[85.67915344 100.29798889]
[92.24774170 87.95516968]
[91.93569183 72.95841980]
[91.62363434 57.96166229]
[76.63105011 57.35882950]
[61.70310974 55.84310532]
[46.89533997 53.42013168]
[32.26282883 50.09892273]
[17.86000633 45.89183426]
[3.74045801 40.81451035]
[-10.04329395 34.88584900]
[-23.43997002 28.12789726]
[-36.39973831 20.56579971]
[-48.87438202 12.22768688]
[-60.81749344 3.14457655]
[-72.18464661 -6.64974022]
[-82.93355560 -17.11882782]
[-93.02423859 -28.22374153]
[-102.41914368 -39.92316818]
[-111.08332825 -52.17358780]
[-118.98455811 -64.92942047]
[-126.09344482 -78.14322662]
[-132.38354492 -91.76583862]
[-137.83145142 -105.74658203]
[-142.41690063 -120.03344727]
[-146.12283325 -134.57328796]
[-148.93545532 -149.31201172]
[-150.84432983 -164.19479370]
[-151.84231567 -179.16625977]
[-151.92573547 -194.17071533]
[-151.09426880 -209.15235901]
[-149.35099792 -224.05543518]
[-146.70242310 -238.82452393]
[-143.15838623 -253.40467834]
[-138.73207092 -267.74163818]
[-133.43995667 -281.78210449]
[-127.30171204 -295.47378540]
[-120.34018707 -308.76583862]
[-112.58127594 -321.60873413]
[-104.05383301 -333.95471191]
[-94.78959656 -345.75790405]
[-84.82301331 -356.97430420]
[-74.19116974 -367.56225586]
[-62.93362045 -377.48236084]
[-51.09223938 -386.69772339]
[-38.71107864 -395.17401123]
[-25.83619308 -402.87973022]
[-12.51548481 -409.78622437]
[1.20149469 -415.86779785]
[15.26371765 -421.10177612]
[29.61886978 -425.46875000]
[44.21355057 -428.95245361]
[58.99346542 -431.53991699]
[73.90363312 -433.22152710]
[88.88858032 -433.99102783]
[103.89257050 -433.84555054]
[118.85977936 -432.78564453]
[133.73454285 -430.81524658]
[148.46150208 -427.94165039]
[162.98588562 -424.17562866]
[177.25366211 -419.53112793]
[191.21176147 -414.02542114]
[204.80822754 -407.67904663]
[217.99252319 -400.51556396]
[230.71556091 -392.56164551]
[242.93003845 -383.84686279]
[254.59051514 -374.40365601]
[265.65359497 -364.26712036]
[276.07812500 -353.47500610]
[285.82534790 -342.06744385]
[294.85897827 -330.08685303]
[303.14541626 -317.57781982]
[310.65383911 -304.58688354]
[317.35632324 -291.16238403]
[323.22793579 -277.35421753]
[328.24679565 -263.21377563]
[332.39428711 -248.79368591]
[335.65493774 -234.14756775]
[338.01666260 -219.32989502]
[339.47061157 -204.39581299]
[340.01144409 -189.40087891]
[339.63708496 -174.40084839]
[338.34896851 -159.45155334]
[336.15188599 -144.60858154]
[333.05401611 -129.92716980]
[329.06683350 -115.46192169]
[324.20523071 -101.26665497]
[318.48724365 -87.39417267]
[311.93420410 -73.89608765]
[304.57043457 -60.82261658]
[296.42333984 -48.22238541]
[287.52325439 -36.14226913]
[277.90325928 -24.62721062]
[267.59915161 -13.72004700]
[256.64926147 -3.46135139]
[245.09431458 6.11071157]
[232.97732544 14.96053410]
[220.34335327 23.05519295]
[207.23939514 30.36457443]
[193.71418762 36.86148834]
[179.81806946 42.52176666]
[165.60272217 47.32435226]
[151.12103271 51.25137711]
[136.42687988 54.28823471]
[121.57491302 56.42362595]
[106.62038422 57.64960480]
[106.93244171 72.64636230]
[107.24449921 87.64311218]
[114.32084656 99.70201111]
[107.75225830 112.04483032]
[108.06430817 127.04158020]
[108.37636566 142.03833008]
[108.68842316 157.03509521]
[109.00048065 172.03184509]
[109.31253815 187.02859497]
[109.62459564 202.02534485]
[109.93664551 217.02210999]
[110.24870300 232.01885986]
[110.56076050 247.01560974]
[125.21575165 250.60638428]
[138.44155884 257.86865234]
[149.33642578 268.30722046]
[157.15753174 281.21044922]
[161.37159729 295.69851685]
[161.69131470 310.78359985]
[158.09489441 325.43722534]
[150.82752991 338.66021729]
[140.38473511 349.55105591]
[127.47850037 357.36715698]
[112.98880768 361.57565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[24 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
