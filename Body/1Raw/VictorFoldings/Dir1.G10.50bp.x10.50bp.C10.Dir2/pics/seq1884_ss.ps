%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAACCCACGGGGGGGGGGUCCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUxxxxxxxxxxACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACCCCCCCCCCCUAAACCCAC\
) } def
/len { sequence length } bind def

/coor [
[91.75666046 389.63854980]
[77.91072845 383.62252808]
[66.20206451 374.09310913]
[57.49953842 361.75744629]
[52.44893646 347.53091431]
[51.42504501 332.46923828]
[54.50384521 317.69009399]
[61.45686722 304.29016113]
[71.76815033 293.26382446]
[84.67253113 285.42932129]
[99.21241760 281.36801147]
[99.21241760 266.36801147]
[99.21241760 251.36799622]
[99.21241760 236.36799622]
[99.21241760 221.36799622]
[99.21241760 206.36799622]
[99.21241760 191.36799622]
[99.21241760 176.36799622]
[99.21241760 161.36799622]
[99.21241760 146.36799622]
[99.21241760 131.36799622]
[85.08721924 126.05510712]
[75.65666962 115.13381195]
[72.74437714 101.67745972]
[76.44761658 89.10491180]
[85.25814819 80.31465149]
[80.35659790 66.13809204]
[75.45504761 51.96153641]
[69.65674591 44.81789780]
[70.60232544 37.43877029]
[65.99676514 23.16331100]
[61.39120102 8.88784981]
[56.81961060 23.17422676]
[46.58978653 34.14467621]
[32.65726471 39.70208359]
[17.68537903 38.78410339]
[4.53615808 31.56620979]
[-4.27679777 19.42817688]
[-7.06880331 4.69031143]
[-3.30614042 -9.83010101]
[6.29192162 -21.35733795]
[19.89061737 -27.68785667]
[34.89042282 -27.61151314]
[48.42397690 -21.14290428]
[57.90354538 -9.51989174]
[56.96791458 -24.49068451]
[56.03228760 -39.46147537]
[55.09666061 -54.43226624]
[40.71644592 -63.27882385]
[34.48222351 -78.79062653]
[38.65731049 -94.80732727]
[51.41255569 -105.09367371]
[50.16568375 -120.04176331]
[48.76337814 -134.97607422]
[47.20579910 -149.89498901]
[45.64821625 -164.81388855]
[44.09063721 -179.73280334]
[42.53305435 -194.65171814]
[27.55302238 -196.12937927]
[13.17718315 -200.59257507]
[-0.00577810 -207.85855103]
[-11.45602894 -217.62977600]
[-20.70468712 -229.50610352]
[-27.37302780 -243.00122070]
[-31.18798637 -257.56250000]
[-31.99334145 -272.59368896]
[-29.75611496 -287.47921753]
[-24.56792068 -301.60961914]
[-16.64121056 -314.40618896]
[-6.30057812 -325.34490967]
[6.03053236 -333.97790527]
[19.84717178 -339.95162964]
[34.58355331 -343.02148438]
[49.63623810 -343.06170654]
[64.38882446 -340.07070923]
[78.23719788 -334.17092896]
[90.61428833 -325.60397339]
[101.01325226 -314.72067261]
[109.00825500 -301.96667480]
[114.27191925 -287.86422729]
[116.58869171 -272.99084473]
[115.86370850 -257.95556641]
[112.12664795 -243.37409973]
[105.53055573 -229.84353638]
[96.34552002 -217.91793823]
[84.94766998 -208.08564758]
[71.80374146 -200.74929810]
[57.45196915 -196.20930481]
[59.00954819 -181.29039001]
[60.56713104 -166.37147522]
[62.12471008 -151.45256042]
[63.68229294 -136.53364563]
[67.52983856 -130.16638184]
[65.11376953 -121.28863525]
[66.36064148 -106.34055328]
[78.39848328 -100.48509216]
[86.01862335 -89.34754944]
[87.13282013 -75.78992462]
[81.34165192 -63.36110687]
[70.06745148 -55.36789703]
[71.00308228 -40.39710236]
[71.93870544 -25.42631149]
[72.87433624 -10.45552063]
[75.66665649 4.28228521]
[80.27222443 18.55774689]
[84.87779236 32.83320618]
[89.63160706 47.05998611]
[94.53315735 61.23654556]
[99.43470764 75.41310120]
[121.95298767 82.64308167]
[130.35713196 107.93825531]
[144.76934814 112.09614563]
[153.93704224 99.99994659]
[166.85736084 92.03566742]
[181.78294373 89.28039551]
[196.69522095 92.10677338]
[209.57743835 100.13253784]
[218.68737793 112.27229309]
[222.79298401 126.88421631]
[221.33903503 141.99217224]
[214.52214050 155.55294800]
[203.26423645 165.73252869]
[189.08786011 171.15423584]
[173.91026306 171.08482361]
[159.78407288 165.53367615]
[148.61975098 155.25154114]
[141.92716980 141.62898254]
[140.61146545 126.50836182]
[126.19924927 122.35047150]
[114.21241760 131.36799622]
[114.21241760 146.36799622]
[114.21241760 161.36799622]
[114.21241760 176.36799622]
[114.21241760 191.36799622]
[114.21241760 206.36799622]
[114.21241760 221.36799622]
[114.21241760 236.36799622]
[114.21241760 251.36799622]
[114.21241760 266.36801147]
[114.21241760 281.36801147]
[128.75230408 285.42932129]
[141.65669250 293.26382446]
[151.96797180 304.29016113]
[158.92098999 317.69009399]
[161.99978638 332.46923828]
[160.97590637 347.53091431]
[155.92529297 361.75744629]
[147.22277832 374.09310913]
[135.51411438 383.62252808]
[121.66817474 389.63854980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[26 109]
[27 108]
[28 107]
[30 106]
[31 105]
[32 104]
[45 103]
[46 102]
[47 101]
[48 100]
[52 95]
[53 94]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[111 129]
[112 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
