%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAGCAGGGGGGGGGGGGAACAGGUUGAACAGUCUACCCUCCCUUAGCAGGGAACUACUCCCACCCUxxxxxxxxxxGCUGAGAGGGCGUAGGAAUUAUAUCCUUCUUGCUCAUCAGUUGAUGAUACCCCCCCCCCCGCCCGAGCAG\
) } def
/len { sequence length } bind def

/coor [
[91.87875366 469.62936401]
[79.00547791 461.72647095]
[68.88118744 450.51599121]
[62.32660294 436.90664673]
[59.87308121 422.00170898]
[61.71952057 407.00946045]
[67.71623230 393.14526367]
[77.37709045 381.53302002]
[89.91893768 373.11404419]
[104.32506561 368.57089233]
[104.01300812 353.57415771]
[103.70095062 338.57739258]
[103.38889313 323.58062744]
[103.07683563 308.58389282]
[102.76477814 293.58712769]
[102.45272827 278.59036255]
[102.14067078 263.59362793]
[101.82861328 248.59686279]
[101.51655579 233.60011292]
[101.20449829 218.60336304]
[93.20410156 206.03981018]
[100.65263367 192.08164978]
[82.13324738 171.41679382]
[92.13697052 149.59695435]
[87.53140259 135.32148743]
[74.67300415 127.59741211]
[59.90694809 130.23626709]
[45.14089203 132.87513733]
[32.91712952 142.91955566]
[19.02717590 137.54196167]
[4.26112127 140.18081665]
[-7.92136669 151.15893555]
[-23.43430519 145.84097290]
[-26.31931305 129.69758606]
[-13.60854244 119.33572388]
[1.62225676 125.41477203]
[16.38831139 122.77590179]
[27.55590630 112.92024231]
[42.50202560 118.10908508]
[57.26808167 115.47021484]
[72.03413391 112.83135223]
[72.11906433 103.37580109]
[75.05307770 95.22340393]
[61.81049347 88.17827606]
[48.56790543 81.13314056]
[35.32532120 74.08800507]
[22.08273506 67.04286957]
[5.72112799 68.15184784]
[-3.19419599 54.38780212]
[4.50808430 39.90999603]
[20.90452385 39.61195755]
[29.12787056 53.80028152]
[42.37045670 60.84541702]
[55.61304092 67.89054871]
[68.85562897 74.93568420]
[82.09821320 81.98081970]
[87.72035217 73.75461578]
[96.97335815 67.58906555]
[97.59733582 52.60204697]
[98.22131348 37.61503220]
[98.84529114 22.62801552]
[91.68875122 8.51792908]
[99.94879150 -3.87646627]
[100.57276917 -18.86348152]
[101.19674683 -33.85049820]
[86.79426575 -38.34838486]
[74.04719543 -46.42146301]
[63.82464981 -57.51930237]
[56.82362366 -70.88523102]
[53.52145386 -85.60793304]
[54.14329147 -100.68360138]
[58.64673996 -115.08434296]
[66.72473907 -127.82830048]
[77.82652283 -138.04655457]
[91.19515228 -145.04241943]
[105.91913605 -148.33889771]
[120.99456024 -147.71124268]
[135.39356995 -143.20223999]
[148.13439941 -135.11932373]
[158.34837341 -124.01358795]
[165.33906555 -110.64225769]
[168.62986755 -95.91700745]
[167.99638367 -80.84182739]
[163.48182678 -66.44456482]
[155.39398193 -53.70685577]
[144.28431702 -43.49717331]
[130.91027832 -36.51163483]
[116.18376160 -33.22652054]
[115.55978394 -18.23950577]
[114.93580627 -3.25248885]
[122.13697052 9.78562641]
[113.83230591 23.25199318]
[113.20832825 38.23900986]
[112.58435059 53.22602463]
[111.96037292 68.21304321]
[124.48633575 76.46533203]
[138.01052856 69.97716522]
[151.53471375 63.48900223]
[154.19551086 48.20175934]
[165.35716248 37.42228699]
[180.72781372 35.29551697]
[194.39709473 42.63922882]
[201.10891724 56.62961960]
[198.28244019 71.88710022]
[187.00450134 82.54485321]
[171.61169434 84.50476074]
[158.02287292 77.01319122]
[144.49868774 83.50135803]
[130.97450256 89.98951721]
[126.13544464 117.86966705]
[101.80686188 130.71592712]
[106.41242981 144.99139404]
[123.32980347 150.04681396]
[132.09303284 168.42947388]
[146.41563416 172.88629150]
[160.73822021 177.34310913]
[175.06082153 181.79992676]
[189.38342285 186.25672913]
[205.25259399 182.12133789]
[216.57432556 193.98516846]
[211.70179749 209.64372253]
[195.64744568 212.98883057]
[184.92660522 200.57933044]
[170.60400391 196.12251282]
[156.28141785 191.66569519]
[141.95881653 187.20889282]
[127.63621521 182.75207520]
[115.64938354 191.76960754]
[123.67210388 205.40582275]
[116.20125580 218.29130554]
[116.51331329 233.28805542]
[116.82536316 248.28480530]
[117.13742065 263.28155518]
[117.44947815 278.27832031]
[117.76153564 293.27508545]
[118.07359314 308.27182007]
[118.38565063 323.26858521]
[118.69770050 338.26531982]
[119.00975800 353.26208496]
[119.32181549 368.25885010]
[133.90446472 372.19879150]
[146.78565979 380.08874512]
[156.92121887 391.28906250]
[163.48947144 404.89181519]
[165.95796204 419.79428101]
[164.12658691 434.78836060]
[158.14379883 448.65856934]
[148.49461365 460.28054810]
[135.96122742 468.71206665]
[121.55967712 473.26971436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[24 112]
[25 111]
[26 41]
[27 40]
[28 39]
[30 37]
[31 36]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[58 95]
[59 94]
[60 93]
[61 92]
[63 90]
[64 89]
[65 88]
[96 109]
[97 108]
[98 107]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
