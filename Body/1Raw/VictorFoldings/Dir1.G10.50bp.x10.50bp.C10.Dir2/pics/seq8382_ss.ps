%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGAUAACGGGGGGGGGGCAUACACAACACUAAAGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAxxxxxxxxxxAACUGCUAACUCAUGCCCCCAUGUCUAACAACAUGGCUUUCUCAACUUUUCCCCCCCCCCAAAGGAUAAC\
) } def
/len { sequence length } bind def

/coor [
[70.23603058 328.27713013]
[58.35175705 319.00201416]
[49.03304672 307.15191650]
[42.82168198 293.41574097]
[40.07878113 278.59210205]
[40.96380997 263.54284668]
[45.42531586 249.14291382]
[53.20391464 236.22947693]
[63.84736633 225.55331421]
[76.73687744 217.73512268]
[91.12306213 213.22946167]
[90.18743134 198.25866699]
[89.25180817 183.28787231]
[88.31617737 168.31709290]
[87.38054657 153.34629822]
[86.44492340 138.37550354]
[85.50929260 123.40470886]
[84.74548340 95.30230713]
[74.76275635 84.10654449]
[64.78002930 72.91077423]
[54.79730225 61.71501160]
[44.81457520 50.51924515]
[34.83185196 39.32347870]
[22.78991890 48.28392029]
[10.00317955 56.14501953]
[-3.42829466 62.84525681]
[-17.39937973 68.33218384]
[-31.80073357 72.56285858]
[-46.51964188 75.50418091]
[-61.44091034 77.13311768]
[-76.44775391 77.43692780]
[-91.42272186 76.41322327]
[-106.24861145 74.07003021]
[-120.80939484 70.42568207]
[-134.99110413 65.50868988]
[-148.68273926 59.35755539]
[-161.77716064 52.02040863]
[-174.17189026 43.55467987]
[-185.76988220 34.02661896]
[-196.48040771 23.51080322]
[-206.21961975 12.08953190]
[-214.91130066 -0.14780469]
[-222.48741150 -13.10543156]
[-228.88867188 -26.68193626]
[-234.06497192 -40.77106476]
[-237.97581482 -55.26254272]
[-240.59057617 -70.04295349]
[-241.88880920 -84.99662781]
[-241.86033630 -100.00651550]
[-240.50538635 -114.95515442]
[-237.83456421 -129.72554016]
[-233.86877441 -144.20207214]
[-228.63905334 -158.27146912]
[-222.18634033 -171.82359314]
[-214.56112671 -184.75238037]
[-205.82308960 -196.95664978]
[-196.04061890 -208.34089661]
[-185.29028320 -218.81599426]
[-173.65620422 -228.29998779]
[-161.22946167 -236.71864319]
[-148.10729980 -244.00605774]
[-134.39242554 -250.10520935]
[-120.19216156 -254.96835327]
[-105.61766052 -258.55743408]
[-90.78298187 -260.84436035]
[-75.80423737 -261.81124878]
[-60.79865646 -261.45053101]
[-45.88367844 -259.76498413]
[-31.17603302 -256.76785278]
[-16.79083443 -252.48255920]
[-2.84066439 -246.94267273]
[10.56529331 -240.19152832]
[23.32211876 -232.28198242]
[35.32997131 -223.27590942]
[46.49486542 -213.24383545]
[56.72942734 -202.26423645]
[65.95355225 -190.42308044]
[74.09504700 -177.81301880]
[81.09019470 -164.53274536]
[86.88424683 -150.68620300]
[91.43185425 -136.38177490]
[94.69742584 -121.73139191]
[96.65540314 -106.84973145]
[97.29046631 -91.85324860]
[96.59763336 -76.85932922]
[94.58234406 -61.98532104]
[91.26036072 -47.34762573]
[86.65768433 -33.06081390]
[80.81033325 -19.23670006]
[73.76408386 -5.98347759]
[65.57406616 6.59512854]
[56.30439758 18.40067101]
[46.02761459 29.34075165]
[56.01034164 40.53651810]
[65.99307251 51.73228455]
[75.97579193 62.92805099]
[85.95851898 74.12381744]
[95.94124603 85.31958008]
[110.26384735 89.77639771]
[124.83654785 86.22163391]
[139.40925598 82.66687012]
[153.98194885 79.11211395]
[168.55465698 75.55735016]
[183.12736511 72.00258636]
[191.12075806 58.36876297]
[206.43437195 54.46127319]
[219.98292542 62.59836578]
[223.72830200 77.95244598]
[215.44841003 91.41420746]
[200.05558777 94.99703217]
[186.68212891 86.57528687]
[172.10942078 90.13005066]
[157.53671265 93.68481445]
[142.96401978 97.23957825]
[128.39131165 100.79433441]
[113.81861115 104.34909821]
[128.31159973 108.21602631]
[142.80459595 112.08295441]
[157.80416870 111.96966553]
[171.40699768 118.29130554]
[180.99169922 129.82965088]
[184.71124268 144.36117554]
[181.84881592 159.08552551]
[172.95605469 171.16520691]
[159.74665833 178.27238464]
[144.76618958 179.03742981]
[130.90148926 173.31291199]
[120.82439423 162.20201111]
[116.47702789 147.84815979]
[108.47855377 135.15863037]
[100.48007965 122.46908569]
[101.41571045 137.43988037]
[102.35134125 152.41065979]
[103.28697205 167.38145447]
[104.22259521 182.35224915]
[105.15822601 197.32304382]
[106.09385681 212.29383850]
[120.92908478 214.97325134]
[134.69172668 221.12576294]
[146.58161926 230.39364624]
[155.90750122 242.23811340]
[162.12719727 255.97052002]
[164.87908936 270.79248047]
[164.00317383 285.84225464]
[159.55039978 300.24490356]
[151.77963257 313.16305542]
[141.14265442 323.84567261]
[128.25788879 331.67166138]
[113.87444305 336.18606567]
[98.82853699 337.12637329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
