%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAACACAAGGGGGGGGGGUGGGGCUCACUCACCCACCACAUUAACAACAUAAAACCCUCAUUCACACGxxxxxxxxxxAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUAUCUCGAACUGACACUGAGCCCCCCCCCCCCACAACCCAA\
) } def
/len { sequence length } bind def

/coor [
[81.03416443 378.76559448]
[68.11501312 371.00723267]
[57.33371353 360.47821045]
[49.27169800 347.74633789]
[44.36373520 333.49822998]
[42.87451172 318.50225830]
[44.88433838 303.56716919]
[50.28482056 289.49835205]
[58.78472519 277.05453491]
[69.92565918 266.90682983]
[83.10680389 259.60244751]
[97.61732483 255.53530884]
[97.00150299 240.54794312]
[96.38567352 225.56059265]
[95.76985168 210.57324219]
[95.15402222 195.58589172]
[94.53820038 180.59854126]
[93.92237091 165.61119080]
[93.30654907 150.62382507]
[80.88822937 142.21041870]
[66.74091339 147.19573975]
[52.59360123 152.18106079]
[38.44628143 157.16638184]
[24.29896736 162.15170288]
[10.15165043 167.13702393]
[6.69866800 182.17300415]
[-4.35118389 192.93888855]
[-19.47193718 195.99932861]
[-33.83861923 190.37776184]
[-42.86686707 177.86799622]
[-43.67580414 162.46185303]
[-36.00730133 149.07537842]
[-22.30834770 141.98016357]
[-6.95023203 143.44023132]
[5.16632795 152.98971558]
[19.31364441 148.00439453]
[33.46096039 143.01907349]
[47.60827637 138.03375244]
[61.75559235 133.04843140]
[75.90290833 128.06311035]
[67.80877686 113.97448730]
[66.83158875 98.60056305]
[72.43858337 85.16092682]
[82.79013062 76.15539551]
[95.25217438 72.90192413]
[96.78946686 57.98091125]
[98.32675934 43.05989456]
[92.04453278 28.53942108]
[101.04545593 16.67213249]
[102.58274841 1.75111592]
[104.12004089 -13.16990089]
[90.15223694 -17.55352974]
[77.31906891 -24.58770180]
[66.11751556 -33.99777603]
[56.98096466 -45.41714096]
[50.26239014 -58.40149307]
[46.22073746 -72.44614410]
[45.01095200 -87.00560760]
[46.67802429 -101.51480865]
[51.15533829 -115.41100311]
[58.26730347 -128.15560913]
[67.73627472 -139.25508118]
[79.19335938 -148.28002930]
[92.19281006 -154.88180542]
[106.22935486 -158.80599976]
[120.75784302 -159.90223694]
[122.60117340 -174.78854370]
[124.44449615 -189.67485046]
[126.28781891 -204.56115723]
[112.42153168 -210.55305481]
[100.80592346 -220.20988464]
[92.38262177 -232.74879456]
[87.83445740 -247.15335083]
[87.53012848 -262.25579834]
[91.49431610 -276.83187866]
[99.40565491 -289.69995117]
[110.62281036 -299.81686401]
[124.23645782 -306.36251831]
[139.14299011 -308.80624390]
[154.13401794 -306.94995117]
[167.99427795 -300.94412231]
[179.60017395 -291.27563477]
[188.01087952 -278.72824097]
[192.54457092 -264.31912231]
[192.83372498 -249.21638489]
[188.85490417 -234.64430237]
[180.93063354 -221.78417969]
[169.70332336 -211.67852783]
[156.08311462 -205.14657593]
[141.17413330 -202.71783447]
[139.33079529 -187.83152771]
[137.48747253 -172.94522095]
[135.64414978 -158.05889893]
[150.21841431 -153.11132812]
[163.45809937 -145.25181580]
[174.78877258 -134.81866455]
[183.71826172 -122.26187897]
[189.85804749 -108.12379456]
[192.94013977 -93.01562500]
[192.82881165 -77.59104919]
[189.52655029 -62.51792145]
[183.17404175 -48.44938278]
[174.04423523 -35.99551773]
[162.53053284 -25.69693565]
[149.12988281 -18.00127602]
[134.42135620 -13.24376297]
[119.04106140 -11.63260841]
[117.50376892 3.28840852]
[115.96647644 18.20942497]
[122.35866547 31.66264725]
[113.24777985 44.59718704]
[111.71048737 59.51820374]
[110.17319489 74.43921661]
[131.68191528 93.97310638]
[125.34165192 126.94453430]
[139.48896790 131.92985535]
[153.63629150 136.91517639]
[164.80545044 126.45056152]
[179.56149292 122.38636017]
[194.51358032 125.65648651]
[206.22583008 135.50949097]
[212.00685120 149.68124390]
[210.52821350 164.91516113]
[202.12968445 177.71060181]
[188.74119568 185.12727356]
[173.43933105 185.46087646]
[159.74032593 178.63475037]
[150.79212952 166.21749878]
[148.65097046 151.06250000]
[134.50364685 146.07717896]
[120.35633087 141.09185791]
[108.29389954 150.00801086]
[108.90972900 164.99536133]
[109.52555084 179.98271179]
[110.14137268 194.97006226]
[110.75720215 209.95741272]
[111.37302399 224.94477844]
[111.98885345 239.93212891]
[112.60467529 254.91947937]
[127.39995575 257.78244019]
[141.13592529 263.98080444]
[153.07182312 273.18032837]
[162.56398010 284.88482666]
[169.10047913 298.46316528]
[172.32881165 313.18304443]
[172.07489014 328.25064087]
[168.35240173 342.85336304]
[161.36209106 356.20373535]
[151.48095703 367.58175659]
[139.24185181 376.37387085]
[125.30482483 382.10589600]
[110.42148590 384.46868896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[45 113]
[46 112]
[47 111]
[49 109]
[50 108]
[51 107]
[66 93]
[67 92]
[68 91]
[69 90]
[115 131]
[116 130]
[117 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
