%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAACACUAGGGGGGGGGGAAGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCxxxxxxxxxxCAUUAUGUAAAAUCCAUUGUCGCAUCCACCUUUAUUAUCAGUCUCUUCCCCCCCCCCCCCCACAACAAUA\
) } def
/len { sequence length } bind def

/coor [
[83.37220001 403.43881226]
[71.48793030 394.16372681]
[62.16921997 382.31359863]
[55.95785522 368.57742310]
[53.21495438 353.75381470]
[54.09998322 338.70455933]
[58.56148911 324.30459595]
[66.34008789 311.39117432]
[76.98353577 300.71499634]
[89.87304688 292.89682007]
[104.25923920 288.39114380]
[103.32360840 273.42037964]
[102.38797760 258.44958496]
[101.45234680 243.47877502]
[100.51672363 228.50799561]
[99.58109283 213.53720093]
[98.64546204 198.56640625]
[97.70983887 183.59561157]
[96.77420807 168.62483215]
[95.83857727 153.65403748]
[94.90295410 138.68324280]
[93.96732330 123.71244812]
[93.03169250 108.74166107]
[91.94038391 93.78141022]
[90.69351196 78.83332062]
[89.44663239 63.88523483]
[88.04433441 48.95092773]
[86.48674774 34.03201675]
[71.48991394 34.55702591]
[56.49259567 34.04613495]
[41.56625366 32.50177002]
[26.78202820 29.93129730]
[12.21037006 26.34696388]
[-2.07927871 21.76585007]
[-16.01882172 16.20978928]
[-29.54183006 9.70525837]
[-42.58385849 2.28325391]
[-55.08275604 -6.02085447]
[-66.97895813 -15.16749287]
[-78.21578217 -25.11307335]
[-88.73966217 -35.81019974]
[-98.50045776 -47.20789719]
[-107.45166016 -59.25185013]
[-115.55059814 -71.88465881]
[-122.75868225 -85.04612732]
[-129.04156494 -98.67352295]
[-134.36929321 -112.70191956]
[-138.71650696 -127.06446075]
[-142.06245422 -141.69268799]
[-144.39120483 -156.51692200]
[-145.69168091 -171.46647644]
[-145.95764160 -186.47013855]
[-145.18786621 -201.45640564]
[-143.38598633 -216.35385132]
[-140.56060791 -231.09149170]
[-136.72518921 -245.59907532]
[-131.89801025 -259.80749512]
[-126.10207367 -273.64901733]
[-119.36500549 -287.05770874]
[-111.71890259 -299.96960449]
[-103.20020294 -312.32327271]
[-93.84951019 -324.05975342]
[-83.71138000 -335.12316895]
[-72.83412170 -345.46075439]
[-61.26958084 -355.02328491]
[-49.07285690 -363.76516724]
[-36.30208206 -371.64477539]
[-23.01811218 -378.62451172]
[-9.28425312 -384.67114258]
[4.83404875 -389.75585938]
[19.26951218 -393.85440063]
[33.95334244 -396.94726562]
[48.81556702 -399.01968384]
[63.78535843 -400.06179810]
[78.79137421 -400.06866455]
[93.76211548 -399.04022217]
[108.62622833 -396.98135376]
[123.31287384 -393.90191650]
[137.75207520 -389.81655884]
[151.87501526 -384.74475098]
[165.61439514 -378.71069336]
[178.90473938 -371.74307251]
[191.68270874 -363.87515259]
[203.88740540 -355.14440918]
[215.46067810 -345.59243774]
[226.34738159 -335.26480103]
[236.49562073 -324.21066284]
[245.85702515 -312.48269653]
[254.38700867 -300.13684082]
[262.04489136 -287.23193359]
[268.79421997 -273.82940674]
[274.60281372 -259.99319458]
[279.44296265 -245.78918457]
[283.29162598 -231.28511047]
[286.13046265 -216.55006409]
[287.94595337 -201.65426636]
[288.72943115 -186.66871643]
[288.47717285 -171.66481018]
[287.19036865 -156.71406555]
[284.87515259 -141.88772583]
[281.54257202 -127.25643158]
[277.20849609 -112.88993073]
[271.89355469 -98.85667419]
[265.62313843 -85.22353363]
[258.42709351 -72.05548859]
[250.33969116 -59.41528702]
[241.39949036 -47.36316681]
[231.64910889 -35.95655441]
[221.13500977 -25.24981880]
[209.90728760 -15.29397488]
[198.01943970 -6.13647175]
[185.52813721 2.17905188]
[172.49288940 9.61296844]
[158.97583008 16.12985229]
[145.04136658 21.69864464]
[130.75590515 26.29281235]
[116.18753052 29.89045525]
[101.40566254 32.47443390]
[102.96324158 47.39334869]
[106.81079102 53.76060867]
[104.39472198 62.63836288]
[105.64159393 77.58644867]
[106.88847351 92.53453827]
[110.66487885 99.71943665]
[108.00248718 107.80603027]
[108.93811035 122.77682495]
[109.87374115 137.74761963]
[110.80937195 152.71839905]
[111.74500275 167.68919373]
[112.68062592 182.65998840]
[113.61625671 197.63078308]
[114.55188751 212.60157776]
[115.48751068 227.57235718]
[116.42314148 242.54315186]
[117.35877228 257.51394653]
[118.29439545 272.48474121]
[119.23002625 287.45553589]
[134.06526184 290.13494873]
[147.82789612 296.28744507]
[159.71778870 305.55535889]
[169.04368591 317.39981079]
[175.26336670 331.13220215]
[178.01525879 345.95416260]
[177.13935852 361.00396729]
[172.68658447 375.40661621]
[164.91581726 388.32476807]
[154.27883911 399.00738525]
[141.39407349 406.83337402]
[127.01061249 411.34774780]
[111.96470642 412.28808594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[24 123]
[25 122]
[26 121]
[27 119]
[28 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
