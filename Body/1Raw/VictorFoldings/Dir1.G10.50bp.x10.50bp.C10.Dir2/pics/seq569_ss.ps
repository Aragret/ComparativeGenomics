%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCACUCCGGGGGGGGGGCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACxxxxxxxxxxUUUACAGUCAGAGGUUCAAUUCCUCUUCUUAACAACAUACCCAUGGCCAACCCCCCCCCCCCUCCUACUCC\
) } def
/len { sequence length } bind def

/coor [
[-14.53824997 276.72213745]
[-25.85383224 268.85064697]
[-36.63022995 260.25573730]
[-46.82127762 250.97428894]
[-56.38331604 241.04603577]
[-65.27537537 230.51350403]
[-73.45936584 219.42182922]
[-80.90021515 207.81854248]
[-87.56606293 195.75332642]
[-93.42833710 183.27787781]
[-98.46192169 170.44566345]
[-102.64526367 157.31163025]
[-105.96042633 143.93208313]
[-120.73254395 146.53680420]
[-135.50465393 149.14152527]
[-147.75160217 159.15765381]
[-161.62908936 153.74797058]
[-176.40121460 156.35269165]
[-191.17332458 158.95741272]
[-205.94544983 161.56213379]
[-220.71755981 164.16685486]
[-221.58625793 179.21153259]
[-225.90164185 193.65016174]
[-233.43101501 206.70410156]
[-243.76832581 217.66935730]
[-256.35607910 225.95458984]
[-270.51544189 231.11300659]
[-285.48281860 232.86639404]
[-300.45101929 231.12019348]
[-314.61288452 225.96859741]
[-327.20462036 217.68940735]
[-337.54718018 206.72912598]
[-345.08282471 193.67881775]
[-349.40518188 179.24226379]
[-350.28109741 164.19799805]
[-347.66336060 149.35737610]
[-341.69317627 135.52070618]
[-332.69244385 123.43418884]
[-321.14663696 113.74964142]
[-307.67834473 106.98932648]
[-293.01391602 103.51782227]
[-277.94418335 103.52235413]
[-263.28182983 107.00266266]
[-249.81761169 113.77107239]
[-238.27761841 123.46256256]
[-229.28416443 135.55448914]
[-223.32228088 149.39474487]
[-208.55017090 146.79002380]
[-193.77804565 144.18530273]
[-179.00593567 141.58058167]
[-164.23381042 138.97584534]
[-153.04347229 129.14602661]
[-138.10939026 134.36941528]
[-123.33726501 131.76467896]
[-108.56514740 129.15995789]
[-110.12486267 114.04518127]
[-110.59064484 98.85726929]
[-109.96006775 83.67531586]
[-108.23641968 68.57834625]
[-105.42866516 53.64496231]
[-101.55142975 38.95290756]
[-96.62489319 24.57866859]
[-90.67470551 10.59708214]
[-83.73184967 -2.91906214]
[-75.83246613 -15.89939880]
[-67.01767731 -28.27635193]
[-57.33337402 -39.98548126]
[-46.82997894 -50.96583557]
[-35.56216812 -61.16024399]
[-23.58860970 -70.51563263]
[-10.97163486 -78.98329926]
[2.22307014 -86.51916504]
[15.92681313 -93.08398438]
[30.06824875 -98.64359283]
[44.57375717 -103.16903687]
[59.36782074 -106.63676453]
[74.37342072 -109.02871704]
[89.51243591 -110.33244324]
[104.70604706 -110.54116058]
[119.87516022 -109.65377045]
[134.94079590 -107.67490387]
[149.82453918 -104.61486053]
[164.44888306 -100.48957062]
[178.73770142 -95.32051086]
[192.61659241 -89.13459015]
[206.01332092 -81.96401215]
[218.85813904 -73.84610748]
[231.08415222 -64.82315063]
[242.62773132 -54.94210052]
[253.42878723 -44.25440598]
[263.43106079 -32.81570816]
[275.40133667 -41.85522461]
[287.37158203 -50.89474487]
[299.34185791 -59.93426514]
[311.31210327 -68.97378540]
[311.93371582 -84.59900665]
[322.49182129 -96.13420868]
[338.00115967 -98.13281250]
[351.13870239 -89.65115356]
[355.70132446 -74.69399261]
[349.53469849 -60.32365799]
[335.55047607 -53.32537842]
[320.35162354 -57.00352478]
[308.38134766 -47.96400833]
[296.41110229 -38.92448807]
[284.44085693 -29.88496780]
[272.47058105 -20.84544754]
[282.13653564 -5.71661806]
[290.47882080 10.18050861]
[297.43679810 26.73040009]
[302.95989990 43.81277847]
[307.00799561 61.30350113]
[309.55163574 79.07544708]
[310.57235718 96.99946594]
[310.06277466 114.94528961]
[308.02651978 132.78250122]
[304.47845459 150.38146973]
[318.90582275 154.48640442]
[333.33322144 158.59135437]
[349.09640503 154.06881714]
[360.70510864 165.65199280]
[356.21728516 181.42510986]
[340.24960327 185.16213989]
[329.22827148 173.01873779]
[314.80087280 168.91378784]
[300.37350464 164.80885315]
[295.70455933 177.77819824]
[290.19720459 190.41432190]
[283.87500000 202.66310120]
[276.76501465 214.47204590]
[268.89776611 225.79057312]
[260.30691528 236.57019043]
[251.02928162 246.76472473]
[241.10459900 256.33047485]
[230.57540894 265.22647095]
[219.48680115 273.41461182]
[207.88629150 280.85983276]
[195.82356262 287.53018188]
[183.35032654 293.39712524]
[170.51998901 298.43551636]
[157.38752747 302.62377930]
[144.00921631 305.94396973]
[130.44236755 308.38183594]
[116.74507904 309.92697144]
[102.97605896 310.57272339]
[89.19429016 310.31634521]
[75.45881653 309.15893555]
[61.82848358 307.10543823]
[48.36168289 304.16467285]
[35.11610794 300.34921265]
[22.14850998 295.67541504]
[9.51444340 290.16333008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 55]
[14 54]
[15 53]
[17 51]
[18 50]
[19 49]
[20 48]
[21 47]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
