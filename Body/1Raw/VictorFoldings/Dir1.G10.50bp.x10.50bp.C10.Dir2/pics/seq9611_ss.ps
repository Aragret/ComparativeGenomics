%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAGGAAUAGGGGGGGGGGAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCxxxxxxxxxxCAAAACCAUACCUCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCAUCCCCCCCCCCUAGCAGGAAUA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 395.14846802]
[71.01555634 389.59545898]
[58.81560135 380.72912598]
[49.20452881 369.10684204]
[42.78650284 355.45913696]
[39.96496582 340.64395142]
[40.91728210 325.59255981]
[45.58358765 311.25112915]
[53.67055511 298.52117920]
[64.66983032 288.20291138]
[77.88998413 280.94494629]
[92.50000000 277.20349121]
[92.50000000 262.20349121]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[83.92769623 48.10530472]
[84.27127075 35.57321548]
[92.79801178 26.93858147]
[93.10598755 11.94174480]
[93.41396332 -3.05509353]
[93.72194672 -18.05193138]
[94.02992249 -33.04877090]
[79.08781433 -34.43846130]
[64.28494263 -36.90272522]
[49.69846725 -40.42871094]
[35.40444946 -44.99803925]
[21.47740364 -50.58688736]
[7.98994541 -57.16611481]
[-4.98760939 -64.70141602]
[-17.38759995 -73.15351868]
[-29.14538002 -82.47834015]
[-40.19964600 -92.62728119]
[-50.49277115 -103.54741669]
[-59.97108459 -115.18181610]
[-68.58517456 -127.46983337]
[-76.29013062 -140.34738159]
[-83.04577637 -153.74734497]
[-88.81690216 -167.59985352]
[-93.57341003 -181.83267212]
[-97.29050446 -196.37162781]
[-99.94880676 -211.14088440]
[-101.53446198 -226.06347656]
[-102.03919220 -241.06156921]
[-101.46037292 -256.05700684]
[-99.80101776 -270.97155762]
[-97.06978607 -285.72750854]
[-93.28090668 -300.24792480]
[-88.45414734 -314.45706177]
[-82.61465454 -328.28091431]
[-75.79289246 -341.64733887]
[-68.02441406 -354.48666382]
[-59.34972382 -366.73196411]
[-49.81404495 -378.31939697]
[-39.46710205 -389.18853760]
[-28.36282921 -399.28274536]
[-16.55912781 -408.54937744]
[-4.11753178 -416.94012451]
[8.89709091 -424.41122437]
[22.41688728 -430.92373657]
[36.37137222 -436.44369507]
[50.68778992 -440.94235229]
[65.29150391 -444.39624023]
[80.10637665 -446.78735352]
[95.05516052 -448.10321045]
[110.05992889 -448.33694458]
[125.04245758 -447.48739624]
[139.92462158 -445.55889893]
[154.62882996 -442.56161499]
[169.07843018 -438.51107788]
[183.19808960 -433.42843628]
[196.91418457 -427.34020996]
[210.15521240 -420.27813721]
[222.85212708 -412.27902222]
[234.93875122 -403.38458252]
[246.35206604 -393.64117432]
[257.03256226 -383.09957886]
[266.92456055 -371.81478882]
[275.97647095 -359.84564209]
[284.14111328 -347.25451660]
[291.37591553 -334.10708618]
[297.64315796 -320.47186279]
[302.91018677 -306.41995239]
[307.14953613 -292.02459717]
[310.33908081 -277.36090088]
[312.46221924 -262.50524902]
[313.50784302 -247.53514099]
[313.47052002 -232.52859497]
[312.35049438 -217.56385803]
[310.15353394 -202.71896362]
[306.89111328 -188.07128906]
[302.58026123 -173.69720459]
[297.24340820 -159.67164612]
[290.90844727 -146.06776428]
[283.60836792 -132.95645142]
[275.38122559 -120.40607452]
[266.26989746 -108.48207855]
[256.32192993 -97.24662018]
[245.58915710 -86.75827026]
[234.12754822 -77.07172394]
[221.99684143 -68.23748016]
[209.26031494 -60.30158615]
[195.98432922 -53.30542755]
[182.23812866 -47.28547668]
[168.09338379 -42.27311707]
[153.62382507 -38.29448318]
[138.90489197 -35.37031555]
[124.01332092 -33.51586533]
[109.02675629 -32.74079132]
[108.71878052 -17.74395370]
[108.41080475 -2.74711609]
[108.10282898 12.24972153]
[107.79484558 27.24655914]
[117.08235931 42.10545349]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[107.50000000 262.20349121]
[107.50000000 277.20349121]
[122.11001587 280.94494629]
[135.33016968 288.20291138]
[146.32945251 298.52117920]
[154.41641235 311.25112915]
[159.08271790 325.59255981]
[160.03503418 340.64395142]
[157.21350098 355.45913696]
[150.79547119 369.10684204]
[141.18440247 380.72912598]
[128.98443604 389.59545898]
[114.96250153 395.14846802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[25 128]
[26 127]
[27 126]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
