%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCACCCCGGGGGGGGGGUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCAxxxxxxxxxxACGCAAAACUAACCCCCUAAUAAAAUUAAUUAACCACUCAUUCAUCGACCCCCCCCCCCCUCCCCACCCC\
) } def
/len { sequence length } bind def

/coor [
[82.30060577 371.65338135]
[69.74238586 363.30221558]
[59.65616226 352.08975220]
[52.67596817 338.72085571]
[49.24058533 324.03585815]
[49.56595993 308.95791626]
[53.63164520 294.43478394]
[61.18206406 281.37945557]
[71.74259186 270.61254883]
[84.64939117 262.81091309]
[99.09111786 258.46496582]
[98.46714020 243.47795105]
[97.84316254 228.49093628]
[97.21918488 213.50390625]
[96.59520721 198.51689148]
[95.97122955 183.52987671]
[95.34725189 168.54286194]
[94.72327423 153.55584717]
[94.09929657 138.56883240]
[93.47531891 123.58181763]
[92.85134125 108.59480286]
[92.07149506 93.61508179]
[91.13587189 78.64429474]
[76.13118744 78.66564941]
[61.15311813 77.77221680]
[46.25737381 75.96732330]
[31.49936867 73.25768280]
[16.93400764 69.65336609]
[2.61547041 65.16779327]
[-11.40297318 59.81764603]
[-25.06917572 53.62282562]
[-38.33229446 46.60638046]
[-51.14299393 38.79441071]
[-63.45361328 30.21597862]
[-75.21836090 20.90299606]
[-86.39346313 10.89010811]
[-96.93735504 0.21456410]
[-106.81080627 -11.08392239]
[-115.97708893 -22.96331978]
[-124.40210724 -35.37943649]
[-132.05451965 -48.28608322]
[-138.90585327 -61.63524246]
[-144.93061829 -75.37725830]
[-150.10639954 -89.46101379]
[-154.41397095 -103.83410645]
[-157.83726501 -118.44306946]
[-160.36358643 -133.23355103]
[-161.98350525 -148.15055847]
[-162.69100952 -163.13854980]
[-162.48347473 -178.14181519]
[-161.36166382 -193.10452271]
[-159.32975769 -207.97099304]
[-156.39529419 -222.68594360]
[-152.56921387 -237.19462585]
[-147.86573792 -251.44306946]
[-142.30235291 -265.37826538]
[-135.89979553 -278.94839478]
[-128.68183899 -292.10293579]
[-120.67535400 -304.79296875]
[-111.91012573 -316.97128296]
[-102.41875458 -328.59259033]
[-92.23656464 -339.61364746]
[-81.40141296 -349.99346924]
[-69.95362854 -359.69342041]
[-57.93578339 -368.67742920]
[-45.39259338 -376.91204834]
[-32.37071228 -384.36669922]
[-18.91859055 -391.01358032]
[-5.08626604 -396.82803345]
[9.07480145 -401.78836060]
[23.51193237 -405.87615967]
[38.17141724 -409.07623291]
[52.99872589 -411.37661743]
[67.93869781 -412.76879883]
[82.93574524 -413.24758911]
[97.93409729 -412.81121826]
[112.87794495 -411.46127319]
[127.71169281 -409.20281982]
[142.38017273 -406.04421997]
[156.82879639 -401.99725342]
[171.00382996 -397.07696533]
[184.85253906 -391.30166626]
[198.32341003 -384.69284058]
[211.36631775 -377.27505493]
[223.93273926 -369.07592773]
[235.97593689 -360.12594604]
[247.45111084 -350.45840454]
[258.31555176 -340.10925293]
[268.52886963 -329.11703491]
[278.05307007 -317.52261353]
[286.85269165 -305.36911011]
[294.89501953 -292.70175171]
[302.15014648 -279.56768799]
[308.59106445 -266.01571655]
[314.19381714 -252.09631348]
[318.93756104 -237.86123657]
[322.80465698 -223.36341858]
[325.78070068 -208.65682983]
[327.85464478 -193.79615784]
[329.01876831 -178.83668518]
[329.26870728 -163.83407593]
[328.60357666 -148.84413147]
[327.02584839 -133.92260742]
[324.54138184 -119.12503815]
[321.15939331 -104.50645447]
[316.89248657 -90.12123871]
[311.75653076 -76.02291107]
[305.77066040 -62.26391220]
[298.95709229 -48.89543152]
[291.34121704 -35.96719742]
[282.95132446 -23.52731133]
[273.81866455 -11.62204266]
[263.97720337 -0.29568410]
[253.46354675 10.40963078]
[242.31678772 20.45407486]
[230.57843018 29.80028534]
[218.29211426 38.41349411]
[205.50355530 46.26165390]
[192.26033020 53.31557083]
[178.61169434 59.54900742]
[164.60842896 64.93877411]
[150.30264282 69.46481323]
[135.74752808 73.11029816]
[120.99724579 75.86165619]
[106.10665894 77.70866394]
[107.04228973 92.67945862]
[110.66840363 99.94136810]
[107.83835602 107.97082520]
[108.46233368 122.95783997]
[109.08631134 137.94485474]
[109.71028900 152.93186951]
[110.33426666 167.91888428]
[110.95824432 182.90589905]
[111.58222198 197.89291382]
[112.20619965 212.87992859]
[112.83017731 227.86695862]
[113.45415497 242.85397339]
[114.07813263 257.84097290]
[128.83113098 260.97143555]
[142.34176636 267.67318726]
[153.76075745 277.52496338]
[162.37026978 289.90750122]
[167.62911987 304.04238892]
[169.20672607 319.04113770]
[167.00392151 333.96087646]
[161.15916443 347.86373901]
[152.03988647 359.87579346]
[140.21931458 369.24194336]
[126.44050598 375.37344360]
[111.56960297 377.88485718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[22 126]
[23 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
