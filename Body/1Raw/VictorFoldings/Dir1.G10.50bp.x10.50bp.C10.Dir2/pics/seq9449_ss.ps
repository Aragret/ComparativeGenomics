%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUACAAACGGGGGGGGGGAACUAACCUGCCACUAAUAGUUAUGUCAUCCCUCUUAUUAAUCAUCAUCCxxxxxxxxxxCUAACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCCCCCCCCCCCACAAAC\
) } def
/len { sequence length } bind def

/coor [
[95.42191315 499.22070312]
[81.57598114 493.20468140]
[69.86731720 483.67526245]
[61.16479111 471.33959961]
[56.11418915 457.11306763]
[55.09029770 442.05139160]
[58.16909790 427.27224731]
[65.12211609 413.87231445]
[75.43340302 402.84597778]
[88.33778381 395.01147461]
[102.87767029 390.95016479]
[102.87767029 375.95016479]
[102.87767029 360.95016479]
[102.87767029 345.95016479]
[102.87767029 330.95016479]
[102.87767029 315.95016479]
[102.87767029 300.95016479]
[102.87767029 285.95016479]
[102.87767029 270.95016479]
[102.87767029 255.95016479]
[86.47528839 242.52719116]
[85.16113281 221.09303284]
[100.18721008 205.36219788]
[98.62962341 190.44329834]
[97.07204437 175.52438354]
[95.51446533 160.60546875]
[92.95769501 158.08943176]
[91.52506256 154.18440247]
[91.86752319 149.44783020]
[94.35504913 144.71160889]
[93.73107147 129.72459412]
[93.10709381 114.73758698]
[83.75213623 100.84586334]
[91.61402130 86.05783844]
[90.67839813 71.08704376]
[79.11062622 60.65514755]
[78.37503052 45.45930862]
[88.39154053 34.49549484]
[87.45590973 19.52470398]
[78.87288666 6.23401976]
[85.80125427 -6.95108509]
[84.86562347 -21.92187691]
[83.92999268 -36.89266968]
[82.99436951 -51.86346054]
[82.05873871 -66.83425140]
[67.05889130 -67.49511719]
[52.21427536 -69.74664307]
[37.69308472 -73.56333160]
[23.65985680 -78.90193176]
[10.27359962 -85.70195007]
[-2.31400919 -93.88633728]
[-13.96034336 -103.36235809]
[-24.53344154 -114.02264404]
[-33.91350174 -125.74640656]
[-41.99423981 -138.40080261]
[-48.68409729 -151.84245300]
[-53.90726852 -165.91905212]
[-57.60457611 -180.47108459]
[-59.73412323 -195.33369446]
[-60.27178192 -210.33847046]
[-59.21146011 -225.31536865]
[-56.56517029 -240.09472656]
[-52.36289978 -254.50906372]
[-46.65225983 -268.39505005]
[-39.49796295 -281.59536743]
[-30.98106575 -293.96041870]
[-21.19807434 -305.35009766]
[-10.25983810 -315.63540649]
[1.70970619 -324.69973755]
[14.57493305 -332.44039917]
[28.19007111 -338.76971436]
[42.40084839 -343.61593628]
[57.04624557 -346.92416382]
[71.96031952 -348.65692139]
[86.97409058 -348.79455566]
[101.91742706 -347.33554077]
[116.62101746 -344.29635620]
[130.91825867 -339.71148682]
[144.64714050 -333.63287354]
[157.65213013 -326.12936401]
[169.78584290 -317.28601074]
[180.91081238 -307.20300293]
[190.90098572 -295.99456787]
[199.64314270 -283.78775024]
[207.03825378 -270.72082520]
[213.00251770 -256.94186401]
[217.46836853 -242.60700989]
[220.38517761 -227.87866211]
[221.71990967 -212.92370605]
[221.45742798 -197.91160583]
[219.60073853 -183.01245117]
[216.17085266 -168.39506531]
[211.20663452 -154.22508240]
[204.76434326 -140.66304016]
[196.91697693 -127.86260986]
[187.75343323 -115.96884918]
[177.37756348 -105.11650085]
[165.90692139 -95.42855072]
[153.47148132 -87.01475525]
[140.21214294 -79.97045898]
[126.27915192 -74.37547302]
[111.83037567 -70.29319763]
[97.02953339 -67.76988220]
[97.96515656 -52.79908752]
[98.90078735 -37.82829666]
[99.83641815 -22.85750580]
[100.77204132 -7.88671350]
[109.28814697 4.33315992]
[102.42669678 18.58907509]
[103.36232758 33.55986786]
[114.66596985 43.19123459]
[115.82809448 58.36042023]
[105.64918518 70.15141296]
[106.58481598 85.12220764]
[114.85993195 93.37497711]
[115.46753693 105.04616547]
[108.09410858 114.11360931]
[108.71808624 129.10061646]
[109.34206390 144.08764648]
[110.43337250 159.04788208]
[111.99095917 173.96679688]
[113.54853821 188.88571167]
[115.10611725 203.80462646]
[123.63149261 206.96884155]
[130.60955811 212.73150635]
[135.28323364 220.43022156]
[137.15774536 229.19461060]
[136.05287170 238.04486084]
[132.11985779 246.00111389]
[125.82147217 252.19201660]
[117.87767029 255.95016479]
[117.87767029 270.95016479]
[117.87767029 285.95016479]
[117.87767029 300.95016479]
[117.87767029 315.95016479]
[117.87767029 330.95016479]
[117.87767029 345.95016479]
[117.87767029 360.95016479]
[117.87767029 375.95016479]
[117.87767029 390.95016479]
[132.41755676 395.01147461]
[145.32194519 402.84597778]
[155.63322449 413.87231445]
[162.58624268 427.27224731]
[165.66503906 442.05139160]
[164.64115906 457.11306763]
[159.59054565 471.33959961]
[150.88803101 483.67526245]
[139.17936707 493.20468140]
[125.33342743 499.22070312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 123]
[24 122]
[25 121]
[26 120]
[30 119]
[31 118]
[32 117]
[34 114]
[35 113]
[38 110]
[39 109]
[41 107]
[42 106]
[43 105]
[44 104]
[45 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
