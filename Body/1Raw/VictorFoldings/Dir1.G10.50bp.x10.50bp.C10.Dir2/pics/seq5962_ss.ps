%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAGAAAUUGGGGGGGGGGUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGUAAGUUGCAAUAxxxxxxxxxxCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCUUCUUAUUAUUUGACCCCCCCCCCUCUAGAAAUU\
) } def
/len { sequence length } bind def

/coor [
[112.74394989 485.66531372]
[98.89801025 479.64929199]
[87.18934631 470.11987305]
[78.48682404 457.78421021]
[73.43621826 443.55770874]
[72.41233063 428.49600220]
[75.49112701 413.71685791]
[82.44415283 400.31692505]
[92.75543213 389.29058838]
[105.65981293 381.45608521]
[120.19969940 377.39477539]
[120.19969940 362.39477539]
[120.19969940 347.39477539]
[120.19969940 332.39477539]
[120.19969940 317.39477539]
[120.19969940 302.39477539]
[120.19969940 287.39477539]
[120.19969940 272.39477539]
[120.19969940 257.39477539]
[120.19969940 242.39477539]
[120.19969940 227.39477539]
[118.33209229 212.51148987]
[114.62593079 197.97656250]
[110.91976929 183.44161987]
[107.21360779 168.90667725]
[103.58203125 165.71495056]
[101.95661163 160.18418884]
[103.66903687 153.68995667]
[100.57071686 139.01342773]
[97.47239685 124.33689880]
[94.37407684 109.66037750]
[91.12324524 95.01687622]
[80.57451630 87.52166748]
[78.06724548 75.23620605]
[84.41610718 64.89215851]
[81.31778717 50.21563721]
[70.89685059 38.31124115]
[75.83841705 24.26025391]
[72.74009705 9.58372974]
[69.64176941 -5.09279633]
[66.54344940 -19.76932144]
[51.60969162 -18.21995163]
[36.59578705 -18.24009514]
[21.66624069 -19.82953262]
[6.98462439 -22.97084999]
[-7.28819942 -27.62962914]
[-20.99584961 -33.75482559]
[-33.98814011 -41.27932739]
[-46.12271500 -50.12069321]
[-57.26662827 -60.18204880]
[-67.29777527 -71.35316467]
[-76.10625458 -83.51163483]
[-83.59555054 -96.52425385]
[-89.68360901 -110.24843597]
[-94.30372620 -124.53382111]
[-97.40527344 -139.22389221]
[-98.95428467 -154.15768433]
[-98.93377686 -169.17158508]
[-97.34397888 -184.10110474]
[-94.20230103 -198.78263855]
[-89.54317474 -213.05534363]
[-83.41764832 -226.76284790]
[-75.89282990 -239.75495911]
[-67.05117035 -251.88931274]
[-56.98954010 -263.03298950]
[-45.81818390 -273.06387329]
[-33.65949631 -281.87203979]
[-20.64669991 -289.36102295]
[-6.92236757 -295.44876099]
[7.36313009 -300.06851196]
[22.05327225 -303.16970825]
[36.98710632 -304.71835327]
[52.00101089 -304.69747925]
[66.93048096 -303.10733032]
[81.61194611 -299.96530151]
[95.88454437 -295.30581665]
[109.59189606 -289.17996216]
[122.58381653 -281.65481567]
[134.71797180 -272.81286621]
[145.86138916 -262.75097656]
[155.89199829 -251.57937622]
[164.69987488 -239.42047119]
[172.18853760 -226.40748596]
[178.27593994 -212.68301392]
[182.89535522 -198.39739990]
[185.99620056 -183.70718384]
[187.54447937 -168.77331543]
[187.52323914 -153.75941467]
[185.93270874 -138.82997131]
[182.79032898 -124.14859009]
[178.13050842 -109.87610626]
[172.00431824 -96.16889954]
[164.47886658 -83.17716217]
[155.63661194 -71.04322815]
[145.57444763 -59.90005112]
[134.40260315 -49.86971664]
[122.24348450 -41.06212616]
[109.23032379 -33.57377625]
[95.50569916 -27.48671913]
[81.21997833 -22.86764336]
[84.31829834 -8.19111824]
[87.41661835 6.48540735]
[90.51493835 21.16193390]
[100.71426392 32.01656723]
[95.99430847 47.11731339]
[99.09263611 61.79383850]
[111.50566864 74.15977478]
[105.73213959 91.61389160]
[110.51126099 98.17469025]
[109.05059814 106.56204987]
[112.14891815 121.23857880]
[115.24724579 135.91510010]
[118.34556580 150.59162903]
[121.74854279 165.20051575]
[125.45470428 179.73545837]
[129.16085815 194.27040100]
[132.86701965 208.80532837]
[138.32083130 194.83192444]
[149.21501160 184.52093506]
[163.46705627 179.84338379]
[178.35252380 181.69345093]
[191.02592468 189.71748352]
[199.06460571 202.38157654]
[200.93190002 217.26490784]
[196.27084351 231.52233887]
[185.97245789 242.42845154]
[172.00537109 247.89842224]
[157.03953552 246.88661194]
[143.93582153 239.58644104]
[135.19970703 227.39477539]
[135.19970703 242.39477539]
[135.19970703 257.39477539]
[135.19970703 272.39477539]
[135.19970703 287.39477539]
[135.19970703 302.39477539]
[135.19970703 317.39477539]
[135.19970703 332.39477539]
[135.19970703 347.39477539]
[135.19970703 362.39477539]
[135.19970703 377.39477539]
[149.73959351 381.45608521]
[162.64396667 389.29058838]
[172.95526123 400.31692505]
[179.90827942 413.71685791]
[182.98707581 428.49600220]
[181.96318054 443.55770874]
[176.91258240 457.78421021]
[168.21005249 470.11987305]
[156.50140381 479.64929199]
[142.65545654 485.66531372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 117]
[23 116]
[24 115]
[25 114]
[28 113]
[29 112]
[30 111]
[31 110]
[32 108]
[35 106]
[36 105]
[38 103]
[39 102]
[40 101]
[41 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
