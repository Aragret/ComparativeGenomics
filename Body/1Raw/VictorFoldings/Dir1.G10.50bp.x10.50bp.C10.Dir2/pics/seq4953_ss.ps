%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAUCAUGGGGGGGGGGAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCxxxxxxxxxxAACCCAAACAACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCUCCACCCCCCCCCCUAAUAUUCAU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 381.06796265]
[71.19830322 375.05194092]
[59.48964310 365.52252197]
[50.78712082 353.18685913]
[45.73651886 338.96032715]
[44.71262741 323.89865112]
[47.79142761 309.11947632]
[54.74444962 295.71954346]
[65.05573273 284.69323730]
[77.96011353 276.85870361]
[92.50000000 272.79739380]
[92.50000000 257.79739380]
[92.50000000 242.79739380]
[92.50000000 227.79739380]
[92.50000000 212.79739380]
[92.50000000 197.79739380]
[92.50000000 182.79739380]
[92.50000000 167.79739380]
[92.50000000 152.79739380]
[92.50000000 137.79739380]
[72.63474274 127.12998199]
[62.13924789 107.17335510]
[64.60714722 84.76058960]
[79.19343567 67.56575012]
[73.70640564 53.60536194]
[68.21937561 39.64497375]
[62.73234177 25.68458176]
[42.87656784 20.97938538]
[31.91859245 1.38274562]
[16.98428535 2.78504920]
[2.04997778 4.18735266]
[-5.74102402 17.60673904]
[-19.94537926 23.85301018]
[-35.10122299 20.52434921]
[-45.38082886 8.90069199]
[-46.83147049 -6.54842663]
[-38.89535141 -19.88250542]
[-24.62407303 -25.97431946]
[-9.50522900 -22.48144150]
[0.64767420 -10.74695492]
[15.58198166 -12.14925861]
[30.51628876 -13.55156231]
[39.90345001 -25.25118637]
[38.03583908 -40.13446426]
[36.16822433 -55.01774597]
[26.45480728 -63.56779861]
[25.23680305 -76.04719543]
[32.62545395 -85.67607117]
[31.06787300 -100.59497833]
[29.51029205 -115.51389313]
[14.49409199 -115.95792389]
[-0.32893220 -118.39952087]
[-14.69424629 -122.79510498]
[-28.34548378 -129.06623840]
[-41.03902435 -137.10101318]
[-52.54833221 -146.75602722]
[-62.66801453 -157.85897827]
[-71.21747589 -170.21171570]
[-78.04412842 -183.59379578]
[-83.02616119 -197.76640320]
[-86.07464600 -212.47660828]
[-87.13519287 -227.46189880]
[-86.18887329 -242.45481873]
[-83.25256348 -257.18783569]
[-78.37867737 -271.39797974]
[-71.65419006 -284.83169556]
[-63.19911194 -297.24923706]
[-53.16432953 -308.42898560]
[-41.72892761 -318.17141724]
[-29.09698486 -326.30267334]
[-15.49393082 -332.67764282]
[-1.16252911 -337.18258667]
[13.64145947 -339.73706055]
[28.65384102 -340.29550171]
[43.60670090 -338.84793091]
[58.23318863 -335.42022705]
[72.27227783 -330.07348633]
[85.47341919 -322.90319824]
[97.60102844 -314.03726196]
[108.43867493 -303.63397217]
[117.79294586 -291.87890625]
[125.49690247 -278.98193359]
[131.41307068 -265.17312622]
[135.43583679 -250.69900513]
[137.49345398 -235.81781006]
[137.54916382 -220.79515076]
[135.60198975 -205.89912415]
[131.68667603 -191.39553833]
[125.87311554 -177.54325867]
[118.26502991 -164.58946228]
[108.99820709 -152.76536560]
[98.23802185 -142.28195190]
[86.17650604 -133.32632446]
[73.02890778 -126.05830383]
[59.02986526 -120.60759735]
[44.42920685 -117.07147217]
[45.98678589 -102.15256500]
[47.54436874 -87.23365021]
[58.60623932 -73.64560699]
[51.05150604 -56.88535690]
[52.91911697 -42.00207901]
[54.78673172 -27.11879921]
[73.39581299 -23.81405067]
[85.34148407 -10.27998924]
[86.21740723 6.90136099]
[76.69273376 20.19755173]
[82.17976379 34.15793991]
[87.66679382 48.11833191]
[93.15382385 62.07872009]
[102.35259247 61.53756714]
[111.41682434 63.19579315]
[119.82822418 66.95858002]
[127.10578156 72.61077118]
[132.83337402 79.82913971]
[136.68345642 88.20093536]
[138.43588257 97.24743652]
[137.99044800 106.45133209]
[152.00715637 111.79283905]
[166.02386475 117.13435364]
[181.19314575 111.91204071]
[194.65618896 120.63706970]
[196.08529663 136.61634827]
[184.38418579 147.59193420]
[168.52894592 145.14430237]
[160.68235779 131.15106201]
[146.66564941 125.80955505]
[132.64892578 120.46804047]
[127.83240509 126.65052795]
[121.86460114 131.73062134]
[114.99237823 135.49819946]
[107.50000000 137.79739380]
[107.50000000 152.79739380]
[107.50000000 167.79739380]
[107.50000000 182.79739380]
[107.50000000 197.79739380]
[107.50000000 212.79739380]
[107.50000000 227.79739380]
[107.50000000 242.79739380]
[107.50000000 257.79739380]
[107.50000000 272.79739380]
[122.03988647 276.85870361]
[134.94427490 284.69323730]
[145.25555420 295.71954346]
[152.20857239 309.11947632]
[155.28736877 323.89865112]
[154.26348877 338.96032715]
[149.21287537 353.18685913]
[140.51036072 365.52252197]
[128.80169678 375.05194092]
[114.95575714 381.06796265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 109]
[25 108]
[26 107]
[27 106]
[29 42]
[30 41]
[31 40]
[43 102]
[44 101]
[45 100]
[48 98]
[49 97]
[50 96]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
