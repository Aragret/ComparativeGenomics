%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUACCAACAGGGGGGGGGGCCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCAGxxxxxxxxxxUACUCCUAAUCACAUAACCUAUUCCCCCGAGCAAUCUCAAUUACAAUAUACCCCCCCCCCUACACCAACA\
) } def
/len { sequence length } bind def

/coor [
[75.40644073 365.80245972]
[61.56050110 359.78643799]
[49.85184097 350.25701904]
[41.14931488 337.92132568]
[36.09871292 323.69482422]
[35.07482147 308.63314819]
[38.15362167 293.85397339]
[45.10664368 280.45404053]
[55.41792679 269.42770386]
[68.32231140 261.59320068]
[82.86219788 257.53189087]
[82.86219788 242.53189087]
[82.86219788 227.53189087]
[82.86219788 212.53189087]
[82.86219788 197.53189087]
[82.86219788 182.53189087]
[82.86219788 167.53189087]
[82.86219788 152.53189087]
[82.86219788 137.53189087]
[82.86219788 122.53189087]
[78.42524719 109.71248627]
[81.04134369 98.58419800]
[87.92414856 92.22423553]
[95.33283997 91.48057556]
[93.46523285 76.59729767]
[91.59761810 61.71401978]
[79.40167999 52.02397919]
[77.71967316 36.90361023]
[87.03280640 25.33636665]
[85.16519165 10.45308590]
[83.29757690 -4.43019390]
[81.42996216 -19.31347466]
[69.23403168 -29.00351334]
[67.55202484 -44.12388229]
[76.86515045 -55.69112778]
[74.99754333 -70.57440948]
[73.12992859 -85.45768738]
[71.26231384 -100.34096527]
[56.26135635 -99.81419373]
[41.27356720 -100.63423157]
[26.41962624 -102.79447937]
[11.81912708 -106.27754211]
[-2.41037011 -111.05536652]
[-16.15429688 -117.08949280]
[-29.30199432 -124.33133698]
[-41.74760056 -132.72259521]
[-53.39091110 -142.19569397]
[-64.13817596 -152.67436218]
[-73.90287018 -164.07423401]
[-82.60636139 -176.30351257]
[-90.17858124 -189.26374817]
[-96.55856323 -202.85058594]
[-101.69493103 -216.95462036]
[-105.54633331 -231.46231079]
[-108.08175659 -246.25683594]
[-109.28078461 -261.21908569]
[-109.13377380 -276.22854614]
[-107.64190674 -291.16442871]
[-104.81718445 -305.90646362]
[-100.68235779 -320.33593750]
[-95.27071381 -334.33663940]
[-88.62583160 -347.79592896]
[-80.80120850 -360.60534668]
[-71.85984802 -372.66180420]
[-61.87374115 -383.86822510]
[-50.92328644 -394.13436890]
[-39.09666061 -403.37759399]
[-26.48907852 -411.52346802]
[-13.20205593 -418.50640869]
[0.65742612 -424.27017212]
[14.97777843 -428.76834106]
[29.64369774 -431.96475220]
[44.53710556 -433.83364868]
[59.53807831 -434.35995483]
[74.52584076 -433.53945923]
[89.37971497 -431.37875366]
[103.98011017 -427.89526367]
[118.20945740 -423.11700439]
[131.95320129 -417.08245850]
[145.10067749 -409.84020996]
[157.54603577 -401.44857788]
[169.18905640 -391.97512817]
[179.93600464 -381.49612427]
[189.70034790 -370.09594727]
[198.40345764 -357.86639404]
[205.97528076 -344.90594482]
[212.35484314 -331.31890869]
[217.49078369 -317.21469116]
[221.34175110 -302.70690918]
[223.87672424 -287.91229248]
[225.07528687 -272.95004272]
[224.92782593 -257.94055176]
[223.43550110 -243.00471497]
[220.61032104 -228.26277161]
[216.47505188 -213.83343506]
[211.06298828 -199.83287048]
[204.41769409 -186.37380981]
[196.59268188 -173.56462097]
[187.65095520 -161.50843811]
[177.66450500 -150.30232239]
[166.71372986 -140.03649902]
[154.88682556 -130.79364014]
[142.27899170 -122.64816284]
[128.99176025 -115.66564178]
[115.13210297 -109.90229797]
[100.81161499 -105.40454102]
[86.14559174 -102.20858002]
[88.01320648 -87.32530212]
[89.88082123 -72.44201660]
[91.74843597 -57.55873871]
[103.63082123 -48.65119171]
[105.73686981 -33.58403397]
[96.31324768 -21.18108749]
[98.18085480 -6.29780722]
[100.04846954 8.58547306]
[101.91608429 23.46875191]
[113.79847717 32.37630081]
[115.90451813 47.44345856]
[106.48089600 59.84640503]
[108.34851074 74.72968292]
[110.21612549 89.61296844]
[118.46841431 102.13892365]
[131.40646362 109.72883606]
[147.23132324 107.09185791]
[159.06278992 117.92679596]
[157.82478333 133.92201233]
[144.46701050 142.80734253]
[129.23638916 137.76672363]
[123.81655884 122.66689301]
[110.87850189 115.07698059]
[97.86219788 122.53189087]
[97.86219788 137.53189087]
[97.86219788 152.53189087]
[97.86219788 167.53189087]
[97.86219788 182.53189087]
[97.86219788 197.53189087]
[97.86219788 212.53189087]
[97.86219788 227.53189087]
[97.86219788 242.53189087]
[97.86219788 257.53189087]
[112.40208435 261.59320068]
[125.30646515 269.42770386]
[135.61775208 280.45404053]
[142.57077026 293.85397339]
[145.64956665 308.63314819]
[144.62567139 323.69482422]
[139.57507324 337.92132568]
[130.87254333 350.25701904]
[119.16388702 359.78643799]
[105.31794739 365.80245972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[24 121]
[25 120]
[26 119]
[29 116]
[30 115]
[31 114]
[32 113]
[35 110]
[36 109]
[37 108]
[38 107]
[122 130]
[123 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
