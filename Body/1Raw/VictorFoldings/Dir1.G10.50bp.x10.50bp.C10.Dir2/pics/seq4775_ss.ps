%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAAAAAAGGGGGGGGGGAUAAACCCUCGUUCCACAGAAGCUGCCAUCAAGUAUUUCCUCACGCAAGCxxxxxxxxxxCAGGAGUAUCAAUCACCUGAGCUCACCAUAGUCUAAUAGAAAACAACCGACCCCCCCCCCAACCAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[74.78395081 459.77359009]
[60.93801498 453.75756836]
[49.22935486 444.22814941]
[40.52682877 431.89245605]
[35.47622681 417.66595459]
[34.45233536 402.60427856]
[37.53113556 387.82510376]
[44.48415756 374.42517090]
[54.79544067 363.39883423]
[67.69982147 355.56433105]
[82.23970795 351.50302124]
[82.23970795 336.50302124]
[82.23970795 321.50302124]
[82.23970795 306.50302124]
[82.23970795 291.50302124]
[82.23970795 276.50302124]
[82.23970795 261.50302124]
[82.23970795 246.50302124]
[82.23970795 231.50302124]
[82.23970795 216.50302124]
[71.96739197 227.43370056]
[57.26288986 230.39637756]
[43.55921555 224.29644775]
[35.91960907 211.38766479]
[37.16674805 196.43960571]
[46.83984375 184.97526550]
[61.36487579 181.23048401]
[75.37513733 186.58888245]
[83.69387817 199.06980896]
[86.17899323 184.27711487]
[88.66411591 169.48440552]
[90.22169495 154.56549072]
[90.84567261 139.57847595]
[91.46965027 124.59146118]
[78.55929565 114.75814819]
[73.98371887 99.18782043]
[79.52159119 83.93321991]
[93.02015686 74.92434692]
[93.33221436 59.92759323]
[93.64427185 44.93083954]
[92.70864105 29.96004677]
[90.53180695 15.11884022]
[88.35496521 0.27763513]
[86.17813110 -14.56357002]
[70.74417877 -15.51230717]
[55.84604263 -19.63279343]
[42.12804413 -26.74440384]
[30.18294907 -36.53720856]
[20.52637863 -48.58548355]
[13.57454109 -62.36619568]
[9.62629318 -77.28174591]
[8.85029888 -92.68583679]
[11.27781868 -107.91152191]
[16.80146408 -122.30005646]
[25.17993927 -135.22940063]
[36.04858780 -146.14111328]
[48.93525696 -154.56449890]
[63.28081131 -160.13684082]
[60.79569244 -174.92955017]
[58.31057358 -189.72225952]
[55.82545471 -204.51496887]
[40.82541656 -206.29693604]
[26.93556404 -212.23400879]
[15.28189278 -221.84486389]
[6.80911064 -234.35040283]
[2.20406818 -248.73686218]
[1.84007609 -263.83801270]
[5.74664116 -278.42962646]
[13.60707664 -291.32885742]
[24.78417015 -301.49002075]
[38.37184906 -308.08938599]
[53.26861572 -310.59197998]
[68.26686096 -308.79495239]
[82.15073395 -302.84393311]
[93.79474640 -293.22137451]
[102.25496674 -280.70730591]
[106.84555054 -266.31625366]
[107.19437408 -251.21475220]
[103.27314758 -236.62705994]
[95.39975739 -223.73573303]
[84.21246338 -213.58580017]
[70.61816406 -207.00007629]
[73.10327911 -192.20736694]
[75.58840179 -177.41467285]
[78.07351685 -162.62196350]
[92.63721466 -162.15463257]
[106.83156586 -158.84017944]
[120.10525513 -152.80534363]
[131.94236755 -144.28254700]
[141.88240051 -133.60093689]
[149.53814697 -121.17372131]
[154.61087036 -107.48213959]
[156.90185547 -93.05686951]
[156.32028198 -78.45739746]
[152.88674927 -64.25038147]
[146.73263550 -50.98762131]
[138.09497070 -39.18463516]
[127.30738831 -29.30062294]
[114.78722382 -21.72060394]
[101.01933289 -16.74040794]
[103.19617462 -1.89920187]
[105.37300873 12.94200325]
[107.54984283 27.78320885]
[116.12712860 15.47750950]
[130.24601746 10.41222858]
[144.68984985 14.45888519]
[154.12194824 26.12232208]
[155.05731201 41.09312820]
[147.15034485 53.83989334]
[133.32252502 59.65293884]
[118.68296051 56.38446045]
[108.64102173 45.24289322]
[108.32896423 60.23964691]
[108.01691437 75.23640442]
[119.18395233 82.40788269]
[125.36370087 94.15281677]
[124.94959259 107.41786194]
[118.04928589 118.75447083]
[106.45666504 125.21543121]
[105.83268738 140.20245361]
[105.20870972 155.18946838]
[117.21402740 146.19656372]
[132.08811951 148.13594055]
[141.38618469 159.90650940]
[139.82917786 174.82546997]
[128.30111694 184.42254639]
[113.34709930 183.24894714]
[103.45681763 171.96952820]
[100.97170258 186.76222229]
[98.48657990 201.55493164]
[97.23970795 216.50302124]
[97.23970795 231.50302124]
[97.23970795 246.50302124]
[97.23970795 261.50302124]
[97.23970795 276.50302124]
[97.23970795 291.50302124]
[97.23970795 306.50302124]
[97.23970795 321.50302124]
[97.23970795 336.50302124]
[97.23970795 351.50302124]
[111.77959442 355.56433105]
[124.68397522 363.39883423]
[134.99525452 374.42517090]
[141.94828796 387.82510376]
[145.02708435 402.60427856]
[144.00318909 417.66595459]
[138.95259094 431.89245605]
[130.25006104 444.22814941]
[118.54140472 453.75756836]
[104.69546509 459.77359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[29 130]
[30 129]
[31 128]
[32 121]
[33 120]
[34 119]
[38 114]
[39 113]
[40 112]
[41 103]
[42 102]
[43 101]
[44 100]
[58 85]
[59 84]
[60 83]
[61 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
