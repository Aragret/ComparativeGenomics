%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACAACAUAGGGGGGGGGGCCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCxxxxxxxxxxCUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACACCCCCCCCCCUUAACAACAUA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 374.48580933]
[71.01555634 368.93280029]
[58.81560135 360.06646729]
[49.20452881 348.44415283]
[42.78650284 334.79647827]
[39.96496582 319.98129272]
[40.91728210 304.92990112]
[45.58358765 290.58847046]
[53.67055511 277.85852051]
[64.66983032 267.54025269]
[77.88998413 260.28228760]
[92.50000000 256.54083252]
[92.50000000 241.54083252]
[92.50000000 226.54083252]
[92.50000000 211.54083252]
[92.50000000 196.54083252]
[92.50000000 181.54083252]
[92.50000000 166.54083252]
[92.50000000 151.54083252]
[92.50000000 136.54083252]
[92.50000000 121.54084015]
[83.05249786 115.26564026]
[77.79525757 105.21602631]
[78.02812195 93.87675476]
[83.69351959 84.05144501]
[93.39068604 78.16941071]
[94.00650787 63.18205643]
[94.62233734 48.19470596]
[80.49047852 44.49224091]
[67.44892120 37.92280197]
[56.07166290 28.77838135]
[46.85888672 17.46425056]
[40.21492004 4.48098660]
[36.43051910 -9.59766293]
[35.67012405 -24.15014076]
[37.96473694 -38.53451920]
[43.21065521 -52.11681747]
[51.17414856 -64.29894257]
[61.50188828 -74.54502869]
[73.73661041 -82.40500641]
[87.33735657 -87.53437042]
[101.70342255 -89.70927429]
[102.62683105 -104.68082428]
[103.55024719 -119.65237427]
[104.47366333 -134.62391663]
[105.39707184 -149.59547424]
[106.32048798 -164.56701660]
[107.24390411 -179.53857422]
[108.16731262 -194.51011658]
[109.09072876 -209.48167419]
[94.29628754 -212.04830933]
[79.87399292 -216.22689819]
[65.99892426 -221.96673584]
[52.83950806 -229.19812012]
[40.55549240 -237.83329773]
[29.29599380 -247.76741028]
[19.19768906 -258.87991333]
[10.38316250 -271.03585815]
[2.95941663 -284.08773804]
[-2.98343253 -297.87707520]
[-7.37324381 -312.23648071]
[-10.15672970 -326.99166870]
[-11.30009937 -341.96350098]
[-10.78947544 -356.97024536]
[-8.63105583 -371.82974243]
[-4.85104084 -386.36157227]
[0.50468260 -400.38940430]
[7.37110138 -413.74285889]
[15.66486359 -426.25991821]
[25.28528976 -437.78860474]
[36.11559677 -448.18899536]
[48.02431870 -457.33477783]
[60.86688614 -465.11499023]
[74.48741150 -471.43515015]
[88.72054291 -476.21856689]
[103.39351654 -479.40716553]
[118.32820892 -480.96221924]
[133.34332275 -480.86486816]
[148.25659180 -479.11630249]
[162.88699341 -475.73773193]
[177.05691528 -470.77017212]
[190.59434509 -464.27392578]
[203.33494568 -456.32785034]
[215.12408447 -447.02841187]
[225.81863403 -436.48849487]
[235.28877258 -424.83602905]
[243.41954041 -412.21249390]
[250.11222839 -398.77111816]
[255.28562927 -384.67504883]
[258.87689209 -370.09539795]
[260.84246826 -355.20916748]
[261.15847778 -340.19705200]
[259.82107544 -325.24130249]
[256.84649658 -310.52346802]
[252.27087402 -296.22216797]
[246.14973450 -282.51104736]
[238.55738831 -269.55654907]
[229.58598328 -257.51589966]
[219.34443665 -246.53527832]
[207.95707703 -236.74797058]
[195.56213379 -228.27281189]
[182.31005859 -221.21264648]
[168.36174011 -215.65321350]
[153.88647461 -211.66195679]
[139.05999756 -209.28736877]
[124.06227875 -208.55825806]
[123.13886261 -193.58671570]
[122.21545410 -178.61515808]
[121.29203796 -163.64361572]
[120.36862183 -148.67205811]
[119.44521332 -133.70051575]
[118.52179718 -118.72895813]
[117.59838104 -103.75740814]
[116.67497253 -88.78585815]
[131.50038147 -84.52377319]
[145.01907349 -77.07949066]
[156.55760193 -66.82035065]
[165.54032898 -54.25402069]
[171.51823425 -40.00335312]
[174.19134521 -24.77553940]
[173.42373657 -9.32699108]
[169.25048828 5.57421684]
[161.87608337 19.18654060]
[151.66436768 30.83186722]
[139.12065125 39.92929459]
[124.86665344 46.02411652]
[109.60968781 48.81053162]
[108.99385834 63.79788208]
[108.37803650 78.78524017]
[121.14344788 91.44358063]
[120.77433777 109.41725159]
[107.50000000 121.54084015]
[107.50000000 136.54083252]
[107.50000000 151.54083252]
[107.50000000 166.54083252]
[107.50000000 181.54083252]
[107.50000000 196.54083252]
[107.50000000 211.54083252]
[107.50000000 226.54083252]
[107.50000000 241.54083252]
[107.50000000 256.54083252]
[122.11001587 260.28228760]
[135.33016968 267.54025269]
[146.32945251 277.85852051]
[154.41641235 290.58847046]
[159.08271790 304.92990112]
[160.03503418 319.98129272]
[157.21350098 334.79647827]
[150.79547119 348.44415283]
[141.18440247 360.06646729]
[128.98443604 368.93280029]
[114.96250153 374.48580933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[26 129]
[27 128]
[28 127]
[42 114]
[43 113]
[44 112]
[45 111]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
