%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUACCCCCGGGGGGGGGGUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGAxxxxxxxxxxCUACGAACGCACUCACAGUCGCAUCAUAAUCCUCUCUCAAGGACUUCAAACCCCCCCCCCCUCUACUCCC\
) } def
/len { sequence length } bind def

/coor [
[65.61263275 442.73898315]
[51.76668930 436.72296143]
[40.05802917 427.19354248]
[31.35550499 414.85787964]
[26.30490303 400.63134766]
[25.28101158 385.56967163]
[28.35980988 370.79049683]
[35.31283188 357.39056396]
[45.62411499 346.36425781]
[58.52849579 338.52972412]
[73.06838226 334.46841431]
[73.06838226 319.46841431]
[73.06838226 304.46841431]
[73.06838226 289.46841431]
[73.06838226 274.46841431]
[73.06838226 259.46841431]
[73.06838226 244.46842957]
[73.06838226 229.46842957]
[73.06838226 214.46842957]
[73.06838226 199.46842957]
[73.06838226 184.46842957]
[62.74740601 176.69190979]
[58.74943542 164.19828796]
[62.75555420 151.50265503]
[73.51062012 143.33038330]
[73.82267761 128.33363342]
[81.93008423 87.76651764]
[75.30158997 74.31055450]
[63.32749939 69.40392303]
[58.09846497 58.00759888]
[61.93508148 46.49292374]
[55.58795166 32.90197372]
[49.24082184 19.31102371]
[42.89369202 5.72007275]
[36.54656219 -7.87087822]
[19.92691231 -10.84399319]
[8.45051956 -23.00022316]
[6.47730017 -39.43410110]
[14.58574486 -53.67342758]
[7.95724678 -67.12939453]
[-1.55111182 -78.73073578]
[-13.44349194 -87.87246704]
[-25.33587074 -97.01420593]
[-37.22825241 -106.15593719]
[-49.12063217 -115.29766846]
[-61.01301193 -124.43940735]
[-72.90538788 -133.58114624]
[-86.51345062 -126.66857910]
[-101.77331543 -126.35348511]
[-115.65512848 -132.69841003]
[-125.40264130 -144.44355774]
[-129.08049011 -159.25694275]
[-125.95841217 -174.19734192]
[-116.65632629 -186.29832458]
[-103.02114868 -193.15724182]
[-87.76016235 -193.41224670]
[-73.90344238 -187.01271057]
[-64.20225525 -175.22924805]
[-60.58277512 -160.40150452]
[-63.76365662 -145.47352600]
[-51.87127686 -136.33178711]
[-39.97889709 -127.19004822]
[-28.08651733 -118.04831696]
[-16.19413757 -108.90658569]
[-4.30175734 -99.76484680]
[7.59062243 -90.62311554]
[2.15489173 -104.60356140]
[0.44961497 -119.50630951]
[2.58671069 -134.35328674]
[8.42591953 -148.17007446]
[17.58400917 -160.04986572]
[29.45992851 -169.21298218]
[43.27424622 -175.05802917]
[58.12032318 -177.20140076]
[73.02379608 -175.50241089]
[87.00653839 -170.07260132]
[99.15084839 -161.26829529]
[108.65968323 -149.66734314]
[114.90898132 -136.03112793]
[117.48857880 -121.25460815]
[116.22919464 -106.30757141]
[111.21346283 -92.17100525]
[102.77059174 -79.77270508]
[91.45467377 -69.92638397]
[78.00839233 -63.27826309]
[63.31423569 -60.26466370]
[48.33659363 -61.08337021]
[34.05846405 -65.68064880]
[21.41321182 -73.75789642]
[28.04170990 -60.30192566]
[41.38718033 -59.25575638]
[52.55332947 -51.67759323]
[58.54970551 -39.46718979]
[57.70639801 -25.78136063]
[50.13751221 -14.21800804]
[56.48464203 -0.62705702]
[62.83177185 12.96389389]
[69.17890167 26.55484390]
[75.52603149 40.14579391]
[90.42081451 49.37321854]
[88.75755310 67.68205261]
[95.38605499 81.13802338]
[93.72897339 66.22983551]
[101.54435730 53.42671585]
[115.56158447 48.08656693]
[129.91468811 52.44415283]
[138.59710693 64.67589569]
[137.97541809 79.66300201]
[128.30975342 91.13362122]
[113.64380646 94.28733063]
[128.50685120 96.30966949]
[143.36990356 98.33200073]
[158.23294067 100.35433197]
[170.65962219 90.58943176]
[186.34126282 92.55451965]
[195.97424316 105.08374023]
[193.84347534 120.74372864]
[181.21310425 130.24369812]
[165.57650757 127.94747925]
[156.21061707 115.21738434]
[141.34756470 113.19504547]
[126.48451996 111.17271423]
[111.62147522 109.15037537]
[105.92095947 114.02420807]
[94.51994324 123.77185822]
[88.81942749 128.64567566]
[88.50737762 143.64244080]
[100.83721924 156.00820923]
[100.44915009 173.12934875]
[88.06838226 184.46842957]
[88.06838226 199.46842957]
[88.06838226 214.46842957]
[88.06838226 229.46842957]
[88.06838226 244.46842957]
[88.06838226 259.46841431]
[88.06838226 274.46841431]
[88.06838226 289.46841431]
[88.06838226 304.46841431]
[88.06838226 319.46841431]
[88.06838226 334.46841431]
[102.60826874 338.52972412]
[115.51264954 346.36425781]
[125.82393646 357.39056396]
[132.77696228 370.79049683]
[135.85575867 385.56967163]
[134.83186340 400.63134766]
[129.78126526 414.85787964]
[121.07874298 427.19354248]
[109.37007904 436.72296143]
[95.52413940 442.73898315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[25 127]
[26 126]
[27 102]
[28 101]
[31 99]
[32 98]
[33 97]
[34 96]
[35 95]
[39 90]
[40 89]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[110 123]
[111 122]
[112 121]
[113 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
