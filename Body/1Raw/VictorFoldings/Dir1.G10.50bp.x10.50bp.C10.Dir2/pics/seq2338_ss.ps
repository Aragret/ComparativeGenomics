%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUAGGCCUGGGGGGGGGGAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAxxxxxxxxxxUAUCCUAGAAAUCGCUGUCGCCUUAAUCCAAGCCUACGUUUUCACACUUCCCCCCCCCCCUAGUAAGCCU\
) } def
/len { sequence length } bind def

/coor [
[103.77809143 503.12142944]
[90.55789185 495.84893799]
[79.67108917 485.40194702]
[71.85995483 472.49270630]
[67.65707397 458.00137329]
[67.34900665 442.91604614]
[70.95674896 428.26522827]
[78.23432159 415.04782104]
[88.68552399 404.16506958]
[101.59778595 396.35891724]
[116.09072113 392.16162109]
[115.77867126 377.16488647]
[115.46661377 362.16812134]
[115.15455627 347.17138672]
[114.84249878 332.17462158]
[114.53044128 317.17785645]
[114.21838379 302.18112183]
[113.90633392 287.18435669]
[113.59427643 272.18759155]
[113.28221893 257.19085693]
[112.97016144 242.19409180]
[112.65810394 227.19734192]
[111.41123199 212.24925232]
[109.23439789 197.40805054]
[107.05755615 182.56684875]
[104.88072205 167.72563171]
[102.39559937 152.93293762]
[99.60327911 138.19512939]
[85.02972412 135.14137268]
[72.73106384 126.74752045]
[64.57619476 114.28911591]
[61.80433273 99.65933228]
[64.83670044 85.08131409]
[73.21248627 72.77033997]
[85.65891266 64.59719849]
[82.86659241 49.85939407]
[80.07426453 35.12158585]
[77.28194427 20.38378143]
[74.48961639 5.64597464]
[71.69729614 -9.09183121]
[68.44646454 -23.73533249]
[57.53934479 -35.19593048]
[61.89213562 -49.44031143]
[58.18597412 -63.97525024]
[54.47981262 -78.51018524]
[50.77365112 -93.04512024]
[46.76591110 -107.49980927]
[42.45832825 -121.86799622]
[38.15074158 -136.23617554]
[23.25468254 -134.22274780]
[8.22705078 -134.56449890]
[-6.56208229 -137.25300598]
[-20.74852180 -142.22204590]
[-33.98291397 -149.34927368]
[-45.93934631 -158.45916748]
[-56.32338715 -169.32739258]
[-64.87931824 -181.68629456]
[-71.39643860 -195.23153687]
[-75.71426392 -209.62954712]
[-77.72645569 -224.52578735]
[-77.38347626 -239.55339050]
[-74.69374847 -254.34230042]
[-69.72353363 -268.52832031]
[-62.59521484 -281.76211548]
[-53.48433685 -293.71780396]
[-42.61526108 -304.10095215]
[-30.25564766 -312.65585327]
[-16.70986748 -319.17187500]
[-2.31149364 -323.48849487]
[12.58489895 -325.49948120]
[27.61247253 -325.15524292]
[42.40116119 -322.46429443]
[56.58678055 -317.49291992]
[69.81999969 -310.36349487]
[81.77492523 -301.25164795]
[92.15717316 -290.38171387]
[100.71106720 -278.02139282]
[107.22595215 -264.47506714]
[111.54139709 -250.07633972]
[113.55113983 -235.17977905]
[113.20567322 -220.15223694]
[110.51351166 -205.36376953]
[105.54095459 -191.17855835]
[98.41044617 -177.94593811]
[89.29759216 -165.99174500]
[78.42680359 -155.61039734]
[66.06578064 -147.05752563]
[52.51892853 -140.54376221]
[56.82651138 -126.17557526]
[61.13409424 -111.80739594]
[64.89530182 -108.76948547]
[66.74938202 -103.31113434]
[65.30858612 -96.75128174]
[69.01474762 -82.21634674]
[72.72090912 -67.68141174]
[76.42707062 -53.14647293]
[87.06910706 -42.72551346]
[82.98140717 -27.44149399]
[85.87623596 -25.32314110]
[87.86041260 -21.66736031]
[88.20896149 -16.93123436]
[86.43509674 -11.88415623]
[89.22742462 2.85365009]
[92.01975250 17.59145546]
[94.81207275 32.32926178]
[97.60440063 47.06706619]
[100.39672089 61.80487442]
[114.97027588 64.85862732]
[127.26893616 73.25247955]
[135.42381287 85.71088409]
[138.19566345 100.34066772]
[135.16329956 114.91868591]
[126.78751373 127.22966003]
[114.34108734 135.40280151]
[117.13340759 150.14060974]
[121.21460724 155.47457886]
[121.84434509 161.20474243]
[119.72192383 165.54879761]
[121.89876556 180.39001465]
[124.07559967 195.23121643]
[126.25243378 210.07241821]
[136.37382507 199.00186157]
[151.34896851 198.13844299]
[162.67564392 207.97238159]
[163.92309570 222.92042542]
[154.38307190 234.49574280]
[139.47198486 236.12641907]
[127.65486145 226.88528442]
[127.96691895 241.88203430]
[128.27897644 256.87878418]
[128.59103394 271.87554932]
[128.90309143 286.87231445]
[129.21513367 301.86904907]
[129.52719116 316.86581421]
[129.83924866 331.86254883]
[130.15130615 346.85931396]
[130.46336365 361.85607910]
[130.77542114 376.85281372]
[131.08747864 391.84957886]
[145.74247742 395.44033813]
[158.96827698 402.70260620]
[169.86314392 413.14120483]
[177.68424988 426.04440308]
[181.89831543 440.53247070]
[182.21803284 455.61758423]
[178.62161255 470.27117920]
[171.35424805 483.49417114]
[160.91145325 494.38500977]
[148.00521851 502.20114136]
[133.51551819 506.40960693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 121]
[24 120]
[25 119]
[26 118]
[27 115]
[28 114]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[41 98]
[43 96]
[44 95]
[45 94]
[46 93]
[47 90]
[48 89]
[49 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
