%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACCUCCUCGGGGGGGGGGGGACUCCUGCCUCACUCAUUUACACCAACCACCCAACUAUCUAUAAACCUxxxxxxxxxxAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCAUACCCCCCCCCCUAACCUCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.51727295 159.63143921]
[82.76712036 157.14106750]
[69.09954071 151.06108093]
[57.37311554 141.77345276]
[48.32451248 129.86163330]
[42.52215195 116.07389069]
[40.33054733 101.27639771]
[41.88736725 86.39871979]
[47.09481430 72.37547302]
[55.62576294 60.08759689]
[66.94429016 50.30701447]
[80.33937836 43.64813614]
[94.96953583 40.52927399]
[95.59351349 25.54225731]
[96.21749115 10.55524158]
[96.84146881 -4.43177509]
[97.46544647 -19.41879082]
[98.08942413 -34.40580750]
[98.71340179 -49.39282227]
[99.33737946 -64.37983704]
[99.96135712 -79.36685181]
[100.58533478 -94.35387421]
[85.65428162 -95.83271027]
[70.83200073 -98.16153717]
[56.16684341 -101.33275604]
[41.70664597 -105.33602142]
[27.49857330 -110.15827942]
[13.58897018 -115.78379059]
[0.02320779 -122.19421387]
[-13.15446568 -129.36863708]
[-25.90106773 -137.28366089]
[-38.17502213 -145.91346741]
[-49.93629074 -155.22988892]
[-61.14651108 -165.20257568]
[-71.76911926 -175.79896545]
[-81.76947021 -186.98451233]
[-91.11493683 -198.72273254]
[-99.77503967 -210.97532654]
[-107.72152710 -223.70233154]
[-114.92848969 -236.86224365]
[-121.37241364 -250.41212463]
[-127.03227234 -264.30776978]
[-131.88961792 -278.50390625]
[-135.92860413 -292.95416260]
[-139.13604736 -307.61145020]
[-141.50148010 -322.42791748]
[-143.01721191 -337.35528564]
[-143.67828369 -352.34481812]
[-143.48252869 -367.34765625]
[-142.43060303 -382.31484985]
[-140.52593994 -397.19757080]
[-137.77473450 -411.94729614]
[-134.18597412 -426.51589966]
[-129.77136230 -440.85586548]
[-124.54528809 -454.92041016]
[-118.52481079 -468.66369629]
[-111.72956848 -482.04083252]
[-104.18171692 -495.00823975]
[-95.90587616 -507.52359009]
[-86.92905426 -519.54608154]
[-77.28051758 -531.03643799]
[-66.99173737 -541.95727539]
[-56.09628296 -552.27294922]
[-44.62968826 -561.94970703]
[-32.62935257 -570.95611572]
[-20.13442612 -579.26275635]
[-7.18565845 -586.84252930]
[6.17471170 -593.67071533]
[19.90310478 -599.72503662]
[33.95474243 -604.98571777]
[48.28379440 -609.43560791]
[62.84351349 -613.06024170]
[77.58641815 -615.84777832]
[92.46440887 -617.78912354]
[107.42897034 -618.87786865]
[122.43127441 -619.11059570]
[137.42240906 -618.48645020]
[152.35345459 -617.00750732]
[167.17570496 -614.67852783]
[181.84083557 -611.50720215]
[196.30101013 -607.50384521]
[210.50903320 -602.68145752]
[224.41859436 -597.05584717]
[237.98431396 -590.64532471]
[251.16192627 -583.47076416]
[263.90847778 -575.55566406]
[276.18234253 -566.92578125]
[287.94354248 -557.60925293]
[299.15368652 -547.63647461]
[309.77621460 -537.03997803]
[319.77648926 -525.85437012]
[329.12185669 -514.11608887]
[337.78186035 -501.86340332]
[345.72824097 -489.13635254]
[352.93511963 -475.97637939]
[359.37893677 -462.42645264]
[365.03866577 -448.53076172]
[369.89590454 -434.33459473]
[373.93478394 -419.88430786]
[377.14212036 -405.22698975]
[379.50744629 -390.41049194]
[381.02304077 -375.48312378]
[381.68399048 -360.49359131]
[381.48812866 -345.49075317]
[380.43609619 -330.52355957]
[378.53131104 -315.64083862]
[375.77999878 -300.89114380]
[372.19110107 -286.32257080]
[367.77636719 -271.98263550]
[362.55020142 -257.91812134]
[356.52963257 -244.17491150]
[349.73425293 -230.79782104]
[342.18630981 -217.83047485]
[333.91036987 -205.31520081]
[324.93347168 -193.29278564]
[315.28482056 -181.80247498]
[304.99597168 -170.88172913]
[294.10043335 -160.56616211]
[282.63375854 -150.88945007]
[270.63336182 -141.88313293]
[258.13836670 -133.57659912]
[245.18954468 -125.99692535]
[231.82911682 -119.16886139]
[218.10067749 -113.11466217]
[204.04899597 -107.85407257]
[189.71990967 -103.40426636]
[175.16015625 -99.77974701]
[160.41723633 -96.99234009]
[145.53923035 -95.05113983]
[130.57466125 -93.96247101]
[115.57234955 -93.72989655]
[114.94837189 -78.74288177]
[114.32439423 -63.75586319]
[113.70041656 -48.76884460]
[113.07643890 -33.78182983]
[112.45246124 -18.79481316]
[111.82848358 -3.80779743]
[111.20450592 11.17921829]
[110.58052826 26.16623497]
[109.95655060 41.15325165]
[124.27683258 45.47745132]
[137.07203674 53.22674942]
[147.53837585 63.91433716]
[155.01837158 76.86882019]
[159.04211426 91.27640533]
[159.35684204 106.23200226]
[155.94277954 120.79610443]
[149.01440430 134.05380249]
[139.00694275 145.17224121]
[126.54907227 153.45297241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
