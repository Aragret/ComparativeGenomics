%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUAUUCUCGGGGGGGGGGACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUAAxxxxxxxxxxCUUAAACACCCCUCCCCACAUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUCCCCCCCCCCACACAAUUCUC\
) } def
/len { sequence length } bind def

/coor [
[84.82880402 377.26074219]
[70.80686188 371.70773315]
[58.60689926 362.84140015]
[48.99583054 351.21908569]
[42.57780457 337.57138062]
[39.75626755 322.75619507]
[40.70858383 307.70483398]
[45.37488937 293.36340332]
[53.46185684 280.63345337]
[64.46112823 270.31518555]
[77.68128967 263.05718994]
[92.29129791 259.31576538]
[92.29129791 244.31576538]
[92.29129791 229.31576538]
[92.29129791 214.31576538]
[92.29129791 199.31576538]
[92.29129791 184.31576538]
[92.29129791 169.31576538]
[92.29129791 154.31576538]
[92.29129791 139.31576538]
[92.29129791 124.31576538]
[92.29129791 109.31576538]
[83.58161926 121.52811432]
[70.49338531 128.85600281]
[55.52962112 129.89804077]
[41.55205154 124.45492554]
[31.23377991 113.56762695]
[26.54810715 99.31826019]
[28.39113426 84.43191528]
[36.41039658 71.75550842]
[49.07226562 63.71329880]
[63.95524597 61.84331512]
[78.21308136 66.50317383]
[89.11904907 76.80171204]
[94.58766937 90.77075195]
[98.24637604 76.22380066]
[101.90508270 61.67684174]
[105.56378937 47.12989044]
[109.22249603 32.58293533]
[94.96742249 27.89398384]
[81.08318329 22.20003128]
[67.64052582 15.53008938]
[54.70794296 7.91814947]
[42.35134506 -0.59700006]
[30.63369751 -9.97196770]
[19.61471367 -20.15897942]
[9.35053921 -31.10612679]
[-0.10651743 -42.75762177]
[-8.70826626 -55.05409241]
[-16.41087532 -67.93287659]
[-23.17509079 -81.32834625]
[-28.96644592 -95.17224121]
[-33.75542831 -109.39402008]
[-37.51763153 -123.92120361]
[-40.23389053 -138.67976379]
[-41.89035797 -153.59449768]
[-42.47859192 -168.58941650]
[-41.99560165 -183.58807373]
[-40.44384003 -198.51406860]
[-37.83122253 -213.29133606]
[-34.17105865 -227.84455872]
[-29.48199654 -242.09959412]
[-23.78793716 -255.98379517]
[-17.11789322 -269.42639160]
[-9.50585365 -282.35891724]
[-0.99060977 -294.71545410]
[8.38444805 -306.43304443]
[18.57154465 -317.45193481]
[29.51877022 -327.71603394]
[41.17033768 -337.17300415]
[53.46687317 -345.77465820]
[66.34571838 -353.47717285]
[79.74124146 -360.24127197]
[93.58518219 -366.03253174]
[107.80699158 -370.82141113]
[122.33420563 -374.58349609]
[137.09278870 -377.29962158]
[152.00753784 -378.95599365]
[167.00245667 -379.54409790]
[182.00111389 -379.06100464]
[196.92709351 -377.50912476]
[211.70434570 -374.89639282]
[226.25753784 -371.23611450]
[240.51254272 -366.54693604]
[254.39669800 -360.85278320]
[267.83926392 -354.18264771]
[280.77172852 -346.57049561]
[293.12817383 -338.05514526]
[304.84567261 -328.68002319]
[315.86450195 -318.49282837]
[326.12850952 -307.54553223]
[335.58538818 -295.89389038]
[344.18695068 -283.59729004]
[351.88937378 -270.71838379]
[358.65338135 -257.32281494]
[364.44451904 -243.47882080]
[369.23327637 -229.25697327]
[372.99526978 -214.72973633]
[375.71130371 -199.97113037]
[377.36752319 -185.05636597]
[377.95553589 -170.06144714]
[377.47232056 -155.06278992]
[375.92031860 -140.13681030]
[373.30749512 -125.35959625]
[369.64709473 -110.80641937]
[364.95782471 -96.55146027]
[359.26354980 -82.66735077]
[352.59329224 -69.22484589]
[344.98104858 -56.29243851]
[336.46563721 -43.93603516]
[327.09039307 -32.21860504]
[316.90313721 -21.19985390]
[305.95574951 -10.93593216]
[294.30401611 -1.47914326]
[282.00735474 7.12232304]
[269.12838745 14.82463455]
[255.73277283 21.58854294]
[241.88874817 27.37957954]
[227.66685486 32.16823578]
[213.13958740 35.93010712]
[198.38096619 38.64602280]
[183.46618652 40.30214691]
[168.47126770 40.89003754]
[153.47261047 40.40670395]
[138.54664612 38.85459900]
[123.76944733 36.24164200]
[120.11074066 50.78859329]
[116.45203400 65.33554840]
[112.79333496 79.88249969]
[109.13462830 94.42945862]
[107.29129791 109.31576538]
[107.29129791 124.31576538]
[107.29129791 139.31576538]
[107.29129791 154.31576538]
[107.29129791 169.31576538]
[107.29129791 184.31576538]
[107.29129791 199.31576538]
[107.29129791 214.31576538]
[107.29129791 229.31576538]
[107.29129791 244.31576538]
[107.29129791 259.31576538]
[121.90131378 263.05718994]
[135.12147522 270.31518555]
[146.12074280 280.63345337]
[154.20771790 293.36340332]
[158.87402344 307.70483398]
[159.82633972 322.75619507]
[157.00479126 337.57138062]
[150.58677673 351.21908569]
[140.97570801 362.84140015]
[128.77574158 371.70773315]
[114.75379944 377.26074219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
