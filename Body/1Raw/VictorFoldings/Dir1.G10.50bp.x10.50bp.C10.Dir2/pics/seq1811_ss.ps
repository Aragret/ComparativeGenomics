%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:40:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAACUUACACUGGGGGGGGGGUAGGAGAUUUCAACUUAACUUGACCGCUCUGAGCUAAACCUAGCCCCAAAxxxxxxxxxxAUUCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUCCCCCCCCCCACUCAACUUAAACU\
) } def
/len { sequence length } bind def

/coor [
[83.21459961 378.52340698]
[69.19985962 373.03948975]
[56.52443695 364.92654419]
[45.67553329 354.49642944]
[37.07015991 342.15002441]
[31.03907776 328.36190796]
[27.81410789 313.66204834]
[27.51920700 298.61547852]
[30.16571426 283.80053711]
[35.65190506 269.78668213]
[43.76689911 257.11257935]
[54.19878387 246.26536560]
[66.54658508 237.66198730]
[80.33567810 231.63313293]
[95.03605652 228.41053772]
[94.73970032 213.41346741]
[94.44334412 198.41639709]
[94.14698792 183.41932678]
[93.85063171 168.42225647]
[93.55427551 153.42518616]
[93.25791168 138.42811584]
[92.96155548 123.43103790]
[92.66519928 108.43396759]
[92.22070312 93.44055939]
[91.62809753 78.45226288]
[91.03549957 63.46397781]
[90.44290161 48.47568512]
[89.85030365 33.48739624]
[89.25770569 18.49910736]
[74.25679779 18.14945221]
[59.30744553 16.85856819]
[44.46865082 14.63155174]
[29.79897118 11.47719097]
[15.35630417 7.40793419]
[1.19764817 2.43984199]
[-12.62111855 -3.40747905]
[-26.04545975 -10.11095238]
[-39.02239227 -17.64412117]
[-51.50070953 -25.97725677]
[-63.43115616 -35.07747269]
[-74.76665497 -44.90884781]
[-85.46246338 -55.43259048]
[-95.47637177 -66.60716248]
[-104.76885986 -78.38846588]
[-113.30325317 -90.73000336]
[-121.04587555 -103.58306885]
[-127.96616364 -116.89694214]
[-134.03681946 -130.61906433]
[-139.23385620 -144.69529724]
[-143.53678894 -159.07006836]
[-146.92863464 -173.68666077]
[-149.39599609 -188.48739624]
[-150.92913818 -203.41384888]
[-151.52200317 -218.40711975]
[-151.17227173 -233.40802002]
[-149.88131714 -248.35736084]
[-147.65422058 -263.19613647]
[-144.49978638 -277.86581421]
[-140.43045044 -292.30847168]
[-135.46228027 -306.46707153]
[-129.61488342 -320.28582764]
[-122.91134644 -333.71011353]
[-115.37810516 -346.68701172]
[-107.04490662 -359.16528320]
[-97.94463348 -371.09570312]
[-88.11319733 -382.43115234]
[-77.58939362 -393.12689209]
[-66.41477203 -403.14074707]
[-54.63341904 -412.43316650]
[-42.29183578 -420.96749878]
[-29.43872833 -428.71005249]
[-16.12482643 -435.63027954]
[-2.40266848 -441.70086670]
[11.67358685 -446.89782715]
[26.04838753 -451.20068359]
[40.66500092 -454.59243774]
[55.46574402 -457.05972290]
[70.39220428 -458.59280396]
[85.38547516 -459.18557739]
[100.38637543 -458.83578491]
[115.33571625 -457.54473877]
[130.17448425 -455.31756592]
[144.84413147 -452.16305542]
[159.28675842 -448.09365845]
[173.44535828 -443.12539673]
[187.26406860 -437.27795410]
[200.68833923 -430.57434082]
[213.66519165 -423.04101562]
[226.14341736 -414.70776367]
[238.07377625 -405.60742188]
[249.40916443 -395.77590942]
[260.10485840 -385.25207520]
[270.11865234 -374.07739258]
[279.41101074 -362.29598999]
[287.94528198 -349.95437622]
[295.68777466 -337.10122681]
[302.60794067 -323.78726196]
[308.67843628 -310.06509399]
[313.87533569 -295.98880005]
[318.17810059 -281.61398315]
[321.56979370 -266.99734497]
[324.03701782 -252.19659424]
[325.57000732 -237.27012634]
[326.16271973 -222.27685547]
[325.81280518 -207.27595520]
[324.52169800 -192.32662964]
[322.29446411 -177.48785400]
[319.13986206 -162.81823730]
[315.07037354 -148.37562561]
[310.10208130 -134.21705627]
[304.25451660 -120.39837646]
[297.55084229 -106.97413635]
[290.01748657 -93.99732208]
[281.68414307 -81.51913452]
[272.58374023 -69.58883667]
[262.75219727 -58.25349045]
[252.22827148 -47.55784607]
[241.05354309 -37.54411316]
[229.27209473 -28.25180626]
[216.93041992 -19.71760368]
[204.07723999 -11.97518444]
[190.76325989 -5.05510283]
[177.04104614 1.01532853]
[162.96473694 6.21215296]
[148.58988953 10.51486111]
[133.97323608 13.90647221]
[119.17247009 16.37360001]
[104.24599457 17.90650749]
[104.83859253 32.89479828]
[105.43119049 47.88308716]
[106.02378845 62.87137604]
[106.61638641 77.85966492]
[107.20899200 92.84795380]
[110.66451263 100.18153381]
[107.66226959 108.13761139]
[107.95862579 123.13468170]
[108.25498962 138.13175964]
[108.55134583 153.12882996]
[108.84770203 168.12590027]
[109.14405823 183.12297058]
[109.44041443 198.12004089]
[109.73677063 213.11711121]
[110.03313446 228.11418152]
[124.84934998 230.75349426]
[138.86585999 236.23287964]
[151.54391479 244.34172058]
[162.39617920 254.76834106]
[171.00555420 267.11196899]
[177.04110718 280.89813232]
[180.27082825 295.59695435]
[180.57060242 310.64340210]
[177.92889404 325.45919800]
[172.44723511 339.47482300]
[164.33634949 352.15155029]
[153.90797424 363.00216675]
[141.56295776 371.60952759]
[127.77581024 377.64285278]
[113.07647705 380.87017822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
