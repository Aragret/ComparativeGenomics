%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUAACUAGGGGGGGGGGAAACCCCUACGCAUUUAUAUAGAGGAGACAAGUCGUAACAUGGUAAGUGUxxxxxxxxxxUCUAUUGAUGAGGGUCUUACUCUUUUAGUAUAAAUAGUACCGUUAACUUCCCCCCCCCCCCAAUUAACUA\
) } def
/len { sequence length } bind def

/coor [
[93.66493988 491.68310547]
[80.44474030 484.41061401]
[69.55793762 473.96362305]
[61.74681091 461.05438232]
[57.54393005 446.56304932]
[57.23585510 431.47772217]
[60.84359741 416.82690430]
[68.12117004 403.60949707]
[78.57238007 392.72674561]
[91.48464203 384.92059326]
[105.97757721 380.72329712]
[105.66551971 365.72656250]
[105.35346222 350.72979736]
[105.04140472 335.73306274]
[104.72935486 320.73629761]
[104.41729736 305.73953247]
[104.10523987 290.74279785]
[103.79318237 275.74603271]
[103.48112488 260.74926758]
[103.16906738 245.75253296]
[102.85701752 230.75576782]
[102.54496002 215.75901794]
[101.60932922 200.78822327]
[100.05175018 185.86930847]
[88.97905731 179.20655823]
[83.70537567 167.19561768]
[86.37154388 154.15263367]
[96.21987152 144.90773010]
[94.97299957 129.95965576]
[93.72612000 115.01155853]
[85.28110504 106.93273163]
[84.43083191 95.27670288]
[91.61402130 86.05783844]
[90.67839813 71.08704376]
[89.74276733 56.11625290]
[88.80713654 41.14546204]
[87.87151337 26.17466927]
[86.93588257 11.20387840]
[86.00025177 -3.76691365]
[85.06462860 -18.73770523]
[83.50704193 -33.65661621]
[81.33020782 -48.49782181]
[79.15337372 -63.33902740]
[76.97653198 -78.18023682]
[65.21839905 -92.31268311]
[72.24763489 -108.36228943]
[69.76251984 -123.15499115]
[67.27739716 -137.94770813]
[64.79228210 -152.74040222]
[49.77524567 -152.29045105]
[34.83681870 -153.88955688]
[20.25529480 -157.50796509]
[6.30231476 -163.07826233]
[-6.76218367 -170.49665833]
[-18.69481850 -179.62496948]
[-29.27328873 -190.29312134]
[-38.30052567 -202.30239868]
[-45.60836029 -215.42906189]
[-51.06064987 -229.42857361]
[-54.55581665 -244.04013062]
[-56.02875519 -258.99151611]
[-55.45202255 -274.00424194]
[-52.83636475 -288.79855347]
[-48.23050690 -303.09890747]
[-41.72025299 -316.63885498]
[-33.42689133 -329.16616821]
[-23.50491333 -340.44750977]
[-12.13916492 -350.27264404]
[0.45861858 -358.45858765]
[14.05374718 -364.85281372]
[28.39295387 -369.33621216]
[43.20910645 -371.82528687]
[58.22618484 -372.27362061]
[73.16443634 -370.67288208]
[87.74557495 -367.05288696]
[101.69795227 -361.48110962]
[114.76164246 -354.06127930]
[126.69329071 -344.93170166]
[137.27061462 -334.26239014]
[146.29653931 -322.25213623]
[153.60295105 -309.12466431]
[159.05372620 -295.12457275]
[162.54731750 -280.51263428]
[164.01864624 -265.56109619]
[163.44027710 -250.54844666]
[160.82302856 -235.75440979]
[156.21562195 -221.45455933]
[149.70390320 -207.91531372]
[141.40917969 -195.38888550]
[131.48597717 -184.10864258]
[120.11917114 -174.28471375]
[107.52050018 -166.10014343]
[93.92467499 -159.70738220]
[79.58498383 -155.22552490]
[82.07010651 -140.43281555]
[84.55522156 -125.64011383]
[87.04034424 -110.84740448]
[96.73305511 -103.54270172]
[98.89360809 -91.19155121]
[91.81774139 -80.35707092]
[93.99457550 -65.51586914]
[96.17140961 -50.67465973]
[98.34825134 -35.83345413]
[100.58531952 -34.04379654]
[102.22415161 -31.23164368]
[102.86077118 -27.62933922]
[102.18618774 -23.61486626]
[100.03541565 -19.67333412]
[100.97104645 -4.70254183]
[101.90667725 10.26824951]
[102.84230042 25.23904037]
[103.77793121 40.20983124]
[104.71356201 55.18062592]
[105.64918518 70.15141296]
[106.58481598 85.12220764]
[116.22674561 98.81629944]
[108.67420959 113.76468658]
[109.92108154 128.71276855]
[111.16796112 143.66085815]
[124.71519470 154.67947388]
[126.10705566 171.74835205]
[114.97065735 184.31173706]
[116.52824402 199.23065186]
[119.30229950 202.76138306]
[120.63265228 206.60861206]
[120.60164642 210.26661682]
[119.45136261 213.31141663]
[117.54170990 215.44696045]
[117.85376740 230.44371033]
[118.16582489 245.44047546]
[118.47788239 260.43722534]
[118.78993988 275.43399048]
[119.10198975 290.43072510]
[119.41404724 305.42749023]
[119.72610474 320.42422485]
[120.03816223 335.42098999]
[120.35021973 350.41775513]
[120.66227722 365.41448975]
[120.97432709 380.41125488]
[135.62931824 384.00201416]
[148.85513306 391.26428223]
[159.75000000 401.70288086]
[167.57109070 414.60607910]
[171.78517151 429.09414673]
[172.10488892 444.17926025]
[168.50846863 458.83285522]
[161.24110413 472.05584717]
[150.79829407 482.94668579]
[137.89207458 490.76281738]
[123.40237427 494.97128296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 123]
[24 122]
[28 119]
[29 118]
[30 117]
[33 115]
[34 114]
[35 113]
[36 112]
[37 111]
[38 110]
[39 109]
[40 108]
[41 103]
[42 102]
[43 101]
[44 100]
[46 97]
[47 96]
[48 95]
[49 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
