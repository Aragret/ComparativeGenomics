%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAACGUAAGGGGGGGGGGAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCACAxxxxxxxxxxACAUUCUACUACUCACUCUCACUGCCCAAGAACUAUCAAACUCCUGAGCCCCCCCCCCCCAACAACUUAA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 398.80340576]
[71.19830322 392.78738403]
[59.48964310 383.25796509]
[50.78712082 370.92230225]
[45.73651886 356.69577026]
[44.71262741 341.63409424]
[47.79142761 326.85491943]
[54.74444962 313.45498657]
[65.05573273 302.42868042]
[77.96011353 294.59414673]
[92.50000000 290.53283691]
[92.50000000 275.53283691]
[92.50000000 260.53283691]
[92.50000000 245.53285217]
[92.50000000 230.53285217]
[92.50000000 215.53285217]
[92.50000000 200.53285217]
[92.50000000 185.53285217]
[92.50000000 170.53285217]
[92.50000000 155.53285217]
[80.17295074 152.41217041]
[68.86685181 146.59263611]
[59.16388321 138.37393188]
[51.56367874 128.17924500]
[46.45759201 116.53353119]
[44.10855103 104.03646088]
[44.63751221 91.33153534]
[48.01724243 79.07298279]
[54.07370758 67.89201355]
[62.49504089 58.36437607]
[72.84761047 50.98066711]
[84.59832764 46.12110138]
[97.14212036 44.03590775]
[98.38899994 29.08782005]
[99.63587189 14.13973331]
[100.88274384 -0.80835325]
[102.12962341 -15.75644016]
[103.37649536 -30.70452690]
[104.62336731 -45.65261459]
[89.81593323 -48.09928894]
[75.25339508 -51.72953796]
[61.03019333 -56.51982117]
[47.23857117 -62.43907547]
[33.96797943 -69.44890594]
[21.30448151 -77.50384521]
[9.33020592 -86.55166626]
[-1.87718868 -96.53368378]
[-12.24501610 -107.38515472]
[-21.70603561 -119.03571320]
[-30.19889069 -131.40979004]
[-37.66849899 -144.42713928]
[-44.06641388 -158.00332642]
[-49.35114670 -172.05030823]
[-53.48842239 -186.47700500]
[-56.45140839 -201.18981934]
[-58.22088623 -216.09335327]
[-58.78538132 -231.09094238]
[-58.14123535 -246.08531189]
[-56.29262161 -260.97924805]
[-53.25152969 -275.67611694]
[-49.03768921 -290.08062744]
[-43.67841721 -304.09933472]
[-37.20848083 -317.64135742]
[-29.66983795 -330.61883545]
[-21.11137962 -342.94763184]
[-11.58861160 -354.54779053]
[-1.16329277 -365.34402466]
[10.09696293 -375.26638794]
[22.11912727 -384.25045776]
[34.82522964 -392.23803711]
[48.13286972 -399.17727661]
[61.95573425 -405.02319336]
[76.20417786 -409.73785400]
[90.78579712 -413.29071045]
[105.60601807 -415.65869141]
[120.56872559 -416.82647705]
[135.57687378 -416.78643799]
[150.53314209 -415.53890991]
[165.34053040 -413.09188843]
[179.90298462 -409.46133423]
[194.12608337 -404.67071533]
[207.91757202 -398.75115967]
[221.18801880 -391.74105835]
[233.85133362 -383.68582153]
[245.82540894 -374.63775635]
[257.03259277 -364.65548706]
[267.40017700 -353.80377197]
[276.86093140 -342.15301514]
[285.35351562 -329.77874756]
[292.82284546 -316.76123047]
[299.22045898 -303.18490601]
[304.50488281 -289.13778687]
[308.64184570 -274.71102905]
[311.60449219 -259.99813843]
[313.37365723 -245.09457397]
[313.93780518 -230.09696960]
[313.29333496 -215.10260010]
[311.44439697 -200.20872498]
[308.40298462 -185.51191711]
[304.18881226 -171.10749817]
[298.82925415 -157.08889771]
[292.35900879 -143.54702759]
[284.82006836 -130.56970215]
[276.26135254 -118.24109650]
[266.73831177 -106.64116669]
[256.31277466 -95.84514618]
[245.05229187 -85.92304993]
[233.02992249 -76.93922424]
[220.32365417 -68.95193481]
[207.01585388 -62.01298141]
[193.19287109 -56.16737366]
[178.94432068 -51.45301819]
[164.36262512 -47.90048599]
[149.54234314 -45.53282547]
[134.57960510 -44.36538696]
[119.57145691 -44.40573883]
[118.32458496 -29.45765305]
[117.07770538 -14.50956535]
[115.83083344 0.43852130]
[114.58396149 15.38660812]
[113.33708191 30.33469582]
[112.09020996 45.28278351]
[128.20526123 51.57882309]
[141.63163757 62.49061584]
[151.08947754 76.97799683]
[155.67720032 93.65995026]
[154.95748901 110.94627380]
[148.99896240 127.18914032]
[138.36958313 140.84019470]
[124.08263397 150.59815979]
[107.50000000 155.53285217]
[107.50000000 170.53285217]
[107.50000000 185.53285217]
[107.50000000 200.53285217]
[107.50000000 215.53285217]
[107.50000000 230.53285217]
[107.50000000 245.53285217]
[107.50000000 260.53283691]
[107.50000000 275.53283691]
[107.50000000 290.53283691]
[122.03988647 294.59414673]
[134.94427490 302.42868042]
[145.25555420 313.45498657]
[152.20857239 326.85491943]
[155.28736877 341.63409424]
[154.26348877 356.69577026]
[149.21287537 370.92230225]
[140.51036072 383.25796509]
[128.80169678 392.78738403]
[114.95575714 398.80340576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[33 122]
[34 121]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
