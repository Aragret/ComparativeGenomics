%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACACCCAGGGGGGGGGGCCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACxxxxxxxxxxACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCCCCCCCCCCCACACUCA\
) } def
/len { sequence length } bind def

/coor [
[98.41210938 593.15246582]
[85.19190979 585.87994385]
[74.30510712 575.43298340]
[66.49397278 562.52374268]
[62.29109573 548.03240967]
[61.98302078 532.94708252]
[65.59076691 518.29626465]
[72.86833954 505.07885742]
[83.31954193 494.19607544]
[96.23180389 486.38992310]
[110.72473907 482.19265747]
[110.41268921 467.19589233]
[110.10063171 452.19912720]
[109.78857422 437.20239258]
[109.47651672 422.20562744]
[109.16445923 407.20889282]
[108.85240173 392.21212769]
[108.54035187 377.21536255]
[108.22829437 362.21862793]
[107.91623688 347.22186279]
[92.82414246 343.63961792]
[79.15678406 336.28079224]
[67.84167480 325.63833618]
[59.64836502 312.42816162]
[55.13613129 297.54110718]
[54.61577606 281.98281860]
[58.12823868 266.80587769]
[65.44143677 253.03851318]
[76.06558228 241.61497498]
[89.28600311 233.31211853]
[104.21118164 228.69664001]
[103.58720398 213.70960999]
[102.96322632 198.72259521]
[102.33924866 183.73558044]
[101.71527863 168.74856567]
[100.31297302 153.81425476]
[98.13613129 138.97305298]
[95.95929718 124.13185120]
[93.78246307 109.29064178]
[91.45135498 94.47288513]
[88.96623993 79.68018341]
[86.48111725 64.88747406]
[76.56440735 52.55988693]
[82.08619690 38.72662354]
[79.60108185 23.93391800]
[69.68436432 11.60633087]
[75.20615387 -2.22692990]
[72.72103882 -17.01963615]
[57.70875549 -16.48447037]
[42.75505829 -17.91343689]
[28.11582184 -21.28208542]
[14.04154396 -26.53277397]
[0.77305466 -33.57565689]
[-11.46260548 -42.29022217]
[-22.45606804 -52.52735138]
[-32.01922226 -64.11186981]
[-39.98842621 -76.84555817]
[-46.22732162 -90.51052094]
[-50.62914658 -104.87293243]
[-53.11858749 -119.68704224]
[-53.65303802 -134.69934082]
[-52.22336197 -149.65296936]
[-48.85401535 -164.29205322]
[-43.60265732 -178.36607361]
[-36.55913925 -191.63423157]
[-27.84399414 -203.86947632]
[-17.60634422 -214.86245728]
[-6.02136755 -224.42506409]
[6.71269846 -232.39366150]
[20.37795830 -238.63189697]
[34.74058151 -243.03303528]
[49.55480576 -245.52177429]
[64.56713867 -246.05551147]
[79.52069855 -244.62512207]
[94.15961456 -241.25508118]
[108.23339081 -236.00305176]
[121.50121307 -228.95890808]
[133.73603821 -220.24317932]
[144.72853088 -210.00500488]
[154.29058838 -198.41957092]
[162.25857544 -185.68511963]
[168.49617004 -172.01956177]
[172.89662170 -157.65673828]
[175.38465881 -142.84239197]
[175.91767883 -127.83003235]
[174.48657227 -112.87654114]
[171.11582947 -98.23778534]
[165.86314392 -84.16426086]
[158.81835938 -70.89677429]
[150.10205078 -58.66236115]
[139.86335754 -47.67036057]
[128.27746582 -38.10886002]
[115.54264069 -30.14147377]
[101.87678528 -23.90453148]
[87.51374054 -19.50475502]
[89.99886322 -4.71204853]
[99.73782349 6.55746460]
[94.39378357 21.44879913]
[96.87890625 36.24150467]
[106.61786652 47.51102066]
[101.27382660 62.40235519]
[103.75894165 77.19506073]
[106.24406433 91.98777008]
[110.60464478 98.83388519]
[108.62366486 107.11380768]
[110.80050659 121.95501709]
[112.97734070 136.79621887]
[115.15417480 151.63742065]
[126.31912994 141.62025452]
[141.14591980 143.89321899]
[148.79734802 156.79498291]
[143.68086243 170.89540100]
[129.53617859 175.88818359]
[116.70229340 168.12458801]
[117.32627106 183.11160278]
[117.95024872 198.09861755]
[118.57422638 213.08564758]
[119.19820404 228.07266235]
[133.42070007 231.06723022]
[146.49885559 237.38650513]
[157.66874695 246.65632629]
[166.27915955 258.33032227]
[171.82949829 271.72210693]
[173.99891663 286.04571533]
[172.66488647 300.46157837]
[167.91004944 314.12591553]
[160.01716614 326.24002075]
[149.45230103 336.09689331]
[136.83723450 343.12265015]
[122.91298676 346.90982056]
[123.22504425 361.90655518]
[123.53710175 376.90332031]
[123.84915924 391.90008545]
[124.16121674 406.89682007]
[124.47327423 421.89358521]
[124.78532410 436.89031982]
[125.09738159 451.88708496]
[125.40943909 466.88385010]
[125.72149658 481.88058472]
[140.37649536 485.47137451]
[153.60229492 492.73361206]
[164.49716187 503.17221069]
[172.31826782 516.07543945]
[176.53233337 530.56347656]
[176.85205078 545.64855957]
[173.25563049 560.30218506]
[165.98826599 573.52520752]
[155.54547119 584.41601562]
[142.63923645 592.23217773]
[128.14953613 596.44061279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 108]
[37 107]
[38 106]
[39 105]
[40 103]
[41 102]
[42 101]
[44 99]
[45 98]
[47 96]
[48 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
