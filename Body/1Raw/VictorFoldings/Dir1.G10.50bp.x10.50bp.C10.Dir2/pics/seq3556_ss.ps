%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUACUAUGGGGGGGGGGGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCxxxxxxxxxxAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCACAGCAGUCCUACCCCCCCCCCCUUCUCCUAU\
) } def
/len { sequence length } bind def

/coor [
[37.42604828 229.27268982]
[29.55101776 225.15536499]
[21.94569397 220.55891418]
[14.63919449 215.50090027]
[7.65949106 210.00071716]
[1.03330541 204.07939148]
[-5.21399498 197.75961304]
[-11.05849266 191.06556702]
[-23.13848114 199.95791626]
[-35.21846771 208.85026550]
[-47.29845810 217.74261475]
[-59.37844467 226.63496399]
[-71.45843506 235.52731323]
[-83.53842163 244.41966248]
[-95.52525330 253.43719482]
[-107.41763306 262.57891846]
[-119.31001282 271.72067261]
[-131.20239258 280.86239624]
[-143.09477234 290.00411987]
[-154.98715210 299.14587402]
[-163.85987854 313.59268188]
[-180.19834900 309.06600952]
[-180.37149048 292.11294556]
[-164.12889099 287.25347900]
[-152.23651123 278.11175537]
[-140.34413147 268.97000122]
[-128.45175171 259.82827759]
[-116.55937195 250.68653870]
[-104.66699219 241.54481506]
[-101.25865936 234.93202209]
[-92.43077087 232.33967590]
[-80.35078430 223.44732666]
[-68.27079773 214.55497742]
[-56.19080734 205.66262817]
[-44.11082077 196.77027893]
[-32.03083038 187.87792969]
[-19.95084190 178.98558044]
[-29.99968338 161.04922485]
[-37.38454056 141.86184692]
[-41.95408249 121.81661224]
[-43.61466599 101.32431793]
[-42.33226395 80.80487823]
[-38.13315582 60.67879486]
[-31.10338974 41.35848618]
[-21.38702202 23.23987770]
[-9.18316460 6.69425297]
[-20.06198883 -3.63295174]
[-30.94081497 -13.96015644]
[-41.92647934 -24.17363739]
[-53.01779556 -34.27228546]
[-64.10910797 -44.37093735]
[-79.27692413 -41.09725571]
[-93.45853424 -47.39499283]
[-101.20082855 -60.84254456]
[-99.52672577 -76.26904297]
[-89.07995605 -87.74269867]
[-73.87751770 -90.85164642]
[-59.76506042 -84.40043640]
[-52.16910934 -70.86968231]
[-54.01045990 -55.46224976]
[-42.91914368 -45.36360168]
[-31.82782936 -35.26495361]
[-24.71857262 -33.07312775]
[-20.61360931 -24.83898163]
[-9.73478413 -14.51177692]
[1.14404058 -4.18457222]
[8.33197403 -10.56174183]
[15.93025017 -16.44399071]
[23.90485954 -21.80498886]
[32.22010040 -26.62073708]
[40.83875275 -30.86967850]
[49.72223663 -34.53279114]
[58.83078003 -37.59368134]
[68.12361908 -40.03864670]
[77.55915070 -41.85673904]
[87.09513092 -43.03982162]
[96.68888092 -43.58259583]
[106.29745483 -43.48263931]
[115.87783813 -42.74039459]
[125.38714600 -41.35918427]
[134.78280640 -39.34518814]
[144.02276611 -36.70742798]
[153.06567383 -33.45771027]
[161.87101746 -29.61057854]
[170.39941406 -25.18325806]
[178.61267090 -20.19556236]
[186.47402954 -14.66982365]
[193.94828796 -8.63077545]
[201.00199890 -2.10544968]
[212.09330750 -12.20409966]
[223.18463135 -22.30274963]
[221.34327698 -37.71018219]
[228.93922424 -51.24093246]
[243.05168152 -57.69214249]
[258.25411987 -54.58319473]
[268.70089722 -43.10954285]
[270.37500000 -27.68304062]
[262.63269043 -14.23549080]
[248.45109558 -7.93775225]
[233.28327942 -11.21143341]
[222.19195557 -1.11278391]
[211.10064697 8.98586559]
[231.96241760 43.31802368]
[242.49906921 82.08514404]
[257.45932007 80.99382782]
[272.41955566 79.90251923]
[287.37982178 78.81121063]
[295.44830322 65.55680847]
[309.77954102 59.60739517]
[324.86285400 63.25063324]
[334.89840698 75.08563232]
[336.02734375 90.56158447]
[327.81555176 103.72767639]
[313.42062378 109.52127838]
[298.37771606 105.71462250]
[288.47113037 93.77146149]
[273.51086426 94.86277008]
[258.55062866 95.95407867]
[243.59037781 97.04538727]
[243.49824524 105.93132782]
[242.85673523 114.79455566]
[241.66831970 123.60115051]
[239.93753052 132.31738281]
[237.67100525 140.90989685]
[234.87742615 149.34579468]
[231.56747437 157.59275818]
[227.75382996 165.61924744]
[223.45108032 173.39451599]
[218.67572021 180.88880920]
[213.44601440 188.07341003]
[207.78199768 194.92083740]
[201.70535278 201.40487671]
[195.23931885 207.50068665]
[188.40869141 213.18493652]
[181.23957825 218.43586731]
[173.75946045 223.23338318]
[165.99694824 227.55911255]
[157.98178101 231.39649963]
[149.74464417 234.73083496]
[141.31704712 237.54936218]
[132.73127747 239.84129333]
[124.02020264 241.59786987]
[115.21717072 242.81233215]
[106.35587311 243.48005676]
[97.47025299 243.59849548]
[88.59430695 243.16716003]
[79.76203156 242.18772888]
[71.00723267 240.66394043]
[62.36343384 238.60163879]
[53.86372375 236.00871277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[89 102]
[90 101]
[91 100]
[104 119]
[105 118]
[106 117]
[107 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
