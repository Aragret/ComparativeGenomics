%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCAUCACGGGGGGGGGGCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCAxxxxxxxxxxUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCUACUCAGUAGACAGUCCCCCCCCCCCCCACCCUCAC\
) } def
/len { sequence length } bind def

/coor [
[31.25403595 580.83367920]
[18.03383827 573.56121826]
[7.14703465 563.11419678]
[-0.66409600 550.20495605]
[-4.86697721 535.71362305]
[-5.17504978 520.62829590]
[-1.56730843 505.97747803]
[5.71026468 492.76007080]
[16.16147232 481.87731934]
[29.07373428 474.07116699]
[43.56666946 469.87387085]
[43.25461578 454.87713623]
[42.94255829 439.88037109]
[42.63050079 424.88363647]
[42.31844711 409.88687134]
[42.00638962 394.89010620]
[41.69433212 379.89337158]
[41.38227844 364.89660645]
[41.07022095 349.89984131]
[40.75816345 334.90310669]
[32.69638062 347.55252075]
[20.46914101 356.24127197]
[5.87182331 359.69357300]
[-8.95217419 357.40249634]
[-21.82617569 349.70443726]
[-30.85982895 337.72973633]
[-34.72668076 323.23672485]
[-32.85894012 308.35345459]
[-25.53086090 295.26531982]
[-13.81845474 285.89410400]
[0.55848604 281.61584473]
[15.48892879 283.05871582]
[28.78056335 290.01089478]
[38.48171997 301.45147705]
[43.16784286 315.70001221]
[47.17558289 301.24533081]
[51.18332291 286.79064941]
[55.04048157 272.29504395]
[58.74664307 257.76010132]
[62.45280457 243.22517395]
[66.15896606 228.69024658]
[69.86512756 214.15530396]
[57.13850021 202.63848877]
[51.93401337 186.18955994]
[55.75875092 169.27537537]
[67.65499878 156.53649902]
[84.43808746 151.51417542]
[87.53640747 136.83764648]
[90.63473511 122.16112518]
[93.73305511 107.48460388]
[85.60955811 105.00215149]
[79.72387695 95.79177094]
[80.73341370 82.27250671]
[77.94108582 67.53470612]
[75.14876556 52.79689789]
[64.92094421 44.86936951]
[62.92691040 32.49024582]
[69.70056915 22.41925430]
[67.21545410 7.62654734]
[64.73033142 -7.16616011]
[49.70938110 -8.59214687]
[35.56966782 -13.85816193]
[23.27526283 -22.60516167]
[13.66441631 -34.23675919]
[7.39241314 -47.95989227]
[4.88688946 -62.83889389]
[6.31867599 -77.85929108]
[11.59015083 -91.99697113]
[20.34189606 -104.28800201]
[31.97720146 -113.89435577]
[45.70275497 -120.16105652]
[60.58272552 -122.66083527]
[75.60256958 -121.22325134]
[89.73821259 -115.94631958]
[102.02586365 -107.18982697]
[111.62772369 -95.55081177]
[117.88912964 -81.82284546]
[120.38316345 -66.94190979]
[118.93977356 -51.92261887]
[113.65738678 -37.78901291]
[104.89614868 -25.50474739]
[93.25343323 -15.90738106]
[79.52304077 -9.65127850]
[82.00815582 5.14142847]
[84.49327850 19.93413544]
[96.38116455 32.80573273]
[89.88656616 50.00457382]
[92.67889404 64.74237823]
[95.47121429 79.48018646]
[109.19126892 85.54319763]
[121.96862793 77.68577576]
[134.74598694 69.82834625]
[147.44091797 61.83842850]
[160.05204773 53.71688843]
[172.57800293 45.46459961]
[185.01744080 37.08245468]
[197.45687866 28.70031166]
[207.21345520 14.83504868]
[223.23776245 20.37204742]
[222.35310364 37.30289841]
[205.83903503 41.13975143]
[193.39958191 49.52189636]
[180.96014404 57.90403748]
[177.14598083 64.29135132]
[168.17358398 66.32801819]
[155.56245422 74.44956207]
[151.61622620 80.75614166]
[142.60340881 82.60570526]
[129.82604980 90.46312714]
[117.04869843 98.32055664]
[108.40957642 110.58292389]
[105.31125641 125.25945282]
[102.21293640 139.93597412]
[99.11461639 154.61250305]
[109.55284882 162.33703613]
[116.25047302 173.40736389]
[118.23403168 186.14567566]
[115.24140167 198.63714600]
[107.75576782 209.01770020]
[96.92806244 215.75221252]
[84.40006256 217.86146545]
[80.69390106 232.39640808]
[76.98773956 246.93133545]
[73.28157806 261.46627808]
[69.57541656 276.00122070]
[70.48728180 285.15655518]
[65.63801575 290.79840088]
[61.63027191 305.25308228]
[57.62253189 319.70776367]
[55.75491714 334.59103394]
[56.06697464 349.58779907]
[56.37903214 364.58456421]
[56.69108582 379.58129883]
[57.00314331 394.57806396]
[57.31520081 409.57479858]
[57.62725449 424.57156372]
[57.93931198 439.56832886]
[58.25136948 454.56506348]
[58.56342316 469.56182861]
[73.21841431 473.15258789]
[86.44422913 480.41485596]
[97.33909607 490.85345459]
[105.16019440 503.75665283]
[109.37425995 518.24475098]
[109.69398499 533.32983398]
[106.09755707 547.98339844]
[98.83019257 561.20642090]
[88.38739014 572.09729004]
[75.48116302 579.91339111]
[60.99147034 584.12188721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[35 129]
[36 128]
[37 127]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[47 114]
[48 113]
[49 112]
[50 111]
[53 89]
[54 88]
[55 87]
[58 85]
[59 84]
[60 83]
[90 110]
[91 109]
[92 108]
[93 106]
[94 105]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
