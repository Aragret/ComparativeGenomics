%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAGACCAAACCUGGGGGGGGGGACGCCAAAAUCCAUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCCCCCCCCCCCUAGACCUAACCU\
) } def
/len { sequence length } bind def

/coor [
[85.10333252 172.49229431]
[70.81646729 168.01004028]
[57.72424316 160.74375916]
[46.36259460 150.99090576]
[37.19661713 139.15071106]
[30.60152435 125.70787811]
[26.84728813 111.21266937]
[26.08759117 96.25847626]
[28.35353088 81.45743561]
[33.55234909 67.41545105]
[41.47123337 54.70732117]
[51.78601837 43.85327148]
[64.07446289 35.29761124]
[77.83353424 29.39057350]
[92.50000000 26.37396431]
[92.50000000 11.37396336]
[92.50000000 -3.62603641]
[92.50000000 -18.62603569]
[92.50000000 -33.62603760]
[92.50000000 -48.62603760]
[92.50000000 -63.62603760]
[92.50000000 -78.62603760]
[92.50000000 -93.62603760]
[92.50000000 -108.62603760]
[92.50000000 -123.62603760]
[77.52034760 -124.48249054]
[62.61402512 -126.19271851]
[47.82964325 -128.75114441]
[33.21543503 -132.14941406]
[18.81906128 -136.37646484]
[4.68748665 -141.41848755]
[-9.13319683 -147.25904846]
[-22.59790993 -153.87908936]
[-35.66273117 -161.25701904]
[-48.28504562 -169.36877441]
[-60.42368698 -178.18789673]
[-72.03905487 -187.68560791]
[-83.09326172 -197.83094788]
[-93.55025482 -208.59082031]
[-103.37592316 -219.93011475]
[-112.53822327 -231.81185913]
[-121.00725555 -244.19728088]
[-128.75541687 -257.04598999]
[-135.75741577 -270.31610107]
[-141.99041748 -283.96429443]
[-147.43408203 -297.94604492]
[-152.07067871 -312.21578979]
[-155.88507080 -326.72695923]
[-158.86480713 -341.43222046]
[-161.00018311 -356.28359985]
[-162.28421021 -371.23266602]
[-162.71273804 -386.23065186]
[-162.28433228 -401.22866821]
[-161.00041199 -416.17773438]
[-158.86515808 -431.02914429]
[-155.88552856 -445.73443604]
[-152.07125854 -460.24560547]
[-147.43478394 -474.51538086]
[-141.99121094 -488.49719238]
[-135.75831604 -502.14544678]
[-128.75642395 -515.41558838]
[-121.00836945 -528.26434326]
[-112.53942871 -540.64984131]
[-103.37722778 -552.53167725]
[-93.55164337 -563.87103271]
[-83.09473419 -574.63098145]
[-72.04060364 -584.77642822]
[-60.42531586 -594.27423096]
[-48.28674698 -603.09344482]
[-35.66449356 -611.20532227]
[-22.59972954 -618.58331299]
[-9.13506889 -625.20349121]
[4.68556929 -631.04412842]
[18.81710434 -636.08630371]
[33.21344376 -640.31341553]
[47.82762909 -643.71185303]
[62.61198807 -646.27038574]
[77.51830292 -647.98071289]
[92.49794006 -648.83728027]
[107.50205994 -648.83728027]
[122.48169708 -647.98071289]
[137.38801575 -646.27038574]
[152.17237854 -643.71185303]
[166.78656006 -640.31341553]
[181.18289185 -636.08630371]
[195.31443787 -631.04412842]
[209.13507080 -625.20349121]
[222.59973145 -618.58331299]
[235.66448975 -611.20532227]
[248.28674316 -603.09344482]
[260.42532349 -594.27423096]
[272.04061890 -584.77642822]
[283.09472656 -574.63098145]
[293.55163574 -563.87103271]
[303.37722778 -552.53167725]
[312.53942871 -540.64984131]
[321.00836182 -528.26434326]
[328.75640869 -515.41558838]
[335.75833130 -502.14544678]
[341.99121094 -488.49719238]
[347.43478394 -474.51538086]
[352.07125854 -460.24560547]
[355.88552856 -445.73443604]
[358.86514282 -431.02914429]
[361.00039673 -416.17773438]
[362.28433228 -401.22866821]
[362.71273804 -386.23065186]
[362.28421021 -371.23266602]
[361.00018311 -356.28359985]
[358.86480713 -341.43222046]
[355.88507080 -326.72695923]
[352.07067871 -312.21578979]
[347.43408203 -297.94604492]
[341.99041748 -283.96429443]
[335.75741577 -270.31610107]
[328.75540161 -257.04598999]
[321.00726318 -244.19728088]
[312.53820801 -231.81185913]
[303.37591553 -219.93011475]
[293.55026245 -208.59082031]
[283.09326172 -197.83094788]
[272.03906250 -187.68560791]
[260.42367554 -178.18789673]
[248.28504944 -169.36877441]
[235.66273499 -161.25701904]
[222.59791565 -153.87908936]
[209.13319397 -147.25904846]
[195.31251526 -141.41848755]
[181.18093872 -136.37646484]
[166.78456116 -132.14941406]
[152.17034912 -128.75114441]
[137.38597107 -126.19271851]
[122.47965240 -124.48249054]
[107.50000000 -123.62603760]
[107.50000000 -108.62603760]
[107.50000000 -93.62603760]
[107.50000000 -78.62603760]
[107.50000000 -63.62603760]
[107.50000000 -48.62603760]
[107.50000000 -33.62603760]
[107.50000000 -18.62603569]
[107.50000000 -3.62603641]
[107.50000000 11.37396336]
[107.50000000 26.37396431]
[122.16646576 29.39057350]
[135.92553711 35.29761124]
[148.21398926 43.85327148]
[158.52876282 54.70732117]
[166.44764709 67.41545105]
[171.64646912 81.45743561]
[173.91241455 96.25847626]
[173.15270996 111.21266937]
[169.39848328 125.70787811]
[162.80337524 139.15071106]
[153.63740540 150.99090576]
[142.27575684 160.74375916]
[129.18353271 168.01004028]
[114.89666748 172.49229431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
