%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUUACUGGGGGGGGGGCCUGCCAUCAUGACCCUUGGCCAUAAUAUGAUUUAUCUCCACACUAGCAGxxxxxxxxxxCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUCCCCCCCCCCUCUCAUUACU\
) } def
/len { sequence length } bind def

/coor [
[72.92757416 332.60726929]
[59.08163452 326.59121704]
[47.37297440 317.06179810]
[38.67044830 304.72613525]
[33.61984634 290.49963379]
[32.59595490 275.43792725]
[35.67475510 260.65878296]
[42.62777710 247.25885010]
[52.93906021 236.23252869]
[65.84344482 228.39801025]
[80.38333130 224.33670044]
[80.38333130 209.33670044]
[80.38333130 194.33670044]
[80.38333130 179.33670044]
[80.38333130 164.33670044]
[80.38333130 149.33670044]
[80.38333130 134.33670044]
[80.38333130 119.33670044]
[88.04272461 93.21855164]
[81.41422272 79.76258850]
[74.78572083 66.30662537]
[68.14310455 59.94050217]
[68.16257477 52.50106430]
[61.81544495 38.91011047]
[55.46831512 25.31916046]
[49.12118530 11.72820950]
[42.77405548 -1.86274111]
[39.67758942 12.81417561]
[30.21445274 24.45243454]
[16.47780609 30.47775841]
[1.50606775 29.55740166]
[-11.38915157 21.89493942]
[-19.35554695 9.18523693]
[-20.63102722 -5.76043606]
[-14.93346596 -19.63623428]
[-3.52311277 -29.37296104]
[11.07616806 -32.81694031]
[25.63515091 -29.20639610]
[36.93466568 -19.33832741]
[33.83634567 -34.01485443]
[30.73802185 -48.69137955]
[15.80426311 -47.14200974]
[0.79035980 -47.16215134]
[-14.13918781 -48.75159073]
[-28.82080269 -51.89290619]
[-43.09362793 -56.55168533]
[-56.80127716 -62.67687988]
[-69.79356384 -70.20138550]
[-81.92814636 -79.04274750]
[-93.07205963 -89.10411072]
[-103.10320282 -100.27522278]
[-111.91168213 -112.43369293]
[-119.40097809 -125.44631195]
[-125.48903656 -139.17048645]
[-130.10914612 -153.45587158]
[-133.21070862 -168.14595032]
[-134.75971985 -183.07974243]
[-134.73921204 -198.09364319]
[-133.14939880 -213.02316284]
[-130.00773621 -227.70469666]
[-125.34860229 -241.97740173]
[-119.22307587 -255.68490601]
[-111.69825745 -268.67700195]
[-102.85659790 -280.81137085]
[-92.79496765 -291.95504761]
[-81.62361145 -301.98593140]
[-69.46492767 -310.79409790]
[-56.45212936 -318.28308105]
[-42.72779465 -324.37081909]
[-28.44229698 -328.99057007]
[-13.75215530 -332.09176636]
[1.18167937 -333.64041138]
[16.19558144 -333.61953735]
[31.12505341 -332.02938843]
[45.80651474 -328.88735962]
[60.07911301 -324.22787476]
[73.78646851 -318.10202026]
[86.77838898 -310.57687378]
[98.91253662 -301.73492432]
[110.05596161 -291.67303467]
[120.08656311 -280.50143433]
[128.89445496 -268.34252930]
[136.38311768 -255.32954407]
[142.47050476 -241.60507202]
[147.08993530 -227.31945801]
[150.19076538 -212.62924194]
[151.73904419 -197.69537354]
[151.71781921 -182.68147278]
[150.12728882 -167.75202942]
[146.98489380 -153.07064819]
[142.32508850 -138.79815674]
[136.19888306 -125.09095764]
[128.67343140 -112.09922028]
[119.83119202 -99.96528625]
[109.76902008 -88.82210541]
[98.59717560 -78.79177094]
[86.43805695 -69.98418427]
[73.42489624 -62.49583435]
[59.70027161 -56.40877533]
[45.41454697 -51.78969955]
[48.51287079 -37.11317444]
[51.61119080 -22.43664932]
[56.36500549 -8.20987034]
[62.71213531 5.38108015]
[69.05926514 18.97203064]
[75.40639496 32.56298065]
[81.75352478 46.15393448]
[88.24169159 59.67812347]
[94.87018585 73.13408661]
[101.49868774 86.59005737]
[112.69445038 96.57277679]
[126.81925201 101.62153625]
[140.94406128 106.67029572]
[155.06886292 111.71904755]
[170.66809082 109.07810974]
[180.04852295 120.64775848]
[194.17332458 125.69651031]
[208.29812622 130.74526978]
[222.47381592 123.75773621]
[237.41137695 128.91955566]
[244.24865723 143.16833496]
[238.92918396 158.05049133]
[224.60893250 164.73672485]
[209.78382874 159.26022339]
[203.24937439 144.87007141]
[189.12457275 139.82131958]
[174.99977112 134.77255249]
[160.41084290 137.77462769]
[150.02011108 125.84384918]
[135.89530945 120.79509735]
[121.77050018 115.74633789]
[107.64569855 110.69758606]
[95.38333130 119.33670044]
[95.38333130 134.33670044]
[95.38333130 149.33670044]
[95.38333130 164.33670044]
[95.38333130 179.33670044]
[95.38333130 194.33670044]
[95.38333130 209.33670044]
[95.38333130 224.33670044]
[109.92321777 228.39801025]
[122.82759857 236.23252869]
[133.13888550 247.25885010]
[140.09190369 260.65878296]
[143.17070007 275.43792725]
[142.14680481 290.49963379]
[137.09620667 304.72613525]
[128.39367676 317.06179810]
[116.68502045 326.59121704]
[102.83908081 332.60726929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 110]
[20 109]
[21 108]
[23 107]
[24 106]
[25 105]
[26 104]
[27 103]
[39 102]
[40 101]
[41 100]
[111 132]
[112 131]
[113 130]
[114 129]
[116 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
