%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACACCUAGGGGGGGGGGGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUUAUxxxxxxxxxxCACAUUAACAACAUAAAACCCUCAUUCACACGAGAAAACACCCUCAUGUUCCCCCCCCCCCAUACACCUA\
) } def
/len { sequence length } bind def

/coor [
[92.19682312 476.48263550]
[78.97663116 469.21017456]
[68.08982086 458.76315308]
[60.27869415 445.85391235]
[56.07581329 431.36260986]
[55.76773834 416.27725220]
[59.37548065 401.62643433]
[66.65305328 388.40905762]
[77.10426331 377.52627563]
[90.01652527 369.72012329]
[104.50946045 365.52285767]
[104.19740295 350.52609253]
[103.88534546 335.52932739]
[103.57329559 320.53259277]
[103.26123810 305.53582764]
[102.94918060 290.53909302]
[102.63712311 275.54232788]
[102.32506561 260.54556274]
[102.01300812 245.54881287]
[101.70095825 230.55206299]
[101.38890076 215.55531311]
[101.07684326 200.55856323]
[100.76478577 185.56179810]
[99.82915497 170.59101868]
[98.27157593 155.67210388]
[96.71399689 140.75318909]
[95.15641785 125.83427429]
[93.59883118 110.91535950]
[91.57649994 96.05231476]
[89.09137726 81.25960541]
[86.60626221 66.46690369]
[71.62224579 64.63405609]
[57.77579117 58.65927887]
[46.18565750 49.03463364]
[37.78567886 36.54669189]
[33.24951935 22.21228600]
[32.93664551 7.19568825]
[36.86387253 -7.28594208]
[44.70467758 -20.06121254]
[55.81633759 -30.09925842]
[69.29260254 -36.59291077]
[66.80748749 -51.38561630]
[64.32237244 -66.17832184]
[61.83724976 -80.97103119]
[46.84339142 -80.15606689]
[31.85256195 -81.02503204]
[17.05329323 -83.56700897]
[2.63169956 -87.75003052]
[-11.23085308 -93.52147675]
[-24.36002731 -100.80878448]
[-36.59071350 -109.52028656]
[-47.76908875 -119.54644775]
[-57.75458527 -130.76116943]
[-66.42161560 -143.02340698]
[-73.66118622 -156.17897034]
[-79.38224792 -170.06239319]
[-83.51286316 -184.49908447]
[-86.00107574 -199.30747986]
[-86.81558990 -214.30136108]
[-85.94617462 -229.29217529]
[-83.40375519 -244.09136963]
[-79.22030640 -258.51281738]
[-73.44844055 -272.37521362]
[-66.16074371 -285.50418091]
[-57.44887161 -297.73458862]
[-47.42237854 -308.91265869]
[-36.20735931 -318.89782715]
[-23.94485855 -327.56448364]
[-10.78908634 -334.80368042]
[3.09450722 -340.52432251]
[17.53132248 -344.65451050]
[32.33980179 -347.14227295]
[47.33370972 -347.95632935]
[62.32448578 -347.08648682]
[77.12360382 -344.54360962]
[91.54494476 -340.35974121]
[105.40715027 -334.58746338]
[118.53588867 -327.29934692]
[130.76605225 -318.58712769]
[141.94383240 -308.56030273]
[151.92864990 -297.34497070]
[160.59495544 -285.08221436]
[167.83374023 -271.92623901]
[173.55397034 -258.04244995]
[177.68371582 -243.60552979]
[180.17105103 -228.79696655]
[180.98466492 -213.80303955]
[180.11434937 -198.81228638]
[177.57104492 -184.01324463]
[173.38673401 -169.59202576]
[167.61404419 -155.72999573]
[160.32556152 -142.60147095]
[151.61296082 -130.37156677]
[141.58580017 -119.19409180]
[130.37017822 -109.20960999]
[118.10716248 -100.54367828]
[104.95095825 -93.30528259]
[91.06701660 -87.58546448]
[76.62995911 -83.45614624]
[79.11507416 -68.66344452]
[81.60019684 -53.87073517]
[84.08531189 -39.07802582]
[98.94371796 -37.34449387]
[112.72552490 -31.48845673]
[124.31047058 -21.97663879]
[132.75427246 -9.57329369]
[137.36555481 4.72118855]
[137.76246643 19.75097275]
[133.90429688 34.29823303]
[126.09545898 47.18183517]
[114.96150208 57.35322571]
[101.39897156 63.98178101]
[103.88408661 78.77449036]
[106.36920929 93.56719971]
[109.22544861 96.26502228]
[110.85078430 100.22785187]
[110.69976807 104.86416626]
[108.51774597 109.35778046]
[110.07532501 124.27669525]
[111.63290405 139.19560242]
[113.19049072 154.11451721]
[114.74806976 169.03343201]
[117.52212524 172.56416321]
[118.85248566 176.41139221]
[118.82147217 180.06939697]
[117.67118835 183.11419678]
[115.76154327 185.24974060]
[116.07359314 200.24650574]
[116.38565063 215.24325562]
[116.69770813 230.24000549]
[117.00976562 245.23675537]
[117.32182312 260.23352051]
[117.63388062 275.23025513]
[117.94593048 290.22702026]
[118.25798798 305.22378540]
[118.57004547 320.22052002]
[118.88210297 335.21728516]
[119.19416046 350.21405029]
[119.50621796 365.21078491]
[134.16120911 368.80154419]
[147.38700867 376.06381226]
[158.28189087 386.50241089]
[166.10298157 399.40560913]
[170.31704712 413.89367676]
[170.63677979 428.97879028]
[167.04034424 443.63238525]
[159.77297974 456.85540771]
[149.33018494 467.74624634]
[136.42395020 475.56234741]
[121.93425751 479.77081299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 114]
[30 113]
[31 112]
[41 102]
[42 101]
[43 100]
[44 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
