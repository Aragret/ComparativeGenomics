%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAAUCACCGGGGGGGGGGUGAGCUCACCAUAGUCUAAUAGAAAACAACCGAAACCAAAUAAUUCAAGCxxxxxxxxxxGGACUAUUCCUAGCCAUGCACUACUCACCAGACGCCUCAACCGCCUUUUCCCCCCCCCCCAUCAAUCGCC\
) } def
/len { sequence length } bind def

/coor [
[57.50563812 350.04409790]
[45.62136841 340.76898193]
[36.30265808 328.91888428]
[30.09129333 315.18270874]
[27.34839058 300.35910034]
[28.23342133 285.30984497]
[32.69492722 270.90988159]
[40.47352600 257.99645996]
[51.11697769 247.32029724]
[64.00648499 239.50210571]
[78.39267731 234.99644470]
[77.45704651 220.02565002]
[76.52141571 205.05485535]
[75.58578491 190.08406067]
[74.65016174 175.11326599]
[73.71453094 160.14248657]
[72.77890015 145.17169189]
[71.84327698 130.20089722]
[87.05557251 92.71533203]
[80.14857483 79.40017700]
[73.24156952 66.08502197]
[66.33457184 52.76986313]
[59.42757416 39.45470810]
[51.17528534 26.92874527]
[41.66692734 15.32740402]
[32.15856934 3.72606301]
[17.04959297 6.10641766]
[2.87137341 0.64062482]
[-6.60437393 -11.10997486]
[-8.91076088 -25.92674065]
[-3.52731919 -39.81501389]
[-13.03567791 -51.41635513]
[-22.54403687 -63.01769638]
[-32.05239487 -74.61903381]
[-41.56075287 -86.22037506]
[-51.06911087 -97.82171631]
[-64.26462555 -90.60268402]
[-78.55821228 -85.93259430]
[-93.46260834 -83.96910095]
[-108.47003174 -84.77763367]
[-123.06945038 -88.32919312]
[-136.76399231 -94.50138855]
[-149.08789062 -103.08267975]
[-159.62225342 -113.77962494]
[-168.00933838 -126.22687531]
[-173.96475220 -139.99969482]
[-177.28701782 -154.62846375]
[-177.86439514 -169.61462402]
[-175.67869568 -184.44775391]
[-170.80581665 -198.62287903]
[-163.41308594 -211.65773010]
[-153.75355530 -223.10908508]
[-163.26191711 -234.71043396]
[-172.77026367 -246.31176758]
[-188.08288574 -244.43368530]
[-201.97012329 -251.15295410]
[-210.00059509 -264.32546997]
[-209.61180115 -279.74792480]
[-200.92784119 -292.49908447]
[-186.71969604 -298.51010132]
[-171.52114868 -295.86288452]
[-160.18200684 -285.40213013]
[-156.32054138 -270.46585083]
[-161.16893005 -255.82012939]
[-151.66056824 -244.21879578]
[-142.15220642 -232.61744690]
[-129.02699280 -239.84025574]
[-114.79425049 -244.52946472]
[-99.93823242 -246.52397156]
[-84.96470642 -245.75440979]
[-70.38368988 -242.24549866]
[-56.69211197 -236.11534119]
[-44.35686874 -227.57136536]
[-33.79889297 -216.90335083]
[-25.37879944 -204.47357178]
[-19.38456345 -190.70455933]
[-16.02167130 -176.06462097]
[-15.40608597 -161.05203247]
[-17.56023407 -146.17802429]
[-22.41220284 -131.94937134]
[-29.79813766 -118.85112000]
[-39.46776962 -107.33007812]
[-29.95941162 -95.72873688]
[-20.45105362 -84.12739563]
[-10.94269466 -72.52605438]
[-1.43433642 -60.92471313]
[8.07402229 -49.32337189]
[22.74902344 -51.87482452]
[36.82442474 -46.70383835]
[46.48553848 -35.10516739]
[49.06080246 -20.12969208]
[43.75991058 -5.78229523]
[53.26826859 5.81904602]
[62.77662659 17.42038727]
[62.58058167 2.42166829]
[69.78977203 -10.73232460]
[82.53813171 -18.63672066]
[97.52577209 -19.24549294]
[110.87319183 -12.40105915]
[119.12545776 0.12491809]
[120.14649963 15.09012699]
[113.67200470 28.62087059]
[101.37789917 37.21475601]
[86.44645691 38.64728165]
[72.74272919 32.54771042]
[79.64972687 45.86286545]
[86.55672455 59.17802048]
[93.46372986 72.49317932]
[100.37072754 85.80833435]
[112.35755920 94.82585907]
[127.06552124 97.77134705]
[142.11634827 92.89456177]
[153.07649231 102.98041534]
[167.78445435 105.92590332]
[179.87879944 96.01323700]
[195.51466370 96.24548340]
[207.30926514 106.51297760]
[209.69354248 121.96772003]
[201.54174805 135.31246948]
[186.70288086 140.24621582]
[172.18339539 134.43942261]
[164.83897400 120.63386536]
[150.13101196 117.68837738]
[136.13218689 122.77584076]
[124.12003326 112.47930908]
[109.41207886 109.53382111]
[103.76257324 114.46668243]
[106.65734100 129.18470764]
[92.46356964 124.33240509]
[86.81406403 129.26527405]
[87.74969482 144.23605347]
[88.68532562 159.20684814]
[89.62094879 174.17764282]
[90.55657959 189.14843750]
[91.49221039 204.11923218]
[92.42783356 219.09001160]
[93.36346436 234.06080627]
[108.19869995 236.74023438]
[121.96133423 242.89273071]
[133.85122681 252.16062927]
[143.17710876 264.00509644]
[149.39680481 277.73748779]
[152.14869690 292.55944824]
[151.27279663 307.60925293]
[146.82002258 322.01190186]
[139.04925537 334.93005371]
[128.41227722 345.61264038]
[115.52750397 353.43865967]
[101.14405060 357.95303345]
[86.09814453 358.89337158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 109]
[20 108]
[21 107]
[22 106]
[23 105]
[24 94]
[25 93]
[26 92]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[52 66]
[53 65]
[54 64]
[110 126]
[111 125]
[113 123]
[114 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
