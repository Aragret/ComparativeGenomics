%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAACCAACCGGGGGGGGGGAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAxxxxxxxxxxUACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCCCCCCCCCCCGAAUCAACC\
) } def
/len { sequence length } bind def

/coor [
[22.97528648 307.91384888]
[14.39152908 295.61267090]
[8.22381878 281.93936157]
[4.68377781 267.36306763]
[3.89286852 252.38394165]
[5.87822771 237.51591492]
[10.57173538 223.26911926]
[17.81235123 210.13240051]
[27.35164452 198.55647278]
[38.86299133 188.93807983]
[47.51441193 176.68438721]
[56.16583252 164.43069458]
[64.81725311 152.17700195]
[51.35018539 158.78291321]
[37.88311768 165.38882446]
[24.41604996 171.99473572]
[10.94898224 178.60064697]
[-2.51808619 185.20655823]
[-15.48305798 192.75041199]
[-27.88071632 201.19422913]
[-40.27837372 209.63804626]
[-52.67603302 218.08186340]
[-62.36362839 231.99540710]
[-78.41522217 226.53805542]
[-77.61466980 209.60302734]
[-61.11985016 205.68420410]
[-48.72219086 197.24038696]
[-36.32453537 188.79656982]
[-23.92687607 180.35275269]
[-38.59433365 177.21177673]
[-47.94524002 165.48315430]
[-47.73997116 150.48455811]
[-38.07159042 139.01623535]
[-23.32366943 136.27783203]
[-10.18280315 143.51092529]
[-4.60695887 157.43608093]
[-9.12399864 171.73950195]
[4.34306955 165.13359070]
[17.81013870 158.52767944]
[31.27720642 151.92175293]
[44.74427414 145.31584167]
[58.21134186 138.70993042]
[57.60345840 123.72225952]
[43.64564896 118.22866821]
[29.68783760 112.73507690]
[14.46267700 117.79216003]
[1.09529400 108.92127228]
[-0.15999973 92.92740631]
[11.65974998 82.07968140]
[27.48744202 84.69954681]
[35.18142700 98.77726746]
[49.13923645 104.27085876]
[63.09704590 109.76445007]
[67.80709839 103.92788696]
[81.93725586 86.41821289]
[73.61950684 73.93562317]
[65.30175781 61.45303345]
[56.98401260 48.97043991]
[41.56081772 49.32907104]
[28.40402794 41.27286911]
[21.71192741 27.37253189]
[23.61993980 12.06361198]
[33.51922607 0.23112838]
[48.25096130 -4.34921598]
[63.11429977 -0.21585026]
[73.36640167 11.31228352]
[75.73587036 26.55660057]
[69.46659851 40.65269470]
[77.78434753 53.13528442]
[86.10209656 65.61787415]
[94.41984558 78.10046387]
[93.10480499 63.15822220]
[91.78977203 48.21597672]
[90.47473145 33.27373123]
[89.15969849 18.33148766]
[81.37777710 5.50800514]
[75.82112885 -8.42482185]
[72.64244080 -23.08415222]
[71.92905426 -38.06717682]
[73.70057678 -52.96220016]
[77.90832520 -67.35993958]
[84.43668365 -80.86477661]
[93.10626221 -93.10562134]
[103.67884064 -103.74613953]
[115.86391449 -112.49393463]
[129.32666016 -119.10865021]
[143.69715881 -123.40852356]
[158.58053589 -125.27539825]
[173.56782532 -124.65798950]
[188.24720764 -121.57325745]
[202.21533203 -116.10595703]
[215.08839417 -108.40631866]
[226.51266479 -98.68592072]
[236.17420959 -87.21185303]
[243.80758667 -74.29939270]
[249.20303345 -60.30334854]
[252.21228027 -45.60829926]
[252.75265503 -30.61803627]
[250.80931091 -15.74445629]
[246.43563843 -1.39625061]
[239.75183105 12.03232384]
[230.94152832 24.17227936]
[220.24681091 34.69003677]
[207.96156311 43.29659271]
[194.42335510 49.75545502]
[180.00419617 53.88915253]
[165.10408020 55.58398438]
[152.48316956 63.69032288]
[139.86225891 71.79666138]
[127.24135590 79.90299988]
[114.62044525 88.00933838]
[129.58271790 86.94613647]
[142.85742188 77.31731415]
[157.72129822 84.24531555]
[158.88366699 100.60321808]
[145.14877319 109.56340790]
[130.64591980 101.90840912]
[115.68363953 102.97161102]
[113.87742615 110.25086212]
[128.43594360 113.86330414]
[142.99444580 117.47573853]
[153.79649353 127.88323212]
[139.38201904 132.03425598]
[124.82350159 128.42181396]
[110.26498413 124.80937958]
[108.45877075 132.08863831]
[121.18843079 140.02308655]
[133.91809082 147.95755005]
[150.55818176 151.20469666]
[152.04437256 168.09336853]
[136.22712708 174.19674683]
[125.98363495 160.68721008]
[113.25397491 152.75276184]
[100.52430725 144.81829834]
[107.89165497 157.88436890]
[115.25900269 170.95043945]
[122.62635040 184.01651001]
[135.18421936 192.22015381]
[146.01361084 202.59919739]
[154.74293518 214.79751587]
[161.07267761 228.39656067]
[164.78567505 242.92976379]
[165.75451660 257.89843750]
[163.94596863 272.78900146]
[159.42208862 287.09057617]
[152.33808899 300.31240845]
[142.93701172 312.00085449]
[131.54145813 321.75488281]
[118.54238892 329.23980713]
[104.38583374 334.19885254]
[89.55751801 336.46182251]
[74.56621552 335.95108032]
[59.92629623 332.68414307]
[46.14007568 326.77313232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 29]
[20 28]
[21 27]
[22 26]
[43 53]
[44 52]
[45 51]
[55 71]
[56 70]
[57 69]
[58 68]
[111 118]
[112 117]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
