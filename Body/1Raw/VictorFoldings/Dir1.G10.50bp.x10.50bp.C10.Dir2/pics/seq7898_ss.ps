%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUAUUUACCGGGGGGGGGGCUAUAGCACCCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGxxxxxxxxxxCUCCUACUUACAGGACUCAACAUACUAGUCACAGCCCUAUACUCCCUCUACCCCCCCCCCCAUAUUUACC\
) } def
/len { sequence length } bind def

/coor [
[66.58839417 338.22369385]
[54.70412064 328.94857788]
[45.38541412 317.09848022]
[39.17404938 303.36230469]
[36.43114471 288.53866577]
[37.31617355 273.48941040]
[41.77768326 259.08947754]
[49.55627823 246.17604065]
[60.19972992 235.49987793]
[73.08924103 227.68170166]
[87.47542572 223.17602539]
[86.53980255 208.20523071]
[85.60417175 193.23445129]
[84.66854095 178.26365662]
[83.73291016 163.29286194]
[82.79728699 148.32206726]
[81.86165619 133.35127258]
[70.35985565 123.72275543]
[55.45795059 125.43544006]
[40.55604935 127.14813232]
[25.65414619 128.86082458]
[10.75224400 130.57351685]
[-2.07423782 139.83590698]
[-15.60171509 133.60240173]
[-30.50361824 135.31507874]
[-45.40552139 137.02777100]
[-48.63401794 151.82154846]
[-56.49324799 164.76416016]
[-68.13069916 174.45169067]
[-82.28402710 179.83334351]
[-97.41798401 180.32531738]
[-111.89095306 175.87426758]
[-124.13301086 166.96299744]
[-132.81623840 154.55815125]
[-136.99874878 140.00529480]
[-136.22682190 124.88303375]
[-130.58422852 110.83170319]
[-120.68302917 99.37549591]
[-107.59721375 91.75708771]
[-92.74623871 88.80286407]
[-77.74103546 90.83329010]
[-64.20925903 97.62810516]
[-53.61871719 108.45027161]
[-47.11820984 122.12586975]
[-32.21630859 120.41318512]
[-17.31440544 118.70049286]
[-5.55380678 109.56060028]
[9.03955364 115.67160797]
[23.94145584 113.95891571]
[38.84335709 112.24623108]
[53.74526215 110.53353882]
[68.64716339 108.82084656]
[71.40175629 74.05474091]
[107.86529541 56.04078293]
[106.61842346 41.09269714]
[105.37155151 26.14461136]
[104.12467194 11.19652367]
[102.87779999 -3.75156307]
[101.63092804 -18.69964981]
[97.32334137 -33.06783295]
[90.14083099 -46.23641586]
[75.86772919 -54.31172562]
[75.99519348 -70.71038055]
[90.39208984 -78.56284332]
[104.24813843 -69.79118347]
[103.30941772 -53.41892624]
[110.49192047 -40.25034332]
[111.20490265 -55.23338699]
[116.03466797 -69.43456268]
[124.60428619 -81.74559784]
[136.24499512 -91.20572662]
[150.04832458 -97.07667542]
[164.93705750 -98.90026855]
[179.74926758 -96.53419495]
[193.32901001 -90.16309357]
[204.61648560 -80.28418732]
[212.73081970 -67.66841888]
[217.03877258 -53.30034637]
[217.20413208 -38.30125809]
[213.21400452 -23.84169769]
[205.37977600 -11.05010223]
[194.31283569 -0.92473924]
[180.87687683 5.74419975]
[166.12042236 8.43626499]
[151.19509888 6.94136524]
[137.26568604 1.37616456]
[125.41924286 -7.82502508]
[116.57901001 -19.94652367]
[117.82588959 -4.99843788]
[119.07276154 9.94964886]
[120.31963348 24.89773560]
[121.56651306 39.84582138]
[122.81338501 54.79391098]
[135.90653992 62.11301422]
[149.29283142 55.34490204]
[162.67910767 48.57678604]
[176.06539917 41.80867004]
[177.55052185 26.45295715]
[187.11975098 14.35199165]
[201.71957397 9.36714649]
[216.69123840 13.08906937]
[227.25735474 24.33010674]
[230.04629517 39.50328445]
[224.16812134 53.76689911]
[211.49855042 62.56948090]
[196.08038330 63.10215759]
[182.83351135 55.19495773]
[169.44721985 61.96306992]
[156.06094360 68.73118591]
[142.67465210 75.49929810]
[143.22030640 82.97942352]
[144.31161499 97.93967438]
[144.85726929 105.41979980]
[159.08406067 110.17361450]
[169.33685303 98.91306305]
[183.28593445 92.80217743]
[198.51454163 92.89969635]
[212.38421631 99.18872833]
[222.49195862 110.57966614]
[227.08654785 125.09895325]
[225.37193298 140.23103333]
[217.64518738 153.35418701]
[205.24501038 162.19474792]
[190.31980896 165.22103882]
[175.45547485 161.90873718]
[163.22734070 152.83171082]
[155.75398254 139.56260681]
[154.33024597 124.40039062]
[140.10345459 119.64657593]
[118.81417847 133.72006226]
[96.83245087 132.41564941]
[97.76807404 147.38644409]
[98.70370483 162.35723877]
[99.63933563 177.32801819]
[100.57495880 192.29881287]
[101.51058960 207.26960754]
[102.44622040 222.24040222]
[117.28144836 224.91981506]
[131.04408264 231.07232666]
[142.93397522 240.34022522]
[152.25987244 252.18467712]
[158.47956848 265.91708374]
[161.23144531 280.73904419]
[160.35554504 295.78884888]
[155.90277100 310.19146729]
[148.13200378 323.10961914]
[137.49502563 333.79223633]
[124.61026001 341.61822510]
[110.22680664 346.13262939]
[95.18090057 347.07293701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[24 46]
[25 45]
[26 44]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 67]
[61 66]
[94 110]
[95 109]
[96 108]
[97 107]
[113 129]
[114 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
