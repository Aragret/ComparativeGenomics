%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUAAUAAUGGGGGGGGGGCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGxxxxxxxxxxAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCUCCUAGCCUUACCCCCCCCCCCUACUAAUAAU\
) } def
/len { sequence length } bind def

/coor [
[86.17973328 387.96264648]
[74.29546356 378.68756104]
[64.97675323 366.83743286]
[58.76538849 353.10128784]
[56.02248764 338.27764893]
[56.90751648 323.22839355]
[61.36902237 308.82846069]
[69.14762115 295.91500854]
[79.79107666 285.23886108]
[92.68058014 277.42065430]
[107.06677246 272.91500854]
[106.13114166 257.94421387]
[105.19551086 242.97341919]
[104.25988007 228.00262451]
[103.32425690 213.03182983]
[102.38862610 198.06103516]
[101.45299530 183.09025574]
[100.51737213 168.11946106]
[99.11506653 153.18515015]
[97.24745178 138.30186462]
[95.37983704 123.41859436]
[93.51222992 108.53530884]
[89.50448608 94.08061981]
[83.44147491 80.36056519]
[77.37846375 66.64051819]
[64.72334290 57.14533234]
[66.65604401 42.37665176]
[60.59303284 28.65659714]
[54.53001785 14.93654346]
[48.46700668 1.21649027]
[42.40399170 -12.50356293]
[36.34097672 -26.22361755]
[23.68585777 -35.71879959]
[25.61856270 -50.48748016]
[19.55554962 -64.20753479]
[13.49253654 -77.92758942]
[-0.79914701 -73.32698822]
[-15.49343681 -70.24550629]
[-30.42933655 -68.71689606]
[-45.44319534 -68.75791168]
[-60.37052155 -70.36811066]
[-75.04775238 -73.52983093]
[-89.31408691 -78.20845032]
[-103.01320648 -84.35269928]
[-115.99502563 -91.89525604]
[-128.11729431 -100.75347900]
[-139.24720764 -110.83032227]
[-149.26281738 -122.01537323]
[-158.05438232 -134.18608093]
[-165.52558899 -147.20909119]
[-171.59455872 -160.94172668]
[-176.19480896 -175.23352051]
[-179.27593994 -189.92788696]
[-180.80418396 -204.86383057]
[-180.76280212 -219.87768555]
[-179.15223694 -234.80496216]
[-175.99015808 -249.48213196]
[-171.31120300 -263.74835205]
[-165.16661072 -277.44732666]
[-157.62374878 -290.42895508]
[-148.76522827 -302.55099487]
[-138.68811035 -313.68066406]
[-127.50281525 -323.69601440]
[-115.33190155 -332.48727417]
[-102.30870056 -339.95816040]
[-88.57592010 -346.02679443]
[-74.28401184 -350.62670898]
[-59.58957291 -353.70748901]
[-44.65359879 -355.23535156]
[-29.63973999 -355.19360352]
[-14.71249580 -353.58270264]
[-0.03541495 -350.42025757]
[14.23069096 -345.74093628]
[27.92951393 -339.59603882]
[40.91096497 -332.05285645]
[53.03280640 -323.19403076]
[64.16223145 -313.11663818]
[74.17729187 -301.93112183]
[82.96826935 -289.75997925]
[90.43883514 -276.73660278]
[96.50714111 -263.00366211]
[101.10669708 -248.71165466]
[104.18711090 -234.01713562]
[105.71463013 -219.08113098]
[105.67251587 -204.06727600]
[104.06124115 -189.14006042]
[100.89844513 -174.46305847]
[96.21878815 -160.19706726]
[90.07353973 -146.49839783]
[82.53003693 -133.51713562]
[73.67092896 -121.39550018]
[63.59327316 -110.26631927]
[52.40749359 -100.25152588]
[40.23614883 -91.46085358]
[27.21258926 -83.99060059]
[33.27560425 -70.27054596]
[39.33861542 -56.55049515]
[51.56007004 -48.03665924]
[50.06103134 -32.28662872]
[56.12404633 -18.56657600]
[62.18705750 -4.84652281]
[68.25006866 8.87353039]
[74.31308746 22.59358406]
[80.37609863 36.31363678]
[92.59754944 44.82747269]
[91.09851074 60.57750320]
[97.16152954 74.29755402]
[103.22454071 88.01760864]
[105.79351044 73.23923492]
[113.73189545 60.51201630]
[125.87405396 51.70475006]
[140.43710327 48.11065674]
[155.28268433 50.25746536]
[168.23094177 57.82995605]
[177.38063049 69.71621704]
[181.38824463 84.17094421]
[179.66534424 99.07166290]
[172.46488953 112.23044586]
[160.84417725 121.71511841]
[146.50952148 126.13300323]
[131.56575012 124.83540344]
[118.20713806 118.01284790]
[108.39550781 106.66769409]
[110.26312256 121.55097961]
[112.13072968 136.43424988]
[113.99834442 151.31753540]
[117.23616791 155.57618713]
[118.35862732 160.19056702]
[117.59275055 164.27897644]
[115.48815918 167.18382263]
[116.42378998 182.15461731]
[117.35942078 197.12541199]
[118.29504395 212.09620667]
[119.23067474 227.06700134]
[120.16630554 242.03778076]
[121.10192871 257.00857544]
[122.03755951 271.97937012]
[136.87278748 274.65878296]
[150.63542175 280.81130981]
[162.52531433 290.07919312]
[171.85121155 301.92364502]
[178.07090759 315.65606689]
[180.82279968 330.47802734]
[179.94688416 345.52780151]
[175.49411011 359.93045044]
[167.72334290 372.84860229]
[157.08636475 383.53121948]
[144.20159912 391.35720825]
[129.81814575 395.87161255]
[114.77223969 396.81192017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 137]
[12 136]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 126]
[20 125]
[21 124]
[22 123]
[23 108]
[24 107]
[25 106]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[34 97]
[35 96]
[36 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
