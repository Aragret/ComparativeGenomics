%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUCGAAUGGGGGGGGGGUUGCAAUUCAAUAUGAAAAUCACCUCGGAGCUGGUAAAAAGAGGCCUAACxxxxxxxxxxUCAUAGAAUUCUCACUGUGAUAUAUAAACUCAGACCCAAACAUUAAUCAGCCCCCCCCCCUUCUUCAAAU\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 373.46154785]
[71.19830322 367.44552612]
[59.48964310 357.91610718]
[50.78712082 345.58044434]
[45.73651886 331.35391235]
[44.71262741 316.29223633]
[47.79142761 301.51309204]
[54.74444962 288.11315918]
[65.05573273 277.08682251]
[77.96011353 269.25231934]
[92.50000000 265.19100952]
[92.50000000 250.19099426]
[92.50000000 235.19099426]
[92.50000000 220.19099426]
[92.50000000 205.19099426]
[92.50000000 190.19099426]
[92.50000000 175.19099426]
[92.50000000 160.19099426]
[92.50000000 145.19099426]
[92.50000000 130.19099426]
[92.50000000 115.19099426]
[87.15848541 101.17428589]
[77.17575836 89.97851562]
[59.58195877 84.64579010]
[56.62209320 67.37618256]
[46.40861130 56.39052200]
[36.19513321 45.40485382]
[25.98165321 34.41918945]
[15.76817322 23.43352699]
[9.47293377 21.09312630]
[5.88773394 16.57896423]
[5.37009001 11.77193260]
[-4.37756205 0.37091169]
[-14.12521362 -11.03010941]
[-23.87286568 -22.43112946]
[-33.62051773 -33.83214951]
[-53.01768875 -26.13286018]
[-73.85939789 -26.17795181]
[-93.17189789 -33.94052887]
[-108.20719910 -48.29400635]
[-116.83413696 -67.17556000]
[-117.84037018 -87.88256836]
[-111.10276794 -107.45946503]
[-122.99514771 -116.60119629]
[-134.88752747 -125.74292755]
[-146.77990723 -134.88465881]
[-159.93338013 -127.26531219]
[-175.00207520 -125.26451874]
[-189.68809509 -129.18739319]
[-201.75196838 -138.43572998]
[-209.35400391 -151.59921265]
[-211.33497620 -166.67051697]
[-207.39277649 -181.35137939]
[-198.12858582 -193.40306091]
[-184.95510864 -200.98777771]
[-169.88121033 -202.94892883]
[-155.20555115 -198.98742676]
[-143.16606140 -189.70738220]
[-135.59867859 -176.52394104]
[-133.65737915 -161.44747925]
[-137.63816833 -146.77703857]
[-125.74579620 -137.63531494]
[-113.85341644 -128.49357605]
[-101.96103668 -119.35184479]
[-94.32898712 -125.65881348]
[-85.68175507 -130.49192810]
[-76.30075836 -133.69163513]
[-66.49171448 -135.15162659]
[-56.57464218 -134.82226562]
[-46.87345886 -132.71235657]
[-37.70537949 -128.88890076]
[-29.37054253 -123.47493744]
[-22.14219093 -116.64562988]
[-16.25771332 -108.62256622]
[-11.91084766 -99.66659546]
[-9.24530029 -90.06931305]
[-8.35000229 -80.14360809]
[-9.25613594 -70.21343231]
[-11.93605900 -60.60323715]
[-16.30414009 -51.62737274]
[-22.21949768 -43.57980347]
[-12.47184467 -32.17878342]
[-2.72419286 -20.77776146]
[7.02345896 -9.37674046]
[16.77111053 2.02428055]
[26.75383759 13.22004604]
[36.96731567 24.20571136]
[47.18079758 35.19137573]
[57.39427567 46.17704010]
[67.60775757 57.16270447]
[79.72048950 57.93013000]
[88.31971741 67.05549622]
[88.37152863 79.99578857]
[98.35425568 91.19155884]
[101.49967194 88.11254120]
[106.33164978 86.39907074]
[112.23115540 86.76222229]
[118.31766510 89.64051819]
[133.31684875 89.79655457]
[148.31604004 89.95259094]
[163.31523132 90.10862732]
[167.97152710 87.47452545]
[172.69509888 86.98444366]
[176.64292908 88.29453278]
[179.23751831 90.77154541]
[194.19776917 91.86285400]
[209.15802002 92.95417023]
[215.62948608 79.22519684]
[226.62611389 68.76390839]
[240.66070557 62.98510742]
[255.83520508 62.67033005]
[270.09738159 67.86214447]
[281.51837158 77.85839844]
[288.55361938 91.30718231]
[290.25164795 106.38966370]
[286.38278198 121.06604767]
[277.47030640 133.35148621]
[264.71951294 141.58447266]
[249.85488892 144.65156555]
[234.88671875 142.13795471]
[221.83932495 134.38360596]
[212.47727966 122.43720245]
[208.06671143 107.91441345]
[193.10646057 106.82310486]
[178.14620972 105.73179626]
[163.15919495 105.10781860]
[148.16000366 104.95178223]
[133.16081238 104.79574585]
[118.16162872 104.63970947]
[107.50000000 115.19099426]
[107.50000000 130.19099426]
[107.50000000 145.19099426]
[107.50000000 160.19099426]
[107.50000000 175.19099426]
[107.50000000 190.19099426]
[107.50000000 205.19099426]
[107.50000000 220.19099426]
[107.50000000 235.19099426]
[107.50000000 250.19099426]
[107.50000000 265.19100952]
[122.03988647 269.25231934]
[134.94427490 277.08682251]
[145.25555420 288.11315918]
[152.20857239 301.51309204]
[155.28736877 316.29223633]
[154.26348877 331.35391235]
[149.21287537 345.58044434]
[140.51036072 357.91610718]
[128.80169678 367.44552612]
[114.95575714 373.46154785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 94]
[23 93]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[32 85]
[33 84]
[34 83]
[35 82]
[36 81]
[43 64]
[44 63]
[45 62]
[46 61]
[98 129]
[99 128]
[100 127]
[101 126]
[105 125]
[106 124]
[107 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
