%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUAUAACGGGGGGGGGGUGAACUCCUCACACCCAAUUGGACCAAUCUAUCACCCUAUAGAAGAACUAxxxxxxxxxxACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACCCCCCCCCCCAACAUAUGAC\
) } def
/len { sequence length } bind def

/coor [
[62.19288635 382.02749634]
[49.63466263 373.67633057]
[39.54843903 362.46389771]
[32.56824493 349.09497070]
[29.13286018 334.41000366]
[29.45823860 319.33203125]
[33.52392197 304.80889893]
[41.07434082 291.75357056]
[51.63487244 280.98666382]
[64.54166412 273.18502808]
[78.98339081 268.83908081]
[78.35941315 253.85206604]
[77.73544312 238.86505127]
[77.11146545 223.87803650]
[76.48748779 208.89102173]
[75.86351013 193.90400696]
[75.23953247 178.91699219]
[74.61555481 163.92997742]
[73.99157715 148.94296265]
[60.97526550 141.48805237]
[47.73268127 148.53318787]
[34.49009323 155.57832336]
[21.24750900 162.62345886]
[15.20424366 177.48475647]
[-0.22287378 181.88743591]
[-13.19947910 172.45413208]
[-13.77103138 156.42126465]
[-1.49908471 146.08787537]
[14.20237350 149.38085938]
[27.44495964 142.33572388]
[40.68754578 135.29060364]
[53.93013000 128.24546814]
[52.91896439 120.81393433]
[39.40821838 127.33005524]
[29.03610802 116.49404144]
[36.13677979 103.28115082]
[50.89662933 105.95088959]
[49.88545990 98.51937103]
[35.24195862 95.26853943]
[20.59845924 92.01771545]
[5.95495749 88.76689148]
[-10.81810570 91.23684692]
[-17.83477974 75.80303192]
[-4.94653368 64.78806305]
[9.20578384 74.12339020]
[23.84928513 77.37421417]
[38.49278641 80.62503815]
[53.13628769 83.87586975]
[59.27846527 75.53658295]
[66.76254272 69.00115204]
[75.11806488 64.44793701]
[83.86194611 61.94116592]
[92.52478027 61.43405151]
[100.67519379 62.77765274]
[107.94094849 65.73491669]
[114.02597809 69.99881744]
[123.29092407 58.20217896]
[132.55587769 46.40554047]
[141.82083130 34.60890198]
[141.06538391 21.69057274]
[149.07865906 12.04659462]
[161.11994934 10.52513027]
[170.62829590 -1.07621145]
[180.13665771 -12.67755222]
[189.64501953 -24.27889442]
[199.15338135 -35.88023376]
[188.74493408 -46.70615768]
[179.68998718 -58.68715668]
[172.11566162 -71.65503693]
[166.12829590 -85.42775726]
[161.81193542 -99.81196594]
[159.22717285 -114.60572815]
[158.41029358 -129.60136414]
[159.37277222 -144.58834839]
[162.10110474 -159.35630798]
[166.55696106 -173.69792175]
[172.67781067 -187.41183472]
[180.37773132 -200.30554199]
[189.54861450 -212.19802856]
[200.06170654 -222.92234802]
[211.76945496 -232.32795715]
[224.50746155 -240.28279114]
[238.09692383 -246.67518616]
[252.34707642 -251.41540527]
[267.05783081 -254.43692017]
[282.02273560 -255.69728088]
[297.03164673 -255.17881775]
[311.87390137 -252.88880920]
[326.34109497 -248.85939026]
[340.23016357 -243.14712524]
[353.34613037 -235.83222961]
[365.50485229 -227.01736450]
[376.53567505 -216.82629395]
[386.28366089 -205.40208435]
[394.61206055 -192.90510559]
[401.40386963 -179.51080322]
[406.56381226 -165.40721130]
[410.01940918 -150.79231262]
[411.72216797 -135.87129211]
[411.64819336 -120.85359955]
[409.79849243 -105.95008087]
[406.19903564 -91.36994171]
[400.90039062 -77.31787872]
[393.97689819 -63.99114609]
[385.52578735 -51.57683945]
[375.66567993 -40.24923325]
[364.53500366 -30.16735268]
[352.29000854 -21.47272682]
[339.10260010 -14.28741837]
[325.15792847 -8.71229553]
[310.65170288 -4.82562590]
[295.78762817 -2.68197155]
[280.77432251 -2.31142616]
[265.82257080 -3.71919155]
[251.14228821 -6.88550472]
[236.93954468 -11.76591587]
[223.41372681 -18.29191208]
[210.75471497 -26.37187576]
[201.24636841 -14.77053547]
[191.73800659 -3.16919422]
[182.22964478 8.43214703]
[172.72128296 20.03348923]
[170.84437561 37.45408249]
[153.61746216 43.87384796]
[144.35252380 55.67049026]
[135.08757019 67.46713257]
[125.82261658 79.26377106]
[138.18067932 105.66491699]
[124.87522888 136.38969421]
[88.97859192 148.31898499]
[89.60256958 163.30599976]
[90.22654724 178.29301453]
[90.85052490 193.28002930]
[91.47450256 208.26704407]
[92.09848022 223.25405884]
[92.72245789 238.24107361]
[93.34643555 253.22808838]
[93.97041321 268.21511841]
[108.72341156 271.34555054]
[122.23405457 278.04730225]
[133.65303040 287.89910889]
[142.26254272 300.28161621]
[147.52139282 314.41653442]
[149.09899902 329.41525269]
[146.89619446 344.33499146]
[141.05145264 358.23785400]
[131.93215942 370.24990845]
[120.11159515 379.61608887]
[106.33278656 385.74755859]
[91.46188354 388.25897217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 32]
[21 31]
[22 30]
[23 29]
[38 48]
[39 47]
[40 46]
[41 45]
[56 127]
[57 126]
[58 125]
[59 124]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
