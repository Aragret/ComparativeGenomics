%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAACGAAAGGGGGGGGGGGUUUAACUAAGCUAUACUAACCCCAGGGUUGGUCAAUUUCGUGCCAGCCAxxxxxxxxxxCUCACCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCCUGAGAACCAACCCCCCCCCCAAUGAACGAAA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 321.18951416]
[71.01555634 315.63650513]
[58.81560135 306.77017212]
[49.20452881 295.14785767]
[42.78650284 281.50015259]
[39.96496582 266.68496704]
[40.91728210 251.63359070]
[45.58358765 237.29216003]
[53.67055511 224.56221008]
[64.66983032 214.24394226]
[77.88998413 206.98596191]
[92.50000000 203.24452209]
[92.50000000 188.24452209]
[92.50000000 173.24452209]
[92.50000000 158.24452209]
[92.50000000 143.24452209]
[92.50000000 128.24452209]
[92.50000000 113.24452209]
[80.62317657 104.08258820]
[66.11454773 107.89044952]
[51.60592651 111.69830322]
[37.09730148 115.50616455]
[22.58867455 119.31402588]
[8.08004951 123.12187958]
[20.21546555 131.93843079]
[22.74966240 146.72280884]
[14.24323463 159.07759094]
[-0.47223100 161.98536682]
[-13.03845692 153.79450989]
[-16.31791878 139.15739441]
[-8.44727516 126.38732910]
[-23.31387329 128.38337708]
[-34.15137482 140.21250916]
[-50.14632034 138.97103882]
[-59.02875900 125.61132812]
[-53.98484039 110.38179779]
[-38.88383102 104.96524811]
[-25.30993080 113.51678467]
[-10.44333172 111.52072906]
[4.27219057 108.61325836]
[18.78081512 104.80539703]
[33.28944016 100.99753571]
[47.79806519 97.18968201]
[62.30669403 93.38182068]
[76.81531525 89.57395935]
[89.91831207 85.84583282]
[99.16440582 90.70337677]
[107.32107544 78.11493683]
[115.47773743 65.52649689]
[123.63440704 52.93805695]
[131.79107666 40.34961700]
[139.94773865 27.76117897]
[148.10440063 15.17273998]
[156.26106262 2.58430099]
[144.40226746 -6.61585045]
[133.36642456 -16.78856087]
[123.23306274 -27.86053848]
[114.07517242 -39.75200272]
[105.95875549 -52.37727737]
[98.94227600 -65.64539337]
[93.07630920 -79.46075439]
[88.40309906 -93.72382355]
[84.95633698 -108.33181763]
[82.76084137 -123.17950439]
[81.83243561 -138.15988159]
[82.17781067 -153.16503906]
[83.79447937 -168.08683777]
[86.67079163 -182.81777954]
[90.78602600 -197.25172424]
[96.11052704 -211.28466797]
[102.60592651 -224.81550598]
[110.22543335 -237.74674988]
[118.91415405 -249.98521423]
[128.60946655 -261.44271851]
[139.24153137 -272.03674316]
[150.73371887 -281.69091797]
[163.00326538 -290.33572388]
[175.96173096 -297.90881348]
[189.51576233 -304.35568237]
[203.56771851 -309.62982178]
[218.01631165 -313.69329834]
[232.75747681 -316.51678467]
[247.68498230 -318.07995605]
[262.69128418 -318.37152100]
[277.66824341 -317.38943481]
[292.50793457 -315.14071655]
[307.10348511 -311.64160156]
[321.34970093 -306.91729736]
[335.14395142 -301.00183105]
[348.38684082 -293.93783569]
[360.98294067 -285.77621460]
[372.84149170 -276.57574463]
[383.87707520 -266.40277100]
[394.01016235 -255.33052063]
[403.16772461 -243.43882751]
[411.28384399 -230.81333923]
[418.29995728 -217.54504395]
[424.16558838 -203.72952271]
[428.83840942 -189.46633911]
[432.28479004 -174.85826111]
[434.47991943 -160.01051331]
[435.40792847 -145.03010559]
[435.06216431 -130.02496338]
[433.44509888 -115.10320282]
[430.56842041 -100.37233734]
[426.45281982 -85.93849945]
[421.12796021 -71.90569305]
[414.63220215 -58.37502289]
[407.01235962 -45.44398117]
[398.32333374 -33.20573807]
[388.62771606 -21.74847031]
[377.99539185 -11.15472984]
[366.50292969 -1.50084758]
[354.23318481 7.14362001]
[341.27450562 14.71638870]
[327.72030640 21.16289520]
[313.66821289 26.43669128]
[299.21951294 30.49978065]
[284.47830200 33.32288361]
[269.55075073 34.88566589]
[254.54444885 35.17686081]
[239.56750488 34.19437408]
[224.72784424 31.94528198]
[210.13238525 28.44579124]
[195.88629150 23.72111702]
[182.09220886 17.80530167]
[168.84950256 10.74096680]
[160.69284058 23.32940674]
[152.53617859 35.91784668]
[144.37951660 48.50628281]
[136.22283936 61.09472275]
[128.06617737 73.68316650]
[119.90951538 86.27159882]
[111.75284576 98.86003876]
[107.50000000 113.24452209]
[107.50000000 128.24452209]
[107.50000000 143.24452209]
[107.50000000 158.24452209]
[107.50000000 173.24452209]
[107.50000000 188.24452209]
[107.50000000 203.24452209]
[122.11001587 206.98596191]
[135.33016968 214.24394226]
[146.32945251 224.56221008]
[154.41641235 237.29216003]
[159.08271790 251.63359070]
[160.03503418 266.68496704]
[157.21350098 281.50015259]
[150.79547119 295.14785767]
[141.18440247 306.77017212]
[128.98443604 315.63650513]
[114.96250153 321.18951416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[31 39]
[32 38]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
