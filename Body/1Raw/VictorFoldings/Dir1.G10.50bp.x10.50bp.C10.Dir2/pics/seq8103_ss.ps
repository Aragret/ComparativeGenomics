%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACACAAACUACGGGGGGGGGGCACCUACCUCCCUCACCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCxxxxxxxxxxAUUCUCAUAAUCGCCCACGGGCUUACAUCCUCAUUACUAUUCUGCCUAGCCCCCCCCCCCAAACUCAAACUAC\
) } def
/len { sequence length } bind def

/coor [
[84.46063232 435.81069946]
[70.58650208 429.96243286]
[58.23169708 421.35705566]
[47.93632126 410.37075806]
[40.15044785 397.48379517]
[35.21443176 383.25952148]
[33.34406281 368.31979370]
[34.62110519 353.31771851]
[38.98972702 338.90908813]
[46.25895691 325.72378540]
[56.11100769 314.33822632]
[68.11519623 305.25015259]
[81.74674988 298.85684204]
[96.40975952 295.43777466]
[96.10962677 280.44079590]
[95.80949402 265.44378662]
[95.50936127 250.44679260]
[95.20922852 235.44979858]
[94.90909576 220.45280457]
[94.60896301 205.45581055]
[94.30883026 190.45880127]
[94.00870514 175.46180725]
[93.70857239 160.46481323]
[93.40843964 145.46781921]
[86.75242615 143.99172974]
[80.38813782 141.54690552]
[74.45571899 138.18717957]
[69.08581543 133.98652649]
[64.39667511 129.03746033]
[60.49155426 123.44896698]
[57.45645142 117.34409332]
[55.35819626 110.85728455]
[54.24300385 104.13139343]
[54.13542557 97.31452179]
[55.03783035 90.55678558]
[56.93034744 84.00699615]
[59.77130127 77.80939484]
[63.49813461 72.10044861]
[68.02877808 67.00588226]
[73.26345825 62.63787460]
[79.08689880 59.09262466]
[85.37087250 56.44819260]
[82.97989655 41.63998032]
[80.58892059 26.83176422]
[78.19794464 12.02354908]
[75.80697632 -2.78466654]
[73.41600037 -17.59288216]
[58.41725922 -16.87330437]
[43.43226242 -17.83761024]
[28.64945984 -20.47367096]
[14.25476456 -24.74833679]
[0.42920366 -30.60784721]
[-12.65335274 -37.97851562]
[-24.82837677 -46.76764297]
[-35.94275665 -56.86470413]
[-45.85671234 -68.14270782]
[-54.44556808 -80.45983887]
[-61.60131454 -93.66117096]
[-67.23395538 -107.58070374]
[-71.27265167 -122.04338074]
[-73.66661835 -136.86730957]
[-74.38574982 -151.86607361]
[-73.42099762 -166.85104370]
[-70.78449249 -181.63375854]
[-66.50939941 -196.02833557]
[-60.64947128 -209.85371399]
[-53.27841568 -222.93605042]
[-44.48892212 -235.11080933]
[-34.39152908 -246.22488403]
[-23.11322403 -256.13851929]
[-10.79584408 -264.72698975]
[2.40570855 -271.88235474]
[16.32540894 -277.51455688]
[30.78820419 -281.55282593]
[45.61220551 -283.94635010]
[60.61098862 -284.66503906]
[75.59593201 -283.69982910]
[90.37857056 -281.06289673]
[104.77301025 -276.78738403]
[118.59822083 -270.92703247]
[131.68034363 -263.55557251]
[143.85484314 -254.76571655]
[154.96861267 -244.66799927]
[164.88189697 -233.38940430]
[173.47001648 -221.07176208]
[180.62496948 -207.86999512]
[186.25677490 -193.95011902]
[190.29461670 -179.48721313]
[192.68768311 -164.66313171]
[193.40592957 -149.66433716]
[192.44027710 -134.67942810]
[189.80288696 -119.89685822]
[185.52693176 -105.50254822]
[179.66618347 -91.67751312]
[172.29434204 -78.59561920]
[163.50411987 -66.42137909]
[153.40605164 -55.30790710]
[142.12716675 -45.39496231]
[129.80926514 -36.80720901]
[116.60728455 -29.65264893]
[102.68724823 -24.02125740]
[88.22421265 -19.98385620]
[90.61518860 -5.17564154]
[93.00616455 9.63257408]
[95.39714050 24.44078827]
[97.78811646 39.24900436]
[100.17908478 54.05722046]
[129.95982361 65.16926575]
[145.39959717 92.95386505]
[160.39884949 93.10394287]
[165.99574280 78.99581909]
[176.31402588 67.86488342]
[189.95819092 61.21649551]
[205.08300781 59.94980240]
[219.64294434 64.23611450]
[231.66891479 73.49573517]
[239.53448486 86.47637939]
[242.17591858 101.42253113]
[239.23596191 116.31282806]
[231.11222839 129.13349915]
[218.90339661 138.15063477]
[204.26060486 142.14476013]
[189.16416931 140.57569885]
[175.65576172 133.65563965]
[165.56227112 122.32047272]
[160.24876404 108.10318756]
[145.24952698 107.95311737]
[142.01457214 118.58890533]
[136.31967163 128.13632202]
[128.49827576 136.03636169]
[119.00832367 141.82647705]
[108.40543365 145.16767883]
[108.70556641 160.16468811]
[109.00569916 175.16168213]
[109.30583191 190.15867615]
[109.60596466 205.15567017]
[109.90609741 220.15266418]
[110.20623016 235.14967346]
[110.50636292 250.14666748]
[110.80648804 265.14367676]
[111.10662079 280.14065552]
[111.40675354 295.13766479]
[126.19481659 297.96731567]
[140.07124329 303.81011963]
[152.42944336 312.41061401]
[162.72912598 323.39288330]
[170.52008057 336.27679443]
[175.46168518 350.49908447]
[177.33793640 365.43807983]
[176.06680298 380.44067383]
[171.70384216 394.85104370]
[164.43980408 408.03918457]
[154.59222412 419.42861938]
[142.59161377 428.52142334]
[128.96257019 434.92007446]
[114.30091858 438.34490967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[109 127]
[110 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
