%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAUAAUCUGGGGGGGGGGUCUUCAUAGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUxxxxxxxxxxUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCAGGCUUCCCCCCCCCCCGGAAUAAUCU\
) } def
/len { sequence length } bind def

/coor [
[83.51808167 371.10491943]
[70.29788208 363.83245850]
[59.41107941 353.38546753]
[51.59994888 340.47619629]
[47.39706802 325.98489380]
[47.08899689 310.89956665]
[50.69673920 296.24871826]
[57.97431183 283.03134155]
[68.42552185 272.14855957]
[81.33778381 264.34243774]
[95.83071899 260.14514160]
[95.51866150 245.14839172]
[95.20660400 230.15162659]
[94.89454651 215.15487671]
[94.58248901 200.15812683]
[94.27043915 185.16137695]
[93.95838165 170.16461182]
[93.64632416 155.16786194]
[93.33426666 140.17111206]
[93.02220917 125.17435455]
[74.82618713 106.97975159]
[81.05519104 82.01300049]
[73.60028076 68.99668884]
[66.14537048 55.98038101]
[58.69046402 42.96407318]
[51.23555374 29.94776344]
[36.24866486 25.70147705]
[28.87374687 12.39489079]
[33.01428986 -1.86664796]
[25.55937958 -14.88295746]
[14.83733654 -17.14640236]
[7.31178331 -24.80601501]
[5.32170677 -35.13358688]
[9.29246998 -44.63436890]
[2.38547111 -57.94952774]
[-4.52152729 -71.26467896]
[-17.49121094 -70.62232208]
[-29.68867493 -74.93879700]
[-39.29750443 -83.53353882]
[-44.90115738 -95.09172821]
[-45.69173813 -107.86535645]
[-41.58628464 -119.93756104]
[-33.23388290 -129.51028442]
[-39.58101273 -143.10124207]
[-45.92814255 -156.69218445]
[-52.27527237 -170.28314209]
[-58.62240219 -183.87408447]
[-64.96952820 -197.46504211]
[-71.31665802 -211.05599976]
[-86.82478333 -208.62713623]
[-102.37634277 -210.65093994]
[-116.71978760 -216.95629883]
[-128.70314026 -227.02793884]
[-137.36643982 -240.04838562]
[-142.01870728 -254.96443176]
[-142.29298401 -270.57223511]
[-138.17532349 -285.61459351]
[-130.00523376 -298.88201904]
[-118.44770813 -309.31021118]
[-125.07621002 -322.76620483]
[-131.70471191 -336.22216797]
[-138.33320618 -349.67813110]
[-152.25802612 -358.34017944]
[-151.44851685 -374.71932983]
[-136.73742676 -381.96612549]
[-123.25827026 -372.62567139]
[-124.87724304 -356.30661011]
[-118.24874115 -342.85064697]
[-111.62023926 -329.39468384]
[-104.99174500 -315.93872070]
[-90.89167786 -318.68502808]
[-76.55000305 -317.67520142]
[-62.95091248 -312.97222900]
[-51.02928543 -304.89276123]
[-41.60641479 -293.98574829]
[-35.33342743 -280.99520874]
[-32.64629364 -266.80950928]
[-33.73554230 -252.40049744]
[-38.53275299 -238.75701904]
[-46.71481705 -226.81703186]
[-57.72570801 -217.40312195]
[-51.37857819 -203.81216431]
[-45.03145218 -190.22122192]
[-38.68432236 -176.63026428]
[-32.33719254 -163.03932190]
[-25.99006271 -149.44836426]
[-19.64293289 -135.85742188]
[-2.49946356 -135.01733398]
[11.95261765 -125.59443665]
[19.71623039 -110.08815002]
[18.59045029 -92.69470215]
[8.79362869 -78.17168427]
[15.70062637 -64.85652161]
[22.60762596 -51.54137039]
[39.61799622 -42.42671585]
[38.57569122 -22.33786774]
[46.03060150 -9.32155800]
[60.42679596 -5.67667866]
[68.17255402 7.41751194]
[64.25186157 22.49285316]
[71.70677185 35.50916290]
[79.16168213 48.52547073]
[86.61659241 61.54178238]
[94.07150269 74.55809021]
[102.43228912 71.94071960]
[111.81461334 72.20095825]
[121.19669342 75.69904327]
[129.44178772 82.42694092]
[144.43449402 81.95890045]
[159.42718506 81.49085999]
[173.07386780 72.39691162]
[187.65083313 79.90985870]
[188.16253662 96.30101776]
[174.08258057 104.70858002]
[159.89521790 96.48355865]
[144.90252686 96.95159912]
[129.90983582 97.41963959]
[127.42471313 112.21234894]
[141.44142151 117.55385590]
[155.45814514 122.89537048]
[172.41207886 122.88571167]
[177.11468506 139.17442322]
[162.76435852 148.20239258]
[150.11662292 136.91207886]
[136.09991455 131.57057190]
[122.08319855 126.22905731]
[118.28340149 126.56225586]
[114.63735962 126.42195129]
[111.19948578 125.84203339]
[108.01896667 124.86230469]
[108.33102417 139.85905457]
[108.64307404 154.85580444]
[108.95513153 169.85256958]
[109.26718903 184.84931946]
[109.57924652 199.84606934]
[109.89130402 214.84281921]
[110.20336151 229.83958435]
[110.51541138 244.83633423]
[110.82746887 259.83309937]
[125.48246002 263.42385864]
[138.70826721 270.68609619]
[149.60313416 281.12469482]
[157.42424011 294.02792358]
[161.63830566 308.51599121]
[161.95802307 323.60107422]
[158.36160278 338.25466919]
[151.09423828 351.47769165]
[140.65144348 362.36853027]
[127.74520874 370.18463135]
[113.25551605 374.39312744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 104]
[23 103]
[24 102]
[25 101]
[26 100]
[29 97]
[30 96]
[34 94]
[35 93]
[36 92]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 81]
[59 70]
[60 69]
[61 68]
[62 67]
[108 117]
[109 116]
[110 115]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
