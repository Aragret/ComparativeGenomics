%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCCUCCGCGGGGGGGGGGAUAAGCCUGCGUCAGAUUAAAACACUGAACUGACAAUUAACAGCCCAAUAxxxxxxxxxxGAGCACACCAUAUAUUUACAGUAGGAAUAGACGUAGACACACGAGCAUAUCCCCCCCCCCUUCACCUCCGC\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 447.03070068]
[71.01555634 441.47769165]
[58.81560135 432.61135864]
[49.20452881 420.98904419]
[42.78650284 407.34133911]
[39.96496582 392.52615356]
[40.91728210 377.47479248]
[45.58358765 363.13336182]
[53.67055511 350.40341187]
[64.66983032 340.08511353]
[77.88998413 332.82714844]
[92.50000000 329.08572388]
[92.50000000 314.08572388]
[92.50000000 299.08572388]
[92.50000000 284.08572388]
[92.50000000 269.08572388]
[92.50000000 254.08570862]
[92.50000000 239.08570862]
[92.50000000 224.08570862]
[92.50000000 209.08570862]
[92.50000000 194.08570862]
[92.50000000 179.08570862]
[92.50000000 164.08570862]
[92.50000000 149.08570862]
[84.76270294 136.35844421]
[92.50000000 122.55827332]
[92.50000000 107.55827332]
[91.26938629 92.60883331]
[88.81645966 77.81076050]
[86.36353302 63.01267624]
[83.91060638 48.21459961]
[81.45767212 33.41651917]
[79.00474548 18.61844063]
[76.55181885 3.82036161]
[66.51012421 -4.33856106]
[64.79971313 -16.75813675]
[71.79966736 -26.67089844]
[69.65109253 -41.51622391]
[67.50251007 -56.36154556]
[55.70644760 -60.70715332]
[46.94586563 -69.62165070]
[42.85404205 -81.35485077]
[44.15604782 -93.63986206]
[50.54111099 -104.13098907]
[60.73386765 -110.85163116]
[59.19657516 -125.77265167]
[57.65928268 -140.69366455]
[56.12199020 -155.61468506]
[41.10599899 -155.85220337]
[26.22350311 -157.86407471]
[11.68342590 -161.62207031]
[-2.31011009 -167.07342529]
[-15.56065941 -174.14161682]
[-27.88220406 -182.72741699]
[-39.10176849 -192.71028137]
[-49.06184769 -203.95008850]
[-57.62261963 -216.28903198]
[-64.66390228 -229.55390930]
[-70.08684540 -243.55847168]
[-73.81532288 -258.10614014]
[-75.79699707 -272.99270630]
[-76.00403595 -288.00912476]
[-74.43354034 -302.94467163]
[-71.10755920 -317.58959961]
[-66.07278442 -331.73837280]
[-59.39988708 -345.19232178]
[-51.18255615 -357.76257324]
[-41.53614044 -369.27270508]
[-30.59606934 -379.56112671]
[-18.51591873 -388.48333740]
[-5.46527624 -395.91418457]
[8.37264729 -401.74926758]
[22.80358887 -405.90670776]
[37.62496185 -408.32812500]
[52.62869263 -408.97952271]
[67.60415649 -407.85180664]
[82.34112549 -404.96075439]
[96.63270569 -400.34695435]
[110.27827454 -394.07522583]
[123.08626556 -386.23355103]
[134.87687683 -376.93203735]
[145.48457336 -366.30126953]
[154.76046753 -354.49050903]
[162.57431030 -341.66552734]
[168.81642151 -328.00637817]
[173.39916992 -313.70480347]
[176.25822449 -298.96160889]
[177.35345459 -283.98373413]
[176.66946411 -268.98144531]
[174.21588135 -254.16537476]
[170.02713013 -239.74348450]
[164.16201782 -225.91825867]
[156.70288086 -212.88377380]
[147.75444031 -200.82302856]
[137.44232178 -189.90531921]
[125.91127014 -180.28390503]
[113.32318878 -172.09388733]
[99.85478210 -165.45021057]
[85.69512939 -160.44615173]
[71.04300690 -157.15197754]
[72.58029938 -142.23095703]
[74.11759186 -127.30994415]
[75.65488434 -112.38892365]
[91.29662323 -104.29650879]
[99.05970001 -88.31462097]
[95.69215393 -70.70980072]
[82.34783173 -58.51012421]
[84.49641418 -43.66480255]
[86.64498901 -28.81947899]
[98.23733521 -15.67938137]
[91.34989929 1.36743355]
[93.80282593 16.16551208]
[96.25575256 30.96359253]
[98.70867920 45.76166916]
[101.16161346 60.55974960]
[103.61454010 75.35782623]
[106.06746674 90.15590668]
[114.39356995 77.67888641]
[128.40763855 72.33042908]
[142.92947388 76.08753967]
[152.59124756 87.56143951]
[153.82151794 102.51090240]
[146.16557312 115.40998840]
[132.45333862 121.49066162]
[117.75342560 118.50524902]
[107.50000000 107.55827332]
[107.50000000 122.55827332]
[115.23729706 136.35844421]
[107.50000000 149.08570862]
[107.50000000 164.08570862]
[107.50000000 179.08570862]
[107.50000000 194.08570862]
[107.50000000 209.08570862]
[107.50000000 224.08570862]
[107.50000000 239.08570862]
[107.50000000 254.08570862]
[107.50000000 269.08572388]
[107.50000000 284.08572388]
[107.50000000 299.08572388]
[107.50000000 314.08572388]
[107.50000000 329.08572388]
[122.11001587 332.82714844]
[135.33016968 340.08511353]
[146.32945251 350.40341187]
[154.41641235 363.13336182]
[159.08271790 377.47479248]
[160.03503418 392.52615356]
[157.21350098 407.34133911]
[150.79547119 420.98904419]
[141.18440247 432.61135864]
[128.98443604 441.47769165]
[114.96250153 447.03070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[26 127]
[27 126]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[34 111]
[37 109]
[38 108]
[39 107]
[45 103]
[46 102]
[47 101]
[48 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
