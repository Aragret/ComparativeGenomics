%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUACUACCGGGGGGGGGGGCAUUCCUACUACUCAACUUAAACUCCAGCACCACGACCCUACUACUAUCxxxxxxxxxxUGGAGGCCGGAGCAGGAACAGGUUGAACAGUCUACCCUCCCUUAGCAGGGCCCCCCCCCCAACUACUCCC\
) } def
/len { sequence length } bind def

/coor [
[136.16851807 659.86590576]
[121.67882538 655.65740967]
[108.77259064 647.84130859]
[98.32979584 636.95043945]
[91.06243134 623.72747803]
[87.46600342 609.07385254]
[87.78572845 593.98876953]
[91.99979401 579.50067139]
[99.82089233 566.59747314]
[110.71575928 556.15887451]
[123.94156647 548.89660645]
[138.59655762 545.30584717]
[138.90861511 530.30908203]
[139.22067261 515.31231689]
[139.53273010 500.31558228]
[139.84478760 485.31884766]
[140.15684509 470.32208252]
[140.46890259 455.32531738]
[140.78096008 440.32858276]
[141.09301758 425.33181763]
[141.40507507 410.33505249]
[141.71711731 395.33831787]
[139.49351501 392.52352905]
[138.55824280 388.47052002]
[139.48776245 383.81341553]
[142.54563904 379.42376709]
[143.79251099 364.47567749]
[145.03938293 349.52761841]
[143.94807434 334.56735229]
[140.54508972 319.95846558]
[137.14212036 305.34957886]
[124.39901733 297.72402954]
[120.73979950 282.95700073]
[128.82456970 269.64257812]
[125.42159271 255.03367615]
[122.01861572 240.42478943]
[118.61563873 225.81590271]
[115.21266174 211.20700073]
[111.80968475 196.59811401]
[99.98136902 193.55975342]
[90.52775574 185.71476746]
[85.29919434 174.51826477]
[85.35327148 162.08879089]
[90.74146271 150.80749512]
[100.48748779 142.86195374]
[97.69515991 128.12416077]
[94.90283966 113.38635254]
[85.92642975 102.66647339]
[90.35935211 89.40597534]
[87.56703186 74.66816711]
[77.33921814 66.74064636]
[75.34517670 54.36151505]
[82.11883545 44.29052734]
[77.58419037 36.28497696]
[79.73923492 29.16448593]
[77.56240082 14.32328129]
[67.67321014 5.97715521]
[66.19585419 -6.47420549]
[73.38259125 -16.25470352]
[71.51497650 -31.13798332]
[69.64736176 -46.02126312]
[60.25204086 -58.75070190]
[66.34449768 -72.34229279]
[51.48343277 -75.17143250]
[38.22495270 -82.45619965]
[27.86798286 -93.48291016]
[21.42719650 -107.17127991]
[19.53359413 -122.18025970]
[22.37269211 -137.03942871]
[29.66634369 -150.29301453]
[40.69999313 -160.64259338]
[54.39267349 -167.07420349]
[69.40291595 -168.95774841]
[84.26017761 -166.10870361]
[97.50888062 -158.80616760]
[107.85106659 -147.76559448]
[114.27349854 -134.06860352]
[116.14698792 -119.05709839]
[113.28797913 -104.20175171]
[105.97657013 -90.95793915]
[94.92906189 -80.62316132]
[81.22777557 -74.20989990]
[90.48950958 -62.54501724]
[84.53063965 -47.88887787]
[86.39825439 -33.00559616]
[88.26586914 -18.12231636]
[99.60802460 -4.76734209]
[92.40360260 12.14644432]
[94.58044434 26.98764992]
[96.91154480 41.80540848]
[108.79943848 54.67700577]
[102.30484009 71.87584686]
[105.09716034 86.61364746]
[114.07357025 97.33352661]
[109.64064789 110.59402466]
[112.43296814 125.33183289]
[115.22529602 140.06964111]
[131.80815125 147.26838684]
[140.71594238 162.81938171]
[138.57403564 180.45494080]
[126.41857910 193.19512939]
[129.82154846 207.80403137]
[133.22453308 222.41291809]
[136.62751770 237.02180481]
[140.03048706 251.63070679]
[143.43347168 266.23959351]
[156.56967163 274.61083984]
[159.81266785 289.47482300]
[151.75100708 301.94659424]
[155.15399170 316.55548096]
[158.55696106 331.16436768]
[163.66358948 317.06039429]
[173.44383240 305.68731689]
[186.62406921 298.52621460]
[201.48789978 296.50964355]
[216.09968567 299.90020752]
[228.55657959 308.25637817]
[237.23641968 320.48995972]
[241.00883484 335.00784302]
[239.38258362 349.91943359]
[232.56944275 363.28286743]
[221.45664978 373.35784912]
[207.49136353 378.83242798]
[192.49223328 378.99365234]
[178.41250610 373.82049561]
[167.08572388 363.98669434]
[159.98747253 350.77447510]
[158.74060059 365.72256470]
[157.49372864 380.67065430]
[156.71388245 395.65036011]
[156.40182495 410.64712524]
[156.08976746 425.64389038]
[155.77770996 440.64062500]
[155.46565247 455.63739014]
[155.15359497 470.63412476]
[154.84153748 485.63088989]
[154.52947998 500.62765503]
[154.21742249 515.62438965]
[153.90536499 530.62115479]
[153.59332275 545.61791992]
[168.08625793 549.81518555]
[180.99851990 557.62133789]
[191.44972229 568.50408936]
[198.72729492 581.72149658]
[202.33503723 596.37231445]
[202.02696228 611.45764160]
[197.82408142 625.94897461]
[190.01295471 638.85821533]
[179.12614441 649.30523682]
[165.90594482 656.57769775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[26 129]
[27 128]
[28 127]
[29 111]
[30 110]
[31 109]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[45 97]
[46 96]
[47 95]
[49 93]
[50 92]
[53 90]
[55 89]
[56 88]
[59 86]
[60 85]
[61 84]
[63 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
