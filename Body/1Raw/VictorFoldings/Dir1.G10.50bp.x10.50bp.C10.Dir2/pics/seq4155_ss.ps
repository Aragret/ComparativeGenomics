%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUACAAUCUGGGGGGGGGGUCCUAGGAACAACAUAUGACGCACUCUCCCCUGAACUCUACACAACAUAUxxxxxxxxxxACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCACCACGACCCUCCCCCCCCCCACUACUAUCU\
) } def
/len { sequence length } bind def

/coor [
[85.28728485 348.17562866]
[71.44134521 342.15960693]
[59.73268509 332.63018799]
[51.03016281 320.29452515]
[45.97956085 306.06799316]
[44.95566940 291.00631714]
[48.03446960 276.22714233]
[54.98748779 262.82720947]
[65.29877472 251.80088806]
[78.20315552 243.96638489]
[92.74304199 239.90505981]
[92.74304199 224.90505981]
[92.74304199 209.90505981]
[92.74304199 194.90505981]
[92.74304199 179.90505981]
[92.74304199 164.90505981]
[92.74304199 149.90505981]
[92.74304199 134.90505981]
[92.74304199 119.90506744]
[92.74304199 104.90506744]
[90.71244812 102.53639221]
[89.52348328 99.35817719]
[89.48427582 95.69014740]
[90.77687073 91.96360016]
[93.41893005 88.67117310]
[94.66580963 73.72308350]
[95.91268158 58.77500153]
[81.06494904 56.60972595]
[66.37866974 53.53451157]
[51.90956116 49.56103134]
[37.71250916 44.70435333]
[23.84136581 38.98289871]
[10.34875107 32.41837311]
[-2.71415305 25.03567696]
[-15.29779434 16.86281967]
[-27.35443878 7.93079901]
[-38.83834839 -1.72650015]
[-49.70596695 -12.07244492]
[-59.91606140 -23.06778908]
[-69.42990875 -34.67082214]
[-78.21141052 -46.83753204]
[-86.22726440 -59.52176285]
[-93.44705963 -72.67539978]
[-99.84340668 -86.24855042]
[-105.39204407 -100.18972015]
[-110.07192230 -114.44602966]
[-113.86529541 -128.96339417]
[-116.75776672 -143.68675232]
[-118.73836517 -158.56025696]
[-119.79957581 -173.52746582]
[-119.93737793 -188.53161621]
[-119.15124512 -203.51580811]
[-117.44416046 -218.42317200]
[-114.82260132 -233.19717407]
[-111.29651642 -247.78175354]
[-106.87926483 -262.12161255]
[-101.58762360 -276.16235352]
[-95.44165039 -289.85067749]
[-88.46466827 -303.13470459]
[-80.68313599 -315.96405029]
[-72.12657928 -328.28997803]
[-62.82744980 -340.06579590]
[-52.82102585 -351.24682617]
[-42.14526749 -361.79061890]
[-30.84066963 -371.65722656]
[-18.95011330 -380.80917358]
[-6.51870489 -389.21176147]
[6.40639830 -396.83316040]
[19.77616692 -403.64437866]
[33.53988266 -409.61965942]
[47.64533997 -414.73626709]
[62.03902817 -418.97482300]
[76.66634369 -422.31927490]
[91.47180176 -424.75686646]
[106.39924622 -426.27844238]
[121.39204407 -426.87814331]
[136.39332581 -426.55377197]
[151.34617615 -425.30648804]
[166.19389343 -423.14105225]
[180.88014221 -420.06570435]
[195.34921265 -416.09207153]
[209.54621887 -411.23526001]
[223.41729736 -405.51367188]
[236.90985107 -398.94900513]
[249.97268677 -391.56619263]
[262.55624390 -383.39321899]
[274.61279297 -374.46105957]
[286.09661865 -364.80364990]
[296.96414185 -354.45761108]
[307.17413330 -343.46215820]
[316.68783569 -331.85903931]
[325.46923828 -319.69223022]
[333.48495483 -307.00793457]
[340.70462036 -293.85421753]
[347.10083008 -280.28100586]
[352.64935303 -266.33978271]
[357.32907104 -252.08343506]
[361.12231445 -237.56602478]
[364.01464844 -222.84263611]
[365.99508667 -207.96911621]
[367.05615234 -193.00189209]
[367.19381714 -177.99774170]
[366.40753174 -163.01356506]
[364.70031738 -148.10621643]
[362.07858276 -133.33224487]
[358.55236816 -118.74768829]
[354.13497925 -104.40787506]
[348.84320068 -90.36719513]
[342.69708252 -76.67891693]
[335.71997070 -63.39495850]
[327.93832397 -50.56571579]
[319.38162231 -38.23985291]
[310.08239746 -26.46412849]
[300.07586670 -15.28320885]
[289.39999390 -4.73950958]
[278.09530640 5.12697411]
[266.20465088 14.27881432]
[253.77316284 22.68129539]
[240.84799194 30.30254364]
[227.47814941 37.11364746]
[213.71437073 43.08877182]
[199.60887146 48.20524979]
[185.21513367 52.44367218]
[170.58778381 55.78796387]
[155.78230286 58.22543716]
[140.85484314 59.74684525]
[125.86204529 60.34641266]
[110.86077118 60.02187347]
[109.61389160 74.96996307]
[108.36701965 89.91804504]
[107.74304199 104.90506744]
[107.74304199 119.90506744]
[107.74304199 134.90505981]
[107.74304199 149.90505981]
[107.74304199 164.90505981]
[107.74304199 179.90505981]
[107.74304199 194.90505981]
[107.74304199 209.90505981]
[107.74304199 224.90505981]
[107.74304199 239.90505981]
[122.28292847 243.96638489]
[135.18731689 251.80088806]
[145.49859619 262.82720947]
[152.45161438 276.22714233]
[155.53041077 291.00631714]
[154.50653076 306.06799316]
[149.45591736 320.29452515]
[140.75340271 332.63018799]
[129.04473877 342.15960693]
[115.19879913 348.17562866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[25 130]
[26 129]
[27 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
