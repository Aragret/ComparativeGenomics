%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCACAUGGGGGGGGGGACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAxxxxxxxxxxUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCACCCCCCCCCCGCAGGCAAAU\
) } def
/len { sequence length } bind def

/coor [
[85.99514008 403.40670776]
[72.14920044 397.39068604]
[60.44054031 387.86126709]
[51.73801804 375.52560425]
[46.68741608 361.29907227]
[45.66352463 346.23739624]
[48.74232483 331.45825195]
[55.69534302 318.05831909]
[66.00662994 307.03198242]
[78.91101074 299.19747925]
[93.45089722 295.13616943]
[93.45089722 280.13616943]
[93.45089722 265.13616943]
[93.45089722 250.13615417]
[93.45089722 235.13615417]
[93.45089722 220.13615417]
[93.45089722 205.13615417]
[93.45089722 190.13615417]
[93.45089722 175.13615417]
[93.45089722 160.13615417]
[83.85978699 145.47291565]
[93.11404419 129.58775330]
[92.80198669 114.59099579]
[84.87733459 106.00113678]
[84.75576782 94.31477356]
[92.50000000 85.56190491]
[92.50000000 70.56190491]
[92.50000000 55.56190872]
[78.13909912 50.84789658]
[65.95487213 41.93795013]
[57.13313675 29.71479988]
[52.52762985 15.38286400]
[52.57740021 0.34956428]
[57.26499176 -13.91288471]
[66.11937714 -26.01164436]
[78.26325989 -34.76927948]
[92.50000000 -39.33832932]
[92.50000000 -54.33832932]
[92.50000000 -69.33833313]
[92.50000000 -84.33833313]
[92.50000000 -99.33833313]
[92.50000000 -114.33833313]
[91.09769440 -129.27264404]
[88.30537415 -144.01043701]
[85.51304626 -158.74824524]
[82.72072601 -173.48605347]
[79.92839813 -188.22386169]
[64.93370056 -187.33656311]
[49.94864273 -188.37409973]
[35.21930313 -191.31941223]
[20.98754501 -196.12413025]
[7.48706818 -202.70938110]
[-5.06043673 -210.96701050]
[-16.44892883 -220.76142883]
[-26.49139977 -231.93179321]
[-35.02294159 -244.29467773]
[-41.90345764 -257.64709473]
[-47.01996613 -271.76974487]
[-50.28844833 -286.43078613]
[-51.65523148 -301.38940430]
[-51.09787369 -316.39996338]
[-48.62553024 -331.21603394]
[-44.27879333 -345.59429932]
[-38.12903976 -359.29864502]
[-30.27725983 -372.10403442]
[-20.85238266 -383.80017090]
[-10.00917530 -394.19503784]
[2.07430720 -403.11791992]
[15.19964409 -410.42230225]
[29.15130424 -415.98822021]
[43.70019150 -419.72427368]
[58.60739517 -421.56915283]
[73.62812805 -421.49255371]
[88.51573944 -419.49569702]
[103.02575684 -415.61138916]
[116.91991425 -409.90344238]
[129.97004700 -402.46554565]
[141.96188354 -393.41989136]
[152.69848633 -382.91494751]
[162.00355530 -371.12326050]
[169.72430420 -358.23843384]
[175.73393250 -344.47207642]
[179.93377686 -330.05023193]
[182.25485229 -315.20971680]
[182.65905762 -300.19421387]
[181.13973999 -285.25033569]
[177.72187805 -270.62341309]
[172.46156311 -256.55368042]
[165.44520569 -243.27215576]
[156.78797913 -230.99694824]
[146.63209534 -219.92959595]
[135.14427185 -210.25186157]
[122.51318359 -202.12266541]
[108.94623566 -195.67549133]
[94.66620636 -191.01618958]
[97.45852661 -176.27838135]
[100.25085449 -161.54057312]
[103.04317474 -146.80276489]
[105.83550262 -132.06495667]
[113.31525421 -145.06701660]
[126.56826782 -152.09251404]
[141.52735901 -150.98542786]
[153.60177612 -142.08551025]
[159.08602905 -128.12402344]
[156.29707336 -113.38558197]
[146.09080505 -102.39321899]
[131.59939575 -98.52034760]
[117.27008057 -102.95550537]
[107.50000000 -114.33833313]
[107.50000000 -99.33833313]
[107.50000000 -84.33833313]
[107.50000000 -69.33833313]
[107.50000000 -54.33832932]
[107.50000000 -39.33832932]
[121.73674011 -34.76927948]
[133.88063049 -26.01164436]
[142.73501587 -13.91288471]
[147.42259216 0.34956428]
[147.47236633 15.38286400]
[142.86686707 29.71479988]
[134.04513550 41.93795013]
[121.86090088 50.84789658]
[107.50000000 55.56190872]
[107.50000000 70.56190491]
[107.50000000 85.56190491]
[116.26898193 99.83075714]
[107.79874420 114.27893829]
[108.11080170 129.27569580]
[116.88388062 138.78814697]
[116.79945374 151.32656860]
[108.45089722 160.13615417]
[108.45089722 175.13615417]
[108.45089722 190.13615417]
[108.45089722 205.13615417]
[108.45089722 220.13615417]
[108.45089722 235.13615417]
[108.45089722 250.13615417]
[108.45089722 265.13616943]
[108.45089722 280.13616943]
[108.45089722 295.13616943]
[122.99078369 299.19747925]
[135.89517212 307.03198242]
[146.20645142 318.05831909]
[153.15946960 331.45825195]
[156.23826599 346.23739624]
[155.21438599 361.29907227]
[150.16377258 375.52560425]
[141.46125793 387.86126709]
[129.75259399 397.39068604]
[115.90665436 403.40670776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 128]
[23 127]
[26 125]
[27 124]
[28 123]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[43 99]
[44 98]
[45 97]
[46 96]
[47 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
