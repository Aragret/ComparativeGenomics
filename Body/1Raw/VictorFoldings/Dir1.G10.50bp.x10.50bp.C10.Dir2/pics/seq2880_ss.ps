%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCAAACCUGGGGGGGGGGGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAACCUCCGAxxxxxxxxxxCCGGCCUGCUUCUUCUCACAUGACAAAAACUAGCCCCCAUCUCAAUCAUACCCCCCCCCCUACCAAAUCU\
) } def
/len { sequence length } bind def

/coor [
[83.40832520 353.48815918]
[69.56239319 347.47213745]
[57.85372925 337.94271851]
[49.15120316 325.60705566]
[44.10060120 311.38052368]
[43.07670975 296.31884766]
[46.15550995 281.53967285]
[53.10853195 268.13973999]
[63.41981506 257.11343384]
[76.32419586 249.27891541]
[90.86408234 245.21760559]
[90.86408234 230.21760559]
[90.86408234 215.21760559]
[90.86408234 200.21760559]
[90.86408234 185.21760559]
[90.86408234 170.21760559]
[90.86408234 155.21760559]
[90.86408234 140.21760559]
[90.86408234 125.21759796]
[90.86408234 110.21759796]
[84.65867615 96.56135559]
[73.35967255 86.69563293]
[62.06066895 76.82991028]
[54.92579269 81.19107056]
[47.04407883 83.94654846]
[38.77128601 84.97763062]
[30.47962761 84.24332428]
[22.54103851 81.78193665]
[15.31048298 77.70911407]
[9.11007881 72.21245575]
[4.21475744 65.54282379]
[0.84007150 58.00294876]
[-0.86729431 49.93365097]
[-0.83589029 41.69845200]
[0.92752367 33.66720200]
[-12.16563034 26.34809685]
[-25.25878525 19.02899170]
[-38.35194016 11.70988560]
[-51.44509506 4.39077997]
[-64.53824615 -2.92832565]
[-77.63140106 -10.24743080]
[-91.01768494 -17.01554680]
[-104.67392731 -23.22095299]
[-117.58040619 -14.76954460]
[-133.00738525 -14.66038895]
[-146.03216553 -22.92831612]
[-152.49859619 -36.93505859]
[-150.34324646 -52.21112061]
[-140.25390625 -63.88196182]
[-125.45001984 -68.22346497]
[-110.65547180 -63.85026169]
[-100.59114075 -52.15783691]
[-98.46852112 -36.87719345]
[-84.81227875 -30.67178726]
[-82.09641266 -31.58359718]
[-78.84479523 -31.43883133]
[-75.47149658 -30.02364540]
[-72.46160889 -27.28291512]
[-70.31229401 -23.34058571]
[-57.21914291 -16.02148056]
[-44.12598801 -8.70237446]
[-31.03283310 -1.38326871]
[-17.93968010 5.93583679]
[-4.84652519 13.25494289]
[8.24662971 20.57404900]
[18.17190742 12.24014664]
[30.28932190 7.64304733]
[30.28932190 -7.35695267]
[30.28932190 -22.35695267]
[16.51545334 -28.93291664]
[6.96552563 -40.83928680]
[3.53568625 -55.71204376]
[6.90693092 -70.59819794]
[16.40989685 -82.54208374]
[30.15776253 -89.17223358]
[45.42087936 -89.17223358]
[59.16874695 -82.54208374]
[68.67171478 -70.59819794]
[72.04295349 -55.71204376]
[68.61311340 -40.83928680]
[59.06319046 -28.93291664]
[45.28932190 -22.35695267]
[45.28932190 -7.35695267]
[45.28932190 7.64304733]
[66.54802704 19.32379341]
[76.81166077 41.46654129]
[71.92639160 65.53090668]
[83.22539520 75.39662933]
[94.52439880 85.26235199]
[86.64105225 72.50097656]
[85.86810303 57.52090073]
[92.39614868 44.01591873]
[104.61550903 35.31607437]
[119.51313019 33.56657410]
[133.41557312 39.19881439]
[142.89477539 50.82398987]
[145.61335754 65.57557678]
[140.90097046 79.81613159]
[129.91958618 90.03422546]
[115.37823486 93.71028900]
[130.35795593 94.49013519]
[145.33766174 95.26997375]
[160.31738281 96.04981995]
[164.96484375 81.69490814]
[173.17008972 69.03250885]
[184.37365723 58.92596436]
[197.81169128 52.06435394]
[212.56794739 48.91551590]
[227.63633728 49.69414520]
[241.98945618 54.34714890]
[254.64868164 62.55728149]
[264.75091553 73.76475525]
[271.60733032 87.20543671]
[274.75045776 101.96291351]
[273.96603394 117.03099823]
[269.30746460 131.38230896]
[261.09246826 144.03837585]
[249.88107300 154.13626099]
[236.43774414 160.98750305]
[221.67906189 164.12493896]
[206.61128235 163.33467102]
[192.26176453 158.67059326]
[179.60887146 150.45068359]
[169.51531982 139.23541260]
[162.66928101 125.78943634]
[159.53753662 111.02953339]
[144.55781555 110.24969482]
[129.57810974 109.46984863]
[114.59838867 108.69000244]
[110.09043121 110.25228882]
[105.86408234 110.21759796]
[105.86408234 125.21759796]
[105.86408234 140.21760559]
[105.86408234 155.21760559]
[105.86408234 170.21760559]
[105.86408234 185.21760559]
[105.86408234 200.21760559]
[105.86408234 215.21760559]
[105.86408234 230.21760559]
[105.86408234 245.21760559]
[120.40396881 249.27891541]
[133.30834961 257.11343384]
[143.61962891 268.13973999]
[150.57266235 281.53967285]
[153.65145874 296.31884766]
[152.62756348 311.38052368]
[147.57696533 325.60705566]
[138.87443542 337.94271851]
[127.16577911 347.47213745]
[113.31983948 353.48815918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 89]
[22 88]
[23 87]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 54]
[43 53]
[67 84]
[68 83]
[69 82]
[100 129]
[101 128]
[102 127]
[103 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
