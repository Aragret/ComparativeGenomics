%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUCCUAGGGGGGGGGGCCACUCACCCUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUxxxxxxxxxxGCUAUCAUCACCCGAUGAGGCAACCAGCCAGAACGCCUGAACGCAGGCACCCCCCCCCCCAUACUUCCUA\
) } def
/len { sequence length } bind def

/coor [
[83.75498962 382.49014282]
[70.53479004 375.21768188]
[59.64798737 364.77069092]
[51.83685684 351.86141968]
[47.63397598 337.37011719]
[47.32590485 322.28479004]
[50.93364334 307.63394165]
[58.21121597 294.41656494]
[68.66242218 283.53378296]
[81.57468414 275.72766113]
[96.06762695 271.53036499]
[95.75556946 256.53359985]
[95.44351196 241.53684998]
[95.13145447 226.54010010]
[94.81939697 211.54335022]
[94.50733948 196.54660034]
[94.19528961 181.54983521]
[93.88323212 166.55308533]
[93.57117462 151.55633545]
[93.25911713 136.55958557]
[82.67446136 134.80769348]
[72.59220886 129.93472290]
[63.94332504 122.10274506]
[57.60138702 111.75289917]
[54.29907608 99.58397675]
[54.55265427 86.50640106]
[58.60169983 73.57411957]
[66.37039948 61.89984894]
[77.45493317 52.56021881]
[91.13932037 46.49897766]
[106.43982697 44.43674850]
[96.22634888 33.45108414]
[86.01287079 22.46541977]
[75.79938507 11.47975540]
[64.50038147 1.61403191]
[52.23801422 -7.02508402]
[39.97564697 -15.66420078]
[29.83572960 -10.08524323]
[18.39382935 -8.73051262]
[7.33085680 -11.76003742]
[-1.74257112 -18.69261551]
[-7.52060318 -28.48178101]
[-9.19003677 -39.67362213]
[-6.54457474 -50.62269592]
[-18.24419785 -60.00985718]
[-29.94382286 -69.39701843]
[-48.17798233 -71.74121094]
[-53.95808029 -88.28177643]
[-65.85046387 -97.42351532]
[-77.74284363 -106.56524658]
[-89.63522339 -115.70697784]
[-105.95444489 -117.32402802]
[-112.46621704 -132.37490845]
[-102.47177124 -145.37655640]
[-86.25254822 -142.95401001]
[-80.49348450 -127.59935760]
[-68.60110474 -118.45762634]
[-56.70872498 -109.31589508]
[-44.81634521 -100.17415619]
[-32.74385834 -101.42411041]
[-22.75163460 -93.84951782]
[-20.55665970 -81.09664154]
[-8.85703659 -71.70948029]
[2.84258699 -62.32231903]
[20.47986221 -68.30432892]
[38.32446671 -62.47378922]
[49.19821167 -46.98836517]
[48.61476135 -27.92656898]
[60.87713242 -19.28745270]
[73.13949585 -10.64833641]
[68.94318390 -25.04940987]
[72.37577057 -39.65137482]
[82.54875183 -50.67455292]
[96.82888031 -55.26562881]
[111.51978302 -52.23622131]
[122.81877136 -42.37047577]
[127.80113220 -28.22211647]
[125.17720032 -13.45340061]
[115.62616730 -1.88716590]
[101.62029266 3.48270369]
[86.78504944 1.26627517]
[96.99853516 12.25193977]
[107.21201324 23.23760414]
[117.42549133 34.22327042]
[132.41250610 33.59929276]
[141.67745972 21.80265236]
[150.94241333 10.00601196]
[160.20735168 -1.79062808]
[169.47230530 -13.58726788]
[171.25901794 -29.88879204]
[186.37683105 -36.24364090]
[199.27381897 -26.11448860]
[196.68267822 -9.92133999]
[181.26895142 -4.32231855]
[172.00399780 7.47432137]
[162.73904419 19.27096176]
[153.47409058 31.06760216]
[144.20915222 42.86424255]
[153.22668457 54.85107422]
[167.12924194 49.21911621]
[181.03178406 43.58716202]
[188.58557129 29.43371391]
[204.38645935 26.65676498]
[216.31336975 37.38655090]
[215.21699524 53.39209747]
[201.93838501 62.39532089]
[186.66374207 57.48971558]
[172.76118469 63.12167358]
[158.85864258 68.75363159]
[159.01466370 76.25200653]
[173.18099976 71.32099152]
[182.24829102 83.27023315]
[173.68582153 95.58624268]
[159.32672119 91.24876404]
[159.48274231 98.74713898]
[173.60754395 103.79589081]
[187.73236084 108.84465027]
[201.85716248 113.89340973]
[215.98196411 118.94216156]
[232.00941467 115.47048187]
[242.82783508 127.79500580]
[237.30815125 143.23731995]
[221.12854004 145.91169739]
[210.93319702 133.06697083]
[196.80839539 128.01820374]
[182.68359375 122.96945190]
[168.55879211 117.92070007]
[154.43399048 112.87194061]
[132.78347778 133.05538940]
[108.25587463 136.24752808]
[108.56792450 151.24427795]
[108.87998199 166.24102783]
[109.19203949 181.23779297]
[109.50409698 196.23454285]
[109.81615448 211.23129272]
[110.12821198 226.22804260]
[110.44026184 241.22480774]
[110.75231934 256.22155762]
[111.06437683 271.21832275]
[125.71936798 274.80908203]
[138.94517517 282.07131958]
[149.84004211 292.50991821]
[157.66114807 305.41314697]
[161.87521362 319.90121460]
[162.19493103 334.98629761]
[158.59851074 349.63989258]
[151.33114624 362.86291504]
[140.88835144 373.75375366]
[127.98211670 381.56985474]
[113.49242401 385.77835083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[31 84]
[32 83]
[33 82]
[34 81]
[35 70]
[36 69]
[37 68]
[44 64]
[45 63]
[46 62]
[48 59]
[49 58]
[50 57]
[51 56]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[99 109]
[100 108]
[101 107]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
