%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGAAACAAGGGGGGGGGGGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGxxxxxxxxxxCAAAACCUGCCCCUACUCCUCCUAGACCUAACCUGACUAGAAAAGCUAUUCCCCCCCCCCACCUAAAACAA\
) } def
/len { sequence length } bind def

/coor [
[85.03749847 363.68161011]
[71.01555634 358.12860107]
[58.81560135 349.26226807]
[49.20452881 337.63995361]
[42.78650284 323.99224854]
[39.96496582 309.17706299]
[40.91728210 294.12570190]
[45.58358765 279.78427124]
[53.67055511 267.05432129]
[64.66983032 256.73602295]
[77.88998413 249.47805786]
[92.50000000 245.73661804]
[92.50000000 230.73661804]
[92.50000000 215.73661804]
[92.50000000 200.73661804]
[92.50000000 185.73661804]
[92.50000000 170.73661804]
[92.50000000 155.73661804]
[92.50000000 140.73661804]
[92.50000000 125.73662567]
[92.50000000 110.73662567]
[91.88417816 95.74926758]
[90.65356445 80.79983521]
[89.42295074 65.85040283]
[74.42132568 66.15862274]
[59.42918396 65.54273987]
[44.50339127 64.00509644]
[29.70056915 61.55151749]
[15.07686520 58.19131851]
[0.68775660 53.93723679]
[-13.41217518 48.80541611]
[-27.16944313 42.81532288]
[-40.53186035 35.98967743]
[-53.44874191 28.35437393]
[-65.87108612 19.93837547]
[-77.75177002 10.77360535]
[-89.04572296 0.89482951]
[-99.71010590 -9.66047764]
[-109.70447540 -20.85227585]
[-118.99089813 -32.63811111]
[-127.53416443 -44.97327423]
[-135.30186462 -57.81097412]
[-142.26452637 -71.10251617]
[-148.39573669 -84.79747009]
[-153.67224121 -98.84390259]
[-158.07402039 -113.18851471]
[-161.58439636 -127.77690125]
[-164.19001770 -142.55371094]
[-165.88102722 -157.46290588]
[-166.65101624 -172.44793701]
[-166.49703979 -187.45193481]
[-165.41969299 -202.41798401]
[-163.42304993 -217.28933716]
[-160.51470947 -232.00956726]
[-156.70570374 -246.52284241]
[-152.01045227 -260.77410889]
[-146.44679260 -274.70928955]
[-140.03581238 -288.27551270]
[-132.80183411 -301.42138672]
[-124.77231598 -314.09695435]
[-115.97769928 -326.25418091]
[-106.45135498 -337.84695435]
[-96.22940826 -348.83129883]
[-85.35064697 -359.16552734]
[-73.85633087 -368.81042480]
[-61.79006577 -377.72946167]
[-49.19762039 -385.88873291]
[-36.12676620 -393.25735474]
[-22.62708282 -399.80731201]
[-8.74977970 -405.51382446]
[5.45250034 -410.35519409]
[19.92588425 -414.31307983]
[34.61546707 -417.37243652]
[49.46552658 -419.52172852]
[64.41973114 -420.75271606]
[79.42135620 -421.06079102]
[94.41349030 -420.44476318]
[109.33927155 -418.90698242]
[124.14207458 -416.45324707]
[138.76574707 -413.09289551]
[153.15481567 -408.83868408]
[167.25468445 -403.70672607]
[181.01190186 -397.71649170]
[194.37425232 -390.89071655]
[207.29106140 -383.25527954]
[219.71331787 -374.83917236]
[231.59390259 -365.67428589]
[242.88777161 -355.79541016]
[253.55204773 -345.23999023]
[263.54629517 -334.04809570]
[272.83261108 -322.26217651]
[281.37576294 -309.92691040]
[289.14334106 -297.08914185]
[296.10586548 -283.79751587]
[302.23693848 -270.10250854]
[307.51330566 -256.05603027]
[311.91494751 -241.71138000]
[315.42517090 -227.12295532]
[318.03063965 -212.34611511]
[319.72152710 -197.43690491]
[320.49136353 -182.45187378]
[320.33721924 -167.44787598]
[319.25973511 -152.48182678]
[317.26296997 -137.61050415]
[314.35446167 -122.89029694]
[310.54531860 -108.37705994]
[305.84991455 -94.12585449]
[300.28613281 -80.19072723]
[293.87500000 -66.62454224]
[286.64089966 -53.47876358]
[278.61126709 -40.80326080]
[269.81652832 -28.64611053]
[260.29006958 -17.05343246]
[250.06802368 -6.06920290]
[239.18914795 4.26491308]
[227.69474792 13.90971375]
[215.62838745 22.82861328]
[203.03585815 30.98777771]
[189.96493530 38.35625839]
[176.46519470 44.90610123]
[162.58782959 50.61246109]
[148.38549805 55.45369339]
[133.91207886 59.41143417]
[119.22246552 62.47066498]
[104.37238312 64.61978912]
[105.60299683 79.56922150]
[106.83361053 94.51865387]
[109.04848480 96.71125031]
[110.49253845 99.77754211]
[110.83362579 103.42517853]
[109.85550690 107.24078369]
[107.50000000 110.73662567]
[107.50000000 125.73662567]
[107.50000000 140.73661804]
[107.50000000 155.73661804]
[107.50000000 170.73661804]
[107.50000000 185.73661804]
[107.50000000 200.73661804]
[107.50000000 215.73661804]
[107.50000000 230.73661804]
[107.50000000 245.73661804]
[122.11001587 249.47805786]
[135.33016968 256.73602295]
[146.32945251 267.05432129]
[154.41641235 279.78427124]
[159.08271790 294.12570190]
[160.03503418 309.17706299]
[157.21350098 323.99224854]
[150.79547119 337.63995361]
[141.18440247 349.26226807]
[128.98443604 358.12860107]
[114.96250153 363.68161011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 127]
[23 126]
[24 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
