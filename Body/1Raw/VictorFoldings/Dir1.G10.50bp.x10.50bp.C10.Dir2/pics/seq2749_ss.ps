%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCUGCCGGGGGGGGGGCAGUGACACAUGUUUAACGGCCGCGGUACCCUAACCGUGCAAAGGUAGCAxxxxxxxxxxUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAACCCCCCCCCCACCCCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 371.58282471]
[71.19830322 365.56680298]
[59.48964310 356.03738403]
[50.78712082 343.70172119]
[45.73651886 329.47518921]
[44.71262741 314.41351318]
[47.79142761 299.63436890]
[54.74444962 286.23443604]
[65.05573273 275.20809937]
[77.96011353 267.37359619]
[92.50000000 263.31228638]
[92.50000000 248.31228638]
[92.50000000 233.31228638]
[92.50000000 218.31228638]
[92.50000000 203.31228638]
[92.50000000 188.31228638]
[92.50000000 173.31228638]
[92.50000000 158.31228638]
[92.50000000 143.31228638]
[92.50000000 128.31228638]
[75.00368500 115.26496887]
[71.38774872 93.74106598]
[83.66011810 75.69273376]
[78.75856781 61.51617050]
[73.85701752 47.33961487]
[68.95545959 33.16305542]
[54.97393036 34.51687622]
[41.05276489 32.70133209]
[27.90086174 27.81242752]
[16.18713188 20.10259056]
[6.50650072 9.96761894]
[-0.65031618 -2.07362652]
[-4.92168379 -15.40578651]
[-6.09332180 -29.34845161]
[-4.10904932 -43.19088745]
[0.92653006 -56.22826385]
[8.75353622 -67.79753876]
[18.97022438 -77.31118774]
[31.05360031 -84.28704071]
[26.74601555 -98.65522766]
[22.43843079 -113.02340698]
[18.13084602 -127.39159393]
[8.86589813 -139.18823242]
[-4.07215834 -146.77813721]
[-17.01021385 -154.36804199]
[-29.94827080 -161.95796204]
[-42.88632584 -169.54786682]
[-58.11498642 -165.32135010]
[-71.83055878 -173.17364502]
[-75.89583588 -188.44613647]
[-67.89896393 -202.07792664]
[-52.58433914 -205.98150635]
[-39.03786469 -197.84095764]
[-35.29641724 -182.48591614]
[-22.35836220 -174.89601135]
[-9.42030621 -167.30610657]
[3.51775002 -159.71620178]
[16.45580673 -152.12628174]
[21.62757111 -161.15827942]
[29.76862907 -165.41593933]
[22.61209297 -179.52601624]
[30.87213135 -191.92042542]
[31.49610901 -206.90744019]
[32.12008667 -221.89445496]
[32.74406433 -236.88146973]
[33.36804199 -251.86848450]
[33.99201965 -266.85549927]
[34.61599731 -281.84252930]
[20.59035683 -287.59207153]
[9.37911701 -297.79421997]
[2.33608794 -311.21701050]
[0.31174880 -326.23959351]
[3.55054903 -341.04791260]
[11.66138744 -353.85375977]
[23.66484070 -363.11080933]
[38.11143494 -367.70120239]
[53.25667191 -367.07064819]
[67.27169037 -361.29525757]
[78.46411133 -351.07244873]
[85.48239136 -337.63671875]
[87.47904205 -322.61041260]
[84.21295929 -307.80810547]
[76.07852936 -295.01721191]
[64.05803680 -285.78231812]
[49.60301208 -281.21853638]
[48.97903442 -266.23153687]
[48.35505676 -251.24450684]
[47.73107910 -236.25749207]
[47.10710144 -221.27047729]
[46.48312378 -206.28346252]
[45.85914612 -191.29644775]
[53.06031418 -178.25833130]
[44.75564575 -164.79196167]
[53.33222198 -144.92077637]
[32.49903107 -131.69917297]
[36.80661392 -117.33099365]
[41.11420059 -102.96280670]
[45.42178345 -88.59462738]
[61.42002106 -89.27120209]
[77.06568909 -85.81339264]
[91.30770111 -78.44786835]
[103.18782043 -67.66402435]
[111.90513611 -54.18146133]
[116.87006378 -38.90194321]
[117.74421692 -22.84911156]
[114.46345520 -7.09990406]
[107.24256134 7.28770781]
[96.56118774 19.34577751]
[83.13201904 28.26150513]
[88.03356934 42.43806458]
[92.93511963 56.61462021]
[97.83667755 70.79117584]
[106.62348938 71.46993256]
[114.81060791 74.73181915]
[121.65676880 80.28149414]
[126.54211426 87.61649323]
[129.02432251 96.07270813]
[128.87866211 104.88449097]
[142.53489685 111.08990479]
[156.19114685 117.29531097]
[169.84738159 123.50071716]
[186.10795593 121.37332916]
[195.86445618 134.55448914]
[189.08023071 149.48452759]
[172.73431396 150.80471802]
[163.64196777 137.15695190]
[149.98573303 130.95155334]
[136.32949829 124.74613953]
[122.67324829 118.54073334]
[115.85802460 124.62434387]
[107.50000000 128.31228638]
[107.50000000 143.31228638]
[107.50000000 158.31228638]
[107.50000000 173.31228638]
[107.50000000 188.31228638]
[107.50000000 203.31228638]
[107.50000000 218.31228638]
[107.50000000 233.31228638]
[107.50000000 248.31228638]
[107.50000000 263.31228638]
[122.03988647 267.37359619]
[134.94427490 275.20809937]
[145.25555420 286.23443604]
[152.20857239 299.63436890]
[155.28736877 314.41351318]
[154.26348877 329.47518921]
[149.21287537 343.70172119]
[140.51036072 356.03738403]
[128.80169678 365.56680298]
[114.95575714 371.58282471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[23 112]
[24 111]
[25 110]
[26 109]
[39 98]
[40 97]
[41 96]
[42 95]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[60 93]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
