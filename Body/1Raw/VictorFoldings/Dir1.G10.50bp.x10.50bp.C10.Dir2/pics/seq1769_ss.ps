%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAGGAGACAAGGGGGGGGGGGUCGUAACAUGGUAAGUGUACUGGAAAGUGCACUUGGACGAACCAGAGUGxxxxxxxxxxCUAAAAGAGCACACCCGUCUAUGUAGCAAAAUAGUGGGAAGAUUUAUAGGCCCCCCCCCCUAGAGGCGACAA\
) } def
/len { sequence length } bind def

/coor [
[86.12309265 498.56323242]
[71.50709534 494.91351318]
[58.06992722 488.10247803]
[46.48558426 478.47177124]
[37.33514023 466.50442505]
[31.07756996 452.80075073]
[28.02675438 438.04812622]
[28.33572006 422.98651123]
[31.98897171 408.37139893]
[38.80326080 394.93588257]
[48.43678665 383.35388184]
[60.40633774 374.20632935]
[74.11152649 367.95205688]
[88.86489868 364.90481567]
[89.16889954 349.90789795]
[89.47290802 334.91098022]
[89.77690887 319.91406250]
[90.08091736 304.91714478]
[90.38491821 289.92022705]
[90.68892670 274.92330933]
[90.99292755 259.92639160]
[91.29693604 244.92947388]
[91.60093689 229.93255615]
[91.90493774 214.93563843]
[92.20894623 199.93872070]
[82.91799164 185.08052063]
[92.50000000 169.38768005]
[92.50000000 154.38768005]
[92.50000000 139.38768005]
[73.21456146 129.83587646]
[61.64607620 111.68826294]
[61.12746811 90.17324066]
[47.52928162 83.84162140]
[33.93109894 77.51000214]
[20.33291626 71.17838287]
[6.37510490 65.68479156]
[-7.89074278 61.04954147]
[-22.15659142 56.41428375]
[-36.42243958 51.77902985]
[-50.68828583 47.14377594]
[-64.95413208 42.50851822]
[-79.21997833 37.87326431]
[-93.48583221 33.23801041]
[-107.75167847 28.60275459]
[-123.67123413 32.53973389]
[-134.84399414 20.53550529]
[-129.77636719 4.93898869]
[-113.68151093 1.79454494]
[-103.11642456 14.33690739]
[-88.85057068 18.97216225]
[-74.58472443 23.60741806]
[-60.31887817 28.24267197]
[-46.05303192 32.87792587]
[-31.78718376 37.51318359]
[-17.52133560 42.14843750]
[-3.25548792 46.78369141]
[11.01035976 51.41894531]
[5.54493856 37.45008087]
[11.38559055 23.63390350]
[25.21351242 17.82110977]
[39.17133331 23.31467247]
[45.32786942 36.99301529]
[40.18482971 51.08375931]
[26.66453362 57.58020020]
[40.26271820 63.91181946]
[53.86090088 70.24343872]
[67.45908356 76.57505798]
[76.27579498 67.67661285]
[87.40814972 61.93315887]
[99.76956177 59.90528870]
[102.49063873 45.15415955]
[105.21171570 30.40303421]
[91.80792999 23.41519547]
[81.06050110 12.78578663]
[73.92510223 -0.54003149]
[71.03619385 -15.37733650]
[72.65065765 -30.40680504]
[78.62493134 -44.29202652]
[88.42780304 -55.79833603]
[101.18759155 -63.90260315]
[115.76971436 -67.88420105]
[130.87753296 -67.38908386]
[145.16767883 -62.46128464]
[157.36947632 -53.53897476]
[166.39794922 -41.41552353]
[171.45028687 -27.16893578]
[172.07725525 -12.06601143]
[168.22308350 2.55030847]
[160.23049927 15.38035107]
[148.81019592 25.28327751]
[134.97764587 31.37852478]
[119.96283722 33.12411118]
[117.24176788 47.87523651]
[114.52069092 62.62636566]
[126.11702728 69.57730865]
[134.74382019 79.98735046]
[148.91279602 75.06392670]
[163.08177185 70.14049530]
[169.42111206 58.86363983]
[181.36943054 55.07383347]
[192.32394409 60.29082870]
[206.58978271 55.65557480]
[220.85563660 51.02032089]
[235.12149048 46.38506317]
[239.78826904 31.58639145]
[252.28221130 22.38416481]
[267.79913330 22.31683159]
[280.37246704 31.41028214]
[285.16751099 46.16789627]
[280.34048462 60.91507339]
[267.74743652 69.98122406]
[252.23069763 69.88022614]
[239.75674438 60.65091324]
[225.49089050 65.28616333]
[211.22505188 69.92142487]
[196.95919800 74.55667877]
[185.97372437 88.20977783]
[168.00520325 84.30947113]
[153.83622742 89.23290253]
[139.66725159 94.15632629]
[139.85937500 104.34386444]
[137.47735596 114.25086212]
[132.67500305 123.23753357]
[125.76248169 130.72351074]
[117.18618774 136.22532654]
[107.50000000 139.38768005]
[107.50000000 154.38768005]
[107.50000000 169.38768005]
[116.07134247 179.07719421]
[115.72940826 191.60748291]
[107.20586395 200.24272156]
[106.90186310 215.23963928]
[106.59785461 230.23655701]
[106.29385376 245.23348999]
[105.98984528 260.23040771]
[105.68584442 275.22732544]
[105.38183594 290.22424316]
[105.07783508 305.22116089]
[104.77382660 320.21807861]
[104.46982574 335.21499634]
[104.16582489 350.21191406]
[103.86181641 365.20883179]
[118.47958374 368.85147095]
[131.92004395 375.65597534]
[143.50906372 385.28109741]
[152.66529846 397.24398804]
[158.92951965 410.94461060]
[161.98747253 425.69577026]
[161.68580627 440.75753784]
[158.03964233 455.37442017]
[151.23185730 468.81323242]
[141.60394287 480.39990234]
[129.63883972 489.55325317]
[115.93668365 495.81414795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[27 128]
[28 127]
[29 126]
[32 67]
[33 66]
[34 65]
[35 64]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[70 94]
[71 93]
[72 92]
[96 120]
[97 119]
[98 118]
[101 116]
[102 115]
[103 114]
[104 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
