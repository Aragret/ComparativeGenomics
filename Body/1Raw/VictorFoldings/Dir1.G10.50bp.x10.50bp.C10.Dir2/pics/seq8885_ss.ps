%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCACUCCAGGGGGGGGGGUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAxxxxxxxxxxUAUUUAUUACCUCAGAAGUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUCCCCCCCCCCUACCACUCCA\
) } def
/len { sequence length } bind def

/coor [
[85.04424286 355.47406006]
[71.19830322 349.45803833]
[59.48964310 339.92861938]
[50.78712082 327.59295654]
[45.73651886 313.36642456]
[44.71262741 298.30474854]
[47.79142761 283.52557373]
[54.74444962 270.12564087]
[65.05573273 259.09933472]
[77.96011353 251.26481628]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[84.76270294 58.99632645]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[92.50000000 1.26905644]
[77.52671051 0.28782874]
[62.64965439 -1.67060173]
[47.93253708 -4.59784889]
[33.43838501 -8.48137760]
[19.22926140 -13.30455685]
[5.36601305 -19.04673576]
[-8.09199429 -25.68332100]
[-21.08713150 -33.18589783]
[-33.56375122 -41.52233505]
[-45.46842957 -50.65693665]
[-56.75017929 -60.55058670]
[-67.36070251 -71.16091919]
[-77.25454712 -82.44249725]
[-86.38936615 -94.34700775]
[-94.72602081 -106.82348633]
[-102.22882843 -119.81848907]
[-108.86565399 -133.27638245]
[-114.60807800 -147.13952637]
[-119.43150330 -161.34855652]
[-123.31529236 -175.84265137]
[-126.24279785 -190.55970764]
[-128.20149231 -205.43673706]
[-129.18298340 -220.41000366]
[-129.18307495 -235.41542053]
[-128.20175171 -250.38870239]
[-126.24324036 -265.26574707]
[-123.31590271 -279.98284912]
[-119.43228912 -294.47695923]
[-114.60903168 -308.68606567]
[-108.86676788 -322.54928589]
[-102.23010254 -336.00726318]
[-94.72744751 -349.00234985]
[-86.39093781 -361.47891235]
[-77.25626373 -373.38354492]
[-67.36254883 -384.66522217]
[-56.75215530 -395.27569580]
[-45.47052002 -405.16946411]
[-33.56595230 -414.30419922]
[-21.08942986 -422.64080811]
[-8.09438038 -430.14352417]
[5.36354923 -436.78027344]
[19.22673035 -442.52261353]
[33.43579483 -447.34594727]
[47.92990112 -451.22967529]
[62.64698410 -454.15707397]
[77.52401733 -456.11569214]
[92.49729919 -457.09707642]
[107.50270081 -457.09707642]
[122.47598267 -456.11569214]
[137.35301208 -454.15707397]
[152.07009888 -451.22967529]
[166.56420898 -447.34594727]
[180.77326965 -442.52261353]
[194.63644409 -436.78027344]
[208.09437561 -430.14352417]
[221.08943176 -422.64080811]
[233.56594849 -414.30419922]
[245.47052002 -405.16946411]
[256.75216675 -395.27569580]
[267.36254883 -384.66522217]
[277.25625610 -373.38354492]
[286.39093018 -361.47891235]
[294.72744751 -349.00234985]
[302.23010254 -336.00726318]
[308.86676025 -322.54928589]
[314.60903931 -308.68606567]
[319.43228149 -294.47695923]
[323.31591797 -279.98284912]
[326.24322510 -265.26574707]
[328.20175171 -250.38870239]
[329.18307495 -235.41542053]
[329.18298340 -220.41000366]
[328.20150757 -205.43673706]
[326.24279785 -190.55970764]
[323.31527710 -175.84265137]
[319.43151855 -161.34855652]
[314.60806274 -147.13952637]
[308.86566162 -133.27638245]
[302.22882080 -119.81848907]
[294.72601318 -106.82348633]
[286.38937378 -94.34700775]
[277.25454712 -82.44249725]
[267.36068726 -71.16091919]
[256.75018311 -60.55058670]
[245.46842957 -50.65693665]
[233.56375122 -41.52233505]
[221.08712769 -33.18589783]
[208.09199524 -25.68332100]
[194.63398743 -19.04673576]
[180.77073669 -13.30455685]
[166.56161499 -8.48137760]
[152.06745911 -4.59784889]
[137.35034180 -1.67060173]
[122.47328949 0.28782874]
[107.50000000 1.26905644]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[115.23729706 58.99632645]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[122.03988647 251.26481628]
[134.94427490 259.09933472]
[145.25555420 270.12564087]
[152.20857239 283.52557373]
[155.28736877 298.30474854]
[154.26348877 313.36642456]
[149.21287537 327.59295654]
[140.51036072 339.92861938]
[128.80169678 349.45803833]
[114.95575714 355.47406006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 129]
[23 128]
[25 126]
[26 125]
[27 124]
[28 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
