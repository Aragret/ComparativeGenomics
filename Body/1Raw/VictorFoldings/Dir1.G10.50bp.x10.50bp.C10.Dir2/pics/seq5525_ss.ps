%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGCUAACGGGGGGGGGGCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCACAAAAAACAAUAxxxxxxxxxxUAAACCCAUAUAACCUCCCCCAAAAUUCAGAAUAAUAACACACCCGACCACCCCCCCCCCCACCGCUAAC\
) } def
/len { sequence length } bind def

/coor [
[91.28766632 425.93826294]
[77.44172668 419.92221069]
[65.73307037 410.39279175]
[57.03054428 398.05712891]
[51.97994232 383.83062744]
[50.95605087 368.76892090]
[54.03485107 353.98977661]
[60.98786926 340.58984375]
[71.29915619 329.56350708]
[84.20353699 321.72900391]
[98.74342346 317.66769409]
[98.74342346 302.66769409]
[98.74342346 287.66769409]
[98.74342346 272.66769409]
[98.74342346 257.66769409]
[98.74342346 242.66769409]
[98.74342346 227.66769409]
[98.74342346 212.66769409]
[98.74342346 197.66769409]
[98.74342346 182.66769409]
[98.11944580 167.68067932]
[96.87257385 152.73258972]
[95.62569427 137.78450012]
[89.43486023 136.54013062]
[83.53520203 134.28868103]
[78.08933258 131.09220886]
[73.24732971 127.03881836]
[69.14265442 122.24021912]
[65.88842773 116.82865906]
[63.57434464 110.95329285]
[48.64003754 112.35559845]
[33.70572662 113.75789642]
[18.77141953 115.16020203]
[5.71853924 125.08765411]
[-9.29865551 118.49858093]
[-10.83176136 102.17125702]
[2.69635010 92.90182495]
[17.36911583 100.22589874]
[32.30342484 98.82359314]
[47.23773193 97.42128754]
[62.17203903 96.01898193]
[74.10074615 72.14264679]
[98.78166962 61.98265076]
[101.26679230 47.18994522]
[103.75190735 32.39723587]
[106.23703003 17.60453033]
[108.72214508 2.81182337]
[98.33889008 -6.30887938]
[93.86962891 -19.27185440]
[96.38560486 -32.64048767]
[105.12106323 -42.92655563]
[117.70185089 -47.50037384]
[120.49417114 -62.23817825]
[123.28649902 -76.97598267]
[126.07881927 -91.71379089]
[128.87113953 -106.45159912]
[114.59111786 -111.11089325]
[101.02416229 -117.55807495]
[88.39307404 -125.68727875]
[76.90526581 -135.36500549]
[66.74936676 -146.43235779]
[58.09215164 -158.70756531]
[51.07578278 -171.98908997]
[45.81547546 -186.05883789]
[42.39760590 -200.68574524]
[40.87829590 -215.62963867]
[41.28250122 -230.64512634]
[43.60357666 -245.48564148]
[47.80341339 -259.90750122]
[53.81304550 -273.67385864]
[61.53379059 -286.55865479]
[70.83885956 -298.35034180]
[81.57546997 -308.85528564]
[93.56729889 -317.90097046]
[106.61743927 -325.33886719]
[120.51159668 -331.04681396]
[135.02160645 -334.93109131]
[149.90922546 -336.92794800]
[164.92996216 -337.00457764]
[179.83715820 -335.15969849]
[194.38604736 -331.42361450]
[208.33770752 -325.85769653]
[221.46304321 -318.55331421]
[233.54652405 -309.63043213]
[244.38973999 -299.23559570]
[253.81460571 -287.53942871]
[261.66638184 -274.73403931]
[267.81613159 -261.02969360]
[272.16287231 -246.65145874]
[274.63522339 -231.83538818]
[275.19259644 -216.82479858]
[273.82580566 -201.86618042]
[270.55731201 -187.20516968]
[265.44079590 -173.08250427]
[258.56030273 -159.73008728]
[250.02874756 -147.36720276]
[239.98628235 -136.19683838]
[228.59779358 -126.40242004]
[216.05027771 -118.14479065]
[202.54980469 -111.55953979]
[188.31805420 -106.75481415]
[173.58871460 -103.80950928]
[158.60365295 -102.77198029]
[143.60894775 -103.65927124]
[140.81663513 -88.92146301]
[138.02430725 -74.18366241]
[135.23197937 -59.44585419]
[132.43965149 -44.70804596]
[144.05783081 -33.15281677]
[146.54719543 -16.78916550]
[138.73594666 -2.00857043]
[123.51485443 5.29694176]
[121.02973175 20.08964920]
[118.54461670 34.88235474]
[116.05949402 49.67506409]
[113.57437897 64.46777344]
[123.82229614 70.34698486]
[131.77188110 79.08706665]
[136.65617371 89.84479523]
[138.00393677 101.58227539]
[135.68515015 113.16710663]
[129.92353821 123.48159027]
[121.27494049 131.53062439]
[110.57378387 136.53762817]
[111.82065582 151.48571777]
[113.06753540 166.43380737]
[115.76753998 170.02148438]
[117.01757050 173.89555359]
[116.91046143 177.55212402]
[115.69709015 180.57232666]
[113.74342346 182.66769409]
[113.74342346 197.66769409]
[113.74342346 212.66769409]
[113.74342346 227.66769409]
[113.74342346 242.66769409]
[113.74342346 257.66769409]
[113.74342346 272.66769409]
[113.74342346 287.66769409]
[113.74342346 302.66769409]
[113.74342346 317.66769409]
[128.28330994 321.72900391]
[141.18769836 329.56350708]
[151.49897766 340.58984375]
[158.45199585 353.98977661]
[161.53079224 368.76892090]
[160.50691223 383.83062744]
[155.45629883 398.05712891]
[146.75378418 410.39279175]
[135.04512024 419.92221069]
[121.19918060 425.93826294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 126]
[22 125]
[23 124]
[30 41]
[31 40]
[32 39]
[33 38]
[43 116]
[44 115]
[45 114]
[46 113]
[47 112]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
