%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:43:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCAUUCCUGGGGGGGGGGACUACUCAACUUAAACUCCAGCACCACGACCCUACUACUAUCUCGCACCUxxxxxxxxxxCCAUAUCUAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCCCCCCCCCCCACCCCAUUCCU\
) } def
/len { sequence length } bind def

/coor [
[84.29688263 426.80599976]
[71.96377563 418.15487671]
[61.86532593 406.97592163]
[54.50807190 393.82986450]
[50.26105118 379.37612915]
[49.33729553 364.33969116]
[51.78313065 349.47479248]
[57.47588348 335.52700806]
[66.13000488 323.19598389]
[77.31140900 313.10025024]
[90.45923615 305.74618530]
[104.91400909 301.50265503]
[103.99059296 286.53112793]
[103.06717682 271.55957031]
[102.14376831 256.58801270]
[101.22035217 241.61647034]
[100.29693604 226.64491272]
[99.37352753 211.67337036]
[98.45011139 196.70181274]
[97.52669525 181.73027039]
[96.60328674 166.75871277]
[81.83557892 164.32975769]
[67.97841644 158.67608643]
[55.72643280 150.08108521]
[45.69379425 138.97563171]
[38.38341141 125.91641235]
[34.16174698 111.55805206]
[33.24041748 96.62030792]
[35.66561127 81.85198212]
[41.31575775 67.99337769]
[49.90762329 55.73920441]
[61.01052094 45.70373154]
[74.06787872 38.39002228]
[88.42516327 34.16469574]
[87.50175476 19.19314575]
[86.57833862 4.22159481]
[85.65492249 -10.74995518]
[84.73151398 -25.72150421]
[69.72631073 -26.05395126]
[54.80155563 -27.64084435]
[40.06193542 -30.47105408]
[25.61083412 -34.52472687]
[11.54962254 -39.77342606]
[-2.02307034 -46.18034363]
[-15.01204014 -53.70053101]
[-27.32617760 -62.28123856]
[-38.87910461 -71.86228180]
[-49.58978653 -82.37645721]
[-59.38309479 -93.75000763]
[-68.19033051 -105.90316010]
[-75.94972229 -118.75066376]
[-82.60684204 -132.20240784]
[-88.11499023 -146.16403198]
[-92.43553925 -160.53759766]
[-95.53816986 -175.22229004]
[-97.40112305 -190.11509705]
[-98.01133728 -205.11157227]
[-97.36453247 -220.10650635]
[-95.46524048 -234.99473572]
[-92.32678223 -249.67181396]
[-87.97117615 -264.03479004]
[-82.42897797 -277.98294067]
[-75.73905182 -291.41839600]
[-67.94833374 -304.24691772]
[-59.11146545 -316.37854004]
[-49.29043579 -327.72817993]
[-38.55412674 -338.21618652]
[-26.97785568 -347.76898193]
[-14.64281654 -356.31964111]
[-1.63553536 -363.80810547]
[11.95275116 -370.18188477]
[26.02672958 -375.39624023]
[40.48767853 -379.41464233]
[55.23416138 -382.20889282]
[70.16274261 -383.75933838]
[85.16870880 -384.05517578]
[100.14680481 -383.09429932]
[114.99195862 -380.88345337]
[129.60005188 -377.43811035]
[143.86860657 -372.78250122]
[157.69754028 -366.94921875]
[170.98986816 -359.97921753]
[183.65232849 -351.92138672]
[195.59609985 -342.83224487]
[206.73744202 -332.77554321]
[216.99815369 -321.82180786]
[226.30630493 -310.04791260]
[234.59658813 -297.53640747]
[241.81083679 -284.37506104]
[247.89846802 -270.65618896]
[252.81678772 -256.47604370]
[256.53128052 -241.93405151]
[259.01586914 -227.13226318]
[260.25317383 -212.17446899]
[260.23449707 -197.16558838]
[258.95996094 -182.21092224]
[256.43850708 -167.41535950]
[252.68782043 -152.88267517]
[247.73422241 -138.71481323]
[241.61244202 -125.01113892]
[234.36544800 -111.86779785]
[226.04403687 -99.37696838]
[216.70660400 -87.62627411]
[206.41864014 -76.69812775]
[195.25231934 -66.66918945]
[183.28593445 -57.60980988]
[170.60345459 -49.58353043]
[157.29382324 -42.64665604]
[143.45040894 -36.84783554]
[129.17030334 -32.22775269]
[114.55367279 -28.81880951]
[99.70306396 -26.64491844]
[100.62647247 -11.67336845]
[101.54988861 3.29818153]
[102.47330475 18.26973152]
[103.39671326 33.24127960]
[118.16442108 35.67023849]
[132.02157593 41.32392120]
[144.27355957 49.91891098]
[154.30621338 61.02436447]
[161.61659241 74.08358765]
[165.83825684 88.44194794]
[166.75958252 103.37969208]
[164.33439636 118.14801788]
[158.68424988 132.00662231]
[150.09237671 144.26080322]
[138.98947144 154.29626465]
[125.93212128 161.60998535]
[111.57483673 165.83531189]
[112.49824524 180.80685425]
[113.42166138 195.77841187]
[114.34507751 210.74995422]
[115.26848602 225.72151184]
[116.19190216 240.69305420]
[117.11531830 255.66461182]
[118.03872681 270.63616943]
[118.96214294 285.60769653]
[119.88555908 300.57925415]
[134.75224304 303.01428223]
[148.70414734 308.69689941]
[161.04144287 317.34204102]
[171.14530945 328.51611328]
[178.50894165 341.65859985]
[182.76295471 356.11029053]
[183.69400024 371.14627075]
[181.25537109 386.01235962]
[175.56938171 399.96289062]
[166.92123413 412.29809570]
[155.74472046 422.39926147]
[142.60046387 429.75967407]
[128.14775085 434.01022339]
[113.11154175 434.93762207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 138]
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
