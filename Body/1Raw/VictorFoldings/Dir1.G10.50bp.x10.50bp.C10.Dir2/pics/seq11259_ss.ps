%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAAUCUCCACGGGGGGGGGGCUCCAUCAUCACCUCAACCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUxxxxxxxxxxAUCUCCGCAUGAUGAAACUUCGGCUCACUCCUUGGCGCCUGCCUGAUCCUCCCCCCCCCCCCAAAUCACCAC\
) } def
/len { sequence length } bind def

/coor [
[85.03220367 401.66500854]
[70.87159729 396.50997925]
[58.28185654 388.22778320]
[47.94191742 377.26501465]
[40.40940475 364.21289062]
[36.09054184 349.77529907]
[35.21823120 334.73083496]
[37.83952332 319.89083862]
[43.81304932 306.05560303]
[52.81666565 293.97125244]
[64.36482239 284.28945923]
[77.83473969 277.53237915]
[92.50000000 274.06442261]
[92.50000000 259.06442261]
[92.50000000 244.06440735]
[92.50000000 229.06440735]
[92.50000000 214.06440735]
[92.50000000 199.06440735]
[92.50000000 184.06440735]
[92.50000000 169.06440735]
[92.50000000 154.06440735]
[92.50000000 139.06440735]
[79.25231171 133.93835449]
[68.65044403 124.48435211]
[62.04637909 111.90802765]
[60.28229523 97.81314087]
[63.58315277 83.99713135]
[71.52801514 72.22187042]
[62.95899200 59.91041565]
[54.38996887 47.59896469]
[45.82094574 35.28751373]
[37.25192261 22.97606277]
[28.68289948 10.66461086]
[15.53133392 17.90712547]
[1.69475496 23.73522949]
[-12.67523575 28.08506584]
[-27.42119217 30.90897751]
[-42.38154984 32.17602539]
[-57.39239502 31.87232018]
[-72.28926086 30.00119781]
[-86.90892792 26.58315277]
[-101.09121704 21.65563965]
[-114.68074036 15.27264404]
[-127.52859497 7.50410271]
[-139.49401855 -1.56486773]
[-150.44592285 -11.83490276]
[-160.26429749 -23.19347954]
[-168.84156799 -35.51614380]
[-176.08377075 -48.66788864]
[-181.91152954 -62.50460815]
[-186.26101685 -76.87470245]
[-189.08457947 -91.62072754]
[-190.35125732 -106.58111572]
[-190.04719543 -121.59195709]
[-188.17570496 -136.48876953]
[-184.75730896 -151.10835266]
[-179.82945251 -165.29052734]
[-173.44612122 -178.87989807]
[-165.67726135 -191.72756958]
[-156.60800171 -203.69277954]
[-146.33770752 -214.64442444]
[-134.97889709 -224.46252441]
[-122.65602112 -233.03948975]
[-109.50409698 -240.28137207]
[-95.66723633 -246.10879517]
[-81.29703522 -250.45794678]
[-66.55094147 -253.28114319]
[-51.59052277 -254.54745483]
[-36.57969284 -254.24302673]
[-21.68291664 -252.37117004]
[-7.06341553 -248.95242310]
[7.11863375 -244.02421570]
[20.70784378 -237.64056396]
[33.55532455 -229.87139893]
[45.52031326 -220.80184937]
[56.47171402 -210.53128052]
[66.28953552 -199.17222595]
[74.86621094 -186.84913635]
[82.10776520 -173.69705200]
[87.93486023 -159.86004639]
[92.28365326 -145.48973083]
[95.10649109 -130.74357605]
[96.37244415 -115.78312683]
[96.06764984 -100.77230072]
[94.19544220 -85.87557220]
[90.77632904 -71.25615692]
[85.84777832 -57.07422638]
[79.46379852 -43.48516846]
[71.69432068 -30.63787651]
[62.62447739 -18.67310905]
[52.35364151 -7.72195864]
[40.99435043 2.09558725]
[49.56337357 14.40703869]
[58.13239670 26.71849060]
[66.70142365 39.02994156]
[75.27044678 51.34139252]
[83.83946991 63.65284729]
[93.89602661 60.69325638]
[104.37652588 60.46363068]
[114.55305481 62.97991180]
[123.71884155 68.06733704]
[131.23728943 75.37257385]
[136.58622742 84.38825226]
[139.39414978 94.48820496]
[154.37489319 95.24794006]
[168.54924011 88.21954346]
[180.86828613 96.59153748]
[195.84902954 97.35127258]
[210.82978821 98.11101532]
[201.91479492 86.04772186]
[203.95544434 71.18717957]
[215.79219055 61.97351456]
[230.69908142 63.64216232]
[240.20567322 75.24495697]
[238.91006470 90.18889618]
[227.54838562 99.98249054]
[242.32633972 102.55393982]
[257.10427856 105.12538910]
[272.30718994 98.97689819]
[285.06509399 109.28064728]
[282.25378418 125.43702698]
[266.76528931 130.82574463]
[254.53283691 119.90333557]
[239.75488281 117.33188629]
[224.97694397 114.76043701]
[210.07005310 113.09175873]
[195.08929443 112.33202362]
[180.10855103 111.57228088]
[167.00572205 118.65502930]
[153.61515808 110.22869110]
[138.63439941 109.46895599]
[127.40563202 128.83070374]
[107.50000000 139.06440735]
[107.50000000 154.06440735]
[107.50000000 169.06440735]
[107.50000000 184.06440735]
[107.50000000 199.06440735]
[107.50000000 214.06440735]
[107.50000000 229.06440735]
[107.50000000 244.06440735]
[107.50000000 259.06442261]
[107.50000000 274.06442261]
[122.16526031 277.53237915]
[135.63517761 284.28945923]
[147.18333435 293.97125244]
[156.18695068 306.05560303]
[162.16047668 319.89083862]
[164.78176880 334.73083496]
[163.90945435 349.77529907]
[159.59059143 364.21289062]
[152.05809021 377.26501465]
[141.71813965 388.22778320]
[129.12840271 396.50997925]
[114.96779633 401.66500854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[104 131]
[105 130]
[107 128]
[108 127]
[109 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
