%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCACACACGGGGGGGGGGACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCAAAGACACCCxxxxxxxxxxACCAUAUACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUACCAAGGCCCCCCCCCCCCACCACACAC\
) } def
/len { sequence length } bind def

/coor [
[79.36261749 402.59020996]
[65.34066772 397.03720093]
[53.14071274 388.17086792]
[43.52964020 376.54855347]
[37.11161423 362.90084839]
[34.29007721 348.08566284]
[35.24239349 333.03427124]
[39.90869904 318.69287109]
[47.99566650 305.96289062]
[58.99494171 295.64462280]
[72.21510315 288.38665771]
[86.82511139 284.64520264]
[86.82511139 269.64520264]
[86.82511139 254.64521790]
[86.82511139 239.64521790]
[86.82511139 224.64521790]
[86.82511139 209.64521790]
[86.82511139 194.64521790]
[86.82511139 179.64521790]
[86.82511139 164.64521790]
[86.82511139 149.64521790]
[79.08781433 136.91795349]
[86.82511139 123.11777496]
[80.32617188 109.60591125]
[82.99983978 97.52831268]
[90.82064056 91.56827545]
[83.72423553 78.35308838]
[76.62783051 65.13790894]
[69.76806641 59.01096725]
[69.52455902 51.57773590]
[62.70098114 38.21963882]
[48.76815033 43.80456543]
[34.38517380 48.09935760]
[19.67123985 51.06843185]
[4.74827385 52.68717957]
[-10.26006413 52.94218826]
[-25.22940826 51.83134460]
[-40.03571701 49.36385727]
[-54.55629349 45.56016922]
[-68.67082214 40.45180130]
[-82.26232910 34.08108139]
[-95.21820068 26.50080299]
[-107.43107605 17.77377892]
[-118.79975128 7.97232533]
[-129.23002625 -2.82233739]
[-138.63545227 -14.52075958]
[-146.93811035 -27.02600288]
[-154.06919861 -40.23444366]
[-159.96961975 -54.03662872]
[-164.59046936 -68.31818390]
[-167.89347839 -82.96076965]
[-169.85127258 -97.84305573]
[-170.44761658 -112.84170532]
[-169.67758179 -127.83245087]
[-167.54753113 -142.69105530]
[-164.07513428 -157.29440308]
[-159.28915405 -171.52146912]
[-153.22926331 -185.25437927]
[-145.94564819 -198.37933350]
[-137.49870300 -210.78756714]
[-127.95839691 -222.37626648]
[-117.40378571 -233.04937744]
[-105.92234039 -242.71849060]
[-93.60919952 -251.30346680]
[-80.56639099 -258.73315430]
[-66.90200043 -264.94601440]
[-52.72924805 -269.89056396]
[-38.16558456 -273.52578735]
[-23.33168793 -275.82159424]
[-8.35048103 -276.75897217]
[6.65389585 -276.33013916]
[21.55710983 -274.53863525]
[36.23566437 -271.39932251]
[50.56792831 -266.93823242]
[64.43513489 -261.19229126]
[77.72237396 -254.20912170]
[90.31954193 -246.04661560]
[102.12225342 -236.77238464]
[113.03269958 -226.46330261]
[122.96047974 -215.20477295]
[131.82333374 -203.09010315]
[139.54779053 -190.21968079]
[146.06987000 -176.70014954]
[151.33552551 -162.64353943]
[155.30110168 -148.16633606]
[157.93376160 -133.38850403]
[159.21166992 -118.43249512]
[159.12426758 -103.42224121]
[157.67224121 -88.48213196]
[154.86764526 -73.73596954]
[150.73370361 -59.30593491]
[145.30470276 -45.31161118]
[138.62559509 -31.86895943]
[130.75175476 -19.08937454]
[121.74841309 -7.07875204]
[111.69017029 4.06338120]
[100.66039276 14.24469566]
[88.75046539 23.38082504]
[76.05908203 31.39606285]
[82.88265991 44.75416183]
[89.84300995 58.04150391]
[96.93941498 71.25668335]
[104.03582001 84.47187042]
[117.02619934 91.97187042]
[132.01908875 91.50994110]
[147.01197815 91.04801941]
[162.00485229 90.58609009]
[167.72856140 76.47371674]
[178.70195007 65.91414642]
[193.02381897 60.73687363]
[208.21279907 61.83890533]
[221.63734436 69.02930450]
[230.97152710 81.06228638]
[234.59817505 95.85307312]
[231.88894653 110.83906555]
[223.31321716 123.42385101]
[210.35679626 131.42703247]
[195.26445007 133.46202087]
[180.65103149 129.17623901]
[169.04840088 119.31222534]
[162.46678162 105.57897949]
[147.47389221 106.04090118]
[132.48101807 106.50283051]
[117.48812866 106.96475220]
[131.96670532 110.88530731]
[138.83757019 124.21914673]
[133.62741089 138.28521729]
[119.72833252 143.92573547]
[106.18938446 137.46841431]
[101.82511139 123.11777496]
[109.56241608 136.91795349]
[101.82511139 149.64521790]
[101.82511139 164.64521790]
[101.82511139 179.64521790]
[101.82511139 194.64521790]
[101.82511139 209.64521790]
[101.82511139 224.64521790]
[101.82511139 239.64521790]
[101.82511139 254.64521790]
[101.82511139 269.64520264]
[101.82511139 284.64520264]
[116.43512726 288.38665771]
[129.65528870 295.64462280]
[140.65455627 305.96289062]
[148.74153137 318.69287109]
[153.40783691 333.03427124]
[154.36015320 348.08566284]
[151.53860474 362.90084839]
[145.12059021 376.54855347]
[135.50950623 388.17086792]
[123.30955505 397.03720093]
[109.28761292 402.59020996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 130]
[26 103]
[27 102]
[28 101]
[30 100]
[31 99]
[104 124]
[105 123]
[106 122]
[107 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
