%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:41:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAAAAAUGGGGGGGGGGAAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUUCGCxxxxxxxxxxCCCUUACGAGUGCGGCUUCGACCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCCCCCCCCCCCAUAAAAUU\
) } def
/len { sequence length } bind def

/coor [
[56.10869217 455.58096313]
[42.26275635 449.56494141]
[30.55409431 440.03552246]
[21.85156822 427.69985962]
[16.80096626 413.47332764]
[15.77707577 398.41165161]
[18.85587502 383.63247681]
[25.80889702 370.23257446]
[36.12018204 359.20623779]
[49.02456284 351.37173462]
[63.56444931 347.31039429]
[63.56444931 332.31039429]
[63.56444931 317.31039429]
[63.56444931 302.31039429]
[63.56444931 287.31039429]
[63.56444931 272.31039429]
[63.56444931 257.31039429]
[63.56444931 242.31040955]
[63.56444931 227.31040955]
[63.56444931 212.31040955]
[63.56444931 197.31040955]
[55.21588898 188.50082397]
[55.13146591 175.96240234]
[63.90454483 166.44995117]
[64.21659851 151.45318604]
[64.52865601 136.45643616]
[59.19784546 131.18078613]
[55.39086914 145.68965149]
[40.92231369 149.64703369]
[30.26091576 139.09550476]
[34.06821060 124.58673859]
[48.53622055 120.62950134]
[43.20540619 115.35385895]
[28.21270943 115.82189941]
[16.22430038 126.48293304]
[0.43963936 123.61518097]
[-7.03263378 109.41853333]
[-0.46042979 94.78344727]
[15.11461926 90.93670654]
[27.74466705 100.82920074]
[42.73736572 100.36116028]
[50.05646896 87.26800537]
[42.60155869 74.25169373]
[27.77908134 78.81140137]
[12.32169151 79.97346497]
[-3.00215936 77.68318176]
[-17.43134689 72.05744171]
[-30.24987221 63.37870407]
[-40.82239532 52.08084488]
[-48.62571716 38.72745514]
[-53.27468491 23.98374748]
[-54.54118729 8.58339310]
[-52.36534500 -6.70797205]
[-46.85834503 -21.13081551]
[-38.29676437 -33.96943283]
[-27.10866165 -44.58747101]
[-34.83274841 -57.44587326]
[-42.55683136 -70.30427551]
[-50.28091812 -83.16268158]
[-65.67404175 -86.74419403]
[-73.95507050 -100.20525360]
[-70.21100616 -115.55965424]
[-56.66314697 -123.69789886]
[-41.34919357 -119.79170990]
[-33.35463715 -106.15856171]
[-37.42251587 -90.88676453]
[-29.69842911 -78.02835846]
[-21.97434425 -65.16996002]
[-14.25026035 -52.31155777]
[-0.49880657 -57.00757980]
[13.93622208 -58.72858429]
[28.41839600 -57.39612579]
[42.30866623 -53.06645584]
[54.99357605 -45.92812729]
[65.91234589 -36.29380035]
[74.58166504 -24.58654404]
[80.61708832 -11.32125664]
[83.75007629 2.91798019]
[83.83995056 17.50361633]
[80.88020325 31.79228973]
[74.99890900 45.15320969]
[66.45317078 56.99600220]
[55.61787033 66.79678345]
[63.07278061 79.81309509]
[97.51251984 64.10649109]
[123.98595428 82.19120026]
[137.88850403 76.55924225]
[151.79106140 70.92728424]
[161.67649841 58.57460403]
[176.37768555 60.96719360]
[186.26312256 48.61450958]
[200.96429443 51.00709915]
[214.86685181 45.37514114]
[228.76940918 39.74318314]
[242.67196655 34.11122894]
[241.83045959 18.99267769]
[245.94592285 4.42073059]
[254.57196045 -8.02395535]
[266.77288818 -16.99147415]
[281.22521973 -21.50909615]
[296.36126709 -21.08678436]
[310.53921509 -15.77034855]
[322.22113037 -6.13647461]
[330.13986206 6.76982641]
[333.43640137 21.54857635]
[331.75323486 36.59668350]
[325.27285767 50.28184891]
[314.69827271 61.11960220]
[301.17651367 67.93434143]
[286.17431641 69.98686981]
[271.31903076 67.05452728]
[258.22198486 59.45539856]
[248.30392456 48.01378250]
[234.40136719 53.64574051]
[220.49880981 59.27769852]
[206.59625244 64.90965271]
[197.70523071 76.85949707]
[182.00964355 74.86975098]
[173.11860657 86.81959534]
[157.42301941 84.82984161]
[143.52046204 90.46179962]
[129.61790466 96.09375763]
[130.04681396 113.46759033]
[120.22403717 129.75767517]
[101.73307037 138.99371338]
[79.52541351 136.76849365]
[79.21335602 151.76524353]
[78.90129852 166.76199341]
[88.15555573 182.64717102]
[78.56444550 197.31040955]
[78.56444550 212.31040955]
[78.56444550 227.31040955]
[78.56444550 242.31040955]
[78.56444550 257.31039429]
[78.56444550 272.31039429]
[78.56444550 287.31039429]
[78.56444550 302.31039429]
[78.56444550 317.31039429]
[78.56444550 332.31039429]
[78.56444550 347.31039429]
[93.10433197 351.37173462]
[106.00872040 359.20623779]
[116.31999969 370.23257446]
[123.27302551 383.63247681]
[126.35182190 398.41165161]
[125.32792664 413.47332764]
[120.27732849 427.69985962]
[111.57480621 440.03552246]
[99.86614227 449.56494141]
[86.02020264 455.58096313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[24 128]
[25 127]
[26 126]
[33 41]
[34 40]
[42 84]
[43 83]
[56 69]
[57 68]
[58 67]
[59 66]
[86 122]
[87 121]
[88 120]
[90 118]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
