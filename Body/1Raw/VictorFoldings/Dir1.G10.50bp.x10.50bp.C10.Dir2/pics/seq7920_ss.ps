%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:42:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCUACCCCCGGGGGGGGGGUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGAxxxxxxxxxxAGUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCCCCCCCCCCCUACCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.19527435 652.95233154]
[96.17333221 647.39929199]
[83.97337341 638.53295898]
[74.36230469 626.91064453]
[67.94427490 613.26293945]
[65.12274170 598.44775391]
[66.07505798 583.39636230]
[70.74136353 569.05499268]
[78.82833099 556.32501221]
[89.82760620 546.00671387]
[103.04776001 538.74877930]
[117.65777588 535.00732422]
[117.65777588 520.00732422]
[117.65777588 505.00732422]
[117.65777588 490.00732422]
[117.65777588 475.00732422]
[117.65777588 460.00732422]
[117.65777588 445.00732422]
[117.65777588 430.00732422]
[117.65777588 415.00732422]
[117.65777588 400.00732422]
[114.49320984 393.27697754]
[117.81493378 384.70013428]
[118.12290955 369.70330811]
[118.43088531 354.70645142]
[118.73886871 339.70962524]
[115.71315765 332.91571045]
[119.21027374 324.40890503]
[119.82610321 309.42153931]
[104.73197937 301.94696045]
[94.36541748 288.60174561]
[90.83344269 272.02011108]
[94.88795471 255.50172424]
[105.76628876 242.35502625]
[121.33411407 235.23466492]
[121.33411407 220.23466492]
[121.33411407 205.23466492]
[121.33411407 190.23466492]
[121.33411407 175.23466492]
[121.02613831 160.23782349]
[120.41031647 145.25047302]
[119.79448700 130.26312256]
[57.79534531 106.60082245]
[46.01320648 97.31744385]
[34.23107147 88.03405762]
[22.44893265 78.75067139]
[10.66679573 69.46728516]
[-1.11534095 60.18389893]
[-14.80514336 66.93312836]
[-30.06768608 67.06559753]
[-43.87258148 60.55501938]
[-53.47885132 48.69406509]
[-56.97917175 33.83773422]
[-53.67855072 18.93576622]
[-44.23232269 6.94695759]
[-30.51604843 0.25169301]
[-15.25310230 0.17932297]
[-1.47395360 6.74421644]
[8.08553696 18.64291000]
[11.52732658 33.51290894]
[8.16804504 48.40176010]
[19.95018196 57.68514633]
[31.73231888 66.96853638]
[43.51445770 76.25191498]
[55.29659271 85.53530121]
[67.07872772 94.81868744]
[81.06642914 89.39981842]
[95.05289459 83.98143768]
[97.50582123 69.18335724]
[99.95875549 54.38528061]
[102.41168213 39.58720016]
[88.97388458 32.63876343]
[78.34240723 21.87647247]
[71.55881500 8.35470963]
[69.28769684 -6.60180092]
[71.75154877 -21.52777290]
[78.70899200 -34.96091080]
[89.47840118 -45.58517075]
[103.00470734 -52.35970306]
[117.96273804 -54.62080002]
[132.88705444 -52.14694595]
[146.31552124 -45.18050385]
[156.93257141 -34.40397644]
[163.69802856 -20.87313461]
[165.94911194 -5.91359472]
[163.46525574 9.00906181]
[156.48982239 22.43286324]
[145.70617676 33.04268265]
[132.17080688 39.79907990]
[117.20976257 42.04013062]
[114.75682831 56.83820724]
[112.30390167 71.63629150]
[109.85097504 86.43436432]
[116.01661682 90.70459747]
[128.34790039 99.24505615]
[134.51354980 103.51528168]
[147.50392151 96.01528168]
[160.49430847 88.51528168]
[173.48468018 81.01528168]
[179.00909424 65.95339966]
[194.27430725 61.01852798]
[207.57015991 69.99628448]
[208.69718933 85.99970245]
[196.79086304 96.75232697]
[180.98468018 94.00566864]
[167.99430847 101.50566864]
[155.00392151 109.00566864]
[142.01354980 116.50566864]
[134.78184509 129.64729309]
[135.39765930 144.63464355]
[136.01348877 159.62200928]
[139.27185059 165.48934937]
[139.06233215 171.24642944]
[136.33412170 175.23466492]
[136.33412170 190.23466492]
[136.33412170 205.23466492]
[136.33412170 220.23466492]
[136.33412170 235.23466492]
[148.67832947 240.13113403]
[158.58715820 248.92430115]
[164.88591003 260.54251099]
[166.83784485 273.58096313]
[164.23033142 286.47158813]
[157.39773560 297.67163086]
[147.17874146 305.84832764]
[134.81346130 310.03735352]
[134.19763184 325.02471924]
[133.73570251 340.01760864]
[133.42771912 355.01443481]
[133.11975098 370.01129150]
[132.81176758 385.00811768]
[132.65777588 400.00732422]
[132.65777588 415.00732422]
[132.65777588 430.00732422]
[132.65777588 445.00732422]
[132.65777588 460.00732422]
[132.65777588 475.00732422]
[132.65777588 490.00732422]
[132.65777588 505.00732422]
[132.65777588 520.00732422]
[132.65777588 535.00732422]
[147.26779175 538.74877930]
[160.48794556 546.00671387]
[171.48721313 556.32501221]
[179.57418823 569.05499268]
[184.24049377 583.39636230]
[185.19281006 598.44775391]
[182.37127686 613.26293945]
[175.95324707 626.91064453]
[166.34217834 638.53295898]
[154.14221191 647.39929199]
[140.12026978 652.95233154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[23 131]
[24 130]
[25 129]
[26 128]
[28 127]
[29 126]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 111]
[41 110]
[42 109]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[68 93]
[69 92]
[70 91]
[71 90]
[96 108]
[97 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
